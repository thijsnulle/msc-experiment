{"outputs": [{"text": "# Creating a stopwords list from nltk\n    stopwords = set(stopwords.words(\"english\"))\n    stopwords.add(\"\")\n\n    # Removing the stopwords from the text\n    text_cleaned = re.sub(r'\\W+', ' ', text)\n    text_cleaned = re.sub(r'\\d', ' ', text_cleaned)\n    text_cleaned = re.sub(r'\\s+', ' ', text_cleaned)\n    text_cleaned = \" \".join(word.lower() for word in text_cleaned.split())\n\n    # Splitting the text into words\n    words = [word for word in text_cleaned.split()]\n    word_counts = Counter(words)\n\n    # Filtering the stopwords from word_counts\n    word_counts = {word: count for word, count in word_counts.items() if word not in stopwords}\n\n    # Filtering the words that are less than n-grams\n    word_counts = {word: count for word, count in word_counts.items() if count >= n}\n", "tokens": ["#", " Creating", " a", " stop", "words", " list", " from", " n", "lt", "k", "\n", "    ", "stop", "words", " =", " set", "(", "stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", "))", "\n", "    ", "stop", "words", ".", "add", "(", "\"", "\"", ")", "\n", "\n", "    ", "#", " Rem", "oving", " the", " stop", "words", " from", " the", " text", "\n", "    ", "text", "_", "cleaned", " =", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n", "    ", "text", "_", "cleaned", " =", " re", ".", "sub", "(", "r", "'\\", "d", "'", ",", " '", " '", ",", " text", "_", "cleaned", ")", "\n", "    ", "text", "_", "cleaned", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", "_", "cleaned", ")", "\n", "    ", "text", "_", "cleaned", " =", " \"", " \"", ".", "join", "(", "word", ".", "lower", "()", " for", " word", " in", " text", "_", "cleaned", ".", "split", "())", "\n", "\n", "    ", "#", " Split", "ting", " the", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", "_", "cleaned", ".", "split", "()", "]", "\n", "    ", "word", "_", "counts", " =", " Counter", "(", "words", ")", "\n", "\n", "    ", "#", " Filter", "ing", " the", " stop", "words", " from", " word", "_", "counts", "\n", "    ", "word", "_", "counts", " =", " {", "word", ":", " count", " for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "()", " if", " word", " not", " in", " stop", "words", "}", "\n", "\n", "    ", "#", " Filter", "ing", " the", " words", " that", " are", " less", " than", " n", "-", "grams", "\n", "    ", "word", "_", "counts", " =", " {", "word", ":", " count", " for", " word", ",", " count", " in", " word", "_", "counts", ".", "items", "()", " if", " count", " >=", " n", "}", "\n"], "logprobs": [-0.5225899815559387, -3.0538034439086914, -1.0145645141601562, -2.1594226360321045, -1.1398577690124512, -0.16158297657966614, -2.5109643936157227, -0.6337211728096008, -0.013479409739375114, -0.0003667397249955684, -1.1209663152694702, -0.002994103590026498, -0.2854914665222168, -1.0501610040664673, -1.3689820766448975, -0.2904021739959717, -0.00040987672400660813, -0.015615452080965042, -0.00015853578224778175, -0.0006980843027122319, -0.00485716899856925, -0.8467502593994141, -0.0023261650931090117, -0.0319293849170208, -3.099436753473128e-06, -7.4741430580616e-05, -0.003153829136863351, -0.0069340309128165245, -1.19398832321167, -2.53902006149292, -0.044111065566539764, -0.23797190189361572, -0.8055530786514282, -0.21965694427490234, -0.005550805013626814, -1.751521348953247, -0.0027638589963316917, -0.0520496591925621, -0.7388591170310974, -0.0009216589969582856, -0.06287511438131332, -1.553195834159851, -0.011232473887503147, -1.9249136447906494, -1.5902708768844604, -0.03782472386956215, -0.9149657487869263, -0.034830112010240555, -0.3524019718170166, -0.4232569932937622, -0.00058466981863603, -0.9475893974304199, -1.332803726196289, -3.5811474323272705, -0.0056862980127334595, -1.892508864402771, -5.2569914259947836e-05, -0.12915469706058502, -0.061604853719472885, -0.3458614647388458, -0.42320895195007324, -1.3685150146484375, -0.18315213918685913, -0.00013767725613433868, -0.06650906056165695, -0.0029415693134069443, -0.0002531684876885265, -0.020092641934752464, -0.04835576191544533, -0.7131853699684143, -0.03356808051466942, -0.7258555293083191, -0.03508589416742325, -0.17978090047836304, -0.028270484879612923, -1.2746282815933228, -0.000498289882671088, -0.00974917970597744, -0.130239799618721, -0.06318437308073044, -0.15420305728912354, -2.5481374263763428, -2.3878324031829834, -0.00022980909852776676, -0.3444923162460327, -0.010025149211287498, -0.00011181206355104223, -0.001303895260207355, -0.011236128397285938, -8.296622399939224e-05, -0.005350436549633741, -0.011689028702676296, -0.10003024339675903, -0.24348250031471252, -0.03418126329779625, -0.06441440433263779, -0.012375706806778908, -0.6569651961326599, -0.0005747812101617455, -0.011794828809797764, -0.05618118867278099, -0.0169516671448946, -0.15383200347423553, -0.06545423716306686, -0.21711786091327667, -5.98412734689191e-05, -0.00797516293823719, -0.003278121817857027, -8.320462075062096e-05, -0.0007574073388241231, -0.00101383775472641, -6.222531374078244e-05, -0.015481649897992611, -0.006565902382135391, -0.3097565770149231, -0.28991246223449707, -0.05989687144756317, -0.12501491606235504, -0.022878497838974, -2.146468162536621, -0.09536796063184738, -0.01909586787223816, -0.0002859421947505325, -0.21071985363960266, -2.6936302185058594, -2.2471072673797607, -0.062346260994672775, -0.0001411338453181088, -0.017611317336559296, -0.00011085849109804258, -0.0005042473785579205, -0.007165447808802128, -0.002530826721340418, -0.00014900050882715732, -0.0006989181856624782, -0.030387340113520622, -0.604224681854248, -0.022495446726679802, -0.94432133436203, -0.000336590368533507, -0.060134537518024445, -1.1936063766479492, -0.08427786827087402, -0.0741463229060173, -0.16099262237548828, -0.10391907393932343, -0.5350568890571594, -0.3415548801422119, -0.0005316513124853373, -0.20228728652000427, -0.04971294105052948, -2.207486867904663, -0.060069430619478226, -0.41512754559516907, -0.00048387263086624444, -0.00024172721896320581, -0.06429994106292725, -0.0010962436208501458, -0.00026472879108041525, -0.0004078510100953281, -0.0066811274737119675, -0.07492992281913757, -1.4279848337173462, -0.0010419422760605812, -2.301954984664917, -2.8556790351867676, -0.0432063490152359, -1.3085155487060547, -0.010722522623836994, -0.9352694749832153, -0.0008936702506616712, -0.004125418607145548, -0.0003543464408721775, -0.08429069072008133, -0.37180912494659424, -0.0006002769805490971, -0.040212832391262054, -2.9728498458862305, -0.020164845511317253, -1.367864727973938, -3.680510997772217, -0.020492032170295715, -1.2483837604522705, -2.452291250228882, -0.4419476389884949, -0.007703004404902458, -0.20115405321121216, -0.0009882333688437939, -0.3566085398197174, -0.0026468741707503796, -0.023273399099707603, -0.7924729585647583, -0.08193264156579971, -0.11444767564535141, -0.0045541380532085896, -0.07078000158071518, -0.004011679906398058, -0.011912279762327671, -0.0017626238986849785, -0.001693839905783534, -0.00016437610611319542, -0.002597531769424677, -5.364403477869928e-06, -1.4543427823809907e-05, -7.199982064776123e-05, -0.006108305882662535, -0.0004894727608188987, -0.014800508506596088, -0.028021762147545815, -0.06693582981824875, -9.798523387871683e-05, -0.0022658645175397396, -2.6940935640595853e-05, -0.0684250220656395, -0.0004744596080854535, -0.08565153926610947, -0.0008055302896536887, -0.039384230971336365, -3.1559038162231445, -0.010938561521470547, -0.49614429473876953, -1.1443040370941162, -1.5330954790115356, -1.1631540060043335, -1.8909991979599, -0.016530342400074005, -0.43634411692619324, -1.1454845666885376, -0.48385924100875854, -0.6908001899719238, -0.0010187203297391534, -0.4585617780685425, -0.0021585754584521055, -0.017964044585824013, -0.10543233901262283, -0.0173464547842741, -0.016104616224765778, -0.002316531492397189, -0.006507278420031071, -0.0005738280597142875, -0.0006192197324708104, -0.0005129451747052372, -0.0004599228559527546, -9.929640509653836e-05, -0.000912369170691818, -9.179073458653875e-06, -1.490105023549404e-05, -2.2649508537142538e-05, -5.149708886165172e-05, -0.00021801002731081098, -0.0015595904551446438, -2.181114673614502, -0.17610222101211548, -0.05946091189980507, -0.04748272895812988, -0.000668659748043865], "finish_reason": "length"}], "metrics": {"energy": 325.2854061164858, "energy_per_token": 1.2706461176425226, "time": 12.409131, "time_per_token": 0.04847316796875}}
{"outputs": [{"text": "stop_words = set(stopwords.words('english'))\n    words = re.split(r'\\W+', text)\n    words = [word.lower() for word in words if word.lower() not in stop_words]\n    n_gram_mat = np.zeros((len(words), len(words)))\n    for i in range(len(words)):\n        for j in range(len(words)):\n            if i != j:\n                n_gram_mat[i, j] = get_n_gram(words, i, j, n)\n    df = pd.DataFrame(n_gram_mat)\n    ax = plt.imshow(df, cmap='Blues', interpolation='nearest')\n    return df, ax", "tokens": ["stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "words", " =", " re", ".", "split", "(", "r", "'\\", "W", "+'", ",", " text", ")", "\n", "    ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " stop", "_", "words", "]", "\n", "    ", "n", "_", "gram", "_", "mat", " =", " np", ".", "zeros", "((", "len", "(", "words", ")", ",", " len", "(", "words", ")))", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", "))", ":", "\n", "        ", "for", " j", " in", " range", "(", "len", "(", "words", "))", ":", "\n", "            ", "if", " i", " ", "!", "=", " j", ":", "\n", "                ", "n", "_", "gram", "_", "mat", "[", "i", ",", " j", "]", " =", " get", "_", "n", "_", "gram", "(", "words", ",", " i", ",", " j", ",", " n", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "n", "_", "gram", "_", "mat", ")", "\n", "    ", "ax", " =", " plt", ".", "im", "show", "(", "df", ",", " c", "map", "='", "Bl", "ues", "'", ",", " interpolation", "='", "ne", "arest", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.664992332458496, -0.5743967294692993, -0.05162067711353302, -0.0269659124314785, -0.15053021907806396, -0.00035470392322167754, -0.009618368931114674, -7.295342220459133e-05, -0.000580499938223511, -0.0025835013948380947, -0.6275932788848877, -0.014913261868059635, -7.748573807475623e-06, -0.004049910698086023, -0.031889550387859344, -0.22442656755447388, -1.468454122543335, -0.10123789310455322, -0.44110968708992004, -8.594620157964528e-05, -2.879154682159424, -0.43831273913383484, -0.3427105247974396, -0.5105606913566589, -0.4745245575904846, -0.2973826825618744, -0.00022301571152638644, -0.010870995931327343, -0.15331733226776123, -0.031433578580617905, -0.16334637999534607, -0.9274109601974487, -0.07754459232091904, -0.04778734967112541, -0.29671961069107056, -0.4694021940231323, -0.059041280299425125, -0.00022384998737834394, -0.012494619935750961, -0.00026246439665555954, -0.0001380348257953301, -0.002932417206466198, -0.08939360827207565, -0.17252933979034424, -0.7475108504295349, -0.96315997838974, -0.0013188959565013647, -0.013576670549809933, -5.209310256759636e-05, -0.0016138636274263263, -0.0005919373361393809, -1.0967194612021558e-05, -0.23384930193424225, -0.012101445347070694, -0.36582982540130615, -2.5027313232421875, -0.046336736530065536, -0.7898056507110596, -0.5471290946006775, -4.583766937255859, -0.08018919825553894, -1.4029841423034668, -6.878139538457617e-05, -0.07588905841112137, -0.19213330745697021, -0.03283466771245003, -5.1377883210079744e-05, -0.002580647822469473, -0.03427031263709068, -0.021350663155317307, -0.010577213019132614, -4.2199197196168825e-05, -0.00040880427695810795, -0.1966855823993683, -0.03144339844584465, -0.27219417691230774, -0.20280452072620392, -0.1067521944642067, -0.20169135928153992, -0.0021569100208580494, -0.000759074988309294, -0.14387302100658417, -1.7046782886609435e-05, -0.0024373605847358704, -0.09993910044431686, -0.00012027494085486978, -0.004420746583491564, -0.0026865839026868343, -0.1289670467376709, -0.0034512262791395187, -0.0003250309091527015, -0.0005494038923643529, -0.0010780243901535869, -1.3783965110778809, -2.6940935640595853e-05, -0.0001062098381225951, -0.0050568063743412495, -0.0015207880642265081, -0.00034814971149899065, -0.003062798175960779, -0.1936301738023758, -0.37401899695396423, -2.253690242767334, -8.702239938429557e-06, -2.9801878554280847e-05, -0.0028421981260180473, -0.22915324568748474, -0.013864400796592236, -0.0014817459741607308, -1.3884546756744385, -0.012911882251501083, -0.04401547461748123, -0.2354317456483841, -0.0117849325761199, -0.007859496399760246, -0.00901450403034687, -0.21118073165416718, -0.037565622478723526, -0.002174158114939928, -0.11968645453453064, -3.8606271743774414, -0.018127601593732834, -1.201922059059143, -0.014566857367753983, -0.195185124874115, -0.7269429564476013, -0.12988245487213135, -0.6980871558189392, -0.7336063981056213, -0.11372487246990204, -0.02685253694653511, -0.03604639694094658, -0.00872005708515644, -0.2132493108510971, -0.004659509286284447, -0.3184505105018616, -0.4426845908164978, -0.022637171670794487, -0.003775850171223283, -0.002362795639783144, -0.0014784131199121475, -0.0028933114372193813, -0.0839037150144577, -0.0005379660287871957, -1.585470999998506e-05, -1.7881377516459906e-06, -5.364403477869928e-06, -0.42213109135627747, -0.023311715573072433, -0.041453469544649124, -0.9179524779319763, -0.012811142951250076, -0.26824501156806946, -0.00015507926582358778, -1.2952831983566284, -0.00012814177898690104, -0.0018647201359272003, -0.09374570846557617, -0.7234510183334351, -0.15996752679347992, -0.0013715155655518174, -0.19287297129631042, -1.679683804512024, -0.003501951927319169, -1.064054012298584, -0.017308024689555168, -0.5807117819786072, -0.028176959604024887, -0.11307980865240097, -0.0004976941272616386, -0.2721622884273529, -0.0065794032998383045, -0.037841252982616425, -0.4108060300350189, -0.09413149952888489, -0.0034740353003144264, -0.003702928777784109, -0.017597846686840057, -0.0070032840594649315, -0.028056420385837555], "finish_reason": "stop"}], "metrics": {"energy": 195.81820682907116, "energy_per_token": 1.087878926828173, "time": 7.9911895, "time_per_token": 0.04439549722222222}}
{"outputs": [{"text": "# Extracting the words from the text\n    words = re.findall(r\"\\w+\", text)\n\n    # Creating a list of n-grams\n    ngrams = [words[i:i + n] for i in range(len(words) - n + 1)]\n\n    # Removing duplicate consecutive words\n    unique_words = []\n    for word in words:\n        if word not in unique_words:\n            unique_words.append(word)\n\n    # Converting words to lowercase\n    unique_words = [word.lower() for word in unique_words]\n\n    # Converting words to lowercase\n    ngrams = [[word.lower() for word in ngram] for ngram in ngrams]\n\n    # Getting a list of stop words\n    stop_words = stopwords.words('english')\n\n    # Removing stop words from words\n    for word in words:\n        if word in stop_words:\n            words.remove(word)\n\n    # Converting words to lowercase\n    unique_words = [word.lower() for word in words]\n\n", "tokens": ["#", " Ext", "racting", " the", " words", " from", " the", " text", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Creating", " a", " list", " of", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "words", "[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Rem", "oving", " duplicate", " consecutive", " words", "\n", "    ", "unique", "_", "words", " =", " []", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "if", " word", " not", " in", " unique", "_", "words", ":", "\n", "            ", "unique", "_", "words", ".", "append", "(", "word", ")", "\n", "\n", "    ", "#", " Con", "verting", " words", " to", " lower", "case", "\n", "    ", "unique", "_", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " unique", "_", "words", "]", "\n", "\n", "    ", "#", " Con", "verting", " words", " to", " lower", "case", "\n", "    ", "ng", "rams", " =", " [[", "word", ".", "lower", "()", " for", " word", " in", " n", "gram", "]", " for", " n", "gram", " in", " n", "grams", "]", "\n", "\n", "    ", "#", " Getting", " a", " list", " of", " stop", " words", "\n", "    ", "stop", "_", "words", " =", " stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Rem", "oving", " stop", " words", " from", " words", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "if", " word", " in", " stop", "_", "words", ":", "\n", "            ", "words", ".", "remove", "(", "word", ")", "\n", "\n", "    ", "#", " Con", "verting", " words", " to", " lower", "case", "\n", "    ", "unique", "_", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n", "\n"], "logprobs": [-0.4650316834449768, -4.125899314880371, -0.17430871725082397, -0.6285237073898315, -0.9337788224220276, -0.541100025177002, -0.039666350930929184, -0.4483412802219391, -0.7516021132469177, -0.003824302926659584, -0.19040599465370178, -0.04744305461645126, -0.2091907262802124, -4.708655978902243e-05, -0.09064856171607971, -0.00019977481861133128, -0.036786533892154694, -0.04000142216682434, -1.6877249479293823, -0.14330755174160004, -0.3055276870727539, -0.3769529163837433, -0.013366024009883404, -8.308542601298541e-05, -0.010999874211847782, -0.15873289108276367, -0.005092862527817488, -0.2307092547416687, -0.0005292683490552008, -0.015361330471932888, -2.185096263885498, -0.46794891357421875, -1.5100582838058472, -0.07311426848173141, -1.4134453535079956, -0.11044584959745407, -0.06439752131700516, -1.0288316011428833, -0.0005371319712139666, -0.4076603651046753, -0.013341204263269901, -0.03196471557021141, -0.357848197221756, -0.7344234585762024, -0.0004974558250978589, -0.004932734649628401, -0.15754234790802002, -0.07591955363750458, -0.8317084312438965, -0.002263485686853528, -0.0004950728034600616, -0.010927713476121426, -6.329813186312094e-05, -0.00039200251922011375, -0.0004275123355910182, -0.0001445904199499637, -0.023440631106495857, -1.4781842764932662e-05, -0.0008467426523566246, -0.037056293338537216, -0.0008966478053480387, -0.11543445289134979, -0.058254797011613846, -0.000350175570929423, -8.630380034446716e-05, -0.0023104657884687185, -0.0020559143740683794, -0.03882044181227684, -0.00046850196667946875, -0.01048355270177126, -1.1835989952087402, -0.0021531034726649523, -0.5777478814125061, -1.3285582065582275, -0.028289025649428368, -0.7786435484886169, -0.0011312521528452635, -1.3400099277496338, -0.007533119060099125, -1.503720760345459, -0.014195299707353115, -0.8558400273323059, -0.0014971011551097035, -0.014082465320825577, -0.16328410804271698, -1.0488076210021973, -0.05560187250375748, -0.1639690399169922, -0.0008298290777020156, -0.000259365770034492, -0.003124239156022668, -0.005343677941709757, -0.4532586634159088, -0.005975122097879648, -7.271740287251305e-06, -0.0016230279579758644, -9.524368942948058e-05, -9.536697689327411e-06, -0.1745183914899826, -0.0012760362587869167, -0.00035255891270935535, -0.0005989664932712913, -1.5497195136049413e-06, -2.2172682292875834e-05, -0.000977276940830052, -0.0005523824947886169, -0.0001746263587847352, -0.0003474347176961601, -0.00015627116954419762, -0.0001565095444675535, -0.05859583988785744, -0.003310083644464612, -0.133358895778656, -3.093942165374756, -0.025270093232393265, -1.2282752990722656, -0.41595664620399475, -0.3229828476905823, -0.14654035866260529, -0.2843327820301056, -0.0013135385233908892, -0.9945003986358643, -0.0001567479339428246, -0.02420632913708687, -0.10922480374574661, -0.04160705581307411, -0.12535780668258667, -0.0006250573205761611, -0.0005903884884901345, -3.814624506048858e-05, -0.001211386057548225, -4.386805812828243e-05, -1.645074735279195e-05, -0.003778225276619196, -4.088794958079234e-05, -5.8412379075889476e-06, -0.0011439929949119687, -0.00017021637177094817, -0.03855162113904953, -0.0009107018122449517, -0.045300401747226715, -3.4829769134521484, -0.011117419227957726, -0.4414699077606201, -0.1239371970295906, -0.78548663854599, -0.008926722221076488, -0.39547988772392273, -0.0021031422074884176, -1.261991024017334, -0.0014461545506492257, -0.03853946179151535, -0.8459367752075195, -0.09762970358133316, -0.007568021304905415, -0.0004226268210913986, -6.758938252460212e-05, -0.004594840109348297, -0.00018356545479036868, -4.100715523236431e-05, -0.2613318860530853, -0.10022222250699997, -0.01143343560397625, -0.007863043807446957, -7.116541382856667e-05, -6.16293036728166e-05, -6.842378934379667e-05, -0.0005899119423702359, -0.0001919085334520787, -0.001563994330354035, -0.0002470903273206204, -0.022343793883919716, -0.0010411086259409785, -0.039911165833473206, -4.417141914367676, -2.3831300735473633, -0.7165818810462952, -0.007005651481449604, -0.3853055536746979, -2.6306333541870117, -0.37853574752807617, -0.0007682471186853945, -0.09000183641910553, -0.29201430082321167, -0.009138424880802631, -0.008772761560976505, -0.7839590311050415, -3.611976353568025e-05, -0.0006971312686800957, -0.0055287545546889305, -0.8924700021743774, -0.02761748433113098, -4.172316494077677e-06, -0.00022539935889653862, -0.020510250702500343, -0.23775021731853485, -0.00037043384509161115, -0.015393143519759178, -0.4792128801345825, -0.0009314250783063471, -0.07665771245956421, -0.3716851770877838, -0.8685142993927002, -1.744837760925293, -1.0247740745544434, -0.0006294653285294771, -3.05678391456604, -0.25587260723114014, -0.0006299418746493757, -2.0868377685546875, -0.01222298201173544, -0.00013684290752280504, -0.0009273757459595799, -0.0029513156041502953, -0.0031774768140167, -0.0816449522972107, -0.004998093470931053, -0.009549533016979694, -1.5020257706055418e-05, -0.004701868165284395, -0.0007367995567619801, -0.0007414452848024666, -1.3419585227966309, -0.0027042983565479517, -0.0026138208340853453, -0.00013386306818574667, -0.0006721144891344011, -0.000200609109015204, -0.00168658047914505, -0.04269680008292198, -0.002294528530910611, -0.042515963315963745, -1.6295329332351685, -0.005772467702627182, -0.14919443428516388, -0.05256328731775284, -0.02483656071126461, -0.00499916123226285, -0.028913911432027817, -0.0007905219099484384, -1.8871344327926636, -0.0001012035645544529, -0.003965491894632578, -0.011447460390627384, -0.021379951387643814, -0.0031179406214505434, -0.026614371687173843, -0.0003250309091527015, -0.00023827097902540118, -0.0002109781780745834, -7.414542778860778e-05, -1.168244216387393e-05, -1.3220009803771973, -0.025142807513475418, -0.0023849159479141235, -0.13191230595111847], "finish_reason": "length"}], "metrics": {"energy": 295.57275703239435, "energy_per_token": 1.1545810821577904, "time": 11.362115, "time_per_token": 0.04438326171875}}
{"outputs": [{"text": "# Remove duplicate consecutive words and stopwords\n    text = \" \".join(re.findall(r\"\\b(\\S+)\\s*\", text))\n    # Get n-grams\n    n_grams = [text[i:i + n] for i in range(len(text) - n + 1)]\n    # Create count vectorizer\n    vectorizer = CountVectorizer(analyzer=\"char_wb\")\n    # Count occurrences of n-grams\n    count_matrix = vectorizer.fit_transform(n_grams)\n    # Get number of columns\n    num_cols = count_matrix.shape[1]\n\n    # Initialize empty dataframe with zeros\n    df = pd.DataFrame(\n        np.zeros((len(n_grams), num_cols)),\n        columns=vectorizer.get_feature_names(),\n        index=n_grams\n    )\n\n    # Fill in count values into the dataframe\n    for i in range(len(n_grams)):\n        for j in range(i+1, len(n_grams)):\n            df.loc[n", "tokens": ["#", " Remove", " duplicate", " consecutive", " words", " and", " stop", "words", "\n", "    ", "text", " =", " \"", " \"", ".", "join", "(", "re", ".", "find", "all", "(", "r", "\"", "\\", "b", "(\\", "S", "+", ")\\", "s", "*", "\"", ",", " text", "))", "\n", "    ", "#", " Get", " n", "-", "grams", "\n", "    ", "n", "_", "grams", " =", " [", "text", "[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "text", ")", " -", " n", " +", " ", "1", ")]", "\n", "    ", "#", " Create", " count", " vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "analy", "zer", "=", "\"", "char", "_", "wb", "\"", ")", "\n", "    ", "#", " Count", " occurrences", " of", " n", "-", "grams", "\n", "    ", "count", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "n", "_", "grams", ")", "\n", "    ", "#", " Get", " number", " of", " columns", "\n", "    ", "num", "_", "cols", " =", " count", "_", "matrix", ".", "shape", "[", "1", "]", "\n", "\n", "    ", "#", " Initialize", " empty", " data", "frame", " with", " zeros", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "np", ".", "zeros", "((", "len", "(", "n", "_", "grams", ")", ",", " num", "_", "cols", "))", ",", "\n", "        ", "columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", "\n", "        ", "index", "=", "n", "_", "grams", "\n", "    ", ")", "\n", "\n", "    ", "#", " Fill", " in", " count", " values", " into", " the", " data", "frame", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "n", "_", "grams", "))", ":", "\n", "        ", "for", " j", " in", " range", "(", "i", "+", "1", ",", " len", "(", "n", "_", "grams", "))", ":", "\n", "            ", "df", ".", "loc", "[", "n"], "logprobs": [-0.4650316834449768, -2.81589674949646, -0.9016917943954468, -0.4367099106311798, -0.027209794148802757, -0.8136002421379089, -0.14968392252922058, -0.006161977536976337, -0.8338669538497925, -0.0034401779994368553, -1.0826764106750488, -0.12650755047798157, -1.2199406623840332, -0.01753447763621807, -0.0002008474839385599, -0.00023469554434996098, -0.23572543263435364, -0.19255906343460083, -0.00020752183627337217, -0.32894834876060486, -4.8636207793606445e-05, -0.014627243392169476, -0.10231311619281769, -0.8564872741699219, -0.35832449793815613, -0.6855729818344116, -2.948094129562378, -1.4768500328063965, -0.3734106123447418, -0.44088757038116455, -1.2444162368774414, -0.7304148077964783, -0.12325768917798996, -0.025068406015634537, -0.027550339698791504, -0.2749614417552948, -0.04850613325834274, -0.8999375104904175, -0.7955932021141052, -4.465074062347412, -2.183987617492676, -0.25368767976760864, -0.09150812029838562, -0.8535791635513306, -0.0014160377904772758, -1.4883785247802734, -0.049794718623161316, -0.18370704352855682, -0.00807579979300499, -0.5151267051696777, -0.34470507502555847, -0.014910443685948849, -0.028325993567705154, -0.14929936826229095, -0.06988409906625748, -0.6549152731895447, -0.0052475095726549625, -0.0016289787599816918, -0.04875798895955086, -0.0004981707315891981, -0.0006760457181371748, -0.0010762381134554744, -0.00025293012731708586, -0.06908618658781052, -2.0265373677830212e-05, -0.00040928093949332833, -0.08298756927251816, -0.0030214395374059677, -0.08438020944595337, -0.06303171068429947, -0.0006895071710459888, -0.0004664763400796801, -0.010929246433079243, -0.0010171722387894988, -0.11762545257806778, -0.050864703953266144, -1.6164065599441528, -2.4720284938812256, -0.39561375975608826, -0.22724802792072296, -0.444244384765625, -0.0006424508756026626, -1.0237751007080078, -0.005680015776306391, -0.0008568667690269649, -0.00018499570433050394, -7.510157047363464e-06, -0.000105375460407231, -0.3141176104545593, -0.4922533929347992, -0.028836429119110107, -0.556302547454834, -0.012659309431910515, -1.735303521156311, -1.316609263420105, -0.6016509532928467, -0.00026008085114881396, -1.6772810220718384, -0.014516337774693966, -0.012526994571089745, -0.07566969841718674, -2.18350887298584, -1.797075867652893, -0.14006373286247253, -0.30493319034576416, -0.034305330365896225, -0.011689264327287674, -0.31658685207366943, -0.0002008474839385599, -1.7905824184417725, -0.25489377975463867, -0.1556997150182724, -0.0038241841830313206, -0.02057436667382717, -2.2411095415009186e-05, -2.5629668016335927e-05, -0.00342105096206069, -0.002154530957341194, -3.957670196541585e-05, -0.029718132689595222, -0.009173625148832798, -3.266281055402942e-05, -4.756337511935271e-05, -0.001091599464416504, -0.5941462516784668, -0.08130399137735367, -0.0935073271393776, -1.6016932725906372, -3.564728021621704, -0.002072688192129135, -2.206895112991333, -1.1732192039489746, -0.00020168177434243262, -0.9135118722915649, -0.008588284254074097, -0.34941041469573975, -0.0011956692906096578, -0.28625431656837463, -3.9934315282152966e-05, -0.00010907054820563644, -7.92710343375802e-05, -0.2364731878042221, -0.0014549632323905826, -0.014598695561289787, -0.00022218143567442894, -0.007857249118387699, -2.4530692100524902, -0.0012980615720152855, -0.11930997669696808, -2.851411819458008, -1.3589951992034912, -1.6887176036834717, -0.5812207460403442, -2.9763073921203613, -3.292029857635498, -0.1307831108570099, -0.00046754872892051935, -0.24816863238811493, -0.028879282996058464, -0.28977999091148376, -0.002142635639756918, -0.0035833215806633234, -0.018804609775543213, -3.2854275703430176, -0.004143700934946537, -0.21394754946231842, -1.0609570381348021e-05, -0.0040144105441868305, -0.15452086925506592, -1.0506763458251953, -0.00011777184408856556, -0.23154842853546143, -0.00018380382971372455, -2.312633478140924e-05, -0.00217760750092566, -0.004577277693897486, -0.04585815966129303, -1.883488948806189e-05, -3.0636318115284666e-05, -0.3796888589859009, -0.06262633949518204, -0.1766272783279419, -0.0029974314384162426, -0.9923373460769653, -0.79088294506073, -0.22553707659244537, -5.722029527532868e-06, -2.312633478140924e-05, -0.01564725674688816, -4.410734163684538e-06, -0.00012778419477399439, -2.3841855067985307e-07, -0.002823059679940343, -0.3210885524749756, -0.45755764842033386, -0.008349156938493252, -0.22416241466999054, -0.0501880906522274, -0.08452054858207703, -0.3350446820259094, -0.00013565097469836473, -1.3708974620385561e-05, -0.3072614371776581, -0.00916464813053608, -8.797258487902582e-05, -0.00854230672121048, -0.38726523518562317, -0.000485183292767033, -0.11184055358171463, -1.299739122390747, -1.0687000751495361, -2.673482894897461, -1.1386977434158325, -2.2770729064941406, -0.9957561492919922, -0.11621247977018356, -0.004598874598741531, -0.025061314925551414, -0.00031454383861273527, -0.21113593876361847, -0.3859180212020874, -0.3223435580730438, -0.003390162019059062, -0.0001062098381225951, -0.9557406902313232, -1.8954096958623268e-05, -0.08945683389902115, -0.000393432448618114, -5.245195097813848e-06, -0.02434990555047989, -5.769562994828448e-05, -0.0009152276325039566, -0.0004987664869986475, -1.0229589939117432, -0.08895505219697952, -0.026307182386517525, -0.00421623419970274, -0.0001879753835964948, -2.8490848541259766, -2.4649131298065186, -0.006699718534946442, -0.008475997485220432, -0.05387410894036293, -3.4450891689630225e-05, -0.0026406915858387947, -9.417489309271332e-06, -9.65590606938349e-06, -0.029070591554045677, -0.00043406602344475687, -0.004340869374573231, -0.004971048794686794, -2.275691509246826, -0.04870178550481796, -0.8362085819244385, -0.003214670345187187, -0.1929285079240799], "finish_reason": "length"}], "metrics": {"energy": 256.7801337938307, "energy_per_token": 1.0030473976321512, "time": 11.35523, "time_per_token": 0.0443563671875}}
{"outputs": [{"text": "# Splitting the text into words\n    words = re.findall(r'\\b\\w+\\b', text.lower())\n\n    # Removing stopwords and duplicates\n    words = [w for w in words if w not in stopwords.words('english')]\n    words = set([tuple(w.split()) for w in words])\n\n    # Generating a square co-occurrence matrix\n    matrix = np.zeros((len(words), len(words)), dtype=int)\n    for i, word1 in enumerate(words):\n        for j, word2 in enumerate(words):\n            if word1 != word2 and word1[-n:] == word2[:n]:\n                matrix[i, j] += 1\n\n    # Plotting the co-occurrence matrix\n    ax = plt.imshow(matrix, interpolation='nearest', cmap='Blues')\n    ax.set_xticks(range(len(words)))\n    ax.set_yticks(range(len(words)))\n    ax.set_xticklabels(words)\n    ax.set", "tokens": ["#", " Split", "ting", " the", " text", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Rem", "oving", " stop", "words", " and", " dup", "licates", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " stop", "words", ".", "words", "('", "eng", "lish", "')", "]", "\n", "    ", "words", " =", " set", "([", "tuple", "(", "w", ".", "split", "())", " for", " w", " in", " words", "])", "\n", "\n", "    ", "#", " Gener", "ating", " a", " square", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "words", ")", ",", " len", "(", "words", "))", ",", " dtype", "=", "int", ")", "\n", "    ", "for", " i", ",", " word", "1", " in", " enumerate", "(", "words", "):", "\n", "        ", "for", " j", ",", " word", "2", " in", " enumerate", "(", "words", "):", "\n", "            ", "if", " word", "1", " ", "!", "=", " word", "2", " and", " word", "1", "[-", "n", ":]", " ==", " word", "2", "[:", "n", "]:", "\n", "                ", "matrix", "[", "i", ",", " j", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Plot", "ting", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "ax", " =", " plt", ".", "im", "show", "(", "matrix", ",", " interpolation", "='", "ne", "arest", "'", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "ax", ".", "set", "_", "xt", "icks", "(", "range", "(", "len", "(", "words", ")))", "\n", "    ", "ax", ".", "set", "_", "yt", "icks", "(", "range", "(", "len", "(", "words", ")))", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "words", ")", "\n", "    ", "ax", ".", "set"], "logprobs": [-0.4650316834449768, -2.976839780807495, -0.3452437222003937, -0.23188495635986328, -0.43352773785591125, -0.25833815336227417, -0.6481201648712158, -0.4094839096069336, -0.0024878999684005976, -0.14617951214313507, -0.059974003583192825, -0.4408531188964844, -3.6477376852417365e-05, -0.20855042338371277, -0.0003023882454726845, -0.05436331778764725, -0.07127499580383301, -0.22630436718463898, -1.5298619270324707, -0.08434547483921051, -0.04273780807852745, -0.12272123992443085, -0.002092197770252824, -0.008618303574621677, -8.916457591112703e-05, -0.007941221818327904, -2.050900459289551, -0.032065391540527344, -0.014914201572537422, -0.0070846062153577805, -0.24906931817531586, -0.0006455483380705118, -0.01944807358086109, -0.7923017144203186, -0.006809363141655922, -0.9091059565544128, -0.08065173774957657, -1.3894412517547607, -0.866137683391571, -0.035866767168045044, -0.2209601104259491, -0.0007680088747292757, -0.4625302851200104, -0.17570079863071442, -0.1327730417251587, -1.8173521757125854, -0.02342619188129902, -0.16609299182891846, -0.007783560082316399, -0.09992820024490356, -0.007059038151055574, -0.05632757022976875, -0.033617760986089706, -6.9141146923357155e-06, -0.03995606675744057, -0.001500672078691423, -0.0332934595644474, -0.005658086389303207, -0.2241039127111435, -0.034787971526384354, -6.6756979322235566e-06, -0.0007631250191479921, -0.08775704354047775, -0.001388062839396298, -0.027846481651067734, -0.12379448115825653, -0.022380631417036057, -2.8520667552948, -2.3516550064086914, -1.0213608741760254, -0.04635687917470932, -1.399627685546875, -0.470361590385437, -0.0716586783528328, -0.9351671934127808, -0.06554378569126129, -0.006099538411945105, -0.00019870213873218745, -0.03232857584953308, -0.05140974372625351, -0.0156958419829607, -0.3139133155345917, -0.0005310555570758879, -0.030788766220211983, -0.36927148699760437, -0.0008025524439290166, -1.517340898513794, -0.5060521364212036, -0.10132633149623871, -0.012493678368628025, -0.00047839165199548006, -0.002204132964834571, -0.00032360086333937943, -0.0015128131490200758, -0.775656521320343, -0.0019171921303495765, -2.636146068572998, -0.018071290105581284, -0.6523106098175049, -1.2874520507466514e-05, -0.07569732517004013, -0.16506917774677277, -0.02956201508641243, -0.00017510310863144696, -0.002455436158925295, -0.02092663384974003, -0.0027585094794631004, -0.009342878125607967, -3.480850500636734e-05, -0.00018225439998786896, -1.3198292255401611, -0.002431652508676052, -0.05176591873168945, -0.06619937717914581, -0.1945250928401947, -0.00047779586748220026, -0.00675951549783349, -0.12150095403194427, -0.060414791107177734, -0.09441030770540237, -0.5837032198905945, -1.1249436140060425, -0.7025159001350403, -0.0026647080667316914, -0.00044860312482342124, -0.00019167017308063805, -0.010642321780323982, -0.0020638848654925823, -0.0011426832061260939, -0.0017055026255548, -0.01824243925511837, -0.0810285434126854, -0.015838181599974632, -0.00026544384309090674, -7.545663538621739e-05, -0.00022599527437705547, -0.00020466140995267779, -0.0003634030872490257, -0.0017742858035489917, -0.08504262566566467, -0.0002901133266277611, -0.0021672588773071766, -0.09370804578065872, -0.14582833647727966, -0.06603904068470001, -2.756075620651245, -5.960446742392378e-06, -2.3841830625315197e-06, -0.0010981488740071654, -0.00027426297310739756, -0.5100443959236145, -0.29315319657325745, -0.19016019999980927, -2.416403293609619, -0.061401620507240295, -0.004375883378088474, -0.02975643426179886, -0.002372190821915865, -0.00030560590676032007, -0.07139765471220016, -0.06295940279960632, -0.024563485756516457, -0.01557953841984272, -0.000493762141559273, -0.016805149614810944, -0.000730247818864882, -0.002782404189929366, -0.04528296738862991, -0.03107459284365177, -0.00020680672605521977, -0.8779712319374084, -0.004173498135060072, -0.00026651646476238966, -0.005811817012727261, -0.13226255774497986, -0.003098094603046775, -0.10533556342124939, -0.7392099499702454, -0.0025345126632601023, -0.02226533554494381, -0.5171824097633362, -0.0016395710408687592, -0.00010191874753218144, -0.0007773000397719443, -0.0005237876321189106, -0.0015260252403095365, -0.09005597978830338, -0.0013254437362775207, -1.6290870904922485, -0.013739066198468208, -0.018882988020777702, -0.001374848885461688, -1.771395206451416, -0.0003104920033365488, -0.0016538526397198439, -0.03136715292930603, -0.17279084026813507, -2.7462611198425293, -0.08530843257904053, -0.10765154659748077, -0.0005339150666259229, -0.44962000846862793, -0.03319578990340233, -0.13600340485572815, -0.0011749514378607273, -0.14443591237068176, -2.4897518157958984, -0.003842472331598401, -0.5930509567260742, -0.007050515618175268, -0.3017770051956177, -0.47324222326278687, -0.005561711732298136, -0.09569062292575836, -0.03897615149617195, -0.25552570819854736, -0.004790970589965582, -0.08323121815919876, -1.2288738489151, -0.005480265710502863, -0.05364805459976196, -0.00018189683032687753, -0.06067880988121033, -0.07175809890031815, -0.00379853299818933, -0.0002743821241892874, -0.0013908008113503456, -0.00019798702851403505, -0.003508960595354438, -0.00020716428116429597, -0.8938698768615723, -0.00018559163436293602, -0.0010270564816892147, -0.0003719830128829926, -7.879423355916515e-05, -0.0002337421028641984, -1.3112935448589269e-05, -6.961580220377073e-05, -0.0005769256968051195, -0.00010394509445177391, -0.022389957681298256, -0.04110721871256828, -0.002561028813943267, -0.0331774540245533, -0.0024878999684005976, -0.014135710895061493, -0.017696933820843697, -6.496695277746767e-05, -0.11744728684425354, -0.15120138227939606, -0.5108478665351868, -0.0030176362488418818, -0.00025245340657420456, -0.0005890780012123287, -0.00015615197480656207, -0.0005768066039308906], "finish_reason": "length"}], "metrics": {"energy": 289.8919187641144, "energy_per_token": 1.1323903076723218, "time": 11.357741, "time_per_token": 0.04436617578125}}
{"outputs": [{"text": "text = re.sub(r'\\W+', ' ', text).lower().strip()\n    text_tokens = text.split()\n    stop_words = set(stopwords.words('english'))\n    cleaned_tokens = [token for token in text_tokens if token.strip() not in stop_words]\n\n    vectorizer = CountVectorizer(analyzer='word', ngram_range=(n, n))\n    count_matrix = vectorizer.fit_transform(cleaned_tokens)\n    count_matrix = count_matrix.toarray()\n\n    row_labels = vectorizer.get_feature_names_out()\n    col_labels = vectorizer.get_feature_names_out()\n\n    # Generate a square co-occurrence matrix\n    co_occurrence = np.zeros((len(row_labels), len(col_labels)))\n    for i, row in enumerate(count_matrix):\n        for j, count in enumerate(row):\n            if count > 0:\n                co_occurrence[i, j] = count\n\n    df = pd.DataFrame(", "tokens": ["text", " =", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "strip", "()", "\n", "    ", "text", "_", "tokens", " =", " text", ".", "split", "()", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "cleaned", "_", "tokens", " =", " [", "token", " for", " token", " in", " text", "_", "tokens", " if", " token", ".", "strip", "()", " not", " in", " stop", "_", "words", "]", "\n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "analy", "zer", "='", "word", "'", ",", " n", "gram", "_", "range", "=(", "n", ",", " n", "))", "\n", "    ", "count", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cleaned", "_", "tokens", ")", "\n", "    ", "count", "_", "matrix", " =", " count", "_", "matrix", ".", "to", "array", "()", "\n", "\n", "    ", "row", "_", "labels", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "col", "_", "labels", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Generate", " a", " square", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "co", "_", "occ", "ur", "rence", " =", " np", ".", "zeros", "((", "len", "(", "row", "_", "labels", ")", ",", " len", "(", "col", "_", "labels", ")))", "\n", "    ", "for", " i", ",", " row", " in", " enumerate", "(", "count", "_", "matrix", "):", "\n", "        ", "for", " j", ",", " count", " in", " enumerate", "(", "row", "):", "\n", "            ", "if", " count", " >", " ", "0", ":", "\n", "                ", "co", "_", "occ", "ur", "rence", "[", "i", ",", " j", "]", " =", " count", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "("], "logprobs": [-2.7484006881713867, -0.08412247896194458, -0.6614171266555786, -0.00039867559098638594, -0.23104093968868256, -0.15869851410388947, -0.17200855910778046, -1.6537611484527588, -0.9038144946098328, -0.18598344922065735, -0.00016485285595990717, -0.06293366104364395, -0.004045161418616772, -0.00032300499151460826, -0.021433044224977493, -0.05269142985343933, -1.1161465644836426, -0.4093983471393585, -0.0004938812926411629, -1.0014772415161133, -0.9825413823127747, -0.004607299342751503, -0.35408326983451843, -0.1711927056312561, -1.5672341585159302, -2.164400577545166, -1.7818481922149658, -0.00513128936290741, -0.9046587347984314, -0.0029717590659856796, -0.010988437570631504, -0.09668049216270447, -0.012220744974911213, -0.5474181771278381, -0.922234833240509, -0.6798614859580994, -0.05543181300163269, -0.023976612836122513, -0.20240432024002075, -0.000542612629942596, -0.007542702369391918, -7.974783511599526e-05, -0.00037400881410576403, -0.0016420703614130616, -0.14406481385231018, -0.020113790407776833, -4.768360213347478e-06, -0.0032865579705685377, -0.013985371217131615, -0.20321865379810333, -3.5411572456359863, -0.013145802542567253, -0.13515514135360718, -0.002522384049370885, -0.05226317420601845, -0.3362118899822235, -0.029105445370078087, -0.000565249880310148, -0.0003090619284193963, -0.0022555168252438307, -0.00016497205069754273, -4.160317621426657e-05, -0.07427947223186493, -0.047156982123851776, -2.1492271423339844, -3.0752432346343994, -0.1524590700864792, -0.30618008971214294, -8.976056415122002e-05, -0.003687013639137149, -0.0016825341153889894, -1.156323378381785e-05, -0.07746825367212296, -0.00443427637219429, -1.3211257457733154, -0.000709401210770011, -1.0570805072784424, -0.011422593146562576, -0.0011071987682953477, -0.00016473367577418685, -9.775113539944869e-06, -0.00011121608258690685, -0.012634354643523693, -0.6774634122848511, -0.03754495456814766, -0.06597977876663208, -0.09343903511762619, -0.038234878331422806, -0.0001528146385680884, -0.05018706992268562, -0.055211979895830154, -3.4450891689630225e-05, -0.00015138434537220746, -0.003780362894758582, -0.40686681866645813, -0.0041328975930809975, -0.038274120539426804, -0.25611311197280884, -0.007902547717094421, -0.017696581780910492, -1.492621660232544, -0.03344980254769325, -0.03362306207418442, -0.0023436478804796934, -0.004795716144144535, -6.079655122448457e-06, -3.302042750874534e-05, -0.001520311925560236, -7.688703772146255e-05, -4.827859811484814e-05, -0.023971375077962875, -0.0040008751675486565, -7.271740287251305e-06, -1.7762025890988298e-05, -0.0005663221818394959, -0.19839172065258026, -0.46521100401878357, -2.2426815032958984, -0.011488353833556175, -0.5414156317710876, -0.3693200945854187, -0.6126160621643066, -0.000163541772053577, -4.207999518257566e-05, -0.006394402589648962, -0.2992338240146637, -0.1556924730539322, -0.0017013374017551541, -0.05831170082092285, -0.6742655634880066, -0.0003507714136503637, -3.800779342651367, -0.05343065410852432, -1.3989089727401733, -0.02040291577577591, -0.5871862173080444, -1.1324817933200393e-05, -4.434487345861271e-05, -0.07180558890104294, -3.576272320060525e-06, -0.00029797881143167615, -1.1920928244535389e-07, -0.0029447784181684256, -1.9852956533432007, -4.5536911784438416e-05, -0.008773942478001118, -0.006965757813304663, -0.016730593517422676, -0.13112612068653107, -0.0002885640424210578, -0.005597038194537163, -0.0005740663618780673, -0.44334959983825684, -0.0007925468380562961, -0.00029237763374112546, -0.0033721032086759806, -1.0371154530730564e-05, -6.305972783593461e-05, -1.5497195136049413e-06, -0.00014077626110520214, -0.0035965063143521547, -1.0847986231965479e-05, -0.015837477520108223, -0.0039431690238416195, -0.3954842984676361, -0.00020489977032411844, -2.9146249294281006, -3.3377933502197266, -1.062192678451538, -0.6038891673088074, -0.6827043294906616, -0.01195527520030737, -0.0008191090892069042, -0.0033040239941328764, -0.0002461368858348578, -0.002767068799585104, -0.6191261410713196, -0.0005970602505840361, -0.6967248916625977, -0.7076071500778198, -0.09172359853982925, -0.0977102518081665, -0.1505265235900879, -2.0484540462493896, -0.6622645854949951, -8.940656698541716e-06, -0.09986293315887451, -0.07630676031112671, -0.019344599917531013, -1.5616295058862306e-05, -0.5360305905342102, -2.253030106658116e-05, -1.3589766240329482e-05, -0.0006987990345805883, -0.0006740205571986735, -0.0023930028546601534, -1.3708974620385561e-05, -0.2713831663131714, -3.576278118089249e-07, -3.099436753473128e-06, -0.14987491071224213, -0.005309765227138996, -0.03759593144059181, -0.028816623613238335, -0.13052985072135925, -0.9480892419815063, -0.2892078161239624, -0.09508216381072998, -0.00037377048283815384, -2.8490614567999728e-05, -0.020059693604707718, -1.7881377516459906e-06, -5.006777428206988e-06, -0.003235940122976899, -0.0012657972984015942, -0.0012816318776458502, -0.06485826522111893, -0.0028496868908405304, -0.006869153585284948, -0.44044601917266846, -0.0027314042672514915, -0.00304473377764225, -7.676783570786938e-05, -0.002605379093438387, -0.003170228097587824, -0.00042548662167973816, -0.0006354220095090568, -0.2362062633037567, -0.008187658153474331, -0.16350309550762177, -0.003819909179583192, -0.03379295393824577, -0.0046235560439527035, -0.011440742760896683, -0.00030858523678034544, -0.038682371377944946, -2.1457441107486375e-05, -1.3589766240329482e-05, -3.671578815556131e-05, -0.00016544880054425448, -0.0002489972102921456, -0.008584974333643913, -0.1711825579404831, -0.015089178457856178, -0.0005353448214009404, -0.038575246930122375, -0.02988845482468605, -0.011791177093982697, -0.08492754399776459, -0.002579102059826255, -2.456268072128296, -0.017064763233065605, -0.0025330858770757914, -0.0037344018928706646, -0.0007929041748866439, -0.0017279945313930511], "finish_reason": "length"}], "metrics": {"energy": 270.4138714914321, "energy_per_token": 1.0563041855134065, "time": 11.351412, "time_per_token": 0.044341453125}}
{"outputs": [{"text": "# remove duplicate consecutive words from the text\n    text = \" \".join(re.findall(r\"[\\w']+\", text))\n    # generate n-grams for text\n    words = ngrams(text.split(), n)\n    # remove stop words from words\n    words_no_stopwords = [\" \".join(w) for w in words if w[0] not in stopwords.words(\"english\")]\n    # create a matrix of words\n    matrix = np.zeros((len(words_no_stopwords), len(words_no_stopwords)))\n    for i in range(len(words_no_stopwords)):\n        for j in range(len(words_no_stopwords)):\n            if words_no_stopwords[i] == words_no_stopwords[j]:\n                continue\n            elif words_no_stopwords[i] in words_no_stopwords[j]:\n                matrix[i, j] += 1\n    # plot the matrix\n    fig, ax = plt.subplots()\n    ax.matshow(matrix)\n    ", "tokens": ["#", " remove", " duplicate", " consecutive", " words", " from", " the", " text", "\n", "    ", "text", " =", " \"", " \"", ".", "join", "(", "re", ".", "find", "all", "(", "r", "\"", "[\\", "w", "']", "+", "\"", ",", " text", "))", "\n", "    ", "#", " generate", " n", "-", "grams", " for", " text", "\n", "    ", "words", " =", " n", "grams", "(", "text", ".", "split", "()", ",", " n", ")", "\n", "    ", "#", " remove", " stop", " words", " from", " words", "\n", "    ", "words", "_", "no", "_", "stop", "words", " =", " [", "\"", " \"", ".", "join", "(", "w", ")", " for", " w", " in", " words", " if", " w", "[", "0", "]", " not", " in", " stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", ")]", "\n", "    ", "#", " create", " a", " matrix", " of", " words", "\n", "    ", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "words", "_", "no", "_", "stop", "words", ")", ",", " len", "(", "words", "_", "no", "_", "stop", "words", ")))", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", "_", "no", "_", "stop", "words", "))", ":", "\n", "        ", "for", " j", " in", " range", "(", "len", "(", "words", "_", "no", "_", "stop", "words", "))", ":", "\n", "            ", "if", " words", "_", "no", "_", "stop", "words", "[", "i", "]", " ==", " words", "_", "no", "_", "stop", "words", "[", "j", "]:", "\n", "                ", "continue", "\n", "            ", "elif", " words", "_", "no", "_", "stop", "words", "[", "i", "]", " in", " words", "_", "no", "_", "stop", "words", "[", "j", "]:", "\n", "                ", "matrix", "[", "i", ",", " j", "]", " +=", " ", "1", "\n", "    ", "#", " plot", " the", " matrix", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "mat", "show", "(", "matrix", ")", "\n", "    "], "logprobs": [-0.4650316834449768, -4.9152936935424805, -0.9932474493980408, -0.6921390891075134, -0.05307834967970848, -3.2206902503967285, -0.49501776695251465, -0.46800705790519714, -0.36026206612586975, -0.0028032076079398394, -0.6179501414299011, -0.0933394655585289, -1.6574156284332275, -0.013010257855057716, -0.00014757021563127637, -0.00017808281700126827, -0.12224146723747253, -0.11153095215559006, -0.00014673586701974273, -0.19056867063045502, -0.00015639036428183317, -0.013819606974720955, -0.10761825740337372, -0.8151588439941406, -2.43007755279541, -0.02131938934326172, -0.2771148979663849, -0.486863911151886, -0.023119302466511726, -0.0005372511222958565, -0.020057355985045433, -0.09756234288215637, -0.03955188766121864, -1.3042585849761963, -0.1438179910182953, -2.5394039154052734, -1.1231731176376343, -0.26743900775909424, -0.11050829291343689, -2.103548049926758, -3.210169792175293, -0.255378782749176, -0.001328301033936441, -2.1014699935913086, -0.05247087776660919, -2.248356342315674, -0.4821070432662964, -0.0648299977183342, -0.08168263733386993, -0.04057828336954117, -0.03955131396651268, -0.05064363777637482, -0.0002907091984525323, -0.013141332194209099, -0.1799401342868805, -0.0048537286929786205, -0.09783695638179779, -0.0316682867705822, -0.8609867095947266, -0.11682349443435669, -2.9914727210998535, -0.6259524822235107, -0.510663628578186, -0.26675933599472046, -0.0008667526417411864, -2.100623369216919, -2.3747236728668213, -1.664522409439087, -0.001967043848708272, -0.12544278800487518, -0.9121634364128113, -0.003925951663404703, -0.07354321330785751, -1.7099802494049072, -0.1932545006275177, -0.00040999590419232845, -0.0011957883834838867, -0.08888164907693863, -1.5240827798843384, -0.010131479240953922, -0.04544895514845848, -0.0006027788622304797, -0.0004096384218428284, -0.07109126448631287, -0.05515647679567337, -0.9598579406738281, -0.5354114174842834, -0.03465855494141579, -0.04352106153964996, -0.2648558020591736, -0.00014172980445437133, -0.033560242503881454, -0.005471610929816961, -0.043188195675611496, -0.00498623214662075, -0.9311532974243164, -0.008733055554330349, -0.06118948757648468, -2.622600959512056e-06, -0.00029380773776210845, -0.0254136323928833, -0.002237913431599736, -0.12876448035240173, -0.08801361173391342, -2.1019768714904785, -0.6104051470756531, -2.998528003692627, -0.3466609716415405, -0.821494460105896, -0.7406954765319824, -0.001082073082216084, -1.3382272720336914, -0.025992579758167267, -1.237180233001709, -3.2066785934148356e-05, -0.4150330126285553, -0.2572234869003296, -0.030846908688545227, -0.00013195598148740828, -0.0065415059216320515, -0.08677567541599274, -9.417489309271332e-06, -1.0609570381348021e-05, -7.629365427419543e-06, -3.3378546504536644e-06, -0.0060643479228019714, -0.005076139234006405, -0.0073806000873446465, -4.970903682988137e-05, -0.0007416835287585855, -0.00456897122785449, 0.0, -6.079655122448457e-06, -4.768370445162873e-07, -1.1801649634435307e-05, -0.14204244315624237, -0.006469378247857094, -0.02545628324151039, -0.290936142206192, -0.06347204744815826, -0.806753396987915, -0.0033505987375974655, -0.00035291642416268587, -0.0416497066617012, -2.5510462364763953e-05, -0.018703993409872055, -0.005369882099330425, 0.0, -6.794906312279636e-06, -4.768370445162873e-07, -2.0265558760002023e-06, -0.12740883231163025, -9.226373367710039e-05, -0.0023673148825764656, -0.0018117694417014718, -0.09131217747926712, -0.002444971352815628, -0.00026246439665555954, -0.00026603974401950836, -0.0005684667266905308, -0.594290554523468, -2.52720492426306e-05, -0.00040904260822571814, -0.0015636371681466699, 0.0, -4.291525328881107e-06, -2.3841855067985307e-07, -3.2186455882765586e-06, -0.001388062839396298, -0.000336590368533507, -0.0004357342259027064, -0.0026102541014552116, -0.2767849564552307, -0.3058636486530304, -0.007239419035613537, -2.7418097943154862e-06, -2.932505594799295e-05, -2.0265558760002023e-06, -9.536738616588991e-07, -8.928377064876258e-05, -0.009865337051451206, -0.29974666237831116, -0.19682931900024414, -0.008805966004729271, -0.0007645544828847051, -1.1920928244535389e-07, -1.1205610462639015e-05, -3.576278118089249e-07, -5.602820692729438e-06, -0.00026067672297358513, -0.0007070187130011618, -0.03923351317644119, -0.0061109126545488834, -0.0005231918767094612, -2.8715953826904297, -0.010509622283279896, -0.005370356608182192, -1.7121095657348633, -0.24903586506843567, -0.004186556674540043, -9.775113539944869e-06, -4.887569048150908e-06, -8.344646857949556e-07, -1.311301275563892e-06, -0.00019429226813372225, -0.01504408661276102, -0.9001976847648621, -0.5988222360610962, -0.11038019508123398, -0.013138272799551487, -2.288792165927589e-05, -2.9801878554280847e-05, -9.536738616588991e-07, -2.0265558760002023e-06, -0.0009076051646843553, -0.0011703077470883727, -0.21327820420265198, -0.0060500106774270535, -0.0002517383254598826, -0.1067504808306694, -0.0023660066071897745, -0.0075434125028550625, -0.20766903460025787, -0.04283100739121437, -0.0007696765242144465, -1.4913122653961182, -0.05494752526283264, -0.0024650683626532555, -0.015259546227753162, -0.3733408451080322, -0.3026026785373688, -1.1976182460784912, -0.1636737436056137, -0.5375728607177734, -0.2982671856880188, -0.0020624573808163404, -0.3180287480354309, -0.08606365323066711, -0.013756467960774899, -0.00937358383089304, -0.0007568117580376565, -5.352353764465079e-05, -0.001866623992100358, -4.827859811484814e-05, -0.6842988133430481, -0.0020557953976094723, -0.009474079124629498, -0.282518595457077, -0.019189778715372086, -1.3174583911895752, -0.0026276130229234695, -0.0006270825979299843, -0.006969545967876911, -0.34261786937713623, -0.004674578085541725, -0.03755253180861473], "finish_reason": "length"}], "metrics": {"energy": 265.4138288450242, "energy_per_token": 1.0367727689258759, "time": 11.125466, "time_per_token": 0.0434588515625}}
{"outputs": [{"text": "# Checking the requirements\n    for lib in [\"re\", \"pandas\", \"matplotlib.pyplot\", \"numpy\", \"sklearn.feature_extraction.text\", \"nltk.corpus\"]:\n        if not importlib.util.find_spec(lib):\n            raise ImportError(f\"{lib} is not installed. Please install it with your package manager or pip.\")\n    # Storing the text as a string in a list\n    text = str(text)\n    # Removing duplicate consecutive words\n    text = re.sub(r\"\\b\\w{1,2}\\b\\s+\\b\\w{1,2}\\b\", r\" \\b\\w{1,2}\\b\", text)\n    # Removing stopwords\n    text = \" \".join(stopwords.words(\"english\") + [\"\"]).join(text.split())\n\n    # Generating the co-occurrence matrix\n    cv = CountVectorizer(ngram_range=(n, n), analyzer=\"char\")\n    count_matrix = cv", "tokens": ["#", " Check", "ing", " the", " requirements", "\n", "    ", "for", " lib", " in", " [", "\"", "re", "\"", ",", " \"", "pand", "as", "\"", ",", " \"", "mat", "plotlib", ".", "py", "plot", "\"", ",", " \"", "numpy", "\"", ",", " \"", "sk", "learn", ".", "feature", "_", "ext", "raction", ".", "text", "\"", ",", " \"", "nl", "tk", ".", "cor", "pus", "\"", "]:", "\n", "        ", "if", " not", " import", "lib", ".", "util", ".", "find", "_", "spec", "(", "lib", "):", "\n", "            ", "raise", " Import", "Error", "(", "f", "\"", "{", "lib", "}", " is", " not", " installed", ".", " Please", " install", " it", " with", " your", " package", " manager", " or", " pip", ".", "\"", ")", "\n", "    ", "#", " St", "oring", " the", " text", " as", " a", " string", " in", " a", " list", "\n", "    ", "text", " =", " str", "(", "text", ")", "\n", "    ", "#", " Rem", "oving", " duplicate", " consecutive", " words", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "b", "\\", "w", "{", "1", ",", "2", "}\\", "b", "\\", "s", "+\\", "b", "\\", "w", "{", "1", ",", "2", "}\\", "b", "\"", ",", " r", "\"", " \\", "b", "\\", "w", "{", "1", ",", "2", "}\\", "b", "\"", ",", " text", ")", "\n", "    ", "#", " Rem", "oving", " stop", "words", "\n", "    ", "text", " =", " \"", " \"", ".", "join", "(", "stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", ")", " +", " [", "\"", "\"", "])", ".", "join", "(", "text", ".", "split", "())", "\n", "\n", "    ", "#", " Gener", "ating", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "n", ",", " n", ")", ",", " analy", "zer", "=", "\"", "char", "\"", ")", "\n", "    ", "count", "_", "matrix", " =", " cv"], "logprobs": [-0.4650316834449768, -4.377840995788574, -0.17585769295692444, -1.000177264213562, -0.9433726072311401, -0.5481346249580383, -0.01030340138822794, -1.0803712606430054, -1.9287551641464233, -0.06146182119846344, -0.39247003197669983, -2.0408151149749756, -0.058586057275533676, -0.0012661544606089592, -0.0012429377529770136, -0.01199073065072298, -0.1332646906375885, -1.1920922133867862e-06, -0.0001879753835964948, -0.0019748962949961424, -0.0033768555149435997, -0.04226904362440109, -4.410734163684538e-06, -0.20504695177078247, -0.0003887851198669523, -0.00010752100206445903, -0.00020180096908006817, -0.0012516292044892907, -0.010703062638640404, -0.0035391333512961864, -0.00016830935783218592, -0.0091929966583848, -0.0677144005894661, -0.010537343099713326, -0.00021181246847845614, -0.07450810074806213, -0.0012463905150070786, -0.0007531190640293062, -0.0004862556525040418, -0.00048792376765049994, -0.0037013848777860403, -0.0005677518784068525, -0.003611116437241435, -0.030061757192015648, -0.10525691509246826, -0.006327476352453232, -3.4570634852570947e-06, -0.013640409335494041, -0.0020988595206290483, -0.0007014198345132172, -0.0030448525212705135, -0.013284740969538689, -0.004110697191208601, -0.002769684186205268, -0.7902881503105164, -0.43226027488708496, -0.9129633903503418, -0.021159037947654724, -0.002211150946095586, -0.004249827936291695, -5.1377883210079744e-05, -8.856858039507642e-05, -1.1920928244535389e-07, -0.008234715089201927, -0.00018034738604910672, -0.004278197418898344, -0.030875228345394135, -0.02575850859284401, -0.0020004753023386, -0.1585845798254013, -0.17747753858566284, -0.002087915316224098, -0.009007297456264496, -0.10860270261764526, -0.017724573612213135, -1.5223088264465332, -0.00669154804199934, -0.024812256917357445, -0.5211216807365417, -0.5503026247024536, -0.1163974478840828, -0.4277860224246979, -0.5294436812400818, -0.1073722317814827, -0.2900669574737549, -3.114006996154785, -3.487257480621338, -1.571523666381836, -0.020115191116929054, -1.6911430358886719, -1.7770497798919678, -0.466403990983963, -0.01610391214489937, -0.0022469530813395977, -0.00495029054582119, -1.7868045568466187, -0.20424003899097443, -4.306022644042969, -0.18791620433330536, -0.281480610370636, -1.7376410961151123, -1.9462605714797974, -0.49030596017837524, -1.60038423538208, -2.4807260036468506, -0.43254464864730835, -2.1495375633239746, -0.4860506057739258, -0.002702990546822548, -0.4704575836658478, -0.7782067656517029, -2.4330546855926514, -0.026470772922039032, -0.016730476170778275, -0.012395604513585567, -0.1981586366891861, -0.149399995803833, -0.22018621861934662, -1.4726513624191284, -0.006403641309589148, -1.9089503288269043, -0.5452998280525208, -0.038034986704587936, -1.104936957359314, -0.0016221948899328709, -0.5086392760276794, -0.10042569786310196, -0.45305657386779785, -0.00012003655137959868, -0.11402316391468048, -0.03219987824559212, -0.051132164895534515, -0.880683958530426, -0.46553298830986023, -0.3623720407485962, -0.9333083033561707, -0.0919184759259224, -1.3044025897979736, -0.8730489015579224, -0.006698416080325842, -2.162379264831543, -0.4448600709438324, -0.18575063347816467, -0.8881874680519104, -0.02141880802810192, -1.6665189266204834, -0.043259549885988235, -0.005659034941345453, -0.0008731843554414809, -0.013458121567964554, -0.005535393487662077, -0.0006279165390878916, -0.005924995522946119, -0.01785549893975258, -0.0019779896829277277, -0.06994511932134628, -0.0002817710628733039, -1.1085524559020996, -0.05373753607273102, -2.252593517303467, -1.1013154983520508, -0.006554888561367989, -0.07263148576021194, -0.03545840084552765, -0.11402784287929535, -0.039617542177438736, -0.017069803550839424, -0.004730462562292814, -0.0010311054065823555, -0.20052514970302582, -0.0007557396893389523, -0.009034114889800549, -0.05706535279750824, -0.04244512692093849, -0.08330272883176804, -0.05626401677727699, -0.964563250541687, -0.0022220939863473177, -0.6484711766242981, -0.06665126234292984, -0.4588441848754883, -0.000569300667848438, -2.368971824645996, -0.03362882882356644, -0.5036464333534241, -0.03307746723294258, -0.0008270895341411233, -0.001257344032637775, -1.2796008586883545, -1.2853844165802002, -0.012056218460202217, -0.008480016142129898, -0.028642063960433006, -0.15589629113674164, -0.0014719852479174733, -0.031734809279441833, -3.6954811548639555e-06, -0.0006837890832684934, -0.8089578747749329, -0.17708565294742584, -0.45326724648475647, -0.731645941734314, -2.338305950164795, -0.3480041027069092, -0.7268493175506592, -0.18278659880161285, -0.10842698812484741, -0.9812168478965759, -0.3980037569999695, -0.05181029066443443, -0.08367766439914703, -0.06151708588004112, -2.236137628555298, -0.0018290233565494418, -0.09716727584600449, -1.2642194032669067, -0.0016709902556613088, -0.48285579681396484, -0.8590360283851624, -0.011752179823815823, -0.0014444880653172731, -0.004340276122093201, -0.00235661119222641, -0.012606102973222733, -0.45225292444229126, -0.0044461446814239025, -1.0332554578781128, -0.027395622804760933, -0.0004291805380489677, -1.3947389561508317e-05, -0.00038961926475167274, -0.03605179861187935, -1.180627703666687, -0.031808026134967804, -6.806619057897478e-05, -3.516612196108326e-05, -0.006721388082951307, -0.20117880403995514, -0.005082780960947275, -0.051685772836208344, -0.7217836380004883, -0.00035529976594261825, -1.285931944847107, -4.494089080253616e-05, -0.15328532457351685, -0.011905447579920292, -1.2205846309661865, -0.5580025911331177, -1.003427505493164, -0.031869225203990936, -0.010917573235929012, -3.498861312866211, -0.17331121861934662, -0.059616249054670334, -0.005319132469594479, -0.0030772972386330366], "finish_reason": "length"}], "metrics": {"energy": 269.45219145679476, "energy_per_token": 1.0525476228781045, "time": 11.331519, "time_per_token": 0.04426374609375}}
{"outputs": [{"text": "# Remove duplicate consecutive words\n    words = re.findall(r\"\\w+\", text)\n\n    # Remove stopwords\n    stopwords_ = stopwords.words(\"english\")\n    words = [word for word in words if word not in stopwords_]\n\n    # Generate the n-grams\n    ngrams = ngrams(words, n)\n\n    # Convert n-grams to a list\n    ngrams = [\" \".join(ngram) for ngram in ngrams]\n\n    # Count the occurrences of each n-gram in the text\n    vectorizer = CountVectorizer(ngram_range=(1, n))\n    counts = vectorizer.fit_transform(ngrams).todense()\n\n    # Convert counts to a DataFrame\n    df = pd.DataFrame(counts, index=ngrams, columns=vectorizer.vocabulary_.keys())\n\n    # Plot the co-occurrence matrix\n    ax = plt.imshow(df)\n\n    return df, ax", "tokens": ["#", " Remove", " duplicate", " consecutive", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "stop", "words", "_", " =", " stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", ")", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "_", "]", "\n", "\n", "    ", "#", " Generate", " the", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " n", "grams", "(", "words", ",", " n", ")", "\n", "\n", "    ", "#", " Convert", " n", "-", "grams", " to", " a", " list", "\n", "    ", "ng", "rams", " =", " [", "\"", " \"", ".", "join", "(", "ng", "ram", ")", " for", " n", "gram", " in", " n", "grams", "]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " n", "-", "gram", " in", " the", " text", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "1", ",", " n", "))", "\n", "    ", "counts", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "ng", "rams", ")", ".", "t", "od", "ense", "()", "\n", "\n", "    ", "#", " Convert", " counts", " to", " a", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "counts", ",", " index", "=", "ng", "rams", ",", " columns", "=", "vector", "izer", ".", "voc", "abulary", "_", ".", "keys", "())", "\n", "\n", "    ", "#", " Plot", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "ax", " =", " plt", ".", "im", "show", "(", "df", ")", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.4650316834449768, -2.81589674949646, -0.9016917943954468, -0.4367099106311798, -0.027209794148802757, -1.2101686000823975, -0.003056856105104089, -1.24750554561615, -0.04271930083632469, -0.3779042065143585, -6.794698856538162e-05, -0.16112585365772247, -0.0003408804477658123, -0.046169307082891464, -0.05325514078140259, -2.0507924556732178, -0.15323306620121002, -0.6346446871757507, -0.662472665309906, -0.01790456287562847, -0.00010585224663373083, -0.011304613202810287, -0.15931451320648193, -0.006113400682806969, -0.8907885551452637, -0.0002735478919930756, -0.018400801345705986, -0.7967541813850403, -0.07883895933628082, -0.03418564423918724, -0.48987525701522827, -0.000516757951118052, -0.11403730511665344, -1.2547733783721924, -0.18676842749118805, -2.2773048877716064, -1.2394046783447266, -2.884823152271565e-05, -0.00298542738892138, -0.0050838482566177845, -0.3903328776359558, -0.0017075256910175085, -0.061877526342868805, -2.264974000354414e-06, -0.0002696150622796267, -0.000439428084064275, -0.004736987873911858, -0.0075722807087004185, -0.23969314992427826, -0.18391236662864685, -0.01843099482357502, -0.23255404829978943, -0.05920847877860069, -8.701899787411094e-05, -0.00014399446081370115, -0.0026120375841856003, -0.0023036866914480925, -0.07608859986066818, -0.20135992765426636, -1.2040065485052764e-05, -0.02094869874417782, -5.245071224635467e-05, -0.0017527469899505377, -0.006498277187347412, -0.0007475204183720052, -0.03270614892244339, -0.00033563701435923576, -0.025102004408836365, -0.8025082349777222, -1.7916055917739868, -1.6189239025115967, -0.07908571511507034, -0.581521213054657, -0.4434722363948822, -0.0008688965463079512, -0.3859108090400696, -0.008612039498984814, -0.01682542823255062, -3.297316551208496, -0.3602426052093506, -0.03277779370546341, -0.07870608568191528, -0.0014207994099706411, -0.008881824091076851, -0.1446412056684494, -0.004716224502772093, -0.08344464749097824, -0.00025185750564560294, -0.007741331122815609, -1.4736489057540894, -1.147273063659668, -0.3330630660057068, -0.016142386943101883, -0.23502536118030548, -0.7389439344406128, -1.524492859840393, -1.539933681488037, -0.000534868217073381, -0.53983074426651, -0.14666493237018585, -0.9014496803283691, -0.35494035482406616, -0.3248061239719391, -0.0313880629837513, -3.421248038648628e-05, -0.00021860594279132783, -0.0034458802547305822, -0.25819098949432373, -0.026356760412454605, -0.0024851649068295956, -0.00797256175428629, -0.00028618055512197316, -4.386805812828243e-05, -5.578839045483619e-05, -0.0038472223095595837, -6.615896563744172e-05, -0.005268499255180359, -0.00033778208307921886, -0.03770947456359863, -0.0005239067832008004, -0.010191897861659527, -1.3976683616638184, -0.2727767825126648, -0.5203121304512024, -0.012501565739512444, -0.2283829301595688, -0.21592533588409424, -0.04926718398928642, -0.006073589902371168, -1.6136387586593628, -0.11378668993711472, -0.3196873664855957, -0.038787417113780975, -0.00068926892708987, -0.4958091378211975, -0.006741991266608238, -0.000846266164444387, -0.0001003691868390888, -1.0013530300057027e-05, -0.0003120412293355912, -0.5777348875999451, -0.9495195150375366, -0.08136926591396332, -4.8040190449682996e-05, -0.0014671048847958446, -0.0023539948742836714, -0.7750096917152405, -0.0004183370911050588, -0.11129399389028549, -0.2724173367023468, -0.009542565792798996, -0.007030865643173456, -1.3397095203399658, -0.014056606218218803, -0.01882707141339779, -2.7894584491150454e-05, -2.4914430468925275e-05, -0.002149297157302499, -0.0005706112715415657, -3.5523738915799186e-05, -0.12064176797866821, -0.005631889682263136, -1.9311717551317997e-05, -0.0009134411229752004, -0.7511951923370361, -2.0432238578796387, -8.916457591112703e-05, -0.012837741523981094, -0.0005721600609831512, -0.014554404653608799, -0.1553930938243866, -0.0004549183649942279, -0.026251444593071938, -1.1201786994934082, -0.9993040561676025, -0.07518870383501053, -0.11410580575466156, -0.9174149632453918, -0.0028659719973802567, -0.21910806000232697, -0.0003097769513260573, -0.07019486278295517, -0.010546544566750526, -0.020479068160057068, -0.0012891324004158378, -0.000226472009671852, -0.003418674925342202, -0.05129219591617584, -0.12161602079868317, -0.58785080909729, -0.005928076803684235, -0.2601326107978821, -0.00022885564249008894, -0.015255202539265156, -0.0009014118695631623, -0.016486838459968567, -0.567614734172821, -0.0001380348257953301, -7.211902266135439e-05, -2.736046314239502, -0.10769843310117722, -1.8118581771850586, -0.03515460714697838, -0.006458718329668045, -0.003118178341537714, -0.05105729028582573, -0.11905591189861298, -0.00042906138696707785, -0.05761118605732918, -1.0675290822982788, -0.0734301209449768, -0.7413885593414307, -0.006010552402585745, -0.001023483811877668, -0.003875365946441889, -0.008832434192299843, -0.0048598977737128735, -0.1498221755027771, -0.002007613657042384, -1.2995860576629639, -0.009687908925116062, -0.4246683716773987, -0.0015735160559415817, -1.1901483535766602, -0.00023672162205912173, -0.0017404898535460234, -0.6110742688179016, -1.6914446353912354, -0.007180715911090374, -0.7360947132110596, -0.0009569118265062571, -0.2631634473800659, -0.09241290390491486, -0.003030115505680442, -0.005484770983457565, -0.7705488801002502, -0.01718464493751526, -1.1325677633285522], "finish_reason": "stop"}], "metrics": {"energy": 253.3696657886503, "energy_per_token": 1.0645784276834047, "time": 10.521246, "time_per_token": 0.044206915966386554}}
{"outputs": [{"text": "# Task function code starts here.\n    # -----------------------------\n\n    # remove all non-word characters and split the text into a list of words\n    words = [word for word in re.split('[^a-zA-Z]+', text) if word != '']\n\n    # remove stopwords\n    stopwords_ = set(stopwords.words('english'))\n    words = [word for word in words if word not in stopwords_]\n\n    # remove duplicates\n    words = list(set(words))\n\n    # create the co-occurrence matrix\n    cv = CountVectorizer(\n        analyzer='word',\n        n_gram_range=(n, n),\n        stop_words='english'\n    )\n    X = cv.fit_transform(words)\n    matrix = X.toarray()\n    df = pd.DataFrame(matrix, index=words, columns=words)\n    ax = plt.imshow(matrix)\n\n    return df, ax", "tokens": ["#", " Task", " function", " code", " starts", " here", ".", "\n", "    ", "#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--", "\n", "\n", "    ", "#", " remove", " all", " non", "-", "word", " characters", " and", " split", " the", " text", " into", " a", " list", " of", " words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " re", ".", "split", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]+", "'", ",", " text", ")", " if", " word", " ", "!", "=", " '", "']", "\n", "\n", "    ", "#", " remove", " stop", "words", "\n", "    ", "stop", "words", "_", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "_", "]", "\n", "\n", "    ", "#", " remove", " dup", "licates", "\n", "    ", "words", " =", " list", "(", "set", "(", "words", "))", "\n", "\n", "    ", "#", " create", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "\n", "        ", "analy", "zer", "='", "word", "'", ",", "\n", "        ", "n", "_", "gram", "_", "range", "=(", "n", ",", " n", ")", ",", "\n", "        ", "stop", "_", "words", "='", "eng", "lish", "'", "\n", "    ", ")", "\n", "    ", "X", " =", " cv", ".", "fit", "_", "transform", "(", "words", ")", "\n", "    ", "matrix", " =", " X", ".", "to", "array", "()", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "matrix", ",", " index", "=", "words", ",", " columns", "=", "words", ")", "\n", "    ", "ax", " =", " plt", ".", "im", "show", "(", "matrix", ")", "\n", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-0.4650316834449768, -4.282087326049805, -3.120662212371826, -1.9076913595199585, -1.441734790802002, -0.0589858777821064, -2.3578150272369385, -0.15852394700050354, -0.4315917193889618, -0.553395688533783, -1.92476487159729, -0.5495125651359558, -0.06646678596735, -0.0074048577807843685, -0.01725330762565136, -0.007503303233534098, -0.010583700612187386, -0.014527382329106331, -0.012389600276947021, -0.010793047025799751, -1.7409669160842896, -0.010194139555096626, -0.5719651579856873, -0.002261701738461852, -0.26893869042396545, -5.0616865158081055, -2.7945022583007812, -2.0432376861572266, -0.122700996696949, -1.6519793272018433, -0.2286045104265213, -1.8654948472976685, -1.1072522401809692, -0.6209819912910461, -0.4983731806278229, -0.2258313000202179, -1.2355177402496338, -0.019876936450600624, -0.06344340741634369, -0.07355041056871414, -0.13926775753498077, -0.0035399647895246744, -0.30242377519607544, -0.07119917869567871, -2.6521739959716797, -0.5409919619560242, -0.6329213976860046, -0.0018780466634780169, -0.0003002431185450405, -0.010076014325022697, -4.5298504119273275e-05, -2.3608624935150146, -1.53925359249115, -0.8453977704048157, -0.36781272292137146, -0.19757825136184692, -6.818538531661034e-05, -0.00016640232934150845, -0.12614066898822784, -2.2411095415009186e-05, -0.0010288427583873272, -1.0878338813781738, -0.0008255410939455032, -0.00012635385792236775, -0.013447653502225876, -0.16217845678329468, -0.042590219527482986, -0.29899561405181885, -2.3274240493774414, -6.09140915912576e-05, -2.372236667724792e-05, -0.2965705692768097, -0.004261460620909929, -0.008068704046308994, -0.11000991612672806, -0.000476246903417632, -0.01716812141239643, -0.6485335826873779, -1.5223605632781982, -0.07404481619596481, -1.7581852674484253, -0.0008218486327677965, -0.1521887183189392, -0.9402039051055908, -0.34934988617897034, -2.956887722015381, -0.7014493942260742, -0.0015311434399336576, -0.006985764019191265, -0.0001232548092957586, -0.000481132126878947, -0.005199244245886803, -0.12497073411941528, -0.027333104982972145, -7.748573807475623e-06, -0.009318903088569641, -0.028788361698389053, -0.010643147863447666, -0.10480444133281708, -0.11601357161998749, -0.005759548861533403, -0.015932632610201836, -0.05472126603126526, -0.00010775939153973013, -0.00010358751023886725, -0.001704074558801949, -0.002919699065387249, -0.07064327597618103, -0.7625962495803833, -1.0609570381348021e-05, -0.0033883799333125353, -5.304672595229931e-05, -0.0033275492023676634, -0.006383031141012907, -0.001002047909423709, -0.023570112884044647, -0.0004204819560982287, -0.028778517618775368, -1.1977781057357788, -2.019414186477661, -0.009673741646111012, -0.447839617729187, -0.0010405131615698338, -0.13063007593154907, -0.09896378964185715, -0.48053452372550964, -0.012717338278889656, -1.098591923713684, -0.03845342993736267, -0.004955509677529335, -0.0027694464661180973, -0.00401642918586731, -0.07840302586555481, -0.0003971264814026654, -0.048669200390577316, -1.5192161798477173, -2.1840779781341553, -1.2330119609832764, -0.03037126734852791, -0.0021225321106612682, -0.008450819179415703, -0.002468516817316413, -0.012027008458971977, -0.27810046076774597, -0.0025502084754407406, -1.1400972604751587, -0.01675884611904621, -0.00039545822073705494, -2.169585604860913e-05, -0.00023326536756940186, -0.02050616405904293, -3.384491443634033, -0.02425403520464897, -1.005230188369751, -0.01561110932379961, -0.1120835617184639, -0.12880733609199524, -0.010418432764708996, -0.008284962736070156, -0.18218787014484406, -0.0011102947173640132, -0.566961407661438, -0.006940542254596949, -0.36935538053512573, -0.0007278653793036938, -0.0004776767164003104, -0.01247248612344265, -0.13434690237045288, -0.005720672197639942, -0.036636460572481155, -0.031382400542497635, -0.130238339304924, -0.041432540863752365, -0.07079365849494934, -1.3730281591415405, -0.00047886825632303953, -0.003382320748642087, -0.400683730840683, -1.3315874338150024, -3.576278118089249e-07, -0.12510991096496582, -0.6802550554275513, -0.0394989438354969, -0.00013183678674977273, -0.01627574861049652, -0.0939648300409317, -2.7033138275146484, -0.021297916769981384, -0.002020343439653516, -5.590759246842936e-05, -0.002832331694662571, -0.003354281885549426, -4.2914423829643056e-05, -0.020138325169682503, -0.005024900194257498, -0.003437683219090104, -0.10067515820264816, -0.31208792328834534, -3.298156261444092, -0.0242290198802948, -0.18205313384532928, -0.002369336551055312, -0.4378955066204071, -0.046216316521167755, -0.0010194348869845271, -0.042947039008140564, -1.5143595933914185, -0.7932092547416687, -0.018281767144799232, -0.002347691683098674, -0.0006766413571313024, -0.0011020784731954336, -0.0027140469755977392, -0.17742832005023956, -0.3056115508079529, -1.1216055154800415, -0.008006147108972073, -0.05893350765109062, -0.00589465769007802, -0.0007784912013448775, -0.01561110932379961, -0.006010434124618769, -0.012336614541709423, -0.010544302873313427, -1.5086874961853027, -0.9810198545455933, -0.014231615699827671, -0.2956600785255432, -0.004273687023669481, -1.1030725240707397, -0.00010561384988250211, -0.0014946014853194356, -0.951759397983551, -1.139014482498169, -0.017848940566182137, -0.6800768375396729, -0.0007560970261693001, -1.2414840459823608, -0.22392316162586212, -0.0024233281146734953, -0.004154978785663843], "finish_reason": "stop"}], "metrics": {"energy": 249.60104680252078, "energy_per_token": 1.035688990881829, "time": 10.724569, "time_per_token": 0.044500286307053945}}
{"outputs": [{"text": "# Pre-processing: removing punctuation and converting to lowercase\n    text = re.sub(r'[^\\w\\s]', '', text).lower()\n\n    # Pre-processing: removing stopwords\n    stop_words = set(stopwords.words('english'))\n    words = [word for word in text.split() if word not in stop_words]\n    text = ' '.join(words)\n\n    # Generating the co-occurrence matrix\n    vectorizer = CountVectorizer(analyzer='word', ngram_range=(n, n))\n    matrix = vectorizer.fit_transform(text.split()).toarray()\n    df = pd.DataFrame(matrix, columns=vectorizer.get_feature_names_out())\n    ax = df.plot.heatmap()\n    return df, ax", "tokens": ["#", " Pre", "-", "processing", ":", " removing", " punct", "uation", " and", " converting", " to", " lower", "case", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", ".", "lower", "()", "\n", "\n", "    ", "#", " Pre", "-", "processing", ":", " removing", " stop", "words", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "_", "words", "]", "\n", "    ", "text", " =", " '", " '", ".", "join", "(", "words", ")", "\n", "\n", "    ", "#", " Gener", "ating", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "analy", "zer", "='", "word", "'", ",", " n", "gram", "_", "range", "=(", "n", ",", " n", "))", "\n", "    ", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", ".", "split", "())", ".", "to", "array", "()", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "matrix", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "heat", "map", "()", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.4650316834449768, -3.1753337383270264, -2.3270952701568604, -0.07321687042713165, -1.6771436929702759, -1.1737310886383057, -1.5974539518356323, -0.5321499705314636, -1.1366028785705566, -0.749582827091217, -0.3348916172981262, -0.015461343340575695, -0.1878747195005417, -0.05661080777645111, -0.0025856418069452047, -0.3657916188240051, -0.056051578372716904, -0.17082709074020386, -4.1126360883936286e-05, -0.01687360554933548, -0.04689732939004898, -0.022743916139006615, -0.3630683422088623, -0.01731118932366371, -0.08515211194753647, -0.0006783091812394559, -0.05893788859248161, -0.002018558792769909, -0.07133616507053375, -0.033301644027233124, -4.3748852476710454e-05, -0.06364880502223969, -7.509902934543788e-05, -0.006026075221598148, -0.09247257560491562, -0.31971949338912964, -0.0024374795611947775, -8.248942322097719e-05, -0.012270321138203144, -0.18855436146259308, -0.0003921216703020036, -0.007946661673486233, -2.6065831184387207, -0.07940089702606201, -0.016471711918711662, -0.018078666180372238, -0.5249142646789551, -0.17607243359088898, -0.04100504517555237, -0.8288652300834656, -0.000753357307985425, -0.07110413908958435, -0.4789138436317444, -0.01213018223643303, -0.008600575849413872, -0.18514268100261688, -0.00024244230007752776, -0.004651203285902739, -8.570780482841656e-05, -0.00021908267808612436, -0.0024949158541858196, -0.1144988089799881, -0.010784202255308628, -2.7418097943154862e-06, -0.002330684568732977, -0.01223416905850172, -0.004732360597699881, -0.538277268409729, -0.06541851162910461, -0.11058108508586884, -0.04198640212416649, -0.010926063172519207, -0.0002146728802472353, -0.00018845213344320655, -0.040037039667367935, -0.0001494772732257843, -0.0020794689189642668, -0.012190832756459713, -0.005423830822110176, -0.03089776635169983, -0.003011218272149563, -4.6491513785440475e-06, -0.0020610298961400986, -0.0007076143519952893, -9.298280929215252e-06, -0.011115768924355507, -0.0012866322649642825, -0.49350613355636597, -0.09183137118816376, -0.0195296760648489, -0.1252487599849701, -0.0004359725280664861, -1.490105023549404e-05, -0.0010894560255110264, -0.0016243371646851301, -0.002187599427998066, -0.0001578206429257989, -0.009134998545050621, -0.01983731985092163, -0.0003844952443614602, -0.007901838049292564, -2.2502260208129883, -0.0008086272282525897, -0.3837707042694092, -0.6674583554267883, -0.0036491251084953547, -0.001374610816128552, -0.0036482936702668667, -0.002016893122345209, -0.0074423677287995815, -0.47967925667762756, -0.0024404525756835938, -0.7454847693443298, -0.004359859973192215, -0.0007314390386454761, -0.00012981049076188356, -8.583032467868179e-06, -0.00016616393986623734, -0.025681130588054657, -0.5651835203170776, -0.015949292108416557, -0.054351914674043655, -0.018046235665678978, -0.03696082904934883, -0.00027616979787126184, -0.02243506908416748, -0.052171189337968826, -0.00011467275908216834, -0.00012981049076188356, -0.00369223952293396, -0.2242722511291504, -0.0018673378508538008, -0.03890885040163994, -0.1544327288866043, -0.012636237777769566, -0.004772936925292015, -1.0477582216262817, -0.018322501331567764, -0.033795375376939774, -1.07287787614041e-05, -1.4185804502631072e-05, -0.001540903584100306, -0.0003668589051812887, -4.8993817472364753e-05, -0.0979699045419693, -0.1053818091750145, -0.3134050965309143, -0.007291372865438461, -0.17986217141151428, -1.0512094497680664, -0.1566719114780426, -0.019950322806835175, -0.0006080209277570248, -0.01840665191411972, -1.752064824104309, -0.5616441965103149, -0.021689126268029213, -0.004512840881943703, -0.0008431693422608078, -0.0007147617870941758, -0.0023136769887059927, -0.05258229002356529, -0.2531834542751312, -0.3729442358016968, -0.06622883677482605, -0.012212030589580536, -9.464769391342998e-05, -2.8371408916427754e-05, -0.05934947729110718, -1.6689286894688848e-06, -0.00013457823661156, -7.867782187531702e-06, -0.004814460873603821, -1.855468511581421, -7.319182623177767e-05, -0.6411776542663574, -0.018476402387022972, -1.2099084854125977, -0.8942236304283142, -0.009425426833331585, -1.2196595668792725, -0.009719193913042545, -0.05124666914343834, -0.35061538219451904, -0.44139954447746277, -4.172238186583854e-05, -0.9273726940155029, -0.017676906660199165, -0.7016803026199341, -0.12285524606704712, -0.12238925695419312, -0.00280962698161602, -0.003097024979069829, -0.618043839931488, -0.031954094767570496, -1.0012893676757812], "finish_reason": "stop"}], "metrics": {"energy": 203.88412131118778, "energy_per_token": 1.0402251087305499, "time": 8.630031, "time_per_token": 0.04403077040816327}}
{"outputs": [{"text": "# Stopwords and punctuation handling\n    text = re.sub(r\"[^a-zA-Z ]\", \" \", text).lower()\n    text = re.sub(r\"\\s+\", \" \", text)\n\n    # Stopwords filtering\n    stopwords_list = list(stopwords.words(\"english\"))\n    words = [word for word in text.split() if word not in stopwords_list]\n\n    # N-gram generation\n    n_grams = pd.Series([tuple(words[i:i + n]) for i in range(len(words) - n)])\n    n_grams.rename(\"words\", inplace=True)\n\n    # Word count\n    word_count = pd.DataFrame(0, index=n_grams, columns=[\"count\"])\n    for n_gram, count in zip(n_grams.value_counts().index, n_grams.value_counts().values):\n        word_count.loc[pd.Series([n_gram], dtype=\"object\"), \"count\"] = count\n", "tokens": ["#", " Stop", "words", " and", " punct", "uation", " handling", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", " ]", "\"", ",", " \"", " \"", ",", " text", ")", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "+", "\"", ",", " \"", " \"", ",", " text", ")", "\n", "\n", "    ", "#", " Stop", "words", " filtering", "\n", "    ", "stop", "words", "_", "list", " =", " list", "(", "stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", "))", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "_", "list", "]", "\n", "\n", "    ", "#", " N", "-", "gram", " generation", "\n", "    ", "n", "_", "grams", " =", " pd", ".", "Series", "([", "tuple", "(", "words", "[", "i", ":", "i", " +", " n", "])", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", ")]", ")", "\n", "    ", "n", "_", "grams", ".", "rename", "(", "\"", "words", "\"", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "#", " Word", " count", "\n", "    ", "word", "_", "count", " =", " pd", ".", "DataFrame", "(", "0", ",", " index", "=", "n", "_", "grams", ",", " columns", "=[", "\"", "count", "\"", "])", "\n", "    ", "for", " n", "_", "gram", ",", " count", " in", " zip", "(", "n", "_", "grams", ".", "value", "_", "counts", "()", ".", "index", ",", " n", "_", "grams", ".", "value", "_", "counts", "()", ".", "values", "):", "\n", "        ", "word", "_", "count", ".", "loc", "[", "pd", ".", "Series", "([", "n", "_", "gram", "]", ",", " dtype", "=", "\"", "object", "\"", ")", ",", " \"", "count", "\"", "]", " =", " count", "\n"], "logprobs": [-0.4650316834449768, -3.8653552532196045, -0.6619244813919067, -3.175261974334717, -1.6272811889648438, -0.34740689396858215, -3.0327677726745605, -0.19408799707889557, -0.010675464756786823, -0.8165558576583862, -0.0617135725915432, -0.614226222038269, -8.49926145747304e-05, -0.04378090798854828, -0.13705718517303467, -0.07934892922639847, -0.6721326112747192, -0.5549415349960327, -1.4712541103363037, -0.09387736022472382, -5.447716102935374e-05, -9.142934868577868e-05, -0.08698441833257675, -5.090107151772827e-05, -0.00037329382030293345, -1.817528247833252, -0.2578737139701843, -0.00016652150952722877, -0.06762861460447311, -1.045724630355835, -0.0001591317413840443, -0.013003668747842312, -0.04374131187796593, -1.90631103515625, -0.2413749098777771, -0.000196556793525815, -0.4009726941585541, -0.09185758233070374, -0.5687983632087708, -0.021442145109176636, -0.769375741481781, -0.0002696150622796267, -0.013228626921772957, -0.01713976450264454, -0.03796142339706421, -0.025167685002088547, -0.2353961318731308, -0.06498003751039505, -0.1828252226114273, -0.004174685571342707, -0.00012408917245920748, -0.012301525101065636, -0.0019657351076602936, -8.034383063204587e-05, -0.0047482592053711414, -0.021763548254966736, -0.42137789726257324, -1.3787565231323242, -0.0003535122668836266, -0.10307002067565918, -2.7608323097229004, -0.6034509539604187, -3.618058443069458, -0.11110584437847137, -0.0007833749405108392, -0.2839302718639374, -1.5414233207702637, -0.4943297505378723, -0.5449773073196411, -0.00438039330765605, -2.7976489067077637, -0.0011812621960416436, -0.047372568398714066, -1.2516897186287679e-05, -0.0005608416395261884, -0.004542271140962839, -0.6236589550971985, -0.00265852571465075, -0.03483494743704796, -1.5497195136049413e-06, -0.00023552982020191848, -0.004817664157599211, -0.031449172645807266, -0.023421533405780792, -1.8864305019378662, -0.21144060790538788, -0.2829534709453583, -0.19939978420734406, -0.045665476471185684, -0.00039307496626861393, -0.0003816353273577988, -0.03896090388298035, -0.00028689560713246465, -0.01477090921252966, -0.2594418227672577, -0.010949527844786644, -0.047333456575870514, -0.016741378232836723, -2.682172998902388e-05, -0.008788595907390118, -1.7523612768854946e-05, -0.001168402610346675, -2.3841830625315197e-06, -0.015521088615059853, -0.0018127213697880507, -1.002848744392395, -0.0002890407631639391, -0.05305087938904762, -2.0406277179718018, -0.16513215005397797, -0.7974477410316467, -0.5442995429039001, -0.14442621171474457, -0.0007961202645674348, -1.2873215675354004, -0.026787662878632545, -0.2550460398197174, -0.012452236376702785, -3.669431209564209, -8.189342770492658e-05, -0.5054503083229065, -0.8999350070953369, -2.6619086265563965, -0.014100214466452599, -0.179869145154953, -0.005994437262415886, -0.013776103965938091, -0.07990551739931107, -0.045725151896476746, -0.5931744575500488, -0.010508560575544834, -0.0044624037109315395, -0.0817374512553215, -0.0008437649230472744, -0.003875959664583206, -0.002964271232485771, -0.0004596845537889749, -0.05219879746437073, -6.937739817658439e-05, -0.002387294312939048, -0.026165861636400223, -0.0018033209489658475, -0.16198056936264038, -2.2595224380493164, -0.03503801301121712, -0.3319827914237976, -1.083061933517456, -1.0948243141174316, -0.0030122878961265087, -0.15527889132499695, -1.3458757400512695, -3.739727020263672, -0.10748615115880966, -0.238947793841362, -2.1331942081451416, -0.030238499864935875, -0.02447996661067009, -0.02142009139060974, -1.0609570381348021e-05, -0.00315644359216094, -0.0004032037395518273, -0.007165329530835152, -0.0031847255304455757, -0.43417254090309143, -0.00021205084340181202, -0.04681406170129776, -2.7425405979156494, -0.7550696134567261, -0.6602885127067566, -0.0004990047891624272, -0.8773407936096191, -0.008432497270405293, -0.5652746558189392, -0.05381186679005623, -0.8687729835510254, -0.0008397151832468808, -1.3745449781417847, -0.2035098820924759, -4.263505935668945, -0.07788408547639847, -0.16321292519569397, -0.045060548931360245, -0.20966370403766632, -0.0004253674705978483, -7.939023635117337e-05, -0.5008260011672974, -0.00697783287614584, -2.061826467514038, -0.22505374252796173, -0.7261794209480286, -0.006382557563483715, -0.09495500475168228, -0.01685742847621441, -0.06522922962903976, -1.1125922203063965, -2.6996562480926514, -0.7982911467552185, -0.03907062113285065, -2.0069870948791504, -0.7487131953239441, -0.00588612537831068, -2.7942044734954834, -0.12596558034420013, -0.053957920521497726, -0.00022790218645241112, -0.0001722425949992612, -0.949745774269104, -2.2666332721710205, -0.0013975863112136722, -0.0015103134792298079, -0.1522337645292282, -0.2092929482460022, -0.02860870026051998, -0.0893881544470787, -0.017626075074076653, -0.00016926287207752466, -3.0874729418428615e-05, -0.001157805323600769, -0.00021705655672121793, -0.0018587708473205566, -0.0013986576814204454, -0.03830406442284584, -1.2849295139312744, -0.05893440544605255, -0.024285683408379555, -0.0013194911880418658, -0.0015245969407260418, -0.10013529658317566, -0.009193233214318752, -0.0019230222096666694, -0.08719836175441742, -0.041171398013830185, -0.013270153664052486, -1.8157490491867065, -1.8358061424805783e-05, -0.07695843279361725, -1.3204840421676636, -0.06367643177509308, -0.0005492847412824631, -0.0019885781221091747, -0.5974768400192261, -0.1786719113588333, -1.3552074432373047, -0.08033749461174011, -0.5622731447219849, -0.13552714884281158, -9.905801562126726e-05, -0.11282511800527573, -0.014535723254084587, -0.1932263970375061, -0.000176652567461133, -0.00012444675667211413, -0.0007121411035768688, -0.010248771868646145, -0.01939721405506134, -0.00432318402454257], "finish_reason": "length"}], "metrics": {"energy": 258.91146593761437, "energy_per_token": 1.0113729138188061, "time": 11.345281, "time_per_token": 0.04431750390625}}
{"outputs": [{"text": "stopword = set(stopwords.words(\"english\"))\n    text = text.lower()\n    text = re.findall(r'\\w+', text)\n    text = [i for i in text if not i in stopword]\n    text = Counter(text)\n    cooccur = pd.DataFrame(text.most_common(len(text)))\n    cooccur.columns = [\"occur\"]\n    cooccur.index = [\" \".join(cooccur.index)]\n    ax = plt.matshow(cooccur)\n    return cooccur, ax", "tokens": ["stop", "word", " =", " set", "(", "stop", "words", ".", "words", "(", "\"", "eng", "lish", "\"", "))", "\n", "    ", "text", " =", " text", ".", "lower", "()", "\n", "    ", "text", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "text", " =", " [", "i", " for", " i", " in", " text", " if", " not", " i", " in", " stop", "word", "]", "\n", "    ", "text", " =", " Counter", "(", "text", ")", "\n", "    ", "co", "occ", "ur", " =", " pd", ".", "DataFrame", "(", "text", ".", "most", "_", "common", "(", "len", "(", "text", ")))", "\n", "    ", "co", "occ", "ur", ".", "columns", " =", " [", "\"", "occ", "ur", "\"", "]", "\n", "    ", "co", "occ", "ur", ".", "index", " =", " [", "\"", " \"", ".", "join", "(", "co", "occ", "ur", ".", "index", ")]", "\n", "    ", "ax", " =", " plt", ".", "mat", "show", "(", "co", "occ", "ur", ")", "\n", "    ", "return", " co", "occ", "ur", ",", " ax", "\n", "\n", "def"], "logprobs": [-2.664992332458496, -2.5970921516418457, -1.9285367727279663, -0.5073803067207336, -0.0008107712492346764, -0.007563407067209482, -8.856858039507642e-05, -0.0006033745594322681, -0.004212197847664356, -0.8881555795669556, -0.0035545756109058857, -0.030360974371433258, -5.125986263010418e-06, -0.00013660451804753393, -0.004665086045861244, -0.07189911603927612, -0.18576151132583618, -1.735453486442566, -0.2829824984073639, -1.6828515529632568, -0.004707681946456432, -0.6309118270874023, -0.0004999579978175461, -0.14123323559761047, -0.06249622255563736, -0.5738182067871094, -0.05311203747987747, -0.16839994490146637, -5.519237674889155e-05, -2.06913161277771, -0.00016509123088326305, -0.04615610092878342, -0.1416013389825821, -0.5454888939857483, -0.2220238894224167, -0.0203627347946167, -0.0001250427303602919, -0.016685575246810913, -0.01252911426126957, -0.02904164232313633, -0.13366545736789703, -0.7297238707542419, -0.06371882557868958, -0.23147059977054596, -1.761145830154419, -0.03836934268474579, -0.0022399353329092264, -0.0016736084362491965, -0.02374556101858616, -0.0021956877317279577, -2.549010753631592, -0.13065078854560852, -0.04224778711795807, -0.006799535825848579, -0.0014976962702348828, -0.011275380849838257, -0.005669940263032913, -0.257976233959198, -1.6896498203277588, -0.10230289399623871, -3.789799690246582, -0.012758533470332623, -0.023692475631833076, -0.007413850631564856, -0.16366170346736908, -0.11912818998098373, -3.2835426330566406, -1.4166793823242188, -0.15413491427898407, -1.3760441541671753, -0.9393317699432373, -0.0001012035645544529, -0.029508426785469055, -0.3625285029411316, -0.9180908799171448, -1.025593876838684, -0.3550489544868469, -7.521823135903105e-05, -0.0003323002893012017, -1.756684422492981, -1.12118399143219, -0.0007460909546352923, -0.05037672817707062, -0.6857711672782898, -0.43759265542030334, -0.07173901796340942, -0.5343632102012634, -0.0002821285743266344, -0.0001463782973587513, -1.0428438186645508, -0.2805712819099426, -0.017557084560394287, -0.35780903697013855, -0.2178160846233368, -2.9823455810546875, -0.13562968373298645, -0.9364587664604187, -0.3234858214855194, -0.01168761495500803, -0.025819268077611923, -0.16936339437961578, -0.00016175392374861985, -5.4596363042946905e-05, -0.17326761782169342, -0.07791309058666229, -0.0392640046775341, -0.29445865750312805, -0.3810710310935974, -0.8935606479644775, -0.00448020501062274, -0.0006494796834886074, -0.043176665902137756, -3.0289981365203857, -0.03896617889404297, -0.0016219568205997348, -0.09609797596931458, -0.08727363497018814, -0.2299361526966095, -0.0074280500411987305, -0.11320479214191437, -2.634082555770874, -0.047115929424762726, -0.6771540641784668, -0.0008095800876617432, -2.1419668197631836, -0.012727225199341774, -0.0027196346782147884, -0.05450025945901871, -3.3378546504536644e-06, -7.152555099310121e-07, -1.7961293458938599, -0.011864099651575089, -0.08404554426670074, -0.26594245433807373, -0.314497709274292, -3.814689989667386e-06, -5.960462772236497e-07, -0.012486143037676811, -0.021037999540567398, -0.693443238735199, -0.03505953401327133, -1.1087915897369385], "finish_reason": "stop"}], "metrics": {"energy": 152.2529263153077, "energy_per_token": 1.0722037064458287, "time": 6.1113715, "time_per_token": 0.04303782746478873}}
{"outputs": [{"text": "# Create stopwords list\n    sw = set(stopwords.words('english'))\n    # Create empty list to append the words\n    word_list = []\n    # Split the string into words\n    words = re.findall(r'\\w+', text)\n    # Append the words to the word_list\n    for word in words:\n        if word.lower() not in sw:\n            word_list.append(word.lower())\n    # Create an empty list to store ngrams\n    ngrams = []\n    # Create an empty dictionary to store word counts\n    counts = {}\n    # Create a dictionary to store n-grams counts\n    counts_ngrams = {}\n    # Loop through the word_list\n    for i in range(0, len(word_list) - n + 1):\n        # Append the ngrams to the ngrams list\n        ngrams.append(word_list[i : i + n])\n    # Loop through the ngrams list\n    for ngram in ngrams:\n        # Join the ngram into a string and convert it to lowercase\n        ngram_str =", "tokens": ["#", " Create", " stop", "words", " list", "\n", "    ", "sw", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "#", " Create", " empty", " list", " to", " append", " the", " words", "\n", "    ", "word", "_", "list", " =", " []", "\n", "    ", "#", " Split", " the", " string", " into", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "    ", "#", " App", "end", " the", " words", " to", " the", " word", "_", "list", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "if", " word", ".", "lower", "()", " not", " in", " sw", ":", "\n", "            ", "word", "_", "list", ".", "append", "(", "word", ".", "lower", "())", "\n", "    ", "#", " Create", " an", " empty", " list", " to", " store", " n", "grams", "\n", "    ", "ng", "rams", " =", " []", "\n", "    ", "#", " Create", " an", " empty", " dictionary", " to", " store", " word", " counts", "\n", "    ", "counts", " =", " {}", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " n", "-", "grams", " counts", "\n", "    ", "counts", "_", "ng", "rams", " =", " {}", "\n", "    ", "#", " Loop", " through", " the", " word", "_", "list", "\n", "    ", "for", " i", " in", " range", "(", "0", ",", " len", "(", "word", "_", "list", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "#", " App", "end", " the", " n", "grams", " to", " the", " n", "grams", " list", "\n", "        ", "ng", "rams", ".", "append", "(", "word", "_", "list", "[", "i", " :", " i", " +", " n", "])", "\n", "    ", "#", " Loop", " through", " the", " n", "grams", " list", "\n", "    ", "for", " n", "gram", " in", " n", "grams", ":", "\n", "        ", "#", " Join", " the", " n", "gram", " into", " a", " string", " and", " convert", " it", " to", " lower", "case", "\n", "        ", "ng", "ram", "_", "str", " ="], "logprobs": [-0.4650316834449768, -3.9184491634368896, -3.021759033203125, -0.5748407244682312, -0.24882443249225616, -0.5353507995605469, -0.0020743536297231913, -2.551022529602051, -0.2502066493034363, -0.4911937117576599, -0.0008818790083751082, -0.013905431143939495, -5.674201020156033e-05, -0.0009022455778904259, -0.003090845188125968, -0.4689483046531677, -0.02678336761891842, -9.65590606938349e-06, -0.009141850285232067, -0.013583021238446236, -0.5798675417900085, -0.5941625237464905, -1.8819719552993774, -3.975961685180664, -0.934714138507843, -0.6248944997787476, -2.6128125190734863, -2.1947648525238037, -0.8758164048194885, -0.677240788936615, -0.0015400703996419907, -1.8147132396697998, -0.07691096514463425, -0.06838260591030121, -0.013704848475754261, -0.022997800260782242, -0.00043478095903992653, -0.2526465356349945, -0.1027020737528801, -2.193721294403076, -0.35920262336730957, -2.2842564582824707, -0.8723839521408081, -0.4875844419002533, -0.8074197173118591, -0.0016662298003211617, -0.8757830262184143, -0.031101170927286148, -0.217564657330513, -3.075552376685664e-05, -0.37682855129241943, -0.000514851592015475, -0.06629276275634766, -0.07148267328739166, -0.08791819959878922, -0.18984128534793854, -0.009115626104176044, -5.924526340095326e-05, -0.014158982783555984, -0.09950686991214752, -0.0012653210433200002, -0.10956428200006485, -0.20823964476585388, -1.5279686450958252, -0.04168744012713432, -0.574590265750885, -0.07700401544570923, -0.2248857319355011, -0.13879752159118652, -0.5905392169952393, -0.2177840620279312, -0.0006287504802457988, -0.19505606591701508, -0.000952386180870235, -0.1204134076833725, -0.18737925589084625, -0.0007202415145002306, -0.0014219897566363215, -0.00031704644788987935, -0.0005529781919904053, -0.004192848224192858, -0.20579683780670166, -0.07291901111602783, -1.0522167682647705, -0.022241901606321335, -0.0018064148025587201, -0.016247248277068138, -1.4424220353248529e-05, -0.001409014337696135, -0.022535309195518494, -0.010689735412597656, -0.00200297380797565, -0.010775121860206127, -0.013936820439994335, -0.00018785618885885924, -0.002380991354584694, -0.0011542332358658314, -0.0021295505575835705, -0.0036545887123793364, -1.0082355737686157, -0.003077534958720207, -0.0018932766979560256, -0.0012753218179568648, -0.23332683742046356, -0.04670371115207672, -0.8388769030570984, -2.4225218296051025, -0.30355527997016907, -1.2895984649658203, -0.3045752942562103, -0.4069720506668091, -3.245344877243042, -1.52787184715271, -0.11652710288763046, -0.0007986216805875301, -0.31685009598731995, -0.3211595416069031, -0.1289941817522049, -0.04485996440052986, -0.0004159538948442787, -0.03249360993504524, -0.06961815804243088, -0.8161231279373169, -1.1782971620559692, -0.06174854189157486, -2.2015867233276367, -0.07615255564451218, -0.022371888160705566, -2.214698553085327, -0.40136632323265076, -0.03455882892012596, -0.0008200620068237185, -1.8553038835525513, -0.011120130307972431, -0.05703146010637283, -0.0003805628512054682, -0.1527162492275238, -0.058138053864240646, -1.2671635150909424, -1.271432638168335, -1.861980676651001, -0.20663972198963165, -0.056471340358257294, -1.6815845966339111, -2.0200018882751465, -0.5424107313156128, -2.746026039123535, -0.06050983816385269, -0.004069144371896982, -2.165410041809082, -0.3610574007034302, -0.8795586228370667, -0.22966720163822174, -0.00523126358166337, -0.01768943853676319, -0.00036971885128878057, -0.17100535333156586, -0.0809917151927948, -1.2448623180389404, -0.29192349314689636, -0.3607880175113678, -0.3012222647666931, -0.27875182032585144, -0.000442407006630674, -0.965074896812439, -0.000962151971179992, -0.009062940254807472, -0.21460182964801788, -0.048952456563711166, -0.029277609661221504, -0.001023483811877668, -1.7929794788360596, -0.0005026984144933522, -0.013923300430178642, -3.969590397900902e-05, -0.0011726891389116645, -2.861018856492592e-06, -1.311301275563892e-06, -0.6022974848747253, -0.0617227628827095, -0.3439335525035858, -0.12848858535289764, -0.0014349650591611862, -0.0005041282274760306, -0.039734289050102234, -0.004896435420960188, -0.005345930811017752, -0.056469764560461044, -2.4657750129699707, -0.0016307639889419079, -0.3943205773830414, -0.1632968634366989, -0.8886985182762146, -0.1143689975142479, -0.10714124888181686, -0.029745209962129593, -0.01819409430027008, -0.009846214205026627, -0.018366273492574692, -0.00038842763751745224, -0.07513894140720367, -0.15262927114963531, -0.0023449561558663845, -0.0007659838884137571, -0.7687350511550903, -1.570720911026001, -2.7894584491150454e-05, -2.861018856492592e-06, -0.00010322991875000298, -0.00021908267808612436, -2.462467908859253, -0.011783165857195854, -0.013829953037202358, -0.0011862630490213633, -0.003453127108514309, -0.00022742546570952982, -0.22763024270534515, -0.08747156709432602, -0.10096842050552368, -0.009413381107151508, -0.10644466429948807, -0.05045844987034798, -0.019065577536821365, -0.3858031630516052, -0.03893762826919556, -0.0017765468219295144, -0.005725768860429525, -0.24544596672058105, -0.02414768375456333, -0.008784223347902298, -0.0007351318490691483, -0.00011514954530866817, -0.0001294529065489769, -0.00010334911348763853, -0.0008469808381050825, -0.026598121970891953, -0.6232587695121765, -0.024133486673235893, -0.04165622591972351, -1.0454050302505493, -0.9485005140304565, -0.01983112469315529, -0.11439972370862961, -1.9311366081237793, -2.157252550125122, -0.6969633102416992, -0.051717016845941544, -0.26462361216545105, -0.12007346749305725, -0.027048295363783836, -0.00023636408150196075, -0.6887611746788025, -0.07592154294252396, -0.558408796787262, -0.24804799258708954, -0.000819347333163023], "finish_reason": "length"}], "metrics": {"energy": 263.0104957036972, "energy_per_token": 1.0273847488425671, "time": 11.353339, "time_per_token": 0.04434898046875}}
{"outputs": [{"text": "# Tokenizing the text\n    words = re.split(\"\\\\W+\", text)\n\n    # Deleting the stopwords\n    stop_words = stopwords.words('english')\n    words = [word for word in words if word.lower() not in stop_words]\n\n    # Deleting consecutive words\n    words = [\" \".join([word for word in words_tuple if len(word) > 2]) for words_tuple in zip(*[re.findall(r'\\b\\w{%i}\\w*\\b' % i for i in range(n, n + 1)] for n in range(len(words) - 1))])]\n\n    # Removing duplicates\n    words = np.unique(words)\n\n    # Generating a co-occurrence matrix\n    cv = CountVectorizer(n_features=len(words))\n    X = cv.fit_transform(words)\n\n    # Plotting the co-occurrence matrix\n    plt.figure(figsize=(15, 15))\n    ax = plt.gca()\n    ax", "tokens": ["#", " Token", "izing", " the", " text", "\n", "    ", "words", " =", " re", ".", "split", "(", "\"", "\\\\", "W", "+", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " De", "le", "ting", " the", " stop", "words", "\n", "    ", "stop", "_", "words", " =", " stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " stop", "_", "words", "]", "\n", "\n", "    ", "#", " De", "le", "ting", " consecutive", " words", "\n", "    ", "words", " =", " [", "\"", " \"", ".", "join", "([", "word", " for", " word", " in", " words", "_", "tuple", " if", " len", "(", "word", ")", " >", " ", "2", "])", " for", " words", "_", "tuple", " in", " zip", "(*", "[", "re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "{", "%", "i", "}\\", "w", "*\\", "b", "'", " %", " i", " for", " i", " in", " range", "(", "n", ",", " n", " +", " ", "1", ")]", " for", " n", " in", " range", "(", "len", "(", "words", ")", " -", " ", "1", "))", "]", ")]", "\n", "\n", "    ", "#", " Rem", "oving", " dup", "licates", "\n", "    ", "words", " =", " np", ".", "unique", "(", "words", ")", "\n", "\n", "    ", "#", " Gener", "ating", " a", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "n", "_", "features", "=", "len", "(", "words", "))", "\n", "    ", "X", " =", " cv", ".", "fit", "_", "transform", "(", "words", ")", "\n", "\n", "    ", "#", " Plot", "ting", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "1", "5", ",", " ", "1", "5", "))", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax"], "logprobs": [-0.4650316834449768, -5.274165153503418, -0.25064828991889954, -0.3319142758846283, -0.3299681842327118, -0.9918565154075623, -0.004067007452249527, -1.1342953443527222, -0.050076182931661606, -0.3604661822319031, -7.199982064776123e-05, -2.2319939136505127, -0.3301469385623932, -1.020279884338379, -1.9589251279830933, -0.36121007800102234, -0.1661301553249359, -0.013364377431571484, -0.00042381841922178864, -0.014356066472828388, -0.11767569184303284, -0.019675912335515022, -0.37672680616378784, -0.0006699701189063489, -0.025430716574192047, -3.34914493560791, -0.7011168003082275, -0.00010263393050990999, -1.2680259943008423, -0.7266401052474976, -0.14634470641613007, -0.6892697811126709, -0.0014974582009017467, -0.25641849637031555, -0.5501673817634583, -0.05914308503270149, -0.019179604947566986, -1.4820541143417358, -9.500529267825186e-05, -0.0030604214407503605, -0.00296926312148571, -1.0303953886032104, -0.03275183588266373, -7.867782187531702e-06, -0.0003256267518736422, -0.019918888807296753, -0.02213766798377037, -0.5284099578857422, -0.16260682046413422, -0.029504260048270226, -0.151249960064888, -0.21056197583675385, -0.00026079590315930545, -0.00018416139937471598, -0.0030772972386330366, -0.0065650735050439835, -0.07335513085126877, -0.9002560973167419, -0.025610370561480522, -0.0013619918609037995, -0.005365732125937939, -8.21318244561553e-05, -0.00947148073464632, -0.0031680890824645758, -9.536697689327411e-06, -0.018870355561375618, -0.0012973472476005554, -0.06188615411520004, -0.0005277194431982934, -0.02180308848619461, -2.142277240753174, -0.06186094135046005, -5.6980417866725475e-05, -2.6161532402038574, -0.5135935544967651, -0.31907498836517334, -0.0012190061388537288, -0.46623721718788147, -0.17427827417850494, -0.13084125518798828, -2.579008102416992, -0.6196123957633972, -0.0013217531377449632, -0.0003623305819928646, -2.011310577392578, -0.6692975163459778, -0.2770220935344696, -0.03846478834748268, -0.0011794761521741748, -0.7143625617027283, -3.5300326347351074, -2.903106212615967, -0.496593713760376, -1.105633020401001, -0.0026467551942914724, -0.18536613881587982, -0.16632439196109772, -0.3996540606021881, -0.23761487007141113, -2.638413429260254, -0.24348866939544678, -0.3491610884666443, -0.01396973617374897, -0.0002739054325502366, -0.0002648479712661356, -0.008982723578810692, -0.3706519305706024, -0.24866825342178345, -0.1916913241147995, -1.3074085712432861, -4.279521817807108e-05, -1.2473232746124268, -0.004880539141595364, -0.06045934185385704, -0.9345763921737671, -1.5364625453948975, -0.6774712204933167, -0.15239264070987701, -0.09290600568056107, -0.24070148169994354, -1.9775094985961914, -2.28814697265625, -1.5621944665908813, -1.195909023284912, -1.5038987398147583, -0.014004532247781754, -0.04151202738285065, -0.02084701508283615, -0.4810809791088104, -0.4012110233306885, -0.002465900732204318, -0.00043442347669042647, -0.03652222082018852, -0.0007232195930555463, -1.2994383573532104, -0.05349721387028694, -0.9551618695259094, -0.44169512391090393, -0.005031542386859655, -0.10108048468828201, -0.19050216674804688, -1.5090551376342773, -0.8512604236602783, -0.7189683318138123, -0.024046557024121284, -0.0015495923580601811, -1.9604051113128662, -0.0011294659925624728, -0.015534351579844952, -0.5000348091125488, -0.20721285045146942, -1.9371474981307983, -0.17858266830444336, -0.4746571481227875, -0.04077411815524101, -0.13573169708251953, -0.004349890165030956, -0.22970661520957947, -0.0008108903421089053, -0.07349802553653717, -3.5250179767608643, -0.016418591141700745, -1.615155816078186, -0.010008508339524269, -0.24243740737438202, -0.0009525052737444639, -0.12212510406970978, -0.040484871715307236, -2.879376173019409, -2.932505594799295e-05, -0.23887795209884644, -0.06360550969839096, -0.1368911862373352, -0.05505099147558212, -0.08739303052425385, -0.11491058021783829, -0.0004659997357521206, -0.04701903089880943, -1.0461379289627075, -0.0013013951247557998, -1.8695957660675049, -1.2697830200195312, -0.020709706470370293, -0.0029779395554214716, -0.009052780456840992, -0.001262344536371529, -0.011022747494280338, -0.3257255256175995, -0.0023286626674234867, -1.0309784412384033, -0.030229477211833, -0.0004273931554052979, -2.3007127310847864e-05, -0.0002743821241892874, -0.2024136781692505, -2.1197099685668945, -0.0017951102927327156, -0.7117332220077515, -0.05151040479540825, -0.08180566877126694, -7.879423355916515e-05, -0.0014791273279115558, -0.7300089001655579, -0.029428908601403236, -0.012949539348483086, -2.0880746841430664, -0.018741199746727943, -0.0040738931857049465, -4.3987260141875595e-05, -0.02131250500679016, -0.001682177186012268, -3.707340147229843e-05, -0.0850684642791748, -0.00863579474389553, -0.007741212844848633, -0.1582624614238739, -1.4915640354156494, -0.00042358008795417845, -0.13508108258247375, -0.7608169913291931, -0.010284760035574436, -0.07506849616765976, -0.2600749135017395, -0.0032109867315739393, -0.00048673225683160126, -0.003078129142522812, -0.0011850723531097174, -0.005249525420367718, -0.07765920460224152, -0.0032526941504329443, -2.609098434448242, -0.002798809204250574, -0.3025268316268921, -0.11755179613828659, -0.046360865235328674, -0.00024637524620629847, -0.01920848898589611, -0.6418411135673523, -1.833998680114746, -0.0048444755375385284, -0.05719989910721779, -0.05433599650859833, -0.09336552768945694, -0.05248139798641205, -0.006644062697887421, -0.023432713001966476, -0.5765510201454163, -0.018644673749804497, -0.035191550850868225, -0.0006785474251955748, -1.7319352626800537, -0.013006728142499924, -0.0032939244993031025, -0.008796866983175278, -0.10987118631601334, -0.33450162410736084], "finish_reason": "length"}], "metrics": {"energy": 258.4965762815475, "energy_per_token": 1.009752251099795, "time": 11.362013, "time_per_token": 0.04438286328125}}
{"outputs": [{"text": "# Create a count vectorizer using the default stopwords and n-grams up to n\n    vectorizer = CountVectorizer(stop_words='english', ngram_range=(1, n))\n\n    # Count the occurrences of n-grams in the input text\n    counts = vectorizer.fit_transform([text]).toarray()\n\n    # Create a Pandas DataFrame from the counts\n    df = pd.DataFrame(counts, index=[text], columns=vectorizer.get_feature_names())\n\n    # Create a new figure and subplot\n    fig, ax = plt.subplots()\n\n    # Plot the heatmap\n    sns.heatmap(df, cmap='Blues', annot=True, linewidths=0.5, cbar_kws={'label': 'Frequency'}, square=True, ax=ax, vmax=counts.max())\n    ax.set_title('Co-occurrence Matrix')\n    ax.set(xlabel='Words', ylabel='Words')\n\n    # Return the DataFrame and the subplot\n    return df, ax", "tokens": ["#", " Create", " a", " count", " vector", "izer", " using", " the", " default", " stop", "words", " and", " n", "-", "grams", " up", " to", " n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " n", "gram", "_", "range", "=(", "1", ",", " n", "))", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " n", "-", "grams", " in", " the", " input", " text", "\n", "    ", "counts", " =", " vector", "izer", ".", "fit", "_", "transform", "([", "text", "])", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Create", " a", " Pand", "as", " Data", "Frame", " from", " the", " counts", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "counts", ",", " index", "=[", "text", "]", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "#", " Create", " a", " new", " figure", " and", " sub", "plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "\n", "    ", "#", " Plot", " the", " heat", "map", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "df", ",", " c", "map", "='", "Bl", "ues", "'", ",", " annot", "=", "True", ",", " linewidth", "s", "=", "0", ".", "5", ",", " c", "bar", "_", "k", "ws", "={", "'", "label", "':", " '", "F", "requency", "'}", ",", " square", "=", "True", ",", " ax", "=", "ax", ",", " v", "max", "=", "counts", ".", "max", "())", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Co", "-", "occ", "ur", "rence", " Matrix", "')", "\n", "    ", "ax", ".", "set", "(", "xlabel", "='", "Words", "'", ",", " y", "label", "='", "Words", "')", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", " and", " the", " sub", "plot", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.4650316834449768, -3.9184491634368896, -0.48146164417266846, -3.2544689178466797, -0.05906982347369194, -0.03827698901295662, -3.7663378715515137, -0.9370125532150269, -1.8733125925064087, -0.48493969440460205, -0.40075886249542236, -1.5757880210876465, -1.0875370502471924, -1.0803227424621582, -0.43216007947921753, -3.7318434715270996, -0.21291860938072205, -0.8433021903038025, -0.8219832181930542, -0.001312943291850388, -0.8248445391654968, -0.006009367760270834, -0.001964426366612315, -0.0005231918767094612, -2.455681169521995e-05, -0.000205018965061754, -0.012623642571270466, -0.2910006642341614, -0.24242262542247772, -0.00014435203047469258, -0.8588189482688904, -0.004429528955370188, -2.7418097943154862e-06, -0.003371628001332283, -0.0004847066884394735, -0.0932985246181488, -0.1473691463470459, -1.4185804502631072e-05, -0.002208415186032653, -0.003422595327720046, -0.24818742275238037, -0.00026723151677288115, -0.06910599023103714, -0.046262871474027634, -0.003885578364133835, -0.4724627435207367, -0.00037746457383036613, -0.009983841329813004, -3.2896456718444824, -0.29515811800956726, -0.7517714500427246, -0.0027610058896243572, -1.023334264755249, -0.1304273158311844, -0.038215260952711105, -0.12855714559555054, -0.04787735268473625, -1.591902732849121, -0.09038025140762329, -0.1649889200925827, -0.0002824861148837954, -1.1588245630264282, -0.02300082892179489, -0.013491288758814335, -3.731181277544238e-05, -1.168244216387393e-05, -0.0023651740048080683, -0.00018606838420964777, -6.460934673668817e-05, -0.13874034583568573, -0.007841281592845917, -0.0529019795358181, -1.0177826881408691, -0.1752355843782425, -0.0117805739864707, -0.14815686643123627, -0.07692045718431473, -0.12727123498916626, -0.0008935510995797813, -0.018961947411298752, -0.8240453600883484, -0.16135038435459137, -3.4298441410064697, -1.8954096958623268e-05, -0.2698934078216553, -0.0027312852907925844, -1.0330791473388672, -0.008373982273042202, -0.8484498262405396, -0.5144816040992737, -0.0003280101518612355, -0.04975365847349167, -0.00843675248324871, -0.004685850348323584, -0.0007595514762215316, -0.00023052419419400394, -0.006837305147200823, -0.0474352091550827, -0.18258531391620636, -0.9753463268280029, -1.2369234561920166, -0.5365021228790283, -0.18956813216209412, -0.0003589939442463219, -0.004232853185385466, -0.026386599987745285, -0.005664132069796324, -4.434487345861271e-05, -2.95634672511369e-05, -0.02931951731443405, -7.152555099310121e-07, -0.00015364897262770683, -1.7881377516459906e-06, -0.009256778284907341, -0.295696884393692, -0.030963415279984474, -0.056704528629779816, -0.000713213172275573, -0.019253861159086227, -0.6350502371788025, -0.2502376437187195, -3.287797212600708, -2.1021361351013184, -0.5066924691200256, -2.924311399459839, -0.056244634091854095, -0.999787449836731, -0.0003768687602132559, -0.10941128432750702, -0.023084938526153564, -0.014409884810447693, -0.010090057738125324, -0.00020787939138244838, -3.302042750874534e-05, -0.00040820849244482815, -7.056941103655845e-05, -0.6660716533660889, -0.0003631647559814155, -0.048721201717853546, -0.0002517383254598826, -0.014189071021974087, -0.5695748925209045, -0.04458010569214821, -2.90362286567688, -0.02660740725696087, -1.432163953781128, -0.00016556799528189003, -0.9645546674728394, -0.0960543304681778, -0.009337681345641613, -0.018310796469449997, -3.45700973412022e-05, -0.00022539935889653862, -0.11390136927366257, -0.06001352146267891, -1.068770408630371, -0.0826905220746994, -0.26128673553466797, -1.3375060558319092, -0.0015797051601111889, -0.14095589518547058, -0.002577794250100851, -1.58366060256958, -0.0003967689990531653, -0.027565762400627136, -0.17013177275657654, -2.8643150329589844, -0.07604164630174637, -0.00031156453769654036, -0.44851911067962646, -0.5180438756942749, -0.046491507440805435, -0.060431960970163345, -1.5965099334716797, -8.11782301752828e-05, -0.42090004682540894, -0.04911318048834801, -0.004536100197583437, -0.688244640827179, -0.0027554186526685953, -0.624436616897583, -0.00042083943844772875, -0.07458843290805817, -1.4594917297363281, -0.11081308871507645, -1.1748600006103516, -0.0014799605123698711, -2.3850796222686768, -0.0012759171659126878, -0.016725201159715652, -0.4720458388328552, -0.09567339718341827, -0.004560664761811495, -0.0009526243666186929, -1.6974921226501465, -1.6398887634277344, -1.6046364307403564, -0.01450247410684824, -1.8393564224243164, -0.021219726651906967, -0.008682594634592533, -0.4258171021938324, -0.010816632770001888, -1.0775340795516968, -0.3626215159893036, -0.002683255122974515, -0.0878702700138092, -0.07225649803876877, -0.3080146014690399, -0.6032625436782837, -1.467518925666809, -0.007909643463790417, -0.35438674688339233, -0.01279678475111723, -0.030714089050889015, -0.11390296369791031, -0.28171125054359436, -0.017590701580047607, -0.5077273845672607, -0.22442103922367096, -0.0010961245279759169, -0.07649175077676773, -2.2078423500061035, -0.6511292457580566, -0.23577910661697388, -0.9448428750038147, -0.3311750292778015, -0.00013457823661156, -0.018465986475348473, -0.0009448830969631672, -0.0012471048394218087, -0.09849235415458679, -0.6318299174308777, -0.006435029674321413, -0.6360090970993042, -0.0017799977213144302, -0.49225419759750366, -0.24449896812438965, -0.025174079462885857, -0.5418873429298401, -0.0006650857976637781, -0.03763554245233536, -0.8887510895729065, -2.140836715698242, -0.0035391333512961864, -0.39732134342193604, -0.000680691737215966, -0.003824540413916111, -0.08209935575723648, -0.0029810296837240458, -0.006078566424548626, -0.6024656295776367, -0.019717639312148094, -1.37147855758667], "finish_reason": "stop"}], "metrics": {"energy": 270.81234683895116, "energy_per_token": 1.0661903418856344, "time": 11.347767, "time_per_token": 0.04467624803149606}}
{"outputs": [{"text": "# First removing duplicate consecutive words using regular expression\n    clean_text = re.sub(r\"\\s+\", \" \", text)\n\n    # Extracting n-grams\n    n_grams = n_gram_extraction(clean_text, n)\n\n    # Generating the co-occurrence matrix\n    co_occurrence_matrix = co_occurrence_matrix_generation(n_grams)\n\n    # Plotting the co-occurrence matrix using matplotlib.pyplot\n    ax = co_occurrence_plot(co_occurrence_matrix)\n\n    return co_occurrence_matrix, ax", "tokens": ["#", " First", " removing", " duplicate", " consecutive", " words", " using", " regular", " expression", "\n", "    ", "clean", "_", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "+", "\"", ",", " \"", " \"", ",", " text", ")", "\n", "\n", "    ", "#", " Ext", "racting", " n", "-", "grams", "\n", "    ", "n", "_", "grams", " =", " n", "_", "gram", "_", "ext", "raction", "(", "clean", "_", "text", ",", " n", ")", "\n", "\n", "    ", "#", " Gener", "ating", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "co", "_", "occ", "ur", "rence", "_", "matrix", " =", " co", "_", "occ", "ur", "rence", "_", "matrix", "_", "generation", "(", "n", "_", "grams", ")", "\n", "\n", "    ", "#", " Plot", "ting", " the", " co", "-", "occ", "ur", "rence", " matrix", " using", " matplotlib", ".", "py", "plot", "\n", "    ", "ax", " =", " co", "_", "occ", "ur", "rence", "_", "plot", "(", "co", "_", "occ", "ur", "rence", "_", "matrix", ")", "\n", "\n", "    ", "return", " co", "_", "occ", "ur", "rence", "_", "matrix", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.4650316834449768, -5.16158390045166, -3.3331875801086426, -1.6084450483322144, -0.6713723540306091, -0.047616977244615555, -2.7753782272338867, -1.5855004787445068, -0.6424120664596558, -0.35663074254989624, -0.007514425087720156, -3.549816608428955, -0.12690547108650208, -0.07266108691692352, -0.01426651980727911, -0.04734209552407265, -8.77341881277971e-05, -0.0674106702208519, -0.05284103751182556, -0.05976179242134094, -0.9861509203910828, -0.24245087802410126, -1.2291160821914673, -0.3375532925128937, -0.05006235092878342, -0.0002942844294011593, -0.1081230640411377, -0.010695750825107098, -0.0002494739310350269, -0.04731981083750725, -0.17095279693603516, -0.23694048821926117, -0.5287140607833862, -0.0005112771177664399, -0.038136545568704605, -3.9856631755828857, -0.0664481595158577, -1.802213191986084, -0.2501685917377472, -0.09564317017793655, -1.8694510459899902, -0.001955979270860553, -1.4500559568405151, -0.02440912090241909, -0.2694442570209503, -0.026672177016735077, -3.2596964836120605, -2.262094259262085, -0.5887868404388428, -0.4455917477607727, -0.3202406167984009, -0.5088371634483337, -0.011010721325874329, -0.2611657381057739, -0.000750617531593889, -0.00015793983766343445, -0.1522931456565857, -0.019818035885691643, -0.2842015326023102, -0.007798581849783659, -0.10281006991863251, -0.0005921755800954998, -0.027143318206071854, -2.218698024749756, -0.003091201651841402, -0.7238883376121521, -0.7898393869400024, -0.041993144899606705, -0.008009813725948334, -0.01941615529358387, -0.0042352271266281605, -0.027344239875674248, -0.5305756330490112, -0.0015769677702337503, -0.5829373002052307, -0.10381312668323517, -0.05925982445478439, -0.184294655919075, -0.21611253917217255, -0.21073539555072784, -0.11286036670207977, -0.1813732385635376, -0.9485422372817993, -0.040315769612789154, -0.01080873142927885, -0.029512710869312286, -0.056951623409986496, -0.14132358133792877, -0.2107226550579071, -0.20276150107383728, -1.014039397239685, -0.004545831121504307, -0.07783611118793488, -0.023570112884044647, -0.00023112009512260556, -0.759035050868988, -0.0037287012673914433, -0.09874392300844193, -0.00043108707177452743, -0.1020665392279625, -0.6137793064117432, -0.015373891219496727, -0.03867525979876518, -0.13559283316135406, -0.007974689826369286, -0.0005827635759487748, -0.002184030832722783, -0.001304609584622085, -0.0070455437526106834, -2.1812424659729004, -0.23876163363456726, -1.878983974456787, -0.10692017525434494, -0.0006451908848248422, -0.2929394245147705, -0.006461442448198795, -1.535683512687683, -0.04562174528837204, -2.2001264095306396, -0.004382173530757427, -0.0019557413179427385, -0.003925001714378595, -0.029538752511143684, -0.004745411686599255, -1.964644193649292, -0.3178808391094208, -0.16835984587669373, -0.0001532914029667154, -1.645074735279195e-05, -6.55629628454335e-05, -0.0004450284468475729, -0.0012387705501168966, -0.0005740663618780673, -0.46117645502090454, -0.0017736908048391342, -0.14757035672664642, -0.00031871485407464206, -0.510979175567627, -0.3626221716403961, -3.3854863431770355e-05, -1.156323378381785e-05, -0.00022432672267314047, -0.0006233894382603467, -0.0002867764269467443, -0.0006899837171658874, -0.002757439622655511, -0.00431178929284215, -0.005210510455071926, -0.00908290408551693, -0.11680132895708084], "finish_reason": "stop"}], "metrics": {"energy": 157.4713423461914, "energy_per_token": 1.0498089489746092, "time": 6.516178, "time_per_token": 0.043441186666666666}}
{"outputs": [{"text": "# 1) Splitting the text into words, removing non-alpha characters, lowercasing it and splitting it into words again,\n    #    and removing duplicate consecutive words\n    # 2) Generating a square co-occurrence matrix of words,\n    #    using n-gram sizes n in CountVectorizer\n    # 3) Plotting the matrix as a heatmap\n    # 4) Returning the dataframe and the plot\n\n    # 1)\n    text = re.findall(\"[a-z]+\", text.lower())\n    # print(text)\n\n    # 2)\n    vectorizer = CountVectorizer(n_gram_range=(n, n))\n    vector = vectorizer.fit_transform(text)\n\n    # 3)\n    df = pd.DataFrame(vector.todense(), index=vectorizer.get_feature_names(), columns=vectorizer.get_feature_names())\n\n    # 4)\n    fig, ax = plt.subplots(figsize=(8, 8))\n    # ax.imshow(df, cmap=", "tokens": ["#", " ", "1", ")", " Split", "ting", " the", " text", " into", " words", ",", " removing", " non", "-", "alpha", " characters", ",", " lower", "c", "asing", " it", " and", " splitting", " it", " into", " words", " again", ",", "\n", "    ", "#", "    ", "and", " removing", " duplicate", " consecutive", " words", "\n", "    ", "#", " ", "2", ")", " Gener", "ating", " a", " square", " co", "-", "occ", "ur", "rence", " matrix", " of", " words", ",", "\n", "    ", "#", "    ", "using", " n", "-", "gram", " sizes", " n", " in", " Count", "Vector", "izer", "\n", "    ", "#", " ", "3", ")", " Plot", "ting", " the", " matrix", " as", " a", " heat", "map", "\n", "    ", "#", " ", "4", ")", " Return", "ing", " the", " data", "frame", " and", " the", " plot", "\n", "\n", "    ", "#", " ", "1", ")", "\n", "    ", "text", " =", " re", ".", "find", "all", "(", "\"", "[", "a", "-", "z", "]+", "\"", ",", " text", ".", "lower", "())", "\n", "    ", "#", " print", "(", "text", ")", "\n", "\n", "    ", "#", " ", "2", ")", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "n", "_", "gram", "_", "range", "=(", "n", ",", " n", "))", "\n", "    ", "vector", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", ")", "\n", "\n", "    ", "#", " ", "3", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "vector", ".", "t", "od", "ense", "()", ",", " index", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "#", " ", "4", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "8", "))", "\n", "    ", "#", " ax", ".", "im", "show", "(", "df", ",", " c", "map", "="], "logprobs": [-0.4650316834449768, -3.3014228343963623, -0.4553256332874298, -2.0800440311431885, -2.9573864936828613, -1.1378390789031982, -0.29566505551338196, -0.5679540038108826, -0.3550737798213959, -0.6998264193534851, -3.3844335079193115, -0.5648131370544434, -3.445802927017212, -0.028017008677124977, -2.10996675491333, -0.6313354969024658, -0.6948959827423096, -3.215648889541626, -0.46369317173957825, -0.0021971152164041996, -3.6522045135498047, -1.653106451034546, -3.497783660888672, -0.5178688168525696, -0.6426142454147339, -2.1819534301757812, -1.9374935626983643, -3.0806655883789062, -1.0074011087417603, -0.008692994713783264, -0.121866375207901, -1.297640323638916, -1.1352530717849731, -0.720742404460907, -2.5055103302001953, -0.8365601301193237, -0.031579699367284775, -1.852299451828003, -0.04277823865413666, -3.1298112869262695, -0.5119982361793518, -0.4100378453731537, -0.00562536995857954, -1.7367130517959595, -0.007726544979959726, -0.6502446532249451, -1.163020372390747, -0.04832611605525017, -0.007266165688633919, -0.0010843356139957905, -0.002127052517607808, -0.0002797450579237193, -0.004102624487131834, -0.31309667229652405, -0.05624598637223244, -1.5458849668502808, -2.781836748123169, -0.009589914232492447, -0.06188962608575821, -0.42775726318359375, -1.903551459312439, -3.363147735595703, -1.7225584983825684, -1.493723750114441, -3.7314774990081787, -2.2044825553894043, -4.552350997924805, -2.1590116024017334, -0.007406987715512514, -0.017153825610876083, -1.3666248321533203, -0.04271576181054115, -0.12208501249551773, -0.041437916457653046, -0.0040984689258039, -0.0007979070069268346, -0.5765129923820496, -0.019016219303011894, -0.10062449425458908, -3.3335330486297607, -3.276371717453003, -0.15848152339458466, -0.4484330713748932, -0.21298769116401672, -0.9541284441947937, -0.5056334137916565, -0.5684034824371338, -0.3342113196849823, -0.05375990271568298, -0.0022351776715368032, -0.2945825457572937, -0.1453019082546234, -0.14601017534732819, -2.055326461791992, -0.3014799654483795, -0.23706623911857605, -1.1165341138839722, -0.33202674984931946, -1.6267216205596924, -0.4743458032608032, -0.0024525821208953857, -0.4118897616863251, -0.8670987486839294, -0.024784347042441368, -0.1803201586008072, -1.262078046798706, -0.0158772524446249, -1.6318156719207764, -0.22007277607917786, -0.15855243802070618, -0.00013326710904948413, -1.7845405340194702, -0.00010632903286023065, -0.1469694972038269, -1.8417768478393555, -0.744770348072052, -0.23014914989471436, -0.0003060825983993709, -0.0009017692063935101, -0.4378267228603363, -0.07749980688095093, -0.00042524831951595843, -0.07082664966583252, -0.18300940096378326, -0.02576547861099243, -0.04884665459394455, -0.06712434440851212, -0.21731145679950714, -3.0690910816192627, -2.505899429321289, -0.03866837918758392, -0.29518383741378784, -0.01970595121383667, -0.08134926855564117, -0.8742537498474121, -0.000837571220472455, -0.11493097990751266, -0.09407725185155869, -0.06836935877799988, -0.01641390100121498, -0.08770080655813217, -0.02620476298034191, -1.902011513710022, -0.038138266652822495, -0.007120470982044935, -0.0004974558250978589, -1.0490362910786644e-05, -6.985420623095706e-05, -0.012817498296499252, -1.2409288883209229, -0.0017916593933477998, -0.028704963624477386, -0.0009178477921523154, -0.0026112052146345377, -0.030848296359181404, -0.6449981927871704, -0.006823334377259016, -0.16258330643177032, -0.2142758071422577, -0.04280416667461395, -0.0398431234061718, -2.180635929107666, -1.6303935050964355, -0.007184621877968311, -4.756337511935271e-05, -5.209310256759636e-05, -0.015688801184296608, -0.010043677873909473, -9.560128091834486e-05, -0.7437325119972229, -0.00762220611795783, -0.0025997909251600504, -0.043515127152204514, -1.4242507219314575, -0.0009128456003963947, -0.21877947449684143, -0.2510409653186798, -0.014024751260876656, -0.0052904365584254265, -0.031985729932785034, -0.0060546319000422955, -0.7830173969268799, -0.03515851870179176, -0.01414264552295208, -0.003480212762951851, -0.005508007947355509, -0.0036213314160704613, -0.4749200940132141, -0.05775758624076843, -0.623717725276947, -0.00010799778101500124, -0.006523859221488237, -0.05457792058587074, -0.003310440108180046, -2.2332444190979004, -0.021225329488515854, -0.5429597496986389, -0.011232592165470123, -4.362964682513848e-05, -0.05300384759902954, -4.6491513785440475e-06, -0.0003580405900720507, -1.4305104514278355e-06, -0.006235430482774973, -0.227671816945076, -0.004296121187508106, -0.04208847135305405, -0.004330305848270655, -0.0040197535417973995, -0.0010600429959595203, -0.0001284993631998077, -6.735097849741578e-05, -3.349725011503324e-05, -1.4662635294371285e-05, -3.2186455882765586e-06, -7.86750388215296e-05, -0.01585848070681095, -0.03191852942109108, -1.3292499780654907, -0.0013402060139924288, -0.3345983624458313, -0.21021008491516113, -0.06683012843132019, -0.002671128138899803, -0.020177345722913742, -0.008378948085010052, -1.5006376504898071, -0.17907413840293884, -0.03121475875377655, -0.008910772390663624, -0.0007826602668501437, -0.0004960260121151805, -0.0019568121060729027, -7.974783511599526e-05, -0.4915958344936371, -0.13790114223957062, -0.0005491655902005732, -0.02764148823916912, -1.906882643699646, -0.009472071193158627, -0.08068758994340897, -0.15569277107715607, -0.031208287924528122, -0.007495849393308163, -0.12362257391214371, -2.814769744873047, -2.1085047721862793, -0.27361539006233215, -1.4782795906066895, -0.0002890407631639391, -0.00985034555196762, -0.37950649857521057, -0.8478068709373474, -0.19277732074260712, -0.0004213160718791187, -1.0779447555541992], "finish_reason": "length"}], "metrics": {"energy": 288.86218259048474, "energy_per_token": 1.128367900744081, "time": 11.133497, "time_per_token": 0.04349022265625}}
{"outputs": [{"text": "# Creating a list of words from the text string\n    words = re.findall(r'\\w+', text)\n\n    # Creating a dictionary to store the count of words for each word\n    word_count = {}\n    for word in words:\n        word_count[word] = word_count.get(word, 0) + 1\n\n    # Creating a list of top n-grams from the word_count dictionary\n    n_grams = list(word_count.keys())\n\n    # Creating a list of all n-grams using the n-gram function\n    # using the word_count dictionary and n parameter\n    all_ngrams = n_grams_generator(n, n_grams)\n\n    # Creating a co-occurrence matrix by iterating over all n-grams and\n    # adding the count of each n-gram to the corresponding n-gram\n    co_occurrence = []\n    for i in range(len(n_grams)):\n        ngram = n_grams[i]\n        ngram_count = word_count.get(ngram, 0)\n        co_occ", "tokens": ["#", " Creating", " a", " list", " of", " words", " from", " the", " text", " string", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ")", "\n", "\n", "    ", "#", " Creating", " a", " dictionary", " to", " store", " the", " count", " of", " words", " for", " each", " word", "\n", "    ", "word", "_", "count", " =", " {}", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "word", "_", "count", "[", "word", "]", " =", " word", "_", "count", ".", "get", "(", "word", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "    ", "#", " Creating", " a", " list", " of", " top", " n", "-", "grams", " from", " the", " word", "_", "count", " dictionary", "\n", "    ", "n", "_", "grams", " =", " list", "(", "word", "_", "count", ".", "keys", "())", "\n", "\n", "    ", "#", " Creating", " a", " list", " of", " all", " n", "-", "grams", " using", " the", " n", "-", "gram", " function", "\n", "    ", "#", " using", " the", " word", "_", "count", " dictionary", " and", " n", " parameter", "\n", "    ", "all", "_", "ng", "rams", " =", " n", "_", "grams", "_", "generator", "(", "n", ",", " n", "_", "grams", ")", "\n", "\n", "    ", "#", " Creating", " a", " co", "-", "occ", "ur", "rence", " matrix", " by", " iter", "ating", " over", " all", " n", "-", "grams", " and", "\n", "    ", "#", " adding", " the", " count", " of", " each", " n", "-", "gram", " to", " the", " corresponding", " n", "-", "gram", "\n", "    ", "co", "_", "occ", "ur", "rence", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "n", "_", "grams", "))", ":", "\n", "        ", "ng", "ram", " =", " n", "_", "grams", "[", "i", "]", "\n", "        ", "ng", "ram", "_", "count", " =", " word", "_", "count", ".", "get", "(", "ng", "ram", ",", " ", "0", ")", "\n", "        ", "co", "_", "occ"], "logprobs": [-0.4650316834449768, -3.0310027599334717, -0.9594703912734985, -1.2831079959869385, -0.2167986035346985, -0.9736308455467224, -0.999452531337738, -0.0849997028708458, -0.9873709678649902, -1.518795132637024, -0.3673769235610962, -0.0036925957538187504, -0.2871508002281189, -0.12150918692350388, -0.3093469440937042, -4.637133679352701e-05, -0.11316348612308502, -5.209310256759636e-05, -0.04030672460794449, -0.0604306161403656, -0.2298739105463028, -0.3731824457645416, -0.007525901775807142, -4.160317621426657e-05, -0.00882392656058073, -0.09648848325014114, -0.00462225079536438, -0.13199974596500397, -0.0006504327175207436, -0.011623752303421497, -1.1903629302978516, -0.1408146619796753, -1.9332526922225952, -1.3584662675857544, -0.25880610942840576, -0.4314327538013458, -0.9654367566108704, -0.014470280148088932, -1.388718605041504, -2.971130609512329, -0.07977388054132462, -0.6307389736175537, -0.7091002464294434, -0.000933807052206248, -0.32346683740615845, -0.0029137558303773403, -0.7790224552154541, -0.12603126466274261, -0.10022955387830734, -0.00043394684325903654, -0.1709289848804474, -0.033029258251190186, -0.07877803593873978, -0.0012877037515863776, -0.007101887371391058, -0.00011884459672728553, -0.000723576988093555, -0.002520481590181589, -0.6711899042129517, -0.05383242666721344, -0.0025273782666772604, -0.01740304008126259, -0.00047672350774519145, -0.005218693055212498, -3.731181277544238e-05, -0.4569161534309387, -0.008207284845411777, -0.0008942657150328159, -0.0003121604095213115, -0.007380954921245575, -1.490105023549404e-05, -0.0008550802012905478, -0.00018571082910057157, -0.0017078827368095517, -0.006812915205955505, -0.00438668392598629, -0.000512111175339669, -0.0005093707586638629, -3.7431014789035544e-05, -0.004306566435843706, -0.02809130772948265, -0.0018168861279264092, -0.01736004464328289, -0.5522322654724121, -0.09395799785852432, -0.434512734413147, -0.07647418975830078, -3.5245368480682373, -0.2380291223526001, -1.1383562088012695, -0.10563883185386658, -1.3294789791107178, -0.03756332769989967, -0.6104620695114136, -0.8391844630241394, -0.014045791700482368, -0.03695186600089073, -0.07975197583436966, -0.0014673429541289806, -2.047244071960449, -0.0066996002569794655, -0.20556294918060303, -0.017332863062620163, -2.471682548522949, -0.01861155964434147, -0.7566267251968384, -0.004944241140037775, -0.00015352977789007127, -0.08378291130065918, -0.03840341418981552, -0.0006014683749526739, -0.721221923828125, -1.4000717401504517, -0.0006834316882304847, -0.031171312555670738, -0.6739656925201416, -0.2589457929134369, -1.6742408275604248, -0.07235896587371826, -2.6077003479003906, -1.1519023180007935, -0.02701754681766033, -0.03407158702611923, -4.224514484405518, -1.0436410903930664, -0.8105178475379944, -0.8316454291343689, -0.6274082660675049, -1.2759451866149902, -0.5695604085922241, -0.0016751555958762765, -2.3674731254577637, -4.15125036239624, -0.7455682754516602, -3.0082478523254395, -0.2239132523536682, -0.04999794438481331, -0.06223693862557411, -1.7062857151031494, -1.257120132446289, -2.064743995666504, -0.15946200489997864, -0.009124722331762314, -1.3528271913528442, -0.0018642442300915718, -1.698028564453125, -0.016036927700042725, -0.01209979597479105, -2.2824716567993164, -1.5561782121658325, -0.4256649315357208, -1.1726187467575073, -2.155442953109741, -0.010701765306293964, -0.6746048927307129, -1.0062851905822754, -0.9212832450866699, -0.00648216949775815, -0.004273212049156427, -0.9113649725914001, -0.002688367385417223, -0.10119738429784775, -0.0004724340105894953, -0.027249004691839218, -0.35697150230407715, -0.22435541450977325, -2.7349605560302734, -0.028981195762753487, -0.0066784038208425045, -0.017103787511587143, -0.0015195977175608277, -0.02876531332731247, -2.8276419639587402, -2.702199935913086, -0.00483296811580658, -0.5833848714828491, -0.3777023255825043, -0.27347248792648315, -0.018774893134832382, -0.009942649863660336, -0.9093664884567261, -2.0518858432769775, -0.0003939091111533344, -0.0005521441926248372, -2.1231908798217773, -1.3765672445297241, -0.4064749479293823, -0.21760398149490356, -0.7385275363922119, -0.7230709195137024, -0.00536075234413147, -0.016711952164769173, -0.31635725498199463, -0.25055885314941406, -0.8398289680480957, -2.7904539108276367, -0.018915507942438126, -0.13651321828365326, -0.9026349782943726, -0.009890125133097172, -0.37053507566452026, -0.18189841508865356, -0.032051652669906616, -0.05010169744491577, -0.07781769335269928, -1.3037214279174805, -2.1805214881896973, -0.002034619450569153, -0.05771460384130478, -0.05063819885253906, -1.280439853668213, -0.2852870523929596, -0.3640080690383911, -0.0008871195605024695, -0.22694870829582214, -5.94836674281396e-05, -0.5910477638244629, -0.0005112771177664399, -0.0005595310358330607, -0.09372182935476303, -9.679325739853084e-05, -0.005573447793722153, -0.00857930164784193, -3.188241958618164, -0.13043704628944397, -0.3577911853790283, -0.2741462290287018, -0.0019165972480550408, -0.0008224442135542631, -0.0030718303751200438, -0.00044371772673912346, -0.0005645350320264697, -0.0028236540965735912, -0.025748051702976227, -2.5305449962615967, -0.08783740550279617, -0.009825793094933033, -0.20733657479286194, -0.006374621298164129, -0.16697242856025696, -4.6491513785440475e-06, -9.941560711013153e-05, -0.8415349125862122, -0.002103260951116681, -0.0005292683490552008, -0.021743135526776314, -0.012012049555778503, -0.08876286447048187, -0.005028814543038607, -0.001933373394422233, -0.00017176583060063422, -0.014106209389865398, -0.09305069595575333, -0.3558214604854584, -0.0015718498034402728, -0.0015901790466159582], "finish_reason": "length"}], "metrics": {"energy": 262.7934848279953, "energy_per_token": 1.0265370501093567, "time": 11.357127, "time_per_token": 0.04436377734375}}
{"outputs": [{"text": "# Split the text string into words\n    words = text.split()\n\n    # Remove duplicate words and stopwords\n    words_set = set(words)\n    stop_words = set(stopwords.words('english'))\n    words_set -= stop_words\n    words = [word for word in words_set if len(word) >= n]\n\n    # Generate a square co-occurrence matrix\n    co_occurrence_matrix = np.zeros((len(words), len(words)))\n    for i in range(len(words)):\n        for j in range(i + 1, len(words)):\n            co_occurrence_matrix[i, j] += words.count(f'{words[i]} {words[j]}')\n            co_occurrence_matrix[i, j] += words.count(f'{words[j]} {words[i]}')\n\n    # Convert the square co-occurrence matrix into a Pandas DataFrame and generate a plot\n    df = pd.DataFrame(co_occurrence_matrix)\n    df.columns = df.index =", "tokens": ["#", " Split", " the", " text", " string", " into", " words", "\n", "    ", "words", " =", " text", ".", "split", "()", "\n", "\n", "    ", "#", " Remove", " duplicate", " words", " and", " stop", "words", "\n", "    ", "words", "_", "set", " =", " set", "(", "words", ")", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "words", "_", "set", " -=", " stop", "_", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", "_", "set", " if", " len", "(", "word", ")", " >=", " n", "]", "\n", "\n", "    ", "#", " Generate", " a", " square", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "co", "_", "occ", "ur", "rence", "_", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "words", ")", ",", " len", "(", "words", ")))", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", "))", ":", "\n", "        ", "for", " j", " in", " range", "(", "i", " +", " ", "1", ",", " len", "(", "words", "))", ":", "\n", "            ", "co", "_", "occ", "ur", "rence", "_", "matrix", "[", "i", ",", " j", "]", " +=", " words", ".", "count", "(", "f", "'{", "words", "[", "i", "]}", " {", "words", "[", "j", "]}", "')", "\n", "            ", "co", "_", "occ", "ur", "rence", "_", "matrix", "[", "i", ",", " j", "]", " +=", " words", ".", "count", "(", "f", "'{", "words", "[", "j", "]}", " {", "words", "[", "i", "]}", "')", "\n", "\n", "    ", "#", " Convert", " the", " square", " co", "-", "occ", "ur", "rence", " matrix", " into", " a", " Pand", "as", " Data", "Frame", " and", " generate", " a", " plot", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "co", "_", "occ", "ur", "rence", "_", "matrix", ")", "\n", "    ", "df", ".", "columns", " =", " df", ".", "index", " ="], "logprobs": [-0.4650316834449768, -2.976839780807495, -1.7020761966705322, -0.3437676429748535, -2.7516489028930664, -0.09659218043088913, -0.7683546543121338, -0.3761507570743561, -0.001260677701793611, -0.0627291277050972, -0.01758601702749729, -1.1590548753738403, -0.0006897454150021076, -0.05290379002690315, -0.011867986992001534, -0.00350812915712595, -0.14086301624774933, -0.00034338299883529544, -0.005368578247725964, -0.48434609174728394, -0.5640159249305725, -1.753336787223816, -0.8986148834228516, -0.3934435248374939, -0.014782420359551907, -0.6888576745986938, -0.0006611545104533434, -0.6312313675880432, -1.6959872245788574, -1.5192570686340332, -0.0037292949855327606, -0.2932702302932739, -0.5575602650642395, -0.19032014906406403, -0.00828590802848339, -0.07707277685403824, -0.11191868782043457, -1.4913935661315918, -1.024794578552246, -0.024045510217547417, -0.011957395821809769, -0.19946090877056122, -0.0006450717919506133, -0.005881503224372864, -7.974783511599526e-05, -0.00029559535323642194, -0.002053059171885252, -0.3844372630119324, -0.022270115092396736, -5.602820692729438e-06, -0.0023088008165359497, -0.020826231688261032, -0.013380139134824276, -0.3494274616241455, -0.20994070172309875, -1.0653512477874756, -1.3999848365783691, -0.04323751479387283, -0.003918589558452368, -4.0531076592742465e-06, -0.011957631446421146, -0.524979293346405, -0.082614466547966, -0.2934933602809906, -2.127519369125366, -0.17468617856502533, -0.3693711757659912, -0.0013616346986964345, -0.00033146608620882034, -0.005160345695912838, -0.3359854817390442, -5.9126061387360096e-05, -0.22677113115787506, -0.5723221898078918, -7.378782902378589e-05, -0.02706790342926979, -0.049252431839704514, -1.336719274520874, -0.1475318819284439, -0.02919841930270195, -0.008134568110108376, -0.0486321821808815, -0.000291662581730634, -0.019167091697454453, -0.7600581645965576, -1.3428348302841187, -0.8839641809463501, -0.12864571809768677, -0.004826442804187536, -0.0003564914222806692, -0.0013942531077191234, -0.00014685506175737828, -0.0012994902208447456, -1.0975995063781738, -0.0017395378090441227, -1.8741984367370605, -0.5048085451126099, -0.06279865652322769, -0.08623579889535904, -0.21549969911575317, -0.6551632881164551, -0.05083433911204338, -0.005390276201069355, -0.33218786120414734, -1.3470558769768104e-05, -0.027345746755599976, -0.0879124104976654, -0.0023907432332634926, -3.123234637314454e-05, -0.0008201810996979475, -0.025972485542297363, -0.0012677022023126483, -0.0016576610505580902, -8.940656698541716e-06, -9.238292841473594e-05, -0.13985614478588104, -0.004011798650026321, -0.04885869100689888, -0.060647398233413696, -0.05078437551856041, -0.614948034286499, -0.0008868813747540116, -0.00011121608258690685, -0.009356576949357986, -6.079655122448457e-06, -0.0005323661607690156, -0.05087195709347725, -1.5258672647178173e-05, -0.0014418693026527762, -0.0006092122639529407, -0.04612024500966072, -0.0006822404102422297, -0.00026592056383378804, -0.00012242044613230973, -0.00011014331539627165, -0.4431973993778229, -0.3313637673854828, -0.0014260371681302786, -5.185469490243122e-05, -0.0035672858357429504, -0.0008361419313587248, -7.271740287251305e-06, -1.9907753085135482e-05, -0.0030969062354415655, -4.970903682988137e-05, -0.0015468548517674208, -0.0035657414700835943, -1.638859748840332, -0.0036367725115269423, -0.007283917628228664, -0.0013847296359017491, -0.0015792291378602386, -0.0759529247879982, -0.008414765819907188, -0.002626780653372407, -0.0010091932490468025, -0.1529041975736618, -0.008630003780126572, -0.0005292683490552008, -1.4488747119903564, -1.7465025186538696, -0.01967848278582096, -0.0005423743859864771, -0.009627814404666424, -2.877640724182129, -1.4404067993164062, -0.004214453510940075, -0.0003407612966839224, -0.002363865962252021, -0.351596474647522, -0.0019802500028163195, -0.00013171759201213717, -8.844937838148326e-05, -0.00024732868769206107, -0.0013786583440378308, -0.0005621521850116551, -0.019383886829018593, -0.31897369027137756, -0.01011377852410078, -9.179073458653875e-06, -1.5497195136049413e-06, -1.6569954823353328e-05, -2.1219027985353023e-05, -4.291525328881107e-06, -8.106198947643861e-06, -2.5748875486897305e-05, -2.432910442352295, -0.017691077664494514, -0.0921846404671669, -0.003267546882852912, -0.08737315237522125, -0.00326017988845706, -0.0005567907355725765, -2.8490614567999728e-05, -0.0005153281381353736, -0.0026433072052896023, -0.014322340488433838, -7.235741941258311e-05, -5.054346183896996e-05, -0.022939084097743034, -5.924526340095326e-05, -0.00034898388548754156, -1.585470999998506e-05, -0.0001380348257953301, -0.0002991705550812185, -0.0004117832868359983, -6.210611172718927e-05, -0.0023538758978247643, -0.32322898507118225, -0.0038533974438905716, -0.06555361300706863, -1.8536372184753418, -0.15735679864883423, -2.3053579330444336, -0.33894437551498413, -0.00246649538166821, -0.0001245659514097497, -0.000532842765096575, -0.0002811751910485327, -0.0017381097422912717, -1.7750192880630493, -0.05947281792759895, -2.1526975631713867, -3.7788631743751466e-05, -0.18557380139827728, -0.006117547862231731, -2.3108677864074707, -2.990382194519043, -0.24322782456874847, -0.19904902577400208, -0.6306887865066528, -0.002173325279727578, -0.12339204549789429, -0.009759685955941677, -0.0018187901005148888, -0.002178916009142995, -0.000447530735982582, -0.0018105795606970787, -0.046319663524627686, -1.1086402082582936e-05, -4.291525328881107e-06, -0.0003066784702241421, -5.8412379075889476e-06, -8.344646857949556e-07, -2.098061486321967e-05, -0.9680885076522827, -0.01891094632446766, -0.027587564662098885, -0.9274880290031433, -0.01548505388200283, -0.18520142138004303, -0.02202840894460678, -1.0470086336135864, -0.0006337541271932423, -0.040555503219366074, -0.010109529830515385], "finish_reason": "length"}], "metrics": {"energy": 300.0018902196883, "energy_per_token": 1.1718823836706573, "time": 11.349393, "time_per_token": 0.04433356640625}}
{"outputs": [{"text": "# Stopword removal\n    stopword_list = stopwords.words('english')\n    stopwords = [i.lower() for i in stopword_list]\n    words = [i.lower() for i in text.split()]\n    filtered_words = [word for word in words if word not in stopwords]\n\n    # Stemming\n    from nltk.stem import PorterStemmer\n    porter = PorterStemmer()\n    words_stemmed = [porter.stem(word) for word in filtered_words]\n\n    # Storing the n-grams in a dictionary\n    grams = {}\n\n    for i in range(len(words_stemmed)):\n        grams[(words_stemmed[i],)] = 1\n        for j in range(i+1, len(words_stemmed)):\n            if words_stemmed[j] == words_stemmed[i]:\n                grams[(words_stemmed[i], words_stemmed[j])] = grams.get((words_stemmed[i], words_stemmed[j]), 0) + ", "tokens": ["#", " Stop", "word", " removal", "\n", "    ", "stop", "word", "_", "list", " =", " stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "stop", "words", " =", " [", "i", ".", "lower", "()", " for", " i", " in", " stop", "word", "_", "list", "]", "\n", "    ", "words", " =", " [", "i", ".", "lower", "()", " for", " i", " in", " text", ".", "split", "()", "]", "\n", "    ", "filtered", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", "\n", "\n", "    ", "#", " St", "em", "ming", "\n", "    ", "from", " n", "lt", "k", ".", "stem", " import", " Porter", "St", "em", "mer", "\n", "    ", "porter", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "words", "_", "stem", "med", " =", " [", "porter", ".", "stem", "(", "word", ")", " for", " word", " in", " filtered", "_", "words", "]", "\n", "\n", "    ", "#", " St", "oring", " the", " n", "-", "grams", " in", " a", " dictionary", "\n", "    ", "grams", " =", " {}", "\n", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", "_", "stem", "med", "))", ":", "\n", "        ", "grams", "[(", "words", "_", "stem", "med", "[", "i", "]", ",", ")]", " =", " ", "1", "\n", "        ", "for", " j", " in", " range", "(", "i", "+", "1", ",", " len", "(", "words", "_", "stem", "med", "))", ":", "\n", "            ", "if", " words", "_", "stem", "med", "[", "j", "]", " ==", " words", "_", "stem", "med", "[", "i", "]:", "\n", "                ", "grams", "[(", "words", "_", "stem", "med", "[", "i", "]", ",", " words", "_", "stem", "med", "[", "j", "]", ")]", " =", " grams", ".", "get", "((", "words", "_", "stem", "med", "[", "i", "]", ",", " words", "_", "stem", "med", "[", "j", "])", ",", " ", "0", ")", " +", " "], "logprobs": [-0.4650316834449768, -3.8653552532196045, -0.8304024934768677, -0.5055776834487915, -0.6536067128181458, -0.0029206499457359314, -0.4015333354473114, -1.6332553625106812, -0.09779360145330429, -0.5702018141746521, -0.005258775316178799, -0.7286580204963684, -5.340433563105762e-05, -0.001101244823075831, -0.003520245896652341, -0.6026807427406311, -0.01998397707939148, -4.410734163684538e-06, -0.00047183825518004596, -0.02518244832754135, -0.02616295777261257, -1.747957468032837, -2.378124475479126, -1.7046794891357422, -0.8956635594367981, -2.138335943222046, -1.0589103698730469, -0.07815863937139511, -0.0006706849089823663, -0.010851067490875721, -0.00048065552255138755, -0.00037019551382400095, -0.12297806143760681, -0.07899285852909088, -0.0003406421164982021, -3.015949550899677e-05, -0.6307969093322754, -0.029765227809548378, -0.10608953982591629, -2.323075294494629, -0.16869443655014038, -1.0334471464157104, -0.6858339905738831, -0.34996744990348816, -0.04401502013206482, -0.0007795632118359208, -0.020932704210281372, -0.000612071540672332, -0.014350778423249722, -1.9142922163009644, -0.0034812819212675095, -0.03107551671564579, -0.053664326667785645, -0.9016096591949463, -0.004807817284017801, -0.04361419007182121, -2.7733819484710693, -0.05096814036369324, -0.09779522567987442, -0.010512925684452057, -0.09753833711147308, -1.2535196542739868, -0.02623588591814041, -0.0017164511373266578, -0.0003066784702241421, -0.00211658445186913, -0.012729462236166, -0.067121222615242, -0.03937437757849693, -0.00011443436960689723, -0.00852706003934145, -0.003138024127110839, -0.029091665521264076, -0.0017523899441584945, -0.9204636216163635, -0.0004383556661196053, -0.047774508595466614, -4.613628387451172, -0.895953893661499, -0.2037307322025299, -0.28815075755119324, -0.003933432046324015, -2.0714805126190186, -0.062010977417230606, -0.009705617092549801, -2.861018856492592e-06, -0.031055061146616936, -0.005039608106017113, -0.354390025138855, -0.15686564147472382, -0.001149708521552384, -5.769562994828448e-05, -0.0006984416977502406, -0.011904858984053135, -0.02484946884214878, -1.9659228324890137, -0.7885135412216187, -0.00015531764074694365, -1.311301275563892e-06, -0.0041068983264267445, -5.972207145532593e-05, -0.0016640876419842243, -0.0035318871960043907, -0.030805181711912155, -2.7472245693206787, -1.2632694244384766, -0.13039718568325043, -0.23724350333213806, -0.006855064537376165, -0.1053687185049057, -0.008385922759771347, -2.276871418871451e-05, -0.002560434164479375, -0.00012110930401831865, -0.6136012077331543, -0.005370119586586952, -0.0028716777451336384, -0.0007294139941222966, -6.568216485902667e-05, -0.019788701087236404, -2.4199192921514623e-05, -9.298280929215252e-06, -0.004309534095227718, -0.0014035383937880397, -0.21247926354408264, -0.0005913416389375925, -0.036730919033288956, -3.8713436126708984, -0.3514321446418762, -0.5975282192230225, -3.3237204551696777, -0.31159675121307373, -0.27313923835754395, -1.5636063814163208, -0.20848307013511658, -1.0210615396499634, -0.18418429791927338, -0.003577738767489791, -3.9295477867126465, -0.2073095440864563, -0.2823180854320526, -0.004249352961778641, -2.6187052726745605, -0.00022480344341602176, -0.715234100818634, -0.14297932386398315, -0.014773492701351643, -0.010475766845047474, -0.0030801494140177965, -0.2783617675304413, -0.0002162222663173452, -0.04166971892118454, -0.005444697570055723, -3.123234637314454e-05, -0.00015317220822907984, -2.2652909755706787, -0.0006927236099727452, -0.011768791824579239, -0.0314733162522316, -3.6928551197052, -2.9378511905670166, -0.18985755741596222, -0.003307826118543744, -1.6331539882230572e-05, -2.396077979938127e-05, -0.0005367745761759579, -0.0010149095905944705, -0.06314900517463684, -0.06942800432443619, -0.8900572657585144, -0.0035053968895226717, -0.5932883620262146, -0.9959128499031067, -0.03396880626678467, -0.3907352685928345, -0.6277780532836914, -0.02683687023818493, -0.0005104430601932108, -0.0011132716899737716, -0.0019162403186783195, -0.3033648431301117, -1.5315349102020264, -0.012999197468161583, -0.0014555584639310837, -0.09984233230352402, -9.703165414975956e-05, -0.0006591292913071811, -0.0025179844815284014, -6.6756979322235566e-06, -0.00010263393050990999, -0.01150720939040184, -0.00013863079948350787, -0.0010251511121168733, -0.014791347086429596, -1.4208030700683594, -1.0666559934616089, -0.0014513921923935413, -1.6093124941107817e-05, -1.4066597032069694e-05, -0.00040904260822571814, -0.433003693819046, -0.06766605377197266, -2.580890655517578, -0.04857983440160751, -0.0007239343249239028, -1.2040065485052764e-05, -1.1205610462639015e-05, -0.00032205163734033704, -0.11437048017978668, -0.221756711602211, -0.017667068168520927, -0.0022793046664446592, -0.2880787253379822, -0.09390069544315338, -0.0011555430246517062, -0.0004067785630468279, -3.4570634852570947e-06, -8.225102646974847e-05, -0.00013016807497479022, -0.006719848606735468, -0.0012437711702659726, -0.0019496734021231532, -0.07398270815610886, -0.000726316764485091, -3.6954811548639555e-06, -0.00048673225683160126, -0.00011801023356383666, -0.005113973747938871, -0.005804587155580521, -0.0057494742795825005, -0.17516355216503143, -0.6445004940032959, -0.04250156879425049, -0.018392959609627724, -0.0487668439745903, -0.011473269201815128, -3.6000557884108275e-05, -8.4638240878121e-06, -2.95634672511369e-05, -4.9828242481453344e-05, -0.0014106809394434094, -0.0001731960946926847, -0.00022492263815365732, -0.056222885847091675, -1.3232143828645349e-05, -9.298280929215252e-06, -0.00010859376925509423, -4.2437604861333966e-05, -0.000491855782456696, -0.02387162670493126, -0.002236486179754138, -0.06128636375069618, -0.012286689132452011, -0.047205764800310135, -0.011878707446157932, -0.01031484641134739], "finish_reason": "length"}], "metrics": {"energy": 264.5181875677107, "energy_per_token": 1.03327417018637, "time": 11.139136, "time_per_token": 0.04351225}}
{"outputs": [{"text": "# Storing the stopwords\n    stop_words = set(stopwords.words('english'))\n    # removing duplicate consecutive words\n    text = re.sub('\\s+', ' ', ' '.join([word for word in text.split(' ') if word not in stop_words]))\n    # Generating the square co-occurrence matrix using CountVectorizer\n    vectorizer = CountVectorizer(ngram_range=(1, n))\n    X = vectorizer.fit_transform(text.split(' '))\n\n    df = pd.DataFrame(X.todense(), columns=vectorizer.get_feature_names())\n\n    # Plotting the co-occurrence matrix\n    plt.figure(figsize=(7, 7))\n    ax = plt.gca()\n    ax.set_title('Co-occurrence Matrix')\n    ax.xaxis.tick_bottom()\n    ax.yaxis.tick_left()\n    ax.set_xticks(np.arange(len(df.columns)))\n    ax.set_yticks(np.arange(len(df", "tokens": ["#", " St", "oring", " the", " stop", "words", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "#", " removing", " duplicate", " consecutive", " words", "\n", "    ", "text", " =", " re", ".", "sub", "('", "\\", "s", "+'", ",", " '", " '", ",", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "('", " '", ")", " if", " word", " not", " in", " stop", "_", "words", "]))", "\n", "    ", "#", " Gener", "ating", " the", " square", " co", "-", "occ", "ur", "rence", " matrix", " using", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "1", ",", " n", "))", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", ".", "split", "('", " '", "))", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "#", " Plot", "ting", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "7", ",", " ", "7", "))", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Co", "-", "occ", "ur", "rence", " Matrix", "')", "\n", "    ", "ax", ".", "x", "axis", ".", "tick", "_", "bottom", "()", "\n", "    ", "ax", ".", "y", "axis", ".", "tick", "_", "left", "()", "\n", "    ", "ax", ".", "set", "_", "xt", "icks", "(", "np", ".", "ar", "ange", "(", "len", "(", "df", ".", "columns", ")))", "\n", "    ", "ax", ".", "set", "_", "yt", "icks", "(", "np", ".", "ar", "ange", "(", "len", "(", "df"], "logprobs": [-0.4650316834449768, -5.233965873718262, -0.2867197096347809, -0.40396997332572937, -1.0776705741882324, -0.1845184862613678, -1.9614112377166748, -0.003912414889782667, -0.3082423806190491, -0.6367465257644653, -0.09722503274679184, -0.024080073460936546, -0.17000003159046173, -0.0007418026216328144, -0.013439184986054897, -0.00010322991875000298, -0.0009216589969582856, -0.003051032545045018, -0.6410989761352539, -0.014496716670691967, -1.4305012882687151e-05, -0.006359696388244629, -0.007036429364234209, -1.278236985206604, -0.36747977137565613, -4.294273376464844, -1.8705759048461914, -0.8472276329994202, -0.08936918526887894, -0.6608811020851135, -0.003036889713257551, -1.067482829093933, -0.22225795686244965, -0.3509048819541931, -8.95221673999913e-05, -0.3134763538837433, -2.2910990715026855, -0.3822813034057617, -0.32781895995140076, -0.22117342054843903, -0.0007435894221998751, -0.028554018586874008, -0.0047279708087444305, -0.0002812943421304226, -2.0976366996765137, -0.011995088309049606, -0.013293327763676643, -0.00013064485392533243, -2.2783946990966797, -0.6496143937110901, -0.05431962385773659, -0.0010963627137243748, -0.0016345723997801542, -0.09086009114980698, -0.002353043295443058, -0.11585178226232529, -1.3556444644927979, -0.0013067525578662753, -0.09675560146570206, -0.017064880579710007, -0.15574021637439728, -0.19750027358531952, -9.238292841473594e-05, -0.004237007815390825, -0.0018008219776675105, -1.847726889536716e-05, -0.043731044977903366, -0.09029748290777206, -0.23431341350078583, -0.11142389476299286, -1.5141910314559937, -0.009840430691838264, -0.36102357506752014, -1.998111367225647, -0.053039684891700745, -0.03397606685757637, -0.0024835001677274704, -0.007063418161123991, -0.0021346656139940023, -0.006833161227405071, -2.727903366088867, -1.1135995388031006, -0.013436362147331238, -0.019127562642097473, -0.26804909110069275, -0.0028846340719610453, -1.2093898057937622, -0.026341086253523827, -0.0025032395496964455, -0.00021419614495243877, -8.821448318485636e-06, -8.666139910928905e-05, -0.017046716064214706, -1.2406201362609863, -0.021590666845440865, -2.95634672511369e-05, -6.615896563744172e-05, -0.0038137338124215603, -1.3440308570861816, -0.0008779485360719264, -0.10802901536226273, -0.7445546388626099, -0.015112427994608879, -0.006954748183488846, -2.7755560874938965, -0.025425486266613007, -0.020244870334863663, -6.592056161025539e-05, -4.851700214203447e-05, -0.006341691128909588, -0.00032419670606032014, -6.329813186312094e-05, -0.043976690620183945, -0.0426168367266655, -0.23045490682125092, -0.03798116371035576, -0.7783769369125366, -0.08231665194034576, -0.027013950049877167, -0.12581391632556915, -2.7186286449432373, -0.0011843579122796655, -2.6603541374206543, -0.035376131534576416, -0.028374314308166504, -0.0014687713701277971, -0.007563880644738674, -0.006383860483765602, -0.5484493374824524, -0.021447161212563515, -1.0892413854599, -0.00013720047718379647, -0.005956517532467842, -0.08096543699502945, -0.005750659387558699, -0.2658965587615967, -0.07714870572090149, -0.01695307344198227, -0.00012158608296886086, -3.2066785934148356e-05, -0.01934097521007061, -2.3841830625315197e-06, -0.00015209948469419032, -1.311301275563892e-06, -0.003097737906500697, -0.6976659297943115, -0.023646140471100807, -0.9575739502906799, -0.0011273226700723171, -0.5957684516906738, -1.003961205482483, -0.014701603911817074, -0.05658929422497749, -0.9455704689025879, -0.008876270614564419, -0.0005547653418034315, -0.003780600382015109, -0.0021432305220514536, -0.0065023042261600494, -0.4679970443248749, -0.0032789534889161587, -2.0188252925872803, -0.0013293724041432142, -0.2520236372947693, -0.11969258636236191, -0.03531526029109955, -0.00019703354337252676, -0.014310942031443119, -3.4183242321014404, -0.06824031472206116, -0.05153656005859375, -0.19221504032611847, -0.04306282848119736, -0.007212316617369652, -0.02040887251496315, -0.699898898601532, -0.014133477583527565, -0.12309201061725616, -0.0016581370728090405, -1.8147567510604858, -0.025048060342669487, -0.004037800244987011, -0.012993431650102139, -0.09874846041202545, -0.33068105578422546, -0.012628351338207722, -1.1066551208496094, -0.04234229028224945, -1.3983800411224365, -0.5181466341018677, -1.3808523416519165, -0.011481283232569695, -0.2581655979156494, -0.012667195871472359, -0.005604625213891268, -0.305431604385376, -0.3941973149776459, -0.0014907924924045801, -0.03509003669023514, -0.3456452488899231, -0.007201546337455511, -3.3877854347229004, -0.011926062405109406, -0.0006765222642570734, -2.4949066638946533, -0.00846878718584776, -0.28100988268852234, -0.0022708598989993334, -0.03689752519130707, -0.0023663633037358522, -0.008944090455770493, -0.0010247938334941864, -0.07636397331953049, -8.844937838148326e-05, -2.6464111215318553e-05, -0.046886637806892395, -0.0001358893496217206, -0.030286727473139763, -5.9126061387360096e-05, -0.0008350699208676815, -0.11379668861627579, -0.352495014667511, -0.004764039069414139, -1.5244630575180054, -0.03520478308200836, -0.21975092589855194, -0.37646403908729553, -0.13321878015995026, -0.32981207966804504, -9.536738616588991e-07, -0.016516387462615967, -1.168244216387393e-05, -0.0065146214328706264, -1.7261273860931396, -0.0005546461907215416, -0.13535651564598083, -0.06449878960847855, -0.0539904460310936, -0.4385298788547516, -0.0021192014683037996, -0.0018165291985496879, -0.008459803648293018, -0.00018976318824570626, -0.008198654279112816, -6.282132380874828e-05, -0.095944844186306, -5.340433563105762e-05, -0.0009981179609894753, -0.0006781900301575661, -0.0002806984703056514, -0.0001935771433636546, -5.07818695041351e-05, -0.0003711488388944417, -0.00575196323916316, -3.659658250398934e-05, -0.00022825974156148732], "finish_reason": "length"}], "metrics": {"energy": 293.5354949531556, "energy_per_token": 1.146623027160764, "time": 11.351332, "time_per_token": 0.044341140625}}
{"outputs": [{"text": "# 1. Pre-processing the text\n    # Remove extra white spaces from the text\n    text = re.sub(r'\\s+', ' ', text)\n    # Remove the last character in the text if it is a newline character\n    if text[-1] == '\\n':\n        text = text[:-1]\n    # Remove all special characters (except whitespaces) except '-' and '.'\n    text = re.sub(r'[^\\w\\s-.]+', '', text)\n\n    # 2. Generating the co-occurrence matrix\n    stopwords_set = set(stopwords.words('english'))\n    words = re.findall(r'\\b\\w+\\b', text)\n    count_matrix = np.zeros((len(words), len(words)), dtype=np.int64)\n    for i in range(len(words)):\n        for j in range(i + 1, len(words)):\n            if (words[i] not in stopwords_set) and (words[j] not in stopwords_set):\n", "tokens": ["#", " ", "1", ".", " Pre", "-", "processing", " the", " text", "\n", "    ", "#", " Remove", " extra", " white", " spaces", " from", " the", " text", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n", "    ", "#", " Remove", " the", " last", " character", " in", " the", " text", " if", " it", " is", " a", " new", "line", " character", "\n", "    ", "if", " text", "[-", "1", "]", " ==", " '\\", "n", "':", "\n", "        ", "text", " =", " text", "[:", "-", "1", "]", "\n", "    ", "#", " Remove", " all", " special", " characters", " (", "except", " whites", "paces", ")", " except", " '", "-'", " and", " '", ".", "'", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "-", ".", "]+", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " ", "2", ".", " Gener", "ating", " the", " co", "-", "occ", "ur", "rence", " matrix", "\n", "    ", "stop", "words", "_", "set", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ")", "\n", "    ", "count", "_", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "words", ")", ",", " len", "(", "words", "))", ",", " dtype", "=", "np", ".", "int", "6", "4", ")", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", "))", ":", "\n", "        ", "for", " j", " in", " range", "(", "i", " +", " ", "1", ",", " len", "(", "words", "))", ":", "\n", "            ", "if", " (", "words", "[", "i", "]", " not", " in", " stop", "words", "_", "set", ")", " and", " (", "words", "[", "j", "]", " not", " in", " stop", "words", "_", "set", "):", "\n"], "logprobs": [-0.4650316834449768, -3.3014228343963623, -0.4553256332874298, -0.3158408999443054, -2.8110642433166504, -1.8241820335388184, -0.06765847653150558, -1.579114317893982, -0.306966096162796, -0.7928400039672852, -0.021648064255714417, -1.1068193912506104, -1.7307676076889038, -3.4516448974609375, -2.9579315185546875, -0.4031731188297272, -3.463412046432495, -0.24779550731182098, -0.4826612174510956, -0.30050912499427795, -0.0020672159735113382, -0.20623941719532013, -0.030099237337708473, -0.5268248915672302, -4.2437604861333966e-05, -0.004816358909010887, -0.2086850106716156, -0.049800388514995575, -0.4090844988822937, -0.0004232226056046784, -0.016327587887644768, -6.639736966462806e-05, -0.020780697464942932, -0.0008105330052785575, -7.235741941258311e-05, -0.01068560779094696, -0.07805070281028748, -0.21966221928596497, -0.5050306916236877, -0.04022027552127838, -0.6141586303710938, -3.1095685958862305, -3.541578531265259, -2.1080002784729004, -2.9088528156280518, -0.4985942542552948, -0.1666536033153534, -0.6327480673789978, -0.03842475265264511, -0.2777625322341919, -0.45351070165634155, -2.562347888946533, -0.2085602879524231, -0.8988380432128906, -0.26211634278297424, -0.0009807306341826916, -0.20248007774353027, -0.014266755431890488, -0.239656001329422, -0.0020183208398520947, -0.00862244050949812, -0.008149584755301476, -0.14986342191696167, -0.00023636408150196075, -0.009985965676605701, -0.0027287888806313276, -0.002221380127593875, -0.0015779199311509728, -0.000813034363090992, -0.0067856828682124615, -0.009625689126551151, -0.0030686217360198498, -0.0027222500648349524, -0.00010179955279454589, -0.0029503649566322565, -0.40057697892189026, -0.027174293994903564, -0.7228652238845825, -1.6600189208984375, -2.9620895385742188, -0.020924067124724388, -3.2511274814605713, -0.7596473097801208, -2.6280317306518555, -0.34153294563293457, -0.15759459137916565, -2.8978328704833984, -2.2291719913482666, -0.4763554632663727, -1.3226850032806396, -0.4372160732746124, -0.9923686385154724, -0.014878380112349987, -0.29176101088523865, -0.0007869484252296388, -0.138135626912117, -0.006074063945561647, -0.027872798964381218, -0.0001554368354845792, -0.001711214892566204, -0.09225377440452576, -0.004541202913969755, -0.0484844408929348, -0.027724046260118484, -0.8046473860740662, -0.03235269710421562, -0.11208771914243698, -0.0614154115319252, -0.21034127473831177, -0.10071719437837601, -1.6182401180267334, -0.006389664486050606, -4.351044481154531e-05, -0.1273428201675415, -8.77341881277971e-05, -0.0007751559023745358, -0.008694530464708805, -0.026923442259430885, -1.766844391822815, -0.000747758662328124, -0.04287109524011612, -0.352798730134964, -0.013183685950934887, -0.0034955372102558613, -2.5142626762390137, -0.0014918637461960316, -0.48933133482933044, -1.02013099193573, -0.0093626007437706, -0.0021802245173603296, -0.0052475095726549625, -0.003416417632251978, -0.01551827136427164, -0.33952441811561584, -0.027339830994606018, -1.8831802606582642, -0.8859955072402954, -0.3879537284374237, -1.2465085983276367, -0.0012705596163868904, -0.060417596250772476, -0.0007664603181183338, -0.004186437930911779, -6.103329360485077e-05, -0.00029488030122593045, -0.004886826500296593, -0.07950913161039352, -0.021604318171739578, -3.099436753473128e-06, -0.006941607687622309, -0.0648849681019783, -0.13154050707817078, -1.9427001476287842, -0.11309993267059326, -1.4213659763336182, -0.0001734344696160406, -0.11391349881887436, -0.0006144542712718248, -0.016262026503682137, -0.0050568063743412495, -0.023153314366936684, -1.171149492263794, -0.0799773782491684, -0.036488890647888184, -0.20274612307548523, -0.002428798470646143, -0.012953540310263634, -2.9205850296420977e-05, -0.001353658502921462, -0.13840824365615845, -0.05345054343342781, -0.1071511059999466, -3.139604330062866, -0.24986037611961365, -0.535222053527832, -0.006686929613351822, -0.8290186524391174, -1.4424220353248529e-05, -0.07277404516935349, -0.14764460921287537, -0.055247850716114044, -2.169585604860913e-05, -0.008686848916113377, -0.005022409372031689, -0.005084560252726078, -0.002314033918082714, -1.2755313036905136e-05, -0.000959412835072726, -1.6834194660186768, -0.000603493710514158, -0.0345890037715435, -0.03302660584449768, -1.3676648139953613, -0.0003955773718189448, -0.027478551492094994, -1.2067583799362183, -6.6756979322235566e-06, -0.0004148814477957785, -0.022541020065546036, -0.30866479873657227, -0.23966602981090546, -0.060985494405031204, -0.6022529602050781, -0.0009863278828561306, -0.0004239375703036785, -0.02686309814453125, -4.6491513785440475e-06, -0.000747877755202353, -0.05526714026927948, -1.585470999998506e-05, -0.0011020784731954336, -0.0009065332706086338, -0.2277638018131256, -0.0004117832868359983, -0.0001805857609724626, -0.00020704510097857565, -0.0004215544031467289, -0.236336812376976, -0.29183873534202576, -0.0019281383138149977, -7.331102824537084e-05, -0.003484370419755578, -0.0031623851973563433, -7.152531907195225e-06, -1.6331539882230572e-05, -0.006528596859425306, -0.00015507926582358778, -0.0021663072984665632, -0.0017460829112678766, -0.30465808510780334, -1.9573899507522583, -0.18246880173683167, -2.062299427052494e-05, -0.004204838071018457, -0.01959782838821411, -1.7132835388183594, -2.3007127310847864e-05, -0.008035002276301384, -5.507317473529838e-05, -0.00024470672360621393, -1.6331539882230572e-05, -0.42167219519615173, -0.028681913390755653, -0.013871454633772373, -0.01710648275911808, -2.4199192921514623e-05, -0.052139054983854294, -0.0005759726045653224, -0.015288427472114563, -5.924526340095326e-05, -0.001158400671556592, -1.7523612768854946e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -0.1460878551006317, -0.007399887777864933], "finish_reason": "length"}], "metrics": {"energy": 268.5324903020857, "energy_per_token": 1.0489550402425223, "time": 11.358814, "time_per_token": 0.0443703671875}}
{"outputs": [{"text": "# Remove duplicate words and stopwords from text\n    clean_text = \" \".join(re.findall(r'\\b\\w+\\b', text.lower()))\n\n    # Generate n-grams from cleaned text\n    ngrams = [clean_text[i:i + n] for i in range(len(clean_text) - n + 1)]\n\n    # Count the occurrences of each n-gram\n    count_dict = Counter(ngrams)\n\n    # Create a pandas dataframe from the count_dict dictionary\n    df = pd.DataFrame(count_dict, index=[\"word\"], columns=[\"count\"])\n    df.count.plot.bar()\n    plt.show()\n\n    return df", "tokens": ["#", " Remove", " duplicate", " words", " and", " stop", "words", " from", " text", "\n", "    ", "clean", "_", "text", " =", " \"", " \"", ".", "join", "(", "re", ".", "find", "all", "(", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " text", ".", "lower", "()))", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", " from", " cleaned", " text", "\n", "    ", "ng", "rams", " =", " [", "clean", "_", "text", "[", "i", ":", "i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "clean", "_", "text", ")", " -", " n", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " n", "-", "gram", "\n", "    ", "count", "_", "dict", " =", " Counter", "(", "ng", "rams", ")", "\n", "\n", "    ", "#", " Create", " a", " pandas", " data", "frame", " from", " the", " count", "_", "dict", " dictionary", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "count", "_", "dict", ",", " index", "=[", "\"", "word", "\"", "]", ",", " columns", "=[", "\"", "count", "\"", "])", "\n", "    ", "df", ".", "count", ".", "plot", ".", "bar", "()", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-0.4650316834449768, -2.81589674949646, -0.9016917943954468, -1.5288958549499512, -0.7864229083061218, -0.2628921866416931, -0.009735367260873318, -1.3553460836410522, -1.478270173072815, -0.37853485345840454, -0.002291317330673337, -2.902050495147705, -0.01449424959719181, -0.032202187925577164, -0.003460017265751958, -0.9711559414863586, -0.038310833275318146, -6.961580220377073e-05, -0.0002240883477497846, -0.17090415954589844, -0.5190823674201965, -0.0001928620331455022, -0.3713880479335785, -1.6331539882230572e-05, -0.011898262426257133, -0.12721654772758484, -0.40005189180374146, -0.9200835824012756, -0.111810602247715, -0.1513597071170807, -0.13606613874435425, -0.0019555033650249243, -0.02121984399855137, -9.548207890475169e-05, -0.02249533124268055, -1.7132432460784912, -0.03447038307785988, -0.012159742414951324, -0.05289406701922417, -0.598674476146698, -0.00037674958002753556, -0.02222476340830326, -1.3372185230255127, -0.5145403742790222, -0.11486849933862686, -0.15127475559711456, -1.5166702270507812, -1.9523158073425293, -0.010551144368946552, -0.14885714650154114, -0.000724887300748378, -0.6414145231246948, -0.021479131653904915, -0.014149227179586887, -0.4563979506492615, -0.2996632754802704, -0.00016366096679121256, -8.010543388081715e-05, -0.015129923820495605, -0.015985192731022835, -0.09451736509799957, -0.03749455139040947, -0.9946264028549194, -0.003403468057513237, -0.0011954312212765217, -0.02291799522936344, -0.0003810394846368581, -0.00025388356880284846, -0.0007190502947196364, -5.972207145532593e-05, -0.014690210111439228, -1.2278481335670222e-05, -0.0037791754584759474, -5.07818695041351e-05, 0.0, -0.04941900447010994, -0.0020059479866176844, -0.06216065213084221, -0.05831361189484596, -0.0002687808300834149, -0.00023898606013972312, -0.004772343672811985, -0.0010306290350854397, -0.09124340862035751, -0.0003299168893136084, -0.013380962423980236, -1.2891418933868408, -1.0455883741378784, -0.4285750091075897, -0.0030340375378727913, -0.3227473199367523, -0.06898794323205948, -0.040427859872579575, -0.012687912210822105, -0.8252804279327393, -0.00041392818093299866, -1.8580169677734375, -0.36221206188201904, -1.1769933700561523, -0.0015337619697675109, -1.808230996131897, -0.003972141072154045, -0.001750366878695786, -5.8053239627042785e-05, -0.0002232540718978271, -0.026816677302122116, -0.057309772819280624, -0.00040165462996810675, -0.009486123919487, -1.1827398538589478, -0.21251964569091797, -2.7344703674316406, -1.100727915763855, -0.08717738091945648, -1.24448561668396, -0.3069521486759186, -0.19719886779785156, -1.8329260349273682, -0.005367036443203688, -1.9812661409378052, -0.10883752256631851, -0.000634111522231251, -0.047685857862234116, -0.012935535982251167, -0.0059729889035224915, -0.0005806190893054008, -0.004263834562152624, -0.31277576088905334, -0.1240057498216629, -0.0003756771038752049, -1.5020257706055418e-05, -0.6342624425888062, -0.4860532283782959, -2.3328564167022705, -0.3032579720020294, -2.6424994468688965, -0.05972866341471672, -0.4731925427913666, -0.06595154851675034, -0.010352601297199726, -0.43025875091552734, -0.07865892350673676, -0.35820621252059937, -0.0025000290479511023, -0.006851868238300085, -0.4196617305278778, -1.4461734294891357, -0.22089014947414398, -1.0414249897003174, -2.4565694332122803, -0.18917465209960938, -0.5019218325614929, -0.3692462742328644, -0.045162081718444824, -0.7656914591789246, -0.09470367431640625, -0.3856375813484192, -1.7774664163589478, -0.0006407829932868481, -0.4298137426376343, -0.009276502765715122, -0.05362308770418167, -0.8966631293296814, -0.09210582077503204, -0.6165111064910889, -0.09938988089561462, -1.9373751878738403, -0.06388568878173828, -1.5472264289855957], "finish_reason": "stop"}], "metrics": {"energy": 179.5639544019699, "energy_per_token": 1.062508605928816, "time": 7.37017, "time_per_token": 0.04361047337278107}}
{"outputs": [{"text": "stop_words = set(stopwords.words('english'))\n\n    def process_line(line):\n        line = re.sub(r'[^\\w\\s]', ' ', line.strip())\n        line = [word.lower() for word in line.split() if word not in stop_words and len(word) > 1]\n        return ' '.join(line)\n\n    lines = [process_line(line) for line in text.split('\\n') if line.strip()]\n    df = pd.DataFrame(\n        CountVectorizer().fit_transform(lines).toarray(),\n        index=list(map(lambda word: ' '.join(word.split(' ')[:-n + 1]), lines)),\n        columns=list(map(lambda word: ' '.join(word.split(' ')[1:-n + 1]), lines)),\n    )\n    df.fillna(0)\n\n    fig = plt.figure()\n    ax = fig.add_subplot(1, 1, 1)\n\n    ax.", "tokens": ["stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "\n", "    ", "def", " process", "_", "line", "(", "line", "):", "\n", "        ", "line", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " line", ".", "strip", "())", "\n", "        ", "line", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " line", ".", "split", "()", " if", " word", " not", " in", " stop", "_", "words", " and", " len", "(", "word", ")", " >", " ", "1", "]", "\n", "        ", "return", " '", " '", ".", "join", "(", "line", ")", "\n", "\n", "    ", "lines", " =", " [", "process", "_", "line", "(", "line", ")", " for", " line", " in", " text", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "Count", "Vector", "izer", "()", ".", "fit", "_", "transform", "(", "lines", ")", ".", "to", "array", "()", ",", "\n", "        ", "index", "=", "list", "(", "map", "(", "lambda", " word", ":", " '", " '", ".", "join", "(", "word", ".", "split", "('", " '", ")", "[:", "-", "n", " +", " ", "1", "])", ",", " lines", "))", ",", "\n", "        ", "columns", "=", "list", "(", "map", "(", "lambda", " word", ":", " '", " '", ".", "join", "(", "word", ".", "split", "('", " '", ")[", "1", ":-", "n", " +", " ", "1", "])", ",", " lines", "))", ",", "\n", "    ", ")", "\n", "    ", "df", ".", "fill", "na", "(", "0", ")", "\n", "\n", "    ", "fig", " =", " plt", ".", "figure", "()", "\n", "    ", "ax", " =", " fig", ".", "add", "_", "sub", "plot", "(", "1", ",", " ", "1", ",", " ", "1", ")", "\n", "\n", "    ", "ax", "."], "logprobs": [-2.664992332458496, -0.5743967294692993, -0.05162067711353302, -0.0269659124314785, -0.15053021907806396, -0.00035470392322167754, -0.009618368931114674, -7.295342220459133e-05, -0.000580499938223511, -0.0025835013948380947, -0.6275932788848877, -0.014913261868059635, -7.748573807475623e-06, -0.004049910698086023, -0.031889550387859344, -1.6068212985992432, -0.0013187768636271358, -2.828770637512207, -3.8233985900878906, -0.16247418522834778, -2.192781925201416, -0.00591646321117878, -0.06801781803369522, -0.1268680989742279, -0.01219695620238781, -0.004596145357936621, -1.6304688453674316, -0.056364189833402634, -0.9416890144348145, -3.93382906622719e-05, -0.132816880941391, -0.17469988763332367, -0.03837324306368828, -0.9508753418922424, -0.11172617226839066, -0.19631162285804749, -0.003792001400142908, -0.18818368017673492, -0.002042233245447278, -0.08342030644416809, -0.02845020778477192, -4.124556289752945e-05, -2.1562047004699707, -0.0035798768512904644, -7.343022298300639e-05, -0.0058202315121889114, -2.4868760108947754, -2.4734115600585938, -0.05899340659379959, -0.24899274110794067, -0.014823529869318008, -0.6831172108650208, -0.009397675283253193, -2.11759352684021, -0.20290729403495789, -0.6586340665817261, -0.08711401373147964, -8.093983342405409e-05, -0.016497861593961716, -0.00023195437097456306, -0.00030179237364791334, -0.07163726538419724, -0.0007538337376900017, -0.01146066002547741, -0.06419206410646439, -0.8365069031715393, -0.07888577878475189, -1.0011234283447266, -1.2993727978027891e-05, -0.0014542490243911743, -0.0008379285573028028, -3.504691630951129e-05, -2.8212931156158447, -0.13097847998142242, -8.320462075062096e-05, -0.006117192097008228, -0.031507160514593124, -0.3408002555370331, -0.21469762921333313, -0.42777910828590393, -0.017250027507543564, -0.006762475706636906, -0.029829099774360657, -0.19583532214164734, -0.5567700862884521, -0.007378233131021261, -0.00019333878299221396, -0.001450677984394133, -0.0033655688166618347, -0.011112113483250141, -0.008568309247493744, -0.03632037714123726, -0.018444804474711418, -0.0005341533687897027, -1.2172975540161133, -0.023721929639577866, -0.2979196310043335, -0.06822171807289124, -2.098061486321967e-05, -5.245195097813848e-06, -0.0008506731828674674, -0.037259019911289215, -0.01880086585879326, -0.008062555454671383, -0.00023719835735391825, -3.266281055402942e-05, -0.0140443816781044, -0.0040901582688093185, -0.13163968920707703, -0.5423488616943359, -0.004653695039451122, -0.001157567254267633, -0.010425982996821404, -0.9349492192268372, -0.2444818913936615, -0.9115475416183472, -0.00421231659129262, -0.0007097586058080196, -0.11792808771133423, -0.0049683209508657455, -0.37275925278663635, -1.6773085594177246, -0.022446725517511368, -0.08045772463083267, -0.0008148210472427309, -0.049729615449905396, -0.258032888174057, -1.628975749015808, -0.011722607538104057, -0.5029647946357727, -7.879423355916515e-05, -0.0016042232746258378, -1.5702738761901855, -0.005763459950685501, -0.011570136994123459, -0.07273269444704056, -8.785339014139026e-05, -0.0762350782752037, -0.02776242606341839, -0.01660209894180298, -0.01394164003431797, -0.22858136892318726, -0.003301885211840272, -0.013690385036170483, -0.061229854822158813, -0.06266643106937408, -0.0032286918722093105, -0.7323465943336487, -0.20073993504047394, -2.275588274002075, -0.0065374793484807014, -0.4247163236141205, -0.10325527936220169, -1.0886834859848022, -2.3275420665740967, -0.005510734394192696, -0.35422858595848083, -0.006121102254837751, -0.0007045170641504228, -0.00016544880054425448, -0.1403954029083252, -0.19587306678295135, -0.14599822461605072, -0.010527080856263638, -1.8960684537887573, -0.011066960170865059, -0.13289421796798706, -0.006254622247070074, -2.3136959075927734, -0.7884641885757446, -1.387986660003662, -0.0011723319767042994, -0.008871308527886868, -0.004143225960433483, -0.008846023119986057, -0.04913519695401192, -0.017117148265242577, -0.010463261976838112, -0.010523306205868721, -0.0013323486782610416, -0.0003948624071199447, -0.03733160346746445, -0.03700827434659004, -0.0016429034294560552, -0.013286623172461987, -0.0012423424050211906, -0.014743775129318237, -0.010754129849374294, -0.00032395837479270995, -0.0025673306081444025, -9.77468371274881e-05, -2.729855441430118e-05, -0.00014435203047469258, -0.0003216941258870065, -0.0006967739318497479, -0.007516555022448301, -0.00018857131362892687, -0.0004514628672040999, -4.1960789531003684e-05, -0.08582758158445358, -0.04204309731721878, -1.088697910308838, -0.01498936302959919, -0.049459509551525116, -0.00024196557933464646, -0.00444080401211977, -0.004244130104780197, -0.0011331572895869613, -0.001073856488801539, -0.2213931679725647, -0.7783693671226501, -0.0006711614551022649, -0.05273338407278061, -0.003154304577037692, -0.1474950611591339, -0.4102272093296051, -1.5038936138153076, -0.6197189092636108, -1.047964096069336, -0.0016747985500842333, -0.001498172408901155, -0.05271495133638382, -1.5599148273468018, -0.4183614253997803, -1.224961280822754, -0.00037508129025809467, -1.0613924264907837, -2.2122292518615723, -0.008220527321100235, -2.7894584491150454e-05, -0.055739209055900574, -1.4435442686080933, -0.006051195319741964, -0.0248738881200552, -0.14668674767017365, -0.02448997087776661, -0.1888481229543686, -7.021180499577895e-05, -0.033083003014326096, -3.5523738915799186e-05, -0.045254144817590714, -0.00016425691137555987, -0.11997418850660324, -0.02195214107632637, -1.7662479877471924, -0.011527478694915771, -0.0037518602330237627, -0.0001961992384167388, -0.0002809368306770921, -0.0001656871900195256, -0.06954643875360489, -0.0061592524871230125, -1.4488863945007324, -0.0003203832311555743, -0.7353376150131226, -0.011535491794347763], "finish_reason": "length"}], "metrics": {"energy": 263.9771504507066, "energy_per_token": 1.0311607439480726, "time": 11.359985, "time_per_token": 0.04437494140625}}
{"outputs": [{"text": "# Remove duplicate words\n    words = re.findall(r'\\w+', text.lower())\n\n    # Define the stopwords\n    stops = set(stopwords.words('english'))\n\n    # Remove stopwords\n    words = [word for word in words if word not in stops]\n\n    # Generate n-grams\n    ngrams = [words[i : i + n] for i in range(len(words) - n + 1)]\n\n    # Convert words to a dictionary with count\n    word_counts = pd.DataFrame(0, columns=ngrams, index=ngrams)\n    for ngram in ngrams:\n        word_counts.loc[ngram, ngram] += 1\n\n    # Convert to a dataframe\n    word_counts = word_counts.replace(0, np.nan).astype(int)\n\n    # Generate the plot\n    fig, ax = plt.subplots()\n    ax.imshow(word_counts, cmap=\"cool\", norm=plt.Normalize(0, max(word_counts.max(), 1)))\n    ", "tokens": ["#", " Remove", " duplicate", " words", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " text", ".", "lower", "())", "\n", "\n", "    ", "#", " Define", " the", " stop", "words", "\n", "    ", "st", "ops", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stops", "]", "\n", "\n", "    ", "#", " Generate", " n", "-", "grams", "\n", "    ", "ng", "rams", " =", " [", "words", "[", "i", " :", " i", " +", " n", "]", " for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Convert", " words", " to", " a", " dictionary", " with", " count", "\n", "    ", "word", "_", "counts", " =", " pd", ".", "DataFrame", "(", "0", ",", " columns", "=", "ng", "rams", ",", " index", "=", "ng", "rams", ")", "\n", "    ", "for", " n", "gram", " in", " n", "grams", ":", "\n", "        ", "word", "_", "counts", ".", "loc", "[", "ng", "ram", ",", " n", "gram", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Convert", " to", " a", " data", "frame", "\n", "    ", "word", "_", "counts", " =", " word", "_", "counts", ".", "replace", "(", "0", ",", " np", ".", "nan", ")", ".", "ast", "ype", "(", "int", ")", "\n", "\n", "    ", "#", " Generate", " the", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "im", "show", "(", "word", "_", "counts", ",", " c", "map", "=", "\"", "cool", "\"", ",", " norm", "=", "plt", ".", "Normal", "ize", "(", "0", ",", " max", "(", "word", "_", "counts", ".", "max", "()", ",", " ", "1", ")))", "\n", "    "], "logprobs": [-0.4650316834449768, -2.81589674949646, -0.9016917943954468, -1.5288958549499512, -1.6499788761138916, -0.0025991962756961584, -0.8649840950965881, -0.0544050894677639, -0.6270185112953186, -7.939023635117337e-05, -0.17770521342754364, -0.00030083899036981165, -0.042446840554475784, -0.07202557474374771, -0.24827298521995544, -0.7875694036483765, -0.010267061181366444, -5.4834770708112046e-05, -0.011861154809594154, -2.020080804824829, -0.05891777202486992, -0.030579980462789536, -0.010367939248681068, -1.5390340089797974, -0.0003471963864285499, -0.02878129668533802, -3.1872823238372803, -2.098853826522827, -0.51921147108078, -0.24715179204940796, -1.2828232049942017, -0.0006553170969709754, -2.861151933670044, -0.4679647982120514, -0.005927484016865492, -0.24019242823123932, -0.001090289675630629, -0.005571906454861164, -0.00025674383505247533, -0.0012357940431684256, -0.006395350210368633, -0.18574675917625427, -0.012111573480069637, -7.152531907195225e-06, -0.009676574729382992, -0.013878626748919487, -0.26608386635780334, -0.00040951924165710807, -0.023608768358826637, -0.47128453850746155, -0.23714081943035126, -0.020716479048132896, -0.8467670679092407, -0.00043358939001336694, -0.34071430563926697, -0.18523786962032318, -0.019615478813648224, -0.45163440704345703, -0.0019080305937677622, -0.00012146688823122531, -9.905801562126726e-05, -0.0017226393101736903, -0.002344123786315322, -0.022684136405587196, -0.0065098837949335575, -7.152531907195225e-06, -0.0021935468539595604, -0.006202614400535822, -0.0004931663861498237, -0.03960276022553444, -0.0005367745761759579, -0.021946776658296585, -1.0079171657562256, -0.5727084875106812, -0.17166583240032196, -0.10746806114912033, -0.3177942633628845, -0.0010457528987899423, -0.4058511257171631, -0.00889541208744049, -0.0066221547313034534, -0.6115771532058716, -1.0922613143920898, -0.00515738083049655, -0.005751015152782202, -2.3301591873168945, -0.007097744848579168, -0.023864643648266792, -0.0021968772634863853, -0.0009684640099294484, -0.009565827436745167, -0.00014077626110520214, -0.0005370128201320767, -0.00027926836628466845, -0.00010322991875000298, -0.01747356355190277, -2.3603161025675945e-05, -0.0007531190640293062, -0.06179191172122955, -0.0028734607622027397, -0.2581871449947357, -0.0305806752294302, -0.0003079893649555743, -0.00010024998482549563, -0.0029086447320878506, -0.002624997403472662, -0.05063173919916153, -0.00040368037298321724, -0.011151960119605064, -2.3123130798339844, -1.1378505229949951, -0.3477860689163208, -1.4098124504089355, -2.59279203414917, -1.5682724714279175, -1.878355860710144, -1.0174891948699951, -0.0009470268851146102, -0.8445191979408264, -0.01084953360259533, -0.6505204439163208, -0.00948045589029789, -1.6799695491790771, -0.0006382812280207872, -0.794804573059082, -0.3641052544116974, -1.9603229761123657, -0.035290636122226715, -3.0041191577911377, -0.035815127193927765, -0.05635044351220131, -4.8874615458771586e-05, -0.17377492785453796, -0.013876862823963165, -0.026417948305606842, -0.034012824296951294, -0.0025739893317222595, -0.08661312609910965, -0.16527554392814636, -0.22560453414916992, -0.048415277153253555, -1.2046778202056885, -0.036017075181007385, -0.007240129169076681, -0.032313454896211624, -0.00017248096992261708, -0.00016723664884921163, -0.0004107108688913286, -0.0006598440813831985, -0.16545498371124268, -0.0995212197303772, -0.002057103905826807, -0.23566383123397827, -0.05000678822398186, -0.0882687047123909, -0.0728621557354927, -0.01402792427688837, -0.16182555258274078, -0.12860232591629028, -0.00043525759247131646, -0.0024871863424777985, -0.7837851643562317, -0.05653093755245209, -0.0002109781780745834, -0.006809007842093706, -0.08198865503072739, -0.002283110748976469, -0.11493299901485443, -1.385729193687439, -0.9154196381568909, -0.5440505743026733, -2.855597496032715, -0.16429559886455536, -0.4800933301448822, -0.001122321467846632, -0.8229991793632507, -0.002118725562468171, -0.05646919831633568, -0.1616666465997696, -0.17022205889225006, -9.274052717955783e-05, -3.9457496313843876e-05, -0.017439942806959152, -2.884946823120117, -0.1081937849521637, -0.3548888564109802, -0.009542093612253666, -0.16476106643676758, -6.05564855504781e-05, -0.011232002638280392, -0.00964021123945713, -1.0237648487091064, -2.171609401702881, -0.00010489867418073118, -0.15096749365329742, -0.6738653182983398, -0.0012256737099960446, -0.0943765714764595, -0.19951510429382324, -0.0005342725198715925, -0.07438604533672333, -2.270261764526367, -1.0241764783859253, -0.7486063838005066, -0.21347862482070923, -0.0034702338743954897, -0.9589871168136597, -0.12200387567281723, -0.015887461602687836, -0.012700271792709827, -0.0008790204883553088, -6.23445157543756e-05, -0.0004638549580704421, -4.994744449504651e-05, -0.8802672624588013, -0.0020730451215058565, -0.08496904373168945, -0.5911495685577393, -0.04484948143362999, -1.2815475463867188, -0.00026556302327662706, -0.0027165436185896397, -0.04826727882027626, -1.5735502529423684e-05, -6.6756979322235566e-06, -0.5531831383705139, -0.32145002484321594, -0.0011239885352551937, -1.9327856302261353, -0.26429611444473267, -3.6309621334075928, -1.0547431707382202, -0.6023755669593811, -3.724591016769409, -0.012965778820216656, -1.2148253917694092, -4.3748852476710454e-05, -0.05138222500681877, -0.0033481037244200706, -0.07764177769422531, -0.2228587418794632, -0.042442500591278076, -2.314523696899414, -0.014092809520661831, -0.11453814804553986, -7.521823135903105e-05, -1.537788011773955e-05, -0.3234589099884033, -0.7431828379631042, -0.2262958139181137, -0.4448135495185852, -0.17011627554893494, -0.07062216848134995, -0.2412005364894867, -0.007423080503940582, -0.0737190768122673], "finish_reason": "length"}], "metrics": {"energy": 271.10320103359214, "energy_per_token": 1.0589968790374693, "time": 11.3574, "time_per_token": 0.04436484375}}
{"outputs": [{"text": "# Step 1: Remove duplicate consecutive words and stopwords.\n    stop_words = set(stopwords.words('english'))\n    text = ' '.join(re.sub('[^a-zA-Z0-9\\s]+', '', word.lower())\n                    for word in word_tokenize(text)\n                    if word.lower() not in stop_words)\n\n    # Step 2: Create a co-occurrence matrix of words and plot it.\n    vectorizer = CountVectorizer(ngram_range=(n, n))\n    mat = vectorizer.fit_transform(text)\n\n    df = pd.DataFrame(mat.toarray(), columns=vectorizer.get_feature_names(), dtype=int)\n    fig, ax = plt.subplots(figsize=(12, 12))\n    sns.heatmap(df, annot=True, ax=ax)\n    return df, ax", "tokens": ["#", " Step", " ", "1", ":", " Remove", " duplicate", " consecutive", " words", " and", " stop", "words", ".", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "text", " =", " '", " '", ".", "join", "(", "re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]+", "'", ",", " ''", ",", " word", ".", "lower", "())", "\n", "                ", "    ", "for", " word", " in", " word", "_", "token", "ize", "(", "text", ")", "\n", "                ", "    ", "if", " word", ".", "lower", "()", " not", " in", " stop", "_", "words", ")", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Create", " a", " co", "-", "occ", "ur", "rence", " matrix", " of", " words", " and", " plot", " it", ".", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "n", ",", " n", "))", "\n", "    ", "mat", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "mat", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", " dtype", "=", "int", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "2", ",", " ", "1", "2", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "df", ",", " annot", "=", "True", ",", " ax", "=", "ax", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.4650316834449768, -2.7458741664886475, -0.058704547584056854, -0.05680093914270401, -0.08448363095521927, -1.225201964378357, -0.8108358979225159, -0.5773909687995911, -0.027014531195163727, -0.9780283570289612, -0.2803056240081787, -0.008179736323654652, -2.7376277446746826, -0.025149667635560036, -0.027176151052117348, -2.326704502105713, -0.6150956749916077, -0.03735135495662689, -0.018211301416158676, -0.17387211322784424, -0.0003302744007669389, -0.00794642511755228, -7.83174327807501e-05, -0.0002648479712661356, -0.002130145439878106, -0.6888569593429565, -0.015387743711471558, -8.106198947643861e-06, -0.006186857353895903, -0.03845825046300888, -0.02786584384739399, -1.9676713943481445, -0.311130166053772, -1.2549455165863037, -0.003731551580131054, -0.00011383838864276186, -0.0003666205739136785, -0.6742357611656189, -0.48633167147636414, -0.00023421882360707968, -1.37298583984375, -1.297629714012146, -0.41346338391304016, -0.34304311871528625, -0.12963064014911652, -3.2782016205601394e-05, -4.2437604861333966e-05, -0.21481986343860626, -5.9960475482512265e-05, -0.00047195740626193583, -1.2751810550689697, -0.00024863966973498464, -0.00028689560713246465, -2.0616636276245117, -0.15443967282772064, -1.997373104095459, -0.03059397079050541, -8.654219709569588e-05, -0.5507670640945435, -6.151010165922344e-05, -0.842264711856842, -2.370081901550293, -0.09963549673557281, -0.02570483274757862, -1.6531152725219727, -0.08565033227205276, -0.2029612958431244, -0.002458171220496297, -0.0003597089380491525, -0.0012835367815569043, -2.8390159606933594, -0.4503008723258972, -0.5439714193344116, -0.1485668122768402, -0.007333265617489815, -0.02204030193388462, -0.15542033314704895, -0.37825819849967957, -0.0012680593645200133, -0.010394011624157429, -0.0017513189231976867, -0.42781445384025574, -1.1885744333267212, -0.06874681264162064, -0.0002768848498817533, -0.01625405065715313, -4.792098479811102e-05, -0.0016232660273090005, -0.002506331307813525, -3.71926071238704e-05, -0.1912921667098999, -0.02516036108136177, -0.19731512665748596, -0.0007574073388241231, -0.011790234595537186, -0.012237466871738434, -0.0006289887824095786, -0.0026903883554041386, -0.004682884085923433, -2.2367937564849854, -0.3621188700199127, -2.0943593978881836, -0.011098556220531464, -0.0026318933814764023, -0.004763682838529348, -0.0005992047372274101, -0.012724636122584343, -1.2755450010299683, -0.14409278333187103, -3.2638890743255615, -0.517953097820282, -0.19777126610279083, -0.17138385772705078, -0.0013709203340113163, -0.011411750689148903, -0.7970532774925232, -0.006975938566029072, -0.0008809261489659548, -0.0002337421028641984, -1.1324817933200393e-05, -0.0002087136817863211, -0.04092266038060188, -1.6794843673706055, -0.015060174278914928, -4.0411134250462055e-05, -4.875540980719961e-05, -0.002292625606060028, -0.29761216044425964, -0.0029550003819167614, -0.02963932417333126, -0.45271551609039307, -0.01244458369910717, -0.008828298188745975, -3.962054967880249, -0.13373085856437683, -0.09024323523044586, -9.095255518332124e-05, -5.23315102327615e-05, -0.002745907986536622, -0.0006829552003182471, -6.4490144723095e-05, -0.18574360013008118, -0.12540072202682495, -0.9732964038848877, -0.38873422145843506, -1.624182105064392, -0.0003719830128829926, -1.050230622291565, -0.03227398172020912, -0.01942024752497673, -0.0041467878036201, -0.0035949621815234423, -0.005481925327330828, -0.14707745611667633, -0.011476805433630943, -0.6900537014007568, -0.010489686392247677, -0.03664921596646309, -0.005545944441109896, -0.6791642904281616, -0.03586527332663536, -0.015478597953915596, -7.962863310240209e-05, -5.507317473529838e-05, -0.03943488746881485, -1.1920922133867862e-06, -0.00015066919149830937, -6.079655122448457e-06, -0.004134085029363632, -0.9485442638397217, -0.00505372229963541, -3.0388994216918945, -0.07260920852422714, -0.26834994554519653, -0.01774424873292446, -0.048023708164691925, -0.25916364789009094, -2.0175294876098633, -0.1437651365995407, -0.019392771646380424, -0.009155552834272385, -0.0018344969721511006, -0.00015186110977083445, -0.0012649638811126351, -5.8887653722194955e-05, -0.4672885537147522, -0.2671729326248169, -0.0005931286723352969, -0.011395486071705818, -0.589340329170227, -1.70465087890625, -0.00615048548206687, -0.055103905498981476, -0.5515884160995483, -0.1468116194009781, -0.029182210564613342, -0.00550338439643383, -0.273581862449646, -2.0958497524261475, -0.03132348135113716, -0.007422370370477438, -0.03517751023173332, -1.6927575416048057e-05, -0.00036352223833091557, -0.10893705487251282, -0.05240696668624878, -1.7478342056274414, -0.002972590969875455, -0.020776495337486267, -0.06853099912405014, -2.2020082473754883, -0.003046516329050064, -0.0008107712492346764, -0.8905666470527649, -0.11733608692884445, -0.5014998912811279, -0.22345030307769775, -0.10253231227397919, -0.009033524431288242, -0.009539732709527016, -0.745854914188385, -0.03129309415817261, -1.5911364555358887], "finish_reason": "stop"}], "metrics": {"energy": 226.53813570785525, "energy_per_token": 1.0158660794074226, "time": 9.677867, "time_per_token": 0.043398506726457405}}
{"outputs": [{"text": "stopwords_list = stopwords.words('english')\n    regex = r\"[^a-zA-Z0-9\\s]\"\n    df = pd.DataFrame(columns=np.arange(0, n, dtype=str))\n    for word in re.split(regex, text)[:-1]:\n        if word not in stopwords_list:\n            if (word + \" \") not in re.split(regex, text)[1:]:\n                word = word.lower()\n                row = re.split(regex, text)[1:]\n                for i in range(len(row) - n + 1):\n                    if word in row[i:i + n]:\n                        col = [row[i:i + n]]\n                        df.loc[word] = col[0]\n                    else:\n                        col = [0] * n\n                        df.loc[word] = col\n\n    ax = plt.axes()\n    ax.set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])\n    plt.", "tokens": ["stop", "words", "_", "list", " =", " stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "regex", " =", " r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]\"", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=", "np", ".", "ar", "ange", "(", "0", ",", " n", ",", " dtype", "=", "str", "))", "\n", "    ", "for", " word", " in", " re", ".", "split", "(", "regex", ",", " text", ")", "[:", "-", "1", "]:", "\n", "        ", "if", " word", " not", " in", " stop", "words", "_", "list", ":", "\n", "            ", "if", " (", "word", " +", " \"", " \"", ")", " not", " in", " re", ".", "split", "(", "regex", ",", " text", ")[", "1", ":", "]:", "\n", "                ", "word", " =", " word", ".", "lower", "()", "\n", "                ", "row", " =", " re", ".", "split", "(", "regex", ",", " text", ")[", "1", ":]", "\n", "                ", "for", " i", " in", " range", "(", "len", "(", "row", ")", " -", " n", " +", " ", "1", "):", "\n", "                ", "    ", "if", " word", " in", " row", "[", "i", ":", "i", " +", " n", "]:", "\n", "                ", "        ", "col", " =", " [", "row", "[", "i", ":", "i", " +", " n", "]]", "\n", "                ", "        ", "df", ".", "loc", "[", "word", "]", " =", " col", "[", "0", "]", "\n", "                ", "    ", "else", ":", "\n", "                ", "        ", "col", " =", " [", "0", "]", " *", " n", "\n", "                ", "        ", "df", ".", "loc", "[", "word", "]", " =", " col", "\n", "\n", "    ", "ax", " =", " plt", ".", "axes", "()", "\n", "    ", "ax", ".", "set", "(", "xt", "ick", "labels", "=", "[]", ",", " y", "tick", "labels", "=", "[]", ",", " ", "xt", "icks", "=", "[]", ",", " y", "t", "icks", "=", "[]", ")", "\n", "    ", "plt", "."], "logprobs": [-2.664992332458496, -1.5737577676773071, -0.29106587171554565, -0.6032188534736633, -0.01862267591059208, -0.5905992388725281, -4.6132929128361866e-05, -0.0017356107709929347, -0.002254208317026496, -0.47599107027053833, -0.026985755190253258, -8.821448318485636e-06, -0.0005165196489542723, -0.06447453051805496, -0.30381062626838684, -3.5811691284179688, -0.22851231694221497, -2.8586785793304443, -0.5516359210014343, -1.3802810907363892, -0.5437986254692078, -0.056694164872169495, -0.00018285033002030104, -0.00016223068814724684, -0.029929643496870995, -0.00011944057769142091, -0.0014390123542398214, -0.5696026086807251, -0.0004748170613311231, -0.0005969410995021462, -0.5492637753486633, -0.3372021019458771, -0.345171719789505, -0.06802105158567429, -0.19415563344955444, -4.017290115356445, -0.05872657895088196, -0.036585547029972076, -9.452849917579442e-05, -0.10035183280706406, -0.9388924837112427, -1.2619339227676392, -0.32436874508857727, -3.479588508605957, -0.0018704315880313516, -0.482600599527359, -9.703165414975956e-05, -0.011569665744900703, -1.2070183753967285, -0.024860166013240814, -0.3208429515361786, -2.9949581623077393, -1.3804131746292114, -0.08652359247207642, -1.7987843751907349, -0.34699538350105286, -0.028473611921072006, -0.12477198243141174, -1.1329729557037354, -2.729909896850586, -0.04375534877181053, -0.26514169573783875, -0.0001280225842492655, -1.1183078289031982, -0.015476016327738762, -0.004013579338788986, -0.0010246747406199574, -0.022231291979551315, -0.5597512125968933, -0.5805909633636475, -0.15410956740379333, -0.11105207353830338, -0.006543518975377083, -0.0490858294069767, -0.006377819459885359, -0.430236279964447, -0.40796926617622375, -0.690340518951416, -6.639736966462806e-05, -0.03321700915694237, -0.00011145447206217796, -0.0014079429674893618, -7.390948667307384e-06, -0.07420752942562103, -0.006968006957322359, -0.003481994615867734, -2.6293580532073975, -3.787539482116699, -0.5189705491065979, -2.7655467987060547, -0.4891704022884369, -0.02622229792177677, -0.4518839120864868, -1.7429810762405396, -0.00040391870425082743, -3.2173900604248047, -0.00035744477645494044, -0.045854855328798294, -0.003382914699614048, -0.002110279630869627, -0.00013624693383462727, -0.02074415236711502, -1.5571919679641724, -0.05509769916534424, -0.17750868201255798, -0.04049288481473923, -0.03389252349734306, -0.002702039433643222, -2.535278797149658, -0.47213223576545715, -0.3248020112514496, -1.3062268495559692, -0.532346785068512, -0.00031406714697368443, -0.04638021066784859, -0.020648520439863205, -3.3909595012664795, -0.2562696933746338, -3.465583324432373, -0.00034350217902101576, -0.12047280371189117, -0.0036915268283337355, -0.000869253883138299, -0.00022909401741344482, -0.017074257135391235, -0.5074753165245056, -0.1334429830312729, -0.11985164135694504, -0.05913128703832626, -0.010097375139594078, -1.5303387641906738, -0.6411162614822388, -0.15515916049480438, -0.1621239185333252, -0.005064397118985653, -1.171071171760559, -0.0017070496687665582, -0.04233669489622116, -1.064145803451538, -0.10746067017316818, -0.7204738855361938, -0.4226304292678833, -0.002328186994418502, -0.013103446923196316, -0.005474811885505915, -0.004137408919632435, -0.0010066924151033163, -0.0016193384071812034, -1.5129215717315674, -2.3762898445129395, -0.8350370526313782, -0.1153230294585228, -0.015974633395671844, -0.006434437353163958, -0.41577810049057007, -0.0739516019821167, -0.37694352865219116, -0.004719902761280537, -0.049534160643815994, -0.0042943404987454414, -0.0006310140597634017, -0.0029706894420087337, -3.2180628776550293, -0.2909276783466339, -1.6289931535720825, -2.4525275230407715, -0.010093598626554012, -0.2605203688144684, -1.1796432733535767, -0.011742165312170982, -0.029414208605885506, -0.23754878342151642, -0.32270604372024536, -0.11535564064979553, -0.0036050586495548487, -0.010768989101052284, -0.663696825504303, -1.1066501140594482, -0.2502667009830475, -0.05482294782996178, -0.262349009513855, -0.600121796131134, -0.023367732763290405, -0.4948606491088867, -0.7125884294509888, -0.0037785815075039864, -0.02234647609293461, -0.12188178300857544, -0.8664618134498596, -1.448822259902954, -0.17611812055110931, -0.0001387499796692282, -0.03233388438820839, -0.0002307625545654446, -0.0005198557628318667, -0.9704657793045044, -0.04081989824771881, -0.25924837589263916, -0.9938408732414246, -0.21993176639080048, -0.4185376763343811, -0.15930913388729095, -0.002930515445768833, -0.0017001472879201174, -0.0024498470593243837, -0.03429415822029114, -0.006212329026311636, -0.003790932474657893, -0.0020512747578322887, -0.004786224570125341, -0.020176762714982033, -0.0055879103019833565, -0.012387951835989952, -0.012942949309945107, -1.840517282485962, -0.05520814284682274, -1.526223063468933, -0.025170590728521347, -1.3265002965927124, -0.0002728328399825841, -3.724091053009033, -0.17116810381412506, -0.008396442979574203, -0.06010187044739723, -0.6105268597602844, -0.048839956521987915, -0.6558314561843872, -2.199181079864502, -1.421746015548706, -0.9445768594741821, -0.00026663561584427953, -0.06311509758234024, -2.224571943283081, -0.07285019010305405, -0.01882917620241642, -0.0024305821862071753, -0.00035982808913104236, -0.02529868669807911, -0.014264051802456379, -1.3154170513153076, -2.2527236938476562, -0.002946561435237527, -0.22960948944091797, -0.06303932517766953, -0.03986213728785515, -0.0013649680186063051, -0.002064360771328211, -0.0021245544776320457, -2.264974000354414e-06, -0.002191762439906597, -0.0006087357178330421, -0.18172617256641388, -0.008240863680839539, -0.050643522292375565, -2.386272668838501, -0.0001110968878492713], "finish_reason": "length"}], "metrics": {"energy": 295.45717651844, "energy_per_token": 1.1541295957751563, "time": 11.349095, "time_per_token": 0.04433240234375}}
{"outputs": [{"text": "# Creating a vectorizer object using the CountVectorizer\n    vectorizer = CountVectorizer(ngram_range=(n, n))\n\n    # Vectorizing the text\n    X = vectorizer.fit_transform([text])\n    X_df = pd.DataFrame(X.toarray(),\n                        columns=vectorizer.get_feature_names_out(),\n                        index=[0])\n\n    # Splitting the dataframe into two columns\n    df = X_df.pivot_table(columns=X_df.columns, fill_value=0)\n    ax = df.plot.imshow(\n        grid=False, cmap=\"coolwarm\", vmin=df.min(), vmax=df.max())\n    return df, ax", "tokens": ["#", " Creating", " a", " vector", "izer", " object", " using", " the", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "n", ",", " n", "))", "\n", "\n", "    ", "#", " Vector", "izing", " the", " text", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "([", "text", "])", "\n", "    ", "X", "_", "df", " =", " pd", ".", "DataFrame", "(", "X", ".", "to", "array", "()", ",", "\n", "                ", "        ", "columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", ",", "\n", "                ", "        ", "index", "=[", "0", "])", "\n", "\n", "    ", "#", " Split", "ting", " the", " data", "frame", " into", " two", " columns", "\n", "    ", "df", " =", " X", "_", "df", ".", "p", "iv", "ot", "_", "table", "(", "columns", "=", "X", "_", "df", ".", "columns", ",", " fill", "_", "value", "=", "0", ")", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "im", "show", "(", "\n", "        ", "grid", "=", "False", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " v", "min", "=", "df", ".", "min", "()", ",", " v", "max", "=", "df", ".", "max", "())", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.4650316834449768, -3.0310027599334717, -0.9594703912734985, -3.4472057819366455, -0.07742754369974136, -0.7996055483818054, -2.5903429985046387, -0.9313555359840393, -0.6119566559791565, -0.012960600666701794, -0.009731235913932323, -2.631838083267212, -0.004245435819029808, -0.388249933719635, -0.005883044097572565, -0.0038213341031223536, -0.0003274143091402948, -7.152531907195225e-06, -8.761498611420393e-05, -0.03613665699958801, -1.4486560821533203, -0.014753289520740509, -8.821448318485636e-06, -0.0001308832288486883, -0.004279978107661009, -0.19331148266792297, -0.004427392967045307, -0.062447842210531235, -0.5329658389091492, -0.007691648323088884, -0.5644806623458862, -0.0008114859228953719, -0.013025790452957153, -4.331094741821289, -0.04692189767956734, -0.05888225510716438, -0.6218051910400391, -0.8794375061988831, -0.00024530262453481555, -2.028909683227539, -0.02154715172946453, -0.005521404556930065, -1.07287787614041e-05, -2.062299427052494e-05, -0.003914077300578356, -0.00015877417172305286, -7.080780778778717e-05, -1.027288556098938, -0.005761208012700081, -0.04352197423577309, -0.08936885744333267, -2.06217885017395, -1.766282081604004, -1.0847089290618896, -1.2958039045333862, -0.0037163496017456055, -0.010552441701292992, -0.0026774294674396515, -0.0033620046451687813, -0.00765107199549675, -0.3269728422164917, -0.047065094113349915, -0.28122085332870483, -0.0026077572256326675, -0.1251729130744934, -0.010643619112670422, -2.6523265838623047, -0.0343279093503952, -0.10004178434610367, -0.3987966775894165, -0.14309793710708618, -0.026085147634148598, -0.00010561384988250211, -6.01988795096986e-05, -0.015642328187823296, -1.4305104514278355e-06, -0.00014256415306590497, -1.1920928244535389e-07, -0.0015600664773955941, -0.9013423919677734, -3.2066785934148356e-05, -0.46375757455825806, -0.024313373491168022, -0.22155117988586426, -0.0004646890447475016, -0.0005900310934521258, -0.012606809847056866, -0.6885286569595337, -0.7156335115432739, -0.06267941743135452, -0.02893475629389286, -0.15545329451560974, -0.0011991222854703665, -0.10054127126932144, -3.889730930328369, -0.05134372413158417, -0.18677684664726257, -2.6908488273620605, -0.5012670159339905, -0.7627263069152832, -2.246260166168213, -1.0338423252105713, -0.9292805790901184, -0.0015899409772828221, -2.524407148361206, -0.3376210033893585, -0.43484655022621155, -0.0007472821744158864, -9.298280929215252e-06, -0.04766574129462242, -3.540466547012329, -0.010479659773409367, -0.004482222720980644, -0.24124577641487122, -0.016137108206748962, -0.03050713799893856, -1.440858006477356, -0.04386933520436287, -0.0901269018650055, -0.006624167785048485, -7.390948667307384e-06, -0.008282006718218327, -0.0743391290307045, -0.5457844138145447, -2.4327902793884277, -0.0012774649076163769, -0.000337305391440168, -0.01824173703789711, -0.0607694573700428, -0.4016311466693878, -0.08618439733982086, -1.478420376777649, -1.1788595914840698, -0.016564110293984413, -0.6868144273757935, -0.006084490567445755, -0.04815220087766647, -0.3524893820285797, -2.179744005203247, -0.01753857731819153, -0.4499216079711914, -2.5900845527648926, -0.06761547178030014, -2.802177906036377, -0.025223365053534508, -0.16276668012142181, -0.015804504975676537, -1.5072548389434814, -0.005941467825323343, -0.9431984424591064, -0.23912031948566437, -1.9609053134918213, -0.19853980839252472, -0.02275918237864971, -0.03548762574791908, -1.278376817703247, -0.11629228293895721, -0.5297669172286987, -2.357072114944458, -0.011128501035273075, -0.08693589270114899, -0.009397320449352264, -0.42934027314186096, -0.016433602198958397, -0.001279607880860567, -0.000569300667848438, -0.0027643346693366766, -0.0006652049487456679, -0.0023449561558663845, -1.1382877826690674, -0.02173473685979843, -0.704958975315094, -0.577093243598938, -0.13447695970535278, -0.007700165268033743, -0.002205798402428627, -0.4454154372215271, -0.021936863660812378, -1.2491934299468994], "finish_reason": "stop"}], "metrics": {"energy": 186.3986562461853, "energy_per_token": 1.0413332751183537, "time": 7.7885513, "time_per_token": 0.04351145977653631}}
{"outputs": [{"text": "# Creating the stop word list\n    stop_words = set(stopwords.words('english'))\n\n    # Using regular expressions to remove special characters and punctuation from the text\n    cleaned_text = re.sub(r'[^\\w\\s]', '', text)\n\n    # Removing extra spaces from the text\n    cleaned_text = re.sub(r'\\s+', ' ', cleaned_text)\n\n    # Splitting the text into words\n    words = cleaned_text.split()\n\n    # Counting the n-gram occurrence in the words\n    ngram_counts = {}\n    for i in range(len(words) - n + 1):\n        ngram = ' '.join(words[i:i+n]).lower()\n        if ngram in ngram_counts:\n            ngram_counts[ngram] += 1\n        else:\n            ngram_counts[ngram] = 1\n\n    # Generating a square co-occurrence matrix based on the n-grams\n    n_words = len(words)\n    co_occurrence_matrix", "tokens": ["#", " Creating", " the", " stop", " word", " list", "\n", "    ", "stop", "_", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "\n", "    ", "#", " Using", " regular", " expressions", " to", " remove", " special", " characters", " and", " punct", "uation", " from", " the", " text", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Rem", "oving", " extra", " spaces", " from", " the", " text", "\n", "    ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Split", "ting", " the", " text", " into", " words", "\n", "    ", "words", " =", " cleaned", "_", "text", ".", "split", "()", "\n", "\n", "    ", "#", " Count", "ing", " the", " n", "-", "gram", " occurrence", " in", " the", " words", "\n", "    ", "ng", "ram", "_", "counts", " =", " {}", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "words", ")", " -", " n", " +", " ", "1", "):", "\n", "        ", "ng", "ram", " =", " '", " '", ".", "join", "(", "words", "[", "i", ":", "i", "+", "n", "])", ".", "lower", "()", "\n", "        ", "if", " n", "gram", " in", " n", "gram", "_", "counts", ":", "\n", "            ", "ng", "ram", "_", "counts", "[", "ng", "ram", "]", " +=", " ", "1", "\n", "        ", "else", ":", "\n", "            ", "ng", "ram", "_", "counts", "[", "ng", "ram", "]", " =", " ", "1", "\n", "\n", "    ", "#", " Gener", "ating", " a", " square", " co", "-", "occ", "ur", "rence", " matrix", " based", " on", " the", " n", "-", "grams", "\n", "    ", "n", "_", "words", " =", " len", "(", "words", ")", "\n", "    ", "co", "_", "occ", "ur", "rence", "_", "matrix"], "logprobs": [-0.4650316834449768, -3.0310027599334717, -1.3298507928848267, -1.6058437824249268, -3.4325671195983887, -0.14619816839694977, -0.47587448358535767, -0.003556119976565242, -0.26913681626319885, -0.3098162114620209, -0.1301679015159607, -0.02312990091741085, -0.1719880849123001, -0.00048268112004734576, -0.013445889577269554, -7.259582343976945e-05, -0.0003526780928950757, -0.001825929619371891, -0.4925272464752197, -0.017666950821876526, -7.867782187531702e-06, -0.006402930710464716, -0.010742218233644962, -0.6081472039222717, -0.0008417400531470776, -0.032809171825647354, -3.6561312675476074, -1.907401204109192, -0.2403658628463745, -0.07387609034776688, -0.9780654907226562, -2.5523173809051514, -0.040926091372966766, -0.7717143297195435, -0.9485543370246887, -0.2022247612476349, -1.8610126972198486, -0.12123657017946243, -0.26448318362236023, -0.1427137404680252, -0.0008481719414703548, -1.6904270648956299, -0.020233305171132088, -0.00793885625898838, -0.003240336664021015, -0.02352260798215866, -1.8358061424805783e-05, -0.008597265928983688, -0.05646086111664772, -0.012963895685970783, -0.19906553626060486, -0.016844535246491432, -0.19743911921977997, -0.0005368936690501869, -0.044373951852321625, -0.0008406681008636951, -0.08845935016870499, -0.030718713998794556, -4.756337511935271e-05, -0.05122990906238556, -0.00010156115604331717, -0.0053442707285285, -0.029438285157084465, -0.03691314905881882, -0.09347876906394958, -0.00045468006283044815, -0.005536934826523066, -2.599032402038574, -0.002872628625482321, -4.3387064933776855, -0.41332176327705383, -0.6780946850776672, -0.035281311720609665, -0.06903444975614548, -0.16344478726387024, -0.00029416524921543896, -0.019811490550637245, -0.00012933371181134135, -0.0005079409456811845, -0.011212317273020744, -1.653990387916565, -0.0004390706308186054, -6.949660019017756e-05, -0.04843311011791229, -0.0007977878558449447, -0.008527177385985851, -0.0002936885575763881, -0.020026275888085365, -1.6569954823353328e-05, -0.0026020498480647802, -0.00018988236843142658, -5.9602869441732764e-05, -0.005212170537561178, -0.00019977481861133128, -1.4305104514278355e-06, -0.017671987414360046, -0.41564255952835083, -0.0340413972735405, -0.0003962923656217754, -0.011744639836251736, -0.5702469944953918, -0.05362195521593094, -0.04770256578922272, -0.11467697471380234, -0.055000897496938705, -0.604176938533783, -0.5452820658683777, -0.00036864637513644993, -0.07274255901575089, -0.021672794595360756, -0.03966199606657028, -1.847726889536716e-05, -9.536738616588991e-07, -6.842378934379667e-05, -0.027923228219151497, -0.0704045370221138, -0.0017519139219075441, -0.013090151362121105, -0.0005669178790412843, -0.00695462990552187, -3.3813486099243164, -0.11636423319578171, -0.14903227984905243, -3.846890926361084, -0.12399890273809433, -2.0365474224090576, -2.6649880409240723, -1.2774112224578857, -0.15047135949134827, -2.1741836071014404, -1.0125762224197388, -0.0017174031818285584, -1.259559154510498, -0.896735668182373, -0.012896230444312096, -0.5457924604415894, -0.004638150800019503, -0.7998145222663879, -0.0027101237792521715, -0.09035574644804001, -0.028538957238197327, -0.14508044719696045, -0.0028376809787005186, -0.0010762381134554744, -0.00027223696815781295, -0.1488654762506485, -2.253030106658116e-05, -0.0003623305819928646, -0.15594646334648132, -0.000760385300964117, -0.11023543030023575, -0.08489206433296204, -0.0007099968497641385, -0.0004564673872664571, -0.0002928543253801763, -0.003980452660471201, -0.0015357855008915067, -0.04225407540798187, -0.0030983323231339455, -0.01583337038755417, -0.45222607254981995, -0.0016498061595484614, -5.006777428206988e-06, -0.000205018965061754, -0.008252686820924282, -0.00019488819816615433, -1.6093124941107817e-05, -1.3589766240329482e-05, -0.041412413120269775, -0.015728231519460678, -0.5471721291542053, -0.0009268993744626641, -0.00024089295766316354, -2.3568115234375, -0.05535207316279411, -1.883488948806189e-05, -0.01440377440303564, -0.017107771709561348, -0.3300917446613312, -0.03901020437479019, -0.0002611534437164664, -1.4843894243240356, -0.7011664509773254, -0.00036590558011084795, -1.1801649634435307e-05, -6.508615479106084e-05, -0.05248863622546196, -0.0013275867095217109, -0.000856509490404278, -0.0012752028414979577, -1.2040065485052764e-05, -4.470248313737102e-05, -7.688703772146255e-05, -0.00011431517486926168, -4.577531944960356e-05, -5.722029527532868e-06, -0.005638883449137211, -0.009505135007202625, -0.0015280486550182104, -2.8967437174287625e-05, -0.0011187491472810507, -0.00034528967808000743, -0.0014779369812458754, -3.1709168979432434e-05, -0.0004068977141287178, -0.0004076126788277179, -0.0008798541966825724, -3.3378546504536644e-06, -9.142934868577868e-05, -2.0861407392658293e-05, -0.00025018901214934886, -1.0132738680113107e-05, -6.425174069590867e-05, -0.00014995403762441128, -3.349725011503324e-05, -0.0003541081096045673, -0.002182603348046541, -0.00018165845540352166, -0.018217505887150764, -0.002509304089471698, -0.025498932227492332, -1.584585428237915, -0.00044800734031014144, -1.6025288105010986, -0.6737720966339111, -0.24765834212303162, -0.008064565248787403, -0.0006481691962108016, -0.0023204563185572624, -0.00040356122190132737, -0.0016621834365651011, -3.178006172180176, -0.0019776327535510063, -0.20298300683498383, -0.49767276644706726, -0.15090620517730713, -2.5255722999572754, -0.6384419202804565, -0.0011121999705210328, -2.6375210285186768, -0.37200579047203064, -1.407779335975647, -0.005532548297196627, -0.04805427044630051, -0.0018538922304287553, -0.06076373532414436, -0.0020399729255586863, -0.021069280803203583, -0.011266068555414677, -0.3839418888092041, -0.5483941435813904, -0.04887185990810394, -0.026606710627675056, -0.06694474816322327, -0.34171262383461, -0.03440888226032257], "finish_reason": "length"}], "metrics": {"energy": 271.57884840679145, "energy_per_token": 1.060854876589029, "time": 11.362079, "time_per_token": 0.04438312109375}}
