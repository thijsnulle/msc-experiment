{"outputs": [{"text": " [word.strip() for word in myList if word.strip()]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", " if", " word", ".", "strip", "()", "]", "\n"], "logprobs": [-0.5269982814788818, -0.4096915125846863, -0.01333991065621376, -0.1796059012413025, -0.00936354510486126, -1.1462368965148926, -0.0023706448264420033, -0.0002236116270069033, -0.006092903204262257, -0.0006342306733131409, -1.8629345893859863, -0.257816344499588, -0.3006010055541992, -0.011575557291507721, -0.001671466277912259, -0.48094427585601807, -0.2719953954219818], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient=\"index\", columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "=", "\"", "index", "\"", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -1.8214960098266602, -0.001831522211432457, -0.0005480932886712253, -2.5629668016335927e-05, -0.10305410623550415, -0.03524195775389671, -2.8886470794677734, -0.006915207486599684, -0.0068207294680178165, -0.09228258579969406], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005843105260282755, -9.536697689327411e-06, -4.529942543740617e-06, -0.5316209197044373], "finish_reason": "stop"}], "metrics": {"energy": 412.92951586627964, "energy_per_token": 8.42713297686285, "time": 14.522189, "time_per_token": 0.29637120408163264}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.7615463733673096, -0.0340629443526268], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts, index=['Count'])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ",", " index", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -2.8125104904174805, -0.0864691436290741, -0.2015669196844101, -0.011099970899522305, -0.008856420405209064, -0.8304018378257751], "finish_reason": "stop"}, {"text": " report_df<|endoftext|>from collections import Counter", "tokens": [" report", "_", "df", "<", "|", "end", "of", "text", "|>", "from", " collections", " import", " Counter", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -1.750954031944275, -1.6569954823353328e-05, -3.814689989667386e-06, -2.7418097943154862e-06, -1.823885577323381e-05, -0.16916251182556152, -1.4858739376068115, -2.1608903408050537, -0.0468454584479332, -0.8980792164802551, -0.04897799715399742], "finish_reason": "stop"}], "metrics": {"energy": 190.26270022964476, "energy_per_token": 5.59596177146014, "time": 6.0655065, "time_per_token": 0.17839724999999998}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 341.4170872859956, "energy_per_token": 7.939932262465014, "time": 11.741077, "time_per_token": 0.2730483023255814}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count': word_counts.values()}, index=word_counts.keys())", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", " word", "_", "counts", ".", "values", "()}", ",", " index", "=", "word", "_", "counts", ".", "keys", "())", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -0.13010521233081818, -1.2516897186287679e-05, -8.344646857949556e-07, -1.6796718835830688, -0.0030864481814205647, -0.6724929809570312, -0.001293061301112175, -0.23554779589176178, -0.02300082892179489, -0.014668595045804977, -9.536738616588991e-07, -9.536738616588991e-07, -0.04273118078708649, -4.172238186583854e-05, -0.0053137969225645065, -0.07635591179132462], "finish_reason": "stop"}, {"text": " report_df<|endoftext|>import itertools", "tokens": [" report", "_", "df", "<", "|", "end", "of", "text", "|>", "import", " iter", "tools", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -1.750954031944275, -1.6569954823353328e-05, -3.814689989667386e-06, -2.7418097943154862e-06, -1.823885577323381e-05, -0.16916251182556152, -1.2895276546478271, -4.067277431488037, -7.891343557275832e-05, -0.09951334446668625], "finish_reason": "stop"}], "metrics": {"energy": 345.8204966964722, "energy_per_token": 6.175366012437004, "time": 11.834517, "time_per_token": 0.21133066071428572}}
{"outputs": [{"text": " [w.strip() for w in myList] # remove leading and trailing whitespaces", "tokens": [" [", "w", ".", "strip", "()", " for", " w", " in", " my", "List", "]", " #", " remove", " leading", " and", " trailing", " whites", "paces", "\n"], "logprobs": [-0.49890628457069397, -2.8267595767974854, -0.025001555681228638, -0.19720032811164856, -0.019743118435144424, -1.1982516050338745, -0.002990300301462412, -0.00019596086349338293, -0.01768580637872219, -0.0005422552349045873, -0.20859067142009735, -2.279484272003174, -1.3184783458709717, -0.16378244757652283, -0.12438993901014328, -0.0039986190386116505, -0.06344553828239441, -0.062444817274808884, -0.19616134464740753], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count': word_counts.values()}, index=word_counts.keys())", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", " word", "_", "counts", ".", "values", "()}", ",", " index", "=", "word", "_", "counts", ".", "keys", "())", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -0.13010521233081818, -1.2516897186287679e-05, -8.344646857949556e-07, -1.6796718835830688, -0.0030864481814205647, -0.6724929809570312, -0.001293061301112175, -0.23554779589176178, -0.02300082892179489, -0.014668595045804977, -9.536738616588991e-07, -9.536738616588991e-07, -0.04273118078708649, -4.172238186583854e-05, -0.0053137969225645065, -0.07635591179132462], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 350.5150856285095, "energy_per_token": 6.872844816245284, "time": 11.364771, "time_per_token": 0.2228386470588235}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count']).sort_values(by='Count')", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", ".", "sort", "_", "values", "(", "by", "='", "Count", "')", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -1.8498419523239136, -0.08411097526550293, -0.00023898606013972312, -0.047302983701229095, -0.5229696035385132, -0.06552726030349731, -0.1688242405653, -0.0019568121060729027, -2.814380645751953, -0.058646317571401596], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 394.7741869831085, "energy_per_token": 7.177712490601973, "time": 13.017494, "time_per_token": 0.23668170909090908}}
{"outputs": [{"text": " Counter(map(lambda x: x.lower().strip(), myList))", "tokens": [" Counter", "(", "map", "(", "lambda", " x", ":", " x", ".", "lower", "()", ".", "strip", "()", ",", " my", "List", "))", "\n"], "logprobs": [-2.062394380569458, -0.8046009540557861, -0.850277304649353, -0.0017308506648987532, -0.8787312507629395, -0.45885133743286133, -0.022580763325095177, -0.23105588555335999, -0.0017214493127539754, -1.7239232063293457, -0.000774917658418417, -0.021929865702986717, -0.012092847377061844, -0.008507084101438522, -0.015929464250802994, -0.037631064653396606, -0.0007580029196105897, -0.0035859348718076944, -0.14769326150417328], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count': word_counts})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", " word", "_", "counts", "})", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -0.13010521233081818, -1.2516897186287679e-05, -8.344646857949556e-07, -0.2535511553287506, -0.18466141819953918], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 298.6686255130768, "energy_per_token": 7.46671563782692, "time": 9.906852, "time_per_token": 0.2476713}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=['Word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=['", "Word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -0.33137616515159607, -0.2869299054145813, -0.003484489396214485, -0.0005447572330012918, -0.049864694476127625, -0.0037010284140706062, -0.015058765187859535, -0.14533108472824097], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06], "finish_reason": "stop"}], "metrics": {"energy": 311.4574506654739, "energy_per_token": 7.243196527104044, "time": 10.730682, "time_per_token": 0.2495507441860465}}
{"outputs": [{"text": " Counter(str(word).strip().lower() for word in myList)", "tokens": [" Counter", "(", "str", "(", "word", ")", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", ")", "\n"], "logprobs": [-2.062394380569458, -0.8046009540557861, -3.7717461585998535, -0.12466317415237427, -0.9859053492546082, -0.3611338138580322, -0.07565344870090485, -0.3585191071033478, -0.011636713519692421, -0.6441673040390015, -0.11853805929422379, -0.00040344204171560705, -0.031324174255132675, -0.0006951061659492552, -0.0002584123576525599, -0.004833323881030083, -0.0007115454645827413, -0.1763484925031662, -0.11773418635129929], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=['Word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=['", "Word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -0.33137616515159607, -0.2869299054145813, -0.003484489396214485, -0.0005447572330012918, -0.049864694476127625, -0.0037010284140706062, -0.015058765187859535, -0.14533108472824097], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06], "finish_reason": "stop"}], "metrics": {"energy": 276.31556767463684, "energy_per_token": 5.879054631375252, "time": 8.351042, "time_per_token": 0.17768174468085104}}
{"outputs": [{"text": " list(map(str.strip, myList))", "tokens": [" list", "(", "map", "(", "str", ".", "strip", ",", " my", "List", "))", "\n"], "logprobs": [-2.9910805225372314, -0.10104525089263916, -0.2707364559173584, -0.002669701585546136, -0.9922176599502563, -0.015758858993649483, -0.15890111029148102, -0.001148874987848103, -0.6357570886611938, -0.00021908267808612436, -0.0013196102809160948, -0.38736575841903687], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index').rename(columns={0: 'Count'})", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "')", ".", "rename", "(", "columns", "={", "0", ":", " '", "Count", "'})", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -1.7848421335220337, -0.75428307056427, -0.32191935181617737, -0.08164297789335251, -0.07725983113050461, -0.06121706962585449, -0.02411731146275997, -0.14378692209720612, -0.1922367811203003, -0.006456112489104271, -0.012289161793887615, -0.12952151894569397], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 260.6447010765076, "energy_per_token": 5.430097939093908, "time": 7.281253, "time_per_token": 0.15169277083333335}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count': word_counts.values()}, index=word_counts.keys())", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", " word", "_", "counts", ".", "values", "()}", ",", " index", "=", "word", "_", "counts", ".", "keys", "())", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -0.13010521233081818, -1.2516897186287679e-05, -8.344646857949556e-07, -1.6796718835830688, -0.0030864481814205647, -0.6724929809570312, -0.001293061301112175, -0.23554779589176178, -0.02300082892179489, -0.014668595045804977, -9.536738616588991e-07, -9.536738616588991e-07, -0.04273118078708649, -4.172238186583854e-05, -0.0053137969225645065, -0.07635591179132462], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 347.0591701488495, "energy_per_token": 7.887708412473852, "time": 11.191145, "time_per_token": 0.25434420454545453}}
{"outputs": [{"text": " [x.strip().lower() for x in myList]", "tokens": [" [", "x", ".", "strip", "()", ".", "lower", "()", " for", " x", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -2.522125482559204, -0.013034380041062832, -0.2700747847557068, -0.02491900324821472, -0.3801855146884918, -0.10767659544944763, -0.00011216964776394889, -0.013093328103423119, -0.003169277450069785, -0.00011991735664196312, -0.010025030933320522, -0.0006456674309447408, -0.307763934135437, -0.2236638367176056], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count']).sort_values(by='Count', ascending=False)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", ".", "sort", "_", "values", "(", "by", "='", "Count", "'", ",", " ascending", "=", "False", ")", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -1.8498419523239136, -0.08411097526550293, -0.00023898606013972312, -0.047302983701229095, -0.5229696035385132, -0.06552726030349731, -0.1688242405653, -0.0019568121060729027, -0.06185914948582649, -0.00026341783814132214, -0.037238117307424545, -0.006150722038000822, -0.00969050545245409, -0.011171411722898483, -0.04435490816831589], "finish_reason": "stop"}, {"text": " report_df.sort_values(by=\"Count\", ascending=False)", "tokens": [" report", "_", "df", ".", "sort", "_", "values", "(", "by", "=", "\"", "Count", "\"", ",", " ascending", "=", "False", ")", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -2.4730610847473145, -0.06475301831960678, -9.274052717955783e-05, -0.3813529908657074, -0.07629759609699249, -0.3717920482158661, -0.3469778597354889, -0.003882015822455287, -0.0008372138836421072, -2.8371408916427754e-05, -0.05298813432455063, -0.016742784529924393, -0.0027607681695371866, -0.008115412667393684, -0.23818865418434143, -0.2914482355117798], "finish_reason": "stop"}], "metrics": {"energy": 396.95627732372293, "energy_per_token": 5.292750364316306, "time": 13.223677, "time_per_token": 0.17631569333333333}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count']).sort_values(by='Count', ascending=False)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", ".", "sort", "_", "values", "(", "by", "='", "Count", "'", ",", " ascending", "=", "False", ")", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -1.8498419523239136, -0.08411097526550293, -0.00023898606013972312, -0.047302983701229095, -0.5229696035385132, -0.06552726030349731, -0.1688242405653, -0.0019568121060729027, -0.06185914948582649, -0.00026341783814132214, -0.037238117307424545, -0.006150722038000822, -0.00969050545245409, -0.011171411722898483, -0.04435490816831589], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06], "finish_reason": "stop"}], "metrics": {"energy": 416.5906815185549, "energy_per_token": 7.060859008789066, "time": 13.409524, "time_per_token": 0.22728006779661017}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 347.17580439090744, "energy_per_token": 7.54730009545451, "time": 11.952189, "time_per_token": 0.2598301956521739}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 230.7990143547058, "energy_per_token": 5.3674189384815305, "time": 6.5212564, "time_per_token": 0.15165712558139535}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]  # remove leading and trailing whitespaces", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "  ", "#", " remove", " leading", " and", " trailing", " whites", "paces", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -2.196821689605713, -0.000800408364739269, -2.520153045654297, -0.19160500168800354, -0.3836725950241089, -0.006722098216414452, -0.07362771779298782, -0.07548245787620544, -1.7766563892364502], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count': word_counts})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", " word", "_", "counts", "})", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -0.13010521233081818, -1.2516897186287679e-05, -8.344646857949556e-07, -0.2535511553287506, -0.18466141819953918], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 239.24809948921205, "energy_per_token": 5.437456806573001, "time": 6.898119, "time_per_token": 0.15677543181818182}}
{"outputs": [{"text": " [word.lower().strip() for word in myList]", "tokens": [" [", "word", ".", "lower", "()", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -1.9039418697357178, -0.00047708096099086106, -0.023099498823285103, -0.009677400812506676, -0.007211724761873484, -0.01547319907695055, -0.0018368767341598868, -0.00013982271775603294, -0.0040604774840176105, -0.0007987407734617591, -0.19039328396320343, -0.16691310703754425], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count']).sort_values('Count', ascending=False)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", ".", "sort", "_", "values", "('", "Count", "'", ",", " ascending", "=", "False", ")", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -1.8498419523239136, -0.08411097526550293, -0.00023898606013972312, -0.047302983701229095, -1.0229276418685913, -0.0002627027570270002, -0.057660702615976334, -0.0002244459028588608, -0.0652013048529625, -0.010039547458291054, -0.010770758613944054, -0.013461061753332615, -0.04918978735804558], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 379.6332274436951, "energy_per_token": 6.545400473167157, "time": 12.211272, "time_per_token": 0.21053917241379308}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " pd.DataFrame(Counter(words).most_common(), columns=['Word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "Counter", "(", "words", ")", ".", "most", "_", "common", "()", ",", " columns", "=['", "Word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-2.866528272628784, -2.8371408916427754e-05, -0.8371695876121521, -0.6931133270263672, -0.07376714050769806, -0.0017564359586685896, -0.0032346330117434263, -0.1443484127521515, -0.23368096351623535, -0.6926772594451904, -7.510157047363464e-06, -3.933898824470816e-06, -0.1669984608888626, -0.005276681389659643, -0.1223292350769043, -0.347909152507782, -0.24643230438232422, -0.001905769924633205, -0.0004683827864937484, -0.05121427774429321, -0.0019267105963081121, -0.008728565648198128, -0.12059147655963898], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=[\"Word\", \"Count\"])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=[", "\"", "Word", "\"", ",", " \"", "Count", "\"", "])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -1.4662829637527466, -0.029821578413248062, -0.4047381579875946, -0.005879844073206186, -0.00042882305569946766, -0.05104392394423485, -0.003503496292978525, -0.0016900317277759314, -0.017428463324904442, -0.28297683596611023], "finish_reason": "stop"}, {"text": " report_df<|endoftext|>#!/usr/bin/env python3", "tokens": [" report", "_", "df", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -1.750954031944275, -1.6569954823353328e-05, -3.814689989667386e-06, -2.7418097943154862e-06, -1.823885577323381e-05, -0.16916251182556152, -1.1232173442840576, -1.249558448791504, -0.06059062480926514, -0.07213938236236572, -0.00013493580627255142, -0.007059156429022551, -0.0003543464408721775, -0.0511789433658123, -0.003769793314859271, -0.5463932752609253, -0.01581307128071785], "finish_reason": "stop"}], "metrics": {"energy": 352.2175866184234, "energy_per_token": 4.574254371667837, "time": 10.434111, "time_per_token": 0.13550793506493505}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 339.3072985820772, "energy_per_token": 7.376245621349504, "time": 11.384733, "time_per_token": 0.24749419565217393}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient=\"index\", columns=[\"Count\"])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "=", "\"", "index", "\"", ",", " columns", "=[", "\"", "Count", "\"", "])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -1.8214960098266602, -0.001831522211432457, -0.0005480932886712253, -2.5629668016335927e-05, -0.10305410623550415, -0.03524195775389671, -0.10516538470983505, -0.0017479868838563561, -0.005503502674400806, -0.0005720409681089222, -0.0028822568710893393, -0.07698757201433182], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005950592458248138, -9.298280929215252e-06, -5.125986263010418e-06, -0.494405061006546], "finish_reason": "stop"}], "metrics": {"energy": 237.74056056404117, "energy_per_token": 4.85184817477635, "time": 7.286822, "time_per_token": 0.1487106530612245}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.values(), word_counts.keys()).rename(", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "values", "()", ",", " word", "_", "counts", ".", "keys", "())", ".", "rename", "(", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -2.5968613624572754, -0.022096624597907066, -0.0007258402765728533, -0.7064244151115417, -9.65590606938349e-06, -1.5020257706055418e-05, -0.0023473347537219524, -9.97731985989958e-05, -1.0521186590194702, -1.6707780361175537, -0.4319521486759186, -0.10502136498689651, -1.981698989868164], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 293.619141319275, "energy_per_token": 6.990931936173214, "time": 9.96847, "time_per_token": 0.2373445238095238}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]  # Clean the data", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "  ", "#", " Clean", " the", " data", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -2.196821689605713, -0.000800408364739269, -3.7484054565429688, -1.124230146408081, -2.6316308975219727, -0.8105344772338867], "finish_reason": "stop"}, {"text": " pd.DataFrame(Counter(words).items(), columns=['word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "Counter", "(", "words", ")", ".", "items", "()", ",", " columns", "=['", "word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-2.866528272628784, -2.8371408916427754e-05, -0.8371695876121521, -0.6931133270263672, -0.07376714050769806, -0.0017564359586685896, -0.0032346330117434263, -0.1443484127521515, -0.23368096351623535, -0.695030927658081, -0.07606483995914459, -0.0013400870375335217, -0.03381945937871933, -0.41860875487327576, -2.106157064437866, -0.0026077572256326675, -0.0006410212954506278, -0.04319790005683899, -0.0992652103304863, -0.004320572596043348, -0.06839051097631454], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Count':word_counts})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Count", "':", "word", "_", "counts", "})", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -1.798258900642395, -0.056486885994672775, -0.048626504838466644, -0.018684806302189827, -2.6437695026397705, -1.156323378381785e-05, -5.364403477869928e-06, -0.2119685560464859, -0.23218241333961487], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 285.7165638885498, "energy_per_token": 5.012571296290347, "time": 8.768192, "time_per_token": 0.15382792982456142}}
{"outputs": [{"text": " [word.strip() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -1.3553876876831055, -0.0019014865392819047, -0.00024136967840604484, -0.007012754213064909, -0.0006475735572166741, -0.19867713749408722, -0.2283208817243576], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(list(word_counts.items()), columns=[\"Words\", \"Count\"])", "tokens": [" pd", ".", "DataFrame", "(", "list", "(", "word", "_", "counts", ".", "items", "())", ",", " columns", "=[", "\"", "Words", "\"", ",", " \"", "Count", "\"", "])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -2.133481502532959, -0.0016756316181272268, -0.03303087502717972, -1.2278481335670222e-05, -3.6954811548639555e-06, -0.0006414977833628654, -0.022127874195575714, -0.016019918024539948, -0.0011141052236780524, -0.07695887237787247, -1.2086350917816162, -0.025787901133298874, -1.7748583555221558, -0.002356254495680332, -0.0005654881824739277, -0.07193262130022049, -0.003948512487113476, -0.00720403203740716, -0.012433398514986038, -0.2120637446641922], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06], "finish_reason": "stop"}], "metrics": {"energy": 370.45617805099477, "energy_per_token": 8.419458592068063, "time": 11.942316, "time_per_token": 0.2714162727272727}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]  # strip and convert to lowercase", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "  ", "#", " strip", " and", " convert", " to", " lower", "case", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -2.196821689605713, -0.000800408364739269, -3.2279491424560547, -1.0973228216171265, -1.293532371520996, -0.12766696512699127, -0.0016794399125501513, -0.16027945280075073, -0.07013706862926483], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 266.9490777168274, "energy_per_token": 4.943501439200507, "time": 7.9398656, "time_per_token": 0.14703454814814815}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=[\"Word\", \"Count\"])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=[", "\"", "Word", "\"", ",", " \"", "Count", "\"", "])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -1.4662829637527466, -0.029821578413248062, -0.4047381579875946, -0.005879844073206186, -0.00042882305569946766, -0.05104392394423485, -0.003503496292978525, -0.0016900317277759314, -0.017428463324904442, -0.28297683596611023], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 240.54696774196617, "energy_per_token": 5.229281907434047, "time": 7.318475, "time_per_token": 0.15909728260869566}}
{"outputs": [{"text": " [word.strip().lower() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -0.37739047408103943, -0.21069185435771942], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(list(word_counts.items()), columns=['Word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "list", "(", "word", "_", "counts", ".", "items", "())", ",", " columns", "=['", "Word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -2.133481502532959, -0.0016756316181272268, -0.03303087502717972, -1.2278481335670222e-05, -3.6954811548639555e-06, -0.0006414977833628654, -0.022127874195575714, -0.016019918024539948, -0.0011141052236780524, -0.07695887237787247, -0.4850481152534485, -0.3241998255252838, -0.004229529295116663, -0.0005106813623569906, -0.06796368956565857, -0.0032594669610261917, -0.0070032840594649315, -0.09929489344358444], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 253.45928831100466, "energy_per_token": 5.509984528500101, "time": 7.7513976, "time_per_token": 0.16850864347826086}}
{"outputs": [{"text": " Counter(str(item).strip() for item in myList if item)", "tokens": [" Counter", "(", "str", "(", "item", ")", ".", "strip", "()", " for", " item", " in", " my", "List", " if", " item", ")", "\n"], "logprobs": [-2.062394380569458, -0.8046009540557861, -3.7717461585998535, -0.12466317415237427, -2.335858106613159, -0.16772177815437317, -0.04637964069843292, -0.3018384277820587, -0.00714970612898469, -0.5892632007598877, -0.0007931424188427627, -0.00010287232726113871, -0.0058503346517682076, -0.0007188120507635176, -2.0937745571136475, -0.47351333498954773, -0.6764800548553467, -0.13859733939170837], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=['Words', 'Count']).sort_values(by=['Count'], ascending=False)", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=['", "Words", "'", ",", " '", "Count", "'])", ".", "sort", "_", "values", "(", "by", "=['", "Count", "']", ",", " ascending", "=", "False", ")", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -0.33137616515159607, -2.210376501083374, -0.0011853104224428535, -0.0006014683749526739, -0.04712991416454315, -0.0029569019097834826, -0.024717941880226135, -1.8547110557556152, -0.4111354351043701, -0.0004319211875554174, -0.006170626264065504, -0.6298487186431885, -0.04989350214600563, -1.6916069984436035, -0.06954043358564377, -0.510675311088562, -0.0013913960428908467, -0.05500597506761551, -0.047483641654253006, -0.009390471503138542, -0.017045192420482635, -0.17075161635875702], "finish_reason": "stop"}, {"text": " report_df.sort_values(\"Count\", ascending=False)", "tokens": [" report", "_", "df", ".", "sort", "_", "values", "(", "\"", "Count", "\"", ",", " ascending", "=", "False", ")"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -2.446289539337158, -0.07440242916345596, -0.00010477947944309562, -0.35456347465515137, -0.09129639714956284, -0.9814403057098389, -0.0003507714136503637, -1.1086402082582936e-05, -0.063911072909832, -0.013699674978852272, -0.005885058548301458, -0.006939713377505541, -0.2284241020679474], "finish_reason": "stop"}], "metrics": {"energy": 344.7552889480592, "energy_per_token": 4.722675191069304, "time": 9.428803, "time_per_token": 0.12916168493150684}}
{"outputs": [{"text": " [word.strip().lower() for word in myList if word.strip()]", "tokens": [" [", "word", ".", "strip", "()", ".", "lower", "()", " for", " word", " in", " my", "List", " if", " word", ".", "strip", "()", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -0.06600265949964523, -0.00013648532330989838, -0.012501448392868042, -0.004729157313704491, -0.00030155404238030314, -0.004429885186254978, -0.0005734706646762788, -1.1732088327407837, -0.22100532054901123, -0.27263230085372925, -0.005886836443096399, -0.002724508987739682, -0.6515970826148987, -0.15614259243011475], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=['Word', 'Count'])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=['", "Word", "'", ",", " '", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -0.33137616515159607, -0.2869299054145813, -0.003484489396214485, -0.0005447572330012918, -0.049864694476127625, -0.0037010284140706062, -0.015058765187859535, -0.14533108472824097], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06], "finish_reason": "stop"}], "metrics": {"energy": 369.24650354003904, "energy_per_token": 7.69263549041748, "time": 12.832998, "time_per_token": 0.267354125}}
{"outputs": [{"text": " [word.strip().casefold() for word in myList]", "tokens": [" [", "word", ".", "strip", "()", ".", "case", "fold", "()", " for", " word", " in", " my", "List", "]", "\n"], "logprobs": [-0.49890628457069397, -0.40479302406311035, -0.01228704210370779, -0.19011090695858002, -0.009535245597362518, -0.30378246307373047, -3.04536509513855, -2.610649426060263e-05, -0.0004922132357023656, -0.010201219469308853, -0.004838899709284306, -0.00026770823751576245, -0.0070367841981351376, -0.0005392765742726624, -0.2264031320810318, -0.20121975243091583], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame(word_counts.items(), columns=[\"Words\", \"Count\"])", "tokens": [" pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "items", "()", ",", " columns", "=[", "\"", "Words", "\"", ",", " \"", "Count", "\"", "])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.9111090898513794, -0.23021847009658813, -1.4305012882687151e-05, -1.5616295058862306e-05, -0.06272610276937485, -0.08386096358299255, -0.02270045131444931, -0.0003864018653985113, -0.038879383355379105, -1.4662829637527466, -0.029821578413248062, -1.6272704601287842, -0.0027733694296330214, -0.0005614373367279768, -0.06325442343950272, -0.0046577295288443565, -0.006182118318974972, -0.02181451953947544, -0.2777831256389618], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.005492477212101221, -1.0847986231965479e-05, -4.410734163684538e-06, -0.5280383825302124], "finish_reason": "stop"}], "metrics": {"energy": 321.15007531166077, "energy_per_token": 6.832980325780016, "time": 10.15409, "time_per_token": 0.21604446808510638}}
{"outputs": [{"text": " Counter(myList)  # Use collections.Counter to count the frequency of each word", "tokens": [" Counter", "(", "my", "List", ")", "  ", "#", " Use", " collections", ".", "Counter", " to", " count", " the", " frequency", " of", " each", " word", "\n"], "logprobs": [-2.062394380569458, -0.8046009540557861, -1.4997695684432983, -0.007503895089030266, -0.0034341190475970507, -2.787215232849121, -0.0018938715802505612, -2.9803967475891113, -2.119373083114624, -0.009488839656114578, -0.0011950739426538348, -0.08460468053817749, -0.06320932507514954, -0.45373058319091797, -0.2269500344991684, -0.02300082892179489, -0.1546197384595871, -0.052137356251478195, -0.21402743458747864], "finish_reason": "stop"}, {"text": " Counter(words)", "tokens": [" Counter", "(", "words", ")", "\n"], "logprobs": [-0.12712553143501282, -0.0073539745062589645, -0.007776344660669565, -0.0002743821241892874, -0.05562949925661087], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_dict(word_counts, orient='index', columns=['Count'])", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "counts", ",", " orient", "='", "index", "'", ",", " columns", "=['", "Count", "'])", "\n"], "logprobs": [-0.0071869888342916965, -3.755022044060752e-05, -0.003077059518545866, -0.8989402055740356, -9.179073458653875e-06, -1.0728830375228426e-06, -0.010038367472589016, -0.013583138585090637, -0.009985375218093395, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.01447685994207859, -0.02799115888774395, -0.18978597223758698, -0.0002076410164590925, -0.1842753142118454, -0.0004183370911050588, -0.0231175534427166, -0.05898216739296913, -0.006313498131930828, -0.00815656129270792, -0.1771163046360016], "finish_reason": "stop"}, {"text": " report_df", "tokens": [" report", "_", "df", "\n"], "logprobs": [-0.0049607292748987675, -9.65590606938349e-06, -4.768360213347478e-06, -0.5364079475402832], "finish_reason": "stop"}], "metrics": {"energy": 266.9349020404816, "energy_per_token": 5.338698040809631, "time": 8.112548, "time_per_token": 0.16225096}}
