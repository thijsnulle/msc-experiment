{"outputs": [{"text": "try:\n        # Create the target directory if it doesn't exist\n        Path(target_directory).mkdir(parents=True, exist_ok=True)\n    except Exception as e:\n        print(f\"Error creating target directory: {str(e)}\")\n        return 0\n\n    # List of extensions to consider\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    # Create a list of file paths in the source directory\n    file_paths = glob.glob(os.path.join(source_directory, '**', '*'), recursive=True)\n\n    files_moved = 0\n    for file_path in file_paths:\n        filename = os.path.basename(file_path)\n        root_name, file_ext = os.path.splitext(filename)\n        # Check if the file is a directory and if it has a valid extension\n        if os.path.isfile(file_path) and file_ext in extensions:\n            # Check if the target file already exists\n            ", "tokens": ["try", ":", "\n", "        ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " creating", " target", " directory", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " List", " of", " extensions", " to", " consider", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " file", " paths", " in", " the", " source", " directory", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", "')", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "root", "_", "name", ",", " file", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "        ", "#", " Check", " if", " the", " file", " is", " a", " directory", " and", " if", " it", " has", " a", " valid", " extension", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " file", "_", "ext", " in", " extensions", ":", "\n", "            ", "#", " Check", " if", " the", " target", " file", " already", " exists", "\n", "            "], "logprobs": [-3.3716020584106445, -0.00021491125517059118, -0.004366031847894192, -0.013640879653394222, -1.6721384525299072, -1.6839995384216309, -0.32598233222961426, -0.030078068375587463, -0.047514673322439194, -0.023318704217672348, -0.004941868595778942, -0.41244739294052124, -0.0005927712772972882, -3.969590397900902e-05, -0.006188279017806053, -0.07846485823392868, -0.0009046276099979877, -0.46920955181121826, -0.021954473108053207, -0.0037418841384351254, -1.0490362910786644e-05, -5.006777428206988e-06, -0.0006245807744562626, -8.987976616481319e-05, -0.00011324241495458409, -2.3841855067985307e-07, -0.0006718761869706213, -0.1707267016172409, -0.00022980909852776676, -0.004361403174698353, -0.00014411364099942148, -5.972207145532593e-05, -2.3841855067985307e-07, -8.821448318485636e-06, -4.279521817807108e-05, -0.00014697425649501383, -0.0030051569920033216, -0.001085764612071216, -0.8440874218940735, -0.0004614718782249838, -2.351224184036255, -0.05155784264206886, -0.26758140325546265, -0.00039593485416844487, -0.014180373400449753, -0.0006075443816371262, -0.2888849675655365, -0.0074118394404649734, -0.08773716539144516, -0.03171032667160034, -0.23115769028663635, -0.3329494297504425, -0.42784568667411804, -0.020236343145370483, -0.06341006606817245, -0.000916537712328136, -0.9527938961982727, -3.9457496313843876e-05, -2.5629668016335927e-05, -0.0018134353449568152, -0.003073850879445672, -0.00040880427695810795, -0.0029294455889612436, -0.05378712713718414, -0.070206418633461, -0.39104652404785156, -0.014525031670928001, -0.028476392850279808, -0.015848388895392418, -0.00047124247066676617, -0.32886505126953125, -2.2371153831481934, -0.11271712929010391, -0.9073385000228882, -0.1187891885638237, -2.0458970069885254, -0.1789785474538803, -0.00014280252798926085, -0.10198096185922623, -0.05187978595495224, -0.3889750838279724, -0.004710529465228319, -0.07261907309293747, -0.003892940701916814, -5.149708886165172e-05, -0.0002733095607254654, -0.0003922408213838935, -0.00010477947944309562, -0.0015430459752678871, -0.0034626307897269726, -6.437280717364047e-06, -0.00018094333063345402, -8.940297266235575e-05, -6.09140915912576e-05, -0.0008518642862327397, -2.5629668016335927e-05, -0.00023636408150196075, -5.125986263010418e-06, -0.0001892864383989945, -0.0001567479339428246, -0.00010752100206445903, -0.0002746204845607281, -8.583032467868179e-06, -0.002303091809153557, -0.0009415484382770956, -0.11191527545452118, -8.082063141046092e-05, -0.12808436155319214, -3.5531527996063232, -0.24928432703018188, -0.7254382371902466, -0.060069430619478226, -2.00276780128479, -0.5457823276519775, -1.443587064743042, -0.029683414846658707, -0.019783208146691322, -0.013360142707824707, -1.835627555847168, -0.00010764019680209458, -0.5813837647438049, -0.004474983550608158, -0.13703837990760803, -0.0062727476470172405, -0.9257795810699463, -2.7656173188006505e-05, -0.036889828741550446, -0.0045749046839773655, -0.46825623512268066, -1.311301275563892e-06, -8.189342770492658e-05, -4.0531076592742465e-06, -0.0018985120113939047, -0.0003047717036679387, -0.01188707072287798, -1.4305104514278355e-06, -4.172316494077677e-06, -0.000636255950666964, -2.1438984870910645, -0.0016031521372497082, -0.15669137239456177, -0.00015341058315243572, -0.24899302423000336, -0.002058174693956971, -0.08177359402179718, -0.00042465253500267863, -0.000603493710514158, -0.00043215948971919715, -0.0007775382255204022, -0.002107067732140422, -0.0026298719458281994, -0.09969538450241089, -5.185469490243122e-05, -2.8780295848846436, -0.020471008494496346, -0.21077199280261993, -3.540453326422721e-05, -0.015615452080965042, -0.042258989065885544, -7.60526381782256e-05, -0.1887718290090561, -0.7408561706542969, -0.14917266368865967, -0.10445152223110199, -0.06112523004412651, -0.0038319032173603773, -0.00037126801908016205, -0.0026793316937983036, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.0001006075763143599, -0.003456809790804982, -0.010016296990215778, -2.8237433433532715, -0.11684799939393997, -0.011864806525409222, -1.6689286894688848e-06, -2.264974000354414e-06, -5.960462772236497e-07, -0.01424900908023119, 0.0, -2.50339189733495e-06, -0.00016962042718660086, -4.768370445162873e-07, 0.0, -0.0001760566228767857, -0.01718968339264393, -0.14515025913715363, -3.103224277496338, -1.9748739004135132, -0.1720178872346878, -0.027683116495609283, -3.0477676391601562, -0.0004907834227196872, -1.0788850784301758, -0.0004612335760612041, -0.00026258357684127986, -3.576278118089249e-07, -2.7418097943154862e-06, 0.0, -9.536738616588991e-07, 0.0, 0.0, -2.0503786799963564e-05, -0.021374700590968132, -0.00029118589009158313, -0.006475774105638266, -1.5592505931854248, -1.6614830493927002, -0.3473782539367676, -0.024998299777507782, -0.11291445791721344, -0.11906321346759796, -2.0053353309631348, -0.6349309682846069, -2.158766508102417, -1.9551740884780884, -0.7235117554664612, -0.7599814534187317, -0.24665309488773346, -1.108938217163086, -0.6085599660873413, -0.031127864494919777, -0.010434831492602825, -0.0005204515182413161, -0.0043281689286231995, -0.1040775403380394, -7.390948667307384e-06, -1.811964830267243e-05, -9.536738616588991e-07, -0.003609928535297513, -0.4181830883026123, -0.00014280252798926085, -0.0011639971053227782, -2.3841830625315197e-06, -7.986990567587782e-06, -0.0010562323732301593, -0.00037520044133998454, -0.07205463945865631, -3.4570634852570947e-06, -2.8132995794294402e-05, -0.17122937738895416, -0.0003333727945573628, -0.004366388078778982, -0.0005059154354967177, -0.006526701617985964, -0.8995870351791382, -0.6418113112449646, -0.3200589418411255, -0.40042394399642944, -1.4229559898376465, -0.1142112985253334, -0.32470086216926575, -0.00035208225017413497, -0.2219080626964569, -0.0004191712068859488], "finish_reason": "length"}], "metrics": {"energy": 1364.8235728931418, "energy_per_token": 5.331342081613835, "time": 31.910494, "time_per_token": 0.1246503671875}}
{"outputs": [{"text": "source_dir = Path(source_directory).resolve()\n    target_dir = Path(target_directory)\n\n    if not source_dir.is_dir():\n        raise FileNotFoundError(f\"Source directory not found: {source_dir}\")\n\n    if not target_dir.exists():\n        target_dir.mkdir(parents=True)\n\n    moved_files = []\n    naming_counter = {}\n\n    for filepath in glob.iglob(str(source_dir / '**/*'), recursive=True):\n        if os.path.isfile(filepath):\n            filename = Path(filepath).name\n\n            if filename.lower().endswith((\".txt\", \".docx\", \".xlsx\", \".csv\")):\n                if filename in naming_counter:\n                    naming_counter[filename] += 1\n                    new_filename = f\"{os.path.splitext(filename)[0]}-{naming_counter[filename]}.{Path(filepath).suffix}\"\n                else:\n", "tokens": ["source", "_", "dir", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " source", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "dir", "}\"", ")", "\n", "\n", "    ", "if", " not", " target", "_", "dir", ".", "exists", "():", "\n", "        ", "target", "_", "dir", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "n", "aming", "_", "counter", " =", " {}", "\n", "\n", "    ", "for", " file", "path", " in", " glob", ".", "ig", "lob", "(", "str", "(", "source", "_", "dir", " /", " '", "**", "/*", "')", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "            ", "filename", " =", " Path", "(", "file", "path", ")", ".", "name", "\n", "\n", "            ", "if", " filename", ".", "lower", "()", ".", "end", "sw", "ith", "((", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "))", ":", "\n", "                ", "if", " filename", " in", " naming", "_", "counter", ":", "\n", "                ", "    ", "n", "aming", "_", "counter", "[", "filename", "]", " +=", " ", "1", "\n", "                ", "    ", "new", "_", "filename", " =", " f", "\"", "{", "os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "0", "]", "}-", "{", "n", "aming", "_", "counter", "[", "filename", "]}", ".", "{", "Path", "(", "file", "path", ")", ".", "suff", "ix", "}\"", "\n", "                ", "else", ":", "\n"], "logprobs": [-2.3840789794921875, -0.1300646960735321, -1.5178394317626953, -0.3820790946483612, -0.11385222524404526, -0.0038541099056601524, -0.013427423313260078, -2.9802276912960224e-06, -1.9550132492440753e-05, -0.0013662775745615363, -1.2526829242706299, -0.16563419997692108, -0.028106607496738434, -0.061273135244846344, -0.03190017119050026, -0.083171546459198, -0.0003868784988299012, -0.001735848723910749, -0.0004687402688432485, -0.0013223483692854643, -0.0003082277253270149, -0.0006387577159330249, -2.3841855067985307e-07, -6.079655122448457e-06, -0.0006281548412516713, -2.9529342651367188, -0.6152324676513672, -0.0002743821241892874, -0.32341739535331726, -0.017095467075705528, -0.06078594923019409, -4.887569048150908e-06, -0.00017867876158561558, -0.0025953915901482105, -0.3075065314769745, -8.702239938429557e-06, -0.0030310661531984806, -0.00934783834964037, -0.005787757225334644, -0.0005980133428238332, -0.018328938633203506, -0.008025068789720535, -9.083335316972807e-05, -2.9802276912960224e-06, -0.01815124973654747, -0.22363276779651642, -0.035396039485931396, -0.320650577545166, -0.009425190277397633, -2.8482677936553955, -0.0008268513483926654, -0.06869594752788544, -0.023526916280388832, -0.042694058269262314, -2.7417760065873154e-05, -0.6501110792160034, -0.024897376075387, -6.246371776796877e-05, -0.00020489977032411844, -0.022916598245501518, -9.893881360767409e-05, -0.476809561252594, -0.015152937732636929, -0.005327077116817236, -1.5735502529423684e-05, -4.3748852476710454e-05, -0.0005703729693777859, -0.6853743195533752, -0.011307677254080772, -0.002617625752463937, -0.00026854246971197426, -0.09461767971515656, -7.033323527139146e-06, -4.8040190449682996e-05, -0.002123840618878603, -0.0001472126314183697, 0.0, -0.15201885998249054, -0.005498879123479128, -8.618460560683161e-05, -0.001404728856869042, -1.3769577741622925, -0.02326338365674019, -0.10528009384870529, -0.0005040090763941407, -2.4024829864501953, -0.01113958191126585, -0.013968678191304207, -0.41110652685165405, -0.7468902468681335, -1.2507871389389038, -0.11383913457393646, -0.4765063226222992, -3.124763011932373, -0.03944588825106621, -0.008940309286117554, -1.3998528718948364, -0.006252845283597708, -0.11413037031888962, -0.06275521218776703, -0.16423359513282776, -0.0002337421028641984, -0.33771419525146484, -0.9629535675048828, -1.840560793876648, -0.003547448432072997, -0.364991694688797, -2.4199192921514623e-05, -0.08166516572237015, 0.0, -0.02138742059469223, -0.2811146676540375, -0.00010573305189609528, -0.0008972433279268444, -1.0728830375228426e-06, -0.00030357998912222683, -0.024180149659514427, -0.5000818967819214, -0.001729065552353859, -0.835891604423523, -0.1077829897403717, -0.00037674958002753556, -0.000105375460407231, -0.00026258357684127986, -0.00024053541710600257, -0.0023500702809542418, -0.007853700779378414, -0.012364167720079422, -0.4957890808582306, -0.5883734226226807, -2.861018856492592e-06, -9.369411418447271e-05, -3.2186455882765586e-06, -0.007421187125146389, -0.018875736743211746, -0.0002795067266561091, -0.0011326810345053673, -2.0265558760002023e-06, -0.2791058123111725, -0.003686182200908661, -0.0021083762403577566, -0.49870750308036804, -0.03678136318922043, -2.0082719326019287, -0.00012027494085486978, -0.0006611545104533434, -1.847726889536716e-05, -0.0008164886385202408, -0.00645812600851059, -0.031502772122621536, -0.00424353638663888, -2.0184555053710938, -0.0003924791526515037, -0.22160103917121887, -0.3869655132293701, -0.058345213532447815, -0.8564229607582092, -0.00018606838420964777, -0.003265883307904005, -0.0016193384071812034, -3.6954811548639555e-06, 0.0, -0.5845916271209717, -0.0024585279170423746, -0.0014612721279263496, -0.010286765173077583, -3.194758028257638e-05, -6.687417771900073e-05, -0.0011834054021164775, -0.0003691230376716703, -0.0023730231914669275, -0.0040545412339270115, -5.960446742392378e-06, -6.639736966462806e-05, -0.0001821352052502334, -2.0265373677830212e-05, -0.0019449143437668681, -1.597391747054644e-05, -0.00031859567388892174, -4.410734163684538e-06, -0.00014983485743869096, -0.00030322244856506586, -4.8993817472364753e-05, -0.0005129451747052372, -1.1205610462639015e-05, -0.0022895331494510174, -0.0234038345515728, -0.010952357202768326, -0.014444783329963684, -0.8211946487426758, -0.03980406001210213, -0.1258002519607544, -0.8138081431388855, 0.0, -2.3841855067985307e-07, -0.02340930700302124, -0.00205163168720901, -0.00047505536349490285, -0.0001679517881711945, -0.10228019207715988, -0.0025553214363753796, -1.7523612768854946e-05, -0.00030417583184316754, -4.541770613286644e-05, -9.179073458653875e-06, -0.0001928620331455022, -0.0017458448419347405, -0.00013553177996072918, -1.168244216387393e-05, -0.0008784249657765031, -0.011812500655651093, -0.18800757825374603, -0.3378623425960541, -0.0011066034203395247, -0.08496258407831192, -0.022062458097934723, -0.26629379391670227, -0.05747658759355545, -0.00038020533975213766, -2.078543186187744, -4.017272294731811e-05, -0.00020013237372040749, -3.576278118089249e-07, -5.471556869451888e-05, 0.0, 0.0, -2.3364747903542593e-05, -0.00302108284085989, -0.0002640137099660933, -3.7788631743751466e-05, -0.002302735112607479, -0.004095738288015127, -0.00041392818093299866, -0.0011455409694463015, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.00016807096835691482, -1.1920922133867862e-06, -1.6415040493011475, -0.2076900601387024, -0.05303098261356354, -3.0211594104766846, -0.001525192055851221, -1.3018169403076172, -0.00029130507027730346, -0.0010609956225380301, -7.867782187531702e-06, -0.00021991695393808186, 0.0, -0.09964035451412201, -0.00378380692563951, -0.013509047217667103, -0.13552288711071014, -4.529942543740617e-06, -6.544376083184034e-05], "finish_reason": "length"}], "metrics": {"energy": 1086.4584696998593, "energy_per_token": 4.243978397265075, "time": 23.796774, "time_per_token": 0.0929561484375}}
{"outputs": [{"text": "# Create a list of file extensions to search for\n    extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Construct a glob pattern to match files with the given extensions\n    pattern = \"*\" + \"|*\".join(extensions)\n\n    # Resolve paths to absolute paths\n    source_directory = os.path.abspath(source_directory)\n    target_directory = os.path.abspath(target_directory)\n\n    # Create the target directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Initialize a counter for the number of files moved\n    files_moved = 0\n\n    # Iterate over each matched file in the source directory\n    for file_path in glob.iglob(os.path.join(source_directory, \"**\", pattern), recursive=True):\n\n        # Extract the filename without extension\n        file_name = os.path.splitext(os.path.basename(file_path))[0]\n", "tokens": ["#", " Create", " a", " list", " of", " file", " extensions", " to", " search", " for", "\n", "    ", "extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Construct", " a", " glob", " pattern", " to", " match", " files", " with", " the", " given", " extensions", "\n", "    ", "pattern", " =", " \"", "*", "\"", " +", " \"", "|", "*", "\"", ".", "join", "(", "extensions", ")", "\n", "\n", "    ", "#", " Res", "olve", " paths", " to", " absolute", " paths", "\n", "    ", "source", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " a", " counter", " for", " the", " number", " of", " files", " moved", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " matched", " file", " in", " the", " source", " directory", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " pattern", ")", ",", " recursive", "=", "True", "):", "\n", "\n", "        ", "#", " Ext", "ract", " the", " filename", " without", " extension", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "[", "0", "]", "\n"], "logprobs": [-0.9796487092971802, -2.7368850708007812, -2.108426332473755, -0.8475522994995117, -0.024505674839019775, -1.010238528251648, -0.04709898307919502, -0.0947461798787117, -1.5325877666473389, -0.09030967950820923, -0.15361334383487701, -0.001069450518116355, -0.5774806141853333, -0.06532560288906097, -2.636279344558716, -0.011007891967892647, -0.27700960636138916, -0.008387104608118534, -0.00020728347590193152, -0.00010346830822527409, -0.0018900641007348895, -0.0008780676289461553, -0.0027278377674520016, -0.002292506629601121, -1.5020257706055418e-05, -3.504691630951129e-05, -0.0002212279650848359, -4.3987260141875595e-05, -0.0021015957463532686, -6.341733387671411e-05, -0.0005137792322784662, -6.6756979322235566e-06, -0.00010752100206445903, -0.0004612335760612041, -3.576214658096433e-05, -0.00048375347978435457, -1.1324817933200393e-05, -0.004392974078655243, -0.002824367256835103, -0.15568695962429047, -0.00023529145983047783, -0.05469745025038719, -3.963951349258423, -1.1318737268447876, -1.2298355102539062, -0.08198316395282745, -0.6015320420265198, -0.7895789742469788, -0.6673043966293335, -0.07838153094053268, -0.5264116525650024, -1.4455288648605347, -0.0141382971778512, -0.1336708813905716, -0.000251142424531281, -0.32783010601997375, -0.0030774159822613, -0.6529604196548462, -2.331554651260376, -0.5317423343658447, -0.039014559239149094, -0.03371181711554527, -0.13887232542037964, -0.2185540646314621, -0.011348812840878963, -3.659658250398934e-05, -7.462222856702283e-05, -0.0013108003186061978, -0.0055709583684802055, -0.000575376907363534, -0.049680158495903015, -0.02128484658896923, -0.0002907091984525323, -0.036203574389219284, -3.8382649421691895, -0.0025584129616618156, -3.2560548782348633, -1.013877034187317, -0.4269622564315796, -0.09612612426280975, -0.4281555116176605, -0.0004465774691198021, -0.15008504688739777, -0.0630415603518486, -0.5315380692481995, -0.04572606459259987, -0.20716167986392975, -5.543078441405669e-05, -7.176141662057489e-05, -6.794906312279636e-06, -0.007837141864001751, -3.2186455882765586e-06, -5.960462772236497e-07, -4.339123915997334e-05, -0.007055605761706829, -1.0728830375228426e-06, -5.722029527532868e-06, -0.0004042761866003275, -0.0008764001540839672, -0.008095192722976208, -0.010089940391480923, -1.7404405298293568e-05, -0.00014590153296012431, -0.0002898749662563205, -0.003288577776402235, -5.960462772236497e-07, -1.9192511899746023e-05, -1.1920928244535389e-07, -0.0004887578543275595, -1.5497195136049413e-06, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.0007205988513305783, -9.536738616588991e-07, -2.7418097943154862e-06, -7.784063927829266e-05, -0.00033825874561443925, -0.007443314418196678, -0.00019441144831944257, -0.0384351909160614, -1.5622340440750122, -0.1666204035282135, -0.014847960323095322, -0.02430662512779236, -0.012056101113557816, -0.0033820830285549164, -0.6410307288169861, -0.0005972985527478158, -2.5987286790041253e-05, -0.013786685653030872, -0.035460930317640305, -0.0001062098381225951, -1.0094958543777466, -1.3470558769768104e-05, -0.00016878610767889768, 0.0, -5.960462772236497e-07, -1.7881377516459906e-06, -0.0005852655158378184, -3.3378546504536644e-06, -2.3841855067985307e-07, -0.0010556369088590145, -0.00021491125517059118, -4.768370445162873e-07, -4.410734163684538e-06, -0.00040058218291960657, -0.00010573305189609528, -2.6702524337451905e-05, -0.0014022289542481303, -0.004196884576231241, -0.00011526874004630372, -0.09666718542575836, -1.3509668111801147, -0.24890965223312378, -0.24446891248226166, -0.31916344165802, -0.41337308287620544, -0.1725441962480545, -0.0003023882454726845, -0.11235932260751724, -0.19892065227031708, -0.07756864279508591, -6.186770770000294e-05, -0.908097505569458, -0.0005442806868813932, -0.005659271962940693, -7.867782187531702e-06, -0.025957848876714706, -0.0007663412252441049, -2.3007127310847864e-05, -0.0001408954558428377, -0.010440375655889511, -0.00010132275929208845, -0.03398309648036957, -1.2117736339569092, -0.0004444326623342931, -0.2550514042377472, -2.6192619800567627, -3.4177651405334473, -0.0868467167019844, -1.023932695388794, -0.013278624042868614, -0.02139768935739994, -0.006632102187722921, -0.2894027829170227, -0.00011812942830147222, -0.020742516964673996, -0.5936770439147949, -0.785938560962677, -0.05253218486905098, -0.004218133166432381, -0.0753050222992897, -1.3947389561508317e-05, -0.43101173639297485, 0.0, -0.0004680253332480788, -0.39693766832351685, -1.4305104514278355e-06, -9.417489309271332e-06, -2.50339189733495e-06, -0.00020525732543319464, -0.00011503035057103261, -0.003275151364505291, -5.960462772236497e-07, -1.537788011773955e-05, -0.0003939091111533344, -0.06022197753190994, -0.0008819981012493372, -0.003981877584010363, -0.0011598295532166958, -0.009786483831703663, -0.0006158839096315205, -6.806619057897478e-05, -0.0014098476385697722, -0.0012685356196016073, -0.00031573555315844715, -0.00021979777375236154, -0.000920706195756793, -1.9862794876098633, -0.0013188959565013647, -0.02146606333553791, -0.7013413310050964, -0.0012460333527997136, -0.05378803238272667, -1.3067963123321533, -2.3712515830993652, -0.9514437317848206, -0.7086427807807922, -0.00013398226292338222, -2.0279860496520996, -0.011045148596167564, -0.04849296063184738, -0.29350757598876953, -0.1975204199552536, -3.3378546504536644e-06, -6.079655122448457e-06, -1.1920928244535389e-07, -0.08160265535116196, 0.0, 0.0, -4.8874615458771586e-05, -0.009281936101615429, -1.1444026313256472e-05, -4.768370445162873e-07, -3.576278118089249e-07, -0.0052835592068731785, 0.0, -9.179073458653875e-06, -0.00016246906307060272, -1.1920922133867862e-06, -3.886147169396281e-05, -0.00012957210128661245, -0.0007023728103376925, -0.00011777184408856556, -0.00015245705435518175, -0.0014896021457388997], "finish_reason": "length"}], "metrics": {"energy": 1073.1611323375705, "energy_per_token": 4.192035673193635, "time": 23.58449, "time_per_token": 0.0921269140625}}
{"outputs": [{"text": "# Ensure that source_directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory {source_directory} does not exist.\")\n\n    # Create the target directory if it doesn't exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Count of files successfully moved\n    files_moved = 0\n\n    # Define the extensions to filter by\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    # Use glob to get the file names\n    for ext in extensions:\n        pattern = f\"**/*{ext}\"\n        files = glob.glob(os.path.join(source_directory, pattern), recursive=True)\n\n        # Move the files to the target directory\n        for file_path in files:\n            filename = os.path.basename(file_path)\n\n            # Check if the file already exists in the target directory\n            while os.path.exists(os.path.join", "tokens": ["#", " Ensure", " that", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Count", " of", " files", " successfully", " moved", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "#", " Define", " the", " extensions", " to", " filter", " by", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "#", " Use", " glob", " to", " get", " the", " file", " names", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "pattern", " =", " f", "\"", "**", "/*", "{", "ext", "}\"", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " pattern", ")", ",", " recursive", "=", "True", ")", "\n", "\n", "        ", "#", " Move", " the", " files", " to", " the", " target", " directory", "\n", "        ", "for", " file", "_", "path", " in", " files", ":", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " target", " directory", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join"], "logprobs": [-0.9796487092971802, -3.76336669921875, -1.6410386562347412, -1.0012421607971191, -0.32055965065956116, -0.0007722970913164318, -0.2154798060655594, -0.371895432472229, -0.001515788841061294, -0.1145562157034874, -0.0060874526388943195, -0.1265665739774704, -3.576272320060525e-06, -0.002410008804872632, -1.0490362910786644e-05, -0.12101013958454132, -0.0001227780303452164, -0.003076703054830432, -3.099436753473128e-06, -9.894321920000948e-06, -0.008080883882939816, -0.0010450384579598904, -0.0010511117288842797, -0.020311923697590828, -0.0014185375766828656, -9.202533692587167e-05, -5.006777428206988e-06, -0.020795993506908417, -0.16106101870536804, -0.04269383102655411, -0.3376801013946533, -0.00527656264603138, -1.953751802444458, -0.0030592328403145075, -8.583032467868179e-06, -5.960462772236497e-07, -0.008592301979660988, -0.13907161355018616, -0.00029940891545265913, -0.0012201968347653747, -0.2681387960910797, -0.0016844383208081126, -0.0003165697562508285, -0.0001227780303452164, -0.016391268000006676, -0.0004433602443896234, -0.0982692539691925, -0.4467010498046875, -0.9269832372665405, -0.0031453920528292656, -0.8273060321807861, -0.022054528817534447, -0.013347321189939976, -0.4121773838996887, -0.0001517419150331989, -5.602820692729438e-06, -0.004799156449735165, -0.029797974973917007, -8.248942322097719e-05, -1.2505903244018555, -0.0031043931376188993, -0.011697040870785713, -1.311301275563892e-06, -2.586808113846928e-05, -3.933898824470816e-06, -0.008770279586315155, -2.5987286790041253e-05, -0.0012142435880377889, -1.311301275563892e-06, -1.2516897186287679e-05, -0.0002991705550812185, -8.34430247778073e-05, -0.0002817710628733039, -0.05289474502205849, -3.4570634852570947e-06, -0.024922026321291924, -2.3841855067985307e-07, 0.0, -3.4689302992774174e-05, -0.0008990298374556005, -1.4305104514278355e-06, -3.123234637314454e-05, -0.015867749229073524, -0.0005351065192371607, -0.014292491599917412, -0.0006791430641897023, -0.0855964943766594, -3.825061798095703, -1.4074528217315674, -0.17452038824558258, -0.46168896555900574, -0.003537470242008567, -0.024730736389756203, -6.317892984952778e-05, -1.211054801940918, -0.0005595310358330607, -0.052013106644153595, -1.680836794548668e-05, -0.06688342243432999, -0.0016692051431164145, -1.9550132492440753e-05, -0.00012599628826137632, -0.02085401862859726, -0.00012540031457319856, -0.023848114535212517, -2.447667121887207, -0.3441712558269501, -1.1741876602172852, -0.3065812885761261, -1.1337438821792603, -0.4716307818889618, -0.016369923949241638, -0.00010990492592100054, -0.08484705537557602, -0.07247838377952576, -0.8571548461914062, -0.003622994292527437, -0.036194950342178345, -0.0035182263236492872, -3.397406908334233e-05, -0.00036006642039865255, -0.0002683041093405336, -0.00014125302550382912, -0.0019368238281458616, -0.0021112312097102404, -5.722029527532868e-06, -0.00013076403411105275, -0.00010156115604331717, -0.0001225396408699453, -0.0019647832959890366, -1.2993727978027891e-05, -0.0002273062855238095, -2.9802276912960224e-06, -0.0005403488758020103, -0.00010489867418073118, -2.002696055569686e-05, -0.0003461238811723888, -6.794906312279636e-06, -0.0016054133884608746, -0.0006744970451109111, -0.005877829622477293, -0.00013660451804753393, -0.022821055725216866, -2.533722162246704, -0.23167090117931366, -0.10810798406600952, -3.1240580081939697, -2.383599042892456, -1.5609878301620483, -0.953920304775238, -2.574258804321289, -0.000309657771140337, -0.9617955684661865, -0.7896223664283752, -0.0017074067145586014, -0.0011401826050132513, -0.00010001159535022452, -0.0012741313548758626, -0.00500841299071908, -2.669650077819824, -0.0025522299110889435, -2.0222387313842773, -0.0608348585665226, -0.3794472813606262, -0.012864809483289719, -0.0020199865102767944, -0.0006814065272919834, -0.005531837232410908, -0.12104900926351547, -0.01942363753914833, -1.2481470108032227, -0.08874650299549103, -0.014193184673786163, -2.0503786799963564e-05, -0.1474321037530899, -0.0003289635351393372, -0.11248663067817688, -2.50339189733495e-06, -2.8132995794294402e-05, -2.7418097943154862e-06, -0.000754786713514477, -0.00021169328829273582, -0.0055242497473955154, -1.1920922133867862e-06, -5.364403477869928e-06, -0.00011598391574807465, -0.0009485750924795866, -0.004846966825425625, -8.797258487902582e-05, -0.0003407612966839224, -0.001259368029423058, -0.0015852991491556168, -0.002516319742426276, -0.000987756997346878, -0.1855466663837433, -0.002757796086370945, -0.7132665514945984, -1.2829827070236206, -0.6834571957588196, -0.2492564618587494, -0.6916535496711731, -0.05584089830517769, -0.01068643294274807, -0.030372770503163338, -0.5490760207176208, -8.95221673999913e-05, -0.007561041042208672, -0.23892085254192352, -1.305125117301941, -0.5141463279724121, -0.002351378323510289, -0.0010830257087945938, -2.2649508537142538e-05, -0.00023648326168768108, -0.006521490402519703, -2.3098645210266113, -0.017116326838731766, -0.13048653304576874, -3.576278118089249e-07, -5.8412379075889476e-06, -1.1920928244535389e-07, -0.0018086755881085992, 0.0, -2.50339189733495e-06, -0.00019405389321036637, -1.0728830375228426e-06, 0.0, -0.0001627074379939586, -0.012958717532455921, -1.300755262374878, -0.0002456601650919765, -0.10391745716333389, -0.5013837218284607, -0.26306164264678955, -0.288837730884552, -0.22267213463783264, -0.23782746493816376, -0.0003535122668836266, -0.0395541787147522, -0.005274902563542128, -0.007665031123906374, -0.006757857743650675, -0.06612998247146606, -0.0002723561483435333, -2.84672212600708, -0.1773098111152649, -1.5497195136049413e-06, -1.1920922133867862e-06, -1.1920922133867862e-06, -0.02086569368839264, -8.475421054754406e-05, -0.0059973993338644505, 0.0, -3.576278118089249e-07, -1.1920922133867862e-06, -1.2636104656849056e-05], "finish_reason": "length"}], "metrics": {"energy": 1039.9998265781403, "energy_per_token": 4.0624993225708605, "time": 23.401215, "time_per_token": 0.09141099609375}}
{"outputs": [{"text": "extensions = ('.txt', '.docx', '.xlsx', '.csv')\n    if not Path(source_directory).is_dir():\n        raise FileNotFoundError(f\"The source directory does not exist: {source_directory}\")\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n    moved_file_count = 0\n    for root, _, filenames in os.walk(source_directory):\n        for filename in filenames:\n            # Check the file extension\n            if os.path.splitext(filename)[1] not in extensions:\n                continue\n\n            # Check if there is a file with the same name in the target directory\n            original_filepath = os.path.join(root, filename)\n            target_filepath = os.path.join(target_directory, filename)\n            i = 0\n            while os.path.exists(target_filepath):\n                i += 1\n                filename_parts = os.path.splitext(filename)\n                filename = filename_parts[0", "tokens": ["extensions", " =", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", "\n", "    ", "if", " not", " Path", "(", "source", "_", "directory", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " source", " directory", " does", " not", " exist", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "m", "oved", "_", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " root", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Check", " the", " file", " extension", "\n", "            ", "if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", " not", " in", " extensions", ":", "\n", "                ", "continue", "\n", "\n", "            ", "#", " Check", " if", " there", " is", " a", " file", " with", " the", " same", " name", " in", " the", " target", " directory", "\n", "            ", "original", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "            ", "target", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "            ", "i", " =", " ", "0", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "path", "):", "\n", "                ", "i", " +=", " ", "1", "\n", "                ", "filename", "_", "parts", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "                ", "filename", " =", " filename", "_", "parts", "[", "0"], "logprobs": [-2.3802566528320312, -0.13607530295848846, -2.5126917362213135, -0.1564612090587616, -0.01133749820291996, -0.00022897482267580926, -0.00029404606902971864, -0.009321029298007488, -0.0018391376361250877, -0.006606641225516796, -0.002719991374760866, -4.9232225137529895e-05, -0.00015758226800244302, -0.0012877037515863776, -7.83174327807501e-05, -0.002293814904987812, -0.00010895135346800089, -0.0008616310660727322, -0.0002562671434134245, -7.784063927829266e-05, -0.002237199805676937, -0.0003904534096363932, -0.0006434039096347988, -0.007062589284032583, -0.06889069825410843, -0.29749858379364014, -3.0316574573516846, -0.03012584149837494, -1.7589192390441895, -0.009176223538815975, -0.047289568930864334, -2.9802276912960224e-06, -2.0265558760002023e-06, -0.0032133632339537144, -0.0003177614707965404, -0.6096820831298828, -2.372236667724792e-05, -0.01827673427760601, -0.005423000548034906, -0.022519340738654137, -0.0033593906555324793, -0.028603950515389442, -0.008862565271556377, -0.0001938155182870105, -1.0013530300057027e-05, -0.1596263349056244, -0.22369195520877838, -0.1592550426721573, -1.7869162559509277, -0.8288806676864624, -0.12503279745578766, -2.312131881713867, -0.002081967191770673, -0.01250721700489521, -0.24285957217216492, -0.25421616435050964, -0.00674376729875803, -1.5020257706055418e-05, -7.390948667307384e-06, -0.031886663287878036, -0.000528076896443963, -0.0011126763420179486, -0.6977764368057251, -0.753023624420166, -0.0017201402224600315, -0.0009108209051191807, -1.0728830375228426e-06, -1.0490362910786644e-05, -0.0005370128201320767, -0.0001380348257953301, -0.0016675388906151056, -4.410734163684538e-06, -0.001095171901397407, -0.31528356671333313, -0.000979896984063089, -0.002430463209748268, -4.6967357775429264e-05, -0.000436091679148376, -7.152555099310121e-07, -1.7404405298293568e-05, -0.00023576818057335913, -9.452849917579442e-05, -0.0002946419408544898, -0.0434807725250721, -0.42873281240463257, -1.8870742321014404, -0.022023160010576248, -0.04895177483558655, -3.113701343536377, -0.005585776641964912, -0.1178293377161026, -0.005621220916509628, -0.006647852249443531, -7.617183291586116e-05, -0.005626081023365259, -0.09208962321281433, -0.16916018724441528, -3.0753660202026367, -0.00769602507352829, -0.8073418736457825, -0.009872183203697205, -1.6655575037002563, -1.728519782773219e-05, -1.549708758830093e-05, -0.0009764432325027883, -0.0019318267004564404, -1.07287787614041e-05, -9.894321920000948e-06, -9.822363062994555e-05, -0.007969723083078861, -5.960462772236497e-07, -1.6689286894688848e-06, -0.04717870056629181, -0.00921650230884552, -0.0010100268991664052, -0.06222640722990036, -0.15858763456344604, -0.00135925377253443, -0.0057845572009682655, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00012396997772157192, -0.0006462631281465292, -0.0008755664457567036, -3.413527250289917, -1.3476637601852417, -2.8774309158325195, -0.615014374256134, -0.3093826174736023, -0.32032153010368347, -0.00024232311989180744, -0.46098506450653076, -1.3282959461212158, -2.4199192921514623e-05, -5.400034933700226e-05, -1.1920928244535389e-07, -0.0010673070792108774, -3.576278118089249e-07, 0.0, -3.397406908334233e-05, -0.001474485034123063, -0.15066024661064148, -0.0005491655902005732, -0.00031549722189083695, -0.9607647061347961, -5.722029527532868e-06, -0.0008183944155462086, -0.0018500846344977617, -0.002670652698725462, -0.00011955977242905647, -0.010350477881729603, -0.0038321407046169043, -1.7804224491119385, -0.0006366133457049727, -0.3029080033302307, -1.7813355922698975, -0.568118155002594, -3.0891592502593994, -0.33010348677635193, -0.40578389167785645, -0.33786284923553467, -0.0588546060025692, -0.006650812458246946, -0.0023730231914669275, -0.014599048532545567, -0.0968967005610466, -0.009974516928195953, -0.07077711075544357, -0.059793345630168915, -0.07575026154518127, -0.00037472377880476415, -2.8285484313964844, -0.0039552804082632065, -2.6772375106811523, -0.699138879776001, -0.010441555641591549, -0.08365858346223831, -1.311301275563892e-06, -2.169585604860913e-05, -5.960462772236497e-07, -0.01254983339458704, -3.504691630951129e-05, -0.0184575617313385, -3.182837463100441e-05, -0.0004471732536330819, -0.00015901254664640874, -0.003321371041238308, -0.013042734004557133, -0.6599732637405396, -0.0023688608780503273, -0.07454605400562286, -0.004408759530633688, -0.005059178452938795, -0.009471835568547249, -8.344646857949556e-07, -1.5497195136049413e-06, -8.344646857949556e-07, -0.0016838433220982552, -2.4676019165781327e-05, -0.0036891514901071787, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.00013839241000823677, -0.008405664004385471, -0.0011088658357039094, -0.0009651293512433767, -0.069036565721035, -2.2592263221740723, -0.0021377585362643003, -0.0028087948448956013, -1.5130226612091064, -0.009801003150641918, -0.0071441433392465115, -0.04389306530356407, -0.12119486182928085, -4.6491513785440475e-06, -8.4638240878121e-06, -9.536738616588991e-07, -0.13747930526733398, -2.884823152271565e-05, -0.0014898402150720358, -2.264974000354414e-06, -3.659658250398934e-05, -3.3378546504536644e-06, -0.037477098405361176, -0.0019248068565502763, -0.00041333239641971886, -0.866437554359436, -0.010305171832442284, -0.0003713871701620519, -1.3708974620385561e-05, -0.003559327218681574, -0.0007869484252296388, -2.016920328140259, -0.19346436858177185, -0.7186020612716675, -0.0012028133496642113, -0.016475465148687363, -1.2040065485052764e-05, -3.2186455882765586e-06, -1.0728830375228426e-06, -0.0010206258157268167, 0.0, 0.0, -6.12716976320371e-05, -0.023394983261823654, -0.00041976699139922857, -0.012175405398011208, -0.00012313561455812305, -0.3328876495361328, -0.05506441742181778, -2.8983187675476074, -0.00013386306818574667, -2.7418097943154862e-06, -2.2649508537142538e-05, -0.00029309268575161695], "finish_reason": "length"}], "metrics": {"energy": 1045.1945085926047, "energy_per_token": 4.082791049189862, "time": 23.182446, "time_per_token": 0.0905564296875}}
{"outputs": [{"text": "try:\n        if os.path.exists(target_directory) is False:\n            os.makedirs(target_directory)\n        elif os.path.exists(target_directory) is True and os.listdir(target_directory) != []:\n            target_directory = Path(target_directory) / 'task_folder'\n            os.makedirs(target_directory)\n\n        for file in glob.iglob(f'{source_directory}/**/*.txt', recursive=True):\n            filename = Path(file).name\n            target_file = Path(target_directory) / filename\n            if os.path.exists(target_file):\n                new_filename = increment_filename(target_directory, filename)\n                target_file = Path(target_directory) / new_filename\n\n            shutil.move(file, target_file)\n\n        for file in glob.iglob(f'{source_directory}/**/*.docx', recursive=True):\n            filename = Path(file).name\n            target_file = Path(target_directory) / filename\n            if os", "tokens": ["try", ":", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", ")", " is", " False", ":", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "        ", "elif", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", ")", " is", " True", " and", " os", ".", "list", "dir", "(", "target", "_", "directory", ")", " ", "!", "=", " []", ":", "\n", "            ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", " /", " '", "task", "_", "folder", "'", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "        ", "for", " file", " in", " glob", ".", "ig", "lob", "(", "f", "'{", "source", "_", "directory", "}/", "**", "/*", ".", "txt", "'", ",", " recursive", "=", "True", "):", "\n", "            ", "filename", " =", " Path", "(", "file", ")", ".", "name", "\n", "            ", "target", "_", "file", " =", " Path", "(", "target", "_", "directory", ")", " /", " filename", "\n", "            ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "):", "\n", "                ", "new", "_", "filename", " =", " increment", "_", "filename", "(", "target", "_", "directory", ",", " filename", ")", "\n", "                ", "target", "_", "file", " =", " Path", "(", "target", "_", "directory", ")", " /", " new", "_", "filename", "\n", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "file", ")", "\n", "\n", "        ", "for", " file", " in", " glob", ".", "ig", "lob", "(", "f", "'{", "source", "_", "directory", "}/", "**", "/*", ".", "doc", "x", "'", ",", " recursive", "=", "True", "):", "\n", "            ", "filename", " =", " Path", "(", "file", ")", ".", "name", "\n", "            ", "target", "_", "file", " =", " Path", "(", "target", "_", "directory", ")", " /", " filename", "\n", "            ", "if", " os"], "logprobs": [-3.148326873779297, -0.00022909401741344482, -0.002963676815852523, -0.01164272241294384, -1.8066061735153198, -2.299008846282959, -0.0006962973857298493, -0.11389774829149246, -1.7046782886609435e-05, -0.3901125192642212, -0.0007457336178049445, -1.4641404151916504, -2.253030106658116e-05, -1.0967194612021558e-05, -1.3977348804473877, -1.086642861366272, -0.05314809828996658, -0.010443206876516342, -0.02373240701854229, -0.006494960747659206, -0.25442102551460266, -2.0146166207268834e-05, -0.37099871039390564, -2.2172682292875834e-05, -2.586808113846928e-05, -0.0005900310934521258, -0.022151775658130646, -3.3378546504536644e-06, -5.722029527532868e-06, -0.07239367067813873, -0.04948617145419121, -1.6161608695983887, -3.5751278400421143, -0.12309127300977707, -8.093983342405409e-05, -0.013043675571680069, -2.2172682292875834e-05, -1.007062554359436, -0.0018433022778481245, -0.46449556946754456, -1.680836794548668e-05, -6.305972783593461e-05, -0.052369408309459686, -0.20738686621189117, -0.07653824239969254, -1.0755501985549927, -0.08959013968706131, -4.029192859889008e-05, -1.0445129871368408, -2.50339189733495e-06, -0.0019658540841192007, -0.03552122041583061, -3.3378546504536644e-06, -4.994744449504651e-05, -0.8968899250030518, -0.4414481520652771, -3.933898824470816e-06, -1.1205610462639015e-05, -0.11666512489318848, -0.005796053912490606, -0.012260900810360909, -0.007554415613412857, -2.009887456893921, -0.018039094284176826, -0.028293082490563393, -0.25570425391197205, -1.14113187789917, -0.032452065497636795, -0.04726182296872139, -3.2066785934148356e-05, -4.291525328881107e-06, -0.20496128499507904, -2.4718329906463623, -2.3433308601379395, -2.402033805847168, -0.31190958619117737, -1.6911588907241821, -0.14258423447608948, -0.019192000851035118, -0.12008795142173767, -0.17784082889556885, -1.3232143828645349e-05, -0.28115856647491455, -2.062299427052494e-05, -7.390948667307384e-06, -0.00031394799589179456, -0.008077336475253105, -2.0265558760002023e-06, -1.1920922133867862e-06, -0.02668181248009205, -0.0038791659753769636, -0.5152551531791687, -0.05399281904101372, -3.5569357872009277, -0.8128167390823364, -0.49444761872291565, -0.11563985049724579, -6.615896563744172e-05, -1.0050239562988281, -2.3841855067985307e-07, -0.03270718827843666, -1.4634029865264893, -0.31200504302978516, -0.055214010179042816, -2.9802276912960224e-06, -7.390948667307384e-06, -0.21862323582172394, -0.019400371238589287, -0.1334039717912674, -0.21800465881824493, -0.5704671144485474, -0.017150545492768288, -0.004322709050029516, -0.006701494567096233, -0.0163410734385252, -0.0018830440239980817, -0.0759086161851883, -0.01004474051296711, -0.010515756905078888, -1.9208705425262451, -0.08064074069261551, -0.9016574025154114, -0.0016320730792358518, -0.0043884641490876675, -0.000854841957334429, -0.048834167420864105, -0.4815322756767273, -0.02402246743440628, -0.05673527717590332, -2.5813732147216797, -0.07677816599607468, -0.5233140587806702, -0.20356784760951996, -0.23654450476169586, -0.002072688192129135, -0.026095250621438026, -7.152555099310121e-07, -5.054346183896996e-05, -0.06921088695526123, -0.012216858565807343, -0.08704593777656555, -0.003946493845432997, -0.26939070224761963, -0.6407953500747681, -1.0295013189315796, -9.894321920000948e-06, -0.0006643710657954216, -4.291525328881107e-06, -0.0941745787858963, -0.00022682955022901297, -0.016657907515764236, -8.22540732769994e-06, -0.0020159415435045958, -0.1269080936908722, -0.007751385681331158, -0.0016445695655420423, -2.326667308807373, -0.010684546083211899, -0.37859803438186646, -0.03676022216677666, -3.5481810569763184, -0.00395539915189147, -0.11764834821224213, -0.032471220940351486, -1.0724425315856934, -2.753696753643453e-05, -1.4842290878295898, -0.01644274778664112, -0.032843317836523056, -0.022013366222381592, -0.007203440181910992, -0.002576248487457633, -0.7007881999015808, -4.1960789531003684e-05, -0.001157686347141862, -0.004048842005431652, -0.0374361053109169, -0.00035446559195406735, -0.0020038066431879997, -2.3841855067985307e-07, -0.001069212332367897, -0.009772435761988163, -0.0006688979919999838, -0.011044559068977833, -4.7801782784517854e-05, -5.960462772236497e-07, -0.0012975853169336915, -2.355651617050171, -0.009270361624658108, -0.05158184468746185, -4.6491513785440475e-06, -2.145764938177308e-06, -0.22152376174926758, -7.795983401592821e-05, -0.01663082465529442, -0.0007289375062100589, -0.022699983790516853, -6.794906312279636e-06, -0.0005962263094261289, -0.005898331757634878, -0.0012857988476753235, -0.4066964089870453, -0.02100706472992897, -0.014728621579706669, -0.008793204091489315, -0.004223237745463848, -0.00035982808913104236, -2.264974000354414e-06, -0.00022289653134066612, -5.960462772236497e-07, -0.00038842763751745224, -0.005537882912904024, -0.005506585352122784, -0.000436925794929266, -9.536738616588991e-07, -1.9550132492440753e-05, -0.003929870203137398, -2.455681169521995e-05, -0.00423427764326334, -0.001258891774341464, -0.028297601267695427, -0.0074585783295333385, -0.0006137394811958075, -7.1403817855753e-05, -0.003579995594918728, -0.0002026352594839409, -0.00014733182615600526, -0.00024375328212045133, -0.00019238528329879045, -0.001374729792587459, -0.002084584441035986, -0.00018809456378221512, -0.0022159088402986526, -1.3708974620385561e-05, -8.40390202938579e-05, -2.3841574147809297e-05, -0.0003026265767402947, -0.0002203936892328784, -0.0001392267586197704, -0.00126079679466784, -0.0030947669874876738, -2.634490556374658e-05, -0.0002057340752799064, -0.00015793983766343445, -0.002230182057246566, -4.589452510117553e-05, -0.00011634149996098131, -4.768370445162873e-07, -0.0001392267586197704, -0.0003300360403954983, -0.00012230125139467418, -0.0007282227743417025, -9.715084888739511e-05, -0.014967402443289757, -0.0013667537132278085, -0.0008755664457567036], "finish_reason": "length"}], "metrics": {"energy": 1015.3585713539126, "energy_per_token": 3.966244419351221, "time": 23.368431, "time_per_token": 0.09128293359375}}
{"outputs": [{"text": "extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(\"Source directory does not exist\")\n\n    os.makedirs(target_directory, exist_ok=True)\n\n    files_to_move = [\n        file for file in glob.iglob(os.path.join(source_directory, \"**\", \"*\"), recursive=True)\n        if os.path.isfile(file) and os.path.splitext(file)[1].lower() in extensions\n    ]\n\n    moved_files = 0\n    for file in files_to_move:\n        filename = os.path.basename(file)\n        target_file = os.path.join(target_directory, filename)\n\n        if os.path.exists(target_file):\n            name, ext = os.path.splitext(filename)\n            index = 1\n            while os.path.exists(target_file):\n                target", "tokens": ["extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "files", "_", "to", "_", "move", " =", " [", "\n", "        ", "file", " for", " file", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " \"", "*", "\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", ")", " and", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", ".", "lower", "()", " in", " extensions", "\n", "    ", "]", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "):", "\n", "            ", "name", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "            ", "index", " =", " ", "1", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "):", "\n", "                ", "target"], "logprobs": [-2.3802566528320312, -0.13607530295848846, -0.6476328372955322, -0.006539018824696541, -0.08000356703996658, -0.005440311040729284, -4.732496745418757e-05, -0.0003843760641757399, -0.0011593532981351018, -0.00016783259343355894, -0.001973706530407071, -0.0019298041006550193, -1.0251946150674485e-05, -0.00036769305006600916, -0.00019536493346095085, -8.427741704508662e-05, -0.0017823775997385383, -6.067568756407127e-05, -0.00046850196667946875, -5.483612312673358e-06, -0.000504723924677819, -0.00040844682371243834, -9.345571743324399e-05, -0.00048792376765049994, -8.34461570775602e-06, -0.0020234365947544575, -0.0713094100356102, -1.2703001499176025, -0.0004959068610332906, -1.096699595451355, -0.02149861678481102, -0.12464896589517593, -2.074220174108632e-05, -0.00311211752705276, -1.4066597032069694e-05, -0.1954018473625183, -9.238292841473594e-05, -0.0250458512455225, -3.576272320060525e-06, -5.960462772236497e-07, -0.0030920335557311773, -0.009535127319395542, -0.0010057396721094847, -0.04595334455370903, -0.003270517336204648, -9.42901024245657e-05, -8.22540732769994e-06, -0.007264627143740654, -1.4565008878707886, -0.20275624096393585, -0.008451055735349655, -0.06259006261825562, -0.0002300474588992074, -0.0007239343249239028, -1.7375589609146118, -0.002154411980882287, -0.0006369707407429814, -0.025744451209902763, -0.00036149643710814416, -0.9786514639854431, -8.05822346592322e-05, -0.0002681849291548133, -1.1920928244535389e-07, -2.145764938177308e-06, -7.629365427419543e-06, -0.0018774517811834812, -1.1920922133867862e-06, -1.1920922133867862e-06, -0.0013649680186063051, -0.00040344204171560705, -7.152555099310121e-07, -3.6954811548639555e-06, -0.0009910915978252888, -0.00012432756193447858, -2.610649426060263e-05, -0.04853702336549759, -0.11594658344984055, -0.00013016807497479022, -0.679824709892273, -0.21840766072273254, -1.0479192733764648, -8.940656698541716e-06, -0.02949303388595581, -0.004893113858997822, -1.1499230861663818, -0.3933926820755005, -0.0017630999209359288, -0.6806170344352722, -0.9225034713745117, -0.6796992421150208, -0.007080226205289364, -0.08068384975194931, -3.528532761265524e-05, -1.2456152439117432, 0.0, -0.0021758233197033405, -1.0124914646148682, -1.1086402082582936e-05, -4.95898348162882e-05, -2.1457441107486375e-05, -0.0003667397249955684, -0.0002674698771443218, -0.0035872412845492363, -3.576278118089249e-07, -1.168244216387393e-05, -0.0005081792478449643, -0.05691637471318245, -0.002087677363306284, -0.06686057150363922, -0.018170330673456192, -0.0013050857232883573, -0.001587798586115241, -0.015995632857084274, -0.0005499995895661414, -0.00017295771976932883, -0.004078404977917671, -0.0003741279651876539, -0.0002053765201708302, -0.0010935047175735235, -0.5546974539756775, -0.002847903873771429, -0.0009696549386717379, -0.34255582094192505, -1.4305104514278355e-06, -1.1920858014491387e-05, -2.622600959512056e-06, -0.12764661014080048, -7.795983401592821e-05, -0.0008457897347398102, -0.0013642538106068969, -0.00037579628406092525, -0.03864830732345581, -0.19025403261184692, -1.0728830375228426e-06, -1.3351351299206726e-05, -5.960462772236497e-07, -6.103329360485077e-05, -1.0728830375228426e-06, 0.0, -1.6212332411669195e-05, -0.0015222163638100028, -0.05476268380880356, -0.0006418551784008741, -0.0001497156627010554, -0.9014164805412292, -0.0020378315821290016, -6.556489552167477e-06, -0.001258653705008328, -0.0002783149539027363, -0.032680537551641464, -0.00384187838062644, -0.0003275334893260151, -0.00032026408007368445, -0.03535772114992142, -0.00012408917245920748, -0.8062158226966858, -0.0063198949210345745, -0.007097034715116024, -0.31961193680763245, -0.9197622537612915, -0.31095120310783386, -0.00018165845540352166, -0.0015855372184887528, -0.711216390132904, -0.08473195135593414, -0.17441426217556, -0.2114984095096588, -0.0013000854523852468, -1.4305104514278355e-06, 0.0, 0.0, -8.344646857949556e-07, -0.00036030475166626275, -0.00012027494085486978, -0.006460139527916908, -1.217882752418518, -0.03286293148994446, -0.07591049373149872, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.006687521934509277, 0.0, -1.7881377516459906e-06, -0.00013040646445006132, -0.00014780859055463225, -0.004911737982183695, -0.06347540766000748, -0.30808714032173157, -0.008423986844718456, -0.8953754901885986, -0.42533138394355774, -0.013445183634757996, 0.0, -7.152555099310121e-07, -5.960462772236497e-07, -0.0005233110277913511, -6.079655122448457e-06, -0.00040236959466710687, -1.1920928244535389e-07, -1.4305104514278355e-06, -2.8490614567999728e-05, -0.0011626873165369034, -0.001128632458858192, -0.0006071869283914566, -0.45068827271461487, -0.00023898606013972312, -0.49090495705604553, -0.02003784477710724, -4.768370445162873e-07, -8.702239938429557e-06, 0.0, -0.049864016473293304, -7.271740287251305e-06, -0.00021598390594590455, -9.536738616588991e-07, -6.556489552167477e-06, -0.002538912231102586, -0.011911101639270782, -0.0017193072708323598, -2.469531536102295, -0.02874608524143696, -0.1340155154466629, -0.0006702084210701287, -0.0009708458674140275, -1.1920928244535389e-07, -5.960462772236497e-07, -2.3841855067985307e-07, -1.4781842764932662e-05, 0.0, 0.0, -1.9073304429184645e-05, -0.021839596331119537, -0.00014935807848814875, -0.0017450118903070688, -0.03848153352737427, -3.0342295169830322, -0.0005874100024811924, -0.0006586528033949435, -0.035743240267038345, -0.0009675112669356167, -0.19760015606880188, -0.017574185505509377, -0.3716101348400116, -3.4570634852570947e-06, -1.1920928244535389e-07, -1.1920922133867862e-06, -5.721882189391181e-05, -5.98412734689191e-05, -0.1897999793291092, -3.516612196108326e-05, -8.49926145747304e-05, -0.02213883399963379, -0.0013367536012083292, -0.00018416139937471598, -0.4774935245513916], "finish_reason": "length"}], "metrics": {"energy": 1056.6951725063323, "energy_per_token": 4.12771551760286, "time": 23.604582, "time_per_token": 0.0922053984375}}
{"outputs": [{"text": "# Get the absolute paths for both directories\n    source_path = os.path.abspath(source_directory)\n    target_path = os.path.abspath(target_directory)\n\n    # Check if source directory exists\n    if not os.path.exists(source_path):\n        raise FileNotFoundError(f\"Source directory '{source_path}' does not exist.\")\n\n    # Create the target directory if it doesn't exist\n    Path(target_path).mkdir(parents=True, exist_ok=True)\n\n    # Define file extensions to search for\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    # Initialize counter for successful file moves\n    moved_files_count = 0\n\n    # Iterate through files with specific extensions in the source directory and its subdirectories\n    for ext in extensions:\n        for file in glob.iglob(os.path.join(source_path, \"**\", f\"*{ext}\"), recursive=True):\n            # Get the filename with its extension", "tokens": ["#", " Get", " the", " absolute", " paths", " for", " both", " directories", "\n", "    ", "source", "_", "path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "path", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "Path", "(", "target", "_", "path", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Define", " file", " extensions", " to", " search", " for", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "#", " Initialize", " counter", " for", " successful", " file", " moves", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " with", " specific", " extensions", " in", " the", " source", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "path", ",", " \"", "**", "\"", ",", " f", "\"", "*{", "ext", "}\"", ")", ",", " recursive", "=", "True", "):", "\n", "            ", "#", " Get", " the", " filename", " with", " its", " extension"], "logprobs": [-0.9796487092971802, -3.7333316802978516, -0.44634196162223816, -0.109434574842453, -0.19402997195720673, -1.0724222660064697, -2.0485219955444336, -0.7163024544715881, -0.18828362226486206, -0.0024700628127902746, -0.18927370011806488, -0.10736387968063354, -1.4811702966690063, -0.02437887340784073, -0.8551459908485413, -2.622600959512056e-06, -0.0006270825979299843, -1.0251946150674485e-05, -0.008612276054918766, -3.576278118089249e-07, -1.4305104514278355e-06, -0.00025900822947733104, -0.011196992360055447, -2.7418097943154862e-06, -4.887569048150908e-06, -0.0008353081648238003, -0.0036670600529760122, -0.0015654225135222077, -0.011517344042658806, -0.00024673278676345944, -0.0032106302678585052, -0.00042655906872823834, -0.005514646880328655, -7.152555099310121e-07, -2.8609820219571702e-05, -3.576278118089249e-07, -0.0014467497821897268, 0.0, -5.245195097813848e-06, -5.94836674281396e-05, -0.0010892179561778903, -2.3841855067985307e-07, -2.52720492426306e-05, -0.00024244230007752776, -0.0010698077967390418, -0.048643652349710464, -0.00026806574896909297, -0.07074534893035889, -0.5112203359603882, -0.056149180978536606, -1.4347809553146362, -0.38760364055633545, -0.016261205077171326, -0.16126830875873566, -0.0001245659514097497, -0.0028426735661923885, -0.016985539346933365, -0.002136925933882594, -1.9073468138230965e-06, -7.343022298300639e-05, -7.390948667307384e-06, -0.3671005666255951, -2.4318398573086597e-05, -0.0005697772721759975, -1.4305104514278355e-06, -0.017415575683116913, -0.006046455819159746, -0.0007801587926223874, -0.0006216024048626423, -0.03943305462598801, -0.002493250882253051, -6.270212179515511e-05, -4.172316494077677e-06, -0.017152419313788414, -0.2994028925895691, -0.03429761528968811, -0.18184763193130493, -0.006601785775274038, -0.43794161081314087, -0.00011848701251437888, -0.0005889588501304388, -2.074220174108632e-05, -0.25891008973121643, -0.0010792152024805546, -0.11216945201158524, -0.0001679517881711945, -0.00114125432446599, -0.16547468304634094, -0.0021927140187472105, -0.0002108589978888631, -0.00013136000779923052, -0.009250637143850327, -0.00037698791129514575, -0.019632546231150627, -0.26639464497566223, -0.5917059183120728, -0.006211499683558941, -0.009630647487938404, -0.011688086204230785, -0.010180451907217503, -0.263221800327301, -0.00022873646230436862, -1.1324817933200393e-05, -0.003566454164683819, -0.02622276358306408, -4.029192859889008e-05, -2.160858154296875, -0.018201468512415886, -0.0010802869219332933, -3.576278118089249e-07, -0.004758818540722132, -0.00014077626110520214, -1.8954096958623268e-05, -5.2689116273541003e-05, -3.576278118089249e-07, -0.000105375460407231, -0.05149443820118904, -0.00016604475968051702, -0.003926901612430811, -1.1801649634435307e-05, -2.586808113846928e-05, -4.768370445162873e-07, -4.529942543740617e-06, -2.3603161025675945e-05, -4.470248313737102e-05, -0.0006146925734356046, -0.0027860894333571196, -0.006831503938883543, -0.00016091958968900144, -0.06298448145389557, -1.5164568424224854, -2.491147994995117, -0.04610681161284447, -0.1365736424922943, -1.5731552839279175, -0.0906904861330986, -0.04672669246792793, -0.00014852374442853034, -0.32585641741752625, -0.05704283341765404, -1.179043173789978, -0.0037807191256433725, -0.1795942485332489, -0.0032883400563150644, -8.976056415122002e-05, -0.0004111875023227185, -0.0003721021639648825, -0.00011789103882620111, -0.002247666707262397, -0.0016451646806672215, -7.629365427419543e-06, -0.0001525762490928173, -7.092700980138034e-05, -0.00028606137493625283, -0.000846027978695929, -1.597391747054644e-05, -0.00023946279543451965, -5.483612312673358e-06, -0.0005197366117499769, -0.00012635385792236775, -5.2689116273541003e-05, -0.0002051381452474743, -8.583032467868179e-06, -0.0016684910515323281, -0.0013662775745615363, -0.02906862273812294, -4.5060096454108134e-05, -0.07937227189540863, -1.0565674304962158, -2.2435858249664307, -0.25396957993507385, -2.438868522644043, -1.5346488952636719, -0.0562593974173069, -0.004594721365720034, -0.00010358751023886725, -0.6987341642379761, -0.1404792070388794, -0.006917220074683428, -0.6712950468063354, -0.7419261336326599, -0.13649283349514008, -0.00012289722508285195, -0.0007697956170886755, -9.536697689327411e-06, -8.785339014139026e-05, -0.01088467426598072, -9.60780744208023e-05, -0.08102128654718399, -1.5638909339904785, -0.0008164886385202408, -0.8987781405448914, -2.3878042697906494, -2.0130064487457275, -1.4247572422027588, -0.015126166865229607, -0.4525933265686035, -0.10058126598596573, -0.012451883405447006, -0.012314360588788986, -1.3258793354034424, -0.21034078299999237, -0.001934325322508812, -0.1298329383134842, -2.622600959512056e-06, -0.015402768738567829, -0.0005607224884442985, -0.05994616076350212, -0.6190140843391418, -0.0009678685455583036, -0.0006621075444854796, -3.015949550899677e-05, -0.00042798896902240813, -0.004226086661219597, -1.3705086708068848, -0.31626978516578674, -1.1277623176574707, -0.008556017652153969, -9.417489309271332e-06, -0.9265249371528625, 0.0, -0.0006721144891344011, -0.5502562522888184, -7.152555099310121e-07, -1.0490362910786644e-05, -4.0531076592742465e-06, -0.002083632629364729, -0.00031728477915748954, -0.0035347382072359324, -8.344646857949556e-07, -0.004590330645442009, -0.0007419217727147043, -0.4926687180995941, -0.004274992737919092, -0.028831101953983307, -0.005149316042661667, -0.02577001042664051, -0.00889245793223381, -0.09656371176242828, -0.00044955636258237064, -0.0008697302546352148, -0.000636255950666964, -3.325883881188929e-05, -0.00021360022947192192, -0.00020692592079285532, -0.0003399271226953715, -0.0004536076739896089, -0.0008017186191864312, -0.02668413333594799, -0.5769314169883728, -0.6565834879875183, -0.10620338469743729, -1.551161766052246, -1.7238155603408813, -1.8041739463806152, -1.0153987407684326], "finish_reason": "length"}], "metrics": {"energy": 1088.059712547303, "energy_per_token": 4.250233252137902, "time": 23.586105, "time_per_token": 0.09213322265625}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory not found: {source_directory}\")\n\n    os.makedirs(target_directory, exist_ok=True)\n\n    source_path = Path(source_directory)\n    target_path = Path(target_directory)\n    total_moved = 0\n\n    for ext in (\".txt\", \".docx\", \".xlsx\", \".csv\"):\n        for filepath in source_path.rglob(f\"*{ext}\"):\n            filepath = str(filepath)  # Convert Path to string\n\n            if not os.path.isfile(filepath):\n                continue  # Skip if it's not a regular file\n\n            filename = os.path.basename(filepath)\n            target_filepath = os.path.join(target_path, filename)\n\n            while os.path.exists(target_filepath):\n                name, ext = os.path.splitext(filename)\n                match = re.search(r\"-\\d", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "total", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " ext", " in", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "):", "\n", "        ", "for", " file", "path", " in", " source", "_", "path", ".", "rg", "lob", "(", "f", "\"", "*{", "ext", "}\"", "):", "\n", "            ", "file", "path", " =", " str", "(", "file", "path", ")", "  ", "#", " Convert", " Path", " to", " string", "\n", "\n", "            ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "                ", "continue", "  ", "#", " Skip", " if", " it", "'", "s", " not", " a", " regular", " file", "\n", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "path", ")", "\n", "            ", "target", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "path", ",", " filename", ")", "\n", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "path", "):", "\n", "                ", "name", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "                ", "match", " =", " re", ".", "search", "(", "r", "\"", "-\\", "d"], "logprobs": [-2.0947837829589844, -0.048291586339473724, -0.16566723585128784, -3.302042750874534e-05, -0.002990300301462412, -3.9219088648678735e-05, -0.09393922239542007, -0.00032443503732793033, -0.012956246733665466, -5.364403477869928e-06, -7.629365427419543e-06, -0.003467620350420475, -0.009803718887269497, -0.002781928749755025, -0.04047582671046257, -0.0035747692454606295, -0.00011729506513802335, -7.271740287251305e-06, -0.04469935595989227, -0.24588355422019958, -0.041905809193849564, -0.40470442175865173, -0.011688793078064919, -2.732959747314453, -0.002195212058722973, -0.04308589547872543, -0.020351989194750786, -0.001484959851950407, -2.7418097943154862e-06, -9.536738616588991e-07, -0.007840098813176155, -0.0001445904199499637, -0.0004934046883136034, -0.049423545598983765, -0.00030501006403937936, -2.328876495361328, -0.0014153235824778676, -0.002275260630995035, -1.1920928244535389e-07, -1.4305104514278355e-06, -7.629365427419543e-06, -0.0020096360240131617, -1.0728830375228426e-06, -1.0728830375228426e-06, -0.0005987281911075115, -0.0004615910293068737, -1.0728830375228426e-06, -6.079655122448457e-06, -0.0009526243666186929, -0.0002369599969824776, -2.95634672511369e-05, -0.11114595085382462, -0.2758984863758087, -0.0002791491860989481, -2.5919249057769775, -0.03841305151581764, -1.3677562475204468, -0.013278271071612835, -0.03735606372356415, -0.0012804412981495261, -0.0046300822868943214, -7.152555099310121e-07, -6.437280717364047e-06, -0.001796657219529152, -0.2268950343132019, -0.08335910737514496, -0.14842727780342102, -0.0002650863316375762, -0.0016690860502421856, -0.00040534863364882767, -5.435795901576057e-05, -5.7338023907504976e-05, -0.00019762947340495884, -1.1920928244535389e-07, -1.0132738680113107e-05, -0.00013982271775603294, -0.0014313939027488232, -1.4873360395431519, -3.812249183654785, -0.03242633119225502, -0.7236366271972656, -0.0588999018073082, -0.361148864030838, -0.0009296386269852519, -3.0397906812140718e-05, -0.004231191240251064, -0.1212501972913742, -0.0001565095444675535, -0.7151610255241394, -0.8882074356079102, -0.014089635573327541, -1.0520000457763672, -0.004464658442884684, -0.641999363899231, -0.007790420204401016, -5.006664650863968e-05, -3.6477376852417365e-05, -0.00021514961554203182, -0.000316927267704159, -0.0018422313733026385, -0.003475104458630085, -6.794906312279636e-06, -2.0265373677830212e-05, -5.006664650863968e-05, -7.176141662057489e-05, -0.0014590105274692178, -4.005352093372494e-05, -0.0004323977918829769, -4.291525328881107e-06, -0.00017033556650858372, -0.00016378014697693288, -0.0004596845537889749, -0.0002810560108628124, -9.059865078597795e-06, -0.002056628232821822, -0.006396179087460041, -0.00323320715688169, -1.2676193714141846, -0.35964658856391907, -1.7162327766418457, -0.01391636487096548, -0.814329981803894, -8.344646857949556e-07, -3.85038583772257e-05, -1.9073468138230965e-06, -0.04710603505373001, -3.3378546504536644e-06, -0.003714093007147312, -0.09208570420742035, -0.03811921924352646, -0.03101380541920662, -0.0007273888913914561, -0.003727513598278165, -0.0005648924270644784, -0.006691192742437124, -0.006035554688423872, -2.4044430255889893, -1.6798392534255981, -0.13327699899673462, -1.2766342163085938, -0.0001668790791882202, -0.0017572689102962613, -2.3841855067985307e-07, -0.013858875259757042, -2.2273783683776855, -0.00017152745567727834, -0.29133182764053345, -0.5640068054199219, -0.49008822441101074, -0.9540910720825195, -0.9771440625190735, -1.1676743030548096, -0.000288087350782007, -1.6605678796768188, -1.1464025974273682, -0.14302974939346313, -2.2291887944447808e-05, -0.004428698215633631, -2.9802276912960224e-06, -0.4947504699230194, -0.007872860878705978, -8.976056415122002e-05, -0.002275260630995035, -9.536738616588991e-07, -0.00719906110316515, -0.0754890888929367, -6.09140915912576e-05, -0.0926118940114975, -1.6694875955581665, -3.40932747349143e-05, -0.322599858045578, -1.479464054107666, -0.8450202941894531, -0.04462890326976776, -4.577531944960356e-05, -0.11895642429590225, -0.015764374285936356, -1.3143671751022339, -0.00012337400403339416, -0.1214766725897789, -0.005840972065925598, -0.00021908267808612436, -0.4303562045097351, -0.04902828112244606, -0.15113990008831024, -2.3841855067985307e-07, -1.3828182090946939e-05, -1.1920928244535389e-07, -0.019363775849342346, -2.3841855067985307e-07, -2.7418097943154862e-06, -0.0006762839620932937, -1.6689286894688848e-06, -7.652943895664066e-05, -0.02157316729426384, -0.25783053040504456, -0.6249966621398926, -0.031314700841903687, -0.25175371766090393, -0.09646878391504288, -0.0012181727215647697, -0.7367799878120422, -2.264974000354414e-06, -1.1920922133867862e-06, -2.622600959512056e-06, -0.0005856229108758271, -3.2305197237292305e-05, -0.006587101146578789, -8.702239938429557e-06, -0.4996276795864105, -0.0013522299705073237, -0.002937884768471122, -0.0003000047872774303, -0.007644447032362223, -0.18673481047153473, -0.0001501924270996824, -2.418591022491455, -0.011356120929121971, -4.172316494077677e-06, -5.960462772236497e-07, -3.576278118089249e-07, -0.024104278534650803, -8.22540732769994e-06, -0.0006648475537076592, -1.311301275563892e-06, -6.6756979322235566e-06, -1.7881377516459906e-06, -0.00978860817849636, -0.07913153618574142, -0.00032205163734033704, -2.2960729598999023, -0.02647855132818222, -0.10075189918279648, -0.03766171634197235, -0.0012412709183990955, -1.5497195136049413e-06, -1.4305104514278355e-06, -5.960462772236497e-07, -1.5258672647178173e-05, 0.0, 0.0, -1.8000440832111053e-05, -0.015034457668662071, -0.00010907054820563644, -0.016523540019989014, -0.02043258398771286, -2.8714520931243896, -0.011388414539396763, -0.013725308701395988, -5.5549986427649856e-05, -0.5057787299156189, -0.000695344409905374, -0.014271455816924572, -0.05579941347241402, -0.6514535546302795, -0.00038211196078918874], "finish_reason": "length"}], "metrics": {"energy": 1038.3861139240255, "energy_per_token": 4.056195757515725, "time": 23.606087, "time_per_token": 0.09221127734375}}
{"outputs": [{"text": "# Convert user input to absolute paths\n    source_path = Path(source_directory).resolve()\n    target_path = Path(target_directory).resolve()\n\n    # Check if source directory exists\n    if not source_path.exists():\n        raise FileNotFoundError(f\"Source directory '{source_path}' does not exist\")\n\n    # Create target directory if it does not exist\n    target_path.mkdir(parents=True, exist_ok=True)\n\n    # Count moved files\n    moved_count = 0\n\n    # Define file extensions to consider\n    extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Scan files in source directory recursively and filter by extensions\n    for file in source_path.glob('**/*'):\n        if file.is_file() and file.suffix in extensions:\n            filename = file.name\n            # Check if a file with the same name already exists in the target directory\n            if (target_path / filename).exists():\n                # If it exists, rename the file", "tokens": ["#", " Convert", " user", " input", " to", " absolute", " paths", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "\n", "    ", "#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "path", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "target", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Count", " moved", " files", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Define", " file", " extensions", " to", " consider", "\n", "    ", "extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Scan", " files", " in", " source", " directory", " recurs", "ively", " and", " filter", " by", " extensions", "\n", "    ", "for", " file", " in", " source", "_", "path", ".", "glob", "('", "**", "/*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "()", " and", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "filename", " =", " file", ".", "name", "\n", "            ", "#", " Check", " if", " a", " file", " with", " the", " same", " name", " already", " exists", " in", " the", " target", " directory", "\n", "            ", "if", " (", "target", "_", "path", " /", " filename", ")", ".", "exists", "():", "\n", "                ", "#", " If", " it", " exists", ",", " rename", " the", " file"], "logprobs": [-0.9796487092971802, -3.4643802642822266, -4.597751617431641, -1.7768726348876953, -0.36601758003234863, -0.569453239440918, -0.09198731184005737, -0.45083925127983093, -0.0027336629573255777, -0.16562874615192413, -0.07564416527748108, -1.5245695114135742, -0.05197915807366371, -0.3219551146030426, -0.010550200939178467, -0.24820388853549957, -4.768360213347478e-06, -9.715084888739511e-05, -0.0013167529832571745, -0.04115412384271622, -0.12486404925584793, -0.002479338087141514, -0.013306738808751106, -0.0033515493851155043, -0.017061950638890266, -0.00047350639943033457, -0.008328231982886791, -0.000532008707523346, -0.0007805161876603961, -0.00022790218645241112, -0.0008422164828516543, -4.768370445162873e-07, -2.264974000354414e-06, -0.0010319390567019582, -0.011186501011252403, -0.0009367844904772937, -0.00017653337272349745, -0.005293282680213451, -0.07455645501613617, -0.00020740265608765185, -0.2372724711894989, -0.8138304948806763, -0.08796918392181396, -0.5563573241233826, -0.4343966245651245, -0.02077415958046913, -0.11501801013946533, -0.00010001159535022452, -0.006316933315247297, -0.008713084273040295, -0.04086796194314957, -1.1920922133867862e-06, -0.0006549597019329667, -0.0021205099765211344, -1.3213810920715332, -0.10549187660217285, -0.001073380233719945, -0.0008557948167435825, -0.05103463679552078, -0.0031873397529125214, -6.12716976320371e-05, -3.6954811548639555e-06, -0.027703292667865753, -0.3430134952068329, -0.029904305934906006, -0.280742347240448, -0.015362151898443699, -0.5376773476600647, -0.0001951265730895102, -0.011979422532022, -1.5258672647178173e-05, -0.7172951698303223, -0.024454258382320404, -0.13194312155246735, -0.000278195773717016, -0.0012521054595708847, -2.3598976135253906, -0.00025042734341695905, -0.000532008707523346, -0.01411114539951086, -0.00032395837479270995, -0.029831413179636, -0.41047364473342896, -0.23787708580493927, -0.014750705100595951, -0.03516761213541031, -0.035290174186229706, -1.0386097431182861, -0.00028951745480298996, -0.005069022998213768, -0.025316935032606125, -5.328513361746445e-05, -0.6200301647186279, -5.3165931603871286e-05, -0.0007163104019127786, -0.0003997480380348861, -0.0003091811086051166, -4.768370445162873e-07, -0.0002790300059132278, -0.10937762260437012, -0.0003812778159044683, -0.0026953816413879395, -1.8954096958623268e-05, -5.3881147323409095e-05, -5.960462772236497e-07, -6.9141146923357155e-06, -2.396077979938127e-05, -0.0001110968878492713, -0.0008653233526274562, -0.0027637402527034283, -0.006857432425022125, -0.00011920218821614981, -0.11131895333528519, -3.038182020187378, -3.204771041870117, -0.004125893581658602, -0.12843501567840576, -5.435795901576057e-05, -0.32868048548698425, -0.01756434701383114, -0.024425525218248367, -1.2321839332580566, -0.003038672497496009, -0.0019126709084957838, -4.362964682513848e-05, -0.00027581225731410086, -0.024715151637792587, -9.572047565598041e-05, -0.024180149659514427, -1.900544285774231, -1.1751245260238647, -0.052093226462602615, -0.15824393928050995, -2.072993278503418, -0.053931038826704025, -0.0001282609737245366, -0.23804038763046265, -0.08355627954006195, -0.7832995653152466, -0.0042764171957969666, -0.05716702342033386, -0.005351622123271227, -5.9960475482512265e-05, -2.5987286790041253e-05, -0.0003979606262873858, -0.0005757343024015427, -0.002659714547917247, -0.0033770932350307703, -6.9141146923357155e-06, -1.4543427823809907e-05, -6.55629628454335e-05, -2.729855441430118e-05, -0.001950387260876596, -2.372236667724792e-05, -0.00025722055579535663, -3.4570634852570947e-06, -0.0001599660754436627, -0.0001255195093108341, -2.5629668016335927e-05, -0.00031549722189083695, -9.059865078597795e-06, -0.005830660928040743, -0.0016052944120019674, -0.004799037706106901, -7.390703103737906e-05, -0.022688215598464012, -2.1387243270874023, -2.7443864345550537, -0.630199670791626, -0.7969096899032593, -0.04717585816979408, -0.5481746196746826, -5.590759246842936e-05, -2.2880537509918213, -0.4644906222820282, -0.10008438676595688, -0.5727489590644836, -0.006779407616704702, -0.00037531962152570486, -0.7130544781684875, -0.9897830486297607, -1.273578405380249, -1.383585810661316, -1.0728830375228426e-06, -4.351044481154531e-05, -7.748573807475623e-06, -2.420076847076416, -1.5399774312973022, -0.002596580656245351, -0.009395903907716274, -0.08832337707281113, -0.0008856903295964003, -0.02710271067917347, -0.007404029369354248, -0.10822053253650665, -0.05085858702659607, -0.00022516099852509797, -0.29940536618232727, -7.867782187531702e-06, -0.004941749852150679, -0.030040472745895386, -0.0002388668799540028, -0.03061443381011486, -5.519237674889155e-05, -0.007718382868915796, -7.152555099310121e-07, -0.22005833685398102, -0.0002165798214264214, -0.007333975750952959, -0.0033428759779781103, -0.06304167211055756, -2.8202061653137207, -0.03734687715768814, -0.0583903044462204, -0.0018070096848532557, -0.03561796993017197, -0.050568729639053345, -0.53496253490448, -2.1462321281433105, -0.6668117046356201, -0.4405707120895386, -3.078704595565796, -0.06283693760633469, -0.01563892513513565, -0.03013208694756031, -0.001764765940606594, -0.0324179045855999, -0.6502881646156311, -0.00031192204914987087, -0.045930344611406326, -0.06850261241197586, -0.019963176921010017, -0.017768491059541702, -0.013517750427126884, -0.00030179237364791334, -1.1250478029251099, -0.29952022433280945, -0.00505431555211544, -0.00031418632715940475, -0.002757082926109433, -0.01426017377525568, -0.003104511881247163, -8.654219709569588e-05, -0.00017641419253777713, -0.007223205175250769, -0.0005983707960695028, -0.00036149643710814416, -0.0014946014853194356, -0.2414054423570633, -1.3410502672195435, -1.992210030555725, -1.3430202007293701, -0.01069421786814928, -0.8011965155601501, -0.22051693499088287, -0.18669019639492035], "finish_reason": "length"}], "metrics": {"energy": 1085.5979856338497, "energy_per_token": 4.240617131382225, "time": 23.784296, "time_per_token": 0.09290740625}}
{"outputs": [{"text": "# Check if source directory exists\n    if not Path(source_directory).is_dir():\n        raise FileNotFoundError(f\"Source directory does not exist: {source_directory}\")\n\n    # Create target directory if it doesn't exist\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # Find files recursively in the source directory\n    files = glob.glob(source_directory + '/**/*', recursive=True)\n\n    # Filter files by extension and group them by their base name\n    file_groups = {}\n    for file in files:\n        if os.path.isfile(file) and any(file.endswith(ext) for ext in ('.txt', '.docx', '.xlsx', '.csv')):\n            base_name, extension = os.path.splitext(os.path.basename(file))\n            if base_name not in file_groups:\n                file_groups[base_name] = []\n            file_groups[base_name].append(file)\n\n    #", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " Path", "(", "source", "_", "directory", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " does", " not", " exist", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " files", " recurs", "ively", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "source", "_", "directory", " +", " '", "/**", "/*", "'", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Filter", " files", " by", " extension", " and", " group", " them", " by", " their", " base", " name", "\n", "    ", "file", "_", "groups", " =", " {}", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", ")", " and", " any", "(", "file", ".", "end", "sw", "ith", "(", "ext", ")", " for", " ext", " in", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", ":", "\n", "            ", "base", "_", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "            ", "if", " base", "_", "name", " not", " in", " file", "_", "groups", ":", "\n", "                ", "file", "_", "groups", "[", "base", "_", "name", "]", " =", " []", "\n", "            ", "file", "_", "groups", "[", "base", "_", "name", "]", ".", "append", "(", "file", ")", "\n", "\n", "    ", "#"], "logprobs": [-0.9796487092971802, -1.2422620058059692, -0.11522933840751648, -0.799961268901825, -0.47561967372894287, -0.015131684951484203, -0.15631195902824402, -0.0009154658182524145, -0.1216856837272644, -0.008721592836081982, -1.9514741897583008, -0.005432723090052605, -0.006197875365614891, -1.0013530300057027e-05, -6.437280717364047e-06, -0.0014290130930021405, -9.214453893946484e-05, -0.6260417699813843, -3.766942609217949e-05, -0.003037959337234497, -0.0049972631968557835, -0.0018805454019457102, -0.0011236312566325068, -0.021433627232909203, -0.00214775069616735, -0.0001357701694360003, -3.933898824470816e-06, -0.03151432424783707, -0.229189932346344, -0.04021340236067772, -0.28874433040618896, -0.0058676376938819885, -2.759174346923828, -0.0006300609675236046, -0.003263150341808796, -0.037941452115774155, -0.08247451484203339, -0.003045090241357684, -4.410734163684538e-06, -1.1324817933200393e-05, -0.01247248612344265, -0.00013159839727450162, -0.0002225389762315899, -0.024253569543361664, -0.00043501926120370626, -0.07601380348205566, -0.280121773481369, -0.27687594294548035, -0.004405436106026173, -0.015715908259153366, -0.032889921218156815, -0.3744955360889435, -0.00026925752172246575, -5.245195097813848e-06, -0.0027499499265104532, -0.010242046788334846, -8.523101132595912e-05, -0.4114634096622467, -0.013292740099132061, -0.00026341783814132214, -5.960462772236497e-07, -8.344646857949556e-07, -8.380061626667157e-05, -1.3470558769768104e-05, -6.472854875028133e-05, -2.3841855067985307e-07, -0.00011646069469861686, -0.11511024087667465, -0.00015090756642166525, -0.002064360771328211, -6.9141146923357155e-06, -2.4318398573086597e-05, -3.576278118089249e-07, -5.602820692729438e-06, -2.753696753643453e-05, -4.31528314948082e-05, -0.0007782529573887587, -0.0013024666113778949, -0.010201101191341877, -0.00011276562872808427, -0.11596251279115677, -2.466705560684204, -0.6358725428581238, -3.450460195541382, -2.4199192921514623e-05, -0.7272132635116577, -0.7115873098373413, -0.005909945350140333, -0.011706938035786152, -0.41097667813301086, -0.00027378625236451626, -0.524418294429779, -0.23577703535556793, -0.08820245414972305, -2.6940935640595853e-05, -0.18275204300880432, -0.007462246343493462, -2.554990291595459, -2.50339189733495e-06, -3.707340147229843e-05, -0.02097134478390217, -0.6825270056724548, -0.1389138251543045, -0.04642709717154503, -0.8662803173065186, -0.0015100754098966718, -7.64102369430475e-05, -0.000849482137709856, -0.0006581762572750449, -0.002518816851079464, -0.00732888700440526, -0.10566028207540512, -8.022463589441031e-05, -0.07476998120546341, -0.609904408454895, -0.29616302251815796, -0.3369640111923218, -1.1394059658050537, -2.4879658222198486, -5.101999282836914, -0.09751617163419724, -0.1542738676071167, -2.8496832847595215, -1.585514783859253, -0.36451664566993713, -0.2699732184410095, -0.00020394629973452538, -1.8680142164230347, -0.003874415997415781, -0.5756971836090088, -0.006441544275730848, -0.3240935206413269, -0.018533511087298393, -0.021776961162686348, -0.14110952615737915, -0.19938668608665466, -0.1237315982580185, -0.009274259209632874, -2.5987286790041253e-05, -0.00030083899036981165, -0.0013000854523852468, -0.8023420572280884, -0.7553369402885437, -7.152531907195225e-06, -0.0001734344696160406, -3.4570634852570947e-06, -0.1890667974948883, -0.01393881905823946, -0.0012668687850236893, -0.0008052920456975698, -0.2992553114891052, -0.002405489794909954, -0.5687844753265381, -0.053456757217645645, -0.06471491605043411, -0.000743708573281765, -0.16725707054138184, -1.0728830375228426e-06, 0.0, -0.003942575305700302, -0.06884518265724182, -0.0004990047891624272, -0.019970890134572983, -0.00029023250681348145, -0.0003948624071199447, -1.8244456052780151, -0.012932593934237957, -0.004610266070812941, -7.712543447269127e-05, -6.222531374078244e-05, -0.0027581527829170227, -0.0004408579843584448, -0.002074115676805377, -0.002343410160392523, -2.825220326485578e-05, -2.884823152271565e-05, -0.0009723940747790039, -1.2755313036905136e-05, -0.0014512732159346342, -6.794906312279636e-06, -0.0006854568491689861, -9.989239333663136e-05, -4.756337511935271e-05, -0.0006232702871784568, -3.6477376852417365e-05, -0.0002051381452474743, -0.0034736788365989923, -0.0012234115274623036, -0.002744956873357296, -0.0006517431465908885, -0.5765611529350281, -0.028796933591365814, -0.02070433646440506, -1.669165849685669, -1.0119627714157104, -0.0002944036095868796, -0.0024523441679775715, -1.1920928244535389e-07, -4.291525328881107e-06, 0.0, -0.007187580689787865, 0.0, -1.1920922133867862e-06, -4.5060096454108134e-05, -0.09672226756811142, -7.152555099310121e-07, -4.768370445162873e-07, -3.576278118089249e-07, -0.0020674539264291525, -2.3841855067985307e-07, -5.722029527532868e-06, -0.00018261195509694517, -0.0003545847721397877, -0.003155611688271165, -0.0009490515221841633, -0.7053160071372986, -0.01612784154713154, -8.344646857949556e-07, -4.768370445162873e-07, -0.21746617555618286, -1.1920928244535389e-07, -2.3245540432981215e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00365672679618001, -0.00035279724397696555, -5.221230458118953e-05, -0.0010338444262742996, -1.9073468138230965e-06, -4.207999518257566e-05, -0.0003053675754927099, -4.792098479811102e-05, -1.1920928244535389e-07, 0.0, -7.283422019099817e-05, -2.861018856492592e-06, -0.11449062079191208, -0.0014271085383370519, -0.003837484633550048, -0.0022967883851379156, -1.0013530300057027e-05, -0.0001915509783430025, -5.471556869451888e-05, -5.960446742392378e-06, 0.0, 0.0, -1.2755313036905136e-05, -0.0003532739356160164, -8.177422569133341e-05, -0.18364880979061127, -0.007785215973854065, -0.0029126862064003944, -0.00021944021864328533, -0.0016883655916899443, -0.0008852138998918235, -0.043099939823150635], "finish_reason": "length"}], "metrics": {"energy": 1045.147547794342, "energy_per_token": 4.0826076085716485, "time": 23.608341, "time_per_token": 0.09222008203125}}
{"outputs": [{"text": "try:\n        # Check if the source directory exists, if not, raise an exception\n        if not os.path.exists(source_directory):\n            raise FileNotFoundError(f\"The source directory '{source_directory}' does not exist.\")\n\n        # Create the target directory if it does not exist\n        os.makedirs(target_directory, exist_ok=True)\n\n        # List the files with specific extensions in the source directory and its subdirectories\n        files = glob.glob(f\"{source_directory}/**/*.{{txt,docx,xlsx,csv}}\", recursive=True)\n\n        # Loop through the files and move them to the target directory\n        moved_files = 0\n        for file in files:\n            file_name = os.path.basename(file)\n            target_file_path = os.path.join(target_directory, file_name)\n\n            # Handle renaming of files due to naming conflicts\n            if os.path.exists(target_file_path):\n                i = 1\n                while os.path.exists(target_file", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " the", " source", " directory", " exists", ",", " if", " not", ",", " raise", " an", " exception", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "            ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "        ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "#", " List", " the", " files", " with", " specific", " extensions", " in", " the", " source", " directory", " and", " its", " sub", "direct", "ories", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "{{", "txt", ",", "doc", "x", ",", "x", "ls", "x", ",", "csv", "}}", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "        ", "#", " Loop", " through", " the", " files", " and", " move", " them", " to", " the", " target", " directory", "\n", "        ", "m", "oved", "_", "files", " =", " ", "0", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "\n", "            ", "#", " Handle", " ren", "aming", " of", " files", " due", " to", " naming", " conflicts", "\n", "            ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "_", "path", "):", "\n", "                ", "i", " =", " ", "1", "\n", "                ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file"], "logprobs": [-3.148326873779297, -0.00022909401741344482, -0.002963676815852523, -0.01164272241294384, -1.4034861326217651, -1.3217031955718994, -0.09571250528097153, -0.8561420440673828, -0.06604774296283722, -0.08364444226026535, -0.018890708684921265, -2.8270246982574463, -1.2917002439498901, -0.05666487663984299, -0.3368755877017975, -0.110223688185215, -0.7522181272506714, -0.7680756449699402, -0.0839395597577095, -0.0006842655711807311, -0.24100551009178162, -0.03767331317067146, -0.12015127390623093, -1.6093124941107817e-05, -0.003625488607212901, -2.0861407392658293e-05, -0.323335200548172, -0.00019786784832831472, -0.010134901851415634, -1.1086402082582936e-05, -5.364403477869928e-06, -0.004798088688403368, -0.0014485353603959084, -0.0005924138822592795, -0.00848167110234499, -0.004586889408528805, -0.00021205084340181202, -6.556489552167477e-06, -0.05234893038868904, -0.17229828238487244, -0.03519914671778679, -1.6480576992034912, -0.7338679432868958, -0.024400977417826653, -0.3209146559238434, -0.00024577934527769685, -0.002726529957726598, -1.0609570381348021e-05, -3.099436753473128e-06, -0.0017815446481108665, -0.02187131904065609, -0.0005776405450887978, -0.0016688480973243713, -0.12024430185556412, -0.00819061417132616, -0.0007401349139399827, -0.00014304091746453196, -0.1617073118686676, -0.008675267919898033, -0.06769145280122757, -0.7826721668243408, -0.1497393548488617, -0.006470562424510717, -0.003701265901327133, -0.03120620921254158, -0.003703760216012597, -0.9242823719978333, -0.0001401803019689396, -0.011380989104509354, -0.08859016746282578, -0.00016509123088326305, -0.8469445109367371, -1.966933996300213e-05, -0.00012265883560758084, 0.0, -4.768370445162873e-07, -7.390948667307384e-06, -0.007473368663340807, -3.3378546504536644e-06, -6.556489552167477e-06, -0.0005909841856919229, -0.00010251473577227443, -1.1920922133867862e-06, -7.033323527139146e-06, -0.0009885906474664807, -0.00012265883560758084, -2.9444261599564925e-05, -0.0022613448090851307, -0.013445771299302578, -0.0020762570202350616, -0.054727133363485336, -1.9413292407989502, -2.9630894660949707, -0.7884899973869324, -1.3338444232940674, -0.9377157688140869, -0.01642480678856373, -0.5256974101066589, -0.009662289172410965, -0.011986253783106804, -0.005738569889217615, -1.3850852251052856, -0.12065159529447556, -0.0023831319995224476, -0.09938059747219086, -1.5497195136049413e-06, -0.07162028551101685, -0.0007370378007180989, -0.9340757131576538, -0.6335647702217102, -0.1530347317457199, -3.40932747349143e-05, -0.04808596894145012, -0.006187331397086382, -0.593122661113739, -0.18384066224098206, -0.012545830570161343, -0.016283724457025528, -5.960462772236497e-07, -2.3841830625315197e-06, -0.04918944835662842, -0.006033896002918482, -0.0021051643416285515, -0.002067691646516323, -0.7707669138908386, -0.004875438287854195, -0.00010573305189609528, -0.017632750794291496, -0.001190787530504167, -6.41325386823155e-05, -0.0018616265151649714, -0.00010883215873036534, -0.0001961992384167388, -0.0005404680268839002, -0.001416871091350913, -0.0031686832662671804, -5.495397272170521e-05, -0.00029225845355540514, -0.0008887869771569967, -0.00032443503732793033, -0.0003321811091154814, -0.0046892911195755005, -0.004487207159399986, -0.06607764959335327, -0.0004412154376041144, -0.42246127128601074, -3.831418991088867, -0.12654830515384674, -0.6636784076690674, -0.1576770693063736, -0.44669023156166077, -0.1877363920211792, -0.06914403289556503, -0.06457221508026123, -0.002751970896497369, -0.005033321678638458, -0.0036682477220892906, -0.3925318717956543, -0.0002584123576525599, -1.2168686389923096, -0.005915752146393061, -0.013236861675977707, -0.39617133140563965, -0.41442325711250305, -0.3466270864009857, -0.0001411338453181088, -0.06634597480297089, -0.021943161264061928, -0.06413828581571579, -0.06845162808895111, -0.14223313331604004, -0.0012442474253475666, -4.339123915997334e-05, -0.00021145492792129517, -0.004307515919208527, -2.0562281608581543, -0.014703013934195042, -0.20804311335086823, -0.051365241408348083, -0.09830210357904434, -1.1920922133867862e-06, -5.722029527532868e-06, -3.576278118089249e-07, -0.002830191981047392, -7.152555099310121e-07, -2.622600959512056e-06, -0.000417741306591779, -0.0003010773507412523, -0.10296215862035751, -0.2202426642179489, -0.4656558930873871, -0.006116126198321581, -0.4047282934188843, -1.1039339303970337, -0.033223118633031845, -0.0002985746832564473, -0.10953490436077118, -1.1920928244535389e-07, -1.5497195136049413e-06, -2.3841855067985307e-07, -0.0006191005813889205, -1.6569954823353328e-05, -0.0008671099785715342, -1.1920928244535389e-07, -1.9073468138230965e-06, -7.092700980138034e-05, -0.0025710167828947306, -0.00026770823751576245, -1.311301275563892e-06, -0.00013553177996072918, -0.004937479272484779, -0.20024709403514862, -0.0003972456615883857, -0.03288392350077629, -1.710038185119629, -2.4770634174346924, 0.0, -0.9353126883506775, -0.3088546693325043, -0.6297039985656738, -4.660974445869215e-05, -0.0869462788105011, -0.00653250515460968, -0.03835316747426987, -0.00032479254878126085, -1.0175279378890991, -0.00960337370634079, -3.2186455882765586e-06, -2.264974000354414e-06, -1.1920928244535389e-07, -0.02847430855035782, -8.22540732769994e-06, -0.00014840454969089478, -8.344646857949556e-07, -4.768360213347478e-06, -5.8412379075889476e-06, -9.536738616588991e-07, -0.0010208638850599527, -0.0040862406603991985, -0.0007085673278197646, -1.837916612625122, -0.00040618274942971766, -0.0001479277852922678, -0.03106650337576866, -0.017637435346841812, -0.001379491644911468, -0.1456955224275589, -0.43579262495040894, -3.2305197237292305e-05, -2.3841855067985307e-07, -2.8609820219571702e-05, -6.246371776796877e-05, -0.00010382589971413836, -0.0727522075176239, -4.291525328881107e-06, -9.345571743324399e-05], "finish_reason": "length"}], "metrics": {"energy": 1081.6292379322053, "energy_per_token": 4.225114210672677, "time": 23.625673, "time_per_token": 0.09228778515625}}
{"outputs": [{"text": "# Check if source_directory exists\n    if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Create target_directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Find all files in source_directory and subdirectories with the specified file extensions\n    file_extensions = ['*.txt', '*.docx', '*.xlsx', '*.csv']\n    file_paths = []\n    for ext in file_extensions:\n        file_paths.extend(glob.glob(os.path.join(source_directory, '**', ext), recursive=True))\n\n    # Move files to target_directory, handling naming conflicts\n    files_moved = 0\n    for file_path in file_paths:\n        file_name = os.path.basename(file_path)\n        target_file_path = os.path.join(target_directory, file_name)\n        if os.", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", "_", "directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " in", " source", "_", "directory", " and", " sub", "direct", "ories", " with", " the", " specified", " file", " extensions", "\n", "    ", "file", "_", "extensions", " =", " ['", "*", ".", "txt", "'", ",", " '", "*", ".", "doc", "x", "'", ",", " '", "*", ".", "x", "ls", "x", "'", ",", " '", "*", ".", "csv", "']", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " ext", " in", " file", "_", "extensions", ":", "\n", "        ", "file", "_", "paths", ".", "extend", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " ext", ")", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "#", " Move", " files", " to", " target", "_", "directory", ",", " handling", " naming", " conflicts", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", "."], "logprobs": [-0.9796487092971802, -1.2422620058059692, -0.11522933840751648, -0.799961268901825, -1.0119165182113647, -0.0009844223968684673, -0.04348431155085564, -0.22619692981243134, -0.000929281348362565, -0.07636993378400803, -0.008828180842101574, -0.1677057445049286, -3.3378546504536644e-06, -0.0016481400234624743, -5.8412379075889476e-06, -1.8631211519241333, -0.0030067020561546087, -0.00010394509445177391, -0.009425663389265537, -2.622600959512056e-06, -8.821448318485636e-06, -0.0012490098597481847, -0.0007622911944054067, -0.0009433348895981908, -0.03380551561713219, -0.0025754161179065704, -3.683499380713329e-05, -2.50339189733495e-06, -0.02885032817721367, -0.23095162212848663, -0.03674712032079697, -0.43864521384239197, -0.007562106009572744, -0.23723579943180084, -0.00013267113536130637, -0.00157196877989918, -5.722029527532868e-06, -1.0728830375228426e-06, -0.0016827721847221255, -0.1975133717060089, -0.0004764852055814117, -0.0007412070408463478, -0.12769058346748352, -0.0018837579991668463, -0.0002611534437164664, -0.00023052419419400394, -0.01816880889236927, -0.000327652640407905, -0.14899438619613647, -0.39092203974723816, -0.37722501158714294, -0.07346124947071075, -0.000742279109545052, -0.012210028246045113, -0.02125788852572441, -0.5155682563781738, -0.0001854724541772157, -2.1815061700181104e-05, -0.0026421183720231056, -0.019367165863513947, -8.439661905867979e-05, -0.9150058627128601, -1.8000440832111053e-05, -7.116541382856667e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -2.7418097943154862e-06, -0.004222407005727291, -1.9073468138230965e-06, -2.264974000354414e-06, -0.00024375328212045133, -5.769562994828448e-05, -1.0728830375228426e-06, -1.0967194612021558e-05, -0.0004415729199536145, -0.0001560327800689265, -3.8265450712060556e-05, -0.0013412775006145239, -0.010525546967983246, -0.0001392267586197704, -0.12375445663928986, -2.3230714797973633, -1.0754759311676025, -0.18557092547416687, -0.8418585658073425, -0.4610479176044464, -0.24764084815979004, -0.0004966217675246298, -1.9312347173690796, -1.92380952835083, -0.16981203854084015, -9.894321920000948e-06, -1.0951545238494873, -1.4637482166290283, -0.3766828775405884, -2.7708182334899902, -0.07154082506895065, -0.018692879006266594, -0.0007264359155669808, -0.9568026065826416, -0.005000228527933359, -0.30897101759910583, -0.004452671855688095, -2.593855619430542, -1.267946481704712, -0.0033570146188139915, -0.007001863792538643, -0.0003698380314745009, -0.00013433984713628888, -0.0017959432443603873, -0.00030393750057555735, -0.0003252692404203117, -0.003877978539094329, -0.002795005217194557, -5.7338023907504976e-05, -2.5629668016335927e-05, -0.0006733057671226561, -5.3881147323409095e-05, -4.672895011026412e-05, -0.0020086844451725483, -0.0001037067049765028, -0.000860201776959002, -0.0003103728231508285, -7.879423355916515e-05, -0.001019792165607214, -8.797258487902582e-05, -7.271740287251305e-06, -0.000972155889030546, -0.004253388848155737, -0.030825525522232056, -0.014915963634848595, -2.027883529663086, -0.004449823405593634, -0.42434555292129517, -0.012449763715267181, -1.3002163171768188, -0.011118951253592968, -0.04539472982287407, -0.0077855708077549934, -0.41090404987335205, -0.0006630606367252767, -0.000226472009671852, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.8596476365928538e-05, -0.0003303935518488288, -0.0009807306341826916, -0.09045419842004776, -7.152531907195225e-06, -0.006777868140488863, -0.2068156749010086, -0.00019095504831057042, -0.003327786922454834, -0.011190980672836304, -1.966933996300213e-05, -0.0321495495736599, -0.000922969076782465, -0.18702128529548645, -3.576278118089249e-07, -3.361645576660521e-05, -2.50339189733495e-06, -0.000495549407787621, -0.002469111466780305, -0.0014790082350373268, -5.960462772236497e-07, -3.576272320060525e-06, -0.0001967951684491709, -0.03120470605790615, -0.0005871717585250735, -0.0037152806762605906, -0.00018559163436293602, -0.0009301149984821677, -0.0008387623238377273, -6.329813186312094e-05, -0.0003106111544184387, -0.00012039413559250534, -0.00019107422849629074, -0.00019905969384126365, -0.00163433444686234, -0.013746708631515503, -0.00015472168161068112, -0.2984570264816284, -0.3019405007362366, -0.5451199412345886, -0.15005232393741608, -0.11732527613639832, -0.06332659721374512, -0.0001879753835964948, -1.3505384922027588, -0.2003483772277832, -0.28602346777915955, -0.00272617326118052, -0.22923724353313446, -0.00022313489171210676, -1.6270878314971924, -0.001029319129884243, -0.010028453543782234, -7.033323527139146e-06, -0.00509511586278677, -0.038875825703144073, -0.0001230164198204875, -0.002542241709306836, -0.006928703747689724, -0.08323779702186584, -0.1500554084777832, -0.07748193293809891, -0.000683074293192476, -0.0003471963864285499, -0.0011050553293898702, -1.1920928244535389e-07, -6.365573790390044e-05, -2.3007127310847864e-05, -0.00015007323236204684, -0.002257657703012228, -0.6289826035499573, -0.016429731622338295, -0.022260673344135284, -0.020856237038969994, -0.04908106103539467, -5.960462772236497e-07, -1.0728830375228426e-06, 0.0, -0.0010544460965320468, -1.0847986231965479e-05, -1.4305104514278355e-06, -7.378782902378589e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00010239553375868127, -0.0112703125923872, -0.08973553031682968, -0.24800659716129303, -0.0007738456479273736, -0.498653769493103, -0.05312492325901985, -0.020554980263113976, -0.0003013156820088625, -0.025969116017222404, 0.0, -1.1920928244535389e-07, -4.768370445162873e-07, -0.00016366096679121256, -1.2159273865108844e-05, -0.0003999863693024963, 0.0, -1.5497195136049413e-06, -3.564294092939235e-05, -0.0014119903789833188, -5.960462772236497e-07, -9.417489309271332e-06, -0.00012051333033014089, -0.0013181816320866346, -0.7307400107383728, -1.318477749824524, -0.037585027515888214, -1.311301275563892e-06], "finish_reason": "length"}], "metrics": {"energy": 1051.84816336441, "energy_per_token": 4.108781888142227, "time": 23.802431, "time_per_token": 0.09297824609375}}
{"outputs": [{"text": "# Create target_directory if it doesn't exist\n    target_directory = Path(target_directory)\n    if not target_directory.exists():\n        target_directory.mkdir(parents=True, exist_ok=True)\n\n    # Define the source directory path\n    source_directory = Path(source_directory)\n    # Check if source directory exists\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Directory '{source_directory}' does not exist.\")\n\n    # List the files in source directory with specific extensions\n    files_to_move = source_directory.rglob(\"*.txt\")\n    files_to_move += source_directory.rglob(\"*.docx\")\n    files_to_move += source_directory.rglob(\"*.xlsx\")\n    files_to_move += source_directory.rglob(\"*.csv\")\n\n    # Move files to target directory\n    num_moved_files = 0\n    for file in files_to_move:\n        file_name = file.name\n        target", "tokens": ["#", " Create", " target", "_", "directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Define", " the", " source", " directory", " path", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " List", " the", " files", " in", " source", " directory", " with", " specific", " extensions", "\n", "    ", "files", "_", "to", "_", "move", " =", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", ".", "txt", "\"", ")", "\n", "    ", "files", "_", "to", "_", "move", " +=", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", ".", "doc", "x", "\"", ")", "\n", "    ", "files", "_", "to", "_", "move", " +=", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", ".", "x", "ls", "x", "\"", ")", "\n", "    ", "files", "_", "to", "_", "move", " +=", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", "\n", "    ", "num", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "file", "_", "name", " =", " file", ".", "name", "\n", "        ", "target"], "logprobs": [-0.9796487092971802, -2.7368850708007812, -1.2438910007476807, -1.6822987794876099, -0.03227986767888069, -0.037665046751499176, -0.06599607318639755, -0.6171053051948547, -0.00177345285192132, -1.7404405298293568e-05, -0.01546016987413168, -0.0729638934135437, -0.002618576865643263, -1.2068092823028564, -0.022324442863464355, -0.29218146204948425, -0.21952325105667114, -0.14392122626304626, -0.007181307766586542, -0.002244574250653386, -2.3841855067985307e-07, -9.536738616588991e-07, -0.0021664262749254704, -0.10506933927536011, -0.01149660348892212, -0.7486870288848877, -0.026654766872525215, -0.05833632871508598, -1.0967194612021558e-05, -3.576278118089249e-07, -0.00047672350774519145, -0.13983261585235596, -0.003170703537762165, -0.0016733704833313823, -0.0015248350100591779, -0.14263013005256653, -1.5616295058862306e-05, -2.2172682292875834e-05, -0.0008420973899774253, -0.00028427375946193933, -3.576278118089249e-07, -0.30817335844039917, -0.013289211317896843, -0.00046969347749836743, -0.002873104065656662, -0.31167855858802795, -0.00016199229867197573, -2.145764938177308e-06, -2.3841855067985307e-07, -1.2874520507466514e-05, -0.0026071625761687756, -0.0001137191939051263, -0.007475379854440689, -0.13611763715744019, -0.0031597709748893976, -0.24969080090522766, -2.286752700805664, -0.6707598567008972, -2.681468963623047, -0.4511685073375702, -2.258183717727661, -0.5042887330055237, -0.0004129749140702188, -0.05550376698374748, -0.00660652294754982, -0.03693877160549164, -0.03563189134001732, -0.30405429005622864, -0.0010737375123426318, -0.0059119598008692265, -5.960462772236497e-07, -5.340433563105762e-05, -0.0008425738196820021, -0.05236838757991791, -0.4871831238269806, -2.6600542068481445, -0.3413902521133423, -0.10870076715946198, -1.313288927078247, -1.2117714881896973, -0.04925288259983063, -0.10556674748659134, -0.00036816971260122955, -0.006290161516517401, -0.009478684514760971, -0.01772644743323326, -2.264974000354414e-06, -1.1920928244535389e-07, -0.0004781533498317003, -0.3317027986049652, -0.011625047773122787, -0.0005034133209846914, -0.0006918897270224988, -0.02999778464436531, -0.0024937265552580357, -6.8662193370983e-05, -3.3378546504536644e-06, -0.036920733749866486, -0.43310418725013733, -0.042599473148584366, -2.7136404514312744, -0.4857352077960968, -0.0003046525234822184, -0.014317288063466549, -0.0005237876321189106, -0.0003871168300975114, -0.03423126041889191, -0.20682576298713684, -0.0004904259694740176, -0.0017864234978333116, -0.1892663985490799, -0.00349660636857152, -0.0003691230376716703, -0.0002640137099660933, -0.05813974142074585, -0.00042846560245379806, -0.10482000559568405, -2.3334343433380127, -3.0377490520477295, -0.7144603729248047, -0.596595048904419, -2.1794190406799316, -0.26591530442237854, -0.960399329662323, -0.831404983997345, -0.07218174636363983, -0.2531144917011261, -0.0008521024719811976, -1.5255613327026367, -1.0143616199493408, -0.16002929210662842, -3.611976353568025e-05, -0.1024487093091011, -0.005053485278040171, -2.705146551132202, -1.3351351299206726e-05, -2.47952248173533e-05, -0.001503528794273734, -0.5812313556671143, -1.4305104514278355e-06, -0.8921216130256653, -0.16261178255081177, -0.030989766120910645, -0.16217713057994843, -0.20019879937171936, -0.13298700749874115, -0.005363242235034704, -0.3955565392971039, -0.011781633831560612, -0.024422965943813324, -6.818538531661034e-05, -0.00011848701251437888, -3.576278118089249e-07, -2.288792165927589e-05, -0.37930330634117126, -0.007556781638413668, -9.536738616588991e-07, -2.3841855067985307e-07, -3.576272320060525e-06, -2.90866428258596e-05, -4.51792984677013e-05, -0.000534868217073381, -0.0002795067266561091, -0.00012110930401831865, -0.00014780859055463225, -0.017519015818834305, -0.002387294312939048, -4.1126360883936286e-05, -1.764281842042692e-05, -0.0005312938592396677, -0.00015948931104503572, -0.00018916724366135895, -3.576278118089249e-07, -1.4305104514278355e-06, 0.0, -4.768370445162873e-07, -1.07287787614041e-05, -0.00017081231635529548, 0.0, -2.3841830625315197e-06, -1.311301275563892e-06, -0.00010072677832795307, -3.933898824470816e-06, -0.00017557987303007394, -9.047575440490618e-05, -3.111314072157256e-05, -7.545663538621739e-05, -0.00454559363424778, -0.00032550760079175234, -0.001476746634580195, -3.0040289857424796e-05, -5.960446742392378e-06, -0.00016080040950328112, -0.00037448544753715396, -0.00017152745567727834, -3.576278118089249e-07, -1.1920928244535389e-07, 0.0, -9.536738616588991e-07, -2.539125671319198e-05, -0.00011991735664196312, 0.0, -4.8397800128441304e-05, -1.0728830375228426e-06, -0.00025197668583132327, -6.913899414939806e-05, -0.00011657988943625242, -7.033100700937212e-05, -5.745722592109814e-05, -6.568216485902667e-05, -0.001815577270463109, -6.365573790390044e-05, -1.3828182090946939e-05, -0.0004538459761533886, -0.09780841320753098, -0.00014172980445437133, -0.3238244354724884, -1.2588310241699219, -0.66032874584198, -0.4248599708080292, -0.3008345365524292, -0.18766051530838013, -1.1299304962158203, -0.00037865620106458664, -2.318568706512451, -0.000842692912556231, -1.1823421716690063, -0.01224099937826395, -0.4609665870666504, -0.0004183370911050588, -0.0008068405441008508, -0.0146488593891263, -4.470248313737102e-05, -0.008872372098267078, -0.032585691660642624, -0.07065926492214203, -0.1989385336637497, -0.27833089232444763, -0.010252902284264565, -1.2397689715726301e-05, 0.0, 0.0, -1.1920928244535389e-07, -2.4437606043647975e-05, -0.0005986090400256217, -0.004860490560531616, -2.5727996826171875, -0.06073322147130966, -0.31144094467163086, -0.1430743932723999, -0.3685901165008545, -0.0009488132782280445, -0.0747966393828392, -0.048104941844940186, -0.0924435555934906, -0.7939373254776001], "finish_reason": "length"}], "metrics": {"energy": 1065.7581534709934, "energy_per_token": 4.163117786996068, "time": 23.580423, "time_per_token": 0.09211102734375}}
{"outputs": [{"text": "# Define the desired file extensions to process\n    file_extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Create the target directory if it doesn't exist\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # Scan the source directory recursively for files\n    files = glob.glob(f\"{source_directory}/**/*\", recursive=True)\n\n    # Counter for successful file moves\n    files_moved = 0\n\n    # Iterate through each file\n    for file_path in files:\n        # Check if the file exists and is a file\n        if os.path.isfile(file_path):\n            file_name = os.path.basename(file_path)\n            file_name_parts = os.path.splitext(file_name)\n            file_extension = file_name_parts[1]\n\n            # Check if the file extension is valid\n            if file_extension in file_extensions:\n                new_file_name = file_name\n", "tokens": ["#", " Define", " the", " desired", " file", " extensions", " to", " process", "\n", "    ", "file", "_", "extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Scan", " the", " source", " directory", " recurs", "ively", " for", " files", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Counter", " for", " successful", " file", " moves", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " file", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "#", " Check", " if", " the", " file", " exists", " and", " is", " a", " file", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "            ", "file", "_", "name", "_", "parts", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")", "\n", "            ", "file", "_", "extension", " =", " file", "_", "name", "_", "parts", "[", "1", "]", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " extension", " is", " valid", "\n", "            ", "if", " file", "_", "extension", " in", " file", "_", "extensions", ":", "\n", "                ", "new", "_", "file", "_", "name", " =", " file", "_", "name", "\n"], "logprobs": [-0.9796487092971802, -2.6127052307128906, -0.2347899228334427, -4.258781433105469, -0.3917481303215027, -0.0259119663387537, -1.394018530845642, -3.529052495956421, -0.08561629801988602, -0.0024486577603965998, -0.9648237824440002, -0.001013480476103723, -0.008768152445554733, -0.008192505687475204, -1.5760146379470825, -0.008244291879236698, -0.09283528476953506, -0.00572458328679204, -5.817244164063595e-05, -5.2927523938706145e-05, -0.0013252056669443846, -0.00023147765023168176, -0.0025049042887985706, -0.00305875763297081, -8.4638240878121e-06, -2.3483953555114567e-05, -0.00020215852418914437, -0.0002454218047205359, -0.0018181951018050313, -3.755022044060752e-05, -0.00039569655200466514, -5.125986263010418e-06, -7.402622577501461e-05, -0.0002884448622353375, -3.349725011503324e-05, -0.0006735440110787749, -7.867782187531702e-06, -0.004152960609644651, -0.005350910592824221, -0.08121826499700546, -0.00012885693286079913, -0.11122072488069534, -1.2929490804672241, -0.21913112699985504, -0.030498581007122993, -0.055116426199674606, -0.016026604920625687, -0.004618453793227673, -0.38596469163894653, -0.00023600654094479978, -1.4066597032069694e-05, -0.004836645442992449, -0.038532234728336334, -0.0003013156820088625, -0.924347996711731, -0.016155993565917015, -0.002386699663475156, -2.622600959512056e-06, -1.6689286894688848e-06, -0.0008236353169195354, -3.3854863431770355e-05, -3.6000557884108275e-05, -3.576278118089249e-07, -0.00012718822108581662, -0.0922664925456047, -0.00016211149340961128, -0.003124239156022668, -9.298280929215252e-06, -2.5033637939486653e-05, -1.1920928244535389e-07, -1.5497195136049413e-06, -1.9550132492440753e-05, -3.7788631743751466e-05, -0.0003741279651876539, -0.0021546499338001013, -0.009987736120820045, -8.272782724816352e-05, -0.14414551854133606, -2.5369925498962402, -0.20586805045604706, -0.05066528171300888, -0.010059020482003689, -0.696857213973999, -7.986990567587782e-06, -0.4249705970287323, -0.1813986897468567, -1.6275016069412231, -0.0002217047003796324, -0.6702010035514832, -0.7879531383514404, -0.19714483618736267, -1.7046782886609435e-05, -0.23752301931381226, -0.0018319981172680855, -1.173879861831665, -0.08509474247694016, -0.008976698853075504, -0.02744874358177185, -5.960462772236497e-07, -7.986990567587782e-06, -0.0710960403084755, -0.008584029041230679, -0.005271819420158863, -0.15147559344768524, -0.01717831753194332, -9.345571743324399e-05, -0.0001530530134914443, -0.000316927267704159, -0.002917797304689884, -0.0017924923449754715, -0.06344117224216461, -3.58813522325363e-05, -0.09453276544809341, -2.8396658897399902, -0.6323304176330566, -1.8421562910079956, -0.6074196696281433, -0.07730275392532349, -0.006073708180338144, -5.495397272170521e-05, -1.8486367464065552, -0.0004040378553327173, -0.017806433141231537, -0.0002613918040879071, -0.026835709810256958, -0.0015092422254383564, -6.222531374078244e-05, -0.00011050090688513592, -0.013639350421726704, -2.5987286790041253e-05, -0.44158169627189636, -0.7945892810821533, -0.000519617460668087, -1.5793876647949219, -1.1144592761993408, -0.033058322966098785, -0.5147040486335754, -2.5748875486897305e-05, -0.0010634964564815164, -0.04772995784878731, -1.6406110525131226, -0.021987592801451683, -0.0006828360492363572, -0.0009066523634828627, -1.5139465176616795e-05, -0.00021455370006151497, -0.04526747390627861, -0.25489315390586853, -0.3975757956504822, -0.004192254971712828, -0.1718035787343979, -0.017926575616002083, -1.0784119367599487, -0.27724310755729675, -0.2811209559440613, -0.39771196246147156, -1.1390917301177979, -0.6533383727073669, -2.5152843591058627e-05, -0.0015882747247815132, -0.22165222465991974, -2.264974000354414e-06, -5.793403761344962e-05, -1.4305104514278355e-06, -0.1022871807217598, -0.001320324488915503, -3.659658250398934e-05, -0.0002520958660170436, -1.2397689715726301e-05, 0.0, -0.02015199512243271, -0.00036435641231946647, -0.002462689997628331, -2.0111820697784424, -0.015427302569150925, -0.18390563130378723, -0.15040242671966553, -0.020333649590611458, -4.768370445162873e-07, -1.9073468138230965e-06, -1.1920928244535389e-07, -0.0017730958061292768, 0.0, -1.5497195136049413e-06, -8.880697714630514e-05, -4.410734163684538e-06, 0.0, -2.2053474822314456e-05, -0.01685824990272522, -0.33683115243911743, -0.3362114429473877, -0.0002755738969426602, -1.9661214351654053, -0.6973616480827332, -1.7191238403320312, -0.00021217002358753234, -0.032889463007450104, -9.536738616588991e-07, -1.1920922133867862e-06, -2.3841855067985307e-07, -9.989239333663136e-05, -1.1920928244535389e-07, 0.0, -5.125986263010418e-06, -0.0005681092734448612, -2.9802276912960224e-06, -5.2569914259947836e-05, -0.0008945039589889348, -0.018095875158905983, -1.0048633813858032, -0.7672600746154785, -3.4689302992774174e-05, -0.1676204651594162, -0.0006744970451109111, -0.007056789472699165, -5.960462772236497e-07, -0.00018320789968129247, -0.00032050241134129465, -1.0728830375228426e-06, -0.015503481961786747, -0.0005159238935448229, -0.00023624490131624043, -1.0602455139160156, -0.13153256475925446, -0.0009070096421055496, -0.02793748676776886, -0.0994439497590065, -0.009330004453659058, -0.030334260314702988, -0.03630577772855759, -0.9186763167381287, -0.7518652081489563, -3.1100575923919678, -0.19176679849624634, -9.679325739853084e-05, -0.00393497571349144, -0.008525523357093334, -1.311301275563892e-06, -0.0007545484695583582, -0.5219428539276123, -0.00011085849109804258, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0044530280865728855, -7.652943895664066e-05, -0.003356420435011387, -2.0141663551330566, -6.41325386823155e-05, -0.12638737261295319, -0.006112334318459034, -0.09162233769893646, -0.0058407350443303585, -0.04570932313799858, -3.814689989667386e-06, -0.0006330393371172249, -0.10744771361351013], "finish_reason": "length"}], "metrics": {"energy": 1050.7277754230495, "energy_per_token": 4.104405372746287, "time": 23.549713, "time_per_token": 0.09199106640625}}
{"outputs": [{"text": "# Define the extensions to filter the files\n    extensions_to_filter = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Get a list of all filepaths in the source directory with the specified extensions\n    all_files = glob.glob(source_directory + \"/**/*\", recursive=True)\n    filtered_files = [\n        file_path\n        for file_path in all_files\n        if Path(file_path).suffix.lower() in extensions_to_filter\n    ]\n\n    # Check if the target_directory exists, create it if not\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Iterate over the filtered files\n    file_count = 0\n    for file_path in filtered_files:\n        file_count += 1\n        file_name = Path(file_path).name\n        target_file_path = Path(target_directory) / file_name\n\n        # If there is already a file with the same name, append a", "tokens": ["#", " Define", " the", " extensions", " to", " filter", " the", " files", "\n", "    ", "extensions", "_", "to", "_", "filter", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " file", "paths", " in", " the", " source", " directory", " with", " the", " specified", " extensions", "\n", "    ", "all", "_", "files", " =", " glob", ".", "glob", "(", "source", "_", "directory", " +", " \"", "/**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "    ", "filtered", "_", "files", " =", " [", "\n", "        ", "file", "_", "path", "\n", "        ", "for", " file", "_", "path", " in", " all", "_", "files", "\n", "        ", "if", " Path", "(", "file", "_", "path", ")", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", "_", "to", "_", "filter", "\n", "    ", "]", "\n", "\n", "    ", "#", " Check", " if", " the", " target", "_", "directory", " exists", ",", " create", " it", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " filtered", " files", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " filtered", "_", "files", ":", "\n", "        ", "file", "_", "count", " +=", " ", "1", "\n", "        ", "file", "_", "name", " =", " Path", "(", "file", "_", "path", ")", ".", "name", "\n", "        ", "target", "_", "file", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", " /", " file", "_", "name", "\n", "\n", "        ", "#", " If", " there", " is", " already", " a", " file", " with", " the", " same", " name", ",", " append", " a"], "logprobs": [-0.9796487092971802, -2.6127052307128906, -0.2347899228334427, -1.439980387687683, -0.4163333475589752, -1.3616828918457031, -3.38816499710083, -0.07750862836837769, -0.8672981858253479, -0.0020325970835983753, -0.1631903499364853, -2.810957908630371, -0.30215299129486084, -0.0001902399235405028, -0.8457098007202148, -0.00608200253918767, -1.0791800022125244, -0.018883105367422104, -0.0825674906373024, -0.007738492451608181, -5.781483559985645e-05, -0.00011586471373448148, -0.0016400470631197095, -6.23445157543756e-05, -0.0028204445261508226, -0.0027625514194369316, -9.417489309271332e-06, -1.8715683836489916e-05, -0.0004930472350679338, -0.00011336160969221964, -0.00168658047914505, -1.764281842042692e-05, -0.0004145239945501089, -7.271740287251305e-06, -0.00011228884250158444, -0.0005830018781125546, -3.8980677345534787e-05, -0.0007965967524796724, -1.3708974620385561e-05, -0.0061867390759289265, -0.003102729329839349, -0.13949257135391235, -0.00018010901112575084, -0.11066016554832458, -3.379366874694824, -2.4576141834259033, -0.032495684921741486, -0.0020360471680760384, -0.7801180481910706, -2.9085490703582764, -3.1256051063537598, -0.6899398565292358, -0.09986056387424469, -0.08049941062927246, -0.09966139495372772, -1.7919905185699463, -0.4384010136127472, -0.7067974805831909, -0.03386129438877106, -0.07876591384410858, -0.0010608765296638012, -2.769585371017456, -0.004030676558613777, -0.4806666970252991, -0.31280696392059326, -0.37226125597953796, -5.924526340095326e-05, -0.1256410926580429, -0.0036699105985462666, -1.9859329462051392, -1.6927575416048057e-05, -5.304672595229931e-05, -0.03832655027508736, -0.3031159043312073, -0.1325255036354065, -0.05568249523639679, -0.1138530746102333, -0.07276661694049835, -0.00033480284037068486, -0.008972445502877235, -0.0009756095823831856, -0.02187143638730049, -0.01653737761080265, -0.07430149614810944, -0.7554861307144165, -0.008725965395569801, -0.20157237350940704, -0.006246211007237434, -0.09680505096912384, -0.7690958976745605, -0.0008073169738054276, -0.2829158306121826, -3.0557708740234375, -0.053876254707574844, -0.7622100114822388, -1.9430925021879375e-05, -0.0006311332108452916, -0.0011868583969771862, -0.0001641377166379243, -3.731181277544238e-05, -8.523101132595912e-05, -0.0005510718910954893, -1.311301275563892e-06, -3.576278118089249e-07, -0.0079963319003582, -4.911301948595792e-05, -0.012144314125180244, -1.5922319889068604, -0.0004926898400299251, -0.0023308033123612404, -0.00018249277491122484, -7.867782187531702e-06, -0.0011106519959867, -0.0011157722910866141, -0.0007915939204394817, -2.50339189733495e-06, -0.639740526676178, -0.00665069418027997, -5.0424259825376794e-05, -0.007522352505475283, -0.0002965487365145236, -4.7801782784517854e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -9.65590606938349e-06, -0.004361758939921856, -0.0015087660867720842, -1.3828182090946939e-05, -0.0020692383404821157, -0.03449456766247749, -0.00010299152199877426, -0.16240344941616058, -1.8678534030914307, -0.05586671456694603, -0.24222315847873688, -0.47563788294792175, -2.5523383617401123, -0.010688084177672863, -0.1566198319196701, -0.5477097034454346, -1.6165030002593994, -0.22291482985019684, -0.022302642464637756, -0.3046325147151947, -0.05042875558137894, -0.00016509123088326305, -1.4754748344421387, -0.00986852403730154, -0.22035790979862213, -2.062299427052494e-05, -0.0003256267518736422, -2.50339189733495e-06, -0.09166877716779709, -2.634490556374658e-05, -0.002334252465516329, -3.576278118089249e-07, -3.4570634852570947e-06, -0.001434488920494914, -0.0007877822499722242, -0.00025733973598107696, -0.04848114773631096, -8.344646857949556e-07, -0.07798487693071365, -9.536738616588991e-07, -1.1920928244535389e-07, -1.966933996300213e-05, -0.0012086475035175681, -3.576278118089249e-07, -5.960462772236497e-07, -0.013236038386821747, -0.0015852991491556168, -0.02426823042333126, -0.0014318700414150953, -0.43234723806381226, -2.7733521461486816, -0.0034407719504088163, -0.5617032051086426, -0.15308311581611633, -0.23839351534843445, -0.2051050215959549, -0.9450404644012451, -0.0002728328399825841, -3.0708389282226562, -0.014532904140651226, -0.7803165912628174, -0.007961089722812176, -0.00333574740216136, -0.0013253247598186135, -0.0921347364783287, -0.032018404453992844, -0.07016818970441818, -0.16366776823997498, -0.1613214761018753, -0.013331911526620388, -0.002158099552616477, -0.0009497660794295371, 0.0, -1.1920922133867862e-06, -6.639736966462806e-05, -0.00040713604539632797, -0.017600657418370247, -1.1553184986114502, -0.08602886646986008, -1.1674294471740723, -0.021632082760334015, -0.07077744603157043, -0.00023672162205912173, -0.06916950643062592, -0.2768719792366028, -0.828761875629425, -0.09269360452890396, -0.1328519582748413, -0.04667731747031212, -0.6553159356117249, -0.00011729506513802335, -0.0015257871709764004, -9.65590606938349e-06, -1.1920922133867862e-06, -0.0027435303200036287, -0.0173534844070673, -0.045204468071460724, -0.1359790563583374, -0.3835832476615906, -0.6215088963508606, -0.0023651740048080683, -0.35898128151893616, -0.14849859476089478, -0.014105151407420635, -0.0010545651894062757, -0.9880752563476562, -0.0012280549854040146, -0.019124522805213928, 0.0, -1.2397689715726301e-05, -1.1249921321868896, -0.09146993607282639, -0.04474050924181938, -1.7881377516459906e-06, -2.777537883957848e-05, -0.010165346786379814, -0.3544345796108246, -0.00023922442051116377, -0.08184444159269333, -1.6541695594787598, -1.9456419944763184, -0.491122305393219, -0.6725485920906067, -0.011274084448814392, -0.002794410800561309, -0.018139775842428207, -0.010062088258564472, -0.004884572699666023, -0.012367581948637962, -1.314361810684204, -2.413633346557617, -0.7971139550209045], "finish_reason": "length"}], "metrics": {"energy": 1046.860194349289, "energy_per_token": 4.08929763417691, "time": 23.602583, "time_per_token": 0.09219758984375}}
{"outputs": [{"text": "try:\n        source_path = Path(source_directory).resolve()\n        if not os.path.isdir(source_path):\n            raise FileNotFoundError(f\"Source directory not found: {source_path}\")\n\n        # create target directory if it doesn't exist\n        target_path = Path(target_directory).resolve()\n        if not os.path.exists(target_path):\n            os.makedirs(target_path)\n\n        # Find files in source directory that have the following extensions: .txt, .docx, .xlsx, .csv\n        file_extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n        files_to_move = [\n            file for file in glob.iglob(os.path.join(source_path, '**', '*'), recursive=True)\n            if os.path.isfile(file) and os.path.splitext(file)[1] in file_extensions\n        ]\n\n        # Move files from source to target directory, handle", "tokens": ["try", ":", "\n", "        ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "path", "):", "\n", "            ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "path", "}\"", ")", "\n", "\n", "        ", "#", " create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "path", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "path", ")", "\n", "\n", "        ", "#", " Find", " files", " in", " source", " directory", " that", " have", " the", " following", " extensions", ":", " ", ".", "txt", ",", " ", ".", "doc", "x", ",", " ", ".", "x", "ls", "x", ",", " ", ".", "csv", "\n", "        ", "file", "_", "extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "        ", "files", "_", "to", "_", "move", " =", " [", "\n", "            ", "file", " for", " file", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "path", ",", " '", "**", "'", ",", " '", "*", "')", ",", " recursive", "=", "True", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", ")", " and", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " in", " file", "_", "extensions", "\n", "        ", "]", "\n", "\n", "        ", "#", " Move", " files", " from", " source", " to", " target", " directory", ",", " handle"], "logprobs": [-3.148326873779297, -0.00022909401741344482, -0.002963676815852523, -0.01164272241294384, -2.205331802368164, -0.15096431970596313, -0.9588596820831299, -0.026287326589226723, -0.09606137126684189, -0.007486383896321058, -0.026432577520608902, -4.291525328881107e-06, -0.00011944057769142091, -0.0016137446509674191, -1.0788094997406006, -0.10754363983869553, -0.08709226548671722, -0.04691814258694649, -0.199614018201828, -2.1086013317108154, -0.034143246710300446, -2.944983959197998, -1.6927575416048057e-05, -0.05916409566998482, -2.6702524337451905e-05, -1.5144695043563843, -0.00541920680552721, -0.00012230125139467418, -0.029370104894042015, -7.748573807475623e-06, -0.0707470178604126, -0.005371779669076204, -0.007429706864058971, -0.0006790239713154733, -0.025913476943969727, -0.048653870820999146, -0.0002321927313460037, -4.6491513785440475e-06, -0.09385652840137482, -0.2500443756580353, -0.04954040050506592, -0.40929272770881653, -0.028955139219760895, -2.7361435890197754, -0.0007377525325864553, -0.06150441989302635, -0.026928896084427834, -0.010424449108541012, -3.909988299710676e-05, -0.7353875637054443, -0.01597592420876026, -8.666139910928905e-05, -0.0005843124235980213, -0.3870048522949219, -0.005573210772126913, -2.706998825073242, -3.111929416656494, -0.7330371737480164, -0.4743848741054535, -0.12234041839838028, -0.17533782124519348, -0.40246304869651794, -0.0013334201648831367, -0.0002731903805397451, -0.005819639191031456, -0.02524545043706894, -0.0008798541966825724, -0.16358204185962677, -0.004380155820399523, -0.03671713173389435, -0.003012406872585416, -0.0026251161471009254, -0.0006621075444854796, -0.004002299625426531, -1.1920928244535389e-07, -1.6569954823353328e-05, -0.0015116228023543954, -0.14919382333755493, -0.00508100213482976, -0.0018845908343791962, -0.016244668513536453, -0.01267319917678833, -0.8967259526252747, -0.009766297414898872, -0.1138153076171875, -3.099436753473128e-06, -0.0001062098381225951, -1.0728830375228426e-06, -0.9027564525604248, -0.000102037942269817, -0.00047565114800818264, -2.145764938177308e-06, -0.0018565100617706776, -0.003355826484039426, -0.00195312371943146, -0.0005077026435174048, -0.07294328510761261, -2.622600959512056e-06, -0.06450080126523972, -1.5497195136049413e-06, -1.1920928244535389e-07, -3.1709168979432434e-05, -0.0018943476025015116, -5.960462772236497e-07, -0.00027616979787126184, -0.053592126816511154, -0.0022448119707405567, -0.17177948355674744, -0.012093436904251575, -0.5904279947280884, -4.286591529846191, -1.0918766260147095, -1.5526244640350342, -1.0326478481292725, -0.1484723836183548, -3.2623367309570312, -1.1690465211868286, -1.1492878198623657, -2.788999557495117, -0.05867756903171539, -0.5724929571151733, -1.5019656419754028, -0.0014830554137006402, -0.006009604781866074, -0.03292187675833702, -0.009079242125153542, -1.2636104656849056e-05, -0.0030017101671546698, -0.0024252308066934347, -0.0028377999551594257, -0.006019202526658773, -2.1934269170742482e-05, -0.008832670748233795, -0.00033802041434682906, -0.0009679876384325325, -0.027634529396891594, -0.15105123817920685, -2.884823152271565e-05, -0.0035930618178099394, -0.1469700187444687, -0.0027069137431681156, -1.5702829360961914, -0.014172264374792576, -0.22829033434391022, -0.017788749188184738, -1.1700148582458496, -0.008436516858637333, -0.441915363073349, -0.003380182199180126, -0.00013469743134919554, -6.317892984952778e-05, -0.001081834896467626, -0.0012506766943261027, -0.0024018031544983387, -0.002867755014449358, -1.3947389561508317e-05, -4.970903682988137e-05, -0.00013064485392533243, -3.373566141817719e-05, -0.0006683023530058563, -6.246371776796877e-05, -0.0008604400209151208, -6.079655122448457e-06, -0.00013350549852475524, -0.0003670972364488989, -1.585470999998506e-05, -0.00017998983094003052, -1.6212332411669195e-05, -0.004509517922997475, -0.010952239856123924, -0.10211358219385147, -0.6929107308387756, -0.7310339212417603, -0.07507269829511642, -1.4066597032069694e-05, -0.07103186100721359, -0.0042916107922792435, -0.9115787744522095, -0.4298713505268097, -0.0029198178090155125, -0.36939138174057007, -0.6431382894515991, -0.5320135951042175, -0.014513165690004826, -0.14562606811523438, -3.7788631743751466e-05, -0.9677586555480957, -1.1920928244535389e-07, -0.0064975665882229805, -1.714895486831665, -5.364403477869928e-06, -9.798523387871683e-05, -4.255681051290594e-05, -7.724463648628443e-05, -0.0009342834819108248, -0.0598469078540802, -6.079655122448457e-06, -0.10831606388092041, -0.0020599591080099344, -2.0518181324005127, -0.0007288183551281691, -0.21968987584114075, -0.00019333878299221396, -0.05889877676963806, -0.0005216429708525538, -0.06278757005929947, -0.0002631794777698815, -0.0021145620848983526, -0.0006671110168099403, -0.0002840353990904987, -0.0010012142593041062, -0.17040012776851654, -0.00298269372433424, -0.0009882333688437939, -0.12276753038167953, -4.768360213347478e-06, -2.90866428258596e-05, -8.344646857949556e-07, -0.1810116171836853, -8.129743218887597e-05, -0.00039664984797127545, -0.0006084974738769233, -0.0005260513862594962, -0.014439730904996395, -0.23548920452594757, -3.814689989667386e-06, -8.702239938429557e-06, -9.536738616588991e-07, -5.066266385256313e-05, -4.768370445162873e-07, 0.0, -7.748573807475623e-06, -0.001880307332612574, -0.038270220160484314, -0.0006485265912488103, -0.00016246906307060272, -0.6290199160575867, -0.0002366024418734014, -4.768370445162873e-07, -2.3841855067985307e-07, -0.06498628854751587, -0.009984313510358334, -0.0004196478403173387, -0.0008069596369750798, -0.06670501083135605, -0.0013672299683094025, -0.9663169980049133, -0.5569344758987427, -0.5405312776565552, -2.4081413745880127, -0.03398539870977402, -0.2695506811141968, -0.012867987155914307, -0.32257911562919617, -0.8087427616119385, -3.002084493637085], "finish_reason": "length"}], "metrics": {"energy": 1035.506347251892, "energy_per_token": 4.044946668952703, "time": 23.614204, "time_per_token": 0.092242984375}}
{"outputs": [{"text": "# Get absolute paths for the source and target directories\n    source_directory = os.path.abspath(source_directory)\n    target_directory = os.path.abspath(target_directory)\n\n    # Check if the source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory does not exist: {source_directory}\")\n\n    # Create the target directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Find files with the specified extensions in the source directory (recursively)\n    # You can adjust the file extensions as needed\n    target_extensions = [\"*.txt\", \"*.docx\", \"*.xlsx\", \"*.csv\"]\n    matching_files = []\n    for ext in target_extensions:\n        matching_files += glob.glob(os.path.join(source_directory, \"**\", ext), recursive=True)\n\n    files_moved = 0\n    for file_path in matching_files:\n        ", "tokens": ["#", " Get", " absolute", " paths", " for", " the", " source", " and", " target", " directories", "\n", "    ", "source", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " does", " not", " exist", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " files", " with", " the", " specified", " extensions", " in", " the", " source", " directory", " (", "recurs", "ively", ")", "\n", "    ", "#", " You", " can", " adjust", " the", " file", " extensions", " as", " needed", "\n", "    ", "target", "_", "extensions", " =", " [", "\"", "*", ".", "txt", "\"", ",", " \"", "*", ".", "doc", "x", "\"", ",", " \"", "*", ".", "x", "ls", "x", "\"", ",", " \"", "*", ".", "csv", "\"", "]", "\n", "    ", "matching", "_", "files", " =", " []", "\n", "    ", "for", " ext", " in", " target", "_", "extensions", ":", "\n", "        ", "matching", "_", "files", " +=", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " ext", ")", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " matching", "_", "files", ":", "\n", "        "], "logprobs": [-0.9796487092971802, -3.7333316802978516, -1.7151503562927246, -0.14561988413333893, -0.6839333772659302, -1.9640823602676392, -0.08816796541213989, -0.04959031566977501, -0.0045541380532085896, -0.02600361406803131, -0.1730065494775772, -0.0018665050156414509, -0.14308203756809235, -0.07501541823148727, -0.7304445505142212, -0.13753998279571533, -0.2840708792209625, -8.106198947643861e-06, -0.0001573438785271719, -7.271740287251305e-06, -0.0071500614285469055, -9.536738616588991e-07, -4.0531076592742465e-06, -0.00018499570433050394, -0.018235063180327415, -1.5497195136049413e-06, -9.298280929215252e-06, -0.0014632957754656672, -0.0028358979616314173, -0.0023818237241357565, -0.014922775328159332, -2.3245540432981215e-05, -0.0003597089380491525, -0.0005052005290053785, -0.004790377337485552, -7.152555099310121e-07, -6.09140915912576e-05, -1.1920928244535389e-07, -0.001572444918565452, -1.1920928244535389e-07, -3.4570634852570947e-06, -2.396077979938127e-05, -0.0008114859228953719, -7.152555099310121e-07, -1.4305104514278355e-06, -0.00010942813969450071, -0.0003573255962692201, -0.036621980369091034, -0.0002623452164698392, -0.06016809865832329, -0.673809289932251, -0.027199700474739075, -0.4022235572338104, -0.007411484140902758, -0.014405184425413609, -0.005091676488518715, -0.08842889964580536, -0.0001037067049765028, -0.002873936202377081, -0.010010868310928345, -0.003278359305113554, -2.7418097943154862e-06, -7.664863369427621e-05, -1.3828182090946939e-05, -0.27036818861961365, -2.1457441107486375e-05, -0.0006694936309941113, -1.7881377516459906e-06, -2.50339189733495e-06, -0.007699810434132814, -0.0005930095794610679, -0.0005840741214342415, -0.0289766788482666, -0.001476984703913331, -9.929640509653836e-05, -3.2186455882765586e-06, -0.013331441208720207, -0.29758578538894653, -0.028422167524695396, -0.27138450741767883, -0.0037709809839725494, -2.6343235969543457, -0.0004714807728305459, -0.0010949337156489491, -0.019197965040802956, -0.03631807863712311, -0.0004267973708920181, -5.483612312673358e-06, -1.597391747054644e-05, -0.007258118130266666, -0.00010013079008786008, -8.535020606359467e-05, -0.005623473320156336, -0.00033361115492880344, -0.010139621794223785, -0.2230345457792282, -0.055682044476270676, -0.002253494691103697, -0.001022769371047616, -0.013231921009719372, -0.004331611096858978, -0.24436546862125397, -0.00011908298620255664, -1.1324817933200393e-05, -0.0037807191256433725, -0.020858338102698326, -3.576214658096433e-05, -0.40308380126953125, -2.145764938177308e-06, -7.497983460780233e-05, -5.960462772236497e-07, -4.768370445162873e-07, -5.960462772236497e-07, -0.0002215855201939121, -5.960462772236497e-07, -3.576278118089249e-07, -0.00025197668583132327, -5.2927523938706145e-05, -8.344646857949556e-07, -7.152555099310121e-07, -0.0002889215829782188, -7.56950321374461e-05, -2.52720492426306e-05, -0.0008671099785715342, -0.003996244631707668, -0.00012027494085486978, -0.03937323018908501, -2.315981864929199, -0.717765212059021, -0.45582544803619385, -1.759437084197998, -0.4170352816581726, -0.028965560719370842, -0.7115644812583923, -0.009476086124777794, -0.0024968183133751154, -0.005219404585659504, -2.3329482078552246, -0.20482414960861206, -0.46638572216033936, -0.006715348921716213, -0.0074495854787528515, -0.00047159992391243577, -3.7935473918914795, -2.600102186203003, -0.03737834468483925, -1.3998968601226807, -0.09364639222621918, -1.2850022315979004, -0.14720535278320312, -0.6245262026786804, -0.4478802978992462, -0.08326741307973862, -0.002094101160764694, -3.9078845977783203, -0.005340120755136013, -0.9529132843017578, -0.001978465588763356, -1.096091866493225, -0.011822867207229137, -3.01814341545105, -0.004996551666408777, -0.016296273097395897, -0.0004508670826908201, -0.0009803733555600047, -0.0015939876902848482, -0.0004391897819004953, -0.0002935693773906678, -0.006460494827479124, -0.004319860599935055, -4.625213477993384e-05, -0.00044907975825481117, -0.0003392120997887105, -6.472854875028133e-05, -6.282132380874828e-05, -0.002474105916917324, -0.00020632999076042324, -0.0006548406090587378, -2.3603161025675945e-05, -0.0006220789509825408, -0.000436091679148376, -0.0005746620590798557, -0.0005822870298288763, -0.0024291551671922207, -5.4834770708112046e-05, -0.0032890529837459326, -0.01564713940024376, -0.12414653599262238, -2.5190038681030273, -0.0003234816831536591, -0.019234800711274147, -0.005197465419769287, -0.2872188687324524, -0.00990062952041626, -0.2232876420021057, -0.010560581460595131, -0.48618263006210327, -0.0016202905680984259, -0.0001445904199499637, -3.576278118089249e-07, -3.576272320060525e-06, -3.6000557884108275e-05, -0.0015353093622252345, -0.0009978797752410173, -0.09401822090148926, -0.00038092033355496824, -0.0006926044588908553, -2.0422465801239014, -0.015010266564786434, -2.884823152271565e-05, -0.01825367473065853, -0.0003177614707965404, -0.3205450177192688, -3.6954811548639555e-06, -1.9192511899746023e-05, -5.722029527532868e-06, -0.0008299481705762446, -0.00015793983766343445, -0.0037558982148766518, -1.1920922133867862e-06, -2.145764938177308e-06, -0.00024184639914892614, -0.1318703144788742, -0.0014467497821897268, -0.0011443501571193337, -0.0005511910421773791, -0.0029646276962012053, -0.0014058002270758152, -6.23445157543756e-05, -0.00029225845355540514, -0.00014053787162993103, -0.00025293012731708586, -0.00025018901214934886, -0.0010937429033219814, -0.017444511875510216, -0.00018487652414478362, -2.1375250816345215, -0.0030012347269803286, -0.07321620732545853, -2.3483953555114567e-05, -0.023023663088679314, -0.03891756385564804, -0.0001358893496217206, -0.13591350615024567, -0.36195260286331177, -0.17756178975105286, -0.3770614266395569, -0.5755069255828857, -0.010202163830399513, -0.0004854215949308127, -0.003318757051602006, 0.0, -9.536738616588991e-07, -2.992108420585282e-05, -0.0010475391754880548, -0.007757063489407301], "finish_reason": "length"}], "metrics": {"energy": 1053.4990624656677, "energy_per_token": 4.115230712756515, "time": 23.586123, "time_per_token": 0.09213329296875}}
{"outputs": [{"text": "# Define the extensions of files to include\n    extensions = [\"txt\", \"docx\", \"xlsx\", \"csv\"]\n\n    # Check if the source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Create the target directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Initialize a dictionary to track filenames and their counts\n    filename_counts = {}\n\n    # Loop through all files in the source directory recursively\n    for ext in extensions:\n        files = glob.glob(os.path.join(source_directory, f\"**/*.{ext}\"), recursive=True)\n        for file in files:\n            filename = os.path.basename(file)\n\n            # If the filename is already in the filename_counts dictionary,\n            # it's a duplicate and should be renamed\n            if filename in filename_counts:\n                # Increment the filename count\n                filename_counts", "tokens": ["#", " Define", " the", " extensions", " of", " files", " to", " include", "\n", "    ", "extensions", " =", " [", "\"", "txt", "\"", ",", " \"", "doc", "x", "\"", ",", " \"", "x", "ls", "x", "\"", ",", " \"", "csv", "\"", "]", "\n", "\n", "    ", "#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " a", " dictionary", " to", " track", " fil", "en", "ames", " and", " their", " counts", "\n", "    ", "filename", "_", "counts", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " source", " directory", " recurs", "ively", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " f", "\"", "**", "/*", ".", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "            ", "#", " If", " the", " filename", " is", " already", " in", " the", " filename", "_", "counts", " dictionary", ",", "\n", "            ", "#", " it", "'", "s", " a", " duplicate", " and", " should", " be", " renamed", "\n", "            ", "if", " filename", " in", " filename", "_", "counts", ":", "\n", "                ", "#", " In", "crement", " the", " filename", " count", "\n", "                ", "filename", "_", "counts"], "logprobs": [-0.9796487092971802, -2.6127052307128906, -0.2347899228334427, -1.439980387687683, -1.9580527544021606, -0.3618299961090088, -0.2405146062374115, -3.6798043251037598, -0.4855194091796875, -0.0018103414913639426, -0.38400977849960327, -0.10900023579597473, -1.01002037525177, -0.006549796089529991, -2.932799816131592, -0.0001961992384167388, -0.0003567297535482794, -0.0009398810216225684, -0.006663838867098093, -0.0006827168981544673, -1.7523612768854946e-05, -0.0004888770054094493, -0.00025674383505247533, -0.0021923573222011328, -0.00016807096835691482, -0.00036864637513644993, -7.986990567587782e-06, -0.0004627825692296028, -0.00029202012228779495, -0.0009332115878351033, -8.4638240878121e-06, -0.008589229546487331, -0.009011668153107166, -0.1846325844526291, -0.00015567521040793508, -0.049589067697525024, -1.4306273460388184, -0.0786919817328453, -0.6809614896774292, -0.025593986734747887, -0.07411455363035202, -0.01159947831183672, -0.14558112621307373, -0.000169382052263245, -0.12480302155017853, -0.01535874791443348, -0.132764995098114, -4.172316494077677e-06, -0.0023971651680767536, -5.722029527532868e-06, -0.23801201581954956, -5.781483559985645e-05, -0.0035517248325049877, -8.4638240878121e-06, -7.867782187531702e-06, -0.004180502146482468, -0.0007241725688800216, -0.0008572241058573127, -0.025890128687024117, -0.0024458037223666906, -9.643566590966657e-05, -3.814689989667386e-06, -0.004561613779515028, -0.3736081123352051, -0.0054257274605333805, -0.4371353089809418, -0.005024544429033995, -0.5680369138717651, -9.047575440490618e-05, -0.0011891205795109272, -2.264974000354414e-06, -1.4305104514278355e-06, -0.0014546061865985394, -0.2089250385761261, -0.0003357561945449561, -0.0008872386533766985, -0.1466476321220398, -0.0010349161457270384, -0.0002094287920044735, -0.00020954797219019383, -0.008537579327821732, -0.0003058442671317607, -0.015827151015400887, -0.2107149362564087, -0.08560503274202347, -0.004766055848449469, -0.0031639300286769867, -0.01332755945622921, -0.007094311993569136, -0.4430709481239319, -0.00013851160474587232, -2.455681169521995e-05, -0.003686182200908661, -0.018057242035865784, -4.434487345861271e-05, -0.6774724721908569, -4.0531076592742465e-06, -0.0001629458274692297, -4.768370445162873e-07, -4.768370445162873e-07, -1.6689286894688848e-06, -0.0022467151284217834, -2.861018856492592e-06, -2.145764938177308e-06, -0.0003626880934461951, -7.70062324590981e-05, -9.536738616588991e-07, -1.2040065485052764e-05, -0.0003455280384514481, -5.507317473529838e-05, -2.3007127310847864e-05, -0.0010530170984566212, -0.003996481653302908, -0.00010287232726113871, -0.07116565108299255, -1.07191002368927, -0.5729138255119324, -1.3333085775375366, -0.05960748717188835, -1.2475160360336304, -3.523813247680664, -4.1483970562694594e-05, -1.1324817933200393e-05, -0.3358897268772125, -0.19784413278102875, -1.2212104797363281, -0.2727539837360382, -8.630380034446716e-05, -0.44151684641838074, -0.0001551984460093081, -0.27063795924186707, -0.005863133817911148, -0.021714089438319206, -0.0033851719927042723, -0.11611302942037582, -3.9219088648678735e-05, -0.037878673523664474, -2.584484338760376, -0.1619260311126709, -1.7790851593017578, -0.6140214204788208, -0.22593364119529724, -0.0200619138777256, -0.03496836870908737, -0.013037203811109066, -1.5944108963012695, -3.349725011503324e-05, -0.11912332475185394, -0.0002840353990904987, -0.37911760807037354, -1.6934852600097656, -0.0021920003928244114, -0.005768319591879845, -0.00017772526189219207, -0.007872742600739002, -0.006102145183831453, -2.371149778366089, -0.1484549194574356, -0.020095212385058403, -4.672895011026412e-05, -0.03629324585199356, -0.0016300498973578215, -0.615763783454895, -3.933898824470816e-06, -0.00010001159535022452, -1.5497195136049413e-06, -0.002770516322925687, -0.0004191712068859488, -0.007295278366655111, -1.5497195136049413e-06, -1.0132738680113107e-05, -0.000506511190906167, -0.5991113781929016, -0.13903997838497162, -0.016725903376936913, -0.0018217648612335324, -0.0018356868531554937, -4.4225667807040736e-05, -7.521823135903105e-05, -0.0005648924270644784, -0.0021211046259850264, -0.00011562632425921038, -0.0001394651480950415, -0.00045015214709565043, -0.0006160030607134104, -0.0005579821881838143, -0.0016649207100272179, -0.39861369132995605, -0.05097527801990509, -0.15035688877105713, -0.3953995406627655, -0.0014248467050492764, -4.8040190449682996e-05, -0.0004086851258762181, -0.008085140958428383, -1.3776259422302246, -0.05470907688140869, -0.09817005693912506, -2.264974000354414e-06, -1.7881377516459906e-06, -5.960462772236497e-07, -0.007969841361045837, 0.0, -1.5497195136049413e-06, -0.0004408579843584448, -0.00036566724884323776, -0.024752134457230568, -1.0821436643600464, -0.0004764852055814117, -0.04048922285437584, -2.001095771789551, -0.19889777898788452, -0.7907611131668091, -1.2667886018753052, -0.5160543918609619, -0.4853082597255707, -0.0578104667365551, -3.432339906692505, -0.040317144244909286, -0.0033321829978376627, -0.23828361928462982, -0.06283245980739594, -1.4860060214996338, -0.00036030475166626275, -0.0007751559023745358, -0.4254913926124573, -1.755578637123108, -0.000310730334604159, -0.020015409216284752, -0.06305857747793198, -0.8986306190490723, -2.40047287940979, -0.007295041810721159, -0.047179270535707474, -0.3047652244567871, -0.0010444429935887456, -0.022240037098526955, -0.003311390522867441, -0.00878339633345604, -0.0003387354372534901, -1.1920928244535389e-07, -7.152555099310121e-07, -0.008795567788183689, -0.00021026308240834624, -0.0014531777705997229, -1.4105898141860962, -0.48877036571502686, -8.809178689261898e-05, -0.010996809229254723, -3.087372303009033, -0.07169263809919357, -0.8916260004043579, -9.107174992095679e-05, -0.011080282740294933, -0.00034957972820848227, -0.002780264476314187], "finish_reason": "length"}], "metrics": {"energy": 1044.2595409698483, "energy_per_token": 4.07913883191347, "time": 23.78797, "time_per_token": 0.0929217578125}}
{"outputs": [{"text": "extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Check if source directory exists\n    source_directory = Path(source_directory)\n    if not source_directory.is_dir():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist\")\n\n    # Create target directory if it doesn't exist\n    target_directory = Path(target_directory)\n    target_directory.mkdir(parents=True, exist_ok=True)\n\n    # Search for files with matching extensions recursively\n    matching_files = glob.iglob(str(source_directory / \"**\" / \"*\"), recursive=True)\n    matching_files = [Path(file) for file in matching_files if file.endswith(extensions)]\n\n    moved_files_count = 0\n    for source_file in matching_files:\n        target_file_path = target_directory / source_file.name\n\n        # Check for naming conflicts in the target directory\n        if target_file_path.exists():", "tokens": ["extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " source", " directory", " exists", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " matching", " extensions", " recurs", "ively", "\n", "    ", "matching", "_", "files", " =", " glob", ".", "ig", "lob", "(", "str", "(", "source", "_", "directory", " /", " \"", "**", "\"", " /", " \"", "*", "\"", ")", ",", " recursive", "=", "True", ")", "\n", "    ", "matching", "_", "files", " =", " [", "Path", "(", "file", ")", " for", " file", " in", " matching", "_", "files", " if", " file", ".", "end", "sw", "ith", "(", "extensions", ")]", "\n", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " matching", "_", "files", ":", "\n", "        ", "target", "_", "file", "_", "path", " =", " target", "_", "directory", " /", " source", "_", "file", ".", "name", "\n", "\n", "        ", "#", " Check", " for", " naming", " conflicts", " in", " the", " target", " directory", "\n", "        ", "if", " target", "_", "file", "_", "path", ".", "exists", "():"], "logprobs": [-2.3802566528320312, -0.13607530295848846, -1.3437845706939697, -0.010185761377215385, -0.047065433114767075, -0.005931631661951542, -5.9602869441732764e-05, -7.581423415103927e-05, -0.001446868758648634, -0.00010001159535022452, -0.002764572389423847, -0.002514179330319166, -8.34461570775602e-06, -2.777537883957848e-05, -0.00022206225548870862, -5.364274329622276e-05, -0.0023223592434078455, -7.962863310240209e-05, -0.000513064325787127, -6.198863957251888e-06, -8.642300235806033e-05, -0.0004804172203876078, -3.45700973412022e-05, -0.0006428082706406713, -9.775113539944869e-06, -0.004803664516657591, -0.0564601868391037, -1.174189805984497, -0.0004528927383944392, -1.124742865562439, -0.877486526966095, -0.11970199644565582, -0.6707414388656616, -0.5708323121070862, -0.01061495766043663, -0.15461117029190063, -0.0002849888114724308, -2.0329532623291016, -0.051757317036390305, -1.0738989114761353, -0.39154404401779175, -0.48041507601737976, -0.0018879224080592394, -0.008203856647014618, -1.0728830375228426e-06, -2.3841830625315197e-06, -0.0007254829397425056, -0.6826412081718445, -0.008877452462911606, -0.013975732028484344, -0.0046797990798950195, -0.021618200466036797, -3.099436753473128e-06, -7.033323527139146e-06, -0.00031871485407464206, -0.5960830450057983, -3.123234637314454e-05, -0.0069707296788692474, -0.00318971648812294, -0.0010966007830575109, -0.0007332258974201977, -0.02169974148273468, -0.0036902204155921936, -6.997340824455023e-05, -2.50339189733495e-06, -0.005098436959087849, -0.3422671854496002, -0.007908224128186703, -0.26854488253593445, -0.005972396582365036, -0.4162837564945221, -0.0001357701694360003, -0.015623197890818119, -2.396077979938127e-05, -6.103329360485077e-05, -0.0339229442179203, -0.16234305500984192, -0.0002681849291548133, -0.0006871246150694788, -2.1628103256225586, -0.00018451895448379219, -0.0007923085941001773, -0.011717659421265125, -0.0003002431185450405, -0.21111924946308136, -0.16596829891204834, -0.2239757627248764, -0.004303243011236191, -0.025927647948265076, -0.05321614444255829, -0.3176921606063843, -0.00031585473334416747, -1.6212332411669195e-05, -0.0021742768585681915, -0.01648050732910633, -6.3774932641536e-05, -0.05900273472070694, -0.00023934361524879932, -0.0007918321643956006, -0.0010128850117325783, -0.0007114263135008514, -0.00033206192892976105, -0.00032550760079175234, -3.576278118089249e-07, -2.145764938177308e-06, -0.0003275334893260151, -0.01506686769425869, -0.001258177449926734, -0.6097277402877808, -1.3351351299206726e-05, -0.0002325502864550799, -0.00025948495022021234, -6.675497570540756e-05, -7.152555099310121e-07, -0.00022754464589525014, -0.04966314509510994, -0.00019262365822214633, -0.001456629834137857, -1.7881233361549675e-05, -2.0265373677830212e-05, -7.152555099310121e-07, -2.9802276912960224e-06, -2.0146166207268834e-05, -8.082063141046092e-05, -9.786603914108127e-05, -0.006041953340172768, -0.0065199509263038635, -8.666139910928905e-05, -0.33931997418403625, -3.163327693939209, -0.27727508544921875, -0.1869354546070099, -0.6532352566719055, -3.384080171585083, -0.018044363707304, -1.49436354637146, -1.7046782886609435e-05, -0.9567553997039795, -0.00014911970356479287, -2.2415409088134766, -0.0009550062823109329, -0.013384020887315273, -0.0037093423306941986, -0.4107023775577545, -4.446407547220588e-05, -1.5980756282806396, -2.145764938177308e-06, -0.005436516832560301, -0.4679718315601349, -0.0003962923656217754, -0.0015463787131011486, -1.1920928244535389e-07, -4.410734163684538e-06, -0.028334220871329308, -0.09168031066656113, -0.0005965837044641376, -1.449680209159851, -0.008627521805465221, -0.42206692695617676, -0.004762852564454079, -0.12492518126964569, -0.0043849037028849125, -0.03256838396191597, -0.00020680672605521977, -0.00028880240279249847, -0.0003668589051812887, -0.00862894020974636, -0.01794343627989292, -0.4915095865726471, -0.18097104132175446, -4.207999518257566e-05, -0.013026378117501736, -0.009487304836511612, -0.6470466256141663, -2.0004210472106934, -0.0011828100541606545, -0.4412425756454468, -0.03835431486368179, -0.006825820542871952, -2.8729025871143676e-05, -0.0001255195093108341, -0.000890097115188837, -4.768370445162873e-07, -3.576278118089249e-07, -0.12310855835676193, -0.27422255277633667, -0.00044252615771256387, -0.23997151851654053, -5.245195097813848e-06, -4.768370445162873e-07, -0.00016640232934150845, -7.116541382856667e-05, -0.012742644175887108, -0.0035898545756936073, -0.016312692314386368, -3.0278701160568744e-05, -1.5557949542999268, -0.012151852250099182, -0.00963076576590538, -0.5461120009422302, -0.8018587231636047, -0.016378367319703102, -0.0003461238811723888, -0.0030901322606951, -4.470248313737102e-05, -0.047769732773303986, -0.47021567821502686, -0.07748766988515854, -2.0958802700042725, -0.03185052052140236, -0.14647281169891357, -0.043869905173778534, -0.0010420613689348102, 0.0, -2.264974000354414e-06, -8.368142152903602e-05, -0.0009947833605110645, -0.008160345256328583, -0.7547216415405273, -0.0009610801353119314, -0.18007804453372955, -2.725189447402954, -0.5990268588066101, -0.006409564055502415, -0.39032360911369324, -6.9141146923357155e-06, -0.00014184899919200689, -0.005217269994318485, -0.0416208915412426, -2.3841855067985307e-07, -0.00011324241495458409, -0.007214920595288277, -0.012889758683741093, -0.007940985262393951, -0.5813347101211548, -0.00014101465058047324, -0.23657359182834625, -0.8049529790878296, -0.8110485672950745, -0.4300953149795532, -0.3656248152256012, -2.666926383972168, -0.4331229031085968, -0.006886201910674572, -0.005096657667309046, -0.14714959263801575, -0.00019238528329879045, -1.1121984720230103, -0.024334432557225227, -9.536738616588991e-07, -0.00040880427695810795, -1.8596476365928538e-05, -1.311301275563892e-06, -0.0003906917118001729, -0.0285001453012228, -0.01681804470717907], "finish_reason": "length"}], "metrics": {"energy": 1060.5208673191069, "energy_per_token": 4.142659637965261, "time": 23.766136, "time_per_token": 0.09283646875}}
{"outputs": [{"text": "extensions = ('.txt', '.docx', '.xlsx', '.csv')\n    target_directory = Path(target_directory)\n\n    if not target_directory.exists():\n        target_directory.mkdir(parents=True)\n\n    count = 0\n    for file_path in glob.iglob(f'{source_directory}/**/*', recursive=True):\n        if os.path.isfile(file_path):\n            base_name = os.path.basename(file_path)\n            file_name, file_ext = os.path.splitext(base_name)\n\n            if file_ext.lower() in extensions:\n                target_file = target_directory / base_name\n\n                if target_file.exists():\n                    i = 1\n                    while target_file.exists():\n                        new_name = f'{file_name}-{i}{file_ext}'\n                        target_file = target_directory / new_name\n                        i += 1\n\n                shutil.move(file_path, target_file)", "tokens": ["extensions", " =", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "ig", "lob", "(", "f", "'{", "source", "_", "directory", "}/", "**", "/*", "'", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "base", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "            ", "file", "_", "name", ",", " file", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "base", "_", "name", ")", "\n", "\n", "            ", "if", " file", "_", "ext", ".", "lower", "()", " in", " extensions", ":", "\n", "                ", "target", "_", "file", " =", " target", "_", "directory", " /", " base", "_", "name", "\n", "\n", "                ", "if", " target", "_", "file", ".", "exists", "():", "\n", "                ", "    ", "i", " =", " ", "1", "\n", "                ", "    ", "while", " target", "_", "file", ".", "exists", "():", "\n", "                ", "        ", "new", "_", "name", " =", " f", "'{", "file", "_", "name", "}-", "{", "i", "}{", "file", "_", "ext", "}'", "\n", "                ", "        ", "target", "_", "file", " =", " target", "_", "directory", " /", " new", "_", "name", "\n", "                ", "        ", "i", " +=", " ", "1", "\n", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "file", ")"], "logprobs": [-2.3802566528320312, -0.13607530295848846, -2.5126917362213135, -0.1564612090587616, -0.01133749820291996, -0.00022897482267580926, -0.00029404606902971864, -0.009321029298007488, -0.0018391376361250877, -0.006606641225516796, -0.002719991374760866, -4.9232225137529895e-05, -0.00015758226800244302, -0.0012877037515863776, -7.83174327807501e-05, -0.002293814904987812, -0.00010895135346800089, -0.0008616310660727322, -0.0002562671434134245, -7.784063927829266e-05, -0.002237199805676937, -0.0003904534096363932, -0.0006434039096347988, -0.007062589284032583, -0.06889069825410843, -0.29749858379364014, -3.5029728412628174, -0.07603291422128677, -0.38797977566719055, -0.12975932657718658, -0.17168240249156952, -0.0046672215685248375, -0.0047973766922950745, -3.576278118089249e-07, -9.536738616588991e-07, -0.0032823991496115923, -0.1056317538022995, -1.6849678754806519, -0.00025281094713136554, -0.4322841763496399, -0.03738672658801079, -0.5393235087394714, -1.3470558769768104e-05, -4.410734163684538e-06, -0.0006236277404241264, -0.09951528906822205, -0.010095958597958088, -0.009106529876589775, -0.001822478836402297, -0.16790421307086945, -1.597391747054644e-05, -8.821448318485636e-06, -0.001369253732264042, -0.00039414744242094457, -1.9073468138230965e-06, -0.3011395037174225, -0.024325357750058174, -0.0008771148277446628, -0.0026513920165598392, -1.0718529224395752, -0.027508705854415894, -0.04960835352540016, -0.0004741021548397839, -3.4703433513641357, -0.10204565525054932, -0.008122625760734081, -0.00017855956684798002, -0.01710730418562889, -0.2068924456834793, -0.2180774062871933, -1.5652540922164917, -1.1345469951629639, -0.16139917075634003, -0.00530881667509675, -0.040630705654621124, -2.682172998902388e-05, -0.41646116971969604, -1.1920928244535389e-07, -0.040577251464128494, -0.7885006070137024, -0.3706510066986084, -0.03769994527101517, -2.50339189733495e-06, -4.410734163684538e-06, -0.16658104956150055, -0.016314687207341194, -0.03408621624112129, -0.09738607704639435, -0.0011638780124485493, -0.0006239851354621351, -0.001443773857317865, -0.0004343043256085366, -0.004594840109348297, -0.01019673515111208, -0.01764165237545967, -0.3651265799999237, -0.7188021540641785, -8.34461570775602e-06, -0.0004412154376041144, -1.0728830375228426e-06, -0.04696125164628029, -0.047429755330085754, -0.00022742546570952982, -0.0005827635759487748, -1.537788011773955e-05, 0.0, -0.9525427222251892, -0.004855033475905657, -0.0021729685831815004, -3.157371997833252, -0.03808329999446869, -0.10315991193056107, -0.4469185471534729, -0.10986146330833435, -2.50339189733495e-06, -2.7417760065873154e-05, -7.152555099310121e-07, -0.0392531156539917, -1.9073468138230965e-06, -1.1801649634435307e-05, -0.0007824220228940248, -2.50339189733495e-06, 0.0, -0.00043930893298238516, -0.011922292411327362, -0.028886809945106506, -0.9831029772758484, -0.00346857076510787, -0.17120476067066193, -0.044045478105545044, -0.25856682658195496, -1.3232143828645349e-05, -0.48971104621887207, -0.0006549597019329667, -0.0003808011533692479, -5.960462772236497e-07, -3.814689989667386e-06, 0.0, -7.867782187531702e-06, 0.0, 0.0, -2.5152843591058627e-05, -0.00316987163387239, -2.3841855067985307e-07, 0.0, -0.0002456601650919765, -0.0010151476599276066, -0.5620707869529724, -0.0009137984015978873, -0.035755086690187454, -0.011573554016649723, -2.50339189733495e-06, -0.0010346779599785805, -1.2756116390228271, -0.014032626524567604, -1.883488948806189e-05, -0.08662121742963791, -0.0003657863999251276, -0.012156798504292965, -0.004185844212770462, -0.003293092828243971, -0.610464870929718, -0.007788527756929398, -0.49002906680107117, -0.9637237787246704, -0.23214375972747803, -1.311301275563892e-06, -4.386805812828243e-05, -0.015763435512781143, -0.08063623309135437, -2.3841855067985307e-07, 0.0, -0.0032841814681887627, -0.9972553849220276, -0.00041214076918549836, -0.3907507359981537, -0.06078650802373886, -1.311301275563892e-06, -0.0009952597320079803, -0.00039939055568538606, -0.024146053940057755, -0.01183735765516758, -0.008820735849440098, -0.00121007626876235, -0.00016211149340961128, -0.9042472243309021, -0.0004142856632824987, -0.0007175016799010336, -0.04895699769258499, -0.0031665442511439323, -0.024912143126130104, -2.8729025871143676e-05, -0.12770777940750122, -0.340098112821579, -3.099436753473128e-06, -0.0082594258710742, -8.809178689261898e-05, -0.02009229175746441, -0.0035628906916826963, -0.002003330737352371, -0.0001292145170737058, -0.00015639036428183317, -1.2799248695373535, -0.00017593742813915014, -0.6066210269927979, -0.005465208552777767, -0.005440548062324524, -0.7923359274864197, -0.004138240125030279, -1.0728830375228426e-06, -5.674201020156033e-05, -0.00962179247289896, -8.904537389753386e-05, -0.001862459466792643, -0.03848337009549141, -0.00031013446277938783, -3.933898824470816e-06, -2.9802276912960224e-06, -0.00938976276665926, -0.005105434451252222, -0.00019107422849629074, -1.549708758830093e-05, -0.053355276584625244, -3.576272320060525e-06, -6.854299135738984e-05, -0.000663894519675523, -0.008591711521148682, -4.768370445162873e-07, -0.00039986721822060645, -0.0006635371246375144, -0.008400462567806244, -5.960462772236497e-07, -1.2874520507466514e-05, -0.00027640812913887203, -0.0015637562610208988, -0.0002786724944598973, -0.0020557953976094723, -0.0011400636285543442, -0.00031287543242797256, -3.755022044060752e-05, -0.00033802041434682906, -0.21699830889701843, -0.00026556302327662706, -0.06724672764539719, -3.4570634852570947e-06, -9.536738616588991e-07, -0.05313916504383087, -1.1444026313256472e-05, -0.004207449499517679, -4.625213477993384e-05, -7.152555099310121e-07, -0.00012706902634818107, -0.03192245587706566, -6.9141146923357155e-06, -0.0038904468528926373, -0.01023402251303196], "finish_reason": "length"}], "metrics": {"energy": 1091.0042895355225, "energy_per_token": 4.261735505998135, "time": 23.841965, "time_per_token": 0.09313267578125}}
{"outputs": [{"text": "# Validate source directory\n    source_dir = Path(source_directory)\n    if not source_dir.is_dir():\n        raise FileNotFoundError(f\"Source directory not found: {source_directory}\")\n\n    # Create target directory if it doesn't exist\n    target_dir = Path(target_directory)\n    if not target_dir.is_dir():\n        target_dir.mkdir(parents=True, exist_ok=True)\n\n    # Initialize counters\n    total_files = 0\n    moved_files = 0\n\n    # Set the file extensions to look for\n    file_extensions = {\".txt\", \".docx\", \".xlsx\", \".csv\"}\n\n    # Scan the source directory recursively\n    for file_path in glob.iglob(str(source_dir / \"**\"), recursive=True):\n        # Check if it is a file and if its extension is valid\n        if os.path.isfile(file_path) and os.path.splitext(file_path)[1] in file_extensions:\n            ", "tokens": ["#", " Valid", "ate", " source", " directory", "\n", "    ", "source", "_", "dir", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "dir", ".", "is", "_", "dir", "():", "\n", "        ", "target", "_", "dir", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " counters", "\n", "    ", "total", "_", "files", " =", " ", "0", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "\n", "    ", "#", " Set", " the", " file", " extensions", " to", " look", " for", "\n", "    ", "file", "_", "extensions", " =", " ", "{\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"}", "\n", "\n", "    ", "#", " Scan", " the", " source", " directory", " recurs", "ively", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "ig", "lob", "(", "str", "(", "source", "_", "dir", " /", " \"", "**", "\"", ")", ",", " recursive", "=", "True", "):", "\n", "        ", "#", " Check", " if", " it", " is", " a", " file", " and", " if", " its", " extension", " is", " valid", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")[", "1", "]", " in", " file", "_", "extensions", ":", "\n", "            "], "logprobs": [-0.9796487092971802, -2.6857566833496094, -0.02623460814356804, -1.2357817888259888, -0.742498517036438, -0.39735147356987, -0.0011250602547079325, -1.0815579891204834, -0.08240195363759995, -1.1484460830688477, -0.648917019367218, -0.07887917011976242, -0.0019081495702266693, -0.011458891443908215, -2.264974000354414e-06, -5.8412379075889476e-06, -0.0012832987122237682, -0.309830904006958, -0.015815535560250282, -0.011392539367079735, -0.0038718036375939846, -0.010488389059901237, -5.602820692729438e-06, -0.0005760917556472123, -0.0005855038180015981, -0.29204046726226807, -1.3351351299206726e-05, -0.03129944950342178, -0.006302362773567438, -0.0024529388174414635, -0.00045813556062057614, -0.016804562881588936, -0.012143725529313087, -9.858122211880982e-05, -4.529942543740617e-06, -0.023312881588935852, -0.20135582983493805, -0.035682275891304016, -0.19941042363643646, -0.004572886973619461, -3.147981882095337, -0.0007767044589854777, -0.06404324620962143, -0.04817742109298706, -0.026892805472016335, -2.7894584491150454e-05, -0.18464407324790955, -0.009303313679993153, -0.00011157367407577112, -0.0003197873884346336, -0.01853116974234581, -0.000350175570929423, -0.04728490486741066, -0.3093666136264801, -0.08439379185438156, -0.003154185600578785, -0.06797048449516296, -0.09358613938093185, -0.22249923646450043, -0.0002079985715681687, -6.318072337307967e-06, -0.0009097489528357983, -0.010600213892757893, -5.566918844124302e-05, -0.07579082250595093, -0.0009660820942372084, -0.006629378534853458, -0.000878663151524961, -0.0003849719068966806, -0.0004508670826908201, -0.0011592342052608728, 0.0, -6.6756979322235566e-06, -0.0005930095794610679, -0.014450540766119957, -0.0016941969515755773, -0.8525915741920471, -0.0035107426811009645, -0.00447842525318265, -1.6689286894688848e-06, -6.318072337307967e-06, -8.153582894010469e-05, -0.2175038605928421, -1.1920928244535389e-07, -1.2397689715726301e-05, -0.000433112756581977, -0.00029023250681348145, -0.00014304091746453196, -0.17363324761390686, -1.3828182090946939e-05, -8.284702198579907e-05, -0.00030787018476985395, -3.790783375734463e-05, 0.0, -0.1336439847946167, -0.009534300304949284, -7.676783570786938e-05, -0.0016036281595006585, -0.12829388678073883, -3.373566141817719e-05, -5.960462772236497e-07, -2.264974000354414e-06, -3.933898824470816e-06, -0.00690182950347662, -0.00012790338951162994, -0.003581420984119177, -0.022908441722393036, -0.0007843278581276536, -0.05831822380423546, -1.965230107307434, -1.402967929840088, -0.4051695764064789, -0.00012575789878610522, -1.8782187700271606, -0.008488526567816734, -0.2160513550043106, -0.4334436058998108, -0.02779083140194416, -0.00037174468161538243, -0.029602522030472755, -0.0070512257516384125, -1.0361392498016357, -0.0083217304199934, -0.0074769179336726665, -0.03827871009707451, -0.0030302342493087053, -0.0019010106334462762, -4.1126360883936286e-05, -0.0005463061388581991, -0.12215928733348846, -0.0001147919538198039, -0.017113279551267624, -3.9881458282470703, -0.9530296325683594, -1.1346594095230103, -0.06405465304851532, -0.1445923149585724, -2.2276699542999268, -0.0006625840906053782, -0.046785395592451096, -0.0001618731184862554, -1.566902995109558, -0.0006350646144710481, -0.013829482719302177, -0.001068616984412074, -3.1309566497802734, -6.675497570540756e-05, -0.048186738044023514, -0.0037709809839725494, -0.000512111175339669, -3.075552376685664e-05, -0.00023445718397852033, -0.0004175029753241688, -0.0046380325220525265, -0.002704060636460781, -6.174850568640977e-05, -6.198863957251888e-06, -6.97350042173639e-05, -9.417489309271332e-06, -0.0013715155655518174, -2.539125671319198e-05, -0.0003474347176961601, -0.0002302858338225633, -9.775113539944869e-06, -9.083335316972807e-05, -7.271740287251305e-06, -0.00047195740626193583, -0.0023360364139080048, -0.0029162520077079535, -0.004994416609406471, -9.48860906646587e-05, -0.014481677673757076, -2.304213047027588, -0.5820297598838806, -0.028391461819410324, -0.008508975617587566, -0.7177626490592957, -7.390948667307384e-06, -1.1326243877410889, -0.00022313489171210676, -0.06542476266622543, -1.0163500308990479, -0.759742796421051, -0.06430329382419586, -0.003185913898050785, -0.591786801815033, -2.5748875486897305e-05, -0.07525736838579178, -1.1920928244535389e-07, -0.0023685041815042496, -0.6172583699226379, -0.0001399419124936685, -0.0027852572966367006, -1.0728830375228426e-06, -0.0004632591735571623, -0.04135945439338684, -0.26305997371673584, -0.0008878341759555042, -0.53819739818573, -0.41795918345451355, -0.0007266741595230997, -2.0146166207268834e-05, -8.129743218887597e-05, -0.00029416524921543896, -0.001374134561046958, -0.004412913229316473, -0.019389498978853226, -1.602614402770996, -0.7060286998748779, -0.013695323839783669, -0.7572941780090332, -1.2829837799072266, -0.0075953505001962185, -0.1358177661895752, -0.33046454191207886, -0.8723613619804382, -0.9351637959480286, -0.00837031751871109, -0.17861776053905487, -2.4974279403686523, -0.0039910199120640755, -0.00014804698002990335, -0.03425165265798569, -0.15338870882987976, -3.099436753473128e-06, -2.8013790142722428e-05, -1.6689286894688848e-06, -0.0002618685248307884, -0.000416907190810889, -1.3351351299206726e-05, -0.001210195361636579, -2.145764938177308e-06, 0.0, -0.025395270437002182, -0.0003840185818262398, -0.12581874430179596, -2.0265558760002023e-06, -2.622600959512056e-06, -2.3841855067985307e-07, -5.245195097813848e-06, 0.0, 0.0, -9.298280929215252e-06, -0.0010407513473182917, -1.5497195136049413e-06, -2.145764938177308e-06, -0.07102952897548676, -0.0019720408599823713, -0.000486970558995381, -0.2599734365940094, -0.000102037942269817, -2.3841855067985307e-07, -5.960462772236497e-07, -6.913899414939806e-05, -0.0012742503313347697, -0.006263625808060169], "finish_reason": "length"}], "metrics": {"energy": 1064.58993740654, "energy_per_token": 4.158554442994297, "time": 23.624006, "time_per_token": 0.0922812734375}}
{"outputs": [{"text": "try:\n        # Create the target directory if it doesn't exist\n        Path(target_directory).mkdir(exist_ok=True)\n\n        # Initialize variables\n        file_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n        files_moved = 0\n\n        # Iterate over all files in the source directory recursively\n        for filepath in glob.iglob(source_directory + '**/*', recursive=True):\n            if os.path.isfile(filepath):\n                filename, extension = os.path.splitext(filepath)\n\n                # Check if the file has one of the specified extensions\n                if extension in file_extensions:\n                    # Create the target filename with the same extension\n                    target_filename = os.path.join(target_directory, os.path.basename(filepath))\n\n                    # Handle duplicate names by adding a suffix\n                    if os.path.exists(target_filename):\n                        suffix = 1\n                        while os.path.exists(target_filename + f", "tokens": ["try", ":", "\n", "        ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "#", " Initialize", " variables", "\n", "        ", "file", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "        ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "        ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " source", " directory", " recurs", "ively", "\n", "        ", "for", " file", "path", " in", " glob", ".", "ig", "lob", "(", "source", "_", "directory", " +", " '", "**", "/*", "'", ",", " recursive", "=", "True", "):", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "                ", "filename", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "path", ")", "\n", "\n", "                ", "#", " Check", " if", " the", " file", " has", " one", " of", " the", " specified", " extensions", "\n", "                ", "if", " extension", " in", " file", "_", "extensions", ":", "\n", "                ", "    ", "#", " Create", " the", " target", " filename", " with", " the", " same", " extension", "\n", "                ", "    ", "target", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "path", "))", "\n", "\n", "                ", "    ", "#", " Handle", " duplicate", " names", " by", " adding", " a", " suffix", "\n", "                ", "    ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "filename", "):", "\n", "                ", "        ", "suff", "ix", " =", " ", "1", "\n", "                ", "        ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "filename", " +", " f"], "logprobs": [-3.148326873779297, -0.00022909401741344482, -0.002963676815852523, -0.01164272241294384, -1.4034861326217651, -1.6520655155181885, -0.35855633020401, -0.02908448688685894, -0.05504636466503143, -0.02365289255976677, -0.004398433957248926, -0.39106935262680054, -0.0005044856225140393, -3.0278701160568744e-05, -0.005359922535717487, -0.08468540757894516, -0.0009639384225010872, -0.5236276388168335, -0.017880206927657127, -0.00334097514860332, -1.1920858014491387e-05, -5.006777428206988e-06, -0.0005759726045653224, -7.378782902378589e-05, -0.0001062098381225951, -4.768370445162873e-07, -0.0007621721015311778, -1.4950354099273682, -8.344646857949556e-07, -2.038458114839159e-05, -0.000869253883138299, -0.0007889734115451574, -0.09330395609140396, -0.0019395602867007256, -0.516238808631897, -0.010139740072190762, -0.10670409351587296, -1.9957696199417114, -1.6872937679290771, -0.18632861971855164, -0.0003588747640606016, -2.0498886108398438, -0.005681556649506092, -1.0296590328216553, -0.021387070417404175, -2.1307287216186523, -0.21692326664924622, -0.007452306803315878, -0.00044431351125240326, -0.00011717586312443018, -0.0038754846900701523, -0.0009039129945449531, -0.003238197648897767, -0.0020145138259977102, -7.83174327807501e-05, -3.4927710657939315e-05, -0.000841025379486382, -0.00010513706365600228, -0.001415918697603047, -4.255681051290594e-05, -0.0005725175142288208, -0.0005656072753481567, -8.868777513271198e-05, -0.0009660820942372084, -9.905801562126726e-05, -0.0004948345012962818, -0.003257803386077285, -0.042825523763895035, -0.0011845960980281234, -1.2312772274017334, -0.019937235862016678, -0.3664543926715851, -7.235741941258311e-05, -0.04180772230029106, -0.052326079457998276, -8.928377064876258e-05, -0.020745903253555298, -0.224507138133049, -0.0005888396990485489, -0.018537839874625206, -2.1332623958587646, -0.0014721043407917023, -0.6247552037239075, -1.1036581993103027, -0.5050767064094543, -0.19396349787712097, -0.038858283311128616, -0.0445953831076622, -0.04054977744817734, -1.3675882816314697, -8.5588610090781e-05, -0.07470979541540146, -0.00016807096835691482, -0.028056999668478966, -0.5053331255912781, -1.9801571369171143, -0.00407401192933321, -0.011393246240913868, -1.549708758830093e-05, -0.07690522819757462, -1.1920928244535389e-07, -0.0041060671210289, -2.408184051513672, -5.483612312673358e-06, -5.006777428206988e-06, -0.0251273475587368, -0.09847701340913773, -1.615479826927185, -1.679100513458252, -0.17349153757095337, -0.0009265420376323164, -0.00013636612857226282, -0.0016825341153889894, -0.0001736728590913117, -0.001384134404361248, -0.00214406312443316, -0.05423584580421448, -1.553760051727295, -0.1825978308916092, -3.814689989667386e-06, -9.727005090098828e-05, -1.6689286894688848e-06, -0.0073498329147696495, -0.014485437422990799, -0.00019691436318680644, -0.0002648479712661356, -1.1920928244535389e-07, -0.12217574566602707, -0.07171749323606491, -0.026567591354250908, -0.741134524345398, -1.762998104095459, -0.34270739555358887, -0.0002012050390476361, -0.0025433117989450693, -1.1920928244535389e-07, -1.07287787614041e-05, -3.576278118089249e-07, -0.004015360493212938, 0.0, 0.0, -7.283422019099817e-05, -1.2288575172424316, -5.1020273531321436e-05, -0.0008211340173147619, -0.007714834064245224, -1.3417739868164062, -0.0007270314963534474, -0.05513797700405121, -0.27712544798851013, -0.03365891054272652, -0.11476615071296692, -0.12014524638652802, -0.3195194602012634, -1.6283588409423828, -0.00032586511224508286, -0.0020738777238875628, -0.3947765529155731, -0.020616289228200912, -0.038275495171546936, -7.521823135903105e-05, -0.003384815761819482, -0.005977491848170757, -0.4927046298980713, -0.0003693613689392805, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.003949818201363087, -5.411955135059543e-05, -0.016451895236968994, -0.00029392691794782877, -0.8898897171020508, -3.340752601623535, -0.6266988515853882, -0.4613672196865082, -1.595847487449646, -1.2284241914749146, -0.5752397179603577, -0.46738767623901367, -0.5506926774978638, -0.17398090660572052, -0.0003500564198475331, -1.3708974620385561e-05, -0.10014176368713379, -0.006045152433216572, -0.06537462770938873, -0.008184583857655525, -0.17394033074378967, -3.576272320060525e-06, -3.933898824470816e-06, -1.7881377516459906e-06, -0.6163333058357239, -0.000200609109015204, -0.03645900636911392, -5.960462772236497e-07, -6.318072337307967e-06, -0.0006755692302249372, -0.062399011105298996, -7.510157047363464e-06, -1.311301275563892e-06, -1.5497195136049413e-06, -0.002615723293274641, 0.0, -6.031808152329177e-05, -0.14907284080982208, -1.2159273865108844e-05, -0.0018314032349735498, -0.0006619884516112506, -0.05363653227686882, -4.494089080253616e-05, -0.0001560327800689265, -0.05974562093615532, -0.7158548831939697, -3.1369707584381104, -3.1208834648132324, -0.8360713124275208, -0.8115041851997375, -0.2384704351425171, -1.6124188899993896, -0.33284467458724976, -7.1403817855753e-05, -1.966933996300213e-05, -1.3049570322036743, -0.011827108450233936, -3.576272320060525e-06, -4.172316494077677e-06, -7.152555099310121e-07, -0.0808103010058403, -9.65590606938349e-06, -0.0003163314249832183, -3.576278118089249e-07, -4.339123915997334e-05, -0.003163335844874382, -0.0013506823452189565, -0.0006385194719769061, -0.000359351426595822, -1.7052018642425537, -8.427741704508662e-05, -0.013774457387626171, -0.002809864701703191, -0.11941598355770111, -0.004791800864040852, -0.005674562882632017, -3.421248038648628e-05, -0.0375533364713192, -0.40308141708374023, -2.682172998902388e-05, -1.1920928244535389e-07, -2.622600959512056e-06, -0.00021360022947192192, -0.007648114114999771, -0.6248317360877991, -2.7418097943154862e-06, -7.116541382856667e-05, -0.6947136521339417, -0.6457296013832092], "finish_reason": "length"}], "metrics": {"energy": 1057.868211673737, "energy_per_token": 4.132297701850535, "time": 23.764587, "time_per_token": 0.09283041796875}}
{"outputs": [{"text": "try:\n        os.makedirs(target_directory, exist_ok=True)\n        file_extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n        moved_count = 0\n        for file in glob.iglob(source_directory + \"/**/*\", recursive=True):\n            if not Path(file).is_file():\n                continue\n            file_extension = Path(file).suffix\n            if file_extension in file_extensions:\n                target_path = Path(target_directory, Path(file).name)\n                if target_path.exists():\n                    counter = 1\n                    while target_path.exists():\n                        new_file_name = f\"{Path(file).stem}-{counter}{file_extension}\"\n                        target_path = Path(target_directory, new_file_name)\n                        counter += 1\n                shutil.copy2(file, target_path)\n                moved_count += 1\n        return moved_count\n    except FileNotFoundError as err", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "file", "_", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "        ", "m", "oved", "_", "count", " =", " ", "0", "\n", "        ", "for", " file", " in", " glob", ".", "ig", "lob", "(", "source", "_", "directory", " +", " \"", "/**", "/*", "\"", ",", " recursive", "=", "True", "):", "\n", "            ", "if", " not", " Path", "(", "file", ")", ".", "is", "_", "file", "():", "\n", "                ", "continue", "\n", "            ", "file", "_", "extension", " =", " Path", "(", "file", ")", ".", "suff", "ix", "\n", "            ", "if", " file", "_", "extension", " in", " file", "_", "extensions", ":", "\n", "                ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ",", " Path", "(", "file", ")", ".", "name", ")", "\n", "                ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                ", "    ", "counter", " =", " ", "1", "\n", "                ", "    ", "while", " target", "_", "path", ".", "exists", "():", "\n", "                ", "        ", "new", "_", "file", "_", "name", " =", " f", "\"", "{", "Path", "(", "file", ")", ".", "stem", "}-", "{", "counter", "}{", "file", "_", "extension", "}\"", "\n", "                ", "        ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ",", " new", "_", "file", "_", "name", ")", "\n", "                ", "        ", "counter", " +=", " ", "1", "\n", "                ", "sh", "util", ".", "copy", "2", "(", "file", ",", " target", "_", "path", ")", "\n", "                ", "m", "oved", "_", "count", " +=", " ", "1", "\n", "        ", "return", " moved", "_", "count", "\n", "    ", "except", " File", "NotFound", "Error", " as", " err"], "logprobs": [-3.148326873779297, -0.00022909401741344482, -0.002963676815852523, -0.01164272241294384, -1.3865031003952026, -0.002041519619524479, -0.6514853239059448, -5.602820692729438e-06, -0.0004917366313748062, -0.00022396916756406426, -0.0156805869191885, -2.0861407392658293e-05, -1.3947389561508317e-05, -0.19760876893997192, -0.005101401824504137, -1.0728830375228426e-06, -4.291525328881107e-06, -0.002418571151793003, -0.007915439084172249, -0.0005171154043637216, -0.16813960671424866, -1.7394429445266724, -2.7437968254089355, -0.023012595251202583, -0.7452747821807861, -0.014633351936936378, -0.5736028552055359, -0.022060709074139595, -0.28258824348449707, -0.007000561337918043, -6.317892984952778e-05, -0.0004419303731992841, -0.0013365155318751931, -0.00048232366680167615, -0.002292625606060028, -0.001723591354675591, -1.2993727978027891e-05, -0.0002520958660170436, -0.00025722055579535663, -0.00025722055579535663, -0.0014060382964089513, -4.017272294731811e-05, -0.00027652730932459235, -9.536697689327411e-06, -0.00015770144818816334, -0.00041738382424227893, -0.0003657863999251276, -0.0010756427654996514, -1.3112935448589269e-05, -0.0012834176886826754, -0.025767801329493523, -0.09611789882183075, -1.6724787950515747, -0.005604625213891268, -0.012294224463403225, -1.2603987455368042, -0.0028896264266222715, -0.009129328653216362, -6.651657167822123e-05, -0.00533893471583724, -0.8746649622917175, -0.27947503328323364, -1.8288086652755737, -2.849583864212036, -0.11924172937870026, -4.8874615458771586e-05, -0.7135360836982727, -1.1920928244535389e-07, -0.007748783566057682, -2.0394856929779053, -8.34461570775602e-06, -1.537788011773955e-05, -0.04345794394612312, -0.5029875040054321, -0.22653943300247192, -0.13562500476837158, -0.07205452769994736, -0.0015607806853950024, -0.00032646095496602356, -0.001188525347970426, -0.00047469791024923325, -0.000998951611109078, -0.007115381304174662, -0.003985558170825243, -0.45045989751815796, -2.2450766563415527, -1.697269082069397, -0.006515213754028082, -0.002568281954154372, -0.0003228858404327184, -5.519237674889155e-05, -0.028966024518013, -1.5497195136049413e-06, -0.042254529893398285, -0.14264987409114838, -0.019352784380316734, -0.00014029949670657516, -0.010124634951353073, -0.013700498268008232, -0.18344014883041382, -1.5769644975662231, -0.025106770917773247, -0.9938197731971741, -0.0022388650104403496, -0.13366098701953888, -0.00010108436981681734, -0.0008235162240453064, -0.00011884459672728553, -7.450303382938728e-05, -0.0005209281225688756, 0.0, -0.4911578297615051, -0.007901010103523731, -0.021206306293606758, -0.02444041520357132, -0.00013410145766101778, -0.0001760566228767857, -0.5053857564926147, -0.0007950482540763915, -2.0265558760002023e-06, -3.099436753473128e-06, -0.010825123637914658, -0.0020626953337341547, -0.0012196014868095517, -0.7932592630386353, -0.0259404256939888, -1.545290231704712, -0.015257198363542557, -0.4295996427536011, -0.0016886036610230803, -0.127412810921669, -4.768370445162873e-07, -4.0531076592742465e-06, -0.6204418540000916, -0.08541504293680191, -0.00015209948469419032, -0.0042138597927987576, -0.0008581769652664661, -2.0146166207268834e-05, -0.004731292836368084, -0.0013313962845131755, -0.004010136239230633, -0.007578314282000065, -0.4845607280731201, -0.1931529939174652, -5.960462772236497e-07, -6.8662193370983e-05, -0.0003597089380491525, -0.0693875178694725, -0.015538224950432777, -0.005662116687744856, -0.0009521479951217771, -0.00021598390594590455, -1.946932077407837, -0.0013977054040879011, -0.0009433348895981908, -0.08759618550539017, -0.001538642100058496, -0.0009901388548314571, -7.652943895664066e-05, -0.26329904794692993, -0.3750886023044586, -5.483612312673358e-06, -0.00010918975021922961, -5.185469490243122e-05, -0.00884188711643219, -0.0038088648580014706, -0.001503290724940598, -0.00014494798961095512, -0.00017557987303007394, -1.219070553779602, -0.0017680978635326028, -1.4623157978057861, -0.019870508462190628, -0.01637883670628071, -0.032463837414979935, -0.5004295706748962, -0.020688805729150772, -0.00045003299601376057, -0.4067363440990448, -6.0437283536884934e-05, -0.30677226185798645, -0.0005590544897131622, -6.437280717364047e-06, -0.00840400904417038, -0.011232473887503147, -0.00044431351125240326, -0.0028309053741395473, -0.0343560129404068, -0.1616499125957489, -3.5523738915799186e-05, -4.6132929128361866e-05, -0.00019035911827813834, -0.001280322321690619, -0.00010048838157672435, -4.60137271147687e-05, -0.04549861699342728, -4.410734163684538e-06, -0.000536655425094068, -0.0012256737099960446, -0.005271819420158863, -8.606540359323844e-05, -0.008534742519259453, -1.1920928244535389e-07, -0.0005725175142288208, -0.0008151783840730786, -0.0033352721948176622, -4.768370445162873e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -2.0265558760002023e-06, -0.0001532914029667154, -0.0009313059854321182, -0.0003579214389901608, -0.002014394849538803, -0.0033014100044965744, -0.001167092937976122, -0.0006418551784008741, -3.325883881188929e-05, -0.00040737437666393816, -0.011603249236941338, -0.11237924546003342, -6.6756979322235566e-06, -1.5497195136049413e-06, -2.979523181915283, -0.38310572504997253, -1.0132738680113107e-05, -0.019539495930075645, -0.00044824567157775164, -0.031158486381173134, -2.50339189733495e-06, -0.06826447695493698, -0.009280046448111534, -0.003580827033147216, -0.0025958672631531954, -0.03869647532701492, -6.794906312279636e-06, -3.4570634852570947e-06, -1.9073468138230965e-06, -0.0012260308722034097, -0.00023338454775512218, -3.302042750874534e-05, -0.00018439977429807186, -0.3988649249076843, -0.046753767877817154, -0.006785445846617222, -2.145764938177308e-06, -4.768370445162873e-07, -0.0011518517276272178, -0.05037219449877739, -0.0010201494442299008, -0.09682268649339676, -0.0009860896971076727, -3.6954811548639555e-06, -0.9271174669265747, -2.6376237869262695], "finish_reason": "length"}], "metrics": {"energy": 1082.1187916641234, "energy_per_token": 4.227026529937982, "time": 24.2379, "time_per_token": 0.094679296875}}
{"outputs": [{"text": "# Initialize count and target directory\n    count = 0\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # Define the extensions to process\n    extensions = (\".txt\", \".docx\", \".xlsx\", \".csv\")\n\n    # Get the list of files in the source directory\n    file_list = glob.glob(f\"{source_directory}/**/*\", recursive=True)\n\n    # Check if the source directory contains any files\n    if not any(file_list):\n        print(\"No files found in the source directory.\")\n        return 0\n\n    # Iterate over the files\n    for filename in file_list:\n        # Get the file extension and name\n        extension = os.path.splitext(filename)[1]\n\n        # Check if the file extension is in the specified extensions\n        if extension in extensions:\n            # Get the original file name without extension\n            original_name = os.path.splitext(os.path.basename(filename))[0]\n\n            # Initialize", "tokens": ["#", " Initialize", " count", " and", " target", " directory", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Define", " the", " extensions", " to", " process", "\n", "    ", "extensions", " =", " (", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", ")", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " source", " directory", " contains", " any", " files", "\n", "    ", "if", " not", " any", "(", "file", "_", "list", "):", "\n", "        ", "print", "(", "\"", "No", " files", " found", " in", " the", " source", " directory", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", "\n", "    ", "for", " filename", " in", " file", "_", "list", ":", "\n", "        ", "#", " Get", " the", " file", " extension", " and", " name", "\n", "        ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " extension", " is", " in", " the", " specified", " extensions", "\n", "        ", "if", " extension", " in", " extensions", ":", "\n", "            ", "#", " Get", " the", " original", " file", " name", " without", " extension", "\n", "            ", "original", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "filename", "))", "[", "0", "]", "\n", "\n", "            ", "#", " Initialize"], "logprobs": [-0.9796487092971802, -2.819232940673828, -3.212630271911621, -2.1794278621673584, -4.662405967712402, -0.2824205458164215, -0.8174259662628174, -0.002542241709306836, -0.2853589355945587, -0.04731958359479904, -0.0019043420907109976, -0.000226472009671852, -0.002441998338326812, -0.09804664552211761, -1.3869162797927856, -0.010003432631492615, -0.004105473402887583, -1.4066597032069694e-05, -8.106198947643861e-06, -0.0011293468996882439, -0.000316927267704159, -0.000266278104390949, -9.536738616588991e-07, -0.001057304092682898, -0.3116390109062195, -0.001039679627865553, -0.004132541362196207, -6.55629628454335e-05, -0.00017998983094003052, -3.576278118089249e-07, -2.7418097943154862e-06, -9.452849917579442e-05, -9.333651541965082e-05, -0.00023648326168768108, -0.048657048493623734, -0.07848194241523743, -0.00029595286468975246, -0.02143992856144905, -1.8328466415405273, -0.9508302211761475, -1.2647826671600342, -0.21848450601100922, -3.383800983428955, -0.04574473947286606, -0.00035386974923312664, -0.0813998207449913, -0.07001681625843048, -1.2745871543884277, -0.006599654443562031, -0.09560785442590714, -0.005004142876714468, -7.128461584215984e-05, -5.364274329622276e-05, -0.0007470439304597676, -0.0002668739762157202, -0.002544144168496132, -0.0028534908778965473, -8.106198947643861e-06, -1.0847986231965479e-05, -0.00011264643399044871, -8.689979586051777e-05, -0.002294528530910611, -2.3007127310847864e-05, -0.0002892790944315493, -5.960446742392378e-06, -7.033100700937212e-05, -0.00023803261865396053, -0.0004629017203114927, -0.00031132620642893016, -1.0251946150674485e-05, -0.005013987887650728, -0.002669225912541151, -0.011497899889945984, -0.00014757021563127637, -0.023067347705364227, -2.9815123081207275, -1.177991509437561, -0.45686760544776917, -0.0001995364436879754, -0.30012720823287964, -0.8837122917175293, -0.03553905338048935, -0.032494302839040756, -0.03843702748417854, -1.4018102884292603, -0.00019941726350225508, -2.1961958408355713, -0.015068629756569862, -0.2166554033756256, -0.001774761825799942, -0.2302052229642868, -2.4676019165781327e-05, -0.05100235342979431, -0.0035529127344489098, -1.2030915021896362, -0.03848107531666756, -0.01702151820063591, -0.04150093346834183, -2.50339189733495e-06, -3.814689989667386e-06, -0.18251201510429382, -0.009416569955646992, -0.037232719361782074, -0.07320479303598404, -0.024698520079255104, -0.0003491030656732619, -0.000535821367520839, -0.0009415484382770956, -0.006175839342176914, -0.0033378859516233206, -0.03566962108016014, -0.00011395759065635502, -0.10004394501447678, -3.6488685607910156, -0.28443044424057007, -0.6086610555648804, -0.15349678695201874, -0.05666983500123024, -3.0956549644470215, -0.3827745020389557, -0.2292489856481552, -0.3106459379196167, -0.00011300401820335537, -0.009218510240316391, -0.22292256355285645, -2.957010507583618, -0.13208822906017303, -0.5793061256408691, -0.4997202455997467, -0.013632294721901417, -0.0005165196489542723, -0.0060415975749492645, -0.0009391664643771946, -0.8334652781486511, -0.008104415610432625, -0.44884639978408813, -0.7393409609794617, -0.038451939821243286, -0.08740133047103882, -0.038545310497283936, -0.06276170909404755, -0.058505669236183167, -0.007130058016628027, -0.0907379537820816, -0.033190254122018814, -0.0004021312633994967, -0.0006588910473510623, -0.05797494947910309, -0.007104846648871899, -2.3892714977264404, -0.00229904823936522, -0.008177371695637703, -0.0076759145595133305, -0.0002643712505232543, -0.08247890323400497, -1.1952952146530151, -0.000609927112236619, -0.6542234420776367, -0.44890087842941284, -0.2121967077255249, -1.215062141418457, -5.245071224635467e-05, -0.003192449454218149, -2.3770744800567627, -0.0030560242012143135, -0.004222169518470764, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.00015138434537220746, -0.0008774721063673496, -0.04549223929643631, -0.39891597628593445, -1.9906587600708008, -0.09187443554401398, -0.6678965091705322, -0.09725359082221985, -1.0179319381713867, -1.8418132066726685, -1.0083503723144531, -0.0001530530134914443, -0.8463037610054016, -0.0018768567824736238, -0.5590165853500366, -1.9073468138230965e-06, -0.00010668662434909493, -8.344646857949556e-07, -6.913899414939806e-05, 0.0, 0.0, -3.0397906812140718e-05, -0.01094021275639534, -0.10087207704782486, -0.00024399164249189198, -0.00016020445036701858, -0.4907169044017792, -2.179758310317993, -0.0003194298769813031, -0.04603133350610733, -0.2547399401664734, -0.01045205444097519, -0.07853329926729202, -0.19711175560951233, -2.045785903930664, -0.4340927004814148, -0.9579407572746277, -0.02025865577161312, -1.8079283237457275, -0.39010363817214966, -0.15770038962364197, -4.565611743601039e-05, -0.0038525662384927273, -0.009563937783241272, -0.5086396932601929, -0.0003519630990922451, -0.008961694315075874, -0.0003000047872774303, -0.009518005885183811, -0.2737105190753937, -0.42259806394577026, -0.006864654831588268, -2.219630718231201, -0.8989897966384888, -0.008626576513051987, -0.6709520816802979, -0.23874838650226593, -0.1048814058303833, -0.00010764019680209458, -0.5898723602294922, -0.0027839497197419405, -0.11847145855426788, -0.08092190325260162, -0.01389261707663536, -1.1920922133867862e-06, -4.0531076592742465e-06, -1.1920928244535389e-07, -0.20923763513565063, 0.0, -1.1086402082582936e-05, -8.666139910928905e-05, -0.03485647588968277, -9.059865078597795e-06, -4.768370445162873e-07, -1.0728830375228426e-06, -0.007257407996803522, -2.3841855067985307e-07, -1.1205610462639015e-05, -0.000387831823900342, -6.425174069590867e-05, -8.177422569133341e-05, -0.0003912875254172832, -7.152301259338856e-05, -0.0005856229108758271, -0.11154129356145859, -0.0001358893496217206, -0.01665966585278511, -1.0438776016235352], "finish_reason": "length"}], "metrics": {"energy": 1074.8973442993154, "energy_per_token": 4.198817751169201, "time": 23.818918, "time_per_token": 0.0930426484375}}
{"outputs": [{"text": "if not Path(source_directory).exists():\n        raise FileNotFoundError(f\"The directory '{source_directory}' does not exist.\")\n\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n    files = glob.glob(f\"{source_directory}/**/*\", recursive=True)\n\n    moved_count = 0\n    for file in files:\n        base_name, extension = os.path.splitext(file)\n        if extension.lower() in extensions:\n            target_file = os.path.join(target_directory, os.path.basename(file))\n\n            if os.path.exists(target_file):\n                index = 1\n                while os.path.exists(target_file):\n                    basename, ext = os.path.splitext(os.path.basename(file))\n                    target_file = os.path.join(\n                        target_directory, f\"{basename}-{index}{ext}\"\n                    )\n                    index += 1", "tokens": ["if", " not", " Path", "(", "source", "_", "directory", ")", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "base", "_", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")", "\n", "        ", "if", " extension", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "            ", "if", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "):", "\n", "                ", "index", " =", " ", "1", "\n", "                ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "):", "\n", "                ", "    ", "bas", "ename", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "                ", "    ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "\n", "                ", "        ", "target", "_", "directory", ",", " f", "\"", "{", "bas", "ename", "}-", "{", "index", "}{", "ext", "}\"", "\n", "                ", "    ", ")", "\n", "                ", "    ", "index", " +=", " ", "1"], "logprobs": [-2.0947837829589844, -0.048291586339473724, -2.0924060344696045, -0.009274494834244251, -0.018486466258764267, -3.576272320060525e-06, -2.145764938177308e-06, -0.002130026463419199, -0.00030882356804795563, -0.6413440704345703, -0.010006265714764595, -0.014871685765683651, -0.003507891669869423, -0.03560497239232063, -0.003176526166498661, -0.00019453064305707812, -1.2516897186287679e-05, -0.054624199867248535, -0.3086221516132355, -0.05194101855158806, -1.775160312652588, -0.8145157694816589, -0.569926917552948, -0.001115891383960843, -0.007847550325095654, -2.9802276912960224e-06, -1.5497195136049413e-06, -0.005539780016988516, -0.037145428359508514, -0.0007239343249239028, -0.003698771819472313, -0.12301991134881973, -0.009587788954377174, -0.0006607971154153347, -0.0009172523277811706, -0.09056668728590012, -0.00041869457345455885, -1.2375514507293701, -0.12665805220603943, -0.8744649291038513, -0.004433801863342524, -0.1056232750415802, -0.004669950809329748, -5.1616290875244886e-05, -0.00037019551382400095, -0.00041214076918549836, -0.00031001531169749796, -0.0028400584124028683, -0.001985484967008233, -7.510157047363464e-06, -0.0001784403866622597, -0.00010978573118336499, -0.0002673506969586015, -0.0007017772295512259, -8.487341256113723e-05, -0.00027307120035402477, -6.198863957251888e-06, -0.0005085367010906339, -0.00016973962192423642, -0.00022825974156148732, -0.0003299168893136084, -8.106198947643861e-06, -0.001980725908651948, -0.03271330147981644, -0.20663438737392426, -0.693058967590332, -0.6623603105545044, -0.698300302028656, -4.1483970562694594e-05, -0.07478601485490799, -0.0021713031455874443, -0.9467078447341919, -0.03624001890420914, -0.02577337808907032, -0.0366993173956871, -5.960462772236497e-07, -2.3841855067985307e-07, -0.13189078867435455, -0.008948697708547115, -0.040461745113134384, -0.08833189308643341, -0.018586518242955208, -0.00016306500765495002, -0.0006094505661167204, -0.00047291061491705477, -0.003610284999012947, -0.04261546581983566, -1.057104468345642, -0.00013553177996072918, -1.338346242904663, -0.008515712805092335, -0.02023073472082615, -0.794683575630188, -0.0018659100169315934, -0.0020904133561998606, -4.482168878894299e-05, -0.014169560745358467, -0.3493746817111969, -0.1951681673526764, -0.07659532874822617, -0.21906189620494843, -0.008054987527430058, -0.00011205045302631333, -0.0018682897789403796, -0.003615036141127348, -3.325900077819824, -0.04601015895605087, -0.10875070095062256, -1.2749136686325073, -0.872235894203186, -0.0007388246012851596, -0.017976807430386543, -5.960462772236497e-07, -4.482168878894299e-05, -3.576278118089249e-07, -0.0004552758182398975, 0.0, 0.0, -5.018585216021165e-05, -0.19589482247829437, -0.0007077334448695183, -0.00329772662371397, -0.09230584651231766, -0.04777916893362999, -0.039246466010808945, -1.288188099861145, -0.005096776410937309, -1.3470558769768104e-05, -0.19654817879199982, -0.0009535771678201854, -0.066683828830719, -0.008210832253098488, -0.004741496406495571, -0.5564727187156677, -0.02243635058403015, -0.46502673625946045, -0.15739499032497406, -0.2527673542499542, -3.576278118089249e-07, -2.264974000354414e-06, -7.152555099310121e-07, -0.010598444379866123, -5.376194530981593e-05, -0.013855936005711555, -1.1920928244535389e-07, -8.34461570775602e-06, -0.00020561488054227084, -0.03492359071969986, -1.0728830375228426e-06, -9.536738616588991e-07, 0.0, -0.0010388459777459502, 0.0, -1.6093124941107817e-05, -0.06908796727657318, -0.0011955503141507506, -0.001303299912251532, -1.3125015497207642, -0.0003066784702241421, -0.8808514475822449, -0.07874321937561035, -1.1920922133867862e-06, -9.917721035890281e-05, -2.3841855067985307e-07, -0.16989180445671082, -1.537788011773955e-05, -0.0005690624238923192, -1.6689286894688848e-06, -3.6477376852417365e-05, -0.005274072289466858, -0.018695687875151634, -0.001016934053041041, -3.1208341121673584, -0.0005373702733777463, -0.0010920758359134197, -0.0322188101708889, -0.0032497234642505646, -0.007949382066726685, -0.10156673938035965, -0.13853207230567932, -3.4570634852570947e-06, -3.576278118089249e-07, -8.344646857949556e-07, -0.00013755806139670312, -0.00011169286881340668, -0.1976574957370758, -9.775113539944869e-06, -5.638440416078083e-05, -0.059755392372608185, -0.001739775761961937, -0.0001110968878492713, -0.0001679517881711945, -3.4256038665771484, -5.125986263010418e-06, -0.25667804479599, -0.4069180190563202, -0.0008827127167023718, -0.00010525626566959545, -1.1205610462639015e-05, -2.3841830625315197e-06, -4.768370445162873e-07, -5.2689116273541003e-05, 0.0, 0.0, -2.4676019165781327e-05, -1.6990561485290527, -6.6756979322235566e-06, -1.0728830375228426e-06, -3.576278118089249e-07, -0.001932302606292069, -1.0728830375228426e-06, -7.510157047363464e-06, -0.31986668705940247, -6.782778655178845e-05, -0.0009701313101686537, -0.0006873629172332585, -1.4305012882687151e-05, -0.20992378890514374, -3.015949550899677e-05, -0.001401276676915586, -0.003240336664021015, -0.034376055002212524, -4.887569048150908e-06, -8.344646857949556e-07, -6.198863957251888e-06, -0.0024299875367432833, -2.1219027985353023e-05, -1.103332757949829, -1.0371154530730564e-05, -0.0005515484372153878, -0.0035030210856348276, -3.576278118089249e-07, -0.00010442188795423135, -4.637133679352701e-05, -0.08038468658924103, -0.0010181248653680086, -7.199982064776123e-05, -0.010249125771224499, -1.1920928244535389e-07, -0.019427144899964333, -0.000376034586224705, -0.0014892450999468565, -0.008668413385748863, -0.004549747332930565, -0.007549919653683901, -0.016369689255952835, -2.8132995794294402e-05, -0.0003719830128829926, -2.145764938177308e-06, -0.0017190692014992237, -0.0022699085529893637, -0.0002233732520835474, -0.0023509026505053043, -0.0002146728802472353, -8.83301836438477e-05, -4.60137271147687e-05], "finish_reason": "length"}], "metrics": {"energy": 1059.4061553344732, "energy_per_token": 4.138305294275286, "time": 23.993876, "time_per_token": 0.093726078125}}
{"outputs": [{"text": "# Check if source_directory exists and raise an error if not\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory {source_directory} does not exist.\")\n\n    # Define the target directory and create it if it doesn't exist\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # Initialize counters\n    moved_count = 0\n    conflicts_count = 0\n    duplicates_count = 0\n\n    # Define the extensions to consider\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    # Search for files with the defined extensions recursively in the source directory\n    for extension in extensions:\n        for file_path in glob.glob(os.path.join(source_directory, \"**\", f\"*{extension}\"), recursive=True):\n            # Extract the filename and extension from the file path\n            filename = os.path.basename(file_path)\n            file_extension = os.path", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", " and", " raise", " an", " error", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Define", " the", " target", " directory", " and", " create", " it", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " counters", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "con", "fl", "icts", "_", "count", " =", " ", "0", "\n", "    ", "dup", "licates", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Define", " the", " extensions", " to", " consider", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " the", " defined", " extensions", " recurs", "ively", " in", " the", " source", " directory", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " f", "\"", "*{", "extension", "}\"", ")", ",", " recursive", "=", "True", "):", "\n", "            ", "#", " Ext", "ract", " the", " filename", " and", " extension", " from", " the", " file", " path", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "            ", "file", "_", "extension", " =", " os", ".", "path"], "logprobs": [-0.9796487092971802, -1.2422620058059692, -0.11522933840751648, -0.799961268901825, -1.0119165182113647, -0.0009844223968684673, -0.04348431155085564, -2.8018367290496826, -2.2718591690063477, -1.2746795415878296, -0.32081839442253113, -0.016917560249567032, -0.905540943145752, -0.17682518064975739, -0.0011631635716184974, -0.10649213939905167, -0.011059886775910854, -0.19902342557907104, -6.9141146923357155e-06, -0.0019111240981146693, -8.106198947643861e-06, -0.08737260848283768, -0.00021789084712509066, -0.005430944263935089, -4.291525328881107e-06, -4.6491513785440475e-06, -0.004691664129495621, -0.002249807585030794, -0.0013186577707529068, -0.013763640075922012, -0.0012823462020605803, -9.250213042832911e-05, -4.887569048150908e-06, -0.027232298627495766, -0.1861746609210968, -0.043199386447668076, -0.459246426820755, -0.00692669115960598, -1.9799834489822388, -0.002501455834135413, -3.2186455882765586e-06, -8.344646857949556e-07, -0.003467026399448514, -0.11647575348615646, -0.0005329619161784649, -0.0009285667329095304, -0.28602662682533264, -0.002622975967824459, -0.00033361115492880344, -9.846202738117427e-05, -0.031292401254177094, -0.0005421360838226974, -0.07191763818264008, -3.15501070022583, -0.3412213623523712, -1.5263311862945557, -0.32430300116539, -0.6787741184234619, -0.06084315851330757, -0.02480086125433445, -0.005594904534518719, -0.08990781009197235, -0.6401018500328064, -0.00022575691400561482, -1.4662635294371285e-05, -0.009749533608555794, -0.0380442813038826, -0.0002004899288294837, -2.674257755279541, -0.004712427966296673, -0.0009976415894925594, -1.7881377516459906e-06, -2.264974000354414e-06, -0.0006090931710787117, -0.0004408579843584448, -0.0002455409849062562, -2.3841855067985307e-07, -0.000309657771140337, -0.06217644736170769, -0.000526289688423276, -0.003511455375701189, -2.9444261599564925e-05, -8.153582894010469e-05, -3.576278118089249e-07, -8.344646857949556e-07, -9.226373367710039e-05, -4.017272294731811e-05, -0.0010833829874172807, -0.004094195086508989, -0.010182339698076248, -0.0002208704245276749, -0.029631802812218666, -1.785590648651123, -3.018075466156006, -1.193921446800232, -0.00018094333063345402, -1.547724723815918, -0.02104897052049637, -0.03238697722554207, -1.3613475561141968, -0.03285370022058487, -0.011501670815050602, -0.0002277830062666908, -0.07205120474100113, -0.09979874640703201, -2.4648807048797607, -0.4693523347377777, -0.4117751717567444, -0.17266857624053955, -0.16656368970870972, -0.00024637524620629847, -0.005463311914354563, -0.005496033933013678, -0.006006286945194006, -1.9889225959777832, -3.3453102111816406, -0.011386646889150143, -0.013719193637371063, -0.07575037330389023, -0.00036459474358707666, -0.0018204560037702322, -0.0030110995285212994, -0.0021799865644425154, -0.14330950379371643, -0.00012766500003635883, -0.01252958457916975, -0.55539470911026, -0.326661616563797, -1.146041989326477, -0.2774220407009125, -2.019026756286621, -0.11314858496189117, -0.0001232548092957586, -0.044748373329639435, -0.06934314221143723, -0.8272049427032471, -0.002726292237639427, -0.05301877111196518, -0.00405644066631794, -4.1483970562694594e-05, -0.000301673193462193, -0.00035375059815123677, -0.00022456508304458112, -0.0016038662288337946, -0.0023334198631346226, -5.006777428206988e-06, -0.00021526881027966738, -6.663577369181439e-05, -7.188061863416806e-05, -0.0012753218179568648, -1.2636104656849056e-05, -0.00017927470616996288, -2.622600959512056e-06, -0.0008768765837885439, -0.00011777184408856556, -4.684815212385729e-05, -0.0002972637885250151, -7.867782187531702e-06, -0.002458171220496297, -0.0014321081107482314, -0.006500883027911186, -0.00011062010162277147, -0.014101036824285984, -2.9384217262268066, -0.1650713086128235, -0.2285384088754654, -0.6110810041427612, -0.5005594491958618, -1.809226632118225, -0.0025654281489551067, -1.6144920587539673, -1.6093124941107817e-05, -0.19593578577041626, -0.01930437609553337, -0.0032845379319041967, -0.018500158563256264, -0.031190378591418266, -0.00016330339713022113, -0.6184514760971069, -0.8290127515792847, -0.0006275591440498829, -0.0007320346776396036, -3.349725011503324e-05, -0.00032109825406223536, -0.0028928357642143965, -1.4274590015411377, -0.49848195910453796, -0.894176185131073, -0.03442120552062988, -0.002188669750466943, -0.01094151008874178, -1.0609570381348021e-05, -0.5511025786399841, -0.0005896736984141171, -1.1269280910491943, -2.145764938177308e-06, -1.1324817933200393e-05, -8.4638240878121e-06, -0.0011432785540819168, -0.0002734287118073553, -0.0033598660957068205, -7.152555099310121e-07, -3.933898824470816e-06, -0.00033539868309162557, -0.6510992646217346, -0.001655756845138967, -0.08732672780752182, -0.0020824430976063013, -0.04727717489004135, -0.0023746881633996964, -0.1810070425271988, -0.00017379203927703202, -0.0008590107318013906, -0.0010919567430391908, -5.507317473529838e-05, -0.0008743754005990922, -0.00028975578607060015, -0.0002456601650919765, -0.00011324241495458409, -0.0003665013937279582, -0.14933069050312042, -0.3860633075237274, -0.5684826374053955, -0.0015151937259361148, -0.10971416532993317, -1.3131208419799805, -0.3933609127998352, -0.16582681238651276, -0.5918230414390564, -0.005654293578118086, -0.24788817763328552, -0.1505199670791626, -0.00311782187782228, -0.0002022777043748647, -0.4182029366493225, -0.4172934591770172, -0.03186807036399841, -8.344646857949556e-07, -7.152555099310121e-07, 0.0, -0.021094026044011116, -1.1920928244535389e-07, -1.5497195136049413e-06, -0.0004067785630468279, -8.344646857949556e-07, 0.0, -0.0009455977124162018, -0.011611261405050755, -0.15516406297683716, -1.7620304822921753, -0.07320966571569443, -0.6896302700042725, -0.00013422065239865333, -0.029476597905158997, -2.3841855067985307e-07, -5.602820692729438e-06], "finish_reason": "length"}], "metrics": {"energy": 1084.2215943489073, "energy_per_token": 4.235240602925419, "time": 23.794949, "time_per_token": 0.09294901953125}}
{"outputs": [{"text": "extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n    target_dir = Path(target_directory)\n    target_dir.mkdir(parents=True, exist_ok=True)\n\n    # Get list of files in the source directory\n    all_files = glob.glob(os.path.join(source_directory, \"**\", \"*\"), recursive=True)\n    files_to_move = []\n\n    # Filter the files by extensions\n    for file in all_files:\n        if os.path.splitext(file)[1].lower() in extensions:\n            files_to_move.append(file)\n\n    # Move the files while handling conflicts\n    moved_files_count = 0\n    for file in files_to_move:\n        file_name, extension = os.path.splitext(os.path.basename(file))\n        target_file_path = target_dir / f\"{file_name}{extension}\"\n        i = 1\n\n        # Handle conflicts by renaming dup", "tokens": ["extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "dir", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Get", " list", " of", " files", " in", " the", " source", " directory", "\n", "    ", "all", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " \"", "*", "\"", ")", ",", " recursive", "=", "True", ")", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "\n", "    ", "#", " Filter", " the", " files", " by", " extensions", "\n", "    ", "for", " file", " in", " all", "_", "files", ":", "\n", "        ", "if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", ".", "lower", "()", " in", " extensions", ":", "\n", "            ", "files", "_", "to", "_", "move", ".", "append", "(", "file", ")", "\n", "\n", "    ", "#", " Move", " the", " files", " while", " handling", " conflicts", "\n", "    ", "m", "oved", "_", "files", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "file", "_", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "        ", "target", "_", "file", "_", "path", " =", " target", "_", "dir", " /", " f", "\"", "{", "file", "_", "name", "}{", "extension", "}\"", "\n", "        ", "i", " =", " ", "1", "\n", "\n", "        ", "#", " Handle", " conflicts", " by", " ren", "aming", " dup"], "logprobs": [-2.3802566528320312, -0.13607530295848846, -0.6476328372955322, -0.006539018824696541, -0.08000356703996658, -0.005440311040729284, -4.732496745418757e-05, -0.0003843760641757399, -0.0011593532981351018, -0.00016783259343355894, -0.001973706530407071, -0.0019298041006550193, -1.0251946150674485e-05, -0.00036769305006600916, -0.00019536493346095085, -8.427741704508662e-05, -0.0017823775997385383, -6.067568756407127e-05, -0.00046850196667946875, -5.483612312673358e-06, -0.000504723924677819, -0.00040844682371243834, -9.345571743324399e-05, -0.00048792376765049994, -8.34461570775602e-06, -0.0020234365947544575, -0.0713094100356102, -0.32974839210510254, -3.601841926574707, -0.05810082331299782, -2.2246432304382324, -0.24516528844833374, -0.08291274309158325, -0.00419973349198699, -0.005064515862613916, -9.536738616588991e-07, -4.768360213347478e-06, -0.006754305679351091, -0.0570271834731102, -0.1638811081647873, -0.575921893119812, -0.00015090756642166525, -0.0022702652495354414, -0.004090039525181055, -0.0002536452084314078, -6.794906312279636e-06, -0.0012880609137937427, -0.207597553730011, -0.0009047467028722167, -0.004488749895244837, -0.0001308832288486883, -0.0001392267586197704, -8.344646857949556e-07, -1.0728830375228426e-06, -5.924526340095326e-05, -0.00019965562387369573, -0.00013886917440686375, -0.19684302806854248, -0.9810576438903809, -0.0004103533865418285, -2.716106414794922, -2.7683510780334473, -3.002615213394165, -0.006862523499876261, -0.8038830161094666, -1.1755105257034302, -1.0179641246795654, -0.1056862398982048, -0.13377892971038818, -1.5241831541061401, -0.0005534547381103039, -3.2441506385803223, -0.011158326640725136, -0.08006034791469574, -0.034357279539108276, -0.3461528718471527, -4.017272294731811e-05, -0.03753898665308952, -0.004127080552279949, -0.438782662153244, -6.6756979322235566e-06, -0.0004258441040292382, -6.437280717364047e-06, -0.005845001433044672, -0.0008839037618599832, -0.009985729120671749, -2.622600959512056e-06, -5.006664650863968e-05, -0.0017652419628575444, -0.1584140807390213, -0.006905026268213987, -0.1823674887418747, -0.042987577617168427, -0.01071214396506548, -0.0024534144904464483, -0.21367907524108887, -0.00890840869396925, -0.0002673506969586015, -0.0016156489728018641, -0.0014569868799299002, -0.000773488252889365, -0.0015144795179367065, -0.0026613790541887283, -0.43102118372917175, -1.1014611721038818, -0.27098920941352844, -0.048063017427921295, -6.532455881824717e-05, -0.12462592124938965, -0.000730247818864882, -3.041917085647583, -0.046111248433589935, -0.39542970061302185, -0.00015507926582358778, -0.17140242457389832, -0.34692636132240295, -2.3203773498535156, -0.42373302578926086, -0.6368923783302307, -1.0378637313842773, -0.22959159314632416, -0.00010954733443213627, -0.017132850363850594, -0.3135661780834198, -0.2312217354774475, -0.0014062763657420874, -5.960462772236497e-07, -2.3841855067985307e-07, -6.949660019017756e-05, -0.00029988560709170997, -0.00030894274823367596, -0.4343613386154175, -0.33439821004867554, -3.099436753473128e-06, -2.932505594799295e-05, -3.576278118089249e-07, -0.8692811727523804, -1.5497195136049413e-06, 0.0, -3.158996332786046e-05, -0.009820363484323025, -0.1367935687303543, -0.0008759237825870514, -0.0005614373367279768, -1.8932151794433594, -0.010082504712045193, -2.1457441107486375e-05, -0.0022421954199671745, -0.0007761088781990111, -0.08462779223918915, -0.011066370643675327, -0.000226472009671852, -0.023354340344667435, -8.821448318485636e-06, -2.3841855067985307e-07, 0.0, -3.576278118089249e-07, -0.0007167869480326772, -0.0003058442671317607, -0.005140540190041065, -0.019862094894051552, -0.0012257928028702736, -0.00032181330607272685, -0.011996502056717873, -0.0006269635050557554, -0.666472315788269, -0.2028895765542984, -0.6224883794784546, -0.24517060816287994, -3.0346713066101074, -0.07038386911153793, -2.6677405834198, -0.10437270253896713, -0.0005978942499496043, -0.7932447195053101, -0.01667959615588188, -0.02892780862748623, -0.871627151966095, -1.0915000438690186, -0.03260276839137077, -0.0007708676857873797, -0.019072243943810463, -0.0001045410826918669, -0.003683806862682104, -0.030904818326234818, -0.05996827781200409, -0.33534470200538635, -0.1968136578798294, -0.0021569100208580494, -8.344646857949556e-07, 0.0, 0.0, -1.3708974620385561e-05, -0.00014911970356479287, -0.00017486473370809108, -0.0027526842895895243, -1.4967005252838135, -0.009659101255238056, -0.1665671318769455, -1.2720472812652588, -1.7667274475097656, -0.00022742546570952982, -0.0018724543042480946, -1.1920928244535389e-07, -3.099436753473128e-06, 0.0, -0.0011337526375427842, 0.0, -1.1920922133867862e-06, -0.00010668662434909493, -0.2384764552116394, -8.344646857949556e-07, -3.576278118089249e-07, 0.0, -0.004209823906421661, 0.0, -5.483612312673358e-06, -0.000129691296024248, -0.00025149996508844197, -0.002252543345093727, -0.08486808091402054, -0.3293517529964447, -0.006659694015979767, -0.3638540804386139, -1.1148806810379028, -0.15467122197151184, -0.0007084482349455357, -2.0530147552490234, -2.9802276912960224e-06, -0.021971499547362328, -0.020426977425813675, -0.6535322070121765, -0.0020786363165825605, -6.723177648382261e-05, -0.0019074357114732265, -0.00014041867689229548, -1.311301275563892e-06, -0.05322812497615814, -0.0005159238935448229, -0.001620766706764698, -0.0026423560921102762, -0.6570608019828796, -1.9706203937530518, -0.0005166388000361621, -0.0010682597057893872, -0.13734029233455658, -0.04809346795082092, -1.2838985919952393, -0.0001967951684491709, -1.0318076610565186, -0.42004042863845825, -1.5494095087051392, -0.6996031999588013, -0.1133170872926712, -1.1920928244535389e-07, -0.5504382252693176], "finish_reason": "length"}], "metrics": {"energy": 1043.980183465958, "energy_per_token": 4.078047591663898, "time": 23.794905, "time_per_token": 0.09294884765625}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory {source_directory} does not exist\")\n\n    target_directory = Path(target_directory).resolve()\n    if not target_directory.exists():\n        target_directory.mkdir(parents=True, exist_ok=True)\n\n    file_extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    num_moved_files = 0\n    for file_ext in file_extensions:\n        for file_path in glob.glob(os.path.join(source_directory, \"**\", f\"*{file_ext}\"), recursive=True):\n            file_name = os.path.basename(file_path)\n            target_file_path = os.path.join(target_directory, file_name)\n            counter = 1\n            while os.path.exists(target_file_path):\n                file_name_parts = os.path.splitext(file_name)\n                renamed_file", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "file", "_", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "num", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", "_", "ext", " in", " file", "_", "extensions", ":", "\n", "        ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "\"", ",", " f", "\"", "*{", "file", "_", "ext", "}\"", ")", ",", " recursive", "=", "True", "):", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "            ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "counter", " =", " ", "1", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "target", "_", "file", "_", "path", "):", "\n", "                ", "file", "_", "name", "_", "parts", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")", "\n", "                ", "ren", "amed", "_", "file"], "logprobs": [-2.0947837829589844, -0.048291586339473724, -0.16566723585128784, -3.302042750874534e-05, -0.002990300301462412, -3.9219088648678735e-05, -0.09393922239542007, -0.00032443503732793033, -0.012956246733665466, -5.364403477869928e-06, -7.629365427419543e-06, -0.003467620350420475, -0.009803718887269497, -0.002781928749755025, -0.04047582671046257, -0.0035747692454606295, -0.00011729506513802335, -7.271740287251305e-06, -0.04469935595989227, -0.24588355422019958, -0.041905809193849564, -0.40470442175865173, -0.011688793078064919, -1.5563392639160156, -0.0025197681970894337, -6.437280717364047e-06, -2.7418097943154862e-06, -0.008259307593107224, -0.13209168612957, -0.00048315772437490523, -0.0014243705663830042, -1.5776877403259277, -0.00024577934527769685, -0.0005115154199302197, -0.059711817651987076, -0.00033396866638213396, -2.2240655422210693, -0.035536061972379684, -0.27134090662002563, -0.14955686032772064, -0.5241778492927551, -0.004068788141012192, -0.002830310957506299, 0.0, -1.1920922133867862e-06, -0.001595415873453021, -2.5394082069396973, -0.3865136504173279, -0.01873207464814186, -0.038124725222587585, -0.10216546058654785, -1.9167070388793945, -0.01259656809270382, -0.06440087407827377, -8.702239938429557e-06, -4.0531076592742465e-06, -0.0009414292871952057, -0.20021967589855194, -0.004888605792075396, -0.003449444193392992, -0.00040713604539632797, -0.14222289621829987, -1.9073468138230965e-06, -1.2516897186287679e-05, -0.0003369478799868375, -0.0001370812824461609, -4.768370445162873e-07, -0.11299356818199158, -0.0065217274241149426, -0.00028880240279249847, -0.002021295018494129, -0.3321840167045593, -0.0001679517881711945, -2.861018856492592e-06, -2.3841855067985307e-07, -7.510157047363464e-06, -0.010098201222717762, -7.259582343976945e-05, -0.01161432545632124, -0.06641659140586853, -0.0014219897566363215, -2.5980281829833984, -0.008719230070710182, -0.16952088475227356, -0.014613498002290726, -0.5551034212112427, -0.0061783273704349995, -0.11626851558685303, -0.00407401192933321, -4.51792984677013e-05, -0.0006075443816371262, -0.0004596845537889749, -0.00028689560713246465, -0.001618743408471346, -0.0020874394103884697, -6.6756979322235566e-06, -0.00018714107864070684, -0.00011514954530866817, -0.0002420847595203668, -0.0008596062543801963, -3.4689302992774174e-05, -0.00018785618885885924, -4.291525328881107e-06, -0.00045908879837952554, -0.00015615197480656207, -5.7338023907504976e-05, -0.0004378790326882154, -7.033323527139146e-06, -0.0013660395052284002, -0.019168026745319366, -1.8116108179092407, -0.00027938754647038877, -3.2481207847595215, -0.0006516240537166595, -0.9845725297927856, -0.011669705621898174, -0.3400125801563263, -0.00026472879108041525, -0.0008108903421089053, -0.017870135605335236, -3.099393507000059e-05, -0.0025006234645843506, -0.4419936239719391, -0.15240266919136047, -1.5374128818511963, -0.07710125297307968, -2.298940896987915, -0.0005544078885577619, -0.0007076143519952893, -1.1920928244535389e-07, -3.814624506048858e-05, -4.2676016164477915e-05, -0.0002829628065228462, -0.0012484145117923617, -1.5307506322860718, -0.7824968695640564, -0.5572159290313721, -0.053876593708992004, -0.0030314228497445583, -0.0484241358935833, -1.156323378381785e-05, -0.5257074236869812, -0.0013873485149815679, -1.440863847732544, -1.5497195136049413e-06, -8.535020606359467e-05, -1.5497195136049413e-06, -0.000586695212405175, -0.0007687236065976322, -0.009263156913220882, -1.1920922133867862e-06, -1.1324817933200393e-05, -0.00033825874561443925, -0.4512590169906616, -0.0033756676129996777, -0.06721975654363632, -0.002030574483796954, -0.04949989914894104, -0.003325291909277439, -0.07940706610679626, -0.00016366096679121256, -8.344646857949556e-07, -1.6689286894688848e-06, -0.0006914132391102612, -0.0012061471352353692, -4.9232225137529895e-05, -0.002354232594370842, -0.00020621081057470292, -0.0004366874636616558, -0.00022516099852509797, -0.0007008241955190897, -0.007021869067102671, -0.7284386157989502, -0.055208709090948105, -0.030743569135665894, -0.02879033237695694, -0.17241647839546204, -1.1920928244535389e-07, -3.3378546504536644e-06, 0.0, -0.003796870354562998, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.0005321278586052358, -1.1920922133867862e-06, -1.311301275563892e-06, -0.0007936188485473394, -0.006147404666990042, -0.15197932720184326, -0.4235643744468689, -0.0019261157140135765, -0.4857773780822754, -0.11180857568979263, -0.01878776215016842, -0.0008908117306418717, -0.5675454139709473, -3.576278118089249e-07, -9.536738616588991e-07, -7.152555099310121e-07, -0.0001045410826918669, -1.8954096958623268e-05, -0.002046397188678384, -1.1920928244535389e-07, -4.172316494077677e-06, -0.0008430502493865788, -0.006301415152847767, -8.344646857949556e-07, -1.9073304429184645e-05, -0.0005248599336482584, -0.0006607971154153347, -1.0772209167480469, -1.9425805807113647, -0.00040737437666393816, -0.0010040724882856011, -0.16199111938476562, -0.009678935632109642, -0.34920528531074524, -0.021179696545004845, -0.004179671406745911, -2.7418097943154862e-06, -1.1920922133867862e-06, -2.264974000354414e-06, -0.003570017870515585, -8.940656698541716e-06, -0.0002273062855238095, -2.3841855067985307e-07, -4.172316494077677e-06, -1.5497195136049413e-06, -1.7881377516459906e-06, -0.011333843693137169, -0.01094021275639534, -0.00014399446081370115, -1.046595573425293, -0.0007925468380562961, -0.20053617656230927, -0.409717857837677, -0.5105993151664734, -0.0001811817055568099, -0.05745778977870941, -7.271740287251305e-06, -7.152555099310121e-07, -4.291525328881107e-06, -0.00048315772437490523, 0.0, 0.0, -1.4185804502631072e-05, -0.011465256102383137, -1.4305104514278355e-06, -0.0028819001745432615, -0.00031394799589179456, -0.0038682410959154367, -0.00012838016846217215, -2.578669548034668, -0.00036840804386883974, -0.003979621455073357, -0.007335040718317032], "finish_reason": "length"}], "metrics": {"energy": 1056.0196894092558, "energy_per_token": 4.125076911754905, "time": 23.808155, "time_per_token": 0.09300060546875}}
{"outputs": [{"text": "source_path = Path(source_directory)\n    target_path = Path(target_directory)\n    extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    if not source_path.exists():\n        raise FileNotFoundError(f\"Source directory '{source_path.resolve()}' does not exist.\")\n\n    # Create target directory if it does not exist\n    if not target_path.exists():\n        target_path.mkdir(parents=True, exist_ok=True)\n\n    # Find files recursively with specific extensions\n    files = glob.glob(f\"{source_path.resolve().as_posix()}/**/*\", recursive=True)\n    files = [file for file in files if any(file.lower().endswith(ext) for ext in extensions)]\n\n    # Move files to target directory, handling naming conflicts\n    num_moved = 0\n    for file in files:\n        source_file = Path(file)\n        destination_file = target_path / source_file.name\n\n", "tokens": ["source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "path", ".", "resolve", "()", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " target", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " files", " recurs", "ively", " with", " specific", " extensions", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "path", ".", "resolve", "()", ".", "as", "_", "pos", "ix", "()", "}/", "**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " files", " if", " any", "(", "file", ".", "lower", "()", ".", "end", "sw", "ith", "(", "ext", ")", " for", " ext", " in", " extensions", ")]", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", ",", " handling", " naming", " conflicts", "\n", "    ", "num", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "source", "_", "file", " =", " Path", "(", "file", ")", "\n", "        ", "destination", "_", "file", " =", " target", "_", "path", " /", " source", "_", "file", ".", "name", "\n", "\n"], "logprobs": [-2.3840789794921875, -0.1300646960735321, -1.1884937286376953, -0.025501955300569534, -0.06457590311765671, -0.004129692446440458, -0.015313668176531792, -4.291525328881107e-06, -2.3603161025675945e-05, -0.0015190026024356484, -0.34469035267829895, -0.08176612854003906, -0.20841124653816223, -0.0008087463211268187, -0.0035709680523723364, -0.0005353448214009404, -0.00021431533969007432, -0.00047350639943033457, -0.00037949037505313754, -3.576278118089249e-07, -2.145764938177308e-06, -0.0021106365602463484, -0.03995881229639053, -1.3079053163528442, -2.2224979400634766, -0.09815352410078049, -1.0297476053237915, -0.0051290360279381275, -0.1253591775894165, -0.005743429530411959, -4.2199197196168825e-05, -0.00027700403006747365, -0.0009559590835124254, -0.0019180249655619264, -0.0026140587870031595, -0.0018314032349735498, -9.417489309271332e-06, -0.0002865380665753037, -0.00022194306075107306, -0.00010871296399272978, -0.001110771088860929, -4.31528314948082e-05, -0.00018606838420964777, -4.6491513785440475e-06, -0.00045849301386624575, -0.00029023250681348145, -0.00012635385792236775, -0.0005477358354255557, -7.033323527139146e-06, -0.002395619172602892, -0.02291985973715782, -0.735062837600708, -0.0002848696312867105, -0.29259464144706726, -0.028145087882876396, -0.04492310807108879, -2.50339189733495e-06, -0.00011598391574807465, -0.0002719986077863723, -0.7233667969703674, -0.023881403729319572, -0.0033989534713327885, -0.0007769426447339356, -0.042578909546136856, -0.0030934596434235573, -5.495397272170521e-05, -4.887569048150908e-06, -0.006304258480668068, -0.3684768080711365, -0.008881115354597569, -0.3506176471710205, -0.03711682930588722, -0.7319342494010925, -0.00014888131408952177, -0.011084762401878834, -2.0861407392658293e-05, -0.8633390665054321, -1.4201030731201172, -1.053962230682373, -0.001637547742575407, -0.0021059971768409014, -0.09565325081348419, -0.0002422039397060871, -0.0007578838267363608, -0.12357674539089203, -0.0014459164813160896, -0.0002843929105438292, -0.0011297041783109307, -0.046159856021404266, -0.00013124081306159496, -2.1670727729797363, -0.5050894021987915, -1.2964305877685547, -0.17384135723114014, -0.023875003680586815, -0.02759231999516487, -1.2254717350006104, -0.00021240839851088822, -0.0029925585258752108, -0.023816337808966637, -0.00012158608296886086, -0.9407342076301575, -0.004371729213744402, -0.0033977655693888664, -9.536738616588991e-07, -0.00025876989820972085, -1.8596476365928538e-05, -0.03192095458507538, -0.0008541273418813944, -0.00017796363681554794, -0.000226472009671852, -0.10971544682979584, -5.8412379075889476e-06, -4.672895011026412e-05, -4.732496745418757e-05, -4.3987260141875595e-05, 0.0, -0.20041628181934357, -0.003888428211212158, -8.165503095369786e-05, -0.001536380616016686, -0.1562199890613556, -2.6940935640595853e-05, -1.0728830375228426e-06, -1.6689286894688848e-06, -2.861018856492592e-06, -0.0028481415938585997, -0.00021836756786797196, -0.0025304697919636965, -0.05467871576547623, -0.002044731518253684, -1.0096397399902344, -1.5694172382354736, -0.5051503777503967, -2.9051926136016846, -3.4450891689630225e-05, -1.385514497756958, -0.9242807626724243, -0.02161015011370182, -0.20404817163944244, -0.000302745756926015, -0.403263121843338, -0.4697960615158081, -0.8739586472511292, -2.5510462364763953e-05, -0.2951219081878662, -0.03398275002837181, -1.9213569164276123, -0.13875550031661987, -0.09531041979789734, -0.02812376245856285, -5.245195097813848e-06, -0.4633430540561676, -0.23830042779445648, -0.030568188056349754, -0.023093674331903458, -2.161674737930298, -1.0431263446807861, -8.344646857949556e-07, -2.9682672902708873e-05, 0.0, -0.1065550446510315, -0.0056595089845359325, -0.005588740110397339, -0.006052854470908642, -0.22383539378643036, -0.041643306612968445, -0.00010692501382436603, -0.0002002515539061278, -0.0002256377338198945, -0.006097405683249235, -0.010853071697056293, -0.20116204023361206, -0.4480857849121094, -0.21661345660686493, -0.0380246601998806, -0.8503732681274414, -0.008604475297033787, -0.0003583981015253812, -0.00018952481332235038, -0.0009018882992677391, -0.007748783566057682, -1.3720178604125977, -0.013333323411643505, -0.019846433773636818, -0.00039760314393788576, -1.0496870279312134, -1.680836794548668e-05, -2.3841574147809297e-05, -0.00010346830822527409, -1.4305104514278355e-06, 0.0, -0.0002903516869992018, -0.019574331119656563, -0.02468177303671837, -0.0009158230968751013, -3.7431014789035544e-05, -2.145764938177308e-06, -0.00018463814922142774, -0.012139014899730682, -0.001870788517408073, -0.02623530477285385, -4.7801782784517854e-05, -1.0566315650939941, -0.3277972340583801, -0.3910229802131653, -0.7114164233207703, -0.18743212521076202, -0.02656051144003868, -1.2584517002105713, -0.38539573550224304, -0.3430134356021881, -0.003957061562687159, -0.08001479506492615, -0.0003829461056739092, -2.673011302947998, -0.0006180283380672336, -0.3650204837322235, -0.013765991665422916, -0.41909298300743103, -0.007817861624062061, -0.0001928620331455022, -0.0033734100870788097, -0.02669643610715866, -0.07143106311559677, -0.06216849386692047, -0.10456696152687073, -0.0010139568476006389, -6.329813186312094e-05, -0.0005231918767094612, -0.0013955625472590327, -1.4154255390167236, -0.06969065219163895, -0.1912069022655487, -0.5222973823547363, -0.004766767844557762, -6.949660019017756e-05, -0.0031846067868173122, -0.003133151913061738, -0.029567107558250427, -0.01740608736872673, -3.238391876220703, -0.062362611293792725, -0.18653015792369843, -0.006919942796230316, -0.3067735731601715, -3.576278118089249e-07, -0.0001081169830285944, -0.10663122683763504, -0.035157252103090286, -3.576278118089249e-07, -0.00022194306075107306, -0.0009341643890365958, -0.007919460535049438, -0.005798779893666506, -0.5740334391593933], "finish_reason": "length"}], "metrics": {"energy": 1085.2631821517946, "energy_per_token": 4.239309305280448, "time": 23.76176, "time_per_token": 0.092819375}}
