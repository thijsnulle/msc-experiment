{"outputs": [{"text": "# Create Path objects from the input strings\n    source_directory_path = Path(source_directory)\n    target_directory_path = Path(target_directory)\n\n    # Check that source directory exists\n    if not source_directory_path.is_dir():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Create the target directory if it does not exist\n    if not target_directory_path.exists():\n        target_directory_path.mkdir(parents=True)\n\n    # Initialize counters\n    number_of_moves = 0\n    number_of_failed_moves = 0\n\n    # Find all files matching the specified extensions\n    for file_path in source_directory_path.rglob('*.txt'):\n        if file_path.is_file():\n            # Get the file name and extension\n            file_name = file_path.name.lower()\n            file_extension = os.path.splitext(file_path)[1].lower()\n\n            # Construct the target file name\n            target_name =", "tokens": ["#", " Create", " Path", " objects", " from", " the", " input", " strings", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " that", " source", " directory", " exists", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " target", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " counters", "\n", "    ", "number", "_", "of", "_", "m", "oves", " =", " ", "0", "\n", "    ", "number", "_", "of", "_", "failed", "_", "m", "oves", " =", " ", "0", "\n", "\n", "    ", "#", " Find", " all", " files", " matching", " the", " specified", " extensions", "\n", "    ", "for", " file", "_", "path", " in", " source", "_", "directory", "_", "path", ".", "rg", "lob", "('", "*", ".", "txt", "')", ":", "\n", "        ", "if", " file", "_", "path", ".", "is", "_", "file", "():", "\n", "            ", "#", " Get", " the", " file", " name", " and", " extension", "\n", "            ", "file", "_", "name", " =", " file", "_", "path", ".", "name", ".", "lower", "()", "\n", "            ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")[", "1", "]", ".", "lower", "()", "\n", "\n", "            ", "#", " Construct", " the", " target", " file", " name", "\n", "            ", "target", "_", "name", " ="], "logprobs": [-1.2457598447799683, -2.48222017288208, -3.7112088203430176, -0.29230597615242004, -1.9491331577301025, -0.9434172511100769, -2.3992719650268555, -1.089296817779541, -0.1761232167482376, -0.0028348281048238277, -0.06168443337082863, -0.04927092790603638, -0.773687481880188, -0.2130529135465622, -0.008802775293588638, -0.06788928806781769, -0.005613990128040314, -0.0013340153964236379, -0.002587781986221671, -1.9430925021879375e-05, -6.198863957251888e-06, -0.002115037990733981, -0.1341046541929245, -0.0071629625745117664, -0.018430644646286964, -5.531158240046352e-05, -0.0009278521756641567, -0.0005409446312114596, -0.0001245659514097497, -0.0005222387262620032, -0.00032574593205936253, -0.0002520958660170436, -0.00040284625720232725, -3.111314072157256e-05, -7.271740287251305e-06, -0.00024005869636312127, -0.0038205028977245092, -0.0799773782491684, -0.000474936212413013, -0.08031901717185974, -0.474799245595932, -2.7896883487701416, -0.9632086753845215, -1.2103517055511475, -0.01458354014903307, -0.11253275722265244, -0.0004782725009135902, -0.01644708774983883, -0.021338293328881264, -0.03293594717979431, -2.7418097943154862e-06, -4.410734163684538e-06, -0.0004903068183921278, -1.9550132492440753e-05, -2.455681169521995e-05, -1.8062059879302979, -4.172316494077677e-06, -0.007369358092546463, -0.0020104688592255116, -0.0034172493033111095, -0.0006028980133123696, -0.0384155735373497, -0.00260740052908659, -2.288792165927589e-05, -1.3828182090946939e-05, -0.05242574214935303, -0.19890354573726654, -0.054998978972435, -0.6683048605918884, -0.022948170080780983, -0.645603358745575, -3.981510963058099e-05, -0.002389316214248538, -2.706014311115723e-05, -0.00010597144137136638, -0.305194228887558, -0.2913675308227539, -0.00013422065239865333, -0.0009469077922403812, -0.16514062881469727, -0.0018635302549228072, -0.000120751719805412, -0.0018364008283242583, -0.01023001130670309, -0.0010400369064882398, -0.07826204597949982, -0.7006871700286865, -1.573670744895935, -0.013006963767111301, -0.013284740969538689, -0.0744134932756424, -0.013323324732482433, -0.52388596534729, -0.00012373158824630082, -0.0420968160033226, -0.04238491132855415, -0.0001685477327555418, -1.1244707107543945, -0.01657114550471306, -0.017224250361323357, -2.264974000354414e-06, -1.0490362910786644e-05, -0.0007721779984422028, -1.6331539882230572e-05, -7.033323527139146e-06, -0.7795208692550659, -0.0013505632523447275, -0.001256034360267222, -0.0004676678800024092, -0.19390389323234558, -7.867782187531702e-06, -5.9960475482512265e-05, -0.00010597144137136638, -1.1324817933200393e-05, -0.00033456450910307467, -0.0007090438157320023, -1.585470999998506e-05, -0.10662265866994858, -0.026813890784978867, -0.0004320403386373073, -0.002117179101333022, -0.221573144197464, -0.03302522376179695, -0.16598445177078247, -0.0031137813348323107, -0.1660328209400177, -1.0494509935379028, -1.0431172847747803, -0.6424683928489685, -0.00027092601521871984, -4.064774513244629, -0.0009866851614788175, -0.5406018495559692, -6.19869097135961e-05, -1.36842679977417, -2.397455930709839, -0.03208143636584282, -0.005737740080803633, -2.0265373677830212e-05, -0.041730549186468124, -0.8560194373130798, -0.5061661601066589, -2.3483953555114567e-05, -0.0066881137900054455, -1.823885577323381e-05, -4.129977226257324, -0.07562515884637833, -0.09716835618019104, -8.332382276421413e-05, -0.0022170981392264366, -0.0011079132091253996, -2.098061486321967e-05, -0.0022427900694310665, -0.15285724401474, -0.00026556302327662706, -0.08295673877000809, -2.672133445739746, -0.42182764410972595, -0.43145063519477844, -2.3386120796203613, -0.16334547102451324, -0.9368001222610474, -0.09716445952653885, -0.9728006720542908, -0.0006292270263656974, -0.9435784220695496, -0.9586445689201355, -0.22692447900772095, -0.1909121721982956, -0.0109499990940094, -0.27312853932380676, -2.7418097943154862e-06, -6.794906312279636e-06, -0.00029940891545265913, -7.152531907195225e-06, -7.390948667307384e-06, -0.11079910397529602, -0.003740933956578374, -1.1353250741958618, -0.057819243520498276, -0.14582741260528564, -0.08823835849761963, -0.05319817364215851, -0.20712223649024963, -0.0321495495736599, -0.03984988108277321, -1.8997193574905396, -0.5435657501220703, -0.000337305391440168, -0.001900891656987369, -0.006175484042614698, -0.5262777805328369, -1.6927575416048057e-05, -0.01185337919741869, -0.03613826632499695, -0.04723532870411873, -0.02309495583176613, -1.1711527109146118, -0.8537558913230896, -0.36596301198005676, -2.0043749809265137, -0.2879817485809326, -0.8942909240722656, -0.21250654757022858, -0.18135026097297668, -0.000456109904916957, -0.6123712062835693, -0.0010258655529469252, -0.01057225838303566, -0.4139251112937927, -0.1551768183708191, -5.8053239627042785e-05, -3.158996332786046e-05, -4.7801782784517854e-05, -0.21216489374637604, -2.0296976566314697, -1.8601255416870117, -0.0004975749761797488, -0.11478251963853836, -0.030322348698973656, -0.6915002465248108, -0.0001685477327555418, -0.24219368398189545, -0.001959905494004488, -2.021355628967285, -1.2874520507466514e-05, -0.004741496406495571, -0.0005565524916164577, -0.0013699679402634501, -1.9550132492440753e-05, -1.4305104514278355e-06, -8.34430247778073e-05, -0.0013919912744313478, -5.245195097813848e-06, -1.2188575267791748, -1.71426522731781, -0.0007058274932205677, -0.04179937765002251, -0.6723387241363525, -0.0801016166806221, -0.09446074813604355, -0.01833326928317547, -0.16750481724739075, -0.001215077005326748, -0.05431194603443146, -3.0495643615722656, -0.09311705827713013, -0.5205508470535278, -0.24004821479320526, -0.8272830247879028, -0.9100204706192017, -0.0005000770906917751, -0.3458365797996521, -0.0004239375703036785, -2.417030096054077, -0.015479655005037785], "finish_reason": "length"}], "metrics": {"energy": 473.587335969925, "energy_per_token": 1.8499505311325195, "time": 15.439918, "time_per_token": 0.0603121796875}}
{"outputs": [{"text": "# Check that source_directory exists and is a valid directory\n    source_path = Path(source_directory)\n    if not source_path.exists():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Check that target_directory exists and create it if it doesn't\n    target_path = Path(target_directory)\n    if not target_path.exists():\n        target_path.mkdir(parents=True, exist_ok=True)\n\n    # Initialize variable for counting files moved successfully\n    success_count = 0\n\n    # Iterate through files in source directory\n    for file_path in source_path.rglob('*'):\n        if file_path.is_file() and file_path.suffix in ('.txt', '.docx', '.xlsx', '.csv'):\n            # Construct target file path from original path\n            target_file_path = Path(target_path, file_path.name)\n\n            # Check if file already exists and rename if necessary\n            if target_file_path", "tokens": ["#", " Check", " that", " source", "_", "directory", " exists", " and", " is", " a", " valid", " directory", "\n", "    ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " target", "_", "directory", " exists", " and", " create", " it", " if", " it", " doesn", "'", "t", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " variable", " for", " counting", " files", " moved", " successfully", "\n", "    ", "success", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " source", " directory", "\n", "    ", "for", " file", "_", "path", " in", " source", "_", "path", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", "_", "path", ".", "is", "_", "file", "()", " and", " file", "_", "path", ".", "suff", "ix", " in", " ('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "')", ":", "\n", "            ", "#", " Construct", " target", " file", " path", " from", " original", " path", "\n", "            ", "target", "_", "file", "_", "path", " =", " Path", "(", "target", "_", "path", ",", " file", "_", "path", ".", "name", ")", "\n", "\n", "            ", "#", " Check", " if", " file", " already", " exists", " and", " rename", " if", " necessary", "\n", "            ", "if", " target", "_", "file", "_", "path"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -2.835897445678711, -0.5607606768608093, -0.5551557540893555, -0.006527175661176443, -0.050161559134721756, -2.4996256828308105, -0.13845080137252808, -0.15421123802661896, -1.4861946105957031, -0.8292003870010376, -0.414699524641037, -0.0014152044896036386, -1.745438814163208, -0.01195621769875288, -2.8204538822174072, -0.024233905598521233, -0.04268492013216019, -0.001077428925782442, -0.007970432750880718, -3.135155202471651e-05, -4.768360213347478e-06, -0.0016500442288815975, -0.21051059663295746, -0.015165149234235287, -0.027148770168423653, -0.03283778205513954, -0.0387604683637619, -3.349725011503324e-05, -0.00029583368450403214, -5.400034933700226e-05, -0.36649107933044434, -0.24304068088531494, -0.0026838495396077633, -0.0006152882124297321, -0.013662398792803288, -0.001965021248906851, -3.0040289857424796e-05, -1.883488948806189e-05, -0.06293366104364395, -0.17063845694065094, -0.0908467024564743, -0.30056139826774597, -0.07347199320793152, -0.8370717167854309, -5.9602869441732764e-05, -0.0012169820256531239, -4.053033626405522e-05, -0.10021801292896271, -0.000731558189727366, -0.4311242699623108, -0.00014649749209638685, -0.0008155357209034264, -0.12188811600208282, -0.0018298563081771135, -0.00013731967192143202, -0.001989648910239339, -1.601590633392334, -0.00082601752365008, -0.28053978085517883, -1.3097623586654663, -0.30959510803222656, -0.1055755466222763, -0.029133928939700127, -0.0019801310263574123, -0.13682548701763153, -0.17712070047855377, -1.6541523933410645, -0.03446520119905472, -0.007949618622660637, -0.1545773595571518, -1.0335233211517334, -0.0003586364327929914, -1.3947389561508317e-05, -1.149794101715088, -0.0006081400788389146, -0.197132408618927, -0.0004552758182398975, -0.013755644671618938, -0.0012157914461567998, -0.001650758320465684, -0.00026043839170597494, -0.001484959851950407, -1.3351351299206726e-05, -1.2516897186287679e-05, -0.00018142008048016578, -0.06695199012756348, -0.006764133460819721, -0.5466641187667847, -0.031660087406635284, -0.01676834002137184, -1.7881233361549675e-05, -5.435795901576057e-05, -1.3828182090946939e-05, -0.030305810272693634, -0.0018982740584760904, -0.001986317802220583, -0.0007979070069268346, -0.2029287964105606, -4.017272294731811e-05, -0.0005952732171863317, -0.0009739422821439803, -0.002983050188049674, -2.169585604860913e-05, -0.03601270541548729, -0.0327773317694664, -0.0008189899963326752, -0.001841636374592781, -0.8885546326637268, -0.0023765910882502794, 0.0, -5.4238757002167404e-05, -0.0001896439935080707, -0.007859851233661175, -0.0020987405441701412, -0.02555854618549347, -0.11991889029741287, -0.0021821276750415564, -0.21367581188678741, -1.9735260009765625, -3.503965377807617, -1.770988941192627, -0.495136559009552, -1.5350558757781982, -0.26933252811431885, -1.0252952575683594, -0.01646256633102894, -0.0003471963864285499, -3.1138715744018555, -0.22235454618930817, -0.0962713286280632, -0.0008369756978936493, -0.00047708096099086106, -7.867782187531702e-06, -0.0008091036579571664, -0.02066708728671074, -0.0002233732520835474, -0.06944223493337631, -1.0413938760757446, -0.002643188228830695, -0.905726969242096, -0.9189536571502686, -0.1831117421388626, -0.4466637670993805, -0.2286236733198166, -0.9401223063468933, -0.00041214076918549836, -0.028405483812093735, -0.8052660226821899, -0.48356857895851135, -0.11888773739337921, -0.0026698203291743994, -0.25738734006881714, -2.634490556374658e-05, -0.00013016807497479022, -7.629365427419543e-06, -0.14245779812335968, -0.003887359518557787, -0.8474545478820801, -0.11729516834020615, -0.6527933478355408, -0.00034528967808000743, -0.04754991456866264, -0.08688485622406006, -1.148665428161621, -0.13240908086299896, -7.450303382938728e-05, -7.4741430580616e-05, -0.0004993622424080968, -0.09979615360498428, -2.50339189733495e-06, -0.023079579696059227, -0.8151201009750366, -0.012632941827178001, -0.6177293658256531, -0.0015459026908501983, -0.0010269373888149858, -0.0007340597221627831, -0.1648067682981491, -2.1815061700181104e-05, -0.38663917779922485, -1.6416409015655518, -0.005943245254456997, -0.002242433140054345, -0.00023862851958256215, -0.00012790338951162994, -0.005755282007157803, -0.0021038558334112167, -0.0021635713055729866, -0.00017534149810671806, -8.940297266235575e-05, -2.7179348762729205e-05, -0.00275957933627069, -0.00045885046711191535, -0.0010898133041337132, -6.985420623095706e-05, -0.0001867835089797154, -0.00021884430316276848, -4.124556289752945e-05, -0.0014485353603959084, -0.00022396916756406426, -0.0012832987122237682, -0.00782282929867506, -0.003939606714993715, -0.012596803717315197, -0.041374895721673965, -0.42198681831359863, -3.366847515106201, -1.4032963514328003, -0.2840048372745514, -0.2518855929374695, -2.715332508087158, -1.2099347114562988, -1.8650203943252563, -0.8007864356040955, -0.0009243983076885343, -0.4167816638946533, -0.004379206337034702, -0.4954567849636078, -0.22800053656101227, -0.08791743218898773, -0.0021121830213814974, -1.0197405815124512, -0.017389802262187004, -0.605290949344635, -6.186770770000294e-05, -0.7014347314834595, -0.7441340088844299, -0.14819663763046265, -9.321732068201527e-05, -0.0020881532691419125, -0.006151314824819565, -0.1700364351272583, -0.024091826751828194, -0.039437294006347656, -0.16016782820224762, -0.0012167439563199878, -0.05020860955119133, -0.6584097146987915, -0.09661274403333664, -1.534653663635254, -0.42852267622947693, -0.0022074636071920395, -2.9845285415649414, -0.5305472612380981, -0.15462444722652435, -0.6916804909706116, -0.014258998446166515, -0.0007980260998010635, -0.26087483763694763, -0.04191472753882408, -6.9141146923357155e-06, -0.008557554334402084, -7.033323527139146e-06, -1.3828182090946939e-05], "finish_reason": "length"}], "metrics": {"energy": 358.8617329521179, "energy_per_token": 1.4018036443442106, "time": 12.497236, "time_per_token": 0.048817328125}}
{"outputs": [{"text": "# Get a list of source files\n    source_files = glob.glob(os.path.join(source_directory, '**/*.txt', '**/*.docx', '**/*.xlsx', '**/*.csv'), recursive=True)\n\n    # Create target directory if it doesn't exist\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # Move files to target directory\n    num_moved = 0\n    for source_file in source_files:\n        basename, extension = os.path.splitext(os.path.basename(source_file))\n        destination = os.path.join(target_directory, f'{basename}-{num_moved + 1}{extension}')\n        if os.path.exists(destination):\n            # Rename if a file with same name already exists\n            destination = os.path.join(target_directory, f'{basename}-{num_moved + 2}{extension}')\n        num_moved += 1\n        shutil.move(source_", "tokens": ["#", " Get", " a", " list", " of", " source", " files", "\n", "    ", "source", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "/*", ".", "txt", "'", ",", " '", "**", "/*", ".", "doc", "x", "'", ",", " '", "**", "/*", ".", "x", "ls", "x", "'", ",", " '", "**", "/*", ".", "csv", "')", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", "\n", "    ", "num", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "bas", "ename", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "source", "_", "file", "))", "\n", "        ", "destination", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "'{", "bas", "ename", "}-", "{", "num", "_", "m", "oved", " +", " ", "1", "}{", "extension", "}", "')", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "destination", "):", "\n", "            ", "#", " R", "ename", " if", " a", " file", " with", " same", " name", " already", " exists", "\n", "            ", "destination", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "'{", "bas", "ename", "}-", "{", "num", "_", "m", "oved", " +", " ", "2", "}{", "extension", "}", "')", "\n", "        ", "num", "_", "m", "oved", " +=", " ", "1", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_"], "logprobs": [-1.3195747137069702, -3.918004035949707, -3.0642659664154053, -0.07333330810070038, -0.003807914676144719, -3.081521511077881, -0.2186555117368698, -1.0812145471572876, -0.003944950178265572, -0.21926286816596985, -0.003304261714220047, -0.086311474442482, -0.054442234337329865, -0.40528604388237, -0.0004450284468475729, -0.022317098453640938, -0.011898615397512913, -0.3735578954219818, -1.3947389561508317e-05, -7.73638384998776e-05, -0.003102135146036744, -0.0036981781013309956, -0.005340950563549995, -0.013623122125864029, -4.160317621426657e-05, -2.038458114839159e-05, -0.0009137984015978873, -0.3868860900402069, -0.44187799096107483, -1.0820461511611938, -0.07271817326545715, -0.09980575740337372, -1.503246784210205, -0.09445770829916, -0.04103799909353256, -0.15484082698822021, -0.005256284959614277, -0.001189596951007843, -0.010037069208920002, -0.00036614391137845814, -0.0038567224983125925, -0.0005103239673189819, -0.1988840103149414, -0.0007128558354452252, -0.0003177614707965404, -0.0005032941699028015, -0.0031141377985477448, -0.00017641419253777713, -0.00038890427094884217, -0.0014484162675216794, -0.0003626880934461951, -0.03382441774010658, -0.0010097887134179473, -0.0004441943601705134, -0.000505677133332938, -0.0013136576162651181, -0.2055337280035019, -0.0011264891363680363, -0.21549749374389648, -0.009938164614140987, -0.0028272203635424376, -0.0012266262201592326, -0.006124182604253292, -0.22758285701274872, -0.0007454953738488257, -0.18935272097587585, -1.2952063083648682, -1.3608500957489014, -0.11745639890432358, -0.08022253215312958, -0.07038653641939163, -0.6984049677848816, -0.00025674383505247533, -1.4185804502631072e-05, -0.031775690615177155, -0.049435343593358994, -0.0004109491710551083, -0.9980637431144714, -0.002783355303108692, -0.0015656605828553438, -1.5139465176616795e-05, -3.0517112463712692e-05, -0.0002461368858348578, -4.160317621426657e-05, -0.006796576082706451, -2.002696055569686e-05, -2.682172998902388e-05, -0.048574384301900864, -0.00017271934484597296, -0.0019026764202862978, -0.0003164505760651082, -0.0025128712877631187, 0.0, -3.58813522325363e-05, -0.0003946240758523345, -0.00040928093949332833, -0.00024375328212045133, -0.008829126134514809, -0.03553111478686333, -0.00023541064001619816, -0.1533387005329132, -1.6028932332992554, -0.32205888628959656, -0.22400540113449097, -0.1907903254032135, -0.0497405044734478, -0.2598598897457123, -0.001698243198916316, -2.2619638442993164, -0.0025056179147213697, -0.40380004048347473, -0.06008132919669151, -0.050935059785842896, -0.006288266275078058, -7.509902934543788e-05, -0.0047181230038404465, -0.07345260679721832, -0.01943112164735794, -0.607485830783844, -0.03103102371096611, -0.04300687834620476, -0.008555781096220016, -0.005306207574903965, -7.390948667307384e-06, -1.680836794548668e-05, -0.00010382589971413836, -0.0011317284079268575, -0.012855512090027332, -3.519162654876709, -0.00014733182615600526, -1.2758069038391113, -1.024510145187378, -0.0007998128421604633, -0.01824723742902279, -1.311301275563892e-06, -3.93382906622719e-05, -0.002463046694174409, -0.0010531361913308501, -3.2782016205601394e-05, -2.3841855067985307e-07, -1.2278481335670222e-05, -0.9489583373069763, -0.000278195773717016, -1.2040065485052764e-05, -0.00020585325546562672, -0.0018688846612349153, -1.1920928244535389e-07, -8.821448318485636e-06, -0.0005343916127458215, -2.6940935640595853e-05, -4.2676016164477915e-05, -0.0016095790779218078, -0.03019605204463005, -0.07251252979040146, -2.780376434326172, -0.1837385892868042, -0.09051169455051422, -2.50339189733495e-06, -3.6000557884108275e-05, -0.00010346830822527409, -0.0011611393420025706, -0.0002212279650848359, -0.02215574122965336, -8.34461570775602e-06, -3.421248038648628e-05, -0.0002113357331836596, -1.0693199634552002, -0.8220764994621277, -0.004354518838226795, -5.364403477869928e-06, -0.09876195341348648, -0.07913120090961456, -0.017704898491501808, -5.006664650863968e-05, -0.0001821352052502334, -7.009260298218578e-05, -1.5970957279205322, -0.003078485606238246, -0.000418575422372669, -0.3076346814632416, -0.002424160484224558, -0.053941767662763596, -0.0003860443539451808, -0.003499576123431325, -0.1133347600698471, -0.4555387496948242, -0.38815632462501526, -5.602820692729438e-06, -0.0005621521850116551, -1.2516897186287679e-05, -0.13023456931114197, -4.8993817472364753e-05, -0.03743438050150871, -0.009628758765757084, -0.016356436535716057, -0.0007390628452412784, -2.117485761642456, -0.873730480670929, -0.00010442188795423135, -1.5315135717391968, -1.74100661277771, -0.04769017547369003, -0.12898118793964386, -2.6718132495880127, -0.12931634485721588, -0.3248893618583679, -0.005245374981313944, -0.25814881920814514, -0.00041976699139922857, -0.7810001969337463, -0.23369143903255463, -0.2808320224285126, -2.002696055569686e-05, -5.531158240046352e-05, -0.00020346954988781363, -0.06720660626888275, -0.0005231918767094612, -0.19011949002742767, -0.00014757021563127637, -0.00010561384988250211, -5.090107151772827e-05, -0.05296812206506729, -0.06860045343637466, -0.015912920236587524, -8.40390202938579e-05, -0.046411506831645966, -0.15475454926490784, -0.07810042798519135, -0.0002553137019276619, -0.00011991735664196312, -7.521823135903105e-05, -0.18126444518566132, -0.005935424007475376, -0.599819004535675, -0.007340839132666588, -0.00021252757869660854, -0.0023712394759058952, -3.242440288886428e-05, -0.0008954567601904273, -0.4094827175140381, -2.785897731781006, -3.790783375734463e-05, -0.0002563863235991448, -2.4318398573086597e-05, -0.006830319762229919, -0.06840921193361282, -0.00013839241000823677, -0.016798702999949455, -0.015656528994441032, -0.06486150622367859, -2.4199192921514623e-05, -1.311301275563892e-06, -0.006775144953280687, -3.0040289857424796e-05, -0.002103260951116681, -0.0011464934796094894], "finish_reason": "length"}], "metrics": {"energy": 364.61702683448794, "energy_per_token": 1.4242852610722185, "time": 12.51525, "time_per_token": 0.0488876953125}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"Source directory '{source_directory}' not found.\")\n\n    source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n\n    if not target_directory.exists():\n        target_directory.mkdir(parents=True)\n\n    def is_valid_file(path: Path):\n        return (path.is_file() and\n                path.suffix in ['.txt', '.docx', '.xlsx', '.csv'])\n\n    def rename(path: Path, extension_index: int) -> Path:\n        original_name, extension = path.stem, path.suffix\n        new_name = f'{original_name}-{extension_index}{extension}'\n        new_path = Path(os.path.join(target_directory, new_name))\n        return new_path if is_valid_file(new_path) else new_path.with_name(new_name)\n\n    def move_files() -> int:\n", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "\n", "    ", "def", " is", "_", "valid", "_", "file", "(", "path", ":", " Path", "):", "\n", "        ", "return", " (", "path", ".", "is", "_", "file", "()", " and", "\n", "                ", "path", ".", "suff", "ix", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'])", "\n", "\n", "    ", "def", " rename", "(", "path", ":", " Path", ",", " extension", "_", "index", ":", " int", ")", " ->", " Path", ":", "\n", "        ", "original", "_", "name", ",", " extension", " =", " path", ".", "stem", ",", " path", ".", "suff", "ix", "\n", "        ", "new", "_", "name", " =", " f", "'{", "original", "_", "name", "}-", "{", "extension", "_", "index", "}{", "extension", "}'", "\n", "        ", "new", "_", "path", " =", " Path", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " new", "_", "name", "))", "\n", "        ", "return", " new", "_", "path", " if", " is", "_", "valid", "_", "file", "(", "new", "_", "path", ")", " else", " new", "_", "path", ".", "with", "_", "name", "(", "new", "_", "name", ")", "\n", "\n", "    ", "def", " move", "_", "files", "()", " ->", " int", ":", "\n"], "logprobs": [-2.143270969390869, -0.15205387771129608, -0.17443709075450897, -3.313963316031732e-05, -0.0004568248405121267, -0.009653080254793167, -0.9422024488449097, -0.01100989617407322, -0.0002547178009990603, -0.01729584112763405, -0.00015555603022221476, -2.8490614567999728e-05, -0.006059963721781969, -0.021659962832927704, -0.0010790961096063256, -0.028944946825504303, -0.003103561233729124, -5.4834770708112046e-05, -3.313963316031732e-05, -0.1411060094833374, -0.25690406560897827, -0.13285738229751587, -1.3340508937835693, -0.12322870641946793, -0.9843795299530029, -0.0001454247540095821, -0.0010411086259409785, -2.7656173188006505e-05, -0.00010954733443213627, -0.00120698066893965, -0.7444875836372375, -0.002728075487539172, -0.24441252648830414, -0.004041005857288837, -0.00018475732940714806, -0.004226561635732651, -0.15154239535331726, -0.0004829194222111255, -1.4469044208526611, -0.028644727542996407, -0.16179461777210236, -0.06143760681152344, -0.14831864833831787, -0.0007333449902944267, -0.005944785661995411, -1.764281842042692e-05, -3.6954811548639555e-06, -0.00039939055568538606, -1.1066780090332031, -0.1385926753282547, -0.2383737862110138, -0.0009098681039176881, -0.0017447738209739327, -0.00518691074103117, -0.0013180625392124057, -0.00021169328829273582, -0.0009976415894925594, -1.8954096958623268e-05, -5.602820692729438e-06, -0.00041762212640605867, -0.028404325246810913, -0.47562721371650696, -0.0001932195882545784, -0.8486706018447876, -0.027887986972928047, -0.19663670659065247, -7.152555099310121e-07, -7.510157047363464e-06, -7.939023635117337e-05, -0.1766626387834549, -0.0012185298837721348, -0.01358784269541502, -0.00103265349753201, -0.2649889886379242, -1.0013530300057027e-05, -6.603976362384856e-05, -0.0006343498243950307, -0.0009991897968575358, -2.777537883957848e-05, -0.10254263877868652, -0.031240524724125862, -0.0005346299149096012, -0.001690983772277832, -0.38512131571769714, -0.01920977607369423, -0.06435728073120117, -0.0008057684754021466, -3.5263772010803223, -4.382534503936768, -0.0044461446814239025, -0.6530610918998718, -0.08545269072055817, -0.3896937370300293, -0.11961431801319122, -1.0578086376190186, -0.46349236369132996, -0.16011126339435577, -0.9634492993354797, -0.0052835592068731785, -0.0028047531377524137, -0.6859614849090576, -2.248283863067627, -1.0537211894989014, -0.0015398323303088546, -0.6849964261054993, -0.00015007323236204684, -0.005298974458128214, -0.00585756404325366, -0.47875556349754333, -0.6693912148475647, -0.030074482783675194, -0.31860578060150146, -0.0009178477921523154, -0.24968932569026947, -3.099393507000059e-05, -0.6755709052085876, -1.2350478172302246, -0.003789744805544615, -0.004469168372452259, -0.0005359405186027288, -9.154854342341423e-05, -0.008186711929738522, -0.0016217187512665987, -0.003984370734542608, -0.00018142008048016578, -7.343022298300639e-05, -2.0146166207268834e-05, -0.0014449642039835453, -0.0003271759778726846, -0.002033310942351818, -0.00012146688823122531, -0.0004215544031467289, -0.00016616393986623734, -2.5629668016335927e-05, -0.0022479044273495674, -0.00029988560709170997, -0.002989706117659807, -0.7261508107185364, -0.006694271694868803, -0.008469495922327042, -0.0005551227368414402, -0.682104766368866, -1.6781214475631714, -2.3182621002197266, -0.6513797640800476, -0.060908328741788864, -0.009339452721178532, -0.3238324522972107, -2.1614232063293457, -2.9489223957061768, -3.4064393043518066, -0.13348554074764252, -0.022606752812862396, -1.8544585704803467, -0.0001225396408699453, -0.3317149579524994, -0.003965729381889105, -0.005695780739188194, -0.004402587655931711, -1.5902678966522217, -0.015356282703578472, -0.13230182230472565, -0.8902497291564941, -0.794128954410553, -0.006553704384714365, -1.4372220039367676, -0.0010528980055823922, -0.3592979311943054, -1.1269530057907104, -0.005033796187490225, -6.389413465512916e-05, -0.00042274597217328846, -0.00021217002358753234, -0.03656589612364769, -0.03586193546652794, -0.8734729886054993, -0.0006459057331085205, -0.14453762769699097, -0.013635117560625076, -0.05120963603258133, -1.351516842842102, -0.0028267446905374527, -2.9205850296420977e-05, -6.198863957251888e-06, -0.031083837151527405, -0.007820227183401585, -0.05450228974223137, -0.001341634662821889, -0.003338717622682452, -0.19547253847122192, -0.0021261009387671947, -0.0015555436257272959, -0.005000821780413389, -0.015349708497524261, -1.3114814758300781, -0.000813034363090992, -0.024123013019561768, -0.0019182630348950624, -1.4753437042236328, -0.04210573062300682, -2.238668441772461, -2.7179348762729205e-05, -0.004937479272484779, -0.0004345426568761468, -0.010200039483606815, -0.0034372080117464066, -0.3284222185611725, -0.0005603650351986289, -0.002735684160143137, -0.029109960421919823, -0.018526606261730194, -1.597391747054644e-05, -5.1020273531321436e-05, -0.0016994333127513528, -0.0035268981009721756, -0.060386285185813904, -0.4515250623226166, -0.03139083459973335, -5.3165931603871286e-05, -0.0006985607906244695, -2.390350341796875, -2.753145694732666, -0.002136806957423687, -0.020421136170625687, -0.0010031197452917695, -0.007168998476117849, -0.0007453762227669358, -0.052605364471673965, -5.364403477869928e-06, -5.602679812000133e-05, -0.0009008163469843566, -0.008030508644878864, -1.6517651081085205, -0.000649956171400845, -0.01226820144802332, -0.06469010561704636, -0.26488634943962097, -5.6503606174374e-05, -0.31404924392700195, -0.011538909748196602, -1.501692295074463, -0.0001230164198204875, -0.02617247961461544, -0.039433740079402924, -0.020849933847784996, -0.004528267774730921, -0.0003178806509822607, -0.9959219694137573, -0.5884398221969604, -0.27401065826416016, -1.452798843383789, -2.293030261993408, -0.00040260792593471706, -0.14401939511299133, -0.00013791563105769455, -0.0020453264005482197], "finish_reason": "length"}], "metrics": {"energy": 356.796529253006, "energy_per_token": 1.3937364423945546, "time": 12.523361, "time_per_token": 0.04891937890625}}
{"outputs": [{"text": "def find_files(src: Path, extensions: tuple) -> list:\n        return [x for x in src.glob(f\"*.{'|'.join(extensions)}\") if x.is_file()]\n\n    source_directory_path = Path(source_directory)\n    if not source_directory_path.exists():\n        raise FileNotFoundError(f\"{source_directory_path.name} does not exist\")\n\n    target_directory_path = Path(target_directory)\n    if not target_directory_path.exists():\n        target_directory_path.mkdir()\n\n    # get all files in the source directory\n    file_paths = find_files(source_directory_path, extensions=('.txt', '.docx', '.xlsx', '.csv'))\n\n    # move all files to target directory, handling naming conflicts by renaming duplicate files\n    counter = 0\n    for file_path in file_paths:\n        # get the filename and extension\n        filename = file_path.stem\n        extension = file_path.suffix\n\n        #", "tokens": ["def", " find", "_", "files", "(", "src", ":", " Path", ",", " extensions", ":", " tuple", ")", " ->", " list", ":", "\n", "        ", "return", " [", "x", " for", " x", " in", " src", ".", "glob", "(", "f", "\"", "*", ".", "{'", "|", "'", ".", "join", "(", "extensions", ")}", "\"", ")", " if", " x", ".", "is", "_", "file", "()", "]", "\n", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "_", "path", ".", "name", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "()", "\n", "\n", "    ", "#", " get", " all", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "paths", " =", " find", "_", "files", "(", "source", "_", "directory", "_", "path", ",", " extensions", "=", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", "\n", "\n", "    ", "#", " move", " all", " files", " to", " target", " directory", ",", " handling", " naming", " conflicts", " by", " ren", "aming", " duplicate", " files", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "#", " get", " the", " filename", " and", " extension", "\n", "        ", "filename", " =", " file", "_", "path", ".", "stem", "\n", "        ", "extension", " =", " file", "_", "path", ".", "suff", "ix", "\n", "\n", "        ", "#"], "logprobs": [-3.653343677520752, -3.2762928009033203, -0.015699362382292747, -1.0636049509048462, -0.3459322154521942, -3.3658061027526855, -1.639632225036621, -1.2317698001861572, -0.3139728009700775, -1.3525910377502441, -0.11312825232744217, -2.0949859619140625, -1.1724601984024048, -0.00047958316281437874, -0.17473141849040985, -0.3915574252605438, -0.009665240533649921, -0.009022301062941551, -1.781416416168213, -0.2684624195098877, -2.7531795501708984, -0.20628994703292847, -0.0058794887736439705, -0.0011699505848810077, -0.3223985731601715, -0.0019397982396185398, -1.7513794898986816, -1.1705119609832764, -1.9009881019592285, -0.7825053930282593, -1.2724014520645142, -0.016973115503787994, -0.17227841913700104, -0.6912436485290527, -0.000860201776959002, -7.998623186722398e-05, -0.0002450642641633749, -0.020742516964673996, -0.03389528766274452, -0.013222274370491505, -0.002181770745664835, -0.0813402533531189, -0.09655202180147171, -0.16038861870765686, -0.010626398958265781, -0.018007483333349228, -1.3589766240329482e-05, -0.0009240409708581865, -0.001806176733225584, -0.015651481226086617, -0.011972944252192974, -0.08968659490346909, -0.0007933806627988815, -2.6093215942382812, -0.1614338755607605, -0.7141132950782776, -2.2606446743011475, -0.1788770854473114, -0.08050095289945602, -0.026912301778793335, -0.0042341588996350765, -0.008042925037443638, -5.817244164063595e-05, -5.125986263010418e-06, -0.002371477195993066, -0.17787975072860718, -0.1198401153087616, -0.6445039510726929, -0.14471815526485443, -0.013367082923650742, -2.0146166207268834e-05, -1.3947389561508317e-05, -0.002444971352815628, -1.0967194612021558e-05, -0.0001255195093108341, -0.23224960267543793, -0.007376931607723236, -0.011442274786531925, -0.0013980624498799443, -0.02480330318212509, -0.004422408062964678, -9.333651541965082e-05, -4.7205765440594405e-05, -0.11026692390441895, -0.22540578246116638, -0.19266986846923828, -1.5856187343597412, -0.011892607435584068, -0.0002449450839776546, -0.00018523407925385982, -1.2734171152114868, -0.0002499506517779082, -2.060962677001953, -1.7616604566574097, -0.06279093027114868, -0.5409110188484192, -0.0017550080083310604, -0.017038512974977493, -0.98842453956604, -0.00040463366894982755, -0.006244434043765068, -0.18878337740898132, -0.00042965717148035765, -0.8589648008346558, -0.0022708598989993334, -0.01943380944430828, -0.009448099881410599, -0.0038551785983145237, -0.009698297828435898, -0.0028449322562664747, -0.0007688426994718611, -0.0025158440694212914, -2.3841574147809297e-05, -9.059865078597795e-06, -0.0012677022023126483, -0.057446084916591644, -0.043566714972257614, -0.43813636898994446, -0.05481764301657677, -0.018296048045158386, -4.875540980719961e-05, -1.2278481335670222e-05, -0.0015198357868939638, -1.2278481335670222e-05, -5.054346183896996e-05, -0.10528406500816345, -0.002222212729975581, -0.006885136477649212, -0.0013308010529726744, -0.16040344536304474, -5.900685573578812e-05, -0.00017677174764685333, -0.0009425011812709272, -0.00011145447206217796, -0.0036292895674705505, -0.0022163845133036375, -3.3378044463461265e-05, -1.280808687210083, -0.0086082573980093, -0.13364742696285248, -0.0004440752090886235, -2.9654393196105957, -2.954021692276001, -0.9349138140678406, -0.6527266502380371, -1.4605712890625, -1.210984706878662, -0.1174764335155487, -0.14348085224628448, -0.5625411868095398, -0.0013678251998499036, -2.743729829788208, -0.019155630841851234, -1.585484504699707, -0.10307873040437698, -0.11963970214128494, -2.8132995794294402e-05, -7.283422019099817e-05, -0.0005654881824739277, -0.01849360577762127, -3.862306402879767e-05, -9.810443589231e-05, -0.00441908510401845, -1.7881377516459906e-06, -0.00504565704613924, -2.595165491104126, -1.8009421825408936, -0.07099810242652893, -0.6765386462211609, -0.004390838090330362, -0.0009762050467543304, -0.0002307625545654446, -0.03904528543353081, -0.0021005249582231045, -0.006273458246141672, -0.0002874914789572358, -0.0006895071710459888, -3.6000557884108275e-05, -0.008679758757352829, -0.0005902693956159055, -0.003302954602986574, -0.00020311199477873743, -0.0002985746832564473, -0.0007871866691857576, -6.770858453819528e-05, -0.005842868238687515, -0.0008245882345363498, -0.0008188708452507854, -0.013550915755331516, -0.0028166405390948057, -0.2103109359741211, -0.000289159914245829, -0.6530260443687439, -1.411476969718933, -1.807941198348999, -0.15587323904037476, -0.24086058139801025, -1.5953781604766846, -0.0685492530465126, -2.4023256301879883, -0.99154132604599, -0.07777965068817139, -0.020243002101778984, -1.120377779006958, -0.11135297268629074, -0.00021634146105498075, -3.491560935974121, -0.06210183724761009, -0.04998649284243584, -0.002761838026344776, -3.0141685009002686, -0.05079944431781769, -0.010115666314959526, -0.20207031071186066, -0.016383996233344078, -0.026830950751900673, -0.08331819623708725, -0.3706403076648712, -0.18777859210968018, -0.014561688527464867, -0.0015729209408164024, -0.012949422001838684, -0.00012611546844709665, -1.2040065485052764e-05, -0.0006612736615352333, -0.0013735393295064569, -0.014230910688638687, -2.3543100357055664, -0.7045006155967712, -0.6633191108703613, -2.6405293941497803, -1.286017894744873, -0.2009609043598175, -0.22685350477695465, -0.0004957877099514008, -0.6912500858306885, -1.0239808559417725, -0.22243835031986237, -6.878139538457617e-05, -8.964136941358447e-05, -0.00013219437096267939, -1.2366424798965454, -0.09499706327915192, -0.004849458113312721, -0.08060785382986069, -0.0011375630274415016, -0.019012944772839546, -5.5549986427649856e-05, -3.611976353568025e-05, -3.111314072157256e-05, -0.00010096516780322418, -0.0002821285743266344, -0.1954754739999771, -0.5070559978485107, -0.0005858612130396068, -0.06934336572885513], "finish_reason": "length"}], "metrics": {"energy": 356.220558139801, "energy_per_token": 1.3914865552335978, "time": 12.512825, "time_per_token": 0.04887822265625}}
{"outputs": [{"text": "# Create a Path object for source_directory\n    source_directory_path = Path(source_directory)\n    # Check if the source_directory exists\n    if source_directory_path.exists():\n        # Create a Path object for the target_directory\n        target_directory_path = Path(target_directory)\n\n        if not target_directory_path.exists():\n            # If the target_directory does not exist, create it\n            target_directory_path.mkdir()\n\n        # Create a list to store filenames that have been processed\n        processed_filenames = []\n\n        # Iterate over all the files in source_directory\n        for filename in source_directory_path.iterdir():\n            # Get the file extension\n            extension = filename.suffix.lower()\n            # Skip if extension is not a supported file type\n            if extension not in ['.txt', '.docx', '.xlsx', '.csv']:\n                continue\n\n            # Get the filename without extension\n            base_name = filename.stem.lower()\n            # Get a list of files with the same base", "tokens": ["#", " Create", " a", " Path", " object", " for", " source", "_", "directory", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "#", " Check", " if", " the", " source", "_", "directory", " exists", "\n", "    ", "if", " source", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "#", " Create", " a", " Path", " object", " for", " the", " target", "_", "directory", "\n", "        ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "        ", "if", " not", " target", "_", "directory", "_", "path", ".", "exists", "():", "\n", "            ", "#", " If", " the", " target", "_", "directory", " does", " not", " exist", ",", " create", " it", "\n", "            ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "()", "\n", "\n", "        ", "#", " Create", " a", " list", " to", " store", " fil", "en", "ames", " that", " have", " been", " processed", "\n", "        ", "processed", "_", "fil", "en", "ames", " =", " []", "\n", "\n", "        ", "#", " Iter", "ate", " over", " all", " the", " files", " in", " source", "_", "directory", "\n", "        ", "for", " filename", " in", " source", "_", "directory", "_", "path", ".", "iter", "dir", "():", "\n", "            ", "#", " Get", " the", " file", " extension", "\n", "            ", "extension", " =", " filename", ".", "suff", "ix", ".", "lower", "()", "\n", "            ", "#", " Skip", " if", " extension", " is", " not", " a", " supported", " file", " type", "\n", "            ", "if", " extension", " not", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "continue", "\n", "\n", "            ", "#", " Get", " the", " filename", " without", " extension", "\n", "            ", "base", "_", "name", " =", " filename", ".", "stem", ".", "lower", "()", "\n", "            ", "#", " Get", " a", " list", " of", " files", " with", " the", " same", " base"], "logprobs": [-1.3195747137069702, -2.593564033508301, -1.2914303541183472, -0.39663591980934143, -0.13582952320575714, -0.31932058930397034, -2.0628163814544678, -0.20940114557743073, -0.005853178910911083, -0.4228881001472473, -0.0010513499146327376, -0.10858719795942307, -0.03933025151491165, -0.6511829495429993, -0.40054255723953247, -0.009703964926302433, -0.046246934682130814, -0.00549970893189311, -0.0009238027851097286, -0.0036912893410772085, -1.9550132492440753e-05, -5.722029527532868e-06, -0.0013993718894198537, -0.040744248777627945, -1.368253231048584, -0.6767425537109375, -0.5947238802909851, -0.09001871943473816, -1.4757614135742188, -0.04300801828503609, -0.6025165319442749, -0.003498388221487403, -0.17943724989891052, -0.15458379685878754, -0.0011616155970841646, -0.01582515612244606, -2.9611706733703613, -0.00010597144137136638, -1.0371154530730564e-05, -0.0011561383726075292, -1.847726889536716e-05, -0.0003738896339200437, -0.23193542659282684, -0.0682898610830307, -0.00628435704857111, -0.02924739383161068, -0.06962549686431885, -0.8709655404090881, -0.12244410067796707, -0.15146514773368835, -0.007776108104735613, -0.002263010013848543, -2.304807662963867, -0.018133806064724922, -0.3296760320663452, -0.0019408691441640258, -0.11335263401269913, -0.0004593271005433053, -0.02218582294881344, -0.00021860594279132783, -0.00453562568873167, -0.0013074668822810054, -0.0007323920144699514, -0.001490316353738308, -0.001347587094642222, -0.0004634975048247725, -0.0013499680208042264, -1.966933996300213e-05, -1.3470558769768104e-05, -0.000547378440387547, -0.014572614803910255, -2.371866226196289, -0.004470473621040583, -2.6445729732513428, -0.2759218215942383, -0.044384900480508804, -1.168244216387393e-05, -1.156323378381785e-05, -0.0011807858245447278, -4.076874756719917e-05, -0.00022659118985757232, -0.11086750030517578, -0.0017890414455905557, -0.03135918080806732, -0.012880108319222927, -1.316931128501892, -1.8670661449432373, -0.2417697310447693, -0.012557013891637325, -0.17725150287151337, -0.0015067425556480885, -0.10096292197704315, -0.00045193947153165936, -0.008484626188874245, -0.014793109148740768, -0.08003856241703033, -0.01903505064547062, -0.2565654218196869, -0.0010125277331098914, -0.2330048680305481, -2.6702524337451905e-05, -0.00012909532233607024, -0.0009909725049510598, -9.917721035890281e-05, -0.001007526065222919, -0.0029519100207835436, -3.8265450712060556e-05, -1.490647554397583, -0.0015920833684504032, -0.23036155104637146, -0.013708023354411125, -0.22557798027992249, -1.930721640586853, -0.09563916176557541, -0.6062003374099731, -0.6558111906051636, -0.19268923997879028, -2.926748752593994, -0.00026544384309090674, -5.090107151772827e-05, -1.577592372894287, -1.058342456817627, -0.5982141494750977, -2.2679312229156494, -0.25209999084472656, -0.0010494445450603962, -0.2294367402791977, -0.036830540746450424, -0.17808936536312103, -1.490105023549404e-05, -1.3351351299206726e-05, -0.02395612746477127, -0.02409578301012516, -0.0006361367995850742, -0.1415686458349228, -0.0010031197452917695, -0.11947162449359894, -1.293088674545288, -0.0014435357879847288, -0.5937502980232239, -0.9918731451034546, -3.162341356277466, -0.13833224773406982, -0.12280822545289993, -1.5702372789382935, -0.018149610608816147, -0.002708102809265256, -0.4748792350292206, -0.001685152412392199, -0.03136345371603966, -0.4888366758823395, -0.004948155488818884, -0.4979005753993988, -3.611976353568025e-05, -3.6000557884108275e-05, -0.004132304340600967, -1.4543427823809907e-05, -8.4638240878121e-06, -1.2568678855895996, -0.0006805725861340761, -0.00028880240279249847, -0.003375429892912507, -0.06034554913640022, -0.19065260887145996, -1.8462588787078857, -0.10215631127357483, -1.596806287765503, -0.5800241231918335, -0.22516463696956635, -0.0009626284008845687, -0.20794010162353516, -0.0035943682305514812, -0.6851347088813782, -5.07818695041351e-05, -0.010597147047519684, -5.066266385256313e-05, -0.9649298787117004, -0.08273760229349136, -0.009453177452087402, -0.015615804120898247, -0.5210169553756714, -0.1472906470298767, -1.7840442657470703, -1.4387032985687256, -2.4341788291931152, -0.12022241950035095, -0.015288544818758965, -3.1461288928985596, -0.5091263651847839, -0.44798070192337036, -0.6750636696815491, -0.04555864632129669, -0.001178047270514071, -0.0022652698680758476, -0.043243225663900375, -0.023891182616353035, -7.986990567587782e-06, -0.635050356388092, -0.010864981450140476, -0.002401327481493354, -0.00018571082910057157, -0.0001370812824461609, -0.004354875069111586, -0.0005499995895661414, -0.003949818201363087, -0.0006469779182225466, -8.713819261174649e-05, -2.47952248173533e-05, -0.0010941001819446683, -0.0002547178009990603, -0.002008327515795827, -0.00017176583060063422, -0.0001938155182870105, -0.00014554394874721766, -3.5523738915799186e-05, -0.001527334563434124, -0.00016366096679121256, -0.001984295202419162, -0.02788485586643219, -0.002748523373156786, -0.0012041230220347643, -0.00034671969478949904, -0.06199271231889725, -0.0025364153552800417, -1.062096357345581, -0.0014725804794579744, -0.046298038214445114, -0.3957878351211548, -0.05872320756316185, -2.7085070610046387, -0.14815080165863037, -0.9063147306442261, -0.12270089238882065, -0.00018475732940714806, -1.1971181631088257, -0.011616328731179237, -1.4169234037399292, -0.011131919920444489, -0.10144934803247452, -8.999896090244874e-05, -0.05420682579278946, -2.5412309169769287, -0.047652214765548706, -0.0001380348257953301, -0.01107191201299429, -0.5472886562347412, -0.029252486303448677, -1.7559999227523804, -2.481476068496704, -0.41983214020729065, -0.00402675848454237, -1.6098390817642212, -0.408250093460083, -0.1444675773382187, -0.00790597777813673, -0.35457709431648254], "finish_reason": "length"}], "metrics": {"energy": 379.3023290557863, "energy_per_token": 1.4816497228741652, "time": 12.528328, "time_per_token": 0.04893878125}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"{source_directory} does not exist.\")\n\n    # Filter files by extensions\n    file_extensions = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n    files = [f for f in source_directory.iterdir() if f.suffix in file_extensions]\n\n    # Get number of files to move\n    n_files = len(files)\n\n    # Create target directory if it doesn't exist\n    target_directory = Path(target_directory).resolve()\n    target_directory.mkdir(parents=True, exist_ok=True)\n\n    # Move files to target directory\n    counter = 0\n    for file in files:\n        file = Path(file)\n        new_name = f\"{file.stem}-{counter + 1}{file.suffix}\"\n        new_file = Path(target_directory, new_name)\n        if new_file.exists():\n            new_file =", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Filter", " files", " by", " extensions", "\n", "    ", "file", "_", "extensions", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " source", "_", "directory", ".", "iter", "dir", "()", " if", " f", ".", "suff", "ix", " in", " file", "_", "extensions", "]", "\n", "\n", "    ", "#", " Get", " number", " of", " files", " to", " move", "\n", "    ", "n", "_", "files", " =", " len", "(", "files", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", "\n", "    ", "counter", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "file", " =", " Path", "(", "file", ")", "\n", "        ", "new", "_", "name", " =", " f", "\"", "{", "file", ".", "stem", "}-", "{", "counter", " +", " ", "1", "}{", "file", ".", "suff", "ix", "}\"", "\n", "        ", "new", "_", "file", " =", " Path", "(", "target", "_", "directory", ",", " new", "_", "name", ")", "\n", "        ", "if", " new", "_", "file", ".", "exists", "():", "\n", "            ", "new", "_", "file", " ="], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -0.345287024974823, -0.0795290619134903, -0.7581859827041626, -0.06386209279298782, -0.05669281259179115, -3.58813522325363e-05, -1.3112935448589269e-05, -5.5549986427649856e-05, -0.17486143112182617, -0.0036340404767543077, -0.01631058193743229, -0.0007357274298556149, -0.014969399198889732, -0.0020123724825680256, -3.9457496313843876e-05, -2.825220326485578e-05, -0.16047705709934235, -0.23717768490314484, -0.14223003387451172, -1.9628446102142334, -0.005450270138680935, -0.00017534149810671806, -0.00026592056383378804, -0.15324217081069946, -0.26525115966796875, -0.0006113567505963147, -0.0040708063170313835, -0.4469965398311615, -0.011852201074361801, -0.00024041623692028224, -0.005252490285784006, -0.2090918868780136, -0.00046921687317080796, -2.0335001945495605, -4.301605224609375, -0.35330867767333984, -0.7491429448127747, -0.7553974390029907, -0.14835235476493835, -0.0014249657979235053, -1.8963217735290527, -0.006377464160323143, -0.30442380905151367, -0.02092488296329975, -0.758404016494751, -0.024578839540481567, -0.12287253886461258, -0.0024180954787880182, -0.00011538793478393927, -0.00011717586312443018, -0.001983700320124626, -0.000502817565575242, -0.0016175531782209873, -0.0002015625941567123, -1.6927575416048057e-05, -6.282132380874828e-05, -0.00046528480015695095, -0.0002087136817863211, -0.0009260656661354005, -6.294052582234144e-05, -8.082063141046092e-05, -1.3232143828645349e-05, -0.00029488030122593045, -0.0005486889858730137, -0.00022468426323030144, -0.0007023728103376925, -3.862306402879767e-05, -0.016539840027689934, -0.004826205782592297, -0.14405716955661774, -0.8777875900268555, -0.4198238253593445, -1.1188524961471558, -0.7052005529403687, -0.02099340781569481, -0.007144261617213488, -0.0008879532688297331, -0.5492963790893555, -9.572047565598041e-05, -6.580135959666222e-05, -1.680836794548668e-05, -1.5995965003967285, -0.0027492367662489414, -0.00014435203047469258, -0.05036119744181633, -0.17120175063610077, -0.00016151554882526398, -0.34757354855537415, -4.672895011026412e-05, -0.2580699920654297, -0.000764673575758934, -5.125986263010418e-06, -1.490105023549404e-05, -0.036737240850925446, -0.0026019311044365168, -0.09202492982149124, -0.00018559163436293602, -0.3345656991004944, -3.344993829727173, -3.0341787338256836, -0.006715230643749237, -0.39507371187210083, -1.489201545715332, -0.4634352922439575, -0.17289423942565918, -0.0004058252670802176, -1.831119179725647, -0.1917700469493866, -0.07391262799501419, -0.24254179000854492, -0.08516065031290054, -0.04412863403558731, -0.04941662400960922, -0.0003083468764089048, -0.008419021964073181, -0.4911864995956421, -0.000161038784426637, -0.2344673126935959, -1.5898874998092651, -0.1269751936197281, -0.04518201947212219, -0.042973875999450684, -0.08489075303077698, -0.6750376224517822, -0.00025829317746683955, -1.5735502529423684e-05, -0.019429249688982964, -0.03258499875664711, -0.0003408804477658123, -1.0671262741088867, -0.004640286788344383, -0.03241005912423134, -0.04298403859138489, -0.0044042496010661125, -0.00015793983766343445, -0.0015606615925207734, -1.6331539882230572e-05, -2.3841830625315197e-06, -0.00020489977032411844, -2.328146457672119, -0.5270758271217346, -0.0025102554354816675, -0.05388619378209114, -0.007170774042606354, -0.603367269039154, -3.504691630951129e-05, -0.00016866691294126213, -0.00045563330058939755, -0.005811105947941542, -8.106198947643861e-06, -1.5258672647178173e-05, -0.21178781986236572, -0.000266278104390949, -0.0008920027757994831, -0.00018535325943958014, -0.002459954936057329, 0.0, -4.005352093372494e-05, -0.00013076403411105275, -0.0010807631770148873, -0.0006799769471399486, -0.013210509903728962, -0.03430314362049103, -0.00020847532141488045, -0.12375445663928986, -0.5865896344184875, -0.03537382930517197, -0.5324445962905884, -0.051327645778656006, -0.04750819504261017, -0.18143169581890106, -0.0012997282901778817, -3.411543846130371, -0.01390378549695015, -0.007143906317651272, -0.49620920419692993, -0.0213373601436615, -0.02128671482205391, -0.06874625384807587, -0.4168047606945038, -0.011039135977625847, -0.011376157402992249, -0.00019870213873218745, -0.0007967158453539014, -0.009515408426523209, -2.287668228149414, -2.8234052658081055, -0.43628832697868347, -0.0014588914345949888, -0.0047770896926522255, -0.013875804841518402, -0.14569252729415894, -0.09097612649202347, -2.6467442512512207, -0.0011201781453564763, -1.0306885242462158, -0.011075802147388458, -1.3098245859146118, -0.026936670765280724, -0.002065312582999468, -0.06268960237503052, -0.001532214693725109, -0.17841653525829315, -0.046649783849716187, -0.01995476335287094, -0.046540893614292145, -1.0893828868865967, -0.003330400912091136, -0.00046397410915233195, -1.052483081817627, -0.005129866302013397, -0.0013808010844513774, -0.0003914067056030035, -0.00016723664884921163, -0.0016370717203244567, -0.045665476471185684, -0.024868886917829514, -0.3086007833480835, -0.0009727513534016907, -0.6581254601478577, -0.01999531127512455, -1.8529305458068848, -0.02033516950905323, -0.08757587522268295, -7.152531907195225e-06, -6.794906312279636e-06, -0.7001618146896362, -0.03290030360221863, -9.65590606938349e-06, -7.510157047363464e-06, -0.0011893587652593851, -0.01833678036928177, -0.14811913669109344, -0.3886297047138214, -0.5048877000808716, -6.198863957251888e-06, -0.0003381395654287189, -0.001961690140888095, -0.01879606954753399, -0.004196647088974714, -0.0281533170491457, -0.0008865240379236639, -0.7648511528968811, -0.0006709231529384851, -0.6534176468849182, -0.11682731658220291], "finish_reason": "length"}], "metrics": {"energy": 393.22173074150083, "energy_per_token": 1.5360223857089876, "time": 12.524941, "time_per_token": 0.04892555078125}}
{"outputs": [{"text": "source_directory_path = Path(source_directory)\n    if not source_directory_path.exists():\n        raise FileNotFoundError(f'Source directory {source_directory} does not exist')\n\n    file_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    file_count = 0\n    for source_path in source_directory_path.rglob('*'):\n        if source_path.is_file() and source_path.suffix in file_extensions:\n            original_file_name = source_path.name\n            original_file_name_without_extension = os.path.splitext(original_file_name)[0]\n            if os.path.exists(\n                os.path.join(\n                    target_directory,\n                    f'{original_file_name_without_extension}-{file_count + 1}{source_path.suffix}'\n                )\n            ):\n                file_count += 1\n            else:\n                shutil.move(\n                    source_path,\n                    os.", "tokens": ["source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "file", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " source", "_", "path", " in", " source", "_", "directory", "_", "path", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " source", "_", "path", ".", "is", "_", "file", "()", " and", " source", "_", "path", ".", "suff", "ix", " in", " file", "_", "extensions", ":", "\n", "            ", "original", "_", "file", "_", "name", " =", " source", "_", "path", ".", "name", "\n", "            ", "original", "_", "file", "_", "name", "_", "without", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "original", "_", "file", "_", "name", ")[", "0", "]", "\n", "            ", "if", " os", ".", "path", ".", "exists", "(", "\n", "                ", "os", ".", "path", ".", "join", "(", "\n", "                ", "    ", "target", "_", "directory", ",", "\n", "                ", "    ", "f", "'{", "original", "_", "file", "_", "name", "_", "without", "_", "extension", "}-", "{", "file", "_", "count", " +", " ", "1", "}{", "source", "_", "path", ".", "suff", "ix", "}'", "\n", "                ", ")", "\n", "            ", "):", "\n", "                ", "file", "_", "count", " +=", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "sh", "util", ".", "move", "(", "\n", "                ", "    ", "source", "_", "path", ",", "\n", "                ", "    ", "os", "."], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -2.4402287006378174, -0.149972602725029, -0.04030374810099602, -0.03768054395914078, -0.0014143711887300014, -0.004838543478399515, -3.540453326422721e-05, -6.794906312279636e-06, -0.002546284580603242, -0.1802370399236679, -0.1701442301273346, -0.4540867209434509, -0.09539342671632767, -0.02657386101782322, -4.291525328881107e-06, -5.245195097813848e-06, -0.0005432083853520453, -1.9311717551317997e-05, -5.435795901576057e-05, -0.1824284791946411, -0.004882674664258957, -0.011546922847628593, -0.0009640575153753161, -0.01592829078435898, -0.0022762122098356485, -2.5510462364763953e-05, -3.0517112463712692e-05, -0.12549924850463867, -0.2380407750606537, -1.9346264600753784, -0.5014995336532593, -0.10134227573871613, -0.6874564290046692, -0.0014457975048571825, -4.827859811484814e-05, -8.67805938469246e-05, -0.16463720798492432, -0.578014075756073, -0.0004144048143643886, -0.0027713484596461058, -1.4620740413665771, -0.002524167764931917, -0.25703728199005127, -0.0006006343755871058, -3.140519142150879, -0.006893187295645475, -0.7926101088523865, -0.11170452833175659, -0.41899433732032776, -0.18909186124801636, -0.001910886145196855, -0.0003703146940097213, -9.572047565598041e-05, -0.008150530979037285, -0.0012017417466267943, -0.001722282380796969, -0.00035386974923312664, -9.643566590966657e-05, -1.1086402082582936e-05, -0.0024302254896610975, -0.00031251792097464204, -0.0011744751827791333, -7.664863369427621e-05, -0.0002882065309677273, -0.00010990492592100054, -1.9788545614574105e-05, -0.002382894279435277, -0.0003234816831536591, -0.000830901088193059, -0.01949729211628437, -0.01611834019422531, -0.7165768146514893, -0.00034254882484674454, -1.9905003309249878, -0.0007622911944054067, -0.550533652305603, -0.02323240227997303, -0.0066549573093652725, -0.0007870675181038678, -0.027935748919844627, -0.35921618342399597, -0.12509939074516296, -1.6102904081344604, -0.0046023158356547356, -1.3563991785049438, -0.030413243919610977, -0.11815638095140457, -4.8993817472364753e-05, -2.9682672902708873e-05, -0.0008864049450494349, -2.95634672511369e-05, -1.645074735279195e-05, -0.14556609094142914, -0.012234875932335854, -0.1576094627380371, -0.10116710513830185, -0.17033889889717102, -0.0002828436263371259, -0.04349994659423828, -0.009093417786061764, -0.296144962310791, -0.10541656613349915, -1.8000440832111053e-05, -0.00024923557066358626, -0.00047636605449952185, -0.08777789771556854, -1.0013530300057027e-05, -0.04664989560842514, -0.35498082637786865, -0.009530994109809399, -0.26637333631515503, -2.3483953555114567e-05, -0.0010487301042303443, -0.0004508670826908201, -0.06794542819261551, -2.610649426060263e-05, -0.3317525088787079, -0.00047291061491705477, -2.3841855067985307e-07, -2.062299427052494e-05, -0.006119206547737122, -0.006349272094666958, -0.013188510201871395, -2.2177810668945312, -0.0003363520372658968, -2.3035471439361572, -0.04045029729604721, -0.11906670778989792, -0.042233847081661224, -0.11096715927124023, -8.976056415122002e-05, -8.153582894010469e-05, -0.0003999863693024963, -0.27529019117355347, -0.07507115602493286, -0.05314888805150986, -2.025045871734619, -0.00021646064124070108, -0.36122336983680725, -0.007028261199593544, -0.7032381892204285, -0.4408486783504486, -0.7578821778297424, -0.00018070495571009815, -0.10809193551540375, -0.03297804668545723, -1.189310908317566, -1.0490362910786644e-05, -0.001867694896645844, -0.003686419688165188, -0.0016465928638353944, -5.113947918289341e-05, -1.311301275563892e-06, -0.00019107422849629074, -0.05853119120001793, -2.1219027985353023e-05, -4.076874756719917e-05, -1.1324817933200393e-05, -9.894321920000948e-06, -0.0018722163513302803, -0.01985917240381241, -0.00010597144137136638, -0.015248392708599567, -0.21653272211551666, -4.241986274719238, -1.3643739223480225, -5.23315102327615e-05, -0.017760995775461197, -0.00047398300375789404, -0.30793297290802, -0.003729413729161024, -3.371380567550659, -0.005262451246380806, -1.666020393371582, -0.00010072677832795307, -0.00014506718434859067, -0.0005646541831083596, -0.001104817260056734, -0.0008075552177615464, -1.9844683408737183, -6.603976362384856e-05, -0.005282373167574406, -0.05503474548459053, -8.583032467868179e-06, -6.961580220377073e-05, -0.003724663285538554, -0.2021762728691101, -0.0001212284987559542, -0.00030071981018409133, -0.8643043041229248, -0.21635788679122925, -0.014477799646556377, -1.4066597032069694e-05, -0.0002286172821186483, -0.00015901254664640874, -3.707340147229843e-05, -0.02666057087481022, -0.0005378468777053058, -4.768370445162873e-07, -2.372236667724792e-05, -0.3495374023914337, -0.20575161278247833, -0.10911578685045242, -3.9457496313843876e-05, -0.00601576641201973, -1.0729204416275024, -0.004736038856208324, -0.0006136203301139176, -0.4464137554168701, -0.308158278465271, -0.00011991735664196312, -7.617183291586116e-05, -6.747018051100895e-05, -0.00012063252506777644, -3.433168603805825e-05, -0.020139843225479126, -0.38929516077041626, -0.009412200190126896, -0.04614813253283501, -0.002679926110431552, -0.005756467115134001, -0.023969512432813644, -0.005795224104076624, -0.005176948849111795, -0.5644571185112, -0.0005899119423702359, -0.04602370411157608, -0.008089989423751831, -0.0020060669630765915, -0.0007334641413763165, -0.008824871852993965, -0.8641000390052795, -0.03542353957891464, -4.088794958079234e-05, -0.0018210508860647678, -0.0005887205479666591, -0.2614055871963501, -1.8596476365928538e-05, -2.622600959512056e-06, -0.05913949012756348, -0.00016592556494288146, -1.4574074745178223, -7.70062324590981e-05, -0.002452701097354293, -0.7940641045570374, -0.005520930048078299, -0.002521432936191559, -0.03577958792448044, -0.012986371293663979, -0.00014518637908622622, -0.00014327930693980306, -0.025486614555120468, -4.1126360883936286e-05], "finish_reason": "length"}], "metrics": {"energy": 361.594102113724, "energy_per_token": 1.4124769613817343, "time": 12.555123, "time_per_token": 0.04904344921875}}
{"outputs": [{"text": "file_list = glob.glob(source_directory + \"/*.txt*\")\n    file_list += glob.glob(source_directory + \"/*.docx*\")\n    file_list += glob.glob(source_directory + \"/*.xlsx*\")\n    file_list += glob.glob(source_directory + \"/*.csv*\")\n\n    if len(file_list) == 0:\n        print(\"No files found.\")\n        return 0\n\n    # Iterate through each file in the source directory\n    num_files = 0\n    for file in file_list:\n\n        # Extract the original file name\n        original_name = Path(file).stem\n        # Convert the name to a Path object\n        path = Path(file)\n        # Split the path into path components\n        path_components = path.parts\n        # Remove the source directory from the path components\n        path_components = path_components[1:]\n        # Join the path components to form the new path\n        new_path = Path(os.path.join(*path_components))", "tokens": ["file", "_", "list", " =", " glob", ".", "glob", "(", "source", "_", "directory", " +", " \"", "/*", ".", "txt", "*", "\"", ")", "\n", "    ", "file", "_", "list", " +=", " glob", ".", "glob", "(", "source", "_", "directory", " +", " \"", "/*", ".", "doc", "x", "*", "\"", ")", "\n", "    ", "file", "_", "list", " +=", " glob", ".", "glob", "(", "source", "_", "directory", " +", " \"", "/*", ".", "x", "ls", "x", "*", "\"", ")", "\n", "    ", "file", "_", "list", " +=", " glob", ".", "glob", "(", "source", "_", "directory", " +", " \"", "/*", ".", "csv", "*", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "print", "(", "\"", "No", " files", " found", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " file", " in", " the", " source", " directory", "\n", "    ", "num", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "\n", "        ", "#", " Ext", "ract", " the", " original", " file", " name", "\n", "        ", "original", "_", "name", " =", " Path", "(", "file", ")", ".", "stem", "\n", "        ", "#", " Convert", " the", " name", " to", " a", " Path", " object", "\n", "        ", "path", " =", " Path", "(", "file", ")", "\n", "        ", "#", " Split", " the", " path", " into", " path", " components", "\n", "        ", "path", "_", "components", " =", " path", ".", "parts", "\n", "        ", "#", " Remove", " the", " source", " directory", " from", " the", " path", " components", "\n", "        ", "path", "_", "components", " =", " path", "_", "components", "[", "1", ":]", "\n", "        ", "#", " Join", " the", " path", " components", " to", " form", " the", " new", " path", "\n", "        ", "new", "_", "path", " =", " Path", "(", "os", ".", "path", ".", "join", "(*", "path", "_", "components", "))"], "logprobs": [-3.5230374336242676, -0.01750284992158413, -2.9830386638641357, -0.051515839993953705, -1.3536738157272339, -0.0006438804557546973, -0.047963373363018036, -0.03499346598982811, -1.3488837480545044, -0.00012027494085486978, -8.010543388081715e-05, -0.08336316794157028, -1.3060920238494873, -0.6252837777137756, -0.3043656051158905, -0.18483157455921173, -3.1086981296539307, -0.14008165895938873, -0.10814735293388367, -0.9617573022842407, -0.10431288182735443, -0.7216691970825195, -0.00045062878052704036, -0.06830210983753204, -1.1290264129638672, -0.004441278520971537, -1.1324817933200393e-05, -0.0008142255246639252, -0.0001431601122021675, -0.0007557396893389523, -9.417489309271332e-06, -3.3378546504536644e-06, -0.0006052807439118624, -0.0054602292366325855, -0.0016518294578418136, -0.0011406589765101671, -0.01147209107875824, -0.005191179923713207, -0.006783551536500454, -0.00018940561858471483, -0.0001811817055568099, -0.0007757514831610024, -0.0007194076315499842, -0.000987995183095336, -7.986990567587782e-06, -5.066266385256313e-05, -0.00017248096992261708, -0.00019834458362311125, -0.0003939091111533344, -0.00011944057769142091, -5.2689116273541003e-05, -0.0003010773507412523, -3.099436753473128e-06, -1.311301275563892e-06, -0.00028546550311148167, -0.0008397151832468808, -0.00016234986833296716, -0.0002488780301064253, -0.0053465235978364944, -0.0001746263587847352, -0.0017665509367361665, -0.00041059168870560825, -4.124556289752945e-05, -7.390703103737906e-05, -7.950943836476654e-05, -0.00025733973598107696, -0.0008356655016541481, -1.0609570381348021e-05, -0.00028761065914295614, -0.0006336349761113524, -0.00021717573690693825, -0.0004926898400299251, -0.00025102324434556067, -4.768258077092469e-05, -0.00018487652414478362, -5.960446742392378e-06, -1.5497195136049413e-06, -0.0001787979417713359, -0.0005727558163926005, -0.00012420836719684303, -0.00010263393050990999, -0.002041519619524479, -0.002964152256026864, -5.602679812000133e-05, -0.0001463782973587513, -0.0003680505615193397, -0.40679699182510376, -0.0003589939442463219, -1.4937189817428589, -0.9515722990036011, -0.0003493413969408721, -0.007365216501057148, -1.0371154530730564e-05, -2.8490614567999728e-05, -0.015384926460683346, -0.22515130043029785, -0.0007377525325864553, -0.0012940136948600411, -0.00963029358536005, -0.03665289282798767, -0.002534393919631839, -0.8284640312194824, -0.088149294257164, -0.4074925482273102, -0.1913847178220749, -0.1393931359052658, -0.2904830574989319, -1.5800695419311523, -0.05816718190908432, -0.0013365155318751931, -0.004044448956847191, -0.06962104886770248, -0.019649844616651535, -0.1195153146982193, -0.00022754464589525014, -0.00856346357613802, -0.09362988919019699, -0.00034564718953333795, -2.3695545196533203, -4.201704978942871, -0.05323954299092293, -0.7013134360313416, -2.1551005840301514, -0.0421435609459877, -1.3463557958602905, -0.12502732872962952, -0.8950007557868958, -0.04953835904598236, -0.20036213099956512, -0.001177213853225112, -3.3327512741088867, -0.0035910424776375294, -0.6202377080917358, -1.8027331829071045, -0.036921653896570206, -0.006008301395922899, -0.025136878713965416, -0.03021710179746151, -0.03626462072134018, -0.290993332862854, -0.37071841955184937, -0.009340043179690838, -7.56950321374461e-05, -6.9141146923357155e-06, -0.00027176024741493165, -0.003416180144995451, -2.7332000732421875, -0.0018705505644902587, -0.26896145939826965, -2.7531723976135254, -0.0031693964265286922, -0.2693521976470947, -1.1140859127044678, -0.6620598435401917, -0.016756149008870125, -1.5083751678466797, -0.00037222131504677236, -0.2446325570344925, -0.0023919325321912766, -0.42988261580467224, -0.06667178124189377, -0.6408286690711975, -0.0003779412363655865, -0.006575850769877434, -0.002402041107416153, -0.0007535954937338829, -0.29893937706947327, -0.09248648583889008, -1.1557122468948364, -2.255133628845215, -3.5481717586517334, -0.43026164174079895, -2.699247360229492, -0.08170296251773834, -0.997468888759613, -2.639801502227783, -0.058475200086832047, -0.23393601179122925, -0.002674338174983859, -1.7453358173370361, -0.10182744264602661, -0.003195539116859436, -0.0037925951182842255, -0.0729784145951271, -0.001446868758648634, -0.04762084409594536, -0.44913795590400696, -0.134317085146904, -3.419602870941162, -0.02699909918010235, -1.7538453340530396, -0.2638018727302551, -4.103643417358398, -1.6516377925872803, -0.16145862638950348, -0.0013244913425296545, -0.9109683632850647, -0.04090915620326996, -0.598224401473999, -0.0016934829764068127, -0.12145133316516876, -0.00041738382424227893, -0.33485546708106995, -0.04101534187793732, -0.3096224069595337, -0.10417797416448593, -1.3269685506820679, -0.07688922435045242, -1.6588398218154907, -0.15035514533519745, -0.3003385066986084, -0.08245058357715607, -0.13955312967300415, -0.22218427062034607, -0.055333126336336136, -0.0010963627137243748, -0.4879250228404999, -0.022299261763691902, -0.024074602872133255, -0.10729213804006577, -0.04930360987782478, -0.0036618339363485575, -2.253030106658116e-05, -0.0060674287378787994, -1.364325761795044, -0.029021957889199257, -0.010015825740993023, -0.0860225260257721, -0.04515809193253517, -0.9490850567817688, -0.04591953009366989, -0.5753499865531921, -0.034353479743003845, -1.3608667850494385, -0.5316755175590515, -0.36442938446998596, -0.6146331429481506, -0.4737589657306671, -0.07315471023321152, -0.0015004340093582869, -0.22307488322257996, -0.0020004753023386, -0.04272421449422836, -0.006069442722946405, -0.9120323061943054, -0.9632453322410583, -0.08522075414657593, -5.8412379075889476e-06, -0.05205961689352989, -0.0008871195605024695, -0.030748192220926285, -0.11299005895853043, -0.001468533300794661, -9.917721035890281e-05, -3.933898824470816e-06, -0.0063323331996798515], "finish_reason": "length"}], "metrics": {"energy": 367.86561431694037, "energy_per_token": 1.4369750559255483, "time": 12.553522, "time_per_token": 0.0490371953125}}
{"outputs": [{"text": "# Check if source_directory exists.\n    source_directory_path = Path(source_directory)\n    if not source_directory_path.is_dir():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    # Create target directory if it does not exist.\n    target_directory_path = Path(target_directory)\n    target_directory_path.mkdir(exist_ok=True, parents=True)\n\n    # Iterate through files in source directory\n    file_counter = 0\n    for source_file in source_directory_path.glob('*'):\n        # Only process files that match the extensions\n        if source_file.is_file() and source_file.suffix in {'.txt', '.docx', '.xlsx', '.csv'}:\n            # Get the source file path\n            source_path = Path(source_file)\n\n            # Get target directory name from the source file name\n            target_directory_name = source_path.name.split('.')[0]\n\n            # Create a", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", ".", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " does", " not", " exist", ".", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " source", " directory", "\n", "    ", "file", "_", "counter", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "directory", "_", "path", ".", "glob", "('", "*", "')", ":", "\n", "        ", "#", " Only", " process", " files", " that", " match", " the", " extensions", "\n", "        ", "if", " source", "_", "file", ".", "is", "_", "file", "()", " and", " source", "_", "file", ".", "suff", "ix", " in", " {'", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'", "}:", "\n", "            ", "#", " Get", " the", " source", " file", " path", "\n", "            ", "source", "_", "path", " =", " Path", "(", "source", "_", "file", ")", "\n", "\n", "            ", "#", " Get", " target", " directory", " name", " from", " the", " source", " file", " name", "\n", "            ", "target", "_", "directory", "_", "name", " =", " source", "_", "path", ".", "name", ".", "split", "('", ".", "')", "[", "0", "]", "\n", "\n", "            ", "#", " Create", " a"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -0.2650202512741089, -0.31018850207328796, -0.6255577206611633, -0.0034728473983705044, -0.03005412220954895, -2.0426993370056152, -0.04877263307571411, -0.0022960747592151165, -1.9567592144012451, -0.01472474541515112, -0.15426181256771088, -1.1012029647827148, -0.17778165638446808, -0.03456665948033333, -0.03512456640601158, -0.0011862630490213633, -0.005491647403687239, -2.0503786799963564e-05, -5.006777428206988e-06, -0.0010418231831863523, -0.173594668507576, -0.023082025349140167, -0.02161329984664917, -0.03467939421534538, -0.04190969839692116, -3.933898824470816e-06, -7.152531907195225e-06, -0.00043501926120370626, -1.7762025890988298e-05, -5.507317473529838e-05, -1.9251600503921509, -4.172316494077677e-06, -0.036113545298576355, -0.002810815814882517, -0.004633167292922735, -0.0007657456444576383, -0.029196104034781456, -0.0019537187181413174, -3.4450891689630225e-05, -1.490105023549404e-05, -0.10280082374811172, -0.2445622682571411, -0.11977919936180115, -0.9656840562820435, -0.0633702352643013, -0.7055225372314453, -8.153582894010469e-05, -0.001135300612077117, -4.076874756719917e-05, -7.843663479434326e-05, -0.06860579550266266, -0.36301836371421814, -0.00040391870425082743, -0.0016396900173276663, -0.09109856933355331, -0.0020270056556910276, -0.00022098960471339524, -0.0024518687278032303, -0.03430464118719101, -0.0012888943310827017, -0.10228944569826126, -0.5613027811050415, -0.4024140238761902, -0.4047640562057495, -0.07030265033245087, -0.03454973176121712, -0.3965821862220764, -0.0001951265730895102, -0.014787470921874046, -0.04020710662007332, -0.0018873275257647038, -0.0005137792322784662, -0.5504338145256042, -0.00031799983116798103, -0.012303880415856838, -0.003727276111021638, -0.0025330858770757914, -0.003031898057088256, -0.0012916326522827148, -0.00025507534155622125, -0.0010743328602984548, -1.0371154530730564e-05, -2.0265558760002023e-06, -0.000192504478036426, -0.02989620715379715, -0.0027581527829170227, -0.47662973403930664, -9.417489309271332e-06, -5.900685573578812e-05, -0.00021038226259406656, -0.00022480344341602176, -0.00037043384509161115, -0.004811850842088461, -9.65590606938349e-06, -3.421248038648628e-05, -2.0899155139923096, -5.960446742392378e-06, -1.0490362910786644e-05, -0.0007624103454872966, -0.0009752523037604988, -0.1285010576248169, -0.0042924415320158005, -3.7788631743751466e-05, -0.0012440093560144305, -0.0033036675304174423, -0.01175712887197733, -0.026734737679362297, -0.00029583368450403214, -0.1781156063079834, -3.2654879093170166, -0.010713913477957249, -0.9908162355422974, -0.7336012721061707, -0.12473893910646439, -0.44306114315986633, -0.1253717988729477, -2.7253332138061523, -0.0016213617054745555, -1.3997960090637207, -0.0022909604012966156, -2.3831584453582764, -0.024261830374598503, -0.002533799270167947, -0.04297501593828201, -0.03008466213941574, -0.030611775815486908, -0.061068374663591385, -1.2201921939849854, -0.0032433071173727512, -0.18496038019657135, -0.665436863899231, -0.33451202511787415, -2.586808113846928e-05, -1.5258672647178173e-05, -0.0008684201166033745, -1.966933996300213e-05, -7.867782187531702e-06, -1.7105083465576172, -0.7386664748191833, -0.5189186334609985, -0.398211270570755, -0.00035684893373399973, -0.017320092767477036, -0.10142058879137039, -0.6705185770988464, -3.483860969543457, -0.9360429644584656, -0.25835323333740234, -1.5910742282867432, -0.7279201745986938, -0.46762847900390625, -1.1957160234451294, -0.9690999388694763, -0.0011825718684121966, -0.06491110473871231, -0.14081330597400665, -9.48860906646587e-05, -0.0012271024752408266, -0.00032908268622122705, -1.177917242050171, -1.311301275563892e-06, -0.0024307011626660824, -0.098305344581604, -0.007330662105232477, -0.5288750529289246, -9.023735765367746e-05, -0.0009803733555600047, -0.00023719835735391825, -0.1836848258972168, -2.634490556374658e-05, -0.49366694688796997, -3.21079421043396, -0.0036387916188687086, -0.002855036174878478, -0.000486970558995381, -0.00038354191929101944, -0.013534216210246086, -0.0012737740762531757, -0.0037047103978693485, -0.00039450492477044463, -4.6132929128361866e-05, -0.0005663221818394959, -0.005204818211495876, -0.00048780461656861007, -0.001836043898947537, -0.00011193125828867778, -0.0004109491710551083, -0.00010239553375868127, -0.00027783826226368546, -0.0020535350777208805, -0.00024673278676345944, -0.0014397265622392297, -0.018294643610715866, -0.020645366981625557, -0.001745249843224883, -0.04129871726036072, -0.41168102622032166, -1.0674197673797607, -0.9833325743675232, -2.3745620250701904, -0.31185382604599, -1.587306261062622, -0.9452378153800964, -0.0006733057671226561, -0.03659646585583687, -0.0019480077316984534, -2.2535452842712402, -0.0173968318849802, -0.735550582408905, -0.0022683623246848583, -0.014392023906111717, -3.85038583772257e-05, -0.12616105377674103, -0.1670990288257599, -0.06914836913347244, -0.5199342370033264, -0.0028326883912086487, -0.017085155472159386, -0.7390394806861877, -2.838855504989624, -2.0409274101257324, -2.5832111835479736, -1.3824529647827148, -2.103402614593506, -0.2629151940345764, -0.2817856967449188, -0.2533029019832611, -0.24653282761573792, -0.0006161222117953002, -0.22102577984333038, -0.0010338444262742996, -0.40197423100471497, -0.051247917115688324, -0.020556148141622543, -0.030942726880311966, -0.4816135764122009, -8.785339014139026e-05, -0.17529110610485077, -9.345571743324399e-05, -1.7215256690979004, -0.06568790972232819, -0.34784945845603943, -0.08751361817121506, -0.16010405123233795, -0.025471972301602364, -0.016978155821561813, -0.010700467973947525, -0.007421068847179413, -0.40010613203048706, -0.27160751819610596, -0.0007317964336834848, -0.010400382801890373, -1.7507236003875732, -1.8235939741134644], "finish_reason": "length"}], "metrics": {"energy": 365.2039404544829, "energy_per_token": 1.4265778924003238, "time": 12.729872, "time_per_token": 0.0497260625}}
{"outputs": [{"text": "# Check if source_directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory {source_directory} does not exist.\")\n\n    # Create target directory if it doesn't exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Define the list of files to move\n    files_to_move = glob.glob(f\"{source_directory}/**/*.txt\", recursive=True) + \\\n                    glob.glob(f\"{source_directory}/**/*.docx\", recursive=True) + \\\n                    glob.glob(f\"{source_directory}/**/*.xlsx\", recursive=True) + \\\n                    glob.glob(f\"{source_directory}/**/*.csv\", recursive=True)\n\n    # Iterate through the files to move\n    num_files_moved = 0\n    for file in files_to_move:\n        try:\n            # Get the name of the original file\n            original_file_", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Define", " the", " list", " of", " files", " to", " move", "\n", "    ", "files", "_", "to", "_", "move", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "txt", "\"", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "                ", "    ", "glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "doc", "x", "\"", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "                ", "    ", "glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "x", "ls", "x", "\"", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "                ", "    ", "glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "csv", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " to", " move", "\n", "    ", "num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Get", " the", " name", " of", " the", " original", " file", "\n", "            ", "original", "_", "file", "_"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -0.2650202512741089, -0.31018850207328796, -0.6255577206611633, -0.0034728473983705044, -0.03005412220954895, -0.27489227056503296, -0.0018691227305680513, -0.2168806493282318, -0.03484680503606796, -0.0848810076713562, -1.0490362910786644e-05, -0.00013302871957421303, -0.004281165078282356, -0.37181907892227173, -0.00013124081306159496, -0.0017169271595776081, -2.396077979938127e-05, -1.6689160474925302e-05, -0.0010492063593119383, -0.0031932813581079245, -0.0006182666402310133, -0.019862445071339607, -0.0018161722691729665, -1.5735502529423684e-05, -1.6689160474925302e-05, -0.1040450930595398, -0.2643185555934906, -0.11796379089355469, -0.4070991575717926, -0.05940598249435425, -0.7904191613197327, -0.000482442817883566, -6.007967749610543e-05, -0.0001454247540095821, -0.008608021773397923, -0.8631060719490051, -0.00028725311858579516, -0.001680391957052052, -0.15075673162937164, -0.002900443272665143, -0.00014685506175737828, -0.002295123180374503, -0.03773622214794159, -0.0008755664457567036, -0.2009824514389038, -0.8753888010978699, -0.30622661113739014, -0.2442099153995514, -0.04385164752602577, -0.04720030725002289, -0.7986614108085632, -0.0003723404952324927, -1.7165990357170813e-05, -0.04055630415678024, -0.046279944479465485, -0.00022766382608097047, -0.614761233329773, -0.006530728656798601, -0.004000756423920393, -8.34461570775602e-06, -2.2291887944447808e-05, -0.0008152975351549685, -0.07946036010980606, -0.00014828535495325923, -0.0021504866890609264, -1.4305104514278355e-06, -2.062299427052494e-05, -0.004175041802227497, -0.001443892833776772, -0.0007408496458083391, -0.04003910347819328, -0.000659248442389071, -0.06268534809350967, -7.867782187531702e-06, -0.0004146431456319988, -6.365573790390044e-05, -0.0010283663868904114, -4.410734163684538e-06, -6.318072337307967e-06, -0.04637611284852028, -0.00384449097327888, -0.025272998958826065, -0.001476984703913331, -0.1987811177968979, -2.623164176940918, -1.2585434913635254, -2.8242297172546387, -0.008820027112960815, -2.487100601196289, -0.15584395825862885, -0.4521140456199646, -0.17921844124794006, -0.001177571015432477, -0.6115618944168091, -0.518528938293457, -0.046061500906944275, -1.597391747054644e-05, -0.007068271283060312, -0.11494660377502441, -1.128312110900879, -6.818538531661034e-05, -0.023070959374308586, -0.01567061059176922, -2.4083757400512695, -0.11175143718719482, -0.002452701097354293, -0.013873218558728695, -6.794906312279636e-06, -1.2278481335670222e-05, -0.4195992946624756, -0.05650840699672699, -0.027508705854415894, -0.04733322933316231, -0.33083751797676086, -0.09579017758369446, -0.04065852239727974, -0.016116932034492493, -0.0016126735135912895, -0.002601455431431532, -0.008352231234312057, -0.18252889811992645, -0.41848042607307434, -4.339123915997334e-05, -0.24691630899906158, -0.36689382791519165, -0.00025722055579535663, -2.0265558760002023e-06, -0.0009516716236248612, -0.00014280252798926085, -0.0007558587822131813, -0.0001299296854995191, -4.5536911784438416e-05, -4.1126360883936286e-05, -5.245195097813848e-06, -1.7881377516459906e-06, -0.0002469711471349001, -6.401333666872233e-05, -0.0007952864980325103, -0.0003943857445847243, -0.00785074383020401, -0.00026639728457666934, -0.0001134808044298552, -0.00018130090029444546, -0.0009321396937593818, -5.531158240046352e-05, -0.0006438804557546973, -0.000774798565544188, -0.004755259025841951, -0.0013112765736877918, -2.253030106658116e-05, -0.00035255891270935535, -0.0009402383584529161, -5.113947918289341e-05, -1.0132738680113107e-05, -4.482168878894299e-05, -3.194758028257638e-05, -0.00010466027742950246, -1.0371154530730564e-05, -1.8358061424805783e-05, -2.622600959512056e-06, -2.3841830625315197e-06, -8.344646857949556e-07, -4.1483970562694594e-05, -4.6132929128361866e-05, -6.353653589030728e-05, -0.0001525762490928173, -0.0031474120914936066, -8.535020606359467e-05, -0.0002809368306770921, -0.0001234931987710297, -6.05564855504781e-05, -0.00011574551899684593, -1.3589766240329482e-05, -0.0008029097807593644, -0.00028355870745144784, -0.0037716934457421303, -0.0012488907668739557, -0.00047219570842571557, -0.0001161031104857102, -0.000593962671700865, -5.638440416078083e-05, -0.002547711366787553, -0.00010215714428341016, -2.372236667724792e-05, -6.174850568640977e-05, -1.2516897186287679e-05, -2.253030106658116e-05, -1.7881377516459906e-06, -4.6491513785440475e-06, -1.0728830375228426e-06, -9.476689592702314e-05, -5.4596363042946905e-05, -0.00016223068814724684, -0.00010883215873036534, -0.0011079132091253996, -0.00010477947944309562, -0.00040082051418721676, -0.00010477947944309562, -2.169585604860913e-05, -0.0024944401811808348, -0.0002307625545654446, -0.018253441900014877, -0.01841507852077484, -0.000359351426595822, -0.1417848765850067, -2.657575845718384, -0.0035657414700835943, -0.8505081534385681, -0.6734122633934021, -0.6966248750686646, -1.0663800239562988, -0.03564189746975899, -0.3155134916305542, -0.0004503904783632606, -1.775019884109497, -0.0009363081189803779, -0.7679761648178101, -0.04092918336391449, -0.024675725027918816, -9.405170567333698e-05, -0.006437990814447403, -0.002415598137304187, -3.671578815556131e-05, -0.004465014673769474, -0.019784843549132347, -0.017499452456831932, -0.1372503936290741, -0.41703560948371887, -0.001312467036768794, -2.95634672511369e-05, -8.22540732769994e-06, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00015317220822907984, -0.0008197046699933708, -0.03847545385360718, -3.259491205215454, -5.6265202147187665e-05, -0.0015224544331431389, -0.0024452093057334423, -0.26168137788772583, -0.6518152952194214, -0.08544109016656876, -2.4266700744628906, -0.5133413672447205, -0.004675408825278282, -2.215226888656616, -0.014581308700144291, -0.5655860900878906, -0.0002548369811847806, -0.08649352937936783, -0.0008687774534337223, -1.0820674896240234, -0.4502464532852173], "finish_reason": "length"}], "metrics": {"energy": 389.3685245609282, "energy_per_token": 1.5209707990661259, "time": 12.538806, "time_per_token": 0.0489797109375}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n\n    # Check if source directory exists\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"{source_directory.name} does not exist.\")\n\n    # Get all files with specific extensions in source directory\n    files = glob.glob(\n        os.path.join(\n            source_directory,\n            \"*.txt\"\n        )\n    )\n    files.extend(\n        glob.glob(\n            os.path.join(\n                source_directory,\n                \"*.docx\"\n            )\n        )\n    )\n    files.extend(\n        glob.glob(\n            os.path.join(\n                source_directory,\n                \"*.xlsx\"\n            )\n        )\n    )\n    files.extend(\n        glob.glob(\n            os.path.join(\n                source_directory,\n                \"*.csv\"\n            )\n        )\n    )\n\n    # Check if target directory exists\n    if not target_directory", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", ".", "name", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " with", " specific", " extensions", " in", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "\n", "        ", "os", ".", "path", ".", "join", "(", "\n", "            ", "source", "_", "directory", ",", "\n", "            ", "\"", "*", ".", "txt", "\"", "\n", "        ", ")", "\n", "    ", ")", "\n", "    ", "files", ".", "extend", "(", "\n", "        ", "glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "\n", "                ", "source", "_", "directory", ",", "\n", "                ", "\"", "*", ".", "doc", "x", "\"", "\n", "            ", ")", "\n", "        ", ")", "\n", "    ", ")", "\n", "    ", "files", ".", "extend", "(", "\n", "        ", "glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "\n", "                ", "source", "_", "directory", ",", "\n", "                ", "\"", "*", ".", "x", "ls", "x", "\"", "\n", "            ", ")", "\n", "        ", ")", "\n", "    ", ")", "\n", "    ", "files", ".", "extend", "(", "\n", "        ", "glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "\n", "                ", "source", "_", "directory", ",", "\n", "                ", "\"", "*", ".", "csv", "\"", "\n", "            ", ")", "\n", "        ", ")", "\n", "    ", ")", "\n", "\n", "    ", "#", " Check", " if", " target", " directory", " exists", "\n", "    ", "if", " not", " target", "_", "directory"], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -0.345287024974823, -0.0795290619134903, -0.7739521265029907, -0.0005558376433327794, -0.0011535187950357795, -0.0014061573892831802, -0.001593392575159669, -0.0003026265767402947, -0.0008049347088672221, -3.099393507000059e-05, -1.3351351299206726e-05, -0.0003164505760651082, -0.0038168213795870543, -0.4620424509048462, -0.0003524397616274655, -1.8684065341949463, -0.49299970269203186, -0.1783357560634613, -0.34991922974586487, -0.4415566921234131, -0.007995858788490295, -0.12822416424751282, -0.0004631400224752724, -0.010823708958923817, -0.02107558399438858, -0.05247596651315689, -9.179073458653875e-06, -7.271740287251305e-06, -3.349725011503324e-05, -0.09623397141695023, -0.002032240154221654, -0.0018999397289007902, -0.0002786724944598973, -0.009807378053665161, -0.0016780118457973003, -2.5033637939486653e-05, -1.645074735279195e-05, -0.06776486337184906, -0.1853637546300888, -0.07860085368156433, -2.405587673187256, -0.004448043182492256, -8.546940807718784e-05, -0.00021324267436284572, -2.335749626159668, -0.5714362859725952, -0.06813118606805801, -0.3218916058540344, -0.0005038899253122509, -0.005451099947094917, -0.42760056257247925, -0.014630532823503017, -0.00021252757869660854, -0.004356062039732933, -0.01834590919315815, -0.0007382289622910321, -0.2791784107685089, -3.216794967651367, -0.7805756330490112, -0.5492498874664307, -0.9042001366615295, -1.0293887853622437, -0.027627339586615562, -1.254793643951416, -0.821753203868866, -0.07483004033565521, -0.12345021218061447, -0.0006634180317632854, -1.412602424621582, -0.2788337171077728, -0.46690627932548523, -0.00012003655137959868, -0.061368994414806366, -0.0051215640269219875, -3.331669330596924, -0.006861458066850901, -0.5241454243659973, -3.0397906812140718e-05, -7.581423415103927e-05, -9.810443589231e-05, -0.001989886863157153, -0.002039021346718073, -1.9458283185958862, -0.002874292666092515, -0.12537884712219238, -8.451581379631534e-05, -2.8967437174287625e-05, -0.14351524412631989, -0.3657466471195221, -0.0014331794809550047, -0.31325337290763855, -0.7948136329650879, -0.06476966291666031, -0.07833501696586609, -0.06627033650875092, -0.9747840166091919, -0.2536879777908325, -0.04215316101908684, -0.12170278280973434, -0.011762194335460663, -0.0008942657150328159, -0.9124107360839844, -0.18210749328136444, -0.13106432557106018, -0.6531022191047668, -0.004747784696519375, -0.0011812621960416436, -0.8262740969657898, -0.0042868624441325665, -0.002862405963242054, -3.528532761265524e-05, -0.002188075101003051, -0.00014304091746453196, -0.0033884986769407988, -0.0034086955711245537, -0.0009872806258499622, -0.0001559135998832062, -3.2186455882765586e-06, -3.85038583772257e-05, -4.410734163684538e-06, -8.284702198579907e-05, -0.0014944825088605285, -0.000777776469476521, -0.0020882722456008196, -5.7338023907504976e-05, -4.410734163684538e-06, -0.0005128260818310082, -0.0028775022365152836, -0.0004668337933253497, -0.003549467772245407, -0.0051271384581923485, -0.001065401709638536, -0.007142367772758007, -0.0006942722829990089, -0.0003326578007545322, -0.0073685296811163425, -0.003878809744492173, -0.00029940891545265913, -0.00805522408336401, -0.0009484559996053576, -0.0005491655902005732, -0.0007937379996292293, -0.0013604442356154323, -0.00013636612857226282, -0.00034290633630007505, -0.006083779968321323, -0.0005155664402991533, -0.00011550712952157483, -0.00014184899919200689, -5.8887653722194955e-05, -0.0012009082129225135, -0.0007018963224254549, -0.0001255195093108341, -1.0490362910786644e-05, -8.689979586051777e-05, -1.847726889536716e-05, -0.00023457636416424066, -0.00035255891270935535, -2.4437606043647975e-05, -0.00012694983161054552, -1.5497195136049413e-06, -5.1020273531321436e-05, -9.536738616588991e-07, -8.583032467868179e-06, -0.0001746263587847352, -9.452849917579442e-05, -0.00016532962035853416, -2.7417760065873154e-05, -1.311301275563892e-06, -3.58813522325363e-05, -0.00032491172896698117, -0.0001292145170737058, -0.0002498314715921879, -0.0003150205302517861, -0.0003134713042527437, -0.004577870946377516, -0.00016497205069754273, -0.0005741854547522962, -0.0002324311062693596, -0.0010159813100472093, -0.000719645875506103, -3.0874729418428615e-05, -0.0004011779965367168, -9.941560711013153e-05, -3.194758028257638e-05, -7.033100700937212e-05, -0.00017534149810671806, -1.883488948806189e-05, -4.4225667807040736e-05, -0.0018576999427750707, -0.0005719218170270324, -0.00019226610311307013, -0.00015829740732442588, -2.729855441430118e-05, -0.00030524839530698955, -0.0002694958820939064, -4.458328112377785e-05, -7.271740287251305e-06, -3.123234637314454e-05, -9.775113539944869e-06, -0.00011491115583339706, -0.0001578206429257989, -1.2040065485052764e-05, -5.8410845667822286e-05, -9.536738616588991e-07, -1.3589766240329482e-05, -1.0728830375228426e-06, -4.172316494077677e-06, -0.00015901254664640874, -5.9960475482512265e-05, -0.00013183678674977273, -3.2066785934148356e-05, -2.50339189733495e-06, -2.3245540432981215e-05, -0.0002162222663173452, -6.711257447022945e-05, -0.00018571082910057157, -0.00029762129997834563, -0.00011395759065635502, -0.0013860390754416585, -8.976056415122002e-05, -0.0011399445356801152, -0.0006212450098246336, -2.3483953555114567e-05, -0.00024780540843494236, -8.010543388081715e-05, -4.565611743601039e-05, -7.10462118149735e-05, -0.0014112761709839106, -5.721882189391181e-05, -0.00013541258522309363, -0.09458167850971222, -0.0006556744920089841, -0.29391467571258545, -2.1241817474365234, -0.06488597393035889, -0.050365280359983444, -0.02586132101714611, -0.08129805326461792, -0.7450304627418518, -0.0013406822690740228, -0.05271246284246445, -0.023271536454558372, -0.01928812265396118, -3.576272320060525e-06, -7.510157047363464e-06], "finish_reason": "length"}], "metrics": {"energy": 379.5119057025911, "energy_per_token": 1.4824683816507465, "time": 12.730499, "time_per_token": 0.04972851171875}}
{"outputs": [{"text": "try:\n        source_directory = Path(source_directory).resolve().absolute()\n        target_directory = Path(target_directory).resolve().absolute()\n    except FileNotFoundError:\n        return 0\n\n    files = []\n    for file in glob.glob(f\"{source_directory}/**/*.{['txt', 'docx', 'xlsx', 'csv']}\", recursive=True):\n        if not os.path.isfile(file):\n            continue\n        files.append(file)\n\n    if not files:\n        return 0\n\n    for file in files:\n        filename = file.name\n        file_extension = os.path.splitext(filename)[-1]\n        basename = os.path.splitext(filename)[0]\n        basename = os.path.splitext(basename)[0]\n\n        file_path = Path(file)\n        destination = target_directory / file_path.parent\n        destination.mkdir(exist_ok=True, parents=True)\n\n        target_file = destination / f", "tokens": ["try", ":", "\n", "        ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", ".", "absolute", "()", "\n", "        ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", ".", "absolute", "()", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "{", "['", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "']", "}\"", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "continue", "\n", "        ", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " file", ".", "name", "\n", "        ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "[-", "1", "]", "\n", "        ", "bas", "ename", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "0", "]", "\n", "        ", "bas", "ename", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "bas", "ename", ")[", "0", "]", "\n", "\n", "        ", "file", "_", "path", " =", " Path", "(", "file", ")", "\n", "        ", "destination", " =", " target", "_", "directory", " /", " file", "_", "path", ".", "parent", "\n", "        ", "destination", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n", "\n", "        ", "target", "_", "file", " =", " destination", " /", " f"], "logprobs": [-3.1639904975891113, -0.0007563352701254189, -0.005649788770824671, -0.01071768719702959, -0.5258962512016296, -0.034119170159101486, -0.2250504195690155, -0.16134409606456757, -0.1718464493751526, -0.0017922543920576572, -0.008739673532545567, -3.111314072157256e-05, -6.9141146923357155e-06, -0.0015038858400657773, -0.5371057987213135, -0.2767534852027893, -0.028503620997071266, -2.9406230449676514, -0.45280465483665466, -0.0007440659101121128, -0.04608301818370819, -0.2089979648590088, -0.17979244887828827, -0.0008328068652190268, -0.0010842165211215615, -0.0014912686310708523, -0.0030471107456833124, -0.0003259842633269727, -0.002238508081063628, -2.3483953555114567e-05, -1.1444026313256472e-05, -0.0001867835089797154, -0.1515992432832718, -0.011482933536171913, -8.391981828026474e-05, -0.007034890353679657, -0.005303598940372467, -7.819823804311454e-05, -0.027482379227876663, -1.0571537017822266, -0.0019640696700662374, -0.49806126952171326, -5.0424259825376794e-05, -1.7881377516459906e-06, -0.22142450511455536, -0.010823001153767109, -0.0007678897818550467, -2.725541591644287, -0.189531147480011, -0.0021095657721161842, -0.021015236154198647, -0.2577182352542877, -0.0007514513563364744, -3.145019769668579, -1.1687102317810059, -1.271538496017456, -0.03489803522825241, -0.16256557404994965, -0.24143962562084198, -2.1710193157196045, -0.6088937520980835, -0.4848918318748474, -9.047575440490618e-05, -0.606285810470581, -0.033150240778923035, -1.482883334159851, -0.43499755859375, -0.004552120342850685, -0.011093133129179478, -2.90866428258596e-05, -2.8013790142722428e-05, -1.1828711032867432, -0.009122359566390514, -0.04290958121418953, -0.09599672257900238, -1.8777406215667725, -2.4358956813812256, -0.17500704526901245, -0.0015389991458505392, -0.00017653337272349745, -0.15445806086063385, -0.00641584163531661, -0.0012755600037053227, -0.00021395778458099812, -0.0001546025014249608, -0.004087427631020546, -0.003544241189956665, -0.0003589939442463219, -0.0011179156135767698, -0.0005657264264300466, -9.011816291604191e-05, -0.004264784511178732, -0.0017145470483228564, -0.017095116898417473, -0.10840430855751038, -0.004062376916408539, -0.008064801804721355, -0.005691750440746546, -0.0013263961300253868, -0.00393533194437623, -0.004642422776669264, -0.0034426727797836065, -1.4874546527862549, -1.8855023384094238, -0.9100087285041809, -1.5735502529423684e-05, -0.009995879605412483, -0.00021062063751742244, -0.2723981738090515, -0.17400935292243958, -0.00014649749209638685, -0.004220270086079836, -0.036185406148433685, -0.04194170609116554, -0.00044824567157775164, -0.033220697194337845, -0.038328155875205994, -0.07305831462144852, -0.320436954498291, -0.001456272671930492, -0.0008473381749354303, -0.04279811307787895, -0.12847422063350677, -0.012120171450078487, -0.0023329441901296377, -0.13168682157993317, -0.0022136487532407045, -1.2635927200317383, -0.4966808557510376, -0.1876853108406067, -0.004135153256356716, -0.010856137610971928, -0.0002302858338225633, -0.13587145507335663, -0.021193351596593857, -0.0002119316632160917, -0.007389829959720373, -0.03701941668987274, -0.0003152588615193963, -2.1536097526550293, -0.3924667239189148, -0.03178746998310089, -0.046024389564991, -0.008450700901448727, -0.0033376484643667936, -0.010935259982943535, -2.320744752883911, -0.5841099619865417, -1.2384495735168457, -0.019814996048808098, -0.40248656272888184, -0.2980978488922119, -0.021011268720030785, -2.69340443611145, -0.26001229882240295, -1.7744903564453125, -0.0022348209749907255, -2.0450973510742188, -3.0636318115284666e-05, -0.0009775151265785098, -0.0006111184484325349, -0.0011542332358658314, -2.658331868587993e-05, -4.768370445162873e-07, -7.30726242181845e-05, -0.3680099546909332, -1.8427987098693848, -0.007522825617343187, -0.00015054999676067382, -0.07934518158435822, -0.6696180105209351, -0.11973584443330765, -3.7132058143615723, -0.00025948495022021234, -0.19845017790794373, -0.274939626455307, -0.00015805903240107, -8.093983342405409e-05, -0.0018979170126840472, -0.11484181880950928, -6.556489552167477e-06, -4.768370445162873e-07, -0.00019333878299221396, -0.03707019239664078, -0.06422850489616394, -0.002325094770640135, -0.0015944637125357985, -0.04559030756354332, -0.3362228572368622, -3.026024580001831, -0.007971497252583504, -0.7631796598434448, -1.3346115350723267, -0.0006985607906244695, -0.001468295231461525, -0.005278104450553656, -0.7198737859725952, -0.0002196785935666412, -5.960462772236497e-07, -0.0012312696781009436, -0.051205672323703766, -8.21318244561553e-05, -0.21815399825572968, -0.005083729978650808, -0.0010214593494310975, -0.13653339445590973, -1.2354326248168945, -0.004004080779850483, -3.4205288887023926, -0.12109780311584473, -1.5852926969528198, -0.038975924253463745, -0.24459344148635864, -0.0023097521625459194, -0.05917533487081528, -0.009763936512172222, -0.28438514471054077, -0.06704942882061005, -2.8932600021362305, -0.8481814861297607, -0.5735878348350525, -2.4318398573086597e-05, -3.6238969187252223e-05, -0.08781491219997406, -0.5713393092155457, -0.00485977903008461, -0.30878448486328125, -0.023206312209367752, -0.798157811164856, -1.1768388748168945, -0.18982285261154175, -0.42955440282821655, -0.41273242235183716, -0.004384428728371859, -1.1324817933200393e-05, -6.675497570540756e-05, -1.4117295742034912, -8.344646857949556e-07, -2.3483953555114567e-05, -0.0007545484695583582, -0.0004951919545419514, -0.044624797999858856, -0.005102943629026413, -4.184158387943171e-05, -0.000745137978810817, -0.01860056072473526, -0.008340290747582912, -0.31859129667282104, -0.0015424508601427078, -2.897855281829834, -0.17545495927333832, -0.7159954905509949, -0.3112648129463196, -0.2810383439064026, -0.004018447361886501, -0.42590203881263733], "finish_reason": "length"}], "metrics": {"energy": 368.49749028778064, "energy_per_token": 1.439443321436643, "time": 12.729627, "time_per_token": 0.04972510546875}}
{"outputs": [{"text": "# Validate source and target directories\n    source_directory_path = Path(source_directory).resolve()\n    target_directory_path = Path(target_directory)\n\n    if not source_directory_path.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n    if not target_directory_path.is_dir():\n        target_directory_path.mkdir()\n\n    # Get file paths recursively matching the specified extensions\n    extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    file_paths = glob.glob(source_directory_path / '**/*.txt', recursive=True) + \\\n        glob.glob(source_directory_path / '**/*.docx', recursive=True) + \\\n        glob.glob(source_directory_path / '**/*.xlsx', recursive=True) + \\\n        glob.glob(source_directory_path / '**/*.csv', recursive=True)\n\n    # Get file names without extensions\n    original_file_", "tokens": ["#", " Valid", "ate", " source", " and", " target", " directories", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "    ", "if", " not", " target", "_", "directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "()", "\n", "\n", "    ", "#", " Get", " file", " paths", " recurs", "ively", " matching", " the", " specified", " extensions", "\n", "    ", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "txt", "'", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "        ", "glob", ".", "glob", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "doc", "x", "'", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "        ", "glob", ".", "glob", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "x", "ls", "x", "'", ",", " recursive", "=", "True", ")", " +", " \\", "\n", "        ", "glob", ".", "glob", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "csv", "'", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Get", " file", " names", " without", " extensions", "\n", "    ", "original", "_", "file", "_"], "logprobs": [-1.3195747137069702, -3.009018898010254, -0.13189412653446198, -0.8935883641242981, -1.5954281091690063, -0.005044352263212204, -0.37187644839286804, -0.23858097195625305, -0.0042932722717523575, -0.9675408601760864, -0.037410613149404526, -0.35464951395988464, -1.578240156173706, -0.2005351036787033, -0.03127449378371239, -0.04197611287236214, -0.001099935034289956, -0.005133423954248428, -1.4424220353248529e-05, -4.172316494077677e-06, -0.0025506841484457254, -1.2638680934906006, -0.3017086684703827, -0.00896807387471199, -0.06200302019715309, -0.010664732195436954, -0.48960402607917786, -0.0001003691868390888, -0.0012292455649003386, -0.001682177186012268, -0.0008698494057171047, -0.00054058717796579, -0.0008008848526515067, -0.0002797450579237193, -0.0016559947980567813, -3.3378044463461265e-05, -6.079655122448457e-06, -0.00013910756388213485, -1.345813274383545, -1.0527675151824951, -0.0001829695247579366, -0.2964152991771698, -0.047428958117961884, -0.1562647521495819, -3.576272320060525e-06, -1.3112935448589269e-05, -0.0005432083853520453, -9.30981186684221e-05, -0.00014041867689229548, -0.18913517892360687, -0.003418912645429373, -0.005627977661788464, -0.0005343916127458215, -0.02225286141037941, -0.0024346255231648684, -3.6954195820726454e-05, -1.680836794548668e-05, -0.05723007023334503, -0.16125847399234772, -0.080818772315979, -0.20755474269390106, -0.03373544290661812, -1.2274186611175537, -0.002371001522988081, -4.494089080253616e-05, -0.00010859376925509423, -0.2867249846458435, -0.8040124773979187, -0.0009076051646843553, -0.22149920463562012, -0.004728326573967934, -0.0001494772732257843, -0.0027488800697028637, -2.2128422260284424, -0.5136041045188904, -0.11148126423358917, -0.2838681638240814, -5.960462772236497e-07, -1.4305012882687151e-05, -0.0008418591460213065, -2.3245540432981215e-05, -0.0001382732152706012, -1.3398816585540771, -6.687417771900073e-05, -0.07464839518070221, -0.004941631108522415, -0.004491479601711035, -0.0007880204357206821, -0.29960373044013977, -3.731181277544238e-05, -0.00025769727653823793, -0.0017874945187941194, -0.00024005869636312127, -0.00874983612447977, -0.007483780849725008, -0.00015948931104503572, -2.3309478759765625, -0.016342129558324814, -0.08759313076734543, -0.002485878299921751, -0.2115747183561325, -2.280759811401367, -2.266777515411377, -1.8824490308761597, -3.770592212677002, -3.349725011503324e-05, -3.9946274757385254, -0.4582837224006653, -1.2382454872131348, -0.14821432530879974, -0.1808399260044098, -0.0011398254428058863, -1.6152081489562988, -0.09222747385501862, -1.159543514251709, -0.13025204837322235, -0.0022832294926047325, -0.00037245964631438255, -4.911301948595792e-05, -0.005866807885468006, -0.0006582954083569348, -0.00267350603826344, -0.00022384998737834394, -0.0001532914029667154, -6.437280717364047e-06, -0.0014699617167934775, -0.00017212340026162565, -0.001301514101214707, -7.83174327807501e-05, -0.00022480344341602176, -0.00015269544383045286, -1.07287787614041e-05, -0.0016018429305404425, -0.00023409964342135936, -0.00093606993323192, -0.01930566318333149, -0.01704835705459118, -0.025064686313271523, -0.7061685919761658, -0.006955103483051062, -0.07793955504894257, -0.019828086718916893, -1.7808279991149902, -0.0002329078270122409, -0.07378330081701279, -0.007153730373829603, -1.0036718845367432, -4.887569048150908e-06, -3.313963316031732e-05, -0.0319296158850193, -4.410734163684538e-06, -0.188264861702919, -0.22558826208114624, -0.07652962952852249, -0.5950133800506592, -0.7573851943016052, -1.7546298503875732, -0.15022088587284088, -0.005115752574056387, -0.11478209495544434, -0.00312958681024611, -0.0021175360307097435, -0.01596301794052124, -0.39304423332214355, -0.5550288558006287, -3.40932747349143e-05, -1.5818791389465332, -0.0004913791781291366, -4.291525328881107e-06, -0.0009158230968751013, -0.0009513143450021744, -0.0004987664869986475, -1.1324817933200393e-05, -2.3841830625315197e-06, -0.0011926926672458649, -1.1920928244535389e-07, -0.0005732323625124991, -0.00038961926475167274, -0.000654602306894958, -0.0007809926173649728, -0.0007084482349455357, -0.004480086732655764, -0.0002949994814116508, -0.00017152745567727834, -6.258291978156194e-05, -0.0012266262201592326, -6.0437283536884934e-05, -0.00048303857329301536, -0.0005508335889317095, -0.006806166376918554, -0.0030146650969982147, -0.00010275312524754554, -0.0033646184019744396, -2.7894584491150454e-05, -9.381330892210826e-05, -6.05564855504781e-05, -6.794698856538162e-05, -9.548207890475169e-05, -1.9073468138230965e-06, -1.0728830375228426e-06, -6.09140915912576e-05, 0.0, -0.00017712931730784476, -4.255681051290594e-05, -0.0001892864383989945, -5.6622808187967166e-05, -0.00017557987303007394, -0.0015147175872698426, -2.539125671319198e-05, -0.0003093002596870065, -6.09140915912576e-05, -2.407998726994265e-05, -0.0001003691868390888, -1.6331539882230572e-05, -0.001468295231461525, -0.0004215544031467289, -0.0034178432542830706, -0.002427490195259452, -0.0008800924406386912, -0.0013772298116236925, -4.1483970562694594e-05, -0.0002444683632347733, -0.00017105070583056659, -9.464769391342998e-05, -6.83045873302035e-05, -1.4305104514278355e-06, -4.768370445162873e-07, -3.3378546504536644e-06, 0.0, -0.00015293381875380874, -4.5298504119273275e-05, -0.0001820160250645131, -0.00021336186910048127, -0.00014149141497910023, -0.0007964776013977826, -0.00021705655672121793, -0.00018749863374978304, -5.495397272170521e-05, -1.5735502529423684e-05, -0.0022812075912952423, -0.00013147920253686607, -0.005022409372031689, -0.07559984177350998, -0.0003392120997887105, -0.32597535848617554, -3.091775894165039, -1.4452320337295532, -1.0539741516113281, -1.5344090461730957, -0.4635949432849884, -0.32486987113952637, -0.0006909366929903626, -2.5595390796661377, -4.970903682988137e-05, -0.7860903143882751, -0.00020668754586949944], "finish_reason": "length"}], "metrics": {"energy": 432.78672902488705, "energy_per_token": 1.690573160253465, "time": 13.753668, "time_per_token": 0.053725265625}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory '{source_directory}' does not exist.\")\n\n    if target_directory.exists():\n        print(f\"Target directory '{target_directory}' already exists.\")\n        print(\"Use `task_func('./source_folder', './target_folder')` to copy.\")\n        return 0\n\n    files_moved = 0\n\n    for path in source_directory.rglob(\"*.txt\"):\n        destination = target_directory / path.name\n\n        if destination.exists():\n            # If a file with the same name already exists, rename it.\n            base, ext = os.path.splitext(path.name)\n            destination = target_directory / f\"{base}-{files_moved}{ext}\"\n\n            while destination.exists():\n                base, ext = os.path.splitext(destination.name)\n                base, ext =", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "print", "(", "f", "\"", "Target", " directory", " '", "{", "target", "_", "directory", "}'", " already", " exists", ".", "\"", ")", "\n", "        ", "print", "(", "\"", "Use", " `", "task", "_", "func", "('", ".", "/", "source", "_", "folder", "'", ",", " '", ".", "/", "target", "_", "folder", "')", "`", " to", " copy", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " path", " in", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", ".", "txt", "\"", "):", "\n", "        ", "destination", " =", " target", "_", "directory", " /", " path", ".", "name", "\n", "\n", "        ", "if", " destination", ".", "exists", "():", "\n", "            ", "#", " If", " a", " file", " with", " the", " same", " name", " already", " exists", ",", " rename", " it", ".", "\n", "            ", "base", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "path", ".", "name", ")", "\n", "            ", "destination", " =", " target", "_", "directory", " /", " f", "\"", "{", "base", "}-", "{", "files", "_", "m", "oved", "}{", "ext", "}\"", "\n", "\n", "            ", "while", " destination", ".", "exists", "():", "\n", "                ", "base", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "destination", ".", "name", ")", "\n", "                ", "base", ",", " ext", " ="], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -0.345287024974823, -0.0795290619134903, -0.7739521265029907, -0.0005558376433327794, -0.0011535187950357795, -0.0014061573892831802, -0.001593392575159669, -0.0003026265767402947, -0.0008049347088672221, -3.099393507000059e-05, -1.3351351299206726e-05, -0.0003164505760651082, -0.0038168213795870543, -0.4620424509048462, -0.0003524397616274655, -0.3011763095855713, -0.08783074468374252, -0.07011106610298157, -1.9907753085135482e-05, -1.7046782886609435e-05, -5.793403761344962e-05, -0.11361358314752579, -0.0043082283809781075, -0.010082741267979145, -0.0005548844928853214, -0.015187575481832027, -0.002198661444708705, -3.909988299710676e-05, -3.015949550899677e-05, -0.09782387316226959, -0.22211065888404846, -0.10036089271306992, -0.3560299575328827, -0.06054069474339485, -0.9603321552276611, -0.00011443436960689723, -0.002038069535046816, -3.015949550899677e-05, -5.709961988031864e-05, -0.07376138120889664, -0.3962043821811676, -0.00018726025882642716, -0.0009900197619572282, -0.08889048546552658, -0.001960857305675745, -0.00015317220822907984, -0.002480527386069298, -0.037901055067777634, -0.00047136162174865603, -1.9827656745910645, -2.956995964050293, -1.5497195136049413e-06, -7.247662142617628e-05, -0.01923971250653267, -0.22875948250293732, -0.48364076018333435, -0.01102604903280735, -0.002471489831805229, -2.7520391941070557, -0.017930205911397934, -0.40672799944877625, -0.011962814256548882, -0.1758909821510315, -0.006114585790783167, -0.06097349524497986, -0.0001294529065489769, -0.0067070601508021355, -1.3232143828645349e-05, -3.313963316031732e-05, -0.0071495878510177135, -0.20151059329509735, -0.001663373550400138, -0.07336476445198059, -0.1952408403158188, -0.0014148473273962736, -0.002644615015015006, -1.1142566204071045, -2.3670787811279297, -0.007791248150169849, -0.2506195306777954, -4.050226211547852, -3.4366936683654785, -1.728934645652771, -0.9545227885246277, -0.6939465403556824, -0.7127416133880615, -0.3587479591369629, -0.06556790322065353, -0.34439778327941895, -0.05927836149930954, -0.4663848280906677, -0.021304335445165634, -0.0011824527755379677, -0.026076320558786392, -0.0055965641513466835, -0.0014672239776700735, -0.016252174973487854, -0.0012344843707978725, -0.010519059374928474, -0.3319743871688843, -0.055580560117959976, -0.9618797898292542, -4.018549919128418, -2.9849720001220703, -0.021071499213576317, -0.0021033799275755882, -0.009815995581448078, -0.18599869310855865, -0.1283167451620102, -0.27150845527648926, -0.0012972281547263265, -0.023596541956067085, -0.2469039261341095, -0.0008017186191864312, -3.531299114227295, -0.37805402278900146, -0.5784833431243896, -0.0014373458689078689, -0.0324203297495842, -0.03213685005903244, -7.045020902296528e-05, -0.01809927076101303, -0.6081069111824036, -0.0001389883691444993, -0.26187774538993835, -3.2929694652557373, -0.05879795923829079, -0.16303196549415588, -1.2874520507466514e-05, -4.8397800128441304e-05, -4.4225667807040736e-05, -0.13610203564167023, -0.004370423499494791, -0.4463820159435272, -0.026406802237033844, -0.11151996999979019, -0.5914555788040161, -0.17207790911197662, -0.022593699395656586, -0.03196125105023384, -0.03234346583485603, -0.013531981036067009, -3.784945487976074, -0.22366249561309814, -0.5979956388473511, -4.9470632802695036e-05, -9.083335316972807e-05, -0.21393561363220215, -0.48236241936683655, -0.006579048000276089, -0.2138868272304535, -0.04462001100182533, -1.5443195104599, -0.0007134514744393528, -0.2430535852909088, -0.20318129658699036, -0.001534000039100647, -0.07056207209825516, -0.043628111481666565, -0.013217215426266193, -0.0047486149705946445, -2.1254782676696777, -2.218412399291992, -2.1069674491882324, -0.07443960756063461, -0.12498577684164047, -0.05402478203177452, -0.029221342876553535, -0.019070139154791832, -0.31809985637664795, -0.0016648017335683107, -0.27325817942619324, -0.2655315399169922, -0.14814360439777374, -1.3056954145431519, -0.0034057253506034613, -0.0034243774134665728, -3.458456039428711, -0.2510225772857666, -0.4465472400188446, -0.0035251162480562925, -0.0608593113720417, -1.0013530300057027e-05, -0.0003564914222806692, -0.00033063191222026944, -8.106198947643861e-06, -5.328513361746445e-05, -3.576278118089249e-07, -0.00019774865359067917, -0.2904456853866577, -0.027824802324175835, -0.01281773392111063, -0.0006108802044764161, -0.03976476565003395, -0.027426360175013542, -2.888624429702759, -0.10247313231229782, -0.16877318918704987, -0.0004219118563923985, -3.707340147229843e-05, -0.002557937288656831, -0.06710594892501831, -0.018808236345648766, -0.00030894274823367596, -0.001465795561671257, -0.18230997025966644, -0.9258124828338623, -0.20552004873752594, -2.586808113846928e-05, -0.00012981049076188356, -0.00031859567388892174, -0.8785651922225952, -0.0011519708205014467, -0.0037555419839918613, -0.0033428759779781103, -0.23516559600830078, -1.9570293426513672, -0.6201150417327881, -0.02398592233657837, -6.603976362384856e-05, -0.0014522254932671785, -0.0023413882590830326, -0.008007684722542763, -0.0003399271226953715, -0.48145759105682373, -0.0023928838782012463, -0.02506166324019432, -0.008037013001739979, -0.0012415089877322316, -0.0001597276859683916, -2.5510462364763953e-05, -0.0006653240998275578, -0.00024780540843494236, -2.2053474822314456e-05, -1.1920928244535389e-07, -0.0002671123365871608, -0.8227927684783936, -0.002574108075350523, -0.07164081931114197, -0.003333846339955926, -0.0014641289599239826, -0.0036718109622597694, -0.7663953900337219, -0.06143166497349739, -0.4535788595676422, -0.060315582901239395], "finish_reason": "length"}], "metrics": {"energy": 392.1591789398196, "energy_per_token": 1.5318717927336702, "time": 12.720091, "time_per_token": 0.04968785546875}}
{"outputs": [{"text": "counter = 0\n    source_directory = Path(source_directory)\n\n    # Check that source directory exists.\n    if not source_directory.exists():\n        raise FileNotFoundError(\n            f\"Source directory not found: {source_directory}.\")\n\n    # Check that target directory exists and create if it doesn't.\n    target_directory = Path(target_directory).resolve()\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Scan files in source directory recursively and move them to target directory.\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            if file.endswith(\".txt\") or file.endswith(\".docx\") or file.endswith(\".xlsx\") or file.endswith(\".csv\"):\n                filepath = Path(root) / file\n                target_path = target_directory / f\"{filepath.stem}-{counter}.{filepath.suffix}\"\n                if target_path.exists():\n                ", "tokens": ["counter", " =", " ", "0", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "\n", "    ", "#", " Check", " that", " source", " directory", " exists", ".", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\n", "            ", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "directory", "}", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " target", " directory", " exists", " and", " create", " if", " it", " doesn", "'", "t", ".", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Scan", " files", " in", " source", " directory", " recurs", "ively", " and", " move", " them", " to", " target", " directory", ".", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "txt", "\"", ")", " or", " file", ".", "end", "sw", "ith", "(", "\"", ".", "doc", "x", "\"", ")", " or", " file", ".", "end", "sw", "ith", "(", "\"", ".", "x", "ls", "x", "\"", ")", " or", " file", ".", "end", "sw", "ith", "(", "\"", ".", "csv", "\"", "):", "\n", "                ", "file", "path", " =", " Path", "(", "root", ")", " /", " file", "\n", "                ", "target", "_", "path", " =", " target", "_", "directory", " /", " f", "\"", "{", "file", "path", ".", "stem", "}-", "{", "counter", "}", ".", "{", "file", "path", ".", "suff", "ix", "}\"", "\n", "                ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                "], "logprobs": [-3.7619080543518066, -0.07216666638851166, -0.007940630428493023, -0.004678731318563223, -0.06605610996484756, -0.438070148229599, -1.2885404825210571, -0.06537552177906036, -0.37102338671684265, -0.23205320537090302, -0.20135894417762756, -0.002092197770252824, -0.006744240876287222, -3.93382906622719e-05, -6.318072337307967e-06, -0.0013247294118627906, -0.3222667872905731, -2.191990852355957, -0.00031764229061082006, -2.015820264816284, -0.663597047328949, -2.645120620727539, -0.6364079713821411, -0.7708982229232788, -0.01526635605841875, -2.668086290359497, -0.019394876435399055, -0.001495434669777751, -0.04782417044043541, -0.08072750270366669, -0.07481588423252106, -8.34461570775602e-06, -8.583032467868179e-06, -0.00012587709352374077, -0.15189126133918762, -0.006712506990879774, -0.0029900625813752413, -0.0008605591137893498, -0.02122824639081955, -0.0026500842068344355, -4.911301948595792e-05, -2.1815061700181104e-05, -0.0945574939250946, -2.5676844120025635, -0.00566176138818264, -0.14039923250675201, -0.1571934074163437, -0.7087745070457458, -0.05230254679918289, -2.940911054611206, -0.002200921531766653, -0.1155434250831604, -0.050088316202163696, -0.007940157316625118, -0.00010656742961145937, -6.687417771900073e-05, -2.585024356842041, -0.041879404336214066, -0.08936112374067307, -0.3135245442390442, -0.0022046088706701994, -0.052427440881729126, -0.0015657796757295728, -0.49778473377227783, -2.2410292625427246, -0.43334072828292847, -0.14335206151008606, -0.013768108561635017, -0.09304819256067276, -1.7800524234771729, -0.17290255427360535, -2.4942586421966553, -0.5032150149345398, -0.8806475400924683, -0.0009946642676368356, -1.9550132492440753e-05, -0.3125770390033722, -0.0014499637763947248, -0.0007185738068073988, -0.22335533797740936, -0.001525192055851221, -0.006225716322660446, -0.016739267855882645, -0.005971803795546293, -0.00028272447525523603, -0.003781431820243597, -1.0013530300057027e-05, -2.0265558760002023e-06, -0.0005231918767094612, -3.024976968765259, -0.6752060651779175, -0.008164010010659695, -0.08626565337181091, -0.0507822223007679, -3.4884724617004395, -0.000860201776959002, -0.000655793643090874, -1.597391747054644e-05, -7.593343616463244e-05, -5.4238757002167404e-05, -0.027058158069849014, -1.4424220353248529e-05, -7.748573807475623e-06, -0.003820740384981036, -0.007812539115548134, -1.1920928244535389e-07, -3.4927710657939315e-05, -0.0017160940915346146, -0.0009483369067311287, -0.0026290398091077805, -0.038563892245292664, -0.028268862515687943, -0.0003921216703020036, -0.39055362343788147, -1.9123660326004028, -3.619795799255371, -0.4300638437271118, -0.3584749698638916, -0.03322012349963188, -0.9164695143699646, -2.7417760065873154e-05, -2.2448818683624268, -0.38965708017349243, -0.28968673944473267, -0.1166338324546814, -0.09728127717971802, -0.06225575506687164, -0.10272897034883499, -0.0009813260985538363, -0.0024775543715804815, -0.08195966482162476, -1.338069200515747, -0.0037606486584991217, -0.771014392375946, -0.03135675564408302, -0.31746333837509155, -0.0027589849196374416, -0.007892020978033543, -8.749579137656838e-05, -0.00015889335190877318, -0.00011872540198964998, -0.009663351811468601, -2.3007127310847864e-05, -8.34461570775602e-06, -0.10340643674135208, -0.004577158950269222, -0.010555745102465153, -0.09938329458236694, -0.2900445759296417, -0.1738773137331009, -0.17699258029460907, -0.00020287363440729678, -0.003212531330063939, -0.007543057668954134, -0.9095650911331177, -0.5740455389022827, -0.011473623104393482, -0.18805883824825287, -6.603976362384856e-05, 0.0, -0.3115847110748291, -0.8813186883926392, -0.016650989651679993, -0.021221360191702843, -0.0003415954706724733, -0.0184329841285944, -0.023842178285121918, -0.11838451772928238, -8.797258487902582e-05, -0.00014745102089364082, -1.5020257706055418e-05, 0.0, -0.002360892714932561, -0.012907175347208977, -0.0023701691534370184, -0.008497273549437523, -0.0004857790481764823, -4.7444173105759546e-05, -0.005759311839938164, -0.05441954359412193, -0.1831599771976471, -6.949660019017756e-05, -0.00011705666838679463, -3.528532761265524e-05, -1.5497195136049413e-06, -0.0010623055277392268, -0.07841923087835312, -0.0006279165390878916, -0.004768310114741325, -0.0002053765201708302, -0.00036971885128878057, -7.080780778778717e-05, -0.009112436324357986, -0.010318857617676258, -0.012227104045450687, -7.450303382938728e-05, -0.00015448330668732524, -6.186770770000294e-05, -4.768370445162873e-07, -0.00075049843871966, -0.09068655967712402, -0.0004161922261118889, -0.0018154582940042019, -3.71926071238704e-05, -0.007270781323313713, -0.004772581160068512, -0.007353027816861868, -2.052997350692749, -1.870579481124878, -0.01423984207212925, -0.5847601890563965, -0.002547354670241475, -0.1714930236339569, -0.7254124283790588, -0.05201571062207222, -0.020262276753783226, -0.03697001934051514, -0.11322501301765442, -0.995368480682373, -0.060479991137981415, -2.052727699279785, -0.003687251126393676, -1.1066420078277588, -0.00014172980445437133, -2.992108420585282e-05, -0.01149365771561861, -1.2560489177703857, -0.02347055822610855, -0.0036615964490920305, -0.06869739294052124, -0.4027787446975708, -0.0028041587211191654, -0.4088974595069885, -0.10830418765544891, -0.06335882097482681, -0.1265825480222702, -0.8543036580085754, -0.00025054652360267937, -0.004871404729783535, -0.005025849211961031, -0.026886887848377228, -2.2053474822314456e-05, -0.0008799732895568013, -1.2516897186287679e-05, -0.01087205670773983, -0.006948000285774469, -0.5327880382537842, -0.8524958491325378, -0.5093695521354675, -0.0001282609737245366, -0.0028871302492916584, -0.004664611537009478, -0.0271899551153183, -0.006464758887887001, -0.033096153289079666, -0.00043215948971919715], "finish_reason": "length"}], "metrics": {"energy": 371.31771520805347, "energy_per_token": 1.4504598250314589, "time": 12.564832, "time_per_token": 0.049081375}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory.absolute()} does not exist.\")\n    if not target_directory.exists():\n        target_directory.mkdir(parents=True, exist_ok=True)\n    file_extensions = ['txt', 'docx', 'xlsx', 'csv']\n    for file in source_directory.rglob('*.*'):\n        if file.suffix.lower() in file_extensions:\n            target_path = target_directory / file.name\n            if target_path.exists():\n                target_path = target_path.with_name(f\"{file.name}-{str(target_path.stat().st_nlink).zfill(2)}.{file.suffix}\")\n            file.replace(target_path)", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", ".", "absolute", "()}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "file", "_", "extensions", " =", " ['", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "']", "\n", "    ", "for", " file", " in", " source", "_", "directory", ".", "rg", "lob", "('", "*", ".", "*", "')", ":", "\n", "        ", "if", " file", ".", "suff", "ix", ".", "lower", "()", " in", " file", "_", "extensions", ":", "\n", "            ", "target", "_", "path", " =", " target", "_", "directory", " /", " file", ".", "name", "\n", "            ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                ", "target", "_", "path", " =", " target", "_", "path", ".", "with", "_", "name", "(", "f", "\"", "{", "file", ".", "name", "}-", "{", "str", "(", "target", "_", "path", ".", "stat", "()", ".", "st", "_", "nlink", ")", ".", "z", "fill", "(", "2", ")}", ".", "{", "file", ".", "suff", "ix", "}\"", ")", "\n", "            ", "file", ".", "replace", "(", "target", "_", "path", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -0.345287024974823, -0.0795290619134903, -0.7739521265029907, -0.0005558376433327794, -0.0011535187950357795, -0.0014061573892831802, -0.001593392575159669, -0.0003026265767402947, -0.0008049347088672221, -3.099393507000059e-05, -1.3351351299206726e-05, -0.0003164505760651082, -0.0038168213795870543, -0.9946733713150024, -0.4473077654838562, -0.1031767949461937, -0.053345780819654465, -1.9192511899746023e-05, -1.3947389561508317e-05, -0.00011455356434453279, -0.13854555785655975, -0.004980301018804312, -0.013827131129801273, -0.0010371787939220667, -0.013084975071251392, -0.0021221754141151905, -4.970903682988137e-05, -3.8742269680369645e-05, -0.17990906536579132, -0.2712388336658478, -0.13785836100578308, -0.35883456468582153, -0.07223309576511383, -0.7144351601600647, -0.0030589953530579805, -5.304672595229931e-05, -7.259582343976945e-05, -2.946526288986206, -0.44623231887817383, -0.01680256985127926, -0.3287642300128937, -0.000604565953835845, -0.0023005942348390818, -0.13620471954345703, -0.002827458083629608, -0.00024637524620629847, -0.0023253324907273054, -0.8181919455528259, -0.8832141160964966, -0.06217050924897194, -0.26992642879486084, -7.152555099310121e-07, -1.8000440832111053e-05, -5.745722592109814e-05, -0.19797733426094055, -0.00182819040492177, -0.004703766666352749, -0.0011014830088242888, -0.120124951004982, -2.0503786799963564e-05, -7.855583680793643e-05, -0.0027264112140983343, -0.0020524642895907164, -4.935142715112306e-05, -0.09574706107378006, -0.07669414579868317, -0.0020007132552564144, -0.0014063954586163163, -0.7975364327430725, -0.002272525103762746, 0.0, -4.088794958079234e-05, -0.0002498314715921879, -0.009472661651670933, -0.0040364945307374, -0.022358017042279243, -0.6118552088737488, -2.0844621658325195, -0.004114021547138691, -1.7651479244232178, -0.0520753487944603, -1.073712706565857, -1.9162044525146484, -0.0014613912208005786, -0.00011967896716669202, -0.013054147362709045, -0.0025729192420840263, -0.0006579380133189261, -0.00024184639914892614, -1.1324817933200393e-05, -0.002031407319009304, -0.0018344969721511006, -0.00013958434283267707, -0.00038485272671096027, -0.0004101150552742183, -2.1934269170742482e-05, -0.0018352109473198652, -0.001875072019174695, -0.011284693144261837, -0.01987588405609131, -0.14191563427448273, -4.29696798324585, -1.3838231563568115, -0.994793176651001, -0.4677180349826813, -1.7523612768854946e-05, -2.7894584491150454e-05, -1.9550132492440753e-05, -0.26629534363746643, -0.002428798470646143, -0.6075769662857056, -0.07608075439929962, -0.795014500617981, -0.14854133129119873, -0.0035447163973003626, -0.0005133026279509068, -0.05242167040705681, -0.0027632645796984434, -0.3511161208152771, -0.15384723246097565, -0.007310662884265184, -0.5553845763206482, -5.4834770708112046e-05, -0.10844794660806656, -0.08037237077951431, -0.007193380035459995, -0.3571041226387024, -0.007964283227920532, -2.2053474822314456e-05, -1.2755313036905136e-05, -0.08534236252307892, -0.009017103351652622, -0.0025341559667140245, -1.7980512380599976, -0.10318948328495026, -1.6915154457092285, -0.004143700934946537, -0.5933157205581665, -3.71926071238704e-05, -3.540453326422721e-05, -0.08139333873987198, -0.482509970664978, -0.013564793393015862, -0.06861859560012817, -0.036322444677352905, -0.007422133814543486, -0.27817970514297485, -0.16293483972549438, -3.3854863431770355e-05, -0.003201242769137025, -0.0010056205792352557, -0.059880927205085754, -0.03596578538417816, -0.023749401792883873, -0.0013299677520990372, -1.6340419054031372, -0.0036123041063547134, -0.4390224814414978, -0.23199035227298737, -0.4235594570636749, -0.000105375460407231, -0.6176279783248901, -0.002810815814882517, -0.15293192863464355, -8.356221951544285e-05, -0.28969210386276245, -0.016366170719265938, -0.36129456758499146, -0.17578959465026855, -0.0006952252588234842, -0.06934358924627304, -0.0019154074834659696, -0.6288112998008728, -0.08633913844823837, -0.2806393504142761, -1.6021170616149902, -0.006277959793806076, -2.0239455699920654, -0.0001736728590913117, -0.0989646464586258, -0.01798500306904316, -2.2772250175476074, -0.007200717926025391, -0.0003946240758523345, -0.0008917645900510252, -0.00016807096835691482, -1.082930564880371, -0.8224520087242126, -0.023080628365278244, -0.2182861566543579, -6.294052582234144e-05, -0.0001299296854995191, -0.3315795063972473, -0.045875921845436096, -0.12785035371780396, -0.014283442869782448, -0.07996736466884613, -0.005844883155077696, -0.0018423503497615457, -3.71926071238704e-05, -0.19189679622650146, -0.0048418655060231686, -0.007659234572201967, -0.062403157353401184, -2.6563851833343506, -0.043804753571748734, -0.39095985889434814, -4.2199197196168825e-05, -0.034896768629550934, -0.00039104922325350344, -0.0017802356742322445, -2.9990806579589844, -3.814689989667386e-06, -7.152555099310121e-07, -6.365573790390044e-05, -5.936446541454643e-05, -0.26088273525238037], "finish_reason": "stop"}], "metrics": {"energy": 323.4614870891571, "energy_per_token": 1.4249404717584013, "time": 11.060221, "time_per_token": 0.048723440528634365}}
{"outputs": [{"text": "# Check if source directory exists\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source directory not found: {source_directory}\")\n\n    # Get all file paths in source directory\n    files = []\n    for root, dirs, filenames in os.walk(source_directory):\n        for filename in filenames:\n            if filename.endswith(('.txt', '.docx', '.xlsx', '.csv')):\n                files.append(os.path.join(root, filename))\n\n    # Create target directory if it doesn't exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Move files to target directory, renaming if necessary\n    count = 0\n    for filepath in files:\n        base, ext = os.path.splitext(os.path.basename(filepath))\n        new_filename = f\"{base}-{count}{ext}\"\n        new_filepath = os.path.join(target_directory", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Get", " all", " file", " paths", " in", " source", " directory", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " filename", ".", "end", "sw", "ith", "(", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", ":", "\n", "                ", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", "))", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", ",", " ren", "aming", " if", " necessary", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", "path", " in", " files", ":", "\n", "        ", "base", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "path", "))", "\n", "        ", "new", "_", "filename", " =", " f", "\"", "{", "base", "}-", "{", "count", "}{", "ext", "}\"", "\n", "        ", "new", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -0.2650202512741089, -0.31018850207328796, -0.840658962726593, -0.011506502516567707, -0.23302611708641052, -0.002059483202174306, -0.23792125284671783, -0.036746662110090256, -0.06482865661382675, -9.179073458653875e-06, -0.00012683063687290996, -0.0033774496987462044, -0.4461705982685089, -0.00012730741582345217, -0.0021054022945463657, -6.723177648382261e-05, -2.2053474822314456e-05, -0.001004786929115653, -0.0029771076515316963, -0.0005720409681089222, -0.019822711125016212, -0.0018482997547835112, -1.9788545614574105e-05, -1.7762025890988298e-05, -0.10548876225948334, -0.21607987582683563, -0.10139581561088562, -0.3669968247413635, -0.04222847521305084, -2.3786873817443848, -0.0006214833119884133, -0.011607962660491467, -0.01634928397834301, -0.0009296386269852519, -6.329813186312094e-05, -0.00010656742961145937, -0.027879755944013596, -8.356221951544285e-05, -0.003181279404088855, -0.03246418386697769, -0.0008394769974984229, -0.16050833463668823, -2.317671298980713, -1.1460992097854614, -2.5936033725738525, -0.36174696683883667, -0.4844665229320526, -0.768129825592041, -0.04279148951172829, -0.41667863726615906, -0.0003793711948674172, -3.111839771270752, -0.22528834640979767, -2.430851697921753, -0.0020041633397340775, -0.01822207123041153, -0.02691427432000637, -0.522955060005188, -0.0010035961167886853, -0.6073212027549744, -0.00015627116954419762, -5.447716102935374e-05, -0.31816020607948303, -0.0023457887582480907, -4.0649541915627196e-05, -0.00027378625236451626, -0.001759529928676784, -5.245071224635467e-05, -6.365573790390044e-05, -0.00046230596490204334, -0.004939140286296606, -2.062299427052494e-05, -7.271740287251305e-06, -0.05682121217250824, -0.009841020219027996, -0.0008557948167435825, -0.28948622941970825, -0.10054472088813782, -0.00027366707217879593, -0.12418454140424728, -4.6491513785440475e-06, -1.4305104514278355e-06, -4.0649541915627196e-05, -0.0017457258654758334, -0.0008773530134931207, -1.039899230003357, -0.706005871295929, -0.0033324207179248333, -0.33895397186279297, -2.1457441107486375e-05, 0.0, -0.2508782744407654, -0.7024410367012024, -0.023803764954209328, -0.004431784152984619, -0.0012010273057967424, -8.630380034446716e-05, -0.006484420038759708, -0.001862221397459507, -0.0035723934415727854, -0.000284154579276219, -0.00032455421751365066, -3.71926071238704e-05, -0.0013333010720089078, -0.00044371772673912346, -0.001493292162194848, -8.046303264563903e-05, -0.0002233732520835474, -0.0006342306733131409, -9.894321920000948e-06, -0.0013753250241279602, -0.0004267973708920181, -0.0018650771817192435, -0.020369509235024452, -0.004045755136758089, -0.0072873495519161224, -0.00045134371612221, -0.6050100922584534, -0.0004259632551111281, -0.0009497660794295371, -0.003394082421436906, -0.04617977887392044, -4.6967357775429264e-05, -1.6927575416048057e-05, -0.0003953390696551651, -0.005385652184486389, -6.0794889577664435e-05, -0.0025084717199206352, -0.00026079590315930545, -0.0012991330586373806, -0.0012416280806064606, -0.0021130156237632036, -0.01376352272927761, -0.0016331442166119814, -0.0965079739689827, -1.485957384109497, -0.12837514281272888, -0.01710285060107708, -0.04594765231013298, -0.07586695998907089, -0.5930042266845703, -0.00024303820100612938, -1.7762025890988298e-05, -0.03248056769371033, -0.04439596086740494, -0.00015555603022221476, -0.39973941445350647, -0.007235395256429911, -0.0035455478355288506, -1.764281842042692e-05, -8.940656698541716e-06, -3.909988299710676e-05, -0.05966341868042946, -0.00016437610611319542, -0.0009457168052904308, -2.145764938177308e-06, -1.4066597032069694e-05, -0.0010919567430391908, -0.0006724718841724098, -0.0004503904783632606, -0.01952827349305153, -0.00010191874753218144, -0.052219729870557785, -5.483612312673358e-06, -0.00039307496626861393, -3.969590397900902e-05, -0.00043394684325903654, -4.6491513785440475e-06, -5.960446742392378e-06, -0.04249505698680878, -0.0023807534016668797, -0.014576021581888199, -0.0004700509598478675, -0.158963143825531, -0.6213794946670532, -0.05875794216990471, -0.19154496490955353, -0.022973451763391495, -0.010140212252736092, -2.1182491779327393, -1.2216250896453857, -1.7046782886609435e-05, -0.8563606142997742, -0.7285250425338745, -0.02617979608476162, -0.0007138088112697005, -2.2654542922973633, -0.006170507986098528, -0.001073022955097258, -0.06622805446386337, -0.02562396414577961, -0.014647566713392735, -0.027180906385183334, -0.38233745098114014, -2.1058766841888428, -0.0004326361231505871, -0.010785145685076714, -8.487341256113723e-05, -0.00034350217902101576, -0.003568236017599702, -2.5011417865753174, -0.13640859723091125, -0.2373543679714203, -0.0008101756684482098, -0.016777483746409416, -2.0265558760002023e-06, -3.135155202471651e-05, -0.0015462597366422415, -0.0013598490040749311, -5.0424259825376794e-05, -2.3841855067985307e-07, -1.7762025890988298e-05, -1.2343864440917969, -0.0001714082609396428, -1.5616295058862306e-05, -0.00022766382608097047, -0.0012072187382727861, -1.1920928244535389e-07, -8.4638240878121e-06, -0.0004861365014221519, -1.6093124941107817e-05, -0.0004219118563923985, -0.04220767691731453, -0.04777371138334274, -2.079087734222412, -0.08261951059103012, -1.760363221168518, -0.0012330556055530906, -0.8554797768592834, -0.05082561820745468, -0.0013155624037608504, -0.0029143502470105886, -0.14111998677253723, -0.06884874403476715, -0.043683916330337524, -1.1454511880874634, -0.000954649003688246, -0.003534856950864196, -0.053069982677698135, -0.022732380777597427, -0.23622095584869385, -0.015144366770982742, -0.3102768659591675, -0.002394905546680093, -0.00023898606013972312, -0.02372402511537075, -5.960462772236497e-07, -4.172316494077677e-06, -0.00013565097469836473, -0.00016699827392585576, -3.182837463100441e-05, -0.004193916916847229, -1.6689286894688848e-06, -2.8013790142722428e-05], "finish_reason": "length"}], "metrics": {"energy": 401.84188902664187, "energy_per_token": 1.5696948790103198, "time": 12.743007, "time_per_token": 0.04977737109375}}
{"outputs": [{"text": "try:\n        source_directory = Path(source_directory).resolve()\n        target_directory = Path(target_directory)\n    except FileNotFoundError as e:\n        print(\"Source directory not found\", source_directory)\n        return 0\n\n    if not source_directory.is_dir():\n        print(\"Source directory is not a directory\", source_directory)\n        return 0\n\n    if not target_directory.is_dir():\n        target_directory.mkdir(parents=True, exist_ok=True)\n\n    file_names = []\n\n    for root, directories, files in os.walk(source_directory):\n        for file in files:\n            if file.endswith(('.txt', '.docx', '.xlsx', '.csv')):\n                file_names.append(file)\n\n    # Create a list of unique file names from the source directory\n    unique_file_names = [file for file in file_names if file not in file_names[:file_names.index(file)]]\n\n    # Get the name of", "tokens": ["try", ":", "\n", "        ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "        ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Source", " directory", " not", " found", "\"", ",", " source", "_", "directory", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " source", "_", "directory", ".", "is", "_", "dir", "():", "\n", "        ", "print", "(", "\"", "Source", " directory", " is", " not", " a", " directory", "\"", ",", " source", "_", "directory", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " target", "_", "directory", ".", "is", "_", "dir", "():", "\n", "        ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "file", "_", "names", " =", " []", "\n", "\n", "    ", "for", " root", ",", " directories", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "(", "('", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "'))", ":", "\n", "                ", "file", "_", "names", ".", "append", "(", "file", ")", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " unique", " file", " names", " from", " the", " source", " directory", "\n", "    ", "unique", "_", "file", "_", "names", " =", " [", "file", " for", " file", " in", " file", "_", "names", " if", " file", " not", " in", " file", "_", "names", "[:", "file", "_", "names", ".", "index", "(", "file", ")", "]]", "\n", "\n", "    ", "#", " Get", " the", " name", " of"], "logprobs": [-3.1639904975891113, -0.0007563352701254189, -0.005649788770824671, -0.01071768719702959, -0.5258962512016296, -0.034119170159101486, -0.2250504195690155, -0.16134409606456757, -0.1718464493751526, -0.0017922543920576572, -0.008739673532545567, -3.111314072157256e-05, -6.9141146923357155e-06, -0.0015038858400657773, -0.5371057987213135, -0.2767534852027893, -0.028503620997071266, -0.10593096166849136, -0.22239120304584503, -0.26760292053222656, -0.000961913785431534, -0.0009198724874295294, -0.0016330252401530743, -0.0023906242568045855, -0.0002631794777698815, -0.0014153235824778676, -2.658331868587993e-05, -1.3351351299206726e-05, -0.0002203936892328784, -0.9164881110191345, -1.6186673641204834, -0.0021852203644812107, -0.32458117604255676, -6.210611172718927e-05, -2.264974000354414e-06, -1.6673521995544434, -0.25595781207084656, -0.0008510305196978152, -0.005275614093989134, -0.0007518087513744831, -0.3247193694114685, -0.04967278614640236, -1.9849610328674316, -1.4748103618621826, -0.1907745599746704, -0.5513365268707275, -0.0015022194711491466, -3.190021514892578, -0.9358391165733337, -2.8051183223724365, -0.00043108707177452743, -0.0003567297535482794, -0.3589378893375397, -0.006620023399591446, -0.07594198733568192, -0.6245386600494385, -0.3151155114173889, -0.0015918452991172671, -0.01626366749405861, -0.3659364879131317, -0.0009773960337042809, -0.9989777207374573, -0.08703413605690002, -0.5162694454193115, -2.5987286790041253e-05, -0.0001006075763143599, -0.0005018643569201231, -0.7489035725593567, -4.8636207793606445e-05, -0.010164875537157059, -0.01139030046761036, -0.008196289651095867, -0.0009626284008845687, -0.1820504516363144, -0.015605359338223934, -0.23239825665950775, -0.13547499477863312, -0.06479323655366898, -0.4656689763069153, -0.011873877607285976, -0.020206786692142487, -0.14162243902683258, -0.1809312403202057, -0.04771847650408745, -0.003954330459237099, -0.00010632903286023065, -0.0001419681793777272, -0.01714187301695347, -0.0016286217141896486, -0.011057410389184952, -0.006162569858133793, -0.0032447329722344875, -0.00033384948619641364, -0.0008014804334379733, -0.0590653270483017, -0.0011066034203395247, -0.8171854615211487, -0.07276162505149841, -0.03657256066799164, -7.152555099310121e-07, -1.7404405298293568e-05, -0.0002273062855238095, -0.4215885400772095, -3.4570634852570947e-06, -0.033712852746248245, -0.015918787568807602, -0.004081848077476025, -0.0018914919346570969, -0.48753759264945984, -9.226373367710039e-05, -0.00022313489171210676, -0.004730462562292814, -0.0027783624827861786, -0.0001003691868390888, -0.24130553007125854, -0.06563008576631546, -0.0049513583071529865, -0.001675869687460363, -1.2936739921569824, -0.00368095631711185, -2.3841855067985307e-07, -5.364274329622276e-05, -0.0006798578542657197, -0.012408556416630745, -0.005105315707623959, -0.021742550656199455, -0.15157362818717957, -0.0017708349041640759, -1.955985426902771, -0.005514291115105152, -3.1477789878845215, -0.16114138066768646, -0.5096768736839294, -0.06052083522081375, -2.004566192626953, -0.0004667146422434598, -0.27450522780418396, -1.1343836784362793, -0.0038892594166100025, -2.367910861968994, -0.00022873646230436862, -0.34993991255760193, -0.005279527045786381, -0.005134965758770704, -2.0265558760002023e-06, -8.570780482841656e-05, -0.000416907190810889, -0.015911396592855453, -0.00032062159152701497, -5.507317473529838e-05, -0.1248626857995987, -0.012338381260633469, -0.009798997081816196, -0.06582409143447876, -0.24413016438484192, -0.3341347873210907, -0.08195087313652039, -0.00013660451804753393, -0.002442711964249611, -0.004114140290766954, -0.4806709885597229, -0.42483583092689514, -0.02315983735024929, -0.16139034926891327, -6.580135959666222e-05, -2.3841855067985307e-07, -0.2883702218532562, -0.922359824180603, -0.03239297866821289, -0.010207355953752995, -0.002899967832490802, -0.00014959646796341985, -0.015664977952837944, -0.0028279335238039494, -0.007529924623668194, -0.0007189311436377466, -0.0006540066679008305, -0.00014828535495325923, -0.0020537730306386948, -0.0010093123419210315, -0.002510374179109931, -0.00018952481332235038, -0.00043990471749566495, -0.0012180536286905408, -5.507317473529838e-05, -0.0028622872196137905, -0.0008429311565123498, -0.0025395068805664778, -0.029255496338009834, -0.006205339450389147, -0.006095035932958126, -0.00652551744133234, -0.1882236748933792, -0.006676627788692713, -0.37451308965682983, -0.0008298290777020156, -0.0012660353677347302, -0.06475391238927841, -0.4901847541332245, -0.04803097993135452, -0.005686535034328699, -0.04987252131104469, -0.003052458632737398, -3.2288331985473633, -2.837099313735962, -0.6380992531776428, -2.016519069671631, -0.12464265525341034, -2.424978256225586, -0.263982892036438, -0.05618321895599365, -3.615182399749756, -0.09685526043176651, -1.764791488647461, -0.15194420516490936, -0.14627550542354584, -0.003254238748922944, -0.24422046542167664, -0.0004215544031467289, -0.10948821157217026, -0.00032109825406223536, -0.010254199616611004, -0.01705632545053959, -1.7991056442260742, -2.025630474090576, -1.6218976974487305, -0.025795334950089455, -0.04153341054916382, -0.38907116651535034, -0.00012170527770649642, -4.327203714638017e-05, -0.04715050011873245, -0.11359942704439163, -0.10061608254909515, -0.00010907054820563644, -0.11212117969989777, -7.092700980138034e-05, -0.0005779979983344674, -0.3801441192626953, -0.4136162996292114, -0.0014180614380165935, -0.00045158201828598976, -0.0003782987187150866, -0.059954579919576645, -0.007565181702375412, -0.005355653818696737, -0.1810472309589386, -0.013252507895231247, -0.009844208136200905, -0.18213680386543274, -0.00047255316167138517, -0.7897066473960876, -3.483915328979492, -0.25077715516090393, -4.364933013916016, -0.4774128496646881], "finish_reason": "length"}], "metrics": {"energy": 373.2046347808837, "energy_per_token": 1.4578306046128269, "time": 12.539689, "time_per_token": 0.04898316015625}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Source folder not found: {source_directory}\")\n\n    # Create a target folder if it doesn't exist\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    # Find files with the desired extensions\n    files = glob.glob(f\"{source_directory}/**/*.{('txt', 'docx', 'xlsx', 'csv')}\", recursive=True)\n    for file_path in files:\n        file_name = Path(file_path).stem\n        extension = Path(file_path).suffix\n\n        # Create a new file name based on the original name\n        new_file_name = f\"{file_name}-{next_file_index}{extension}\"\n\n        # Move the file to the target folder\n        target_file_path = os.path.join(target_directory, new_file_name)\n        shutil.move(file_path, target_file_path)\n\n        #", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " folder", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Create", " a", " target", " folder", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Find", " files", " with", " the", " desired", " extensions", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", ".", "{", "('", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "')}", "\"", ",", " recursive", "=", "True", ")", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "file", "_", "name", " =", " Path", "(", "file", "_", "path", ")", ".", "stem", "\n", "        ", "extension", " =", " Path", "(", "file", "_", "path", ")", ".", "suff", "ix", "\n", "\n", "        ", "#", " Create", " a", " new", " file", " name", " based", " on", " the", " original", " name", "\n", "        ", "new", "_", "file", "_", "name", " =", " f", "\"", "{", "file", "_", "name", "}-", "{", "next", "_", "file", "_", "index", "}{", "extension", "}\"", "\n", "\n", "        ", "#", " Move", " the", " file", " to", " the", " target", " folder", "\n", "        ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " new", "_", "file", "_", "name", ")", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "file", "_", "path", ")", "\n", "\n", "        ", "#"], "logprobs": [-2.143270969390869, -0.15205387771129608, -0.17443709075450897, -3.313963316031732e-05, -0.0004568248405121267, -0.009653080254793167, -0.49460116028785706, -0.0006469779182225466, -0.01819116808474064, -0.00017450717859901488, -3.290122185717337e-05, -0.0040284208953380585, -0.025144202634692192, -0.0010536124464124441, -0.025640232488512993, -0.0023277110885828733, -3.93382906622719e-05, -3.0278701160568744e-05, -0.12066438049077988, -0.3162775933742523, -0.1585332155227661, -0.5673312544822693, -2.8440494537353516, -1.587557315826416, -0.003437683219090104, -0.04334961995482445, -0.02692042477428913, -0.001257224939763546, -4.160317621426657e-05, -0.00014757021563127637, -0.044164106249809265, -0.00013243274588603526, -0.003726682160049677, -0.12435372918844223, -0.00046075694262981415, -1.9391757249832153, -1.3107326030731201, -3.3195743560791016, -2.041339159011841, -2.291550874710083, -0.06448201835155487, -0.03638394549489021, -0.5995699167251587, -0.0004183370911050588, -1.2993727978027891e-05, -0.05903273820877075, -0.18444544076919556, -0.00044216870446689427, -1.176144003868103, -0.006588995922356844, -0.011327479034662247, -1.07287787614041e-05, -1.9311717551317997e-05, -0.0006293461774475873, -2.1896920204162598, -0.00042572495294734836, -0.0001225396408699453, -0.0031175841577351093, -1.6689286894688848e-06, -2.5629668016335927e-05, -0.006257820874452591, -0.002081967191770673, -0.0009235645993612707, -0.07668741047382355, -0.0003968881501350552, -0.0713479295372963, -6.6756979322235566e-06, -0.0002563863235991448, -4.7801782784517854e-05, -0.001886375597678125, -4.410734163684538e-06, -1.0490362910786644e-05, -0.11947078257799149, -0.0042032948695123196, -0.0218404121696949, -0.0011193446116521955, -0.5827655792236328, -2.683798313140869, -1.453155755996704, -1.2521681785583496, -1.8398849964141846, -2.0285604000091553, -0.07090882956981659, -0.7474097609519958, -0.00041571559268049896, -1.3776276111602783, -0.25667572021484375, -0.20073291659355164, -8.356221951544285e-05, -0.05057699978351593, -0.0071297031827270985, -1.8757766485214233, -0.06162334978580475, -0.0019976201001554728, -0.011020389385521412, -0.0002896366349887103, -1.9311717551317997e-05, -0.6554758548736572, -0.02835148572921753, -0.015324234031140804, -0.023656735196709633, -2.0835516452789307, -1.8009284734725952, -0.07373280823230743, -0.0025969373527914286, -0.000929281348362565, -0.1957741677761078, -0.011134395375847816, -0.0005981324939057231, -0.0004707658663392067, -0.00031001531169749796, -0.005459873471409082, -0.0031305374577641487, -0.0003046525234822184, -0.0009305914281867445, -0.0020393780432641506, -8.082063141046092e-05, -0.0038801159244030714, -0.0008285188814625144, -0.03936807066202164, -0.0005704921204596758, -0.006873889360576868, -0.02056584134697914, -0.001321157906204462, -0.0005585778853856027, -0.0005324853118509054, -0.0011874536285176873, -2.051375389099121, -3.97350811958313, -0.3053988218307495, -2.2887282371520996, -0.22483336925506592, -0.0009951406391337514, -0.005611618980765343, -0.0005725175142288208, -0.0029106654692441225, -0.05715227499604225, -1.5597652196884155, -0.0784272700548172, -0.10571970045566559, -0.17537453770637512, -0.9120159149169922, -0.00013529339048545808, -0.0015806573210284114, -0.00020716428116429597, -1.07287787614041e-05, -0.00033146608620882034, -0.0019035092554986477, -0.6930494904518127, -0.10128249228000641, -0.06807361543178558, -2.3862862586975098, -0.0021598839666694403, -0.057229168713092804, -9.250213042832911e-05, -0.00024863966973498464, -5.960462772236497e-07, -0.0023895539343357086, -8.689979586051777e-05, -1.3947389561508317e-05, -8.701899787411094e-05, -0.003925239201635122, -0.45762380957603455, -0.952224850654602, -0.002268837997689843, -0.12791182100772858, -2.79856538772583, -0.6012662053108215, -0.7798019647598267, -0.20748664438724518, -0.24736842513084412, -2.3185067176818848, -0.0004948345012962818, -0.11305096000432968, -0.2647992670536041, -0.6765705347061157, -1.3264153003692627, -0.00039188333903439343, -0.4904101490974426, -4.2914423829643056e-05, -0.3669566214084625, -0.0070763202384114265, -0.0250663124024868, -0.002333776792511344, -0.08190441876649857, -0.00868129450827837, -0.0009828743059188128, -0.008814118802547455, -0.00019167017308063805, -0.00016199229867197573, -0.06936950236558914, -0.3080741763114929, -2.5410971641540527, -2.3403422832489014, -2.0908098220825195, -0.012651657685637474, -1.1303138732910156, -2.1747348308563232, -0.0024895647075027227, -0.0026008610147982836, -0.003773712320253253, -0.8518975377082825, -0.0016809870721772313, -0.1570531278848648, -0.8901128768920898, -0.12009746581315994, -0.023546593263745308, -0.061896126717329025, -0.06571324914693832, -0.0924234464764595, -1.1534863710403442, -0.30887192487716675, -0.00035768310772255063, -1.3204622268676758, -0.004286150448024273, -0.6716400980949402, -0.1620505303144455, -0.003743665525689721, -0.0003797286772169173, -0.7821813821792603, -1.6689286894688848e-06, -3.9219088648678735e-05, -0.0015814905054867268, -0.0007743220776319504, -6.508615479106084e-05, -0.012302938848733902, -8.702239938429557e-06, -2.1219027985353023e-05, -0.0001674750237725675, -0.02587444707751274, -1.7762025890988298e-05, -1.2159273865108844e-05, -1.728519782773219e-05, -7.402622577501461e-05, -0.001259368029423058, -0.0007135705673135817, -0.039797645062208176, -0.7030632495880127, -2.52720492426306e-05, -2.0265558760002023e-06, -0.013553738594055176, -2.586808113846928e-05, -0.010387995280325413, -0.0003438596613705158, -0.00012754580529872328, -9.107174992095679e-05, -0.001215077005326748, -4.172316494077677e-06, -0.0005036516231484711, -9.536738616588991e-07, -5.245195097813848e-06, -0.04006395488977432, -0.03803073987364769, -0.25043773651123047, -0.3117639124393463, -0.36360085010528564], "finish_reason": "length"}], "metrics": {"energy": 361.318875570297, "energy_per_token": 1.4114018576964726, "time": 12.536179, "time_per_token": 0.04896944921875}}
{"outputs": [{"text": "def clean_name(original_name: str, extension: str, file_names: list):\n        if len(file_names) > 1:\n            for i, name in enumerate(file_names):\n                if not name.lower().startswith(original_name.lower()):\n                    continue\n                file_name = name.split(\"-\")[-1].split(\".\")[-1]\n                if file_name.lower() != extension.lower():\n                    continue\n                new_name = original_name + \"-\" + str(i+1)\n                file_names[file_names.index(name)] = new_name\n                return new_name\n        return original_name\n\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(f\"Directory {source_directory} not found\")\n    source_directory = Path(source_directory).resolve().absolute()\n    target_directory = Path(target_directory).resolve().absolute()\n\n    if not target_directory.exists():\n        target_directory.mk", "tokens": ["def", " clean", "_", "name", "(", "original", "_", "name", ":", " str", ",", " extension", ":", " str", ",", " file", "_", "names", ":", " list", "):", "\n", "        ", "if", " len", "(", "file", "_", "names", ")", " >", " ", "1", ":", "\n", "            ", "for", " i", ",", " name", " in", " enumerate", "(", "file", "_", "names", "):", "\n", "                ", "if", " not", " name", ".", "lower", "()", ".", "start", "sw", "ith", "(", "original", "_", "name", ".", "lower", "()", "):", "\n", "                ", "    ", "continue", "\n", "                ", "file", "_", "name", " =", " name", ".", "split", "(", "\"", "-", "\"", ")", "[-", "1", "]", ".", "split", "(", "\"", ".", "\"", ")", "[-", "1", "]", "\n", "                ", "if", " file", "_", "name", ".", "lower", "()", " ", "!", "=", " extension", ".", "lower", "():", "\n", "                ", "    ", "continue", "\n", "                ", "new", "_", "name", " =", " original", "_", "name", " +", " \"", "-", "\"", " +", " str", "(", "i", "+", "1", ")", "\n", "                ", "file", "_", "names", "[", "file", "_", "names", ".", "index", "(", "name", ")]", " =", " new", "_", "name", "\n", "                ", "return", " new", "_", "name", "\n", "        ", "return", " original", "_", "name", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "source", "_", "directory", "}", " not", " found", "\"", ")", "\n", "    ", "source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", ".", "absolute", "()", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", ".", "absolute", "()", "\n", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "target", "_", "directory", ".", "mk"], "logprobs": [-3.653343677520752, -4.531761169433594, -0.054506465792655945, -1.1054292917251587, -0.037374552339315414, -1.8896745443344116, -0.02859039604663849, -0.07900839298963547, -0.3466518819332123, -0.04255012050271034, -0.9448527693748474, -0.5537081360816956, -0.021583901718258858, -0.013721663504838943, -1.8665310144424438, -3.0524916648864746, -0.04222710430622101, -2.9027395248413086, -0.060740962624549866, -0.23643675446510315, -2.1458005905151367, -0.0069524990394711494, -0.013821017928421497, -2.411336898803711, -2.915907859802246, -0.006777749862521887, -0.04540463909506798, -4.172238186583854e-05, -0.0008590107318013906, -0.014908564276993275, -1.1753407716751099, -0.0021460852585732937, -0.07565101981163025, -0.024136047810316086, -0.026490509510040283, -0.004085171967744827, -1.8062363862991333, -0.5296433568000793, -1.237095832824707, -0.9286518096923828, -0.008099212311208248, -0.0022515917662531137, -0.003352024592459202, -0.022564563900232315, -8.046303264563903e-05, -0.0002768848498817533, -0.230726957321167, -0.0035893793683499098, -0.0014106809394434094, -0.575230598449707, -3.263529062271118, -0.5613100528717041, -0.10901594907045364, -2.280590295791626, -0.0014180614380165935, -0.10081646591424942, -0.562970757484436, -1.823885577323381e-05, 0.0, -0.02325802482664585, -0.47221773862838745, -8.797258487902582e-05, -0.000263894529780373, -0.16168458759784698, -0.007658170070499182, -0.03765517473220825, -0.18601097166538239, -0.012452943250536919, -0.00019751029321923852, -0.0006333967321552336, -0.6360971927642822, -0.0061088986694812775, -0.055736277252435684, -2.7506532669067383, -0.02605692483484745, -0.9986251592636108, -0.4309234023094177, -0.9404497146606445, -0.5587689280509949, -1.1743489503860474, -0.7681146264076233, -0.6376898884773254, -1.6184383630752563, -0.040048953145742416, -0.4613359570503235, -0.45236682891845703, -0.006288621574640274, -0.022695090621709824, -0.9845961332321167, -0.2691803574562073, -0.017177028581500053, -0.06271636486053467, -0.003978434018790722, -0.0006856950931251049, -1.3126497268676758, -0.7604870200157166, -0.006152262445539236, -0.0044939713552594185, -0.10038784891366959, -0.005678119137883186, -0.1707165539264679, -0.17060719430446625, -8.356221951544285e-05, -0.0025657848455011845, -1.0960493087768555, -0.05007697641849518, -0.0007730118231847882, -1.4366893768310547, -3.576278118089249e-07, -1.6331539882230572e-05, -0.02395368367433548, -0.1685742884874344, -0.003890684340149164, -0.011402439326047897, -0.003765755333006382, -0.00013028726971242577, -0.00032455421751365066, -0.22261402010917664, -0.0015730400336906314, -0.0306853037327528, -3.1653990745544434, -0.0022561114747077227, -0.07675652951002121, -0.010232960805296898, -1.6723248958587646, -9.440929716220126e-05, -0.00011884459672728553, -0.06304962188005447, -0.5310784578323364, -0.01683046855032444, -0.04644075408577919, -0.006053683813661337, -0.18056181073188782, -0.006420342717319727, -0.026427004486322403, -1.4287350177764893, -0.009612701833248138, -0.005221302155405283, -2.105788469314575, -0.01893363893032074, -1.208176851272583, -0.008876034989953041, -0.04853963479399681, -0.5301329493522644, -0.4765186905860901, -4.017272294731811e-05, -0.00640849769115448, -0.000226472009671852, -0.0002824861148837954, -0.0007645544828847051, -0.04341742396354675, -0.0027186835650354624, -0.0035570701584219933, -0.06924948841333389, -0.0001264730526600033, -2.5152843591058627e-05, -0.021718405187129974, -1.8090763092041016, -0.5980714559555054, -0.530425488948822, -0.0007782529573887587, -4.8636207793606445e-05, -0.037529341876506805, -0.2166367769241333, -0.19407424330711365, -0.9192401766777039, -5.6503606174374e-05, -7.676783570786938e-05, -0.030164705589413643, -0.07133261114358902, -0.0005657264264300466, -1.8001621961593628, -0.13890822231769562, -0.20801271498203278, -2.8132995794294402e-05, -0.0003937899600714445, -6.210611172718927e-05, -0.6198412775993347, -0.0004119024670217186, -0.027757903560996056, -0.0002731903805397451, -6.90197994117625e-05, -0.01039731502532959, -0.015370252542197704, -0.0021647608373314142, -0.018516074866056442, -0.0047646318562328815, -9.822363062994555e-05, -6.270212179515511e-05, -0.15427927672863007, -0.4931705594062805, -0.09661047160625458, -2.290741443634033, -0.6983187794685364, -0.00211658445186913, -7.974783511599526e-05, -0.00016234986833296716, -0.019958853721618652, -0.6149314045906067, -0.005162717774510384, -1.2356096506118774, -0.0002935693773906678, -0.0013503251830115914, -1.4497734308242798, -1.0529990196228027, -0.0739208236336708, -0.2125275582075119, -0.041346874088048935, -0.11592408269643784, -0.0014379409840330482, -0.005652515217661858, -2.276871418871451e-05, -7.152531907195225e-06, -0.001561851822771132, -1.0254219770431519, -0.34589824080467224, -0.00462581031024456, -2.5673844814300537, -0.7872874736785889, -0.0008611546363681555, -0.0709400326013565, -0.11237306892871857, -0.21950802206993103, -0.0035283234901726246, -0.0019883401691913605, -0.0036292895674705505, -0.008870481513440609, -0.00028010259848088026, -0.0016861044568940997, -5.030505417380482e-05, -3.3378546504536644e-06, -0.0002225389762315899, -0.022416766732931137, -0.023388927802443504, -5.07818695041351e-05, -0.012669903226196766, -0.003054716857150197, -0.00014602071314584464, -0.021270843222737312, -1.2520134449005127, -0.00025722055579535663, -1.1808149814605713, -0.07885009050369263, -0.32772430777549744, -1.4305104514278355e-06, -1.0609570381348021e-05, -0.00010716341057559475, -0.08262840658426285, -0.0029763944912701845, -0.004031151533126831, -0.0018043918535113335, -0.3314421474933624, -6.425174069590867e-05, -0.0002044230350293219, -0.0007888542604632676, -0.002499791095033288], "finish_reason": "length"}], "metrics": {"energy": 373.09171710777304, "energy_per_token": 1.4573895199522384, "time": 12.5046015, "time_per_token": 0.048846099609375}}
{"outputs": [{"text": "# Create the target directory if it does not exist\n    Path(target_directory).mkdir(parents=True, exist_ok=True)\n\n    # List all files in the source directory\n    source_files = glob.glob(f\"{source_directory}/*.txt*\") + glob.glob(f\"{source_directory}/*.docx*\") + glob.glob(f\"{source_directory}/*.xlsx*\") + glob.glob(f\"{source_directory}/*.csv*\")\n\n    # Check if source_directory exists\n    if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"{source_directory} is not a directory\")\n\n    # Move files to target directory\n    moved_count = 0\n    for source_file in source_files:\n        # Get the destination path\n        destination_path = Path(target_directory, Path(source_file).name)\n\n        # Check if there is a duplicate\n        if os.path.isfile(destination_path):\n            # Get the extension\n", "tokens": ["#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "Path", "(", "target", "_", "directory", ")", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " source", " directory", "\n", "    ", "source", "_", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "txt", "*", "\"", ")", " +", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "doc", "x", "*", "\"", ")", " +", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "x", "ls", "x", "*", "\"", ")", " +", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "csv", "*", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "#", " Get", " the", " destination", " path", "\n", "        ", "destination", "_", "path", " =", " Path", "(", "target", "_", "directory", ",", " Path", "(", "source", "_", "file", ")", ".", "name", ")", "\n", "\n", "        ", "#", " Check", " if", " there", " is", " a", " duplicate", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "destination", "_", "path", "):", "\n", "            ", "#", " Get", " the", " extension", "\n"], "logprobs": [-1.3195747137069702, -2.593564033508301, -1.11931312084198, -0.04088684171438217, -0.06959525495767593, -0.05997748300433159, -0.01564796082675457, -0.4079470634460449, -0.00023326536756940186, -0.013250037096440792, -0.1911619007587433, -0.0006320862448774278, -0.6527845859527588, -0.0016312400111928582, -0.0034716594964265823, -1.0967194612021558e-05, -7.319182623177767e-05, -0.0002531684876885265, -0.00010680581908673048, -0.010115784592926502, -3.158996332786046e-05, -0.00013267113536130637, -0.04431864246726036, -0.00043990471749566495, -0.0010286045726388693, -0.000494715350214392, -0.0021943794563412666, 0.0, -4.088794958079234e-05, -0.0002526917669456452, -0.0006059955921955407, -0.0004325169720686972, -0.009286778047680855, -0.0705484077334404, -0.0004325169720686972, -0.3325883448123932, -2.9796135425567627, -0.6275067925453186, -0.20782089233398438, -0.5607836246490479, -0.10937003791332245, -0.0342828705906868, -0.013850527815520763, -0.743700385093689, -0.0004714807728305459, -0.5771413445472717, -0.0020157035905867815, -0.15420204401016235, -0.026270488277077675, -0.43891486525535583, -0.0001597276859683916, -0.0385611392557621, -0.0314432829618454, -2.2479803562164307, -0.36824819445610046, -0.004618216305971146, -0.017010502517223358, -4.494089080253616e-05, -1.5139465176616795e-05, -0.3488693833351135, -0.05420524254441261, -0.18083703517913818, -0.42026761174201965, -2.234401226043701, -0.14430217444896698, -0.1835211217403412, -0.7128762602806091, -0.3884012997150421, -2.253030106658116e-05, -0.001987031428143382, -0.0005402297829277813, -0.022371772676706314, -0.0003175231395289302, -0.0001679517881711945, -0.0002002515539061278, -6.6756979322235566e-06, -2.3841830625315197e-06, -0.001958001870661974, -8.83301836438477e-05, -0.0014452022733166814, -0.024522192776203156, -0.006743411999195814, -0.006580942776054144, -0.00028784899041056633, -0.00522580835968256, -0.12522603571414948, -0.2319217175245285, -0.001543165068142116, -0.001036583329550922, -0.0003808011533692479, -0.14040927588939667, -0.00016068121476564556, -7.295342220459133e-05, -0.00013672371278516948, -6.794906312279636e-06, -8.344646857949556e-07, -0.00036816971260122955, -7.390948667307384e-06, -0.0004553949984256178, -0.003185438457876444, -0.00017009719158522785, -0.0020217709243297577, -0.0004968600696884096, -0.0002244459028588608, -0.0016124354442581534, -0.00442027160897851, -0.004621183034032583, -0.00017629499780014157, -0.0004976941272616386, -0.00025090406415984035, -0.0003066784702241421, -3.0040289857424796e-05, -6.031808152329177e-05, -8.463501580990851e-05, -1.168244216387393e-05, -9.536738616588991e-07, -0.0003301552205812186, -1.3947389561508317e-05, -0.00019727191829588264, -0.0012303171679377556, -0.00433362927287817, -0.0002960720448754728, -0.00035553809721022844, -0.021147016435861588, -0.1094709038734436, -0.0005765683017671108, -0.18707625567913055, -2.483600616455078, -0.07838836312294006, -0.9934592247009277, -0.8811888694763184, -0.03559738025069237, -0.029989570379257202, -0.09733892977237701, -0.0004961451631970704, -0.05586705356836319, -0.08294565975666046, -0.07641389220952988, -3.4570634852570947e-06, -0.00017045476124621928, -5.2569914259947836e-05, -1.6450495719909668, -0.002753754146397114, -6.41325386823155e-05, -0.0022425521165132523, -4.0531076592742465e-06, -0.00045110538485459983, -0.0023273543920367956, -0.002595986006781459, -0.0010729038622230291, -0.013926592655479908, -0.0015549485106021166, -1.7881233361549675e-05, -2.2053474822314456e-05, -0.05563265457749367, -0.20082136988639832, -0.029005050659179688, -0.7578960657119751, -0.0018256916664540768, -3.111314072157256e-05, -0.0003010773507412523, -0.011348223313689232, -2.316458225250244, -0.01324086170643568, -0.015047257766127586, -0.6776059865951538, -1.0662397146224976, -0.00016759421851020306, -0.001506028464064002, -0.027720335870981216, -0.0008903353591449559, -0.19106747210025787, -1.5986405611038208, -0.3040628135204315, -0.24220603704452515, -1.0194804668426514, -0.1085209995508194, -0.24866268038749695, -0.0023369877599179745, -1.0904027223587036, -0.03415384516119957, -0.04415315389633179, -2.172614812850952, -0.002422495512291789, -0.0036334467586129904, -9.583967766957358e-05, -0.009015803225338459, -0.08790192753076553, -0.04521927982568741, -0.9696167707443237, -0.030264290049672127, -0.04474050924181938, -0.01234273798763752, -0.0063419281505048275, -3.969590397900902e-05, -2.169585604860913e-05, -0.00013696208770852536, -0.00218129507265985, -0.01862758956849575, -1.1271798610687256, -0.6704598665237427, -0.32972946763038635, -4.062450408935547, -0.9780299663543701, -1.0758452415466309, -0.0009784678695723414, -1.027106761932373, -0.4588925540447235, -0.246360182762146, -0.004941631108522415, -0.9475389122962952, -0.002795005217194557, -0.597058117389679, -1.680836794548668e-05, -0.0001232548092957586, -2.6890878677368164, -0.5379273295402527, -0.0021956877317279577, -0.011801308952271938, -2.6702524337451905e-05, -0.0009993088897317648, -0.004035425838083029, -4.207999518257566e-05, -0.32786816358566284, -0.022417116910219193, -0.10102951526641846, -0.3411187529563904, -0.0006575806182809174, -0.045349959284067154, -0.4332329034805298, -0.04265202209353447, -3.227957248687744, -0.6505547761917114, -0.22138294577598572, -1.2685896158218384, -1.8893394470214844, -0.0006089740199968219, -0.48677143454551697, -0.25910985469818115, -8.583032467868179e-06, -3.516612196108326e-05, -0.00037305548903532326, -2.35738468170166, -0.003208491252735257, -0.00023052419419400394, -0.022755103185772896, -2.276871418871451e-05, -4.768370445162873e-07, -0.14521758258342743, -0.007203913759440184, -0.012132537551224232, -0.25384169816970825, -0.9095602035522461, -0.1410609781742096, -1.968764066696167, -1.4152742624282837], "finish_reason": "length"}], "metrics": {"energy": 361.7902344932555, "energy_per_token": 1.4132431034892794, "time": 12.524469, "time_per_token": 0.04892370703125}}
{"outputs": [{"text": "# Ensure source directory exists\n    source_directory_path = Path(source_directory)\n    if not source_directory_path.is_dir():\n        raise FileNotFoundError(f\"{source_directory} is not a valid directory.\")\n\n    # Find all files matching the extension criteria in the source directory\n    files = glob.glob(str(source_directory_path / '**/*.txt'), recursive=True)\n    files.extend(glob.glob(str(source_directory_path / '**/*.docx'), recursive=True))\n    files.extend(glob.glob(str(source_directory_path / '**/*.xlsx'), recursive=True))\n    files.extend(glob.glob(str(source_directory_path / '**/*.csv'), recursive=True))\n\n    # Calculate the number of files to move and the next available index to avoid naming conflicts\n    total_files = len(files)\n    target_directory_path = Path(target_directory)\n\n    if not target_directory_path.exists():\n        target_directory_path.mkdir(parents", "tokens": ["#", " Ensure", " source", " directory", " exists", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " matching", " the", " extension", " criteria", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "str", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "txt", "')", ",", " recursive", "=", "True", ")", "\n", "    ", "files", ".", "extend", "(", "glob", ".", "glob", "(", "str", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "doc", "x", "')", ",", " recursive", "=", "True", "))", "\n", "    ", "files", ".", "extend", "(", "glob", ".", "glob", "(", "str", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "x", "ls", "x", "')", ",", " recursive", "=", "True", "))", "\n", "    ", "files", ".", "extend", "(", "glob", ".", "glob", "(", "str", "(", "source", "_", "directory", "_", "path", " /", " '", "**", "/*", ".", "csv", "')", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "#", " Calculate", " the", " number", " of", " files", " to", " move", " and", " the", " next", " available", " index", " to", " avoid", " naming", " conflicts", "\n", "    ", "total", "_", "files", " =", " len", "(", "files", ")", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "if", " not", " target", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "(", "parents"], "logprobs": [-1.3195747137069702, -3.731365203857422, -0.5923218727111816, -1.072371006011963, -0.02964198589324951, -0.15932387113571167, -0.001111961784772575, -1.2760627269744873, -0.01604713499546051, -0.230899378657341, -1.7560768127441406, -0.13938255608081818, -0.023332446813583374, -0.027942240238189697, -0.0013565156841650605, -0.005178965162485838, -2.47952248173533e-05, -5.722029527532868e-06, -0.001261273049749434, -0.3174510896205902, -0.0120074562728405, -0.02969140000641346, -0.0342404767870903, -0.03478820249438286, -1.8715683836489916e-05, -7.867782187531702e-06, -0.00045110538485459983, -1.2874520507466514e-05, -3.3854863431770355e-05, -1.7081658840179443, -2.50339189733495e-06, -0.02793690748512745, -0.0024341498501598835, -0.00262785074301064, -0.0005781171494163573, -0.02473759651184082, -0.0027006128802895546, -3.886147169396281e-05, -1.1801649634435307e-05, -0.05671973526477814, -0.15377189218997955, -0.08384507149457932, -1.8180769681930542, -0.002696927171200514, -8.856858039507642e-05, -0.00022635281493421644, -0.09079499542713165, -0.5181753635406494, -0.006537715904414654, -0.0128256194293499, -0.9457613229751587, -0.06317396461963654, -0.5034509897232056, -0.009263982996344566, -0.00029023250681348145, -0.003578332718461752, -0.0405629426240921, -0.000840906286612153, -0.078356072306633, -3.855480194091797, -0.6773166656494141, -0.578347384929657, -2.259873390197754, -0.3572733402252197, -2.9233627319335938, -2.842989921569824, -1.9001615047454834, -0.2702885866165161, -0.02169332653284073, -0.019541366025805473, -0.09645417332649231, -0.0007676515378989279, -2.259422540664673, -0.6853710412979126, -0.5270515084266663, -9.870042413240299e-05, -0.05676264688372612, -0.00513045908883214, -2.0379693508148193, -0.0050263237208127975, -0.046353694051504135, -3.0517112463712692e-05, -7.152531907195225e-06, -0.009286069311201572, -3.576278118089249e-07, -0.31609711050987244, -1.0950549840927124, -0.770408570766449, -0.6976122856140137, -0.05276131629943848, -0.10246431082487106, -0.6041489243507385, -0.0065186480060219765, -0.01035295519977808, -0.003953974228352308, -0.001176023157313466, -0.0033528562635183334, -0.7994662523269653, -0.24411709606647491, -0.38665515184402466, -1.2062183618545532, -0.008633077144622803, -0.0012967520160600543, -0.007486620452255011, -1.4066597032069694e-05, -0.0008033862104639411, -0.0008860476082190871, -0.0033949140924960375, -3.790783375734463e-05, -0.000701658078469336, -4.0531076592742465e-06, -1.7881377516459906e-06, -0.0009996660519391298, 0.0, -0.0005281960475258529, -0.0008415018673986197, -0.000811366830021143, -0.0006455483380705118, -0.0007619338575750589, -0.014221626333892345, -0.00031668893643654883, -0.0010626628063619137, -8.821098163025454e-05, -0.0009440494468435645, -9.417090768693015e-05, -0.0005949157639406621, -0.0009091534884646535, -0.0019973821472376585, -0.0008488865569233894, -0.00048387263086624444, -3.1470757676288486e-05, -2.9801878554280847e-05, -1.585470999998506e-05, -0.0001629458274692297, -2.7417760065873154e-05, -8.332382276421413e-05, -0.00014101465058047324, -0.00010084597306558862, -8.583032467868179e-06, -4.875540980719961e-05, -2.145764938177308e-06, -4.768370445162873e-07, -0.0007308434578590095, 0.0, -9.655486064730212e-05, -7.402622577501461e-05, -8.95221673999913e-05, -4.076874756719917e-05, -0.0001578206429257989, -0.00344279152341187, -8.272782724816352e-05, -0.0002658013836480677, -0.00016616393986623734, -2.932505594799295e-05, -4.756337511935271e-05, -2.50339189733495e-06, -0.0007359656738117337, -2.682172998902388e-05, -9.035655966727063e-05, -0.0005955114611424506, -0.0003097769513260573, -0.00010978573118336499, -4.303362584323622e-05, -2.539125671319198e-05, -7.116541382856667e-05, -7.247662142617628e-05, -5.829164365422912e-05, -0.00010609064338495955, -2.777537883957848e-05, -6.079655122448457e-06, -2.2291887944447808e-05, -1.9073468138230965e-06, -7.152555099310121e-07, -0.00012134769349358976, 0.0, -6.794698856538162e-05, -4.482168878894299e-05, -0.00011014331539627165, -7.760223525110632e-05, -6.282132380874828e-05, -0.0011156531982123852, -0.00015054999676067382, -0.00017414960893802345, -4.935142715112306e-05, -4.0531076592742465e-06, -0.0014207994099706411, -4.935142715112306e-05, -0.0005920564290136099, -0.07403795421123505, -0.00037353215157054365, -0.22978514432907104, -4.18942403793335, -0.6284356117248535, -1.117561936378479, -0.003160246182233095, -0.2969606816768646, -0.7458434700965881, -0.6898384690284729, -2.7260937690734863, -1.4594740867614746, -4.22674560546875, -0.4769977331161499, -1.2523298263549805, -2.657221555709839, -2.9135167598724365, -0.5364313721656799, -0.052272453904151917, -0.044153496623039246, -0.0015279296785593033, -2.6452279090881348, -0.039029236882925034, -0.22475814819335938, -0.131972074508667, -0.007264035288244486, -0.0010336062405258417, -0.0018779276870191097, -0.00013362467871047556, -0.0030783668626099825, -0.031843360513448715, -1.7742235660552979, -0.008595730178058147, -0.2016083300113678, -0.013500815257430077, -0.005238734185695648, -0.001292465953156352, -0.0014144902816042304, -0.00030763185350224376, -0.0028851095121353865, -9.775113539944869e-06, -5.722029527532868e-06, -0.0005265279905870557, -0.040323443710803986, -2.448129415512085, -0.000366263062460348, -0.743597686290741, -0.15040931105613708, -0.032628729939460754, -1.1920922133867862e-06, -1.0847986231965479e-05, -0.000602421467192471, -3.635817120084539e-05, -5.745722592109814e-05, -0.8896289467811584, -0.003038672497496009, -0.010845288634300232, -0.002428084844723344, -0.3311341106891632, -1.847726889536716e-05, -0.00032658010604791343, -0.0002416080387774855, -0.00011145447206217796, -0.0013136576162651181, -0.0007520469953306019, -1.8358061424805783e-05, -0.1259007304906845, -0.026416555047035217], "finish_reason": "length"}], "metrics": {"energy": 362.243919418335, "energy_per_token": 1.415015310227871, "time": 12.748101, "time_per_token": 0.04979726953125}}
{"outputs": [{"text": "def __find_files(src_dir):\n        for file_path in Path(src_dir).rglob(\"*\"):\n            if file_path.is_file() and \\\n               any(extension in file_path.suffix for extension in ['.txt', '.docx', '.xlsx', '.csv']):\n                yield file_path\n\n    try:\n        files = __find_files(source_directory)\n    except FileNotFoundError:\n        print(f'Error: Directory \"{source_directory}\" does not exist.')\n        return 0\n\n    src_dir = os.path.abspath(source_directory)\n    target_dir = os.path.abspath(target_directory)\n\n    try:\n        os.makedirs(target_dir, exist_ok=True)\n    except FileExistsError:\n        pass\n\n    count = 0\n\n    for file in files:\n        src_path = file.relative_to(src_dir)\n        dst_path = Path(target_dir) / src_path.", "tokens": ["def", " __", "find", "_", "files", "(", "src", "_", "dir", "):", "\n", "        ", "for", " file", "_", "path", " in", " Path", "(", "src", "_", "dir", ")", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "            ", "if", " file", "_", "path", ".", "is", "_", "file", "()", " and", " \\", "\n", "               ", "any", "(", "extension", " in", " file", "_", "path", ".", "suff", "ix", " for", " extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "):", "\n", "                ", "yield", " file", "_", "path", "\n", "\n", "    ", "try", ":", "\n", "        ", "files", " =", " __", "find", "_", "files", "(", "source", "_", "directory", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "f", "'", "Error", ":", " Directory", " \"", "{", "source", "_", "directory", "}\"", " does", " not", " exist", ".", "')", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "src", "_", "dir", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "except", " File", "Exists", "Error", ":", "\n", "        ", "pass", "\n", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "src", "_", "path", " =", " file", ".", "relative", "_", "to", "(", "src", "_", "dir", ")", "\n", "        ", "dst", "_", "path", " =", " Path", "(", "target", "_", "dir", ")", " /", " src", "_", "path", "."], "logprobs": [-3.653343677520752, -4.266895294189453, -3.542088270187378, -0.020134704187512398, -1.3217153549194336, -0.35755544900894165, -3.3533804416656494, -0.5237259268760681, -0.5795177221298218, -2.2928617000579834, -0.024089034646749496, -0.014653440564870834, -2.9405460357666016, -1.9689570665359497, -0.9744023084640503, -0.8306536078453064, -0.009251818060874939, -0.39928707480430603, -0.0035333128180354834, -0.005416835192590952, -4.637133679352701e-05, -0.00024077377747744322, -0.001116367639042437, -4.589452510117553e-05, -0.38478416204452515, -0.005702299997210503, -0.571353554725647, -0.11708979308605194, -0.11342746019363403, -0.7159263491630554, -0.0037265634164214134, -0.033588483929634094, -0.0057542151771485806, -0.25932565331459045, -0.08938128501176834, -0.00018749863374978304, -0.0007351318490691483, -0.0002588890492916107, -0.045039355754852295, -5.245195097813848e-06, -0.030089981853961945, -0.6741934418678284, -0.017399877309799194, -3.095888137817383, -0.0001456631434848532, -0.9661865234375, -1.778451681137085, -0.22141514718532562, -1.9510276317596436, -0.1477036476135254, -0.4411679804325104, -0.0007606235449202359, -0.013399076648056507, -0.0013443727511912584, -1.377854824066162, -4.386805812828243e-05, -0.1295202672481537, -0.001536618685349822, -0.0030878742691129446, -1.8069689273834229, -0.13295726478099823, -0.0036984155885875225, -0.00034409802174195647, -0.0002791491860989481, -0.04247951880097389, -0.006076314952224493, -0.010163105092942715, -0.0005769256968051195, -0.00010215714428341016, -5.972207145532593e-05, -0.01242727693170309, -0.0011841197265312076, -0.002419284777715802, -0.0002644904307089746, -0.0006268443539738655, -0.00022539935889653862, -0.00010358751023886725, -0.005725057329982519, -0.00036197309964336455, -0.0016655157087370753, -0.017847418785095215, -0.0034857960417866707, -0.009912551380693913, -0.006380188278853893, -0.1873801350593567, -0.05438984930515289, -8.761498611420393e-05, -2.884823152271565e-05, -0.12745919823646545, -0.09888949245214462, -0.0026150099001824856, -3.4365158081054688, -0.0006137394811958075, -0.0037627865094691515, -0.004377782344818115, -2.192871332168579, -0.41008877754211426, -2.389824867248535, -0.0005415403284132481, -4.60137271147687e-05, -6.639736966462806e-05, -0.0012001938885077834, -0.010697873309254646, -0.00027533553657121956, -0.00025662468397058547, -0.0012225781101733446, -0.005335852038115263, -0.4076540172100067, -0.001140778069384396, -0.06333577632904053, -5.495397272170521e-05, -4.887569048150908e-06, -0.18794140219688416, -0.015897434204816818, -0.0008474572678096592, -0.5398874878883362, -0.14594444632530212, -0.3241390287876129, -1.5767278671264648, -1.8271013498306274, -0.09332697838544846, -2.1473944187164307, -1.6632311344146729, -0.0005455912905745208, -0.007604815065860748, -6.472854875028133e-05, -0.00041130665340460837, -0.002856343751773238, -1.0805712938308716, -0.00036113892565481365, -0.003968341741710901, -0.30442142486572266, -0.030773507431149483, -0.001401276676915586, -0.05543418228626251, -0.08675578236579895, -0.3101816773414612, -0.0006955826538614929, -0.014032509177923203, -0.10366719216108322, -0.00026294111739844084, -4.1641035079956055, -0.05761197581887245, -0.4333990812301636, -0.21403658390045166, -2.0018160343170166, -4.649054244509898e-05, -0.020903753116726875, -0.0006136203301139176, -0.1644408404827118, -1.5735502529423684e-05, -1.728519782773219e-05, -0.004793461877852678, -0.066070057451725, -6.258291978156194e-05, -3.111314072157256e-05, -0.0029661727603524923, -0.05166686698794365, -0.052420880645513535, -0.8633050918579102, -0.008845431730151176, -0.03641578555107117, -0.005455249920487404, -0.020641280338168144, -0.00025996167096309364, -0.00010549465514486656, -0.0004010588163509965, -0.009787900373339653, -5.722029527532868e-06, -6.151010165922344e-05, -0.000196556793525815, -0.0037988892290741205, -1.3828182090946939e-05, -4.31528314948082e-05, -0.0005293875001370907, -0.009761692956089973, -0.5737392902374268, -0.0004190520558040589, -2.8903517723083496, -0.00029094755882397294, -0.005350199528038502, -0.0015024575404822826, -0.21040579676628113, -2.9802276912960224e-06, -0.10629653930664062, -8.106198947643861e-06, -0.00033456450910307467, -0.00029345019720494747, -0.013875451870262623, -1.4305012882687151e-05, -0.006431713234633207, -0.3718988001346588, -0.02181008644402027, -1.1920928244535389e-07, -4.362964682513848e-05, -0.005673614796251059, -0.002911259653046727, -0.0011378012131899595, -0.05249406397342682, -0.03785617649555206, -0.0012966329231858253, -0.24408729374408722, -0.06604617834091187, -2.407998726994265e-05, -0.053097229450941086, -0.018885912373661995, -0.0006245807744562626, -0.6433672308921814, -0.02090865559875965, -0.05065213516354561, -0.00020668754586949944, -2.0348446369171143, -0.03815788775682449, -0.005009480752050877, -0.1359221339225769, -0.016530927270650864, -1.2535743713378906, -0.00011801023356383666, -0.09310999512672424, -0.22640560567378998, -0.3275185525417328, -0.015635520219802856, -0.00011944057769142091, -0.0017601249273866415, -0.015964308753609657, -2.6182432174682617, -0.19451674818992615, -1.361116886138916, -0.04921622946858406, -1.0127358436584473, -0.2585509717464447, -2.3235554695129395, -0.000764673575758934, -0.00010907054820563644, -0.000581572181545198, -0.07916049659252167, -9.154854342341423e-05, -6.985420623095706e-05, -0.0012488907668739557, -0.16840709745883942, -0.028467819094657898, -0.7594478726387024, -0.004483884200453758, -0.09757748246192932, -0.0036671787966042757, -1.380691647529602, -0.013506577350199223, -0.11682286113500595, -3.957670196541585e-05, -0.003495180746540427, -0.4792189300060272, -0.04642186313867569, -0.04023195430636406, -0.00013457823661156, -0.00012242044613230973, -1.4827016592025757], "finish_reason": "length"}], "metrics": {"energy": 398.74444509506236, "energy_per_token": 1.5575954886525873, "time": 12.736143, "time_per_token": 0.04975055859375}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n\n    source_directory = source_directory.resolve()\n    target_directory = Path(target_directory).resolve()\n    target_directory.mkdir(parents=True, exist_ok=True)\n\n    extensions_to_copy = [\".txt\", \".docx\", \".xlsx\", \".csv\"]\n\n    moved_count = 0\n    for file_path in source_directory.rglob(\"*\"):\n        if file_path.is_file() and file_path.suffix in extensions_to_copy:\n            relative_file_path = file_path.relative_to(source_directory)\n            target_path = target_directory / relative_file_path\n\n            if target_path.exists():\n                target_filename = file_path.stem + \"-\" + str(moved_count) + file_path.suffix\n                target_path = target", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "source", "_", "directory", " =", " source", "_", "directory", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "extensions", "_", "to", "_", "copy", " =", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]", "\n", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " source", "_", "directory", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " file", "_", "path", ".", "is", "_", "file", "()", " and", " file", "_", "path", ".", "suff", "ix", " in", " extensions", "_", "to", "_", "copy", ":", "\n", "            ", "relative", "_", "file", "_", "path", " =", " file", "_", "path", ".", "relative", "_", "to", "(", "source", "_", "directory", ")", "\n", "            ", "target", "_", "path", " =", " target", "_", "directory", " /", " relative", "_", "file", "_", "path", "\n", "\n", "            ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                ", "target", "_", "filename", " =", " file", "_", "path", ".", "stem", " +", " \"", "-", "\"", " +", " str", "(", "m", "oved", "_", "count", ")", " +", " file", "_", "path", ".", "suff", "ix", "\n", "                ", "target", "_", "path", " =", " target"], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -0.345287024974823, -0.0795290619134903, -0.7581859827041626, -0.06386209279298782, -0.05669281259179115, -3.58813522325363e-05, -1.3112935448589269e-05, -5.5549986427649856e-05, -0.17486143112182617, -0.0036340404767543077, -0.01631058193743229, -0.0007357274298556149, -0.014969399198889732, -0.0020123724825680256, -3.9457496313843876e-05, -2.825220326485578e-05, -0.16047705709934235, -0.23717768490314484, -0.14223003387451172, -0.5145832896232605, -0.07563554495573044, -0.8643898963928223, -0.004010967444628477, -0.00013529339048545808, -6.496695277746767e-05, -0.09162809699773788, -0.8266924619674683, -0.0030223901849240065, -0.26907989382743835, -0.003988645505160093, -0.00019131260341964662, -0.005168172996491194, -0.13697414100170135, -0.00062851223628968, -2.958582878112793, -0.004975675139576197, -0.5098286271095276, -0.1458476036787033, -0.8728504776954651, -0.00020716428116429597, -3.182837463100441e-05, -0.021717822179198265, -0.1621638536453247, -0.013726954348385334, -0.09639052301645279, -0.2292327880859375, -0.287650465965271, -0.0013805630151182413, -0.0014917447697371244, -0.00588802108541131, -0.009859435260295868, -0.0004557524516712874, -0.001819028053432703, -2.5987286790041253e-05, -4.291525328881107e-06, -0.0009093916742131114, -0.6490593552589417, -0.04551513493061066, -0.0005113962688483298, -0.03220899775624275, -0.6008216142654419, -0.5611332058906555, -0.0001646144810365513, -0.0006989181856624782, -0.0030934596434235573, -0.001531619462184608, -3.0874729418428615e-05, -0.00012134769349358976, -0.14711326360702515, -0.0005601267330348492, -0.0006868863711133599, -0.0008167268824763596, -0.0026548400055617094, 0.0, -2.062299427052494e-05, -0.00017712931730784476, -0.0017805927200242877, -0.0017090728506445885, -0.03424439579248428, -0.08182401210069656, -0.00015484087634831667, -2.518847703933716, -1.8624184131622314, -0.18079853057861328, -4.672895011026412e-05, -3.050307273864746, -0.03596337139606476, -0.5970072150230408, -0.0715222954750061, -0.09479725360870361, -0.004235583357512951, -0.00013302871957421303, -0.00033885458833537996, -0.003247347194701433, -0.00218593399040401, -0.0030948857311159372, -0.0002109781780745834, -1.847726889536716e-05, -0.00010573305189609528, -0.0007887351675890386, -0.0002694958820939064, -0.0016076747560873628, -9.393251093570143e-05, -0.00016509123088326305, -1.7404405298293568e-05, -0.0004573014739435166, -0.0006384003208950162, -0.0001908358681248501, -0.0016023189527913928, -4.446407547220588e-05, -0.014190246351063251, -0.01822768896818161, -0.6311591267585754, -0.00012110930401831865, -2.464148998260498, -0.05282260477542877, -0.027387503534555435, -2.2354376316070557, -0.002096242504194379, -0.0017376337200403214, -3.2066785934148356e-05, -0.009997768327593803, -0.6309993863105774, -0.14322522282600403, -2.0843639373779297, -0.6515365242958069, -0.29388973116874695, -0.005295772571116686, -0.18193459510803223, -1.6569954823353328e-05, -3.373566141817719e-05, -2.276871418871451e-05, -0.05812523141503334, -0.006579521577805281, -0.08368522673845291, -0.016473472118377686, -0.14058329164981842, -0.2784605622291565, -0.0038139712996780872, -0.01466565765440464, -0.009137597866356373, -0.1631043702363968, -0.12931130826473236, -4.7801782784517854e-05, -3.421248038648628e-05, -0.0004782725009135902, -0.4652494788169861, -2.9802276912960224e-06, -0.05404375493526459, -0.4004243314266205, -0.004918025340884924, -0.3040916621685028, -0.0013300867285579443, -0.0001232548092957586, -0.0003381395654287189, -0.02629336342215538, -4.31528314948082e-05, -0.5716114640235901, -0.0003626880934461951, -2.145764938177308e-06, -3.6954811548639555e-06, -5.125986263010418e-06, -0.0001294529065489769, -0.008621376007795334, -0.005328618921339512, -0.010501246899366379, -3.2003369331359863, -0.0020575798116624355, -2.1855404376983643, -0.011346220038831234, -0.041329603642225266, -0.0035086043644696474, -0.16117800772190094, -2.8967437174287625e-05, -3.576272320060525e-06, -0.00011908298620255664, -0.007192788179963827, -1.1920928244535389e-07, -2.002696055569686e-05, -0.00031287543242797256, -0.007963928394019604, -6.9141146923357155e-06, -9.298280929215252e-06, -0.0265726987272501, -0.02519163116812706, -0.018666084855794907, -0.6372342109680176, -0.0036276266910135746, -1.4140024185180664, -0.00568854995071888, -0.247099369764328, -7.688703772146255e-05, -6.318072337307967e-06, -0.020786652341485023, -0.013602778315544128, -2.3841855067985307e-07, -3.9934315282152966e-05, -9.536697689327411e-06, -4.768370445162873e-07, -0.09083396941423416, -1.2143003940582275, -0.000746448349673301, -0.33825671672821045, -0.1686772257089615, -1.823885577323381e-05, -0.0017407278064638376, -0.00029905137489549816, -0.06561947613954544, -0.03218337148427963, -0.015185109339654446, -0.0020856549963355064, -2.0474658012390137, -0.0018041539005935192, -2.899362802505493, -0.3375610411167145, -1.9698591232299805, -0.0011264891363680363, -0.033703286200761795, -0.0013090145075693727, -0.3853519558906555, -0.2903388738632202, -0.4433923065662384, -0.025950532406568527, -1.110472321510315, -0.016324656084179878, -0.07995151728391647, -0.0019152885070070624, -0.14606282114982605, -5.364274329622276e-05, -5.364403477869928e-06, -9.881961887003854e-05, -0.6290006041526794, -0.31916025280952454, -0.25640150904655457, -1.7881377516459906e-06, -2.5510462364763953e-05, -2.47952248173533e-05, -0.00014161060971673578, -0.00010239553375868127, -0.008304824121296406, -0.023536231368780136, -0.5945923328399658, -0.0009226117981597781, -0.12382344901561737, -0.03385576233267784, -0.1109701469540596], "finish_reason": "length"}], "metrics": {"energy": 359.95346724891687, "energy_per_token": 1.4060682314410815, "time": 12.524485, "time_per_token": 0.04892376953125}}
{"outputs": [{"text": "# Check if source directory exists.\n    if not Path(source_directory).is_dir():\n        raise FileNotFoundError(f\"{source_directory} is not a directory\")\n\n    # Create target directory if it does not exist.\n    target_dir = Path(target_directory)\n    target_dir.mkdir(parents=True, exist_ok=True)\n\n    # Find all files with specific extensions in source directory\n    files_to_move: list[Path] = []\n    for extension in [\".txt\", \".docx\", \".xlsx\", \".csv\"]:\n        files_to_move.extend(Path(source_directory).rglob(f\"*.{extension}\"))\n\n    # Move files to target directory, renaming if necessary\n    moved_files = 0\n    for file in files_to_move:\n        destination = target_dir / file.name\n        if destination.exists():\n            destination_name, extension = os.path.splitext(destination.name)\n            for i in range(1, 100):", "tokens": ["#", " Check", " if", " source", " directory", " exists", ".", "\n", "    ", "if", " not", " Path", "(", "source", "_", "directory", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " does", " not", " exist", ".", "\n", "    ", "target", "_", "dir", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "dir", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " with", " specific", " extensions", " in", " source", " directory", "\n", "    ", "files", "_", "to", "_", "move", ":", " list", "[", "Path", "]", " =", " []", "\n", "    ", "for", " extension", " in", " [", "\"", ".", "txt", "\"", ",", " \"", ".", "doc", "x", "\"", ",", " \"", ".", "x", "ls", "x", "\"", ",", " \"", ".", "csv", "\"", "]:", "\n", "        ", "files", "_", "to", "_", "move", ".", "extend", "(", "Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "f", "\"", "*", ".", "{", "extension", "}\"", "))", "\n", "\n", "    ", "#", " Move", " files", " to", " target", " directory", ",", " ren", "aming", " if", " necessary", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "destination", " =", " target", "_", "dir", " /", " file", ".", "name", "\n", "        ", "if", " destination", ".", "exists", "():", "\n", "            ", "destination", "_", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "destination", ".", "name", ")", "\n", "            ", "for", " i", " in", " range", "(", "1", ",", " ", "1", "0", "0", "):"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -0.2650202512741089, -0.31018850207328796, -0.840658962726593, -0.011506502516567707, -2.1820578575134277, -0.03325079381465912, -0.002787634963169694, -0.3073582053184509, -0.030821826308965683, -2.7558276653289795, -0.011787524446845055, -0.0020409247372299433, -6.115249561844394e-05, -1.549708758830093e-05, -0.00036125810584053397, -1.764281842042692e-05, -0.9908351898193359, -1.3947389561508317e-05, -0.018904980272054672, -0.002889507682994008, -0.0038818970788270235, -0.0008174415561370552, -0.03841660916805267, -0.0023264028131961823, -3.290122185717337e-05, -1.585470999998506e-05, -0.11966371536254883, -0.21937152743339539, -0.12069576233625412, -1.0437275171279907, -0.0028217521030455828, -6.4490144723095e-05, -0.0004781533498317003, -0.03195317089557648, -0.715147852897644, -0.00890651810914278, -0.014468870125710964, -0.5186284184455872, -1.5122851133346558, -0.0004012971476186067, -0.00575196323916316, -0.08607316762208939, -0.0014318700414150953, -0.2179795354604721, -0.7872204184532166, -0.24221867322921753, -0.03695715218782425, -0.05362952873110771, -0.05762109160423279, -0.5450838804244995, -0.0003682888636831194, -0.01434866338968277, -0.06031973659992218, -0.0019180249655619264, -0.0004899493651464581, -3.1878812313079834, -0.01670878753066063, -0.7832613587379456, -0.07175199687480927, -0.02856861613690853, -0.0008553183870390058, -0.003993157297372818, -2.3483953555114567e-05, -7.629365427419543e-06, -0.0004231034545227885, -0.36978718638420105, -0.010317088104784489, -1.181746006011963, -1.645074735279195e-05, -0.00010179955279454589, -0.0004301338049117476, -0.0056693474762141705, -2.1576648578047752e-05, -0.00010322991875000298, -0.20816946029663086, -0.0008970050839707255, -0.0014612721279263496, -0.000379132863599807, -0.002060435013845563, 0.0, -2.825220326485578e-05, -0.00021491125517059118, -0.0010658780811354518, -0.0017655988922342658, -0.03475193679332733, -0.039073143154382706, -0.00024685196694917977, -0.19567261636257172, -2.739341974258423, -0.6792905330657959, -0.37257882952690125, -0.8652366399765015, -1.061684489250183, -0.01782364770770073, -0.37055614590644836, -0.9653122425079346, -0.04308566451072693, -3.1141159534454346, -0.0014672239776700735, -1.3604685068130493, -1.1892786026000977, -0.23404459655284882, -6.758938252460212e-05, -0.08462493866682053, -2.967424154281616, -0.26729628443717957, -0.1498657763004303, -0.6152887940406799, -0.0085049569606781, -0.0032069466542452574, -0.42889562249183655, -0.006928230170160532, -0.056001532822847366, -0.17057272791862488, -0.9557973742485046, -0.013902257196605206, -0.562194287776947, -0.03021351620554924, -0.21554909646511078, -0.004220151342451572, -0.00010918975021922961, -0.0001722425949992612, -0.002697997260838747, -0.0013960388023406267, -0.002515130676329136, -0.00018952481332235038, -1.5616295058862306e-05, -0.00012706902634818107, -0.0009347598534077406, -0.0004477690381463617, -0.001631121034733951, -0.00016878610767889768, -0.0002503081923350692, -1.5020257706055418e-05, -0.0008086272282525897, -0.0008041008841246367, -0.00031549722189083695, -0.0008731843554414809, -3.731181277544238e-05, -0.012085074558854103, -0.005202564876526594, -0.0013965149410068989, -0.23621267080307007, -0.10685332864522934, -0.020687170326709747, -4.6967357775429264e-05, -0.0006199345225468278, -0.18003444373607635, -0.00024077377747744322, -0.022289352491497993, -1.6221747398376465, -0.006663128267973661, -0.010119915008544922, -0.000196556793525815, -0.0002646096108946949, -0.0004003438516519964, -0.004385378211736679, -0.22273816168308258, -0.003940081689506769, -0.004174923058599234, -0.15278777480125427, -0.04287474974989891, -0.8909798860549927, -0.18236619234085083, -0.013480938039720058, -0.0020114206708967686, -0.10149943083524704, -0.0012944899499416351, -0.005773771554231644, -0.03651681914925575, -0.0016984812682494521, -0.13018694519996643, -1.0835515260696411, -0.09662248194217682, -0.3145541846752167, -0.03561796993017197, -0.01753236912190914, -1.2874889373779297, -1.5133938789367676, -2.4318398573086597e-05, -1.1778024435043335, -0.8269622921943665, -0.3061286509037018, -0.0013634203933179379, -1.2167996168136597, -0.04145083948969841, -0.09512454271316528, -0.18329089879989624, -0.6503243446350098, -0.052461035549640656, -8.964136941358447e-05, -0.008475997485220432, -0.02293500490486622, -0.07403474301099777, -0.19892670214176178, -0.15069644153118134, -0.018481668084859848, -0.00026901919045485556, -3.0874729418428615e-05, -6.556489552167477e-06, -4.768360213347478e-06, -0.0008037435472942889, -0.0010251511121168733, -0.005791905336081982, -2.8254213333129883, -0.22258253395557404, -0.5463348031044006, -1.0013530300057027e-05, -0.0009255892946384847, -0.06597710400819778, -0.2007475346326828, -0.006365855690091848, -0.035521794110536575, -0.059617821127176285, -0.1494128257036209, -0.16272403299808502, -0.3961251974105835, -0.012825855053961277, -0.3264006972312927, -0.027124639600515366, -0.029935196042060852, -0.0015704215038567781, -1.4333255290985107, -2.426297187805176, -0.7633634805679321, -1.1351839303970337, -0.6883238554000854, -0.027072196826338768, -0.22113299369812012, -2.52720492426306e-05, -0.0007546676206402481, -0.0012716311030089855, -6.770858453819528e-05, -6.5205356804654e-05, -3.576278118089249e-07, -0.0001280225842492655, -0.13035428524017334, -0.06808831542730331, -0.01739612966775894, -0.0022812075912952423, -0.0123707614839077, -0.01877688243985176, -4.036123275756836, -0.3358944058418274, -0.0003177614707965404, -0.038378406316041946, -0.0003980797773692757, -0.2493637651205063, -0.0016418322920799255, -0.04192844405770302, -0.06889092177152634, -0.021907007321715355, -0.047502171248197556, -1.3220078945159912], "finish_reason": "length"}], "metrics": {"energy": 392.15017101097095, "energy_per_token": 1.5318366055116053, "time": 12.73554, "time_per_token": 0.049748203125}}
{"outputs": [{"text": "source_path = Path(source_directory)\n    if not source_path.exists():\n        raise FileNotFoundError(f\"Source directory {source_directory} not found.\")\n    target_path = Path(target_directory)\n    if not target_path.is_dir():\n        target_path.mkdir(parents=True)\n    source_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    counter = 0\n\n    for root, dirs, files in os.walk(source_path):\n        for filename in files:\n            if any(filename.endswith(ext) for ext in source_extensions):\n                file_path = Path(root, filename)\n                if target_path.joinpath(filename).exists():\n                    new_filename = f\"{filename}-{counter}.{file_path.suffix}\"\n                    new_file_path = Path(root, new_filename)\n                    target_path.joinpath(new_filename).unlink()\n                    shutil.move(file_path", "tokens": ["source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " not", " found", ".", "\"", ")", "\n", "    ", "target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "target", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ")", "\n", "    ", "source", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "counter", " =", " ", "0", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "path", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "if", " any", "(", "filename", ".", "end", "sw", "ith", "(", "ext", ")", " for", " ext", " in", " source", "_", "extensions", "):", "\n", "                ", "file", "_", "path", " =", " Path", "(", "root", ",", " filename", ")", "\n", "                ", "if", " target", "_", "path", ".", "join", "path", "(", "filename", ")", ".", "exists", "():", "\n", "                ", "    ", "new", "_", "filename", " =", " f", "\"", "{", "filename", "}-", "{", "counter", "}", ".", "{", "file", "_", "path", ".", "suff", "ix", "}\"", "\n", "                ", "    ", "new", "_", "file", "_", "path", " =", " Path", "(", "root", ",", " new", "_", "filename", ")", "\n", "                ", "    ", "target", "_", "path", ".", "join", "path", "(", "new", "_", "filename", ")", ".", "un", "link", "()", "\n", "                ", "    ", "sh", "util", ".", "move", "(", "file", "_", "path"], "logprobs": [-1.9032005071640015, -0.03529604151844978, -2.8119513988494873, -0.04874754324555397, -0.06582654267549515, -0.002209247788414359, -0.009428851306438446, -3.3854863431770355e-05, -9.894321920000948e-06, -0.002218168694525957, -0.14419785141944885, -0.10387179255485535, -0.6893994808197021, -0.08681130409240723, -0.049369875341653824, -9.894321920000948e-06, -0.0023073735646903515, -6.937739817658439e-05, -0.15360823273658752, -0.007067205850034952, -0.01746067777276039, -0.0009471459779888391, -0.015642914921045303, -0.0019803689792752266, -3.790783375734463e-05, -3.480850500636734e-05, -0.1300136148929596, -0.23242168128490448, -0.15332265198230743, -0.4657858610153198, -0.321158766746521, -0.7633201479911804, -0.0013060382334515452, -9.30981186684221e-05, -0.40843963623046875, -0.03188700973987579, -0.7012494802474976, -0.00242594419978559, -0.24600501358509064, -0.004217539913952351, -0.00017712931730784476, -0.004321403335779905, -1.9285732507705688, -1.2161747217178345, -0.0012179345358163118, -0.039540886878967285, -0.0030285704415291548, -0.0009130837861448526, -0.0004539651272352785, -0.0014112761709839106, -2.9444261599564925e-05, -2.4676019165781327e-05, -0.00043764073052443564, -0.03795763477683067, -0.055413879454135895, -0.38428133726119995, -0.030685072764754295, -0.02117876149713993, -2.4437606043647975e-05, -0.00013016807497479022, -1.7404405298293568e-05, -2.82625150680542, -0.0005162813467904925, -0.14640341699123383, -0.00679326057434082, -0.014078116975724697, -0.000771939754486084, -0.32925286889076233, -6.615896563744172e-05, -0.0014043716946616769, -0.014915728010237217, -0.00634382339194417, -0.00013481661153491586, -0.16177260875701904, -0.07396366447210312, -0.0017183552263304591, -0.000912250077817589, -0.4484219551086426, -0.041226767003536224, -0.6198934316635132, -2.752894401550293, -0.010478244163095951, -2.4239501953125, -0.027155384421348572, -1.032686710357666, -0.1304452121257782, -0.0024807651061564684, -0.0007011815905570984, -0.00011157367407577112, -0.010648809373378754, -0.001921713468618691, -0.003346915589645505, -0.0005797850899398327, -0.00020323118951637298, -8.702239938429557e-06, -0.002400851808488369, -0.00034445550409145653, -0.0013944911770522594, -0.00010418349120300263, -0.0003759154351428151, -0.00020525732543319464, -2.5987286790041253e-05, -0.0025617422070354223, -0.0002261144545627758, -0.0011410161387175322, -0.02391481027007103, -0.01760885678231716, -1.4362001419067383, -0.0008356655016541481, -2.699070930480957, -0.04882644861936569, -0.002665421459823847, -0.08110494166612625, -0.044075820595026016, -1.9397355318069458, -0.00037996700848452747, -0.23074474930763245, -1.2598063945770264, -0.0042457920499145985, -0.33057701587677, -0.0002236116270069033, -0.00033778208307921886, -0.008003191091120243, -0.0011637589195743203, -0.0026544833090156317, -1.0728830375228426e-06, -9.97731985989958e-05, -0.0004153581103309989, -0.006289095152169466, -5.722029527532868e-06, -0.33051997423171997, -0.0977596566081047, -0.010526491329073906, -0.012619993649423122, -0.1184026226401329, -2.511577606201172, -0.0007414452848024666, -0.06824098527431488, -0.0002575780963525176, -0.0026349846739321947, -0.006978543009608984, -2.3133304119110107, -0.5721142888069153, -0.06570331752300262, -0.10583005100488663, -0.005340476520359516, -0.025033412501215935, -7.10462118149735e-05, -2.3841855067985307e-07, -0.001405324088409543, -0.2708296477794647, -0.008063146844506264, -0.0008083889842964709, -0.0005455912905745208, -6.031808152329177e-05, -0.001684914343059063, -2.9802276912960224e-06, -1.4662635294371285e-05, -0.010278034023940563, -0.011513101868331432, -0.008224311284720898, -1.3075902462005615, -0.29784369468688965, -0.04095950350165367, -0.0020832756999880075, -0.38582107424736023, -0.0014524635626003146, -0.3199833035469055, -0.2384510040283203, -0.001256391522474587, -4.482168878894299e-05, -0.023302631452679634, -0.039150409400463104, -2.8134288787841797, -2.091614246368408, -6.8662193370983e-05, -0.004143938422203064, -0.7113584876060486, -0.32299599051475525, -1.9073468138230965e-06, -0.0028436246793717146, -0.18280914425849915, -0.006329253315925598, -0.016110949218273163, -0.17623576521873474, -0.010533214546740055, -0.010404983535408974, -0.0024969372898340225, -0.0022272085770964622, -1.3223541975021362, -0.0019900058396160603, -0.7213614583015442, -0.046508803963661194, -1.0552434921264648, -0.07793282717466354, -0.0009742995607666671, -0.019797582179307938, -0.2693941593170166, -0.317375510931015, -0.07359150052070618, -0.41738542914390564, -0.0005091324565000832, -0.06411592662334442, -1.3052735328674316, -0.0004924515378661454, -0.0028232974000275135, -8.868777513271198e-05, -0.0013769917422905564, -6.079655122448457e-06, -0.014367230236530304, -0.008547743782401085, -0.002486472949385643, -0.006128211040049791, -0.7882285714149475, -0.00015341058315243572, -0.6834132671356201, -0.04650186374783516, -0.0008627030183561146, -0.0004146431456319988, -0.5390903949737549, -0.002224115887656808, -0.3228966295719147, -0.033605657517910004, -0.004754191264510155, -8.344646857949556e-07, -1.9192511899746023e-05, -0.00031609306461177766, -0.005925469566136599, -0.02172902040183544, -0.015035162679851055, -2.438196897506714, -0.0010445620864629745, -0.1140393316745758, -0.002102547325193882, -0.004202701151371002, -8.344646857949556e-07, -0.0006883158930577338, -0.07623761892318726, -1.9788545614574105e-05, -0.1527748703956604, -0.00033241944038309157, -0.006241354160010815, -1.4526598453521729, -0.0009115354623645544, -0.017050232738256454, -0.041894491761922836, -0.004619047045707703, -0.18784260749816895, -0.3082555830478668, -1.8000440832111053e-05, -2.264974000354414e-06, -0.14739394187927246, -0.00011967896716669202, -0.2373431771993637, -0.00021860594279132783, -1.2993727978027891e-05], "finish_reason": "length"}], "metrics": {"energy": 383.26250045967106, "energy_per_token": 1.49711914242059, "time": 13.1292515, "time_per_token": 0.051286138671875}}
{"outputs": [{"text": "source_directory = Path(source_directory).resolve()\n    target_directory = Path(target_directory)\n    if not source_directory.exists():\n        raise FileNotFoundError(f\"Source directory not found: {source_directory}\")\n\n    # Scan the source directory\n    file_count = 0\n    for root, directories, files in os.walk(source_directory):\n        for filename in glob.iglob(os.path.join(root, '**', '*.txt', '*.docx', '*.xlsx', '*.csv'), recursive=True):\n            basename = os.path.basename(filename)\n            extension = os.path.splitext(basename)[1]\n            file_path = Path(filename)\n            if file_path.is_file():\n                # Check if a file with the same name already exists in the target directory\n                target_path = target_directory / basename\n                if target_path.exists():\n                    # Get the name of the file to be moved\n                    target_basename = str(file_", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", ".", "resolve", "()", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Scan", " the", " source", " directory", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " root", ",", " directories", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " filename", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "root", ",", " '", "**", "'", ",", " '", "*", ".", "txt", "'", ",", " '", "*", ".", "doc", "x", "'", ",", " '", "*", ".", "x", "ls", "x", "'", ",", " '", "*", ".", "csv", "')", ",", " recursive", "=", "True", "):", "\n", "            ", "bas", "ename", " =", " os", ".", "path", ".", "bas", "ename", "(", "filename", ")", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "bas", "ename", ")[", "1", "]", "\n", "            ", "file", "_", "path", " =", " Path", "(", "filename", ")", "\n", "            ", "if", " file", "_", "path", ".", "is", "_", "file", "():", "\n", "                ", "#", " Check", " if", " a", " file", " with", " the", " same", " name", " already", " exists", " in", " the", " target", " directory", "\n", "                ", "target", "_", "path", " =", " target", "_", "directory", " /", " bas", "ename", "\n", "                ", "if", " target", "_", "path", ".", "exists", "():", "\n", "                ", "    ", "#", " Get", " the", " name", " of", " the", " file", " to", " be", " moved", "\n", "                ", "    ", "target", "_", "bas", "ename", " =", " str", "(", "file", "_"], "logprobs": [-1.9032005071640015, -0.03529604151844978, -0.15228915214538574, -0.11993326991796494, -0.21239222586154938, -0.0022101993672549725, -0.007854173891246319, -5.447716102935374e-05, -7.390948667307384e-06, -0.0012321030953899026, -1.2829358577728271, -0.309161514043808, -0.008874734863638878, -0.0856965109705925, -0.04624830186367035, -0.4097214937210083, -0.0006781900301575661, -0.0008404298569075763, -0.0013016331940889359, -0.001784638618119061, -0.00018630675913300365, -0.0010299145942553878, -1.966933996300213e-05, -1.7165990357170813e-05, -0.00017128908075392246, -0.7237269282341003, -0.61032634973526, -0.5391615033149719, -0.06316199153661728, -0.11412675678730011, -1.7404405298293568e-05, -1.966933996300213e-05, -0.00012265883560758084, -0.17856791615486145, -0.00464111752808094, -0.01502118818461895, -0.0010471820132806897, -0.01211487129330635, -0.002756607485935092, -4.589452510117553e-05, -4.0649541915627196e-05, -0.11459523439407349, -0.17926108837127686, -0.11431732028722763, -0.3101624548435211, -0.06747440993785858, -2.463036060333252, -0.0020359281916171312, -0.011800366453826427, -0.01553845964372158, -0.00502917030826211, -5.435795901576057e-05, -0.00011014331539627165, -0.04235394671559334, -0.00013350549852475524, -0.0034303173888474703, -0.641014814376831, -0.0008449559682048857, -1.4938733577728271, -4.315654277801514, -0.6988877654075623, -0.022014182060956955, -0.012894348241388798, -3.2485532760620117, -0.0011847150744870305, -1.4789915084838867, -0.006224412936717272, -1.2860751152038574, -0.009777040220797062, -0.007346519734710455, -0.0008174415561370552, -0.029102781787514687, -0.027031008154153824, -0.18035927414894104, -1.1790870428085327, -0.0033930132631212473, -2.558403253555298, -0.00014482879487331957, -0.2096414715051651, -0.003794020274654031, -0.003264813916757703, -1.5497195136049413e-06, -6.985420623095706e-05, -7.807903602952138e-05, -0.02802964299917221, -1.823885577323381e-05, -9.298280929215252e-06, -0.1452157199382782, -0.006921008694916964, -0.005559459328651428, -0.18209508061408997, -1.9402819871902466, -0.0010340826120227575, -1.979730248451233, -2.8967437174287625e-05, -0.3042350113391876, -0.0006164796068333089, -0.010754129849374294, -0.41531306505203247, -4.672895011026412e-05, -0.00013934595335740596, -0.000390215078368783, -9.07141511561349e-05, -0.0051137362606823444, -0.01636406034231186, -0.0005807381821796298, -0.3687777817249298, -0.5061895251274109, -0.14471754431724548, -0.0003936707798857242, -0.057617828249931335, -0.008465122431516647, -0.11807460337877274, -0.12237396091222763, -2.3824572563171387, -0.06436600536108017, -0.014388851821422577, -0.04291551932692528, -0.03359551355242729, -0.012735347263514996, -0.0007894498412497342, -0.009264691732823849, -0.000284154579276219, -0.02704678662121296, -0.0011995985405519605, -0.0010836211731657386, -0.004109272733330727, -0.00021717573690693825, -0.0006825978052802384, -0.002865734277293086, -0.00011991735664196312, -0.00786292552947998, -0.001453415839932859, -0.001073499326594174, -0.0014141331193968654, -0.18076679110527039, -0.0010489681735634804, -0.03976820036768913, -0.002153698354959488, -0.003653401043266058, -0.0008835464250296354, -0.004647406283766031, -0.01040687132626772, -3.2296817302703857, -0.00026806574896909297, -0.08173459768295288, -0.269221693277359, -7.128461584215984e-05, -3.0040289857424796e-05, -0.0012684165267273784, -0.125652015209198, -2.3841855067985307e-07, -2.47952248173533e-05, -0.003434831975027919, -0.0011824527755379677, -0.03324710577726364, -0.05018797889351845, -1.877957820892334, -0.00282817124389112, -0.07425877451896667, -4.6967357775429264e-05, -6.460934673668817e-05, -0.0005953923100605607, -0.0004731489170808345, -3.707340147229843e-05, -3.576278118089249e-07, -4.076874756719917e-05, -1.3411318063735962, -6.318072337307967e-06, -0.16834262013435364, -0.0005432083853520453, -0.06937817484140396, -0.5442413091659546, -0.11611080169677734, -3.284491777420044, -0.28076404333114624, -0.9370532035827637, -0.005104129668325186, -0.17954543232917786, -0.0010963627137243748, -0.15280024707317352, -0.0013750869547948241, -0.1816469430923462, -0.16061563789844513, -1.8753173351287842, -0.9282665252685547, -0.0002896366349887103, -0.005509193520992994, -0.023019002750515938, -1.055298089981079, -3.6954811548639555e-06, -0.15239928662776947, -0.19180262088775635, -0.049040086567401886, -0.008985795080661774, -1.641435980796814, -1.6636296510696411, -0.2712806463241577, -1.61147141456604, -0.049499671906232834, -0.07791661471128464, -0.05572161823511124, -0.00343732675537467, -0.07230041176080704, -0.9408646821975708, -0.0024312958121299744, -0.18320801854133606, -0.0579230859875679, -0.014611266553401947, -0.02206922136247158, -0.04041034355759621, -0.0013397298753261566, -0.922696053981781, -0.007848496548831463, -1.3868048191070557, -0.007709392346441746, -0.428738534450531, -7.73638384998776e-05, -7.688703772146255e-05, -0.09558814018964767, -0.30396774411201477, -1.3828182090946939e-05, -0.04359181970357895, -0.01884029060602188, -0.20106767117977142, -0.1445038914680481, -2.753696753643453e-05, -0.0076177106238901615, -0.0005230727256275713, -0.14386466145515442, -0.04017401114106178, -0.005999887827783823, -0.0016102931695058942, -0.0002526917669456452, -0.4442116618156433, -2.327606439590454, -0.3081066906452179, -2.8753623962402344, -1.0989658832550049, -0.035192929208278656, -0.930517315864563, -2.64715313911438, -0.7606011033058167, -1.9533153772354126, -0.685513436794281, -0.001447225920855999, -0.00010346830822527409, -2.375662326812744, -0.006152499467134476, -0.9563723802566528, -0.00019572250312194228, -0.11974049359560013, -2.8667283058166504, -0.009362482465803623, -1.2056262493133545, -0.00010918975021922961], "finish_reason": "length"}], "metrics": {"energy": 392.4789755268097, "energy_per_token": 1.5331209981516003, "time": 12.738164, "time_per_token": 0.049758453125}}
{"outputs": [{"text": "files_moved = 0\n\n    if not os.path.exists(source_directory):\n        raise FileNotFoundError(\"Source folder not found.\")\n\n    for source_file in Path(source_directory).rglob(\"*.txt\"):\n\n        original_name = source_file.name.split(\".\")[0]\n\n        for target_file in Path(target_directory).glob(original_name + \"*.txt\"):\n            if target_file.is_file():\n                filename_parts = target_file.name.split(\"-\")\n                if len(filename_parts) > 1:\n                    if filename_parts[-1].isnumeric():\n                        suffix = int(filename_parts[-1]) + 1\n                        new_name = f\"{filename_parts[0]}-{suffix}.txt\"\n                        target_file.rename(Path(target_file).parent / new_name)\n\n        # Move the file to the target directory\n        shutil.move(source_file, Path(target_directory)", "tokens": ["files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " folder", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "for", " source", "_", "file", " in", " Path", "(", "source", "_", "directory", ")", ".", "rg", "lob", "(", "\"", "*", ".", "txt", "\"", "):", "\n", "\n", "        ", "original", "_", "name", " =", " source", "_", "file", ".", "name", ".", "split", "(", "\"", ".", "\"", ")[", "0", "]", "\n", "\n", "        ", "for", " target", "_", "file", " in", " Path", "(", "target", "_", "directory", ")", ".", "glob", "(", "original", "_", "name", " +", " \"", "*", ".", "txt", "\"", "):", "\n", "            ", "if", " target", "_", "file", ".", "is", "_", "file", "():", "\n", "                ", "filename", "_", "parts", " =", " target", "_", "file", ".", "name", ".", "split", "(", "\"", "-", "\"", ")", "\n", "                ", "if", " len", "(", "filename", "_", "parts", ")", " >", " ", "1", ":", "\n", "                ", "    ", "if", " filename", "_", "parts", "[-", "1", "]", ".", "is", "numeric", "():", "\n", "                ", "        ", "suff", "ix", " =", " int", "(", "filename", "_", "parts", "[-", "1", "])", " +", " ", "1", "\n", "                ", "        ", "new", "_", "name", " =", " f", "\"", "{", "filename", "_", "parts", "[", "0", "]", "}-", "{", "suff", "ix", "}", ".", "txt", "\"", "\n", "                ", "        ", "target", "_", "file", ".", "rename", "(", "Path", "(", "target", "_", "file", ")", ".", "parent", " /", " new", "_", "name", ")", "\n", "\n", "        ", "#", " Move", " the", " file", " to", " the", " target", " directory", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "file", ",", " Path", "(", "target", "_", "directory", ")"], "logprobs": [-3.3757081031799316, -0.43553870916366577, -0.694849967956543, -0.0027682576328516006, -0.061146315187215805, -0.029109381139278412, -7.414542778860778e-05, -0.03712946176528931, -0.7411794066429138, -0.0004010588163509965, -1.589402198791504, -0.23882247507572174, -0.1520109623670578, -1.537788011773955e-05, -0.0003392120997887105, -0.007844475097954273, -0.3956303894519806, -0.0002867764269467443, -0.02522941119968891, -9.369411418447271e-05, -2.5510462364763953e-05, -0.004235820844769478, -0.015952225774526596, -0.0007550249574705958, -0.03329760953783989, -0.002144776750355959, -2.407998726994265e-05, -2.169585604860913e-05, -0.08399523794651031, -2.0707907676696777, -0.3123418986797333, -2.8319103717803955, -0.6514183878898621, -0.001734539750032127, -0.852513313293457, -0.019962826743721962, -0.0004068977141287178, -0.005623947363346815, -0.032618001103401184, -0.0003906917118001729, -0.8791672587394714, -2.9790077209472656, -0.026643043383955956, -0.43047836422920227, -0.13321314752101898, -0.6650408506393433, -0.0010889797704294324, -0.0013055619783699512, -1.585470999998506e-05, -1.0609570381348021e-05, -0.00022539935889653862, -1.585470999998506e-05, -0.18414194881916046, -0.0032769334502518177, -0.2827019989490509, -0.046765029430389404, -0.1871434897184372, -0.16810242831707, -0.24483387172222137, -0.04162432253360748, -0.0393686443567276, -0.026302652433514595, -2.704111099243164, -0.004480442497879267, -2.249770164489746, -0.004160677082836628, -0.34682995080947876, -0.17361490428447723, -0.29041412472724915, -0.00014029949670657516, -9.047575440490618e-05, -0.0009012927766889334, -0.6357385516166687, -0.8571740388870239, -0.6620935797691345, -0.2831304967403412, -0.006968480534851551, -0.12842275202274323, -0.3087024390697479, -0.030569111928343773, -0.001630644896067679, -0.0015824426664039493, -0.08689010143280029, -1.4388856887817383, -0.0012291265884414315, -1.6714624166488647, -0.793525755405426, -0.008840469643473625, -0.016191652044653893, -0.012828444130718708, -0.3704061806201935, -0.0009178477921523154, -0.02495911717414856, -1.3828182090946939e-05, -4.541770613286644e-05, -0.001587679609656334, -0.000701658078469336, -0.5864062905311584, -0.018530935049057007, -2.9128832817077637, -3.182837463100441e-05, -5.364274329622276e-05, -0.056642573326826096, -0.09499652683734894, -0.8803490996360779, -0.1566324681043625, -0.08143849670886993, -0.0052336351945996284, -0.006603562273085117, -0.0035381829366087914, -0.2618454396724701, -0.49995970726013184, -0.6459808349609375, -0.0002426806604489684, -0.0012023370945826173, -0.005624658428132534, -1.9231531620025635, -8.34461570775602e-06, -0.015942605212330818, -0.07908923923969269, -0.01799635961651802, -0.06962138414382935, -4.607241630554199, -2.689756393432617, -0.7465083599090576, -0.004502753261476755, -0.21830196678638458, -7.676783570786938e-05, -6.353653589030728e-05, -3.45700973412022e-05, -0.27550143003463745, -0.0004291805380489677, -0.008076154626905918, -0.021649813279509544, -0.0019947646651417017, -0.9067042469978333, -0.012748529203236103, -0.014919956214725971, -0.017185581848025322, -0.23210273683071136, -0.5183082818984985, -0.15581846237182617, -5.209310256759636e-05, -0.0003469580551609397, -3.576278118089249e-07, -3.4570634852570947e-06, -0.00209469604305923, -1.3932123184204102, -0.001026341924443841, -0.27394405007362366, -0.37469133734703064, -0.0395200289785862, -0.005450862925499678, -0.0011245838832110167, -2.4772543907165527, -0.3149239420890808, -7.152555099310121e-07, -7.033323527139146e-06, -0.9495911598205566, -0.04769222438335419, -0.04303725063800812, -0.08071684092283249, -0.48368778824806213, -0.9888460636138916, -0.029060864821076393, -0.02126757614314556, -0.005466868635267019, -0.0017701209289953113, -4.041248321533203, -0.0006500753224827349, -0.06854958832263947, -0.25757524371147156, -0.0006105228094384074, -0.0034962499048560858, -1.0967194612021558e-05, -3.576272320060525e-06, -0.003746040863916278, -0.000607782625593245, -0.1489723026752472, -0.2907465696334839, -0.001105769770219922, -0.0007801587926223874, -0.004500142764300108, -0.003997194115072489, -0.11507836729288101, -0.648343563079834, -0.0032602986320853233, -0.6416956782341003, -0.0036365347914397717, -0.8488664031028748, -0.016810189932584763, -0.04668857902288437, -1.949097990989685, -1.2516897186287679e-05, -2.861018856492592e-06, -0.19770894944667816, -0.002907218411564827, -0.0255085788667202, -0.0035849844571202993, -0.002144301077350974, -0.13176603615283966, -3.3378546504536644e-06, -0.1058979332447052, -7.092700980138034e-05, -0.6454193592071533, -0.0005353448214009404, -0.002602406544610858, -0.017411943525075912, -0.1891498863697052, -0.513369619846344, -0.003573937574401498, -0.02800692431628704, -0.08574366569519043, -0.14037354290485382, -0.0003819928097072989, -1.488762617111206, -0.006172403693199158, -0.020567359402775764, -2.52720492426306e-05, -0.13758206367492676, -1.5187972784042358, -0.0149046890437603, -0.09946726262569427, -0.05283685401082039, -0.04080650582909584, -3.4570634852570947e-06, -1.1444026313256472e-05, -0.0007572882459498942, -0.006762238685041666, -1.7286442518234253, -0.39346498250961304, -4.137568950653076, -1.6136723756790161, -0.45801788568496704, -0.34893277287483215, -0.24114368855953217, -0.05498126521706581, -0.0402526780962944, -0.15373745560646057, -0.3083009719848633, -0.004425849765539169, -0.48803091049194336, -2.706014311115723e-05, -6.9141146923357155e-06, -0.03137766569852829, -0.00025054652360267937, -0.24555908143520355, -2.13382354559144e-05, -0.0004786299541592598, -0.012629764154553413, -0.13061009347438812, -0.0003432638186495751, -0.020295102149248123, -1.3708974620385561e-05, -0.0023706448264420033, -0.04473275691270828], "finish_reason": "length"}], "metrics": {"energy": 364.4823674526216, "energy_per_token": 1.423759247861803, "time": 12.740883, "time_per_token": 0.04976907421875}}
{"outputs": [{"text": "# Check if source_directory exists and is a directory.\n    if not os.path.isdir(source_directory):\n        raise FileNotFoundError(f\"{source_directory} is not a directory.\")\n\n    # Get a list of files with the specified extensions.\n    file_list = [file for file in glob.glob(os.path.join(source_directory, '**', '*.txt'))\n                    | glob.glob(os.path.join(source_directory, '**', '*.docx'))\n                    | glob.glob(os.path.join(source_directory, '**', '*.xlsx'))\n                    | glob.glob(os.path.join(source_directory, '**', '*.csv'))]\n\n    # Get the absolute paths of the files.\n    file_paths = [os.path.abspath(file) for file in file_list]\n\n    # Check if the target directory exists.\n    # If it does not exist, create it.\n    if not os.path.isdir(target_directory):\n", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", " and", " is", " a", " directory", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " files", " with", " the", " specified", " extensions", ".", "\n", "    ", "file", "_", "list", " =", " [", "file", " for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "txt", "'))", "\n", "                ", "    ", "|", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "doc", "x", "'))", "\n", "                ", "    ", "|", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "x", "ls", "x", "'))", "\n", "                ", "    ", "|", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "csv", "'))", "]", "\n", "\n", "    ", "#", " Get", " the", " absolute", " paths", " of", " the", " files", ".", "\n", "    ", "file", "_", "paths", " =", " [", "os", ".", "path", ".", "ab", "sp", "ath", "(", "file", ")", " for", " file", " in", " file", "_", "list", "]", "\n", "\n", "    ", "#", " Check", " if", " the", " target", " directory", " exists", ".", "\n", "    ", "#", " If", " it", " does", " not", " exist", ",", " create", " it", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n"], "logprobs": [-1.3195747137069702, -1.0244561433792114, -0.2650202512741089, -0.31018850207328796, -0.6255577206611633, -0.0034728473983705044, -0.03005412220954895, -3.0164294242858887, -0.3430134356021881, -0.062194257974624634, -0.20109359920024872, -1.5187609195709229, -0.028189245611429214, -0.002674338174983859, -0.14518201351165771, -0.03179139643907547, -0.06102250516414642, -7.748573807475623e-06, -8.237022848334163e-05, -0.006404944229871035, -0.31874290108680725, -0.0015693503664806485, -4.31528314948082e-05, -0.0016036281595006585, -3.1470757676288486e-05, -1.2040065485052764e-05, -0.0012023370945826173, -0.0023576815146952868, -0.0007252446957863867, -0.02790282480418682, -0.003281092271208763, -2.658331868587993e-05, -1.9430925021879375e-05, -0.07671479135751724, -0.16698706150054932, -0.09129977226257324, -0.8604683876037598, -0.0018970841774716973, -4.875540980719961e-05, -0.00020811776630580425, -0.020485607907176018, -0.380839467048645, -0.004944241140037775, -0.008519494906067848, -0.30655401945114136, -0.3467196524143219, -0.004409590270370245, -0.00020895205670967698, -0.0029391921125352383, -0.07344507426023483, -0.0010586139978840947, -0.15327028930187225, -2.2632601261138916, -1.4879999160766602, -0.032685957849025726, -0.0022101993672549725, -0.8971716165542603, -1.5864777565002441, -1.3064112663269043, -0.7348037362098694, -0.07178417593240738, -1.0614535808563232, -0.005401540081948042, -0.0005301024066284299, -1.425668716430664, -0.0060554612427949905, -1.1411521434783936, -0.016521546989679337, -2.2908809185028076, -1.7307738065719604, -0.10343471169471741, -0.009929548017680645, -0.0037387963384389877, -0.2197427898645401, -0.00015817821258679032, -0.16865244507789612, -0.013017318211495876, -0.4385116696357727, -8.940656698541716e-06, -0.00016652150952722877, -0.0008659188752062619, -0.0009741804678924382, -0.0017527469899505377, -0.015761088579893112, -3.1470757676288486e-05, -7.867782187531702e-06, -0.0006655623437836766, -0.5911586880683899, -0.6169273257255554, -0.5845197439193726, -0.0010071687866002321, -0.10314679145812988, -0.007689755409955978, -0.07382316887378693, -0.08370594680309296, -0.4182719886302948, -1.366774082183838, -0.04618660733103752, -1.8335027694702148, -2.70164155960083, -0.043650366365909576, -1.2993727978027891e-05, -0.0010299145942553878, -0.0007563352701254189, -0.00041797960875555873, -0.0002637753786984831, -2.50339189733495e-06, -3.7788631743751466e-05, -6.198863957251888e-06, -0.000164018536452204, -0.00110600795596838, -4.303362584323622e-05, -7.867782187531702e-06, -6.425174069590867e-05, -0.002156553091481328, -0.0006144542712718248, -0.0008320921915583313, -7.629365427419543e-06, -0.00260300119407475, -0.0007625294383615255, -0.0006225554971024394, -0.00862397626042366, -0.00045313104055821896, -0.00036864637513644993, -0.00411722669377923, -0.0007563352701254189, -0.007151008117944002, -0.00013136000779923052, -0.0017163321608677506, -0.00011157367407577112, -0.0004086851258762181, -4.684815212385729e-05, -3.683499380713329e-05, -0.0018446111353114247, -1.311301275563892e-06, -5.876845170860179e-05, -2.264974000354414e-06, -1.0967194612021558e-05, -9.023735765367746e-05, -3.1470757676288486e-05, -2.7418097943154862e-06, -1.8358061424805783e-05, -0.0001995364436879754, -6.317892984952778e-05, -0.00019608005823101848, -5.125986263010418e-06, -0.0004812512779608369, -0.00013481661153491586, -0.0003363520372658968, -0.006401154212653637, -0.00021514961554203182, -0.0004934046883136034, -0.00016211149340961128, -0.0015038858400657773, -0.00022313489171210676, -0.0008351890719495714, -0.0001045410826918669, -0.0005600076401606202, -1.2755313036905136e-05, -0.00016139635408762842, -0.00011836781777674332, -2.753696753643453e-05, -0.00018261195509694517, -8.344646857949556e-07, -4.172316494077677e-06, -2.861018856492592e-06, -1.728519782773219e-05, -9.214453893946484e-05, -1.1086402082582936e-05, -2.0265558760002023e-06, -1.3112935448589269e-05, -0.0002022777043748647, -0.0001299296854995191, -0.00014304091746453196, -5.722029527532868e-06, -0.00023326536756940186, -0.00025412190007045865, -0.00018880968855228275, -0.0016669438919052482, -0.0035908047575503588, -0.19246073067188263, -0.0031974404118955135, -0.06186351925134659, -0.0010369406081736088, -0.19174839556217194, -2.960796594619751, -0.6315462589263916, -1.3574533462524414, -0.30625179409980774, -0.20890074968338013, -0.5063849091529846, -1.2494304180145264, -0.628675103187561, -0.0046941558830440044, -0.000546425289940089, -0.2798716723918915, -0.0058698891662061214, -0.31707748770713806, -0.013404134660959244, -0.042383771389722824, -0.7533149123191833, -1.7881377516459906e-06, -0.00010954733443213627, -4.768360213347478e-06, -0.07657688856124878, -1.4424220353248529e-05, -1.9907753085135482e-05, -0.0013386583887040615, -0.14702291786670685, -0.06363794952630997, -0.0032789534889161587, -0.00010656742961145937, -0.0009910915978252888, -0.0015101945027709007, -6.079655122448457e-06, -7.033323527139146e-06, -0.00732888700440526, -0.0009142747730948031, -0.044336434453725815, -0.0006630606367252767, -0.107536680996418, -1.9986764192581177, -0.03683169186115265, -0.9314095973968506, -0.028461216017603874, -0.1660192906856537, -0.13075381517410278, -0.8011219501495361, -0.35377994179725647, -0.0005440423847176135, -2.9331347942352295, -0.13878382742404938, -0.44608283042907715, -0.5885454416275024, -0.049324486404657364, -0.14617756009101868, -0.010080735199153423, -0.08258011192083359, -0.018017318099737167, -0.14565378427505493, -0.004216352943331003, -0.0015276916092261672, -0.10314185172319412, -0.010527788661420345, -0.0018797124503180385, -5.602820692729438e-06, -2.5748875486897305e-05, -3.933898824470816e-06, -0.45763611793518066, -8.093983342405409e-05, -0.00011622230522334576, -0.0019478887552395463, -2.3841830625315197e-06, -1.883488948806189e-05, -0.0023242621682584286, -0.000774798565544188], "finish_reason": "length"}], "metrics": {"energy": 358.4468304500579, "energy_per_token": 1.4001829314455387, "time": 12.509694, "time_per_token": 0.0488659921875}}
