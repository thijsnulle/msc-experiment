{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.3684379756450653, -0.0004923323867842555, -8.809178689261898e-05, -0.007685851771384478, -0.6142966151237488, -0.07059206068515778, -0.3143834173679352], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482, -0.9804502129554749], "finish_reason": "stop"}], "metrics": {"energy": 116.13876876831054, "energy_per_token": 1.9684537079374669, "time": 5.010731, "time_per_token": 0.08492764406779661}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame(lines, columns=[\"Text\"])<|endoftext|>from functools import partial", "tokens": [" pd", ".", "DataFrame", "(", "lines", ",", " columns", "=[", "\"", "Text", "\"", "])", "<", "|", "end", "of", "text", "|>", "from", " fun", "ct", "ools", " import", " partial", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -1.444210171699524, -0.5382305383682251, -0.03624116629362106, -0.04184156283736229, -0.6406240463256836, -0.0028709645848721266, -0.0044983625411987305, -0.0002109781780745834, -0.005738095846027136, -0.9687762260437012, -3.576278118089249e-07, -3.576278118089249e-07, -2.825220326485578e-05, -0.00013779645087197423, -0.08278040587902069, -1.073147177696228, -3.186659336090088, -0.02605065330862999, -0.0015343570848926902, -0.00015925093612167984, -2.0235958099365234, -0.0906137228012085], "finish_reason": "stop"}], "metrics": {"energy": 85.88530031871797, "energy_per_token": 1.1606121664691618, "time": 4.4176655, "time_per_token": 0.05969818243243243}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.splitlines() if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "lines", "()", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -1.4845436811447144, -0.000860201776959002, -0.04430301859974861, -0.039703816175460815, -0.022411521524190903, -0.0006413786904886365, -0.00025733973598107696, -0.03898429498076439, -0.0014066335279494524], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|>from typing import List", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482, -1.023277759552002, -3.576278118089249e-07, -4.768370445162873e-07, -1.9550132492440753e-05, -9.822363062994555e-05, -0.06403598189353943, -1.1068696975708008, -1.6939153671264648, -0.003560158656910062, -0.5571902990341187, -0.2833620309829712], "finish_reason": "stop"}], "metrics": {"energy": 75.52048493003845, "energy_per_token": 1.1271714168662454, "time": 4.218597, "time_per_token": 0.0629641343283582}}
{"outputs": [{"text": " input_string.rstrip('\\n')", "tokens": [" input", "_", "string", ".", "r", "strip", "('", "\\", "n", "')", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -2.394590377807617, -0.00363558460958302, -1.3317222595214844, -0.05681704729795456, -0.011506856419146061, -0.010812859050929546, -0.28594422340393066], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [re.sub(r'\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "(", "r", "'\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -2.108429431915283, -0.00040236959466710687, -0.0009132028790190816, -0.6325845122337341, -0.09282626211643219, -0.19072698056697845, -0.3683195412158966, -0.5851359963417053, -5.1377883210079744e-05, -0.013478939421474934, -0.01080601941794157, -0.0009922825265675783, -0.004905451089143753, -0.02913311868906021, -0.04488777741789818, -2.610649426060263e-05, -8.106198947643861e-06, -0.00020740265608765185, -0.00468395184725523, -0.0007545484695583582], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|>from typing import List", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", "\n"], "logprobs": [-0.006456112489104271, -0.00011526874004630372, -0.0008131535141728818, -0.29853636026382446, -0.03029944933950901, -0.005650144536048174, -0.0020553194917738438, -0.011713064275681973, -0.017684167250990868, -1.0714566707611084, -3.576278118089249e-07, -4.768370445162873e-07, -3.4450891689630225e-05, -0.00013457823661156, -0.0757610946893692, -1.1777255535125732, -1.5896838903427124, -0.0031449166126549244, -0.5631226301193237, -0.2756899297237396], "finish_reason": "stop"}], "metrics": {"energy": 98.366828042984, "energy_per_token": 1.2943003689866315, "time": 4.4258137, "time_per_token": 0.058234390789473685}}
{"outputs": [{"text": " re.sub(r'\\\\t', ' ', input_string)", "tokens": [" re", ".", "sub", "(", "r", "'\\\\", "t", "'", ",", " '", " '", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.9642282724380493, -0.0001839230244513601, -0.04514100030064583, -0.44520649313926697, -0.20682285726070404, -2.165581226348877, -0.5317442417144775, -0.12651562690734863, -0.0003588747640606016, -0.1004500612616539, -0.016661541536450386, -0.0006968930247239769, -0.010388821363449097, -8.546940807718784e-05, -1.1920858014491387e-05, -0.06824131309986115, -0.15185213088989258], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame([lines])<|endoftext|>from typing import List", "tokens": [" pd", ".", "DataFrame", "([", "lines", "])", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -3.062265396118164, -0.34257978200912476, -0.23660482466220856, -1.0072697401046753, -5.960462772236497e-07, -4.768370445162873e-07, -1.4066597032069694e-05, -0.00012432756193447858, -0.06120249256491661, -1.0377097129821777, -1.4867810010910034, -0.0030204886570572853, -0.5933482050895691, -0.349347859621048], "finish_reason": "stop"}], "metrics": {"energy": 98.44133807563782, "energy_per_token": 1.2952807641531292, "time": 4.840795, "time_per_token": 0.06369467105263157}}
{"outputs": [{"text": " input_string.strip('\\n').split('\\n')", "tokens": [" input", "_", "string", ".", "strip", "('", "\\", "n", "')", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -2.7710611820220947, -0.17750079929828644, -0.01671464927494526, -0.023780368268489838, -2.097228527069092, -1.3225822448730469, -0.04620959982275963, -0.0009477414423599839, -0.0003668589051812887, -0.003307113191112876, -0.04754127562046051], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('\\\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -2.1923699378967285, -0.002792390063405037, -0.0004954302567057312, -0.00015484087634831667, -0.023315327242016792, -0.03244998678565025, -0.0014528206083923578, -0.020839892327785492, -3.731181277544238e-05, -1.0013530300057027e-05, -0.00025912740966305137, -0.007238354068249464, -0.0006283930852077901], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|>import itertools", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "import", " iter", "tools", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482, -1.023277759552002, -3.576278118089249e-07, -4.768370445162873e-07, -1.9550132492440753e-05, -9.822363062994555e-05, -0.06403598189353943, -1.271468162536621, -4.097552299499512, -0.0005647733341902494, -0.09527086466550827], "finish_reason": "stop"}], "metrics": {"energy": 91.4523701725006, "energy_per_token": 1.2033206601644815, "time": 4.616458, "time_per_token": 0.06074286842105263}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " re.sub(r'\\s*\\n\\s*\\n', '\\n', input_string).split('\\n')", "tokens": [" re", ".", "sub", "(", "r", "'\\", "s", "*\\", "n", "\\", "s", "*\\", "n", "'", ",", " '\\", "n", "'", ",", " input", "_", "string", ")", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -2.031069278717041, -0.5835350155830383, -0.09582700580358505, -0.4443361163139343, -0.8894664645195007, -1.5515716075897217, -0.007369831670075655, -0.30606240034103394, -0.005144335329532623, -2.01822829246521, -0.011054699309170246, -0.7433662414550781, -0.00021205084340181202, -0.1828405261039734, -0.003338361158967018, -0.2555323541164398, -0.003159889718517661, -0.018000926822423935, -0.0002208704245276749, -7.152531907195225e-06, -0.096946582198143, -0.06869795173406601, -0.2711440324783325, -0.0748196467757225, -0.0006992755807004869, -0.00015007323236204684, -0.011579092592000961, -0.015337265096604824], "finish_reason": "stop"}, {"text": " [re.sub('\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", "\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -1.993499755859375, -0.0004657614335883409, -0.0006990373367443681, -0.7719452977180481, -0.16193890571594238, -0.034789007157087326, -0.35429927706718445, -0.00021872512297704816, -0.00814911164343357, -0.014439377933740616, -0.0006724718841724098, -0.0059377942234277725, -0.04179617390036583, -0.03857077285647392, -2.0146166207268834e-05, -9.894321920000948e-06, -0.00017915551143232733, -0.005085153039544821, -0.0007039214833639562], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.008244055323302746, -0.00011967896716669202, -0.0009614374139346182, -0.35796523094177246, -0.029988529160618782, -0.005337274633347988, -0.0014455594355240464, -0.012917177751660347, -0.016779711470007896, -0.9690231680870056], "finish_reason": "stop"}], "metrics": {"energy": 115.11736772727966, "energy_per_token": 1.7181696675713383, "time": 4.0111423, "time_per_token": 0.059867795522388065}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " re.split('\\n+', input_string)", "tokens": [" re", ".", "split", "('", "\\", "n", "+'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -0.6179757714271545, -0.41334590315818787, -0.1734517514705658, -0.0222209170460701, -0.09851180016994476, -6.270212179515511e-05, -0.0036487688776105642, -7.128461584215984e-05, -6.079655122448457e-06, -0.2768704295158386, -0.011657333001494408], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -0.34233492612838745, -0.05182274058461189, -0.0006319671520031989, -0.00023636408150196075, -0.000243634101934731, -0.0107207540422678, -0.028533628210425377, -0.0011070796754211187, -0.014001475647091866, -2.13382354559144e-05, -8.4638240878121e-06, -0.0001754606782924384, -0.006009367760270834, -0.0005478549865074456], "finish_reason": "stop"}, {"text": " pd.DataFrame(lines, columns=[\"Text\"])<|endoftext|># 1.\t\u0412\u0430\u0440\u0438\u0430\u043d\u0442 20", "tokens": [" pd", ".", "DataFrame", "(", "lines", ",", " columns", "=[", "\"", "Text", "\"", "])", "<", "|", "end", "of", "text", "|>", "#", " ", "1", ".", "\t", "\u0412", "\u0430\u0440\u0438", "\u0430\u043d", "\u0442", " ", "2", "0", "\n"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -1.4285938739776611, -0.7651306986808777, -0.033218737691640854, -0.050574734807014465, -0.6086505055427551, -0.0023894349578768015, -0.005085627548396587, -0.00020632999076042324, -0.006311602890491486, -0.9944599270820618, -3.576278118089249e-07, -4.768370445162873e-07, -2.8609820219571702e-05, -0.00018130090029444546, -0.07925201952457428, -1.2385294437408447, -3.2467033863067627, -1.7111996412277222, -0.8265480995178223, -3.7115626335144043, -4.074938774108887, -3.927666664123535, -0.028571976348757744, -0.0009511952521279454, -0.633373498916626, -1.80129075050354, -2.609222412109375, -1.0003414154052734], "finish_reason": "stop"}], "metrics": {"energy": 118.6115000705719, "energy_per_token": 1.7190072473995928, "time": 4.4324384, "time_per_token": 0.06423823768115941}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " re.split('\\n+', input_string)", "tokens": [" re", ".", "split", "('", "\\", "n", "+'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -0.6179757714271545, -0.41334590315818787, -0.1734517514705658, -0.0222209170460701, -0.09851180016994476, -6.270212179515511e-05, -0.0036487688776105642, -7.128461584215984e-05, -6.079655122448457e-06, -0.2768704295158386, -0.011657333001494408], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -0.34233492612838745, -0.05182274058461189, -0.0006319671520031989, -0.00023636408150196075, -0.000243634101934731, -0.0107207540422678, -0.028533628210425377, -0.0011070796754211187, -0.014001475647091866, -2.13382354559144e-05, -8.4638240878121e-06, -0.0001754606782924384, -0.006009367760270834, -0.0005478549865074456], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -0.3401748836040497, -0.0326186940073967, -0.0063074566423892975, -0.0017764277290552855, -0.013230273500084877, -0.01808241195976734], "finish_reason": "stop"}], "metrics": {"energy": 59.30877562332152, "energy_per_token": 1.2618888430493942, "time": 3.3731909, "time_per_token": 0.07177001914893617}}
{"outputs": [{"text": " input_string.replace('\\n', '\\\\n')  # replace newline character with '\\\\n'", "tokens": [" input", "_", "string", ".", "replace", "('", "\\", "n", "'", ",", " '\\\\", "n", "')", "  ", "#", " replace", " new", "line", " character", " with", " '\\\\", "n", "'", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -0.5220692753791809, -0.06325823068618774, -0.37491393089294434, -0.19259996712207794, -0.0135006969794631, -3.1474921703338623, -0.008078519254922867, -0.010587829165160656, -3.0973997116088867, -0.0010269373888149858, -1.3422340154647827, -0.703356921672821, -0.6204776763916016, -2.1125648021698, -0.2135092318058014, -2.1288228034973145, -0.00034338299883529544, -0.0016399280866608024, -0.13431136310100555], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482], "finish_reason": "stop"}], "metrics": {"energy": 120.79048734283444, "energy_per_token": 1.6105398312377925, "time": 4.629278, "time_per_token": 0.06172370666666667}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -1.2213969230651855, -0.00018976318824570626, -0.00010847456724150106, -0.16868296265602112, -0.0001716466504149139, -2.288792165927589e-05, -0.00012706902634818107, -0.10981383174657822, -0.2091786414384842, -0.00025614796322770417, -0.0001294529065489769, -0.0012853225925937295, -0.00850046519190073, -0.06053519621491432, -0.09066347777843475, -0.002748642349615693, -0.0012828224571421742, -0.07656440883874893, -0.0028426735661923885], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.10090483725070953, -0.1789316087961197, -0.000719645875506103, -0.04707919433712959, -0.343607097864151, -0.048033706843853, -0.000658057106193155, -0.0002489972102921456, -0.0002361257211305201, -0.011942082084715366, -0.03400832787156105, -0.0015645894454792142, -0.012950833886861801, -1.5616295058862306e-05, -9.894321920000948e-06, -0.00018261195509694517, -0.007222731597721577, -0.0005087750032544136], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.007135265972465277, -9.60780744208023e-05, -0.001086121890693903, -0.32785743474960327, -0.030627846717834473, -0.005796764977276325, -0.0021652367431670427, -0.013746355660259724, -0.018924983218312263, -1.005327582359314], "finish_reason": "stop"}], "metrics": {"energy": 61.250711595535286, "energy_per_token": 1.0937627070631302, "time": 3.5830245, "time_per_token": 0.06398258035714285}}
{"outputs": [{"text": " input_string.replace(\"\\\\t\", \" \")", "tokens": [" input", "_", "string", ".", "replace", "(", "\"", "\\\\", "t", "\"", ",", " \"", " \"", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -1.5615990161895752, -0.2169526219367981, -1.0294402837753296, -0.6391841173171997, -0.0031966085080057383, -0.0004114258335903287, -0.06505253165960312, -0.035470250993967056, -0.0036556576378643513, -0.2584780752658844], "finish_reason": "stop"}, {"text": " [line for line in input_string.splitlines() if line.strip()]", "tokens": [" [", "line", " for", " line", " in", " input", "_", "string", ".", "split", "lines", "()", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -1.2213969230651855, -0.00018976318824570626, -0.00010847456724150106, -0.16868296265602112, -0.0001716466504149139, -2.288792165927589e-05, -0.00012706902634818107, -0.10981383174657822, -1.7152783870697021, -0.0016156489728018641, -0.005603795405477285, -0.04362183436751366, -0.08453971892595291, -0.001994050806388259, -0.0012428186601027846, -0.05586536228656769, -0.0022960747592151165], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.10090483725070953, -0.1789316087961197, -0.000719645875506103, -0.04707919433712959, -0.343607097864151, -0.048033706843853, -0.000658057106193155, -0.0002489972102921456, -0.0002361257211305201, -0.011942082084715366, -0.03400832787156105, -0.0015645894454792142, -0.012950833886861801, -1.5616295058862306e-05, -9.894321920000948e-06, -0.00018261195509694517, -0.007222731597721577, -0.0005087750032544136], "finish_reason": "stop"}, {"text": " pd.DataFrame({\"Text\": lines})<|endoftext|>import unittest", "tokens": [" pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})", "<", "|", "end", "of", "text", "|>", "import", " un", "ittest", "\n"], "logprobs": [-0.007135265972465277, -9.60780744208023e-05, -0.001086121890693903, -1.5065855979919434, -0.8753722310066223, -0.0045935348607599735, -0.0025858795270323753, -0.015012498013675213, -0.01113875675946474, -1.20444917678833, -3.576278118089249e-07, -4.768370445162873e-07, -1.9073304429184645e-05, -0.00013505500101018697, -0.07163149118423462, -1.2530083656311035, -2.6693718433380127, -0.01697862334549427, -0.009615416638553143], "finish_reason": "stop"}], "metrics": {"energy": 103.49461370849613, "energy_per_token": 1.4576706156126216, "time": 4.2237225, "time_per_token": 0.05948904929577465}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [re.sub('\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", "\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -2.108429431915283, -0.00040236959466710687, -0.0009132028790190816, -0.8341054320335388, -0.17498482763767242, -0.02538074180483818, -0.3768971562385559, -0.0002338612830499187, -0.008150412701070309, -0.01548693235963583, -0.0007616956136189401, -0.006803206168115139, -0.042038753628730774, -0.042184021323919296, -1.4662635294371285e-05, -9.65590606938349e-06, -0.0001851148990681395, -0.0043741026893258095, -0.0008304246584884822], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|>import unittest", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "import", " un", "ittest", "\n"], "logprobs": [-0.00738142803311348, -0.00013469743134919554, -0.0009521479951217771, -0.36282312870025635, -0.036586008965969086, -0.005666384007781744, -0.0014786511892452836, -0.012002155184745789, -0.017109764739871025, -1.0409513711929321, -2.3841855067985307e-07, -4.768370445162873e-07, -2.6702524337451905e-05, -9.107174992095679e-05, -0.08000951260328293, -1.2362092733383179, -2.6734559535980225, -0.0143391452729702, -0.00939649436622858], "finish_reason": "stop"}], "metrics": {"energy": 78.04373621463775, "energy_per_token": 1.1149105173519678, "time": 4.222889, "time_per_token": 0.06032698571428572}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line for line in input_string.split('\\n') if line.strip() != '']", "tokens": [" [", "line", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", " ", "!", "=", " '", "']", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -1.2213969230651855, -0.00018976318824570626, -0.00010847456724150106, -0.16868296265602112, -0.0001716466504149139, -2.288792165927589e-05, -0.00012706902634818107, -0.10981383174657822, -0.2091786414384842, -0.00025614796322770417, -0.0001294529065489769, -0.0012853225925937295, -0.00850046519190073, -0.06053519621491432, -0.09066347777843475, -0.002748642349615693, -0.0012828224571421742, -2.65608549118042, -4.291525328881107e-06, -1.2159273865108844e-05, -0.02736790105700493, -0.00032479254878126085, -0.0022335124667733908], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.10090483725070953, -0.1789316087961197, -0.000719645875506103, -0.04707919433712959, -0.343607097864151, -0.048033706843853, -0.000658057106193155, -0.0002489972102921456, -0.0002361257211305201, -0.011942082084715366, -0.03400832787156105, -0.0015645894454792142, -0.012950833886861801, -1.5616295058862306e-05, -9.894321920000948e-06, -0.00018261195509694517, -0.007222731597721577, -0.0005087750032544136], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.007135265972465277, -9.60780744208023e-05, -0.001086121890693903, -0.32785743474960327, -0.030627846717834473, -0.005796764977276325, -0.0021652367431670427, -0.013746355660259724, -0.018924983218312263], "finish_reason": "stop"}], "metrics": {"energy": 68.85922476482389, "energy_per_token": 1.1671055044885406, "time": 3.585054, "time_per_token": 0.06076362711864407}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.strip().replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "strip", "()", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -2.881091833114624, -0.009248629212379456, -0.01959630846977234, -0.0048742517828941345, -0.34583091735839844, -0.054815612733364105, -0.0008073169738054276, -0.0002908283786382526, -0.0003361137059982866, -0.014206582680344582, -0.028288446366786957, -0.001335324952378869, -0.015438336879014969, -3.349725011503324e-05, -1.5735502529423684e-05, -0.00016366096679121256, -0.01302014198154211, -0.0008694920688867569], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|>from typing import List", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " List", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482, -1.023277759552002, -3.576278118089249e-07, -4.768370445162873e-07, -1.9550132492440753e-05, -9.822363062994555e-05, -0.06403598189353943, -1.1068696975708008, -1.6939153671264648, -0.003560158656910062, -0.5571902990341187, -0.2833620309829712], "finish_reason": "stop"}], "metrics": {"energy": 117.59844209098819, "energy_per_token": 1.6333116957081693, "time": 4.632867, "time_per_token": 0.064345375}}
{"outputs": [{"text": " input_string.replace('\\t', ' ')", "tokens": [" input", "_", "string", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -0.5220692753791809, -0.06325823068618774, -1.2784268856048584, -0.002371596172451973, -0.001279726973734796, -0.06917072832584381, -0.03584974631667137, -0.0024069168139249086, -0.2764909565448761], "finish_reason": "stop"}, {"text": " re.sub(r'\\s+', '', input_string, flags=re.MULTILINE).split('\\n')", "tokens": [" re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " ''", ",", " input", "_", "string", ",", " flags", "=", "re", ".", "M", "ULT", "IL", "INE", ")", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -2.031069278717041, -0.5835350155830383, -0.09582700580358505, -0.4443361163139343, -0.8894664645195007, -0.788739025592804, -0.0002026352594839409, -1.1328630447387695, -0.00011729506513802335, -0.04287794604897499, -0.00015496007108595222, -1.4781842764932662e-05, -1.2773566246032715, -0.08735807985067368, -0.005987564101815224, -0.0010281282011419535, -0.00016068121476564556, -0.03877170756459236, -0.10589063912630081, -0.0005290300468914211, -0.006262441165745258, -0.0351044237613678, -0.08991401642560959, -0.12060447037220001, -0.15521682798862457, -0.0005141366855241358, -6.16293036728166e-05, -0.0015126940561458468, -0.009846332482993603], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -0.34233492612838745, -0.05182274058461189, -0.0006319671520031989, -0.00023636408150196075, -0.000243634101934731, -0.0107207540422678, -0.028533628210425377, -0.0011070796754211187, -0.014001475647091866, -2.13382354559144e-05, -8.4638240878121e-06, -0.0001754606782924384, -0.006009367760270834, -0.0005478549865074456], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -0.3401748836040497, -0.0326186940073967, -0.0063074566423892975, -0.0017764277290552855, -0.013230273500084877, -0.01808241195976734], "finish_reason": "stop"}], "metrics": {"energy": 86.4001844215393, "energy_per_token": 1.200002561410268, "time": 4.421774, "time_per_token": 0.06141352777777778}}
{"outputs": [{"text": " input_string.replace('\\n', ' ')", "tokens": [" input", "_", "string", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -0.5220692753791809, -0.06325823068618774, -0.37491393089294434, -0.19259996712207794, -0.0135006969794631, -0.1854865550994873, -0.38394150137901306, -0.005075901746749878, -0.2759931981563568], "finish_reason": "stop"}, {"text": " re.split(\"\\n+\", input_string)", "tokens": [" re", ".", "split", "(", "\"", "\\", "n", "+", "\"", ",", " input", "_", "string", ")", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -0.6179757714271545, -1.2078996896743774, -2.0496017932891846, -0.6232680678367615, -0.04139113798737526, -0.40380552411079407, -0.003532005939632654, -0.00013672371278516948, -0.006538663525134325, -0.00018380382971372455, -6.198863957251888e-06, -0.2525991201400757, -0.005727902054786682], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -0.34233492612838745, -0.05182274058461189, -0.0006319671520031989, -0.00023636408150196075, -0.000243634101934731, -0.0107207540422678, -0.028533628210425377, -0.0011070796754211187, -0.014001475647091866, -2.13382354559144e-05, -8.4638240878121e-06, -0.0001754606782924384, -0.006009367760270834, -0.0005478549865074456], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -0.3401748836040497, -0.0326186940073967, -0.0063074566423892975, -0.0017764277290552855, -0.013230273500084877, -0.01808241195976734], "finish_reason": "stop"}], "metrics": {"energy": 101.86759410476687, "energy_per_token": 1.8190641804422654, "time": 3.790926, "time_per_token": 0.06769510714285713}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('\\\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -2.1923699378967285, -0.002792390063405037, -0.0004954302567057312, -0.00015484087634831667, -0.023315327242016792, -0.03244998678565025, -0.0014528206083923578, -0.020839892327785492, -3.731181277544238e-05, -1.0013530300057027e-05, -0.00025912740966305137, -0.007238354068249464, -0.0006283930852077901], "finish_reason": "stop"}, {"text": " pd.DataFrame({\"Text\": lines})", "tokens": [" pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -1.444210171699524, -1.0862175226211548, -0.0041678003035485744, -0.0028884378261864185, -0.013704613782465458, -0.01187069620937109, -0.8215834498405457], "finish_reason": "stop"}], "metrics": {"energy": 102.98293645286557, "energy_per_token": 1.7755678698769926, "time": 3.7992594, "time_per_token": 0.0655044724137931}}
{"outputs": [{"text": " input_string.replace('\\n', ' ')", "tokens": [" input", "_", "string", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -0.5220692753791809, -0.06325823068618774, -0.37491393089294434, -0.19259996712207794, -0.0135006969794631, -0.1854865550994873, -0.38394150137901306, -0.005075901746749878, -0.2759931981563568], "finish_reason": "stop"}, {"text": " [line for line in re.split(r'[\\n]+', input_string) if line.strip()]", "tokens": [" [", "line", " for", " line", " in", " re", ".", "split", "(", "r", "'", "[\\", "n", "]+", "'", ",", " input", "_", "string", ")", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -1.2213969230651855, -0.00018976318824570626, -0.00010847456724150106, -1.9339951276779175, -6.460934673668817e-05, -0.035199373960494995, -1.0599985122680664, -0.1487942785024643, -1.834777593612671, -0.5198000073432922, -0.3752107322216034, -0.743753969669342, -0.0030307096894830465, -3.93382906622719e-05, -0.004282708279788494, -6.365573790390044e-05, -4.887569048150908e-06, -0.0682305172085762, -0.016255458816885948, -0.09379781037569046, -0.1977626532316208, -0.0042257304303348064, -0.002486353972926736, -0.046446558088064194, -0.0024251118302345276], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09470226615667343, -0.19844187796115875, -0.0009882333688437939, -0.038251977413892746, -0.3294850289821625, -0.04482690989971161, -0.0005616756388917565, -0.00025614796322770417, -0.00030429501202888787, -0.010709667578339577, -0.029342900961637497, -0.0013930626446381211, -0.018082061782479286, -1.4662635294371285e-05, -1.0132738680113107e-05, -0.00021038226259406656, -0.0073532648384571075, -0.0004828002711292356], "finish_reason": "stop"}, {"text": " pd.DataFrame([lines])", "tokens": [" pd", ".", "DataFrame", "([", "lines", "])", "\n"], "logprobs": [-0.007040690630674362, -0.00013255194062367082, -0.0009280903614126146, -3.0506839752197266, -0.3713688850402832, -0.29157203435897827, -1.2847745418548584], "finish_reason": "stop"}], "metrics": {"energy": 73.22205247306825, "energy_per_token": 1.109425037470731, "time": 4.00555, "time_per_token": 0.06069015151515152}}
{"outputs": [{"text": " re.sub(r\"\\\\t\", \" \", input_string)", "tokens": [" re", ".", "sub", "(", "r", "\"", "\\\\", "t", "\"", ",", " \"", " \"", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.9642282724380493, -0.0001839230244513601, -0.04514100030064583, -0.44520649313926697, -0.20682285726070404, -0.9930785894393921, -1.4813244342803955, -0.31362274289131165, -0.07479221373796463, -0.0004371640970930457, -0.11526843160390854, -0.020680047571659088, -0.0007267932523973286, -0.010057250037789345, -9.42901024245657e-05, -1.2993727978027891e-05, -0.06543648988008499, -0.16380682587623596], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -0.3457738161087036, -0.023653358221054077, -0.0055116829462349415, -0.0021333571057766676, -0.011751708574593067, -0.015462283045053482, -0.9804502129554749], "finish_reason": "stop"}], "metrics": {"energy": 122.22780491256711, "energy_per_token": 1.7461114987509587, "time": 4.428694, "time_per_token": 0.06326705714285714}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " re.findall('.+?\\\\n', input_string)", "tokens": [" re", ".", "find", "all", "('", ".", "+", "?", "\\\\", "n", "'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -1.3295598030090332, -0.0011704268399626017, -1.3704441785812378, -1.4457732439041138, -1.7526227235794067, -0.3489881157875061, -1.7363990545272827, -0.04443598538637161, -0.09103098511695862, -9.953480184776708e-05, -0.003281448734924197, -8.725739462533966e-05, -3.2186455882765586e-06, -0.06332357972860336, -0.009098143316805363], "finish_reason": "stop"}, {"text": " [re.sub('\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", "\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -1.993499755859375, -0.0004657614335883409, -0.0006990373367443681, -0.7719452977180481, -0.16193890571594238, -0.034789007157087326, -0.35429927706718445, -0.00021872512297704816, -0.00814911164343357, -0.014439377933740616, -0.0006724718841724098, -0.0059377942234277725, -0.04179617390036583, -0.03857077285647392, -2.0146166207268834e-05, -9.894321920000948e-06, -0.00017915551143232733, -0.005085153039544821, -0.0007039214833639562], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.008244055323302746, -0.00011967896716669202, -0.0009614374139346182, -0.35796523094177246, -0.029988529160618782, -0.005337274633347988, -0.0014455594355240464, -0.012917177751660347, -0.016779711470007896, -0.9690231680870056], "finish_reason": "stop"}], "metrics": {"energy": 56.137811435699476, "energy_per_token": 1.0395891006611013, "time": 3.3703938, "time_per_token": 0.0624147}}
{"outputs": [{"text": " input_string.split(\"\\n\")", "tokens": [" input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -3.2572784423828125, -1.6235237121582031, -0.011743697337806225, -0.34781840443611145, -0.0006348263123072684, -0.004906992893666029, -0.011238249950110912, -0.07553142309188843], "finish_reason": "stop"}, {"text": " [line for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -1.2213969230651855, -0.00018976318824570626, -0.00010847456724150106, -0.16868296265602112, -0.0001716466504149139, -2.288792165927589e-05, -0.00012706902634818107, -0.10981383174657822, -0.2091786414384842, -0.00025614796322770417, -0.0001294529065489769, -0.0012853225925937295, -0.00850046519190073, -0.06053519621491432, -0.09066347777843475, -0.002748642349615693, -0.0012828224571421742, -0.07656440883874893, -0.0028426735661923885], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.10090483725070953, -0.1789316087961197, -0.000719645875506103, -0.04707919433712959, -0.343607097864151, -0.048033706843853, -0.000658057106193155, -0.0002489972102921456, -0.0002361257211305201, -0.011942082084715366, -0.03400832787156105, -0.0015645894454792142, -0.012950833886861801, -1.5616295058862306e-05, -9.894321920000948e-06, -0.00018261195509694517, -0.007222731597721577, -0.0005087750032544136], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "\n"], "logprobs": [-0.007135265972465277, -9.60780744208023e-05, -0.001086121890693903, -0.32785743474960327, -0.030627846717834473, -0.005796764977276325, -0.0021652367431670427, -0.013746355660259724, -0.018924983218312263, -1.005327582359314], "finish_reason": "stop"}], "metrics": {"energy": 94.24629221343994, "energy_per_token": 1.5450211838268844, "time": 3.7970746, "time_per_token": 0.06224712459016394}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -3.2572784423828125, -0.4345455467700958, -0.01410268247127533, -0.0006164796068333089, -0.003715161932632327, -0.0535159707069397], "finish_reason": "stop"}, {"text": " filter(None, input_string.split('\\n'))", "tokens": [" filter", "(", "None", ",", " input", "_", "string", ".", "split", "('", "\\", "n", "'))", "\n"], "logprobs": [-2.395296096801758, -0.0029105464927852154, -1.2583885192871094, -0.00022027450904715806, -0.8544862270355225, -0.0012956805294379592, -5.5549986427649856e-05, -0.0003034608089365065, -0.2714865803718567, -0.13494454324245453, -0.0002972637885250151, -0.00011300401820335537, -0.00347605487331748, -0.0035582580603659153], "finish_reason": "stop"}, {"text": " [line.replace(\"\\t\", \" \") for line in lines]", "tokens": [" [", "line", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"", " \"", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -1.6407568454742432, -0.010077784769237041, -0.34932905435562134, -0.000562271336093545, -0.0004881620698142797, -9.07141511561349e-05, -0.03202856332063675, -0.012812202796339989, -0.002009873976930976, -0.014244073070585728, -2.074220174108632e-05, -9.536697689327411e-06, -0.0001517419150331989, -0.006197875365614891, -0.0006636562757194042], "finish_reason": "stop"}, {"text": " pd.DataFrame({\"Text\": lines})", "tokens": [" pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -1.4285938739776611, -0.7821232676506042, -0.004267751704901457, -0.002607994945719838, -0.013070502318441868, -0.01241750456392765], "finish_reason": "stop"}], "metrics": {"energy": 67.07082151031493, "energy_per_token": 1.2898234905829793, "time": 3.5819206, "time_per_token": 0.06888308846153847}}
{"outputs": [{"text": " input_string.strip().replace('\\t', ' ')", "tokens": [" input", "_", "string", ".", "strip", "()", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -2.519132614135742, -0.6180515885353088, -0.45564889907836914, -0.08169164508581161, -1.2545886039733887, -0.003174387151375413, -0.0044425842352211475, -0.06413739174604416, -0.034691717475652695, -0.0025515162851661444, -0.31269362568855286], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace('\\t', ' ') for line in lines]", "tokens": [" [", "line", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -0.3201203942298889, -0.04220207780599594, -0.0005978942499496043, -0.0002454218047205359, -0.000311802898067981, -0.010463261976838112, -0.0338396281003952, -0.0014575821114704013, -0.013466589152812958, -1.883488948806189e-05, -9.775113539944869e-06, -0.00015186110977083445, -0.005241936072707176, -0.0005924138822592795], "finish_reason": "stop"}, {"text": " pd.DataFrame(lines, columns=[\"Text\"])", "tokens": [" pd", ".", "DataFrame", "(", "lines", ",", " columns", "=[", "\"", "Text", "\"", "])"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -1.444210171699524, -0.5382305383682251, -0.03624116629362106, -0.04184156283736229, -0.6406240463256836, -0.0028709645848721266, -0.0044983625411987305, -0.0002109781780745834, -0.005738095846027136], "finish_reason": "stop"}], "metrics": {"energy": 81.88079043769837, "energy_per_token": 1.1532505695450475, "time": 4.433492, "time_per_token": 0.06244354929577465}}
{"outputs": [{"text": " input_string.strip()  # Remove leading and trailing whitespace", "tokens": [" input", "_", "string", ".", "strip", "()", "  ", "#", " Remove", " leading", " and", " trailing", " whites", "pace", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -2.0041351318359375, -0.0005679901223629713, -0.8920899033546448, -0.3251681625843048, -0.26764801144599915, -0.0008490057080052793, -0.16540861129760742, -0.07731688022613525, -0.370927631855011], "finish_reason": "stop"}, {"text": " re.split('\\n+', input_string.strip())", "tokens": [" re", ".", "split", "('", "\\", "n", "+'", ",", " input", "_", "string", ".", "strip", "())", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -0.6179757714271545, -0.41334590315818787, -0.1734517514705658, -0.0222209170460701, -0.09851180016994476, -6.270212179515511e-05, -0.0036487688776105642, -7.128461584215984e-05, -6.079655122448457e-06, -1.549710988998413, -0.038283757865428925, -0.10681605339050293, -0.01684793457388878], "finish_reason": "stop"}, {"text": " [line.replace(\"\\\\t\", \" \") for line in lines]", "tokens": [" [", "line", ".", "replace", "(", "\"", "\\\\", "t", "\"", ",", " \"", " \"", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -1.6407568454742432, -0.010077784769237041, -1.3502960205078125, -0.00960054062306881, -0.0011363723315298557, -0.0001062098381225951, -0.07008783519268036, -0.026215679943561554, -0.0031777145341038704, -0.023269789293408394, -2.109982233378105e-05, -1.5139465176616795e-05, -0.00024327656137757003, -0.0053990501910448074, -0.0008428120636381209], "finish_reason": "stop"}, {"text": " pd.DataFrame(lines, columns=['Text'])", "tokens": [" pd", ".", "DataFrame", "(", "lines", ",", " columns", "=['", "Text", "'])", "\n"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -1.4285938739776611, -0.7651306986808777, -0.033218737691640854, -0.050574734807014465, -0.7990096211433411, -0.006588640622794628, -0.008709066547453403, -0.8725925087928772], "finish_reason": "stop"}], "metrics": {"energy": 102.15017681503298, "energy_per_token": 1.7025029469172164, "time": 4.0062075, "time_per_token": 0.066770125}}
{"outputs": [{"text": " re.sub(r'(\\t)', ' ', input_string)", "tokens": [" re", ".", "sub", "(", "r", "'", "(\\", "t", ")'", ",", " '", " '", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.9642282724380493, -0.0001839230244513601, -0.04514100030064583, -0.44520649313926697, -0.20682285726070404, -2.577608585357666, -1.1822434663772583, -0.7858877182006836, -1.424548625946045, -0.0005092516075819731, -0.6123666763305664, -0.037920448929071426, -0.0010174104245379567, -0.012754649855196476, -0.0001147919538198039, -1.2278481335670222e-05, -0.10921347141265869, -0.15509524941444397], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [line.replace(\"\\t\", \" \") for line in lines]", "tokens": [" [", "line", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"", " \"", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -0.14144571125507355, -0.0011461363174021244, -0.06128277629613876, -1.8194184303283691, -0.011298955418169498, -0.35031601786613464, -0.0005749003030359745, -0.00051115796668455, -0.00010346830822527409, -0.03675275295972824, -0.01102734636515379, -0.00249301316216588, -0.017639076337218285, -2.074220174108632e-05, -9.059865078597795e-06, -0.00016151554882526398, -0.005200667306780815, -0.0006046851049177349], "finish_reason": "stop"}, {"text": " pd.DataFrame({\"Text\": lines})", "tokens": [" pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})"], "logprobs": [-0.007013109512627125, -9.595887240720913e-05, -0.0010977915953844786, -1.444210171699524, -1.0862175226211548, -0.0041678003035485744, -0.0028884378261864185, -0.013704613782465458, -0.01187069620937109], "finish_reason": "stop"}], "metrics": {"energy": 85.05387268829344, "energy_per_token": 1.2150553241184776, "time": 4.4266553, "time_per_token": 0.06323793285714285}}
{"outputs": [{"text": " input_string.replace('\\t', ' ')", "tokens": [" input", "_", "string", ".", "replace", "('", "\\", "t", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -0.5220692753791809, -0.06325823068618774, -1.2784268856048584, -0.002371596172451973, -0.001279726973734796, -0.06917072832584381, -0.03584974631667137, -0.0024069168139249086, -0.2764909565448761], "finish_reason": "stop"}, {"text": " re.split('\\n+', input_string.strip())", "tokens": [" re", ".", "split", "('", "\\", "n", "+'", ",", " input", "_", "string", ".", "strip", "())", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -0.6179757714271545, -0.41334590315818787, -0.1734517514705658, -0.0222209170460701, -0.09851180016994476, -6.270212179515511e-05, -0.0036487688776105642, -7.128461584215984e-05, -6.079655122448457e-06, -1.549710988998413, -0.038283757865428925, -0.10681605339050293, -0.01684793457388878], "finish_reason": "stop"}, {"text": " [re.sub(' +', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", " +", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -1.993499755859375, -0.0004657614335883409, -0.0006990373367443681, -0.7719452977180481, -2.8485748767852783, -0.003058044472709298, -6.294052582234144e-05, -0.005481332540512085, -0.0010584949050098658, -0.00028975578607060015, -0.008110682480037212, -0.09031109511852264, -0.09333642572164536, -2.5152843591058627e-05, -9.179073458653875e-06, -0.0001699779968475923, -0.0031976778991520405, -0.0017536989180371165], "finish_reason": "stop"}, {"text": " pd.DataFrame(lines, columns=['Text'])", "tokens": [" pd", ".", "DataFrame", "(", "lines", ",", " columns", "=['", "Text", "'])", "\n"], "logprobs": [-0.008244055323302746, -0.00011967896716669202, -0.0009614374139346182, -1.4179131984710693, -0.6680445075035095, -0.04047262296080589, -0.038751523941755295, -0.7543925642967224, -0.006526701617985964, -0.006993222050368786, -0.7747451066970825], "finish_reason": "stop"}], "metrics": {"energy": 66.26916765213011, "energy_per_token": 1.1232062313920357, "time": 3.5895214, "time_per_token": 0.06083934576271187}}
{"outputs": [{"text": " input_string.strip()", "tokens": [" input", "_", "string", ".", "strip", "()", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -0.6749210357666016, -0.08000203222036362, -0.285638689994812], "finish_reason": "stop"}, {"text": " re.findall(r'\\S+', input_string)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "S", "+'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-2.1632556915283203, -4.053033626405522e-05, -1.3295598030090332, -0.0011704268399626017, -0.32517901062965393, -0.03830612823367119, -0.6378234028816223, -0.22795630991458893, -0.347210556268692, -5.864924969500862e-05, -0.00375459180213511, -4.470248313737102e-05, -4.0531076592742465e-06, -0.07516824454069138, -0.014961413107812405], "finish_reason": "stop"}, {"text": " [line.replace(\"\\t\", \" \") for line in lines]", "tokens": [" [", "line", ".", "replace", "(", "\"", "\\", "t", "\"", ",", " \"", " \"", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09974965453147888, -0.1577015072107315, -0.0010487301042303443, -0.06136372685432434, -1.6407568454742432, -0.010077784769237041, -0.34932905435562134, -0.000562271336093545, -0.0004881620698142797, -9.07141511561349e-05, -0.03202856332063675, -0.012812202796339989, -0.002009873976930976, -0.014244073070585728, -2.074220174108632e-05, -9.536697689327411e-06, -0.0001517419150331989, -0.006197875365614891, -0.0006636562757194042], "finish_reason": "stop"}, {"text": " pd.DataFrame({\"Text\": lines})<|endoftext|>from task_1_1_1 import task_func", "tokens": [" pd", ".", "DataFrame", "(", "{\"", "Text", "\":", " lines", "})", "<", "|", "end", "of", "text", "|>", "from", " task", "_", "1", "_", "1", "_", "1", " import", " task", "_", "func", "\n"], "logprobs": [-0.007006125058978796, -0.00010930894495686516, -0.0009650102583691478, -1.4285938739776611, -0.7821232676506042, -0.004267751704901457, -0.002607994945719838, -0.013070502318441868, -0.01241750456392765, -1.131887674331665, -2.3841855067985307e-07, -4.768370445162873e-07, -1.9073304429184645e-05, -0.00015138434537220746, -0.06230492889881134, -1.0607078075408936, -3.6589603424072266, -0.5223119258880615, -1.6096044778823853, -2.277947187423706, -2.1870808601379395, -2.165015697479248, -1.3171747922897339, -0.40598416328430176, -0.7853314876556396, -0.03910421207547188, -0.2806231677532196, -0.21583954989910126], "finish_reason": "stop"}], "metrics": {"energy": 119.38873781490324, "energy_per_token": 1.7302715625348295, "time": 4.4331155, "time_per_token": 0.06424805072463768}}
{"outputs": [{"text": " re.sub(r'\\t', ' ', input_string)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "t", "'", ",", " '", " '", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.9642282724380493, -0.0001839230244513601, -0.04514100030064583, -0.44520649313926697, -0.20682285726070404, -1.0846904516220093, -0.6690035462379456, -0.3873700499534607, -0.0003194298769813031, -0.06666040420532227, -0.010984900407493114, -0.0012201968347653747, -0.008318537846207619, -6.532455881824717e-05, -1.3828182090946939e-05, -0.1094299778342247, -0.24258174002170563], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [re.sub('\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", "\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -2.108429431915283, -0.00040236959466710687, -0.0009132028790190816, -0.8341054320335388, -0.17498482763767242, -0.02538074180483818, -0.3768971562385559, -0.0002338612830499187, -0.008150412701070309, -0.01548693235963583, -0.0007616956136189401, -0.006803206168115139, -0.042038753628730774, -0.042184021323919296, -1.4662635294371285e-05, -9.65590606938349e-06, -0.0001851148990681395, -0.0043741026893258095, -0.0008304246584884822], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.00738142803311348, -0.00013469743134919554, -0.0009521479951217771, -0.36282312870025635, -0.036586008965969086, -0.005666384007781744, -0.0014786511892452836, -0.012002155184745789, -0.017109764739871025, -1.0409513711929321, -2.3841855067985307e-07, -4.768370445162873e-07, -2.6702524337451905e-05, -9.107174992095679e-05, -0.08000951260328293, -1.3334592580795288, -2.646406650543213, -0.008912189863622189, -0.01595550961792469, -0.0018347349250689149, -0.013306385837495327, -0.0026323688216507435, -0.00012134769349358976, -0.008315346203744411, -0.0016890796832740307, -0.000753476400859654], "finish_reason": "stop"}], "metrics": {"energy": 98.1739070014954, "energy_per_token": 1.1284357126608666, "time": 4.8509483, "time_per_token": 0.055758026436781606}}
{"outputs": [{"text": " input_string.replace('\\\\t', ' ')", "tokens": [" input", "_", "string", ".", "replace", "('\\\\", "t", "'", ",", " '", " '", ")", "\n"], "logprobs": [-0.30510199069976807, -0.0004606377915479243, -9.131014667218551e-05, -0.008053923025727272, -1.0614204406738281, -1.6307823657989502, -0.6279338002204895, -0.002626780653372407, -0.0005075835506431758, -0.057506974786520004, -0.07171593606472015, -0.0045836856588721275, -0.2269226759672165], "finish_reason": "stop"}, {"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.3655470907688141, -0.09112359583377838, -0.35218381881713867, -0.018109573051333427, -0.00832716841250658, -0.00793424341827631, -0.00012742661056108773, -0.0001387499796692282, -0.050183895975351334, -0.000176652567461133, -3.373566141817719e-05, -8.105902816168964e-05, -0.04006979614496231, -0.2673615515232086, -0.00018535325943958014, -7.652943895664066e-05, -0.0011445883428677917, -0.040727995336055756, -0.0335359163582325, -0.03036421164870262, -0.0006411403883248568, -0.00022802136663813144, -0.05487045645713806, -0.0013180625392124057], "finish_reason": "stop"}, {"text": " [re.sub('\\t', ' ', line) for line in lines]", "tokens": [" [", "re", ".", "sub", "('", "\\", "t", "'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.09925700724124908, -2.108429431915283, -0.00040236959466710687, -0.0009132028790190816, -0.8341054320335388, -0.17498482763767242, -0.02538074180483818, -0.3768971562385559, -0.0002338612830499187, -0.008150412701070309, -0.01548693235963583, -0.0007616956136189401, -0.006803206168115139, -0.042038753628730774, -0.042184021323919296, -1.4662635294371285e-05, -9.65590606938349e-06, -0.0001851148990681395, -0.0043741026893258095, -0.0008304246584884822], "finish_reason": "stop"}, {"text": " pd.DataFrame({'Text': lines})", "tokens": [" pd", ".", "DataFrame", "({", "'", "Text", "':", " lines", "})"], "logprobs": [-0.00738142803311348, -0.00013469743134919554, -0.0009521479951217771, -0.36282312870025635, -0.036586008965969086, -0.005666384007781744, -0.0014786511892452836, -0.012002155184745789, -0.017109764739871025], "finish_reason": "stop"}], "metrics": {"energy": 74.98597210788725, "energy_per_token": 1.1361510925437461, "time": 4.012729, "time_per_token": 0.060798924242424245}}
