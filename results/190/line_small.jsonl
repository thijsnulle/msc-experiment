{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.19092151522636414, -6.818538531661034e-05, -0.000871159543748945, -2.7418097943154862e-06, -2.6464111215318553e-05, -0.00012909532233607024, -0.12144162505865097, -3.0517112463712692e-05, -0.01939242146909237, -0.007784506306052208], "finish_reason": "stop"}, {"text": " csv_input", "tokens": [" c", "sv", "_", "input", "\n"], "logprobs": [-0.5722948908805847, -0.001128751551732421, -1.1559910774230957, -0.008108199574053288, -0.13200820982456207], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as file:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.009358112700283527, -0.001512932125478983, -0.003515850519761443, -1.2993727978027891e-05, -9.417090768693015e-05, -0.27082839608192444, -0.3117961287498474, -0.057566847652196884, -0.18947680294513702, -0.0006578188622370362, -1.5516903400421143, -0.01838570274412632, -0.21274468302726746], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.0005323661607690156, -1.1324817933200393e-05, -3.1470757676288486e-05, -0.010372893884778023, -4.172316494077677e-06, -9.178694017464295e-05, -0.047556281089782715, -0.008614994585514069, -0.6890568733215332, -0.0002585315378382802, -0.03702343627810478, -0.053276386111974716, -0.3785165548324585, -0.8599427342414856, -0.041620779782533646], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007905504666268826, -0.00027855331427417696, -9.011816291604191e-05, -4.565611743601039e-05, -0.004803308751434088, -0.023641832172870636, -0.020681915804743767, -2.038458114839159e-05, -4.6967357775429264e-05, -9.298280929215252e-06, -4.5298504119273275e-05, -0.01116763986647129, -0.7907732725143433], "finish_reason": "stop"}, {"text": " conn.cursor()  # Get cursor", "tokens": [" conn", ".", "cursor", "()", "  ", "#", " Get", " cursor", "\n"], "logprobs": [-0.0005659647285938263, -5.960446742392378e-06, -0.0021069487556815147, -0.0002169373765354976, -2.929753065109253, -0.00016592556494288146, -2.6624250411987305, -2.7941782474517822, -0.7970523834228516], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.2198476791381836, -0.06879410892724991], "finish_reason": "stop"}, {"text": "execute(f\"\"\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({cols[0]} {cols[1]})\"\"\")  # Check if the table exists and create if not", "tokens": ["execute", "(", "f", "\"", "\"", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", " {", "cols", "[", "1", "]", "})", "\"", "\"", "\"", ")", "  ", "#", " Check", " if", " the", " table", " exists", " and", " create", " if", " not", "\n"], "logprobs": [-0.050443943589925766, -0.297886461019516, -0.3876766264438629, -0.49740320444107056, -1.7747883796691895, -0.0001408954558428377, -0.5473461747169495, -0.012950480915606022, -0.05741715803742409, -0.000442407006630674, -0.00046885941992513835, -0.0001879753835964948, -0.06438690423965454, -0.0019081495702266693, -1.0847986231965479e-05, -1.549708758830093e-05, -0.08474038541316986, -1.7482150793075562, -0.43665775656700134, -0.6098619103431702, -0.01003636047244072, -0.16076932847499847, -2.014345407485962, -0.048712119460105896, -0.00525747099891305, -0.03839205950498581, -0.264539897441864, -0.06613243371248245, -0.04233977943658829, -0.0009118927991949022, -0.0002401778765488416, -0.011902621015906334, -1.8927772045135498, -0.0004543225804809481, -3.843482494354248, -0.6268932223320007, -1.6153128147125244, -0.035090841352939606, -0.42793288826942444, -2.661773204803467, -0.25058427453041077, -1.502966046333313, -0.4295326769351959, -0.1041659489274025], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.016851216554641724, -0.14646406471729279, -0.14071358740329742, -0.1397712528705597, -0.002532372483983636, -0.003238316625356674, -0.07368995249271393, -0.00045158201828598976, -1.6689286894688848e-06, -5.8412379075889476e-06, -0.06769100576639175, -0.2768470346927643, -0.019292449578642845, -0.005881266202777624, -0.7442037463188171, -0.0001501924270996824, -0.0001530530134914443, -0.0394689217209816, -0.03294886648654938, -0.021145615726709366, -0.007519867736846209, -0.03508048504590988], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.007819990627467632, -0.0010629009921103716, -0.009412908926606178, -0.07406540215015411], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for col in cols])})', [row[col] for col in cols])", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " col", " in", " col", "s", "])", "})", "'", ",", " [", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "\n"], "logprobs": [-0.05162316933274269, -0.03466373682022095, -0.06941921263933182, -0.35298803448677063, -0.0026968084275722504, -2.0265558760002023e-06, -0.004739598371088505, -0.003334559267386794, -0.0002337421028641984, -1.0013530300057027e-05, -3.790783375734463e-05, -0.004081254359334707, -0.18447944521903992, -0.08774863183498383, -0.009745992720127106, -0.011632471345365047, -0.13087640702724457, -5.0424259825376794e-05, -0.00018082413589581847, -0.0785142332315445, -0.5892290472984314, -0.043596841394901276, -0.6375554203987122, -0.003443385474383831, -0.12856867909431458, -2.2480552196502686, -0.0030172797851264477, -0.07251674681901932, -0.0009815642843022943, -0.003321371041238308, -0.0015737541252747178, -0.0035574266221374273, -0.0020437799394130707, -1.3652974367141724, -0.19513903558254242, -0.07707211375236511, -0.06430161744356155, -0.001999523490667343, -0.02802535519003868, -0.0006596058374270797, -0.0004048719711136073, -0.013412603177130222, -0.00014780859055463225, -0.0009089152445085347, -0.015661809593439102], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012909999117255211, -0.0002215855201939121, -0.08335910737514496], "finish_reason": "stop"}, {"text": " pd.read_sql(f\"SELECT * from {TABLE_NAME}\", conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "\"", "SELECT", " *", " from", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ")", "\n"], "logprobs": [-0.028352413326501846, -2.7417760065873154e-05, -0.018568499013781548, -0.00025340684805996716, -0.0009733468177728355, -0.4974803328514099, -0.023444240912795067, -1.5067518949508667, -0.015765195712447166, -0.15061338245868683, -2.8255269527435303, -0.006988131906837225, -0.0006629414856433868, -3.576278118089249e-07, -2.9802276912960224e-06, -0.016147430986166, -0.0003716255014296621, -0.02724679931998253, -0.21385033428668976, -0.14135515689849854], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.01467587798833847, -0.0012697261990979314, -0.017679834738373756], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.011482462286949158, -0.00010930894495686516, -0.6650686860084534], "finish_reason": "stop"}], "metrics": {"energy": 304.93939560794826, "energy_per_token": 1.4452104057248734, "time": 13.229306, "time_per_token": 0.0626981327014218}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -0.42585235834121704, -0.0003313469351269305, -0.0025512785650789738, -0.04200800508260727, -0.0001793938863556832, -0.00016258825780823827, -0.2002900242805481, -0.07139721512794495], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.011684904806315899, -0.0014072287594899535, -0.0032643387094140053, -1.5020257706055418e-05, -0.00010597144137136638, -0.2745029628276825, -0.2842000722885132, -0.04583675041794777, -0.15817707777023315, -0.000635183765552938, -1.2399911880493164, -0.0027479289565235376, -0.0574176087975502, -0.09056320041418076, -0.001290918211452663, -0.17865565419197083], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004010588163509965, -1.4424220353248529e-05, -3.528532761265524e-05, -0.010824652388691902, -4.887569048150908e-06, -7.188061863416806e-05, -0.04314640909433365, -0.008511812426149845, -0.647166907787323], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create a new database or replace an existing one", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " a", " new", " database", " or", " replace", " an", " existing", " one", "\n"], "logprobs": [-0.007715662010014057, -0.0002165798214264214, -8.046303264563903e-05, -5.566918844124302e-05, -0.003680481342598796, -0.025983868166804314, -0.02658790536224842, -1.7762025890988298e-05, -3.218599158572033e-05, -9.059865078597795e-06, -4.649054244509898e-05, -0.012378179468214512, -0.5474503636360168, -0.00036840804386883974, -1.0319921970367432, -0.38247212767601013, -1.0487544536590576, -0.5187118053436279, -2.2902705669403076, -1.9683609008789062, -0.40715691447257996, -0.045621175318956375, -0.05884864926338196, -0.05494154617190361], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006797387031838298, -5.722029527532868e-06, -0.002148464322090149, -0.00021884430316276848, -0.0495416484773159], "finish_reason": "stop"}, {"text": " next(dr).keys()  # Get the keys of the first row in csv file", "tokens": [" next", "(", "dr", ")", ".", "keys", "()", "  ", "#", " Get", " the", " keys", " of", " the", " first", " row", " in", " c", "sv", " file", "\n"], "logprobs": [-3.397413969039917, -0.00018082413589581847, -0.01570194400846958, -0.0807635709643364, -0.3427690863609314, -0.005685112439095974, -0.000648883986286819, -1.007185697555542, -0.00029404606902971864, -0.5470641255378723, -0.9618721604347229, -2.0487303733825684, -1.3858625888824463, -0.0250313188880682, -0.05961602181196213, -0.10080891847610474, -1.884474277496338, -3.0022222995758057, -0.0007383481133729219, -2.2523081302642822, -0.3529859185218811], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({','.join(cols)})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{'", ",", "'", ".", "join", "(", "cols", ")})", "\"", ")", "\n"], "logprobs": [-0.05808068811893463, -0.29215389490127563, -0.39359191060066223, -0.5013949871063232, -0.28781986236572266, -0.0089932382106781, -0.1544646918773651, -0.0003026265767402947, -0.0005103239673189819, -0.00026008085114881396, -0.045616503804922104, -0.0018680518260225654, -7.390948667307384e-06, -1.0013530300057027e-05, -0.10626330971717834, -0.66001957654953, -0.05616586282849312, -0.01559444423764944, -0.3332877457141876, -0.00015555603022221476, -0.00011622230522334576, -0.06767407059669495, -0.03826161473989487, -0.017386874184012413, -0.056922007352113724, -0.005577596835792065, -0.12383618950843811], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE {TABLE_NAME} ({cols})'.format(cols=','.join(cols)))", "tokens": ["execute", "('", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "'", ".", "format", "(", "cols", "='", ",", "'", ".", "join", "(", "cols", ")))", "\n"], "logprobs": [-0.016008656471967697, -1.8814269304275513, -0.08098654448986053, -0.0036311899311840534, -0.2458646297454834, -1.864649772644043, -0.0001333863037871197, -0.0004899493651464581, -0.06151888146996498, -0.23668093979358673, -0.20992562174797058, -0.23290854692459106, -0.02759556658565998, -0.01500533428043127, -0.004679680336266756, -0.001999285537749529, -0.273423969745636, -0.21843411028385162, -0.0029708081856369972, -0.560497522354126, -0.00013410145766101778, -0.00036244976217858493, -0.047935307025909424, -0.045360781252384186, -0.052195630967617035, -0.04816526547074318], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009251227602362633, -0.0009710840531624854, -0.010780665092170238, -0.059653423726558685], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join([row[col] for col in cols])})\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{'", ",", " '", ".", "join", "([", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "})", "\"", ")", "\n"], "logprobs": [-0.05456866696476936, -0.04006842151284218, -0.07961008697748184, -1.3321698904037476, -0.01725776121020317, -3.099436753473128e-06, -0.007027196232229471, -0.007048503030091524, -0.00034231049357913435, -9.65590606938349e-06, -3.576214658096433e-05, -0.006993813905864954, -0.11572436988353729, -0.5671729445457458, -0.03225609287619591, -0.010309301316738129, -0.2598128318786621, -4.2199197196168825e-05, -0.00017951308109331876, -0.09243279695510864, -1.776491641998291, -0.059893615543842316, -0.05128256976604462, -0.003352024592459202, -0.05724053829908371, -0.00012611546844709665, -0.00047255316167138517, -0.08248791098594666, -6.878139538457617e-05, -0.0011074369540438056, -0.0009545299108140171, -0.0013817534781992435, -0.0016558758215978742, -0.030816392973065376], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013235685415565968, -0.0001722425949992612, -0.07616548240184784], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02159160189330578, -3.123234637314454e-05, -0.024039458483457565, -0.00029571453342214227, -0.0008905735448934138, -0.5257430076599121, -0.02862723544239998, -0.2838650047779083, -0.009057859890162945, -0.10577761381864548, -0.06156158819794655, -0.012613636441528797, -0.00037853704998269677, -3.933898824470816e-06, -4.172316494077677e-06, -0.01556885801255703, -0.00016973962192423642, -0.031091926619410515, -0.16792930662631989, -0.11868755519390106], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013241567648947239, -0.00109576724935323, -0.020018097013235092], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>#!/usr/bin/env python3", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.009459082037210464, -0.00011240804451517761, -1.1228828430175781, -2.3841855067985307e-07, -1.311301275563892e-06, -4.2914423829643056e-05, -0.00025900822947733104, -0.07273934781551361, -1.0101336240768433, -1.298086404800415, -0.048697810620069504, -0.06915905326604843, -0.00010394509445177391, -0.00445528281852603, -0.0004686211177613586, -0.08538702130317688, -0.004137171432375908, -0.6331323981285095, -0.020443445071578026], "finish_reason": "stop"}], "metrics": {"energy": 292.7548301382064, "energy_per_token": 1.2618742678370964, "time": 13.241976, "time_per_token": 0.057077482758620686}}
{"outputs": [{"text": " not isinstance(csv_input, StringIO):", "tokens": [" not", " isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-2.29884934425354, -0.08552689850330353, -0.00012170527770649642, -0.0008659188752062619, -4.291525328881107e-06, -3.373566141817719e-05, -0.00010275312524754554, -0.18133385479450226, -5.3881147323409095e-05, -0.12580318748950958, -0.008622203953564167], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.6433075070381165, -0.0010469438275322318, -0.3488382399082184, -0.3405440151691437, -0.00034517052699811757, -0.0024440200068056583, -0.045618098229169846, -0.00016544880054425448, -0.00020215852418914437, -0.24007315933704376, -0.06533151865005493], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.010724881663918495, -0.001620409544557333, -0.0037602924276143312, -1.537788011773955e-05, -0.00013004888023715466, -0.2404446005821228, -0.29822030663490295, -0.048062678426504135, -0.16550923883914948, -0.0006481691962108016, -0.8280861973762512, -0.08125211298465729, -0.2753370702266693], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004353767435532063, -1.7046782886609435e-05, -4.0411134250462055e-05, -0.012647655792534351, -3.933898824470816e-06, -7.64102369430475e-05, -0.03921723738312721, -0.009605026803910732, -0.669208824634552], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Open the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Open", " the", " database", "\n"], "logprobs": [-0.0065691000781953335, -0.00025185750564560294, -8.892617915989831e-05, -5.018585216021165e-05, -0.003621806390583515, -0.022797051817178726, -0.02462373673915863, -2.3007127310847864e-05, -4.434487345861271e-05, -5.245195097813848e-06, -4.434487345861271e-05, -0.012588916346430779, -0.5965532064437866, -0.00034362133010290563, -1.8720104694366455, -1.1663092374801636, -0.2718447148799896, -0.4898459017276764], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007270314963534474, -5.722029527532868e-06, -0.0015882747247815132, -0.00020954797219019383, -0.05878705531358719], "finish_reason": "stop"}, {"text": " next(dr)", "tokens": [" next", "(", "dr", ")", "\n"], "logprobs": [-3.3969979286193848, -0.00016711745411157608, -0.018249696120619774, -0.0680062398314476, -1.7220031023025513], "finish_reason": "stop"}, {"text": "execute(\"\"\"", "tokens": ["execute", "(", "\"", "\"", "\"", "\n"], "logprobs": [-0.04822877049446106, -0.3149353265762329, -1.5299092531204224, -1.3224902153015137, -0.0025052609853446484, -0.9257535338401794], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.019007446244359016, -0.14821863174438477, -0.14796215295791626, -0.16788022220134735, -0.003048061393201351, -0.002945729298517108, -0.07028253376483917, -0.0003718638326972723, -1.9073468138230965e-06, -6.437280717364047e-06, -0.09076963365077972, -0.2944904565811157, -0.02052239701151848, -0.005750304087996483, -0.6839622259140015, -4.935142715112306e-05, -8.189342770492658e-05, -0.06451667100191116, -0.04126497358083725, -0.014654967933893204, -0.006619194056838751, -0.029000649228692055], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.006767803803086281, -0.0010401559993624687, -0.01024145632982254, -0.07010795176029205], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([col.strip() for col in row.values()])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "col", ".", "strip", "()", " for", " col", " in", " row", ".", "values", "()", "])", "})", "')", "\n"], "logprobs": [-0.047244198620319366, -0.03842119500041008, -0.07760284096002579, -0.30597180128097534, -0.0024813597556203604, -1.7881377516459906e-06, -0.004274992737919092, -0.003444098401814699, -0.00025948495022021234, -9.894321920000948e-06, -3.766942609217949e-05, -0.004490292631089687, -0.19765934348106384, -0.09399163722991943, -0.010447099804878235, -0.012312947772443295, -0.16177910566329956, -4.23184028477408e-05, -0.00017820201173890382, -0.07876767963171005, -2.6648926734924316, -0.6772527694702148, -1.1067752838134766, -0.29076412320137024, -0.1609828770160675, -0.002916489727795124, -0.0022136487532407045, -0.1067681610584259, -0.017501210793852806, -0.01996995508670807, -0.0032209681812673807, -0.008242400363087654, -0.0010827876394614577, -0.003541390411555767, -0.04489974305033684], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.018607933074235916, -0.00021717573690693825, -0.07400296628475189], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.025347966700792313, -2.288792165927589e-05, -0.022993257269263268, -0.00022909401741344482, -0.0009591746493242681, -0.587505042552948, -0.021433742716908455, -0.23343737423419952, -0.011482108384370804, -0.11416652798652649, -0.057116471230983734, -0.012883874587714672, -0.00042798896902240813, -5.006777428206988e-06, -5.8412379075889476e-06, -0.017659103497862816, -0.0001858300092862919, -0.03652923181653023, -0.1540723741054535, -0.1022457480430603], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.012772656977176666, -0.001321157906204462, -0.02185499109327793], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>#!/usr/bin/env python3", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.010436718352138996, -9.667406266089529e-05, -1.2201977968215942, -1.1920928244535389e-07, -1.1920922133867862e-06, -4.1126360883936286e-05, -0.0003323002893012017, -0.07451927661895752, -0.972236692905426, -1.2691746950149536, -0.05041118711233139, -0.06704073399305344, -0.00010311071673640981, -0.004488987382501364, -0.00045348849380388856, -0.061096858233213425, -0.003956111613661051, -0.6272059082984924, -0.022073419764637947], "finish_reason": "stop"}], "metrics": {"energy": 252.03147387981406, "energy_per_token": 1.369736271085946, "time": 10.733093, "time_per_token": 0.058332027173913045}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " csv.reader(csv_input)", "tokens": [" c", "sv", ".", "reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5740599036216736, -0.0009708458674140275, -0.42586949467658997, -1.338532567024231, -0.00272617326118052, -0.01545336190611124, -4.255681051290594e-05, -9.715084888739511e-05, -0.2030276656150818, -0.06493121385574341], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0118888383731246, -0.0014934111386537552, -0.0030434264335781336, -1.3708974620385561e-05, -0.00012540031457319856, -0.2898825705051422, -0.3119078278541565, -0.047809284180402756, -0.17320936918258667, -0.0006300609675236046, -0.897813081741333, -0.05355077236890793, -0.22261078655719757], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.0004471732536330819, -1.6093124941107817e-05, -3.194758028257638e-05, -0.009461797773838043, -5.125986263010418e-06, -8.082063141046092e-05, -0.04601072520017624, -0.010990677401423454, -0.6685152649879456, -0.00040260792593471706, -0.039427436888217926, -0.041261084377765656, -0.3579562306404114, -0.7079331278800964], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Open a new connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Open", " a", " new", " connection", " to", " the", " database", "\n"], "logprobs": [-0.008600929751992226, -0.00023731753753963858, -9.142934868577868e-05, -4.5060096454108134e-05, -0.004362945910543203, -0.02621091902256012, -0.029320674017071724, -2.0503786799963564e-05, -4.0411134250462055e-05, -6.556489552167477e-06, -4.076874756719917e-05, -0.009914086200296879, -0.5620675086975098, -0.00024327656137757003, -1.8001810312271118, -0.9815913438796997, -1.9116250276565552, -0.9096998572349548, -0.2602139413356781, -0.07375551015138626, -0.19149929285049438, -0.05124383792281151], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007625294383615255, -6.079655122448457e-06, -0.0019621660467237234, -0.0002544794406276196, -0.04753024876117706], "finish_reason": "stop"}, {"text": " [name for name in dr.fieldnames]  # Get column names from the CSV", "tokens": [" [", "name", " for", " name", " in", " dr", ".", "field", "names", "]", "  ", "#", " Get", " column", " names", " from", " the", " CS", "V", "\n"], "logprobs": [-1.1593999862670898, -3.773135185241699, -0.24929454922676086, -0.03540846332907677, -0.19578994810581207, -0.11806867271661758, -0.0028393452521413565, -0.002803088864311576, -0.0021261009387671947, -0.023399990051984787, -1.5443116426467896, -0.0006232702871784568, -0.9608728289604187, -0.8490186929702759, -0.046824414283037186, -0.8193497061729431, -1.0621201992034912, -0.7670741081237793, -0.0009860896971076727, -1.7082633972167969], "finish_reason": "stop"}, {"text": "executemany(f'CREATE TABLE {TABLE_NAME}({\",\".join(cols)})', dr)", "tokens": ["exec", "ut", "em", "any", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}(", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "'", ",", " dr", ")", "\n"], "logprobs": [-2.7504751682281494, -0.12086658924818039, -0.013231215067207813, -0.0032707550562918186, -0.29256758093833923, -0.8791912794113159, -1.1885449886322021, -0.18777582049369812, -0.00412779301404953, -0.9154849648475647, -0.0015138844028115273, -1.1444026313256472e-05, -1.9073304429184645e-05, -2.4178013801574707, -0.3893395662307739, -0.011268308386206627, -0.2981541156768799, -0.00014149141497910023, -0.00014530557382386178, -0.031653158366680145, -0.02516094222664833, -0.015413803048431873, -0.06512971222400665, -0.006959483493119478, -0.355673611164093, -0.7130767107009888, -0.08451222628355026], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE {TABLE_NAME} ({})\".format(\", \".join(cols)))", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "})", "\"", ".", "format", "(", "\"", ",", " \"", ".", "join", "(", "cols", ")))", "\n"], "logprobs": [-0.015144836157560349, -0.177286759018898, -0.1765085756778717, -2.0499889850616455, -0.3373456299304962, -0.004765343852341175, -0.1557888686656952, -0.0005810956354252994, -1.5497195136049413e-06, -6.6756979322235566e-06, -0.14161810278892517, -0.8050692081451416, -2.192828893661499, -0.007365098223090172, -0.027013834565877914, -0.0017746428493410349, -1.0335813760757446, -0.1957959234714508, -0.002754824236035347, -0.34106796979904175, -0.000316212244797498, -0.0004182179400231689, -0.2234443873167038, -0.09456540644168854, -0.01799343340098858, -0.04263591393828392], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008950943127274513, -0.0010954099707305431, -0.010044857859611511, -0.06345963478088379], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"{value}\" for value in row.values()])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "{", "value", "}\"", " for", " value", " in", " row", ".", "values", "()", "])", "})", "')", "\n"], "logprobs": [-0.05959109216928482, -0.03639187663793564, -0.09075123071670532, -0.4202512502670288, -0.0027885858435183764, -1.4305104514278355e-06, -0.004460267256945372, -0.003181754844263196, -0.00026592056383378804, -1.2874520507466514e-05, -3.158996332786046e-05, -0.0035171573981642723, -0.2147514820098877, -0.08039283007383347, -0.011514869518578053, -0.010577566921710968, -0.15238496661186218, -4.2676016164477915e-05, -0.00019572250312194228, -0.07141496986150742, -0.550995409488678, -0.04904394596815109, -1.8974472284317017, -2.185295581817627, -0.13327501714229584, -0.009024427272379398, -0.06874792277812958, -0.000856509490404278, -0.02928166091442108, -0.0026773104909807444, -0.0012042421149089932, -0.021819883957505226, -0.0019646643195301294, -0.001142206834629178, -0.004987180698662996, -0.03510028123855591], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013447064906358719, -0.00020203932945150882, -0.07041475921869278], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f\"SELECT * FROM {TABLE_NAME}\", conn)  # Get the data as a pandas DataFrame", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "\"", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ")", "  ", "#", " Get", " the", " data", " as", " a", " pandas", " Data", "Frame", "\n"], "logprobs": [-0.021085156127810478, -3.1709168979432434e-05, -0.028033817186951637, -0.00017093151109293103, -0.0010488491971045732, -0.867511510848999, -0.09891940653324127, -0.0099741630256176, -0.025350989773869514, -1.1611636877059937, -0.028252175077795982, -0.11086803674697876, -0.07355163246393204, -0.008375401608645916, -0.0006644901586696506, -8.821448318485636e-06, -5.006777428206988e-06, -0.028819750994443893, -0.0010363452602177858, -0.020998194813728333, -0.10985014587640762, -2.459563970565796, -0.0004180987598374486, -2.9184226989746094, -1.5362906455993652, -0.28416624665260315, -0.9070726037025452, -0.09596759080886841, -0.6706114411354065, -0.08960845321416855, -0.013712374493479729, -0.022152358666062355], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014531141147017479, -0.0013506823452189565, -0.018805544823408127], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>import sqlite3", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "import", " sql", "ite", "3", "\n"], "logprobs": [-0.009686137549579144, -0.00010775939153973013, -1.294293999671936, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.7444173105759546e-05, -0.0002517383254598826, -0.09140846878290176, -1.2705118656158447, -3.070908784866333, -0.016487542539834976, -0.0011628062929958105, -0.01992812193930149], "finish_reason": "stop"}], "metrics": {"energy": 329.597462463379, "energy_per_token": 1.384863287661256, "time": 13.665891, "time_per_token": 0.05741971008403361}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " StringIO(csv_input.getvalue())", "tokens": [" String", "IO", "(", "csv", "_", "input", ".", "get", "value", "())", "\n"], "logprobs": [-2.202174186706543, -0.0016548046842217445, -0.16704829037189484, -0.011914871633052826, -0.00032944019767455757, -0.00020728347590193152, -0.03267188370227814, -0.5434257388114929, -0.0011062461417168379, -0.011268544010818005, -0.09466864913702011], "finish_reason": "stop"}, {"text": " open(csv_input, encoding='utf-8', newline='') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " encoding", "='", "utf", "-", "8", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.011291176080703735, -0.0016545667313039303, -0.004415524657815695, -1.2397689715726301e-05, -9.190614218823612e-05, -0.2993430495262146, -2.7377922534942627, -0.14759811758995056, -0.13945141434669495, -0.15797637403011322, -0.004589974880218506, -2.857300281524658, -0.0887996256351471, -0.47164538502693176, -0.0001102625101339072, -0.06863707304000854, -0.00027891082572750747, -0.0005191409145481884, -0.9082379341125488, -0.06852064281702042, -0.2383352816104889], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0005011494504287839, -1.847726889536716e-05, -3.707340147229843e-05, -0.010109057649970055, -4.529942543740617e-06, -8.797258487902582e-05, -0.04423276707530022, -0.007997987791895866, -0.7471767067909241], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007026959210634232, -0.0002300474588992074, -9.679325739853084e-05, -3.7788631743751466e-05, -0.003795326454564929, -0.025174543261528015, -0.02737787738442421, -1.9311717551317997e-05, -4.2199197196168825e-05, -6.318072337307967e-06, -4.136476854910143e-05, -0.010870170779526234, -0.8445515036582947], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007154765771701932, -6.6756979322235566e-06, -0.0019229032332077622, -0.00020680672605521977, -0.051694829016923904], "finish_reason": "stop"}, {"text": " [', '.join(col) for col in zip(*next(dr))]", "tokens": [" ['", ",", " '", ".", "join", "(", "col", ")", " for", " col", " in", " zip", "(*", "next", "(", "dr", "))", "]", "\n"], "logprobs": [-2.2432329654693604, -2.0407629013061523, -1.1064133644104004, -0.00011538793478393927, -9.595887240720913e-05, -0.08658350259065628, -2.0856385231018066, -0.1319347769021988, -0.03956185653805733, -0.007611322216689587, -0.004211485851556063, -2.1789069175720215, -0.08768278360366821, -2.3504602909088135, -0.0001971527235582471, -0.12787029147148132, -0.2888070046901703, -0.1530340164899826, -0.4932354986667633], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.06178160011768341, -0.3185756206512451, -2.1826207637786865], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME}({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}(", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015478363260626793, -0.16065432131290436, -0.13558971881866455, -0.14729702472686768, -0.0025704221334308386, -0.0030730189755558968, -0.0755334123969078, -0.0004391897819004953, -1.5497195136049413e-06, -5.8412379075889476e-06, -2.5930140018463135, -0.21463337540626526, -0.009501001797616482, -0.33813363313674927, -0.00023016665363684297, -0.00015472168161068112, -0.03954226151108742, -0.022432386875152588, -0.01923901028931141, -0.005168172996491194, -0.042017947882413864], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008286144584417343, -0.000952386180870235, -0.011238839477300644, -0.06424985826015472], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"\\'{col}\\'\" for col in col])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "\\", "'{", "col", "}\\", "'", "\"", " for", " col", " in", " col", "])", "})", "')", "\n"], "logprobs": [-0.043291859328746796, -0.0485081784427166, -0.07396554946899414, -0.30186304450035095, -0.002395619172602892, -1.9073468138230965e-06, -0.005533259827643633, -0.0035959123633801937, -0.00023648326168768108, -1.0251946150674485e-05, -4.8993817472364753e-05, -0.0037618363276124, -0.20081278681755066, -0.08381634950637817, -0.011419764719903469, -0.012000388465821743, -0.17204397916793823, -5.6980417866725475e-05, -0.00019977481861133128, -0.0665132999420166, -0.5160310864448547, -0.05193626508116722, -1.5158164501190186, -0.007382493000477552, -2.4757237434387207, -0.07882077991962433, -0.014063306152820587, -0.0027399638202041388, -0.048296358436346054, -0.003812071168795228, -0.000954649003688246, -2.456979751586914, -1.5102732181549072, -0.0027963127940893173, -0.011034302413463593, -0.04235726222395897], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.019961891695857048, -0.00018404220463708043, -0.06693058460950851], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.023547058925032616, -2.6940935640595853e-05, -0.022713152691721916, -0.0002693767019081861, -0.0008771148277446628, -0.5545374155044556, -0.022756734862923622, -0.24805618822574615, -0.009045692160725594, -0.12632842361927032, -0.057235248386859894, -0.011420000344514847, -0.00043847484630532563, -3.933898824470816e-06, -3.2186455882765586e-06, -0.01612573117017746, -0.00019226610311307013, -0.02951282635331154, -0.1923265904188156, -0.13056562840938568], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013708846643567085, -0.0012985378270968795, -0.01880987361073494], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.008574101142585278, -0.00011538793478393927, -0.6297807097434998], "finish_reason": "stop"}], "metrics": {"energy": 244.89144172096258, "energy_per_token": 1.3529913907235502, "time": 10.730206, "time_per_token": 0.05928290607734807}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -0.42585235834121704, -0.0003313469351269305, -0.0025512785650789738, -0.04200800508260727, -0.0001793938863556832, -0.00016258825780823827, -0.2002900242805481, -0.07139721512794495], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as file:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " file", ":", "\n"], "logprobs": [-0.011684904806315899, -0.0014072287594899535, -0.0032643387094140053, -1.5020257706055418e-05, -0.00010597144137136638, -0.2745029628276825, -0.2842000722885132, -0.04583675041794777, -0.15817707777023315, -0.000635183765552938, -1.4150171279907227, -0.017929386347532272, -0.24388396739959717], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from a file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " a", " file", "\n"], "logprobs": [-0.0004010588163509965, -1.4424220353248529e-05, -3.528532761265524e-05, -0.010824652388691902, -4.887569048150908e-06, -7.188061863416806e-05, -0.04314640909433365, -0.008511812426149845, -0.7552334666252136, -0.0003082277253270149, -0.038347430527210236, -0.0460851825773716, -1.9854110479354858, -0.11678096652030945, -0.566139280796051], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Open a connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Open", " a", " connection", " to", " the", " database", "\n"], "logprobs": [-0.007974689826369286, -0.00028534632292576134, -0.00010668662434909493, -5.018585216021165e-05, -0.0036668223328888416, -0.02821868285536766, -0.024889584630727768, -1.6927575416048057e-05, -4.184158387943171e-05, -6.6756979322235566e-06, -4.386805812828243e-05, -0.011894256807863712, -0.6094080805778503, -0.00033909291960299015, -1.9697843790054321, -0.9732366800308228, -0.5012698173522949, -0.04893872141838074, -0.08412829041481018, -0.2770542502403259, -0.0645466223359108], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007817073492333293, -6.198863957251888e-06, -0.0024710141588002443, -0.00023672162205912173, -0.0586620531976223], "finish_reason": "stop"}, {"text": " \", \".join(dr.fieldnames)  # Convert field names into a string, with commas", "tokens": [" \"", ",", " \"", ".", "join", "(", "dr", ".", "field", "names", ")", "  ", "#", " Convert", " field", " names", " into", " a", " string", ",", " with", " comm", "as", "\n"], "logprobs": [-2.8495378494262695, -0.07717221230268478, -0.4082198143005371, -9.214453893946484e-05, -0.00033909291960299015, -0.35906434059143066, -0.34345829486846924, -0.0003488647344056517, -0.0011266082292422652, -0.002186171943321824, -0.007815377786755562, -1.795220136642456, -0.00027056847466155887, -2.8229339122772217, -1.8972411155700684, -1.516800880432129, -1.273382544517517, -0.3017479181289673, -0.8060735464096069, -3.248908758163452, -3.0778188705444336, -0.6403887271881104, -0.00036769305006600916, -0.9268810749053955], "finish_reason": "stop"}, {"text": "execute(\"DROP TABLE IF EXISTS {}\".format(TABLE_NAME))", "tokens": ["execute", "(", "\"", "DR", "OP", " TABLE", " IF", " EX", "ISTS", " {", "}\"", ".", "format", "(", "TABLE", "_", "NAME", "))", "\n"], "logprobs": [-0.05950528010725975, -0.312965989112854, -1.5991426706314087, -1.572161078453064, -1.2993727978027891e-05, -0.01720714196562767, -0.006461679469794035, -0.0007186928996816278, -0.00044526674901135266, -0.5117690563201904, -0.2388266921043396, -0.00041345154750160873, -0.0004772001120727509, -0.0006574614671990275, -0.002618220169097185, -1.6689286894688848e-06, -6.198863957251888e-06, -0.003653044579550624, -0.15207548439502716], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015067102387547493, -0.18372876942157745, -0.15065132081508636, -0.1451437622308731, -0.0025783886667340994, -0.0034190313890576363, -0.07488269358873367, -0.0004120216181036085, -1.6689286894688848e-06, -5.245195097813848e-06, -0.08947089314460754, -0.24314948916435242, -0.022720495238900185, -0.005879607051610947, -0.6159477233886719, -0.0001456631434848532, -0.0001578206429257989, -0.04868055507540703, -0.03738546371459961, -0.021173976361751556, -0.005920018535107374, -0.03524886071681976], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009184256196022034, -0.001061471994034946, -0.010332190431654453, -0.06177476420998573], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join([f\"'{row[col]}'\" for col in cols])})\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{'", ",", " '", ".", "join", "([", "f", "\"", "'{", "row", "[", "col", "]", "}'", "\"", " for", " col", " in", " col", "s", "])", "})", "\"", ")", "\n"], "logprobs": [-0.049219634383916855, -0.036068473011255264, -0.07217953354120255, -1.3324627876281738, -0.0146919721737504, -3.099436753473128e-06, -0.007319301832467318, -0.00598389096558094, -0.00032610344351269305, -1.07287787614041e-05, -3.480850500636734e-05, -0.007212434895336628, -0.10941608995199203, -0.5118167996406555, -0.03139418363571167, -0.008305178955197334, -0.3150807023048401, -4.005352093372494e-05, -0.00018845213344320655, -0.09233758598566055, -0.5001283884048462, -0.5720806121826172, -0.15830835700035095, -0.7914937734603882, -0.05204830318689346, -0.047778256237506866, -0.00038521020906046033, -0.02163943089544773, -0.0011810240102931857, -0.0465768501162529, -0.00029297350556589663, -0.006949894595891237, -0.0781363695859909, -0.0009650102583691478, -0.0007300095749087632, -0.0007819455349817872, -0.0011531615164130926, -0.0015873225638642907, -0.03161308169364929], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013622064143419266, -0.00017557987303007394, -0.07609423249959946], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.022320246323943138, -2.0265373677830212e-05, -0.02489504963159561, -0.00019095504831057042, -0.0011863820254802704, -0.4322865903377533, -0.023193033412098885, -0.2299625724554062, -0.008809392340481281, -0.12231741845607758, -0.05779775232076645, -0.009873835369944572, -0.0004818470624741167, -5.245195097813848e-06, -5.125986263010418e-06, -0.014502591453492641, -0.0001851148990681395, -0.025673694908618927, -0.160074383020401, -0.12225929647684097], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013094505295157433, -0.0011625682236626744, -0.01754080317914486], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.01083337888121605, -0.00011955977242905647], "finish_reason": "stop"}], "metrics": {"energy": 269.32384234905254, "energy_per_token": 1.2764163144504859, "time": 12.201688, "time_per_token": 0.057827905213270143}}
{"outputs": [{"text": " not isinstance(csv_input, StringIO):", "tokens": [" not", " isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-2.4018900394439697, -0.08330503851175308, -0.00011014331539627165, -0.0008617501589469612, -3.814689989667386e-06, -2.8967437174287625e-05, -0.00011681827891152352, -0.18620969355106354, -6.818538531661034e-05, -0.09269186854362488, -0.006845119409263134], "finish_reason": "stop"}, {"text": " pandas.read_csv(csv_input)", "tokens": [" pandas", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-3.3251800537109375, -0.013531981036067009, -0.02846839837729931, -0.0009034366230480373, -0.00599017133936286, -0.0016066036187112331, -0.34336018562316895, -0.0026468741707503796, -0.003255189396440983, -0.5553820729255676, -0.05375278741121292], "finish_reason": "stop"}, {"text": " open(csv_input, encoding='utf-8') as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.011177070438861847, -0.001685152412392199, -0.0031711787451058626, -1.4066597032069694e-05, -0.00010930894495686516, -0.3218408226966858, -2.7248663902282715, -0.1487322300672531, -0.12335094809532166, -0.16780240833759308, -0.005052180495113134, -0.10006130486726761, -0.0006971312686800957, -1.118801236152649, -0.004243180155754089, -0.08009929955005646, -0.0816473737359047, -0.0013854438439011574, -0.20619149506092072], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.0005009111482650042, -1.9907753085135482e-05, -3.349725011503324e-05, -0.010784910060465336, -5.364403477869928e-06, -8.630380034446716e-05, -0.04327758774161339, -0.009233156219124794, -0.7570692896842957, -0.000364713923772797, -0.04009980335831642, -0.04348031431436539, -0.34641364216804504, -0.7935647368431091, -0.038996562361717224], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.006976885721087456, -0.0002520958660170436, -0.00011228884250158444, -5.23315102327615e-05, -0.0035309370141476393, -0.026981692761182785, -0.029203282669186592, -1.8954096958623268e-05, -3.731181277544238e-05, -7.510157047363464e-06, -4.410646579344757e-05, -0.010924294590950012, -0.8948545455932617], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.000785161682870239, -6.198863957251888e-06, -0.0023193859960883856, -0.00026008085114881396, -0.045990463346242905], "finish_reason": "stop"}, {"text": " [x for x in dr.fieldnames]", "tokens": [" [", "x", " for", " x", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.2071386575698853, -3.4389166831970215, -0.7281069159507751, -0.006980555597692728, -0.012645184062421322, -0.11424033343791962, -0.002575772814452648, -0.0035689487121999264, -0.00015269544383045286, -0.04191061109304428, -0.3138222098350525], "finish_reason": "stop"}, {"text": "execute('DROP TABLE IF EXISTS ' + TABLE_NAME)", "tokens": ["execute", "('", "DR", "OP", " TABLE", " IF", " EX", "ISTS", " '", " +", " TABLE", "_", "NAME", ")", "\n"], "logprobs": [-0.06203316152095795, -1.4182350635528564, -1.1252498626708984, -1.0847986231965479e-05, -0.014301540330052376, -0.007552995812147856, -0.0007875440060161054, -0.0003184764937032014, -0.701283872127533, -0.06156640872359276, -0.011081226170063019, -2.264974000354414e-06, -4.768360213347478e-06, -0.13635492324829102, -0.1902225911617279], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015316602773964405, -0.15454140305519104, -0.15012486279010773, -0.17393852770328522, -0.002432603854686022, -0.003089419100433588, -0.07401315122842789, -0.0003698380314745009, -1.7881377516459906e-06, -6.794906312279636e-06, -0.08603521436452866, -0.23554836213588715, -0.020675843581557274, -0.0066244048066437244, -0.7199303507804871, -0.00015066919149830937, -0.0001538873475510627, -0.041363801807165146, -0.035688601434230804, -0.02338438667356968, -0.006312905810773373, -0.04089370742440224], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008954486809670925, -0.0011092231143265963, -0.009800530970096588, -0.06508615612983704], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.05444979667663574, -0.032158322632312775, -2.704834461212158], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013856406323611736, -0.00018106251081917435, -0.0723770409822464], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.024765275418758392, -3.0874729418428615e-05, -0.025248821824789047, -0.0002640137099660933, -0.000993830617517233, -0.512276291847229, -0.025267768651247025, -0.20599466562271118, -0.010769461281597614, -0.12941500544548035, -0.05863305181264877, -0.009807259775698185, -0.0004551566671580076, -6.9141146923357155e-06, -5.364403477869928e-06, -0.012785132974386215, -0.00019667598826345056, -0.029658302664756775, -0.1675080507993698, -0.10703286528587341], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013973027467727661, -0.0015555436257272959, -0.01938224956393242], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.008845550008118153, -8.320462075062096e-05, -0.6473850011825562], "finish_reason": "stop"}], "metrics": {"energy": 218.17508016777043, "energy_per_token": 1.380854937770699, "time": 9.868242, "time_per_token": 0.06245722784810127}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " csv.reader(csv_input)  # Reads a CSV file from a StringIO object", "tokens": [" c", "sv", ".", "reader", "(", "csv", "_", "input", ")", "  ", "#", " Read", "s", " a", " CS", "V", " file", " from", " a", " String", "IO", " object", "\n"], "logprobs": [-0.5740599036216736, -0.0009708458674140275, -0.42586949467658997, -1.338532567024231, -0.00272617326118052, -0.01545336190611124, -4.255681051290594e-05, -9.715084888739511e-05, -0.2030276656150818, -2.80279278755188, -0.0008474572678096592, -2.0968496799468994, -2.6302237510681152, -3.382979393005371, -0.9268906116485596, -0.0002554328821133822, -0.4048275351524353, -1.336505651473999, -0.86793053150177, -0.23408383131027222, -0.003782738232985139, -0.08013836294412613, -0.23029962182044983], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.0118888383731246, -0.0014934111386537552, -0.0030434264335781336, -1.3708974620385561e-05, -0.00012540031457319856, -0.2898825705051422, -0.3119078278541565, -0.047809284180402756, -0.17320936918258667, -0.0006300609675236046, -0.897813081741333, -0.05355077236890793, -0.22261078655719757], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004471732536330819, -1.6093124941107817e-05, -3.194758028257638e-05, -0.009461797773838043, -5.125986263010418e-06, -8.082063141046092e-05, -0.04601072520017624, -0.010990677401423454, -0.7310953736305237], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create database connection", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " database", " connection", "\n"], "logprobs": [-0.0071624889969825745, -0.00024291902082040906, -8.391981828026474e-05, -4.792098479811102e-05, -0.003922626841813326, -0.022160405293107033, -0.023973004892468452, -1.9192511899746023e-05, -4.541770613286644e-05, -8.821448318485636e-06, -5.149708886165172e-05, -0.012300347909331322, -0.6056331992149353, -0.00036161558819003403, -1.1023426055908203, -3.3425655364990234, -0.3606802821159363, -0.08126486092805862], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007030876004137099, -5.364403477869928e-06, -0.002532372483983636, -0.0002444683632347733, -0.054842472076416016], "finish_reason": "stop"}, {"text": " ['id', 'name']", "tokens": [" ['", "id", "'", ",", " '", "name", "']", "\n"], "logprobs": [-2.088165760040283, -0.2548825144767761, -0.015981437638401985, -0.0002195594133809209, -0.011936075054109097, -0.006236141547560692, -0.00995091162621975, -0.07375052571296692], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.051612526178359985, -0.3009757697582245, -0.47818058729171753, -1.0789711475372314, -0.16917739808559418, -0.010443206876516342, -1.9924780130386353, -0.0017782127251848578, -1.3351351299206726e-05, -1.3470558769768104e-05, -0.08809177577495575, -0.3429299294948578, -0.027876276522874832, -0.008283189497888088, -0.8067371845245361, -5.900685573578812e-05, -8.391981828026474e-05, -0.06974891573190689, -0.04864978417754173, -0.01991199515759945, -0.043167416006326675, -0.056949373334646225], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({cols[0]} int, {cols[1]} text)')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", " int", ",", " {", "cols", "[", "1", "]}", " text", ")", "')", "\n"], "logprobs": [-0.018581369891762733, -0.18701684474945068, -0.15196530520915985, -0.1546333283185959, -0.002810815814882517, -0.0033027171157300472, -2.654334783554077, -0.0011798333143815398, -0.0002951186615973711, -0.00023338454775512218, -0.005790838971734047, -0.0004530118894763291, -2.0265558760002023e-06, -1.0847986231965479e-05, -0.13271625339984894, -1.7584340572357178, -0.11044947803020477, -0.4870498776435852, -0.0056132785975933075, -0.022976014763116837, -3.465036630630493, -0.2879452705383301, -0.19262376427650452, -0.00026675479602999985, -0.00021789084712509066, -0.0005422552349045873, -0.00870965700596571, -0.4010860323905945, -0.08406505733728409, -0.002817234955728054, -0.02713531255722046], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.01155717484652996, -0.0009804924484342337, -0.012694151140749454, -0.05654580891132355], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\",\".join([f\"?\" for _ in cols])})',", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", "\"", ".", "join", "([", "f", "\"", "?", "\"", " for", " _", " in", " col", "s", "])", "})", "'", ",", "\n"], "logprobs": [-0.045621175318956375, -0.03539155051112175, -0.06956511735916138, -0.34853342175483704, -0.0023445994593203068, -1.9073468138230965e-06, -0.0039084963500499725, -0.0032940434757620096, -0.00021991695393808186, -1.1324817933200393e-05, -6.878139538457617e-05, -0.0038500723894685507, -0.20114244520664215, -0.0746149867773056, -0.008042097091674805, -0.012497327290475368, -2.079256296157837, -0.0003134713042527437, -0.0008093419019132853, -0.10306442528963089, -0.5398768186569214, -0.049504779279232025, -0.572820782661438, -0.0066599310375750065, -0.20996099710464478, -0.2642236351966858, -0.0013111574808135629, -0.8156957030296326, -2.312633478140924e-05, -0.003280022880062461, -0.001279012649320066, -0.0038402159698307514, -0.0016016048612073064, -1.383336067199707], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.015993991866707802, -0.00020966715237591416, -0.06698811799287796], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.021859657019376755, -2.9444261599564925e-05, -0.032235316932201385, -0.00022957073815632612, -0.001029319129884243, -1.0466628074645996, -0.06541270017623901, -0.008064565248787403, -0.0239847581833601, -0.3774137496948242, -0.013116859830915928, -0.07341760396957397, -0.05721453204751015, -0.006366092711687088, -0.00047708096099086106, -6.6756979322235566e-06, -4.529942543740617e-06, -0.032349929213523865, -0.00016199229867197573, -0.02470770850777626, -0.12393203377723694, -0.1163993552327156], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.01467857975512743, -0.001471032970584929, -0.01913411170244217], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.00767437694594264, -0.00010156115604331717, -0.5914758443832397], "finish_reason": "stop"}], "metrics": {"energy": 300.5477399444579, "energy_per_token": 1.4449410574252783, "time": 11.775024, "time_per_token": 0.056610692307692306}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.17562739551067352, -8.21318244561553e-05, -0.0008039817912504077, -2.622600959512056e-06, -3.4689302992774174e-05, -0.00012313561455812305, -0.12043613195419312, -2.9444261599564925e-05, -0.017952686175704002, -0.00731669832020998], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-2.015746831893921, -0.0009914488764479756, -0.00682795187458396, -0.00017093151109293103, -0.006165176630020142, -0.0018694796599447727, -0.253319650888443, -0.003487696871161461, -0.0006735440110787749, -0.40928101539611816, -0.05355868488550186], "finish_reason": "stop"}, {"text": " open(csv_input, mode='r', newline='') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " mode", "='", "r", "'", ",", " new", "line", "='", "')", " as", " f", ":", "\n"], "logprobs": [-0.010016179643571377, -0.0015099564334377646, -0.003465125570073724, -1.7165990357170813e-05, -0.00010561384988250211, -0.23404864966869354, -2.729874849319458, -0.14525552093982697, -0.07721944153308868, -0.9606529474258423, -0.0023243811447173357, -1.6500840187072754, -0.00015436411194968969, -0.1338227242231369, -0.0006354220095090568, -0.00035958975786343217, -1.3867286443710327, -0.07103607803583145, -0.18530413508415222], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.0005199749139137566, -1.0967194612021558e-05, -3.0517112463712692e-05, -0.012699447572231293, -4.529942543740617e-06, -7.92710343375802e-05, -0.0415777824819088, -0.009110546670854092, -0.746449887752533, -0.0003046525234822184, -0.03986018896102905, -0.04455354064702988, -0.33096760511398315, -0.6817352771759033, -0.04109703376889229], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create a connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " a", " connection", " to", " the", " database", "\n"], "logprobs": [-0.008322439156472683, -0.00025876989820972085, -0.00011467275908216834, -4.6967357775429264e-05, -0.003465838497504592, -0.02827778458595276, -0.026351187378168106, -1.8000440832111053e-05, -4.2914423829643056e-05, -6.6756979322235566e-06, -3.683499380713329e-05, -0.011280803009867668, -0.6957566142082214, -0.000316212244797498, -1.0862219333648682, -0.39193812012672424, -0.8416544795036316, -0.18110501766204834, -0.08630502223968506, -0.2627505660057068, -0.05624846741557121], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007550249574705958, -5.602820692729438e-06, -0.002736040623858571, -0.00025567124248482287, -0.054952941834926605], "finish_reason": "stop"}, {"text": " [field_name for field_name in dr.fieldnames]", "tokens": [" [", "field", "_", "name", " for", " field", "_", "name", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.113459587097168, -2.7010128498077393, -1.737172245979309, -0.11298537254333496, -0.21812839806079865, -0.03679802641272545, -0.001191501971334219, -0.0007612191257067025, -0.17623555660247803, -0.21944141387939453, -0.0032958255615085363, -0.002090889262035489, -0.004344074055552483, -0.023070959374308586, -0.1729947179555893], "finish_reason": "stop"}, {"text": "execute(\"CREATE TABLE IF NOT EXISTS {}\".format(TABLE_NAME))", "tokens": ["execute", "(", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "}\"", ".", "format", "(", "TABLE", "_", "NAME", "))", "\n"], "logprobs": [-0.06981606036424637, -0.2881089150905609, -1.4926190376281738, -0.7271329164505005, -0.009905941784381866, -0.0640452578663826, -0.00029595286468975246, -0.0004619484825525433, -0.0002615109842736274, -0.8972201347351074, -1.6032676696777344, -0.00783347524702549, -0.0013103241799399257, -0.0013112765736877918, -0.006628194358199835, -2.264974000354414e-06, -1.0132738680113107e-05, -0.07405566424131393, -0.072120301425457], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE {TABLE_NAME} ({','.join(cols)})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{'", ",", "'", ".", "join", "(", "cols", ")})", "\"", ")", "\n"], "logprobs": [-0.013823721557855606, -0.16296420991420746, -0.12687785923480988, -1.985007643699646, -0.3722634017467499, -0.005081832408905029, -0.13255849480628967, -0.0005258131423033774, -1.7881377516459906e-06, -7.390948667307384e-06, -0.18073345720767975, -0.6553469300270081, -0.24147941172122955, -0.010483434423804283, -0.4315010607242584, -0.00015984688070602715, -9.727005090098828e-05, -0.08377677202224731, -0.03625956177711487, -0.02454545721411705, -0.012672492302954197, -0.001639452064409852, -0.15931259095668793], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009161576628684998, -0.0009216589969582856, -0.010269184596836567, -0.057641010731458664], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(row.values())})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "row", ".", "values", "())", "})", "')", "\n"], "logprobs": [-0.045059751719236374, -0.03691326454281807, -0.08841002732515335, -0.32387781143188477, -0.0023688608780503273, -2.0265558760002023e-06, -0.004045636393129826, -0.0031375489197671413, -0.00019810620869975537, -1.2874520507466514e-05, -3.111314072157256e-05, -0.004009542521089315, -2.412308931350708, -0.003657558001577854, -0.0010594476480036974, -0.04058549180626869, -1.9073304429184645e-05, -0.00024196557933464646, -1.5522178411483765, -0.4453396201133728, -0.46753251552581787, -2.4198031425476074, -0.018921826034784317, -0.00121007626876235, -0.03768674284219742, -0.033167652785778046], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012318364344537258, -0.00021217002358753234, -0.08179698884487152], "finish_reason": "stop"}, {"text": " pd.read_sql(f\"SELECT * FROM {TABLE_NAME}\", conn)  # Get data from db", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "\"", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ")", "  ", "#", " Get", " data", " from", " db", "\n"], "logprobs": [-0.019215622916817665, -2.5510462364763953e-05, -0.041321709752082825, -0.0002324311062693596, -0.0010383697226643562, -0.582614541053772, -0.023345140740275383, -1.6393014192581177, -0.018288088962435722, -0.14537355303764343, -0.0585319809615612, -0.006372844334691763, -0.0005042473785579205, -7.867782187531702e-06, -4.768360213347478e-06, -0.020272323861718178, -0.0003163314249832183, -0.029167968779802322, -0.1966673582792282, -2.3364970684051514, -0.00042465253500267863, -2.7865591049194336, -0.5729272365570068, -0.9193629622459412, -3.5540452003479004, -0.4448096454143524], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013885210268199444, -0.0011682836338877678, -0.021545400843024254], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.011831114068627357, -0.00010024998482549563, -0.5271604061126709], "finish_reason": "stop"}], "metrics": {"energy": 293.2243219585418, "energy_per_token": 1.4444547879731122, "time": 11.997187, "time_per_token": 0.05909944334975369}}
{"outputs": [{"text": " not isinstance(csv_input, StringIO):", "tokens": [" not", " isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-2.4018900394439697, -0.08330503851175308, -0.00011014331539627165, -0.0008617501589469612, -3.814689989667386e-06, -2.8967437174287625e-05, -0.00011681827891152352, -0.18620969355106354, -6.818538531661034e-05, -0.09269186854362488, -0.006845119409263134], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.6747673749923706, -0.0008789013954810798, -0.4140162765979767, -0.3075462281703949, -0.00039057256071828306, -0.0031389747746288776, -0.04277846962213516, -0.0001530530134914443, -0.00019393471302464604, -0.1996488720178604, -0.0666586235165596], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.012898702174425125, -0.0014023480471223593, -0.003194113029167056, -1.4543427823809907e-05, -0.00013016807497479022, -0.3115426301956177, -0.29751431941986084, -0.044877517968416214, -0.1599578708410263, -0.0006049233488738537, -1.187788486480713, -0.003042832249775529, -0.07336410135030746, -0.0875045508146286, -0.0013912770664319396, -0.1890316754579544], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004651656490750611, -1.6212332411669195e-05, -3.3378044463461265e-05, -0.010456891730427742, -5.245195097813848e-06, -8.129743218887597e-05, -0.04367239028215408, -0.011526771821081638, -0.7009870409965515], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Connect to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Connect", " to", " the", " database", "\n"], "logprobs": [-0.00790195632725954, -0.0002632986579556018, -7.70062324590981e-05, -4.6132929128361866e-05, -0.005128087010234594, -0.02698134444653988, -0.021447278559207916, -2.2172682292875834e-05, -3.838465272565372e-05, -8.4638240878121e-06, -4.362964682513848e-05, -0.01216798648238182, -0.6342362761497498, -0.00025948495022021234, -1.074692964553833, -0.013044734485447407, -0.2069205641746521, -0.21413512527942657, -0.04132639989256859], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006474544061347842, -6.079655122448457e-06, -0.0018077236600220203, -0.0002153879904653877, -0.048399150371551514], "finish_reason": "stop"}, {"text": " ['id', 'name']", "tokens": [" ['", "id", "'", ",", " '", "name", "']", "\n"], "logprobs": [-2.2882914543151855, -0.33986690640449524, -0.01583489589393139, -0.0002646096108946949, -0.012572435662150383, -0.005833860952407122, -0.01020971592515707, -0.0769883468747139], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.04563131183385849, -0.30817028880119324, -0.4461503028869629, -1.0247892141342163, -0.18268521130084991, -0.011172001250088215, -0.15562595427036285, -0.00040415700641460717, -0.000653530121780932, -0.00025102324434556067, -0.05253874510526657, -0.001804986852221191, -1.2397689715726301e-05, -1.156323378381785e-05, -0.106983482837677, -0.2989562749862671, -0.03580891713500023, -0.008151358924806118, -0.7320178151130676, -6.341733387671411e-05, -0.0001419681793777272, -0.08252127468585968, -0.06116380915045738, -0.010685489512979984, -0.05429839715361595, -0.0533960722386837], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE {TABLE_NAME} ({cols})'.format(cols=','.join(cols)))", "tokens": ["execute", "('", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "'", ".", "format", "(", "cols", "='", ",", "'", ".", "join", "(", "cols", ")))", "\n"], "logprobs": [-0.015164092183113098, -1.9085553884506226, -0.07364687323570251, -0.0032939244993031025, -0.2501297891139984, -1.8219504356384277, -0.0001839230244513601, -0.00040844682371243834, -0.07507314532995224, -0.2763540744781494, -0.2228785902261734, -0.25566112995147705, -0.030603913590312004, -0.013125095516443253, -0.005337986163794994, -0.0017105009173974395, -0.3599865734577179, -0.19974884390830994, -0.0034298421815037727, -0.5971883535385132, -0.00013815402053296566, -0.00035720644518733025, -0.049160733819007874, -0.039895813912153244, -0.0535699836909771, -0.04393436387181282], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008984850719571114, -0.0012265071272850037, -0.011771619319915771, -0.06443150341510773], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in cols])})', [row[col] for col in cols])", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " _", " in", " col", "s", "])", "})", "'", ",", " [", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "\n"], "logprobs": [-0.05943642184138298, -0.04143505543470383, -0.08344552665948868, -0.3057408928871155, -0.002420830773189664, -1.5497195136049413e-06, -0.0047874110750854015, -0.0033557077404111624, -0.00023672162205912173, -1.0847986231965479e-05, -2.9682672902708873e-05, -0.004105592146515846, -0.2180577665567398, -0.08710526674985886, -0.008581073954701424, -0.010746345855295658, -0.11363975703716278, -4.708655978902243e-05, -0.00017033556650858372, -0.08460873365402222, -0.5024785399436951, -0.045086417347192764, -0.552246630191803, -0.004162576515227556, -0.13651031255722046, -0.2752079963684082, -0.0015608996618539095, -0.5673180222511292, -1.1801649634435307e-05, -0.003593180561438203, -0.0013316344702616334, -0.0029093578923493624, -0.0016858663875609636, -1.3052759170532227, -0.2077838033437729, -0.037654370069503784, -0.07587480545043945, -0.0019150504376739264, -0.033835019916296005, -0.0011152960360050201, -0.0004407388041727245, -0.029388394206762314, -0.00012861855793744326, -0.0007707485929131508, -0.016712186858057976], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.015278448350727558, -0.0001879753835964948, -0.0770244374871254], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02329331450164318, -3.135155202471651e-05, -0.02629510499536991, -0.0002356490003876388, -0.0010057396721094847, -0.5110980272293091, -0.02799324505031109, -0.23180024325847626, -0.008981306105852127, -0.11225331574678421, -0.06954165548086166, -0.0123069416731596, -0.0003632839070633054, -4.529942543740617e-06, -3.933898824470816e-06, -0.014962352812290192, -0.0001714082609396428, -0.029536552727222443, -0.15570440888404846, -0.1201782301068306], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013352379202842712, -0.0012368656462058425, -0.020825998857617378], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.010743044316768646, -0.00010907054820563644, -0.5547518730163574], "finish_reason": "stop"}], "metrics": {"energy": 269.75904787826545, "energy_per_token": 1.2907131477428968, "time": 12.179469, "time_per_token": 0.058274971291866026}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.reader(csv_input, delimiter=\",\")", "tokens": [" c", "sv", ".", "reader", "(", "csv", "_", "input", ",", " del", "im", "iter", "=", "\"", ",", "\"", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -1.0899262428283691, -0.0028656155336648226, -0.014273570850491524, -3.58813522325363e-05, -0.00010227633902104571, -1.6222654581069946, -0.23005889356136322, -0.00173049361910671, -5.483612312673358e-06, -1.6279938220977783, -0.21494612097740173, -0.03298358619213104, -0.0003781795676331967, -0.2439013421535492, -0.06880155950784683], "finish_reason": "stop"}, {"text": " open(csv_input) as file:", "tokens": [" open", "(", "csv", "_", "input", ")", " as", " file", ":", "\n"], "logprobs": [-0.011052104644477367, -0.001632430125027895, -0.003537589218467474, -1.3589766240329482e-05, -9.822363062994555e-05, -1.3482022285461426, -0.0001951265730895102, -1.8703958988189697, -0.028734037652611732, -0.1392190158367157], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.000513064325787127, -1.1801649634435307e-05, -3.516612196108326e-05, -0.011193102225661278, -5.245195097813848e-06, -6.103329360485077e-05, -0.04065176844596863, -0.008456612005829811, -0.603809118270874], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.008044935762882233, -0.00023636408150196075, -9.881961887003854e-05, -5.590759246842936e-05, -0.0037392713129520416, -0.030485283583402634, -0.02372588776051998, -1.9788545614574105e-05, -3.516612196108326e-05, -7.748573807475623e-06, -3.838465272565372e-05, -0.01156542357057333, -0.790847659111023], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007038023322820663, -5.8412379075889476e-06, -0.0021423976868391037, -0.0002544794406276196, -0.045951977372169495], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.1733763217926025, -0.07659576833248138], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.06037955358624458, -0.3121994435787201, -2.0039403438568115], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015631413087248802, -0.17805065214633942, -0.12657277286052704, -0.1478174775838852, -0.002879760693758726, -0.0036332090385258198, -0.07557309418916702, -0.000388665939681232, -1.6689286894688848e-06, -4.887569048150908e-06, -0.09100127220153809, -0.2758678197860718, -0.021771829575300217, -0.006120983976870775, -0.755824863910675, -0.00011300401820335537, -0.00015686711412854493, -0.06664055585861206, -0.033241454511880875, -0.027225803583860397, -0.006976412143558264, -0.037523023784160614], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008501528762280941, -0.0011002921964973211, -0.00848415307700634, -0.061893437057733536], "finish_reason": "stop"}, {"text": "executemany(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([row[col] for col in cols])})', [row])", "tokens": ["exec", "ut", "em", "any", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "})", "'", ",", " [", "row", "])", "\n"], "logprobs": [-2.749911308288574, -0.03277641162276268, -0.0027372294571250677, -0.003742002882063389, -0.039229732006788254, -0.08915331214666367, -0.2451999932527542, -0.004009186290204525, -1.311301275563892e-06, -0.013013905845582485, -0.0034085765946656466, -0.0003046525234822184, -1.3112935448589269e-05, -2.407998726994265e-05, -0.007193025201559067, -0.17856411635875702, -0.1401674598455429, -0.038766201585531235, -0.0184366125613451, -0.13477756083011627, -6.90197994117625e-05, -0.00019643761334009469, -0.0710466280579567, -2.936911106109619, -0.07295481115579605, -0.06306159496307373, -0.0046491860412061214, -0.0921589806675911, -0.00013445904187392443, -0.000446696620201692, -0.07099965959787369, -0.00045265440712682903, -0.0015569719253107905, -0.0015832758508622646, -0.010070939548313618, -0.0030311851296573877, -0.5754834413528442, -0.2488463670015335, -0.5748331546783447, -0.011824516579508781], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013802675530314445, -0.0001811817055568099, -0.09683772921562195], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.025967257097363472, -2.9682672902708873e-05, -0.020904220640659332, -0.00025876989820972085, -0.0010158622171729803, -0.4689101278781891, -0.023332329466938972, -0.2423488199710846, -0.00986757967621088, -0.10143125057220459, -0.06072593107819557, -0.01147562637925148, -0.00047124247066676617, -4.887569048150908e-06, -4.6491513785440475e-06, -0.014998992905020714, -0.0001854724541772157, -0.03400660306215286, -0.17997130751609802, -0.11781048029661179], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.015040681697428226, -0.0014055621577426791, -0.021364431828260422], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.011373328045010567, -0.00010823617776622996, -0.5527278184890747], "finish_reason": "stop"}], "metrics": {"energy": 223.45231364250182, "energy_per_token": 1.3542564463181928, "time": 10.308574, "time_per_token": 0.06247620606060606}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.15359759330749512, -7.176141662057489e-05, -0.0007606235449202359, -1.6689286894688848e-06, -2.2649508537142538e-05, -0.00013052565918769687, -0.11644816398620605, -2.9801878554280847e-05, -0.01747145503759384, -0.006399969570338726], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5160399079322815, -0.0009395237429998815, -0.39743897318840027, -0.34658747911453247, -0.00033456450910307467, -0.0028016623109579086, -0.035279933363199234, -0.00016366096679121256, -0.00019476900342851877, -0.2086784392595291, -0.07051929831504822], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.010895169340074062, -0.001434369827620685, -0.002919223625212908, -1.2636104656849056e-05, -8.713819261174649e-05, -0.30095699429512024, -0.3325192630290985, -0.04824535548686981, -0.1624867469072342, -0.0006933192489668727, -1.1592979431152344, -0.0028032076079398394, -0.05465647950768471, -0.08235947042703629, -0.0013392536202445626, -0.1828235387802124], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.00039867559098638594, -1.7165990357170813e-05, -3.7431014789035544e-05, -0.010592547245323658, -5.006777428206988e-06, -8.606540359323844e-05, -0.036364175379276276, -0.007285337429493666, -0.7147859334945679], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Open a connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Open", " a", " connection", " to", " the", " database", "\n"], "logprobs": [-0.009166537784039974, -0.0002320735511602834, -8.248942322097719e-05, -4.792098479811102e-05, -0.003661121241748333, -0.027069412171840668, -0.02827848121523857, -1.9907753085135482e-05, -4.124556289752945e-05, -6.437280717364047e-06, -3.504691630951129e-05, -0.010760498233139515, -0.623031735420227, -0.0003033416287507862, -1.8389910459518433, -0.949314534664154, -0.4778786599636078, -0.04805472493171692, -0.08280959725379944, -0.28457897901535034, -0.05390438064932823], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.000605638197157532, -6.198863957251888e-06, -0.0018147443188354373, -0.0002022777043748647, -0.044742219150066376], "finish_reason": "stop"}, {"text": " \", \".join(['\"' + name + '\"' for name in dr.fieldnames])", "tokens": [" \"", ",", " \"", ".", "join", "(['", "\"", "'", " +", " name", " +", " '", "\"", "'", " for", " name", " in", " dr", ".", "field", "names", "])", "\n"], "logprobs": [-2.628751754760742, -0.06853567063808441, -0.41689828038215637, -0.00010692501382436603, -0.0003178806509822607, -2.602938175201416, -0.6156749725341797, -0.9813641309738159, -0.00093606993323192, -2.784935474395752, -0.07816547155380249, -0.001899820752441883, -0.00037091050762683153, -0.03632692992687225, -0.005711663514375687, -0.03558541461825371, -0.0081344498321414, -0.04954947903752327, -0.00033408781746402383, -0.002991132438182831, -0.001086479052901268, -0.016036927700042725, -0.16856412589550018], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({})\".format(\",\".join([f\"{name} {get_type(v)}\" for name, v in dr.fieldnames])))", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "})", "\"", ".", "format", "(", "\"", ",", "\"", ".", "join", "([", "f", "\"", "{", "name", "}", " {", "get", "_", "type", "(", "v", ")}", "\"", " for", " name", ",", " v", " in", " dr", ".", "field", "names", "]", ")))", "\n"], "logprobs": [-0.06487636268138885, -0.3489982783794403, -0.4154196083545685, -0.5036835670471191, -0.31791752576828003, -0.00885204877704382, -0.15357275307178497, -0.00035506143467500806, -0.000519617460668087, -0.0001770101225702092, -0.0492699071764946, -0.0018713833997026086, -6.6756979322235566e-06, -1.0609570381348021e-05, -0.095892533659935, -0.9152814745903015, -1.6269092559814453, -0.012287513352930546, -0.06995279341936111, -0.006849263329058886, -0.9367360472679138, -0.228809654712677, -0.00300717749632895, -1.0706602334976196, -0.0003067976504098624, -6.031808152329177e-05, -1.938961148262024, -0.391161173582077, -0.2821672260761261, -0.22825920581817627, -2.7525854110717773, -0.11142996698617935, -0.4999159574508667, -2.549665689468384, -0.13594086468219757, -1.1792588233947754, -0.1758599877357483, -3.9968228340148926, -0.037467338144779205, -0.010100796818733215, -0.0882597491145134, -0.07858850806951523, -0.00020430385484360158, -0.042022064328193665, -0.016934320330619812, -1.7570794820785522, -0.03285612538456917, -0.07181413471698761, -0.015777399763464928, -0.19729731976985931, -0.0025074013974517584, -0.06905592232942581], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.01545406598597765, -0.1553509384393692, -0.14858952164649963, -0.16249506175518036, -0.0028765511233359575, -0.0029679557774215937, -0.07986622303724289, -0.0003700763627421111, -1.6689286894688848e-06, -4.291525328881107e-06, -0.09134481847286224, -0.2463570088148117, -0.021332809701561928, -0.005366562400013208, -0.6651565432548523, -5.3165931603871286e-05, -9.202533692587167e-05, -0.06867257505655289, -0.04497108981013298, -0.012395722791552544, -0.006403641309589148, -0.03266876935958862], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008427060209214687, -0.001095529063604772, -0.009179413318634033, -0.05732012912631035], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join([f\"{col} TEXT\" for col in cols])}) VALUES ({\", \".join([f\"\\'{row[col]}\\'\" for col in cols])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "{", "col", "}", " TEXT", "\"", " for", " col", " in", " col", "s", "])", "})", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "\\", "'{", "row", "[", "col", "]}\\", "'", "\"", " for", " col", " in", " col", "s", "])", "})", "')", "\n"], "logprobs": [-0.050084348767995834, -0.03648429363965988, -0.08131080120801926, -0.3838791251182556, -0.0025850471574813128, -1.5497195136049413e-06, -0.003912414889782667, -0.003170941025018692, -0.00021514961554203182, -1.1444026313256472e-05, -3.7788631743751466e-05, -0.004053235054016113, -2.4111948013305664, -0.003823590464890003, -0.0008657997823320329, -0.03741244971752167, -1.7404405298293568e-05, -0.00023707917716819793, -0.2325829565525055, -0.2836793065071106, -0.01821574941277504, -0.005288064945489168, -0.11683495342731476, -0.5729144811630249, -0.2958534061908722, -0.003025361569598317, -0.01076639536768198, -0.0010206258157268167, -0.00026794656878337264, -0.2005947083234787, -0.0019213564228266478, -0.0013253247598186135, -0.0010083595989271998, -0.06409993767738342, -0.22579306364059448, -0.024202024564146996, -0.06049300730228424, -0.029803412035107613, -8.582700684200972e-05, -0.00012432756193447858, -0.09777328372001648, -0.22131052613258362, -0.2675364315509796, -2.17710542678833, -0.01270262524485588, -0.47945186495780945, -0.10340794175863266, -0.057772327214479446, -0.04852748289704323, -0.013795973733067513, -0.00544493505731225, -0.02661866694688797, -0.0005091324565000832, -0.0006358985556289554, -0.04184659197926521, -0.0006992755807004869, -0.0006068295333534479, -0.0008384049870073795, -0.037668377161026, -0.020033054053783417], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012569963932037354, -0.0001858300092862919, -0.07324445247650146], "finish_reason": "stop"}, {"text": " pd.read_sql(f\"SELECT * FROM {TABLE_NAME}\", conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "\"", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ")", "\n"], "logprobs": [-0.023908641189336777, -2.3841574147809297e-05, -0.027183691039681435, -0.00033098942367359996, -0.0009815642843022943, -0.5048398375511169, -0.024866562336683273, -1.6400498151779175, -0.017581213265657425, -0.14031842350959778, -0.049806512892246246, -0.00735716987401247, -0.0005287918029353023, -2.50339189733495e-06, -5.125986263010418e-06, -0.018434155732393265, -0.0002450642641633749, -0.028768207877874374, -0.1991221010684967, -0.1247832402586937], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014878850430250168, -0.0010639727115631104, -0.018800163641572], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.00972769409418106, -0.00011419598013162613], "finish_reason": "stop"}], "metrics": {"energy": 322.01171477031727, "energy_per_token": 1.2337613592732461, "time": 14.279484, "time_per_token": 0.054710666666666664}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.17818613350391388, -7.235741941258311e-05, -0.0008322112844325602, -2.3841830625315197e-06, -2.288792165927589e-05, -0.00011002412065863609, -0.12481238692998886, -2.6225699912174605e-05, -0.0181286558508873, -0.00778474286198616], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.6462412476539612, -0.000992877990938723, -0.3731616139411926, -0.3405589461326599, -0.00036554806865751743, -0.003189241047948599, -0.03752141818404198, -0.00018940561858471483, -0.00018571082910057157, -0.20607168972492218, -0.06961571425199509], "finish_reason": "stop"}, {"text": " open(csv_input, mode='r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " mode", "='", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.00998348742723465, -0.001470794901251793, -0.00352167128585279, -1.3708974620385561e-05, -0.0001006075763143599, -0.2906716763973236, -2.559723377227783, -0.14175404608249664, -0.07274799048900604, -0.47914281487464905, -0.0005314130103215575, -1.2389593124389648, -0.08092234283685684, -0.16994702816009521], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004145239945501089, -1.4543427823809907e-05, -3.659658250398934e-05, -0.010067871771752834, -4.887569048150908e-06, -8.332382276421413e-05, -0.04654635488986969, -0.009078769944608212, -0.6615877151489258], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007384386379271746, -0.00027223696815781295, -7.974783511599526e-05, -5.149708886165172e-05, -0.003201361745595932, -0.02508072927594185, -0.02215201035141945, -2.1219027985353023e-05, -5.030505417380482e-05, -7.390948667307384e-06, -4.851700214203447e-05, -0.009620966389775276, -0.8169122338294983], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0009159421897493303, -5.245195097813848e-06, -0.0019112430745735765, -0.00022182388056535274, -0.049008533358573914], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-1.0971976518630981, -4.048867225646973], "finish_reason": "stop"}, {"text": "execute(\"CREATE TABLE IF NOT EXISTS \" + TABLE_NAME + \"(\" + ','.join(cols) + \")\")", "tokens": ["execute", "(", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " \"", " +", " TABLE", "_", "NAME", " +", " \"", "(", "\"", " +", " '", ",", "'", ".", "join", "(", "cols", ")", " +", " \"", ")\"", ")", "\n"], "logprobs": [-0.05858650803565979, -0.2996113896369934, -1.5345609188079834, -0.9574548602104187, -0.011225284077227116, -0.07113223522901535, -0.0002874914789572358, -0.00044550508027896285, -0.00020740265608765185, -1.3021281957626343, -0.06632422655820847, -0.026585932821035385, -4.887569048150908e-06, -7.152531907195225e-06, -0.009658747352659702, -0.1381274163722992, -0.6764967441558838, -0.01733134128153324, -0.06733488291501999, -1.3994797468185425, -0.00456802174448967, -0.28170666098594666, -0.0008629412623122334, -0.000504723924677819, -0.05884460359811783, -0.05819687619805336, -0.010957074351608753, -0.00212479243054986, -0.08150706440210342, -0.08997035026550293, -0.005306089296936989, -0.07233523577451706], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015430002473294735, -0.15343154966831207, -0.14022071659564972, -0.16296228766441345, -0.002969976281747222, -0.0031579884234815836, -0.08966817706823349, -0.0004642124113161117, -1.7881377516459906e-06, -4.6491513785440475e-06, -0.09444740414619446, -0.2478502094745636, -0.022322461009025574, -0.006693205796182156, -0.7143182158470154, -5.209310256759636e-05, -7.593343616463244e-05, -0.07492295652627945, -0.041148290038108826, -0.015203777700662613, -0.005913737695664167, -0.029258739203214645], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.00935834925621748, -0.0011729273246601224, -0.009661816991865635, -0.06409937888383865], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} ({{\", \".join(cols)}) VALUES ({{\", \".join([\"?\" for _ in range(len(cols))])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " ({", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", " VALUES", " ({", "{\"", ",", " \"", ".", "join", "([", "\"", "?", "\"", " for", " _", " in", " range", "(", "len", "(", "cols", "))", "])", "})", "')", "\n"], "logprobs": [-0.052305374294519424, -0.0300515778362751, -0.08462110906839371, -0.32459840178489685, -0.002702871570363641, -1.7881377516459906e-06, -0.004758106544613838, -0.0034113090950995684, -0.0002337421028641984, -1.2755313036905136e-05, -3.540453326422721e-05, -0.004404012113809586, -2.9111855030059814, -1.7225944995880127, -0.0019231411861255765, -0.050173576921224594, -0.0001070442158379592, -0.0002903516869992018, -0.33814018964767456, -0.5673162937164307, -1.0770258903503418, -0.052735306322574615, -1.3023265600204468, -0.10932654142379761, -0.0034230705350637436, -0.05389737710356712, -0.000102037942269817, -0.00011896379146492109, -0.07748325914144516, -1.7080860137939453, -0.16306224465370178, -0.0014588914345949888, -0.572006344795227, -0.4006979465484619, -0.0009299959056079388, -0.5458185076713562, -0.00039593485416844487, -0.015195559710264206, -0.00010168035078095272, -0.06711386144161224, -0.001263297046534717, -0.004195341374725103, -0.049997150897979736, -0.24088700115680695, -0.009984785690903664], "finish_reason": "stop"}, {"text": "commit()  # Commit changes to the database", "tokens": ["commit", "()", "  ", "#", " Commit", " changes", " to", " the", " database", "\n"], "logprobs": [-0.013076149858534336, -0.00017510310863144696, -2.744365692138672, -0.0001426833332516253, -0.5252223014831543, -0.37813225388526917, -0.9599862694740295, -0.3138633966445923, -0.05335109308362007, -0.029656220227479935], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.024480316787958145, -2.038458114839159e-05, -0.023533785715699196, -0.00023958197562023997, -0.0010602811817079782, -0.5328077673912048, -0.02434525266289711, -0.24369563162326813, -0.009745165705680847, -0.11382647603750229, -0.05967992544174194, -0.011406328529119492, -0.000456109904916957, -3.2186455882765586e-06, -5.245195097813848e-06, -0.015143661759793758, -0.0001787979417713359, -0.027699928730726242, -0.15884192287921906, -0.12997373938560486], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014336677268147469, -0.001090765930712223, -0.01677033305168152], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.009547407738864422, -0.00010001159535022452], "finish_reason": "stop"}], "metrics": {"energy": 264.34959976196296, "energy_per_token": 1.3086613849602127, "time": 11.56022, "time_per_token": 0.05722881188118811}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " csv_input", "tokens": [" c", "sv", "_", "input", "\n"], "logprobs": [-0.5740599036216736, -0.0009708458674140275, -1.0715489387512207, -0.007311017718166113, -0.11141674965620041], "finish_reason": "stop"}, {"text": " open(csv_input, mode='r') as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " mode", "='", "r", "')", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.011644843965768814, -0.0014842457603663206, -0.0030651751440018415, -1.156323378381785e-05, -0.0001137191939051263, -0.31020626425743103, -2.629413604736328, -0.1398187279701233, -0.08357744663953781, -0.46660885214805603, -0.0004820853646378964, -0.7962014079093933, -0.004736038856208324, -0.046841248869895935, -0.09253539144992828, -0.0018096276326104999, -0.16529908776283264], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from CSV file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " CS", "V", " file", "\n"], "logprobs": [-0.0004807746736332774, -1.5735502529423684e-05, -3.5523738915799186e-05, -0.009973336942493916, -4.887569048150908e-06, -8.320462075062096e-05, -0.039929263293743134, -0.007315041497349739, -0.7168158292770386, -0.0002862997353076935, -0.03807584196329117, -0.04306488484144211, -2.640873670578003, -0.0003398079425096512, -0.07238413393497467, -0.08469230681657791], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007278237026184797, -0.0002627027570270002, -7.331102824537084e-05, -4.362964682513848e-05, -0.005182404071092606, -0.02358664572238922, -0.025308217853307724, -1.9311717551317997e-05, -3.969590397900902e-05, -9.059865078597795e-06, -4.577531944960356e-05, -0.011502731591463089, -0.8928174376487732], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006420934805646539, -5.006777428206988e-06, -0.0019240929977968335, -0.00022671037004329264, -0.04467826709151268], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.138139009475708, -0.06408942490816116], "finish_reason": "stop"}, {"text": "execute(f\"DROP TABLE IF EXISTS {TABLE_NAME};CREATE TABLE {TABLE_NAME} ({','.join(cols)})\")", "tokens": ["execute", "(", "f", "\"", "DR", "OP", " TABLE", " IF", " EX", "ISTS", " {", "TABLE", "_", "NAME", "};", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{'", ",", "'", ".", "join", "(", "cols", ")})", "\"", ")", "\n"], "logprobs": [-0.05012380704283714, -0.36106163263320923, -0.40468502044677734, -0.46613386273384094, -2.450321674346924, -1.6093124941107817e-05, -0.014549469575285912, -0.010670983232557774, -0.0008781867218203843, -0.0006796196103096008, -0.024626296013593674, -0.0024339118972420692, -1.4305012882687151e-05, -1.0609570381348021e-05, -0.9055205583572388, -2.57081937789917, -0.0036322588566690683, -0.0831972137093544, -0.00045217780279926956, -1.311301275563892e-06, -7.510157047363464e-06, -0.2914623022079468, -0.7013141512870789, -0.18456508219242096, -0.010055479593575, -0.18807633221149445, -0.00017712931730784476, -0.00013910756388213485, -0.08331578224897385, -0.027465561404824257, -0.01581987552344799, -0.6293707489967346, -0.010690443217754364, -0.05282158777117729], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({cols})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "')", "\n"], "logprobs": [-0.014122194610536098, -0.1859883964061737, -0.12298618257045746, -0.1539362519979477, -0.0028254371136426926, -0.0030917960684746504, -0.07451584935188293, -0.00043215948971919715, -1.311301275563892e-06, -5.483612312673358e-06, -0.09317135810852051, -1.7090851068496704, -0.10398471355438232, -0.7331329584121704, -0.0054123299196362495, -0.033789150416851044], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009214257821440697, -0.001177809201180935, -0.009567007422447205, -0.06066153571009636], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} ({\", \".join(row.keys())}) VALUES ({\", \".join([\"?\" for _ in range(len(row))])})',", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "row", ".", "keys", "())", "})", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "\"", "?", "\"", " for", " _", " in", " range", "(", "len", "(", "row", "))", "])", "})", "'", ",", "\n"], "logprobs": [-0.05488727241754532, -0.042179446667432785, -0.07896069437265396, -0.299767404794693, -0.002385748317465186, -1.7881377516459906e-06, -0.004979470744729042, -0.0032838250044733286, -0.0002351722796447575, -1.0967194612021558e-05, -4.732496745418757e-05, -0.0031409950461238623, -2.520138740539551, -0.003926901612430811, -0.0009467886411584914, -0.033690378069877625, -2.288792165927589e-05, -0.00019143179815728217, -1.4426990747451782, -0.5508546829223633, -0.4644423723220825, -0.08735403418540955, -0.06795422732830048, -0.0005009111482650042, -0.022079017013311386, -0.04172414541244507, -0.039092518389225006, -0.05738474056124687, -0.032170556485652924, -5.519237674889155e-05, -7.974783511599526e-05, -0.1510280817747116, -1.176498532295227, -0.050136957317590714, -0.0007217901293188334, -0.4582996368408203, -0.25178104639053345, -0.0007178590167313814, -0.26591959595680237, -0.00062851223628968, -0.014241370372474194, -0.00011657988943625242, -0.15206687152385712, -0.1920192837715149, -0.0004911408759653568, -0.00100419158115983, -0.009090228006243706, -0.0034614428877830505, -2.0874223709106445], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.015044556930661201, -0.00018785618885885924, -0.08974751830101013], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.01950945146381855, -1.8358061424805783e-05, -0.02671094425022602, -0.00020489977032411844, -0.0009459549910388887, -0.8837152123451233, -0.1123124435544014, -0.008679285645484924, -0.025446638464927673, -0.3559812903404236, -0.011339972727000713, -0.0625092163681984, -0.05828774720430374, -0.007240129169076681, -0.0004586121649481356, -6.198863957251888e-06, -4.768360213347478e-06, -0.024150826036930084, -0.00016449528629891574, -0.021635932847857475, -0.08875642716884613, -0.11930288374423981], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.011813560500741005, -0.0011998366098850965, -0.021043485030531883], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.00941786915063858, -0.00010144196130568162, -0.6656125783920288], "finish_reason": "stop"}], "metrics": {"energy": 286.57015367317206, "energy_per_token": 1.4186641270949112, "time": 11.5789385, "time_per_token": 0.057321477722772275}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5740599036216736, -0.0009708458674140275, -0.42586949467658997, -0.3225928544998169, -0.0003488647344056517, -0.002906505251303315, -0.0357481874525547, -0.0002022777043748647, -0.00019631843315437436, -0.17507079243659973, -0.0779774859547615], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.011700339615345001, -0.0015398323303088546, -0.0032576846424490213, -1.168244216387393e-05, -0.00014256415306590497, -0.29783210158348083, -0.3550340533256531, -0.05588136985898018, -0.17854847013950348, -0.0006149308173917234, -0.8914210796356201, -0.06094040721654892, -0.1936209499835968], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from CSV file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " CS", "V", " file", "\n"], "logprobs": [-0.0004433602443896234, -1.680836794548668e-05, -3.766942609217949e-05, -0.011375920847058296, -4.768360213347478e-06, -8.582700684200972e-05, -0.04790757969021797, -0.007848614826798439, -0.6378635764122009, -0.0002775999018922448, -0.041071292012929916, -0.037065595388412476, -2.560068368911743, -0.00032419670606032014, -0.06165170669555664, -0.08348621428012848], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.008428123779594898, -0.0002366024418734014, -0.00010334911348763853, -5.3165931603871286e-05, -0.0036479374393820763, -0.02634747326374054, -0.02867635153234005, -2.038458114839159e-05, -3.766942609217949e-05, -7.986990567587782e-06, -4.207999518257566e-05, -0.011087710037827492, -0.7005156874656677], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.000705589191056788, -5.483612312673358e-06, -0.002121580531820655, -0.00021288513380568475, -0.051940903067588806], "finish_reason": "stop"}, {"text": " ['id', 'name']", "tokens": [" ['", "id", "'", ",", " '", "name", "']", "\n"], "logprobs": [-2.2437870502471924, -0.2652636766433716, -0.016262847930192947, -0.00018904806347563863, -0.011747938580811024, -0.005327907390892506, -0.009503128007054329, -0.06048616021871567], "finish_reason": "stop"}, {"text": "execute('DROP TABLE IF EXISTS {};'.format(TABLE_NAME))  # Drop table if it exists", "tokens": ["execute", "('", "DR", "OP", " TABLE", " IF", " EX", "ISTS", " {", "};", "'", ".", "format", "(", "TABLE", "_", "NAME", "))", "  ", "#", " Drop", " table", " if", " it", " exists", "\n"], "logprobs": [-0.053168781101703644, -1.35007905960083, -1.0377020835876465, -1.0251946150674485e-05, -0.013811258599162102, -0.007789000868797302, -0.0007140470552258193, -0.0003471963864285499, -1.0640708208084106, -2.00308895111084, -0.4759390950202942, -0.008926603943109512, -0.0006798578542657197, -0.0015628041001036763, -0.003987220581620932, -1.1920922133867862e-06, -5.960446742392378e-06, -0.012980840168893337, -2.1004862785339355, -0.0006121906917542219, -0.5437954068183899, -0.8087926506996155, -0.24030126631259918, -0.8314021825790405, -0.19573388993740082, -0.0773254856467247], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.017676087096333504, -0.16570712625980377, -0.15881578624248505, -0.145278200507164, -0.0029893494211137295, -0.0032974891364574432, -0.07554657012224197, -0.0004166688595432788, -1.6689286894688848e-06, -7.271740287251305e-06, -0.08694671094417572, -0.25602543354034424, -0.025137925520539284, -0.006890937685966492, -0.6591194868087769, -6.675497570540756e-05, -7.414542778860778e-05, -0.06726612150669098, -0.04154255986213684, -0.01580779068171978, -0.006686219479888678, -0.03271791711449623], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009592747315764427, -0.0010886224918067455, -0.011461719870567322, -0.061592526733875275], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES({','.join([\"?\"] * len(row))})\", tuple(row.values()))", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", "({", "'", ",", "'", ".", "join", "([", "\"", "?", "\"", "]", " *", " len", "(", "row", "))", "})", "\"", ",", " tuple", "(", "row", ".", "values", "()))", "\n"], "logprobs": [-0.03945092856884003, -0.03995457664132118, -0.08899093419313431, -1.3326785564422607, -0.015971817076206207, -2.9802276912960224e-06, -0.008166139014065266, -0.006601785775274038, -0.00028784899041056633, -1.3828182090946939e-05, -3.528532761265524e-05, -0.00680415378883481, -0.10740157216787338, -2.6749675273895264, -0.02472596801817417, -0.003001115983352065, -1.5604742765426636, -0.00012861855793744326, -6.603976362384856e-05, -0.4690098464488983, -1.9608533382415771, -0.7153170704841614, -0.000671042304020375, -1.0459258556365967, -0.005524960812181234, -0.008374100551009178, -0.0004994813934899867, -1.5356680154800415, -0.048467520624399185, -0.004022365435957909, -0.00262880208902061, -0.000720956246368587, -0.5334126353263855, -0.05358501151204109, -0.013311443850398064, -0.06861447542905807, -0.0035350944381207228, -0.011024869978427887, -0.02594391070306301], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013983255252242088, -0.0001646144810365513, -0.08119770884513855], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.026179680600762367, -2.4437606043647975e-05, -0.02564290352165699, -0.00021073981770314276, -0.0009016501135192811, -0.5276622772216797, -0.028782455250620842, -0.23031742870807648, -0.008882769383490086, -0.12503144145011902, -0.06893253326416016, -0.01134504098445177, -0.00039748396375216544, -6.079655122448457e-06, -5.483612312673358e-06, -0.01448508445173502, -0.00019107422849629074, -0.029095718637108803, -0.14527717232704163, -0.11747092008590698], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.012194600887596607, -0.0010674261720851064, -0.02078256569802761], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.009405823424458504, -0.00010251473577227443], "finish_reason": "stop"}], "metrics": {"energy": 251.76936617469786, "energy_per_token": 1.2911249547420403, "time": 11.569078, "time_per_token": 0.05932860512820513}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.17562739551067352, -8.21318244561553e-05, -0.0008039817912504077, -2.622600959512056e-06, -3.4689302992774174e-05, -0.00012313561455812305, -0.12043613195419312, -2.9444261599564925e-05, -0.017952686175704002, -0.00731669832020998], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-2.015746831893921, -0.0009914488764479756, -0.00682795187458396, -0.00017093151109293103, -0.006165176630020142, -0.0018694796599447727, -0.253319650888443, -0.003487696871161461, -0.0006735440110787749, -0.40928101539611816, -0.05355868488550186], "finish_reason": "stop"}, {"text": " open(csv_input) as f:", "tokens": [" open", "(", "csv", "_", "input", ")", " as", " f", ":", "\n"], "logprobs": [-0.010016179643571377, -0.0015099564334377646, -0.003465125570073724, -1.7165990357170813e-05, -0.00010561384988250211, -1.5696732997894287, -0.000196556793525815, -0.829227864742279, -0.07254235446453094, -0.18142633140087128], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from CSV file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " CS", "V", " file", "\n"], "logprobs": [-0.0004378790326882154, -1.2516897186287679e-05, -3.838465272565372e-05, -0.00955295655876398, -4.172316494077677e-06, -8.34430247778073e-05, -0.035950951278209686, -0.008001180365681648, -0.7502127885818481, -0.00035446559195406735, -0.04082493111491203, -0.04570624977350235, -2.680497407913208, -0.00035446559195406735, -0.0691744014620781, -0.0976414903998375], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007054540328681469, -0.00023731753753963858, -7.92710343375802e-05, -6.139089964563027e-05, -0.004156996961683035, -0.025516945868730545, -0.02615935727953911, -1.7762025890988298e-05, -4.005352093372494e-05, -6.9141146923357155e-06, -5.030505417380482e-05, -0.011563891544938087, -0.7106218934059143], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007894498412497342, -6.6756979322235566e-06, -0.002153698354959488, -0.00019298121333122253, -0.04539165273308754], "finish_reason": "stop"}, {"text": " [\"name\", \"id\"]", "tokens": [" [", "\"", "name", "\"", ",", " \"", "id", "\"", "]", "\n"], "logprobs": [-1.0801652669906616, -1.6726899147033691, -2.328073501586914, -0.07113867253065109, -0.17183038592338562, -0.06481145322322845, -0.5519385933876038, -0.011220097541809082, -0.08114835619926453, -0.09151138365268707], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.0690281093120575, -0.3221251368522644, -2.249279022216797], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE {TABLE_NAME} ({cols})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "\"", ")", "\n"], "logprobs": [-0.01886696182191372, -0.16391803324222565, -0.12360287457704544, -2.0591297149658203, -0.32476651668548584, -0.004766767844557762, -0.13942155241966248, -0.0005390383303165436, -1.7881377516459906e-06, -7.748573807475623e-06, -0.1726972609758377, -0.862742006778717, -0.2235831916332245, -1.1358559131622314, -0.004752055741846561, -0.003482232103124261, -0.1800689846277237], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009316304698586464, -0.0010594476480036974, -0.008981069549918175, -0.08126365393400192], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join(row.values())})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "(", "row", ".", "values", "())", "})", "')", "\n"], "logprobs": [-0.046918485313653946, -0.03591633588075638, -0.08804843574762344, -0.3037554621696472, -0.0026655402034521103, -1.6689286894688848e-06, -0.005130814854055643, -0.003501951927319169, -0.00023815179883968085, -1.3589766240329482e-05, -3.731181277544238e-05, -0.004588906653225422, -0.20518463850021362, -0.08380407094955444, -0.013183921575546265, -0.01564350165426731, -0.12409136444330215, -4.088794958079234e-05, -0.0001919085334520787, -2.8260855674743652, -0.17034021019935608, -0.21435922384262085, -0.005821653641760349, -0.06156696751713753, -0.002281683497130871, -0.003004800295457244, -0.059540100395679474], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013445300981402397, -0.0001532914029667154, -0.08418154716491699], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn, index_col='id')", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ",", " index", "_", "col", "='", "id", "')", "\n"], "logprobs": [-0.019600283354520798, -2.5987286790041253e-05, -0.029435044154524803, -0.00033408781746402383, -0.0009601273923180997, -1.042442798614502, -0.07543569803237915, -0.00716485595330596, -0.027664795517921448, -0.3618676960468292, -0.015184522606432438, -0.08422089368104935, -0.04934502765536308, -0.007353619672358036, -0.0005403488758020103, -8.106198947643861e-06, -2.9802276912960224e-06, -0.026233214884996414, -0.00015805903240107, -0.02762768790125847, -2.33612322807312, -0.02955518662929535, -0.0006461439770646393, -0.007941930554807186, -1.9219715595245361, -0.01977572776377201, -0.01211133785545826, -0.11291584372520447], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.015039036981761456, -0.0012351986952126026, -0.020309235900640488], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.010645742528140545, -0.00010287232726113871, -0.5819142460823059], "finish_reason": "stop"}], "metrics": {"energy": 224.66270783424395, "energy_per_token": 1.3782988210689813, "time": 9.882695, "time_per_token": 0.060630030674846624}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " StringIO(csv_input.getvalue())", "tokens": [" String", "IO", "(", "csv", "_", "input", ".", "get", "value", "())", "\n"], "logprobs": [-2.146498203277588, -0.0015547104412689805, -0.17021723091602325, -0.01127349492162466, -0.00025090406415984035, -0.00016699827392585576, -0.02801387943327427, -0.608927845954895, -0.0011186301708221436, -0.01031213253736496, -0.07741342484951019], "finish_reason": "stop"}, {"text": " open(csv_input, \"r\", newline=\"\") as csvfile:  # Read from a file path", "tokens": [" open", "(", "csv", "_", "input", ",", " \"", "r", "\"", ",", " new", "line", "=", "\"", "\"", ")", " as", " c", "sv", "file", ":", "  ", "#", " Read", " from", " a", " file", " path", "\n"], "logprobs": [-0.011309091933071613, -0.001526977401226759, -0.003962998278439045, -1.4662635294371285e-05, -0.00013374387344811112, -0.2779226303100586, -2.6408028602600098, -0.09964682906866074, -0.015898607671260834, -1.5427685976028442, -1.7203118801116943, -0.0002661589242052287, -0.8475695848464966, -0.2640213370323181, -0.018643619492650032, -0.08717945963144302, -0.0005003153928555548, -1.0017340183258057, -0.004233446437865496, -2.6240310668945312, -0.0008910499745979905, -1.717407464981079, -0.00034540885826572776, -0.7299559116363525, -0.09875353425741196, -2.0142600536346436, -0.13790935277938843, -0.8254844546318054, -0.0797431692481041], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.0004789874074049294, -1.1801649634435307e-05, -3.7431014789035544e-05, -0.01206210721284151, -5.483612312673358e-06, -8.77341881277971e-05, -0.03848084807395935, -0.00892825797200203, -0.7248680591583252, -0.0003979606262873858, -0.036802276968955994, -0.04379323124885559, -0.31895411014556885, -0.6847720146179199], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.008167912252247334, -0.0002613918040879071, -7.879423355916515e-05, -4.8040190449682996e-05, -0.004153079353272915, -0.023901425302028656, -0.025057826191186905, -2.002696055569686e-05, -3.969590397900902e-05, -7.986990567587782e-06, -4.911301948595792e-05, -0.012172343209385872, -0.8623996376991272], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007117837085388601, -6.198863957251888e-06, -0.0019422968616709113, -0.0002649671514518559, -0.05305393040180206], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.1601152420043945, -0.060081664472818375], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE IF NOT EXISTS ' + TABLE_NAME + ' (' + ','.join(cols) + ')', dr.fieldnames)", "tokens": ["execute", "('", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " '", " +", " TABLE", "_", "NAME", " +", " '", " ('", " +", " '", ",", "'", ".", "join", "(", "cols", ")", " +", " '", ")'", ",", " dr", ".", "field", "names", ")", "\n"], "logprobs": [-0.049706362187862396, -1.3548235893249512, -0.754532516002655, -0.008759644813835621, -0.06876672804355621, -0.00030655929003842175, -0.0004895919119007885, -0.00019751029321923852, -0.4816676378250122, -0.055145420134067535, -0.022765008732676506, -5.722029527532868e-06, -5.245195097813848e-06, -0.0075946408323943615, -0.134490504860878, -0.7282322645187378, -0.013099093921482563, -0.07921424508094788, -0.006938647944480181, -0.49713537096977234, -0.0009535771678201854, -0.00044848397374153137, -0.052685096859931946, -0.046777088195085526, -0.007872979156672955, -0.0013094907626509666, -0.006516516208648682, -2.172091484069824, -0.7758660316467285, -0.9453927278518677, -0.023436322808265686, -0.03943660482764244, -0.0021083762403577566, -0.008417248725891113, -0.059123869985342026], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.017617523670196533, -0.1559411734342575, -0.15872953832149506, -0.1564978063106537, -0.0027999980375170708, -0.0029513156041502953, -2.6745903491973877, -0.000940476544201374, -0.0002980979916173965, -0.00029213930247351527, -0.006147404666990042, -0.0004912600270472467, -2.145764938177308e-06, -1.0609570381348021e-05, -0.10943713784217834, -0.22077429294586182, -0.03130592033267021, -0.007318473421037197, -0.6168090105056763, -0.00016175392374861985, -0.0001823735801735893, -0.0376153364777565, -0.025011321529746056, -0.01585003174841404, -0.007669881451874971, -0.027214201167225838], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008552944287657738, -0.0010626628063619137, -0.012416444718837738, -0.053626589477062225], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in cols])})',", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " _", " in", " col", "s", "])", "})", "'", ",", "\n"], "logprobs": [-0.04647557809948921, -0.03479937091469765, -0.08680922538042068, -0.3592286705970764, -0.002439976902678609, -1.9073468138230965e-06, -0.004244604613631964, -0.0034874591510742903, -0.00024720950750634074, -1.5020257706055418e-05, -3.480850500636734e-05, -0.004167681559920311, -0.19268284738063812, -0.08919964730739594, -0.008355422876775265, -0.012600923888385296, -0.15620937943458557, -4.386805812828243e-05, -0.0002269487304147333, -0.07595855742692947, -0.4662364721298218, -0.0596553310751915, -0.6052132844924927, -0.0025894464924931526, -0.150124654173851, -0.2762775719165802, -0.0013136576162651181, -0.676506757736206, -1.2040065485052764e-05, -0.004615250043570995, -0.001420561340637505, -0.002799641340970993, -0.00159708212595433, -1.19591224193573], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012846567668020725, -0.00018499570433050394, -0.07336066663265228], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02392609976232052, -2.729855441430118e-05, -0.022763609886169434, -0.0002787916746456176, -0.0008640132145956159, -0.9429776072502136, -0.08419732749462128, -0.007418465800583363, -0.021221010014414787, -0.3279303312301636, -0.013101917691528797, -0.08060818910598755, -0.057228945195674896, -0.007156689185649157, -0.0004258441040292382, -6.437280717364047e-06, -2.622600959512056e-06, -0.025898491963744164, -0.0001629458274692297, -0.023909687995910645, -0.12129982560873032, -0.09848079830408096], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014743775129318237, -0.0010831448016688228, -0.018793612718582153], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.009666184894740582, -9.142934868577868e-05], "finish_reason": "stop"}], "metrics": {"energy": 269.9395772762299, "energy_per_token": 1.267321959043333, "time": 12.204053, "time_per_token": 0.057296023474178406}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input)  # Parse the CSV input data as a pandas DataFrame", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "  ", "#", " Parse", " the", " CS", "V", " input", " data", " as", " a", " pandas", " Data", "Frame", "\n"], "logprobs": [-1.8108196258544922, -0.000730128725990653, -0.0063290162943303585, -0.00016151554882526398, -0.005784083157777786, -0.0014335366431623697, -0.2970103621482849, -0.0027000184636563063, -0.0008192281820811331, -0.44922012090682983, -2.915402889251709, -0.00171538011636585, -3.8065030574798584, -0.5297842025756836, -0.5108593702316284, -0.00022182388056535274, -2.298140287399292, -2.1518516540527344, -1.6344150304794312, -0.3537088930606842, -0.4157651960849762, -0.06467390060424805, -0.012115106917917728, -0.09878291189670563], "finish_reason": "stop"}, {"text": " open(csv_input, 'r', encoding='utf-8') as f:  # Open the file", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "  ", "#", " Open", " the", " file", "\n"], "logprobs": [-0.011291176080703735, -0.0016545667313039303, -0.004415524657815695, -1.2397689715726301e-05, -9.190614218823612e-05, -0.2993430495262146, -0.30394670367240906, -0.048005640506744385, -1.8844780921936035, -0.004637083038687706, -0.3315276503562927, -0.09510178118944168, -0.1394498497247696, -0.15636314451694489, -0.002818067092448473, -0.08151266723871231, -0.0007286992622539401, -0.7784072160720825, -0.07656650990247726, -1.7682164907455444, -0.00012051333033014089, -1.7596888542175293, -0.8184804916381836, -0.4885799288749695, -1.266392707824707], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.00047398300375789404, -1.3351351299206726e-05, -3.576214658096433e-05, -0.012629645876586437, -4.887569048150908e-06, -8.451581379631534e-05, -0.043095484375953674, -0.0084481006488204, -0.707897961139679, -0.0003271759778726846, -0.037346187978982925, -0.04611193388700485, -0.3385098874568939, -0.7714710235595703, -0.04310690239071846], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create or open a connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " or", " open", " a", " connection", " to", " the", " database", "\n"], "logprobs": [-0.00672647962346673, -0.0002493547508493066, -8.594620157964528e-05, -4.756337511935271e-05, -0.004177178256213665, -0.02185359224677086, -0.024869700893759727, -2.169585604860913e-05, -4.2437604861333966e-05, -8.940656698541716e-06, -5.411955135059543e-05, -0.010658008977770805, -0.6025086045265198, -0.00033122775494121015, -1.0073474645614624, -3.2777481079101562, -0.7064682841300964, -1.6091694831848145, -1.4134135246276855, -0.16167789697647095, -0.18590445816516876, -0.20634609460830688, -0.107637420296669], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006947487709112465, -6.318072337307967e-06, -0.0024705384857952595, -0.0002008474839385599, -0.0514843612909317], "finish_reason": "stop"}, {"text": " dr.fieldnames", "tokens": [" dr", ".", "field", "names", "\n"], "logprobs": [-3.4429197311401367, -0.0006937957368791103, -0.006249291356652975, -0.00027450130437500775, -0.2067389041185379], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.05701975151896477, -0.31632503867149353, -2.131272792816162], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE {TABLE_NAME}({cols})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}(", "{", "cols", "})", "\"", ")", "\n"], "logprobs": [-0.013238390907645226, -0.16072975099086761, -0.16968196630477905, -2.0299553871154785, -0.3889703154563904, -0.005427980329841375, -0.14928993582725525, -0.0005354639724828303, -1.5497195136049413e-06, -6.437280717364047e-06, -2.0030770301818848, -1.710978627204895, -0.09121500700712204, -0.8411325812339783, -0.002681352896615863, -0.003327786922454834, -0.12995165586471558], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009161104448139668, -0.0009371418273076415, -0.011157029308378696, -0.06066153571009636], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in range(len(cols))])})',", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " _", " in", " range", "(", "len", "(", "cols", "))", "])", "})", "'", ",", "\n"], "logprobs": [-0.04746067523956299, -0.0411408506333828, -0.08326555043458939, -0.3299511969089508, -0.0026653024833649397, -1.5497195136049413e-06, -0.0038732285611331463, -0.0037288200110197067, -0.0002225389762315899, -1.168244216387393e-05, -3.4689302992774174e-05, -0.004573124460875988, -0.20839489996433258, -0.08765308558940887, -0.011746407486498356, -0.0114773940294981, -0.11881712824106216, -4.434487345861271e-05, -0.00021371940965764225, -0.06739795953035355, -0.49957674741744995, -0.04835133254528046, -0.652077853679657, -0.0035733438562601805, -0.13041141629219055, -0.22912651300430298, -0.001392586505971849, -0.8005985021591187, -0.0009029601933434606, -0.016963738948106766, -0.00013731967192143202, -0.4146777093410492, -0.0009946642676368356, -0.0006711614551022649, -0.0007508557755500078, -0.002863119123503566, -0.002375164069235325, -0.8216640949249268], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012543476186692715, -0.0001567479339428246, -0.07296279072761536], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.022673998028039932, -2.8729025871143676e-05, -0.023283997550606728, -0.00023600654094479978, -0.0009329734020866454, -0.8600876331329346, -0.08635018020868301, -0.0066466680727899075, -0.03093729540705681, -0.3233833312988281, -0.011928183026611805, -0.07458975911140442, -0.05921982601284981, -0.0064957900904119015, -0.0003946240758523345, -6.9141146923357155e-06, -3.6954811548639555e-06, -0.023628560826182365, -0.00015341058315243572, -0.02171945571899414, -0.10195695608854294, -0.10897938907146454], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013224509544670582, -0.0014851979212835431, -0.01972336694598198], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.008923295885324478, -0.0001072826053132303, -0.6269978284835815], "finish_reason": "stop"}], "metrics": {"energy": 253.29075222587574, "energy_per_token": 1.2664537611293787, "time": 11.571858, "time_per_token": 0.05785929}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -0.42585235834121704, -0.0003313469351269305, -0.0025512785650789738, -0.04200800508260727, -0.0001793938863556832, -0.00016258825780823827, -0.2002900242805481, -0.07139721512794495], "finish_reason": "stop"}, {"text": " open(csv_input, mode=\"rt\", encoding=\"utf-8\") as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ",", " mode", "=", "\"", "rt", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.011684904806315899, -0.0014072287594899535, -0.0032643387094140053, -1.5020257706055418e-05, -0.00010597144137136638, -0.2745029628276825, -2.63460111618042, -2.106200695037842, -0.0031323200091719627, -2.9742839336395264, -0.00033539868309162557, -0.19468022882938385, -0.15260276198387146, -0.11817079037427902, -0.001378777320496738, -0.1313829869031906, -0.07901180535554886, -0.001335801207460463, -0.10049469769001007, -0.12755239009857178, -0.0008127961773425341, -0.9679484367370605, -0.005555902607738972, -0.08373884111642838, -0.1268339604139328, -0.0032690914813429117, -0.1848071962594986], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.0005229535745456815, -1.6212332411669195e-05, -3.480850500636734e-05, -0.010589834302663803, -5.006777428206988e-06, -8.701899787411094e-05, -0.0380750373005867, -0.008216862566769123, -0.8410712480545044, -0.0002307625545654446, -0.04541079327464104, -0.0464845672249794, -0.334293007850647, -0.8313010334968567, -0.03934251517057419], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.008678813464939594, -0.0002562671434134245, -7.712543447269127e-05, -4.6132929128361866e-05, -0.00420816196128726, -0.027816222980618477, -0.02584470808506012, -1.847726889536716e-05, -4.875540980719961e-05, -8.106198947643861e-06, -5.435795901576057e-05, -0.01259621512144804, -0.7601640820503235], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007771808886900544, -5.483612312673358e-06, -0.001986198825761676, -0.00023898606013972312, -0.05090685188770294], "finish_reason": "stop"}, {"text": " [field[0] for field in dr.fieldnames]", "tokens": [" [", "field", "[", "0", "]", " for", " field", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.131300926208496, -2.6875133514404297, -1.247371792793274, -0.04073097184300423, -0.002676597097888589, -0.06500181555747986, -0.0008922410197556019, -0.00042441420373506844, -0.22368833422660828, -0.002002021996304393, -0.005485482048243284, -0.0018334260676056147, -0.007190539501607418, -0.28054922819137573], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.05129174515604973, -0.311385840177536, -0.38991275429725647, -1.086868405342102, -0.16217227280139923, -0.01033690944314003, -0.19844070076942444, -0.0003651905863080174, -0.0006582954083569348, -0.0002004899288294837, -0.05518152192234993, -0.00178927939850837, -1.0013530300057027e-05, -1.1324817933200393e-05, -0.0994589552283287, -0.29876795411109924, -0.04055527225136757, -0.009242959320545197, -0.8347238898277283, -6.5205356804654e-05, -0.00012468514614738524, -0.09102325141429901, -0.061553291976451874, -0.009528633207082748, -0.04411254823207855, -0.05394933372735977], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({cols[0]} INT, {cols[1]} TEXT)')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", " INT", ",", " {", "cols", "[", "1", "]}", " TEXT", ")", "')", "\n"], "logprobs": [-0.015464864671230316, -0.19071240723133087, -0.13240720331668854, -0.14706161618232727, -0.0026914584450423717, -0.0034054878633469343, -0.07249213010072708, -0.0003535122668836266, -2.145764938177308e-06, -4.6491513785440475e-06, -0.09983780235052109, -1.6870752573013306, -0.08538702130317688, -0.7038364410400391, -0.006122405640780926, -0.025847729295492172, -0.70482337474823, -2.763479709625244, -0.14093787968158722, -0.0003400462737772614, -0.0002083561266772449, -0.0005833592731505632, -0.008047773502767086, -0.36607661843299866, -0.0890488401055336, -0.002484332537278533, -0.03294113650918007], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008289691992104053, -0.0011526852613314986, -0.009790615178644657, -0.0582013763487339], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} ({cols[0]}, {\", \".join([f\"{col}\" for col in cols[1:]])}) VALUES (?, {\", \".join([f\"?\" for col in cols[1:]])})', [row[cols[0]]] + row[cols[1:]])", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", ",", " ", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "{", "col", "}\"", " for", " col", " in", " col", "s", "[", "1", ":", "]]", ")})", " VALUES", " (", "?", ",", " ", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " col", " in", " col", "s", "[", "1", ":", "]]", ")})", "'", ",", " [", "row", "[", "cols", "[", "0", "]]", "]", " +", " row", "[", "cols", "[", "1", ":", "]]", ")", "\n"], "logprobs": [-0.036334745585918427, -0.03829878568649292, -0.0998973473906517, -0.35914918780326843, -0.002782879862934351, -1.6689286894688848e-06, -0.004220270086079836, -0.003171654185280204, -0.00022468426323030144, -8.821448318485636e-06, -3.0636318115284666e-05, -0.004091701935976744, -2.9688384532928467, -0.6491801142692566, -0.8037166595458984, -0.009075580164790154, -0.22631578147411346, -0.030738135799765587, -0.45806455612182617, -0.0007398966699838638, -0.003587479004636407, -0.09313801676034927, -2.52720492426306e-05, -0.00016151554882526398, -0.5163147449493408, -0.5956004858016968, -0.09061078727245331, -0.015476720407605171, -0.17649298906326294, -0.37443676590919495, -0.003452770644798875, -0.0016663487767800689, -0.0008559139096178114, -0.03160210698843002, -0.00182819040492177, -0.5433909296989441, -0.0025362963788211346, -0.0173607487231493, -0.0016837242292240262, -0.002158099552616477, -0.1413615643978119, -0.16719746589660645, -1.0704338550567627, -0.04058846831321716, -0.21554861962795258, -0.5636025667190552, -0.010722994804382324, -0.09939311444759369, -5.054346183896996e-05, -0.00013934595335740596, -0.05235718935728073, -0.21182292699813843, -0.11962331086397171, -0.3434953987598419, -0.0017819016939029098, -0.0680103600025177, -1.1062607765197754, -0.0013435394503176212, -0.011951387859880924, -0.0002661589242052287, -0.03453027084469795, -0.001453534816391766, -0.008100749924778938, -8.141662692651153e-05, -0.00396691681817174, -0.02756112441420555, -0.002274665981531143, -1.5377981662750244, -0.15962491929531097, -0.05044643580913544, -0.9441139101982117, -0.0010848119854927063, -0.004132778849452734, -0.0009243983076885343, -1.760256290435791, -0.0016174342017620802, -2.2441842555999756, -0.04842492938041687, -0.21572263538837433, -0.010616019368171692, -0.0025321345310658216, -0.006259597837924957, -0.0004839917819481343, -0.008821799419820309, -0.02803659811615944], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.015772705897688866, -0.0001938155182870105, -0.07636120915412903], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT {\", \".join([f\"{col} TEXT\" for col in cols])} FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " ", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "{", "col", "}", " TEXT", "\"", " for", " col", " in", " col", "s", "]", ")}", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02191552147269249, -2.6464111215318553e-05, -0.023045331239700317, -0.00022909401741344482, -0.0012153151910752058, -0.6641891002655029, -0.029639093205332756, -0.2578771412372589, -0.009022064507007599, -2.128206729888916, -0.0008647278300486505, -0.0022266136948019266, -0.019299231469631195, -3.325883881188929e-05, -0.00012814177898690104, -0.7128065824508667, -0.4040493369102478, -0.0004325169720686972, -0.04460781067609787, -0.022797634825110435, -0.15602663159370422, -0.5581491589546204, -0.0034165363758802414, -0.0012442474253475666, -0.00017474555352237076, -0.0002317160106031224, -0.054124388843774796, -3.313963316031732e-05, -0.595742404460907, -0.0001854724541772157, -0.06212244927883148, -0.007132188882678747, -0.00036769305006600916, -6.079655122448457e-06, -8.702239938429557e-06, -0.024513352662324905, -0.0008557948167435825, -0.06317116320133209, -0.1904786080121994, -0.03859233856201172], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.013132860884070396, -0.0012232924345880747, -0.01901727169752121], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.011746996082365513, -0.00011836781777674332, -0.5761181116104126], "finish_reason": "stop"}], "metrics": {"energy": 391.39739976119995, "energy_per_token": 1.3685223767874124, "time": 15.351737, "time_per_token": 0.053677402097902095}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.19658362865447998, -7.223821739898995e-05, -0.0007474012672901154, -2.7418097943154862e-06, -2.4676019165781327e-05, -0.00011574551899684593, -0.11439408361911774, -2.2053474822314456e-05, -0.017375392839312553, -0.008707057684659958], "finish_reason": "stop"}, {"text": " StringIO(csv_input.getvalue())", "tokens": [" String", "IO", "(", "csv", "_", "input", ".", "get", "value", "())", "\n"], "logprobs": [-2.002837896347046, -0.0019086254760622978, -0.1750895082950592, -0.015037041157484055, -0.0002885640424210578, -0.0002213471452705562, -0.03573104739189148, -0.5729884505271912, -0.0010408704401925206, -0.011427660472691059, -0.0736115500330925], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:  # Read from file", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.012273500673472881, -0.0016161249950528145, -0.004022484179586172, -1.549708758830093e-05, -0.00010716341057559475, -0.31554025411605835, -0.31599926948547363, -0.051967497915029526, -0.16159169375896454, -0.0007195267826318741, -0.8599071502685547, -0.0679674819111824, -1.5850083827972412, -0.00014530557382386178, -0.4479042887687683, -0.11866161972284317, -0.3079586327075958, -0.8340782523155212], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.00043764073052443564, -1.7046782886609435e-05, -3.6477376852417365e-05, -0.01092323288321495, -5.602820692729438e-06, -7.60526381782256e-05, -0.04649435356259346, -0.00805120263248682, -0.6582764387130737], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Connect to the SQLite database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Connect", " to", " the", " SQL", "ite", " database", "\n"], "logprobs": [-0.006616589147597551, -0.00025960413040593266, -8.880697714630514e-05, -5.328513361746445e-05, -0.0044519598595798016, -0.02383146993815899, -0.027187984436750412, -2.1219027985353023e-05, -4.458328112377785e-05, -8.34461570775602e-06, -4.3748852476710454e-05, -0.009768304415047169, -0.5507612824440002, -0.000316212244797498, -1.0978105068206787, -0.010834439657628536, -0.26414069533348083, -1.8960883617401123, -0.02444169484078884, -0.06537696719169617, -0.03735721483826637], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.000814582861494273, -6.079655122448457e-06, -0.0018221217906102538, -0.00022265815641731024, -0.047754619270563126], "finish_reason": "stop"}, {"text": " [k for k in dr.fieldnames]", "tokens": [" [", "k", " for", " k", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.0698988437652588, -3.0281622409820557, -0.15313425660133362, -0.004008830059319735, -0.35269400477409363, -0.08821806311607361, -0.003922626841813326, -0.0032092041801661253, -0.00043990471749566495, -0.029950814321637154, -0.29422321915626526], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE {TABLE_NAME}({','.join(cols)})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}(", "{'", ",", "'", ".", "join", "(", "cols", ")})", "\"", ")", "\n"], "logprobs": [-0.05713335797190666, -0.30070409178733826, -0.3886580169200897, -0.4587760865688324, -0.3172707259654999, -0.00917102675884962, -1.941910743713379, -0.002333182143047452, -1.0490362910786644e-05, -1.3708974620385561e-05, -1.9845424890518188, -0.13065852224826813, -0.018738040700554848, -0.13045871257781982, -0.00018463814922142774, -0.00013267113536130637, -0.05385016277432442, -0.030200563371181488, -0.016035521402955055, -0.05096213519573212, -0.006136741489171982, -0.10202714055776596], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE {tbl} ({col1},{col2})'.format(", "tokens": ["execute", "('", "CREATE", " TABLE", " {", "tbl", "}", " ({", "col", "1", "}", ",", "{", "col", "2", "})", "'", ".", "format", "(", "\n"], "logprobs": [-0.014407769776880741, -1.8689652681350708, -0.08927302807569504, -0.0035373514983803034, -0.2606775462627411, -3.552661895751953, -0.12719890475273132, -0.1586136817932129, -1.7573812007904053, -2.128354549407959, -0.019018441438674927, -1.423681378364563, -1.6305363178253174, -0.0006237468332983553, -0.0004670721245929599, -0.2681224048137665, -0.07852481305599213, -0.057390253990888596, -0.006940897088497877, -0.0018742390675470233, -1.2163283824920654], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.009303431026637554, -0.0012186489766463637, -0.012348624877631664, -0.07084374874830246], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({','.join([row[col] for col in cols])})\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{'", ",", "'", ".", "join", "([", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "})", "\"", ")", "\n"], "logprobs": [-0.06488653272390366, -0.03812794014811516, -0.07894527167081833, -1.2610366344451904, -0.017960766330361366, -2.9802276912960224e-06, -0.006342875771224499, -0.006047403905540705, -0.00035637227119877934, -1.3589766240329482e-05, -3.3854863431770355e-05, -0.00792667455971241, -0.11988494545221329, -0.5710768103599548, -0.03872847184538841, -0.012249242514371872, -1.4677752256393433, -0.00016950124700088054, -0.00024863966973498464, -0.10741335153579712, -1.784184455871582, -0.044917069375514984, -0.07423830032348633, -0.0035050406586378813, -0.059127915650606155, -0.00013362467871047556, -0.0007481159991584718, -0.08842825144529343, -0.00023922442051116377, -0.001785709522664547, -0.0011372057488188148, -0.001497934339568019, -0.0021290748845785856, -0.028647854924201965], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013635469600558281, -0.0001728385395836085, -0.08090123534202576], "finish_reason": "stop"}, {"text": " pd.read_sql(f\"SELECT * FROM {TABLE_NAME}\", conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "\"", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ")", "\n"], "logprobs": [-0.02695372886955738, -2.5152843591058627e-05, -0.023751497268676758, -0.0002338612830499187, -0.0008316157618537545, -0.5364233255386353, -0.03224154934287071, -1.5929697751998901, -0.01942562498152256, -0.1491570621728897, -0.05709080025553703, -0.007390894927084446, -0.0005187834613025188, -7.271740287251305e-06, -7.629365427419543e-06, -0.01649598591029644, -0.00035208225017413497, -0.027294129133224487, -0.18589070439338684, -0.13560491800308228], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.010640788823366165, -0.001279012649320066, -0.020252464339137077], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.009921994060277939, -0.00011491115583339706, -0.6521894931793213], "finish_reason": "stop"}], "metrics": {"energy": 260.29522233200066, "energy_per_token": 1.3348472940102598, "time": 11.784779, "time_per_token": 0.060434764102564105}}
{"outputs": [{"text": " isinstance(csv_input, str):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " str", "):", "\n"], "logprobs": [-0.2145080417394638, -6.723177648382261e-05, -0.0007429938414134085, -2.7418097943154862e-06, -2.777537883957848e-05, -0.0001382732152706012, -2.586116313934326, -0.030015485361218452, -0.010060318745672703], "finish_reason": "stop"}, {"text": " csv_input", "tokens": [" c", "sv", "_", "input", "\n"], "logprobs": [-0.6143150329589844, -0.0009813260985538363, -1.0587338209152222, -0.00632510706782341, -0.1270257979631424], "finish_reason": "stop"}, {"text": " open(csv_input) as file:", "tokens": [" open", "(", "csv", "_", "input", ")", " as", " file", ":", "\n"], "logprobs": [-0.013511399738490582, -0.0014290130930021405, -0.0034818758722394705, -1.6689160474925302e-05, -0.00011336160969221964, -1.4559811353683472, -0.00020668754586949944, -1.85672926902771, -0.030985027551651, -0.14853908121585846], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0005297449533827603, -1.8715683836489916e-05, -3.2543604902457446e-05, -0.010937971994280815, -5.006777428206988e-06, -7.915183232398704e-05, -0.03913986310362816, -0.009382322430610657, -0.6521767377853394], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create a connection to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " a", " connection", " to", " the", " database", "\n"], "logprobs": [-0.006867851130664349, -0.00024923557066358626, -7.950943836476654e-05, -4.7801782784517854e-05, -0.004212791565805674, -0.02655702829360962, -0.02388303354382515, -1.6331539882230572e-05, -4.8397800128441304e-05, -5.960446742392378e-06, -5.1020273531321436e-05, -0.012376883998513222, -0.6963075399398804, -0.00036006642039865255, -1.0410807132720947, -0.38620811700820923, -0.8412114977836609, -0.17840297520160675, -0.09241410344839096, -0.25052759051322937, -0.06469468772411346], "finish_reason": "stop"}, {"text": " conn.cursor()  # Create a cursor object", "tokens": [" conn", ".", "cursor", "()", "  ", "#", " Create", " a", " cursor", " object", "\n"], "logprobs": [-0.0008991489303298295, -5.483612312673358e-06, -0.0021458473056554794, -0.00023278864682652056, -2.990241527557373, -0.0002366024418734014, -0.6540132761001587, -0.10255931317806244, -0.3703958988189697, -1.239445686340332, -0.39945897459983826], "finish_reason": "stop"}, {"text": " [col[0].upper() for col in dr.fieldnames]", "tokens": [" [", "col", "[", "0", "]", ".", "upper", "()", " for", " col", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.1650248765945435, -1.3758372068405151, -1.7594826221466064, -0.10535391420125961, -0.004774360917508602, -2.512617826461792, -1.2035534381866455, -0.00020954797219019383, -0.21936176717281342, -0.003649600315839052, -0.0015714927576482296, -0.21642865240573883, -0.001277702976949513, -0.004053235054016113, -0.0009353553177788854, -0.01778031885623932, -0.3029193580150604], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({cols})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "\"", ")", "\n"], "logprobs": [-0.0568537600338459, -0.30065980553627014, -0.4053436517715454, -0.4929460287094116, -0.2794804275035858, -0.008677513338625431, -0.14405842125415802, -0.00035661060246638954, -0.0005004345439374447, -0.00020108585886191577, -0.05069689825177193, -0.0018256916664540768, -7.986990567587782e-06, -1.1324817933200393e-05, -0.10741303116083145, -0.828943133354187, -0.5588207840919495, -0.7502710819244385, -0.006314919795840979, -0.00830021407455206, -0.12781479954719543], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE {0} (\"{1}\" {2}, \"{3}\" {4})'.format(TABLE_NAME,", "tokens": ["execute", "('", "CREATE", " TABLE", " {", "0", "}", " (", "\"", "{", "1", "}\"", " {", "2", "}", ",", " \"", "{", "3", "}\"", " {", "4", "})", "'", ".", "format", "(", "TABLE", "_", "NAME", ",", "\n"], "logprobs": [-0.015588458627462387, -1.9221687316894531, -0.09253223985433578, -0.0034107151441276073, -0.19499024748802185, -1.2767906188964844, -0.03104015439748764, -2.163200855255127, -1.6788464784622192, -0.0385720357298851, -0.00902419164776802, -0.008213315159082413, -2.466745376586914, -0.011070732958614826, -1.379095196723938, -0.2482350468635559, -0.14166124165058136, -0.022670501843094826, -0.01656235195696354, -0.00025555206229910254, -0.0627470389008522, -1.6817240715026855, -0.173623725771904, -0.02207237109541893, -0.09526576846837997, -0.015047609806060791, -0.003882490796968341, -0.23024821281433105, -1.0132738680113107e-05, -1.311301275563892e-06, -0.0005980133428238332, -2.1679887771606445], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008894821628928185, -0.001039441442117095, -0.009584364481270313, -0.051478926092386246], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([row[col] for col in cols])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "})", "')", "\n"], "logprobs": [-0.061452291905879974, -0.03670069947838783, -0.07469862699508667, -0.33540788292884827, -0.002372071845456958, -1.5497195136049413e-06, -0.005643032491207123, -0.0032652891241014004, -0.00022671037004329264, -1.2278481335670222e-05, -3.313963316031732e-05, -0.004280096851289272, -0.24942368268966675, -0.0895267054438591, -0.009373819455504417, -0.013096270151436329, -0.12425129860639572, -4.708655978902243e-05, -0.00022718709078617394, -0.07200261950492859, -2.052614212036133, -0.08839671313762665, -0.04842299968004227, -0.0027846628800034523, -0.04901420697569847, -0.0001110968878492713, -0.0005458295345306396, -0.07067915052175522, -3.8265450712060556e-05, -0.0034151107538491488, -0.0010629009921103716, -0.0057570599019527435, -0.034358203411102295], "finish_reason": "stop"}, {"text": "commit()  # Commit the changes to the database", "tokens": ["commit", "()", "  ", "#", " Commit", " the", " changes", " to", " the", " database", "\n"], "logprobs": [-0.01592922955751419, -0.0001677133986959234, -2.6144652366638184, -0.00019107422849629074, -0.4735490381717682, -1.5604418516159058, -0.19082863628864288, -1.1925312280654907, -0.05393148958683014, -0.06695132702589035, -0.02832518145442009], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)  # Read table as a DataFrame", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "  ", "#", " Read", " table", " as", " a", " Data", "Frame", "\n"], "logprobs": [-0.02522173896431923, -3.135155202471651e-05, -0.027630819007754326, -0.00023040501400828362, -0.0009417866240255535, -1.0133028030395508, -0.07819689065217972, -0.012082365341484547, -0.029609812423586845, -0.40191856026649475, -0.01392306573688984, -0.0822717472910881, -0.05430009216070175, -0.005462007597088814, -0.0004469349514693022, -5.960446742392378e-06, -5.245195097813848e-06, -0.02662029303610325, -0.00020787939138244838, -0.031862761825323105, -0.10826064646244049, -2.3888864517211914, -0.00045622908510267735, -1.1580653190612793, -2.298677921295166, -1.0275834798812866, -0.9962693452835083, -0.8728630542755127, -0.03627140447497368, -0.030520781874656677], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.01412466261535883, -0.0013456823071464896, -0.01894954778254032], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.008635676465928555, -0.00011789103882620111, -0.5680821537971497], "finish_reason": "stop"}], "metrics": {"energy": 309.560719198227, "energy_per_token": 1.4135192657453288, "time": 12.404995, "time_per_token": 0.056643812785388124}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.reader(csv_input)", "tokens": [" c", "sv", ".", "reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -1.0899262428283691, -0.0028656155336648226, -0.014273570850491524, -3.58813522325363e-05, -0.00010227633902104571, -0.24754779040813446, -0.06354968994855881], "finish_reason": "stop"}, {"text": " open(csv_input, 'r', encoding='utf-8') as f:  # Read from file", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.011052104644477367, -0.001632430125027895, -0.003537589218467474, -1.3589766240329482e-05, -9.822363062994555e-05, -0.30144160985946655, -0.2954903841018677, -0.0503440797328949, -1.6838847398757935, -0.0043849037028849125, -0.32536423206329346, -0.08183708786964417, -0.16038018465042114, -0.15904560685157776, -0.0026580500416457653, -0.07622557878494263, -0.0006945105269551277, -0.7716472148895264, -0.0689171776175499, -1.6841734647750854, -0.00011288482346571982, -0.5131603479385376, -0.1426239311695099, -0.27634620666503906, -0.8179302215576172], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.0004418112221173942, -1.6689160474925302e-05, -3.075552376685664e-05, -0.011420117691159248, -5.006777428206988e-06, -8.225102646974847e-05, -0.04626696556806564, -0.00800993200391531, -0.8241971731185913, -0.0003133521240670234, -0.03946124389767647, -0.041599392890930176, -0.3252175748348236, -0.6170035004615784], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Connect to database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Connect", " to", " database", "\n"], "logprobs": [-0.007629895582795143, -0.0002517383254598826, -9.727005090098828e-05, -4.875540980719961e-05, -0.003969409968703985, -0.02364928461611271, -0.019178668037056923, -1.728519782773219e-05, -3.981510963058099e-05, -8.4638240878121e-06, -3.909988299710676e-05, -0.012054098770022392, -0.5434904098510742, -0.0002864189154934138, -1.0192400217056274, -0.011735332198441029, -2.7643792629241943, -0.045381058007478714], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006485265912488103, -5.483612312673358e-06, -0.0023135582450777292, -0.00024005869636312127, -0.050777461379766464], "finish_reason": "stop"}, {"text": " [c[0] for c in dr.fieldnames]  # Get column names", "tokens": [" [", "c", "[", "0", "]", " for", " c", " in", " dr", ".", "field", "names", "]", "  ", "#", " Get", " column", " names", "\n"], "logprobs": [-1.2108254432678223, -2.8021295070648193, -0.5589684844017029, -0.04429640620946884, -0.004697952885180712, -0.05856863036751747, -0.000270091783022508, -0.00011205045302631333, -0.17728085815906525, -0.0027870405465364456, -0.003846509847790003, -0.002566141774877906, -0.012625879608094692, -1.6836000680923462, -0.0005199749139137566, -1.0718687772750854, -0.7061783671379089, -0.0668882206082344, -0.7835478186607361], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.055790167301893234, -0.3414141535758972, -0.3783447742462158, -1.0651676654815674, -0.18575172126293182, -0.011201118119060993, -0.16965922713279724, -0.0004337085410952568, -0.0006345880683511496, -0.00024780540843494236, -0.05785389617085457, -0.0017063356935977936, -1.1324817933200393e-05, -1.2516897186287679e-05, -0.10233969986438751, -0.27513056993484497, -0.03565915301442146, -0.008758344687521458, -0.6444959044456482, -0.00015698630886618048, -0.00018439977429807186, -0.047099437564611435, -0.03623863682150841, -0.01242127176374197, -0.04879011958837509, -0.055844057351350784], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.017090193927288055, -0.1561465710401535, -0.1422595977783203, -0.16775311529636383, -0.002765404526144266, -0.0030891813803464174, -0.07342270016670227, -0.00042060110718011856, -1.4305104514278355e-06, -5.006777428206988e-06, -0.08378784358501434, -0.2431805282831192, -0.022711986675858498, -0.006877086125314236, -0.6852757334709167, -0.00012206286191940308, -0.00015877417172305286, -0.048892177641391754, -0.03367551043629646, -0.030849453061819077, -0.008650803938508034, -0.0355713777244091], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008642058819532394, -0.0010318199638277292, -0.011347634717822075, -0.06316836923360825], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES(\"+\",\".join([f\"'{row[col]}'\" for col in cols])+\")\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", "(", "\"", "+", "\"", ",", "\"", ".", "join", "([", "f", "\"", "'{", "row", "[", "col", "]", "}'", "\"", " for", " col", " in", " col", "s", "]", ")+", "\"", ")\"", ")", "\n"], "logprobs": [-0.045457154512405396, -0.04348556697368622, -0.06765870004892349, -1.351968765258789, -0.017046364024281502, -2.50339189733495e-06, -0.008455193601548672, -0.008217217400670052, -0.00034028460504487157, -1.4305012882687151e-05, -3.7788631743751466e-05, -0.007682184688746929, -0.10126805305480957, -3.0100629329681396, -0.9709065556526184, -3.5232396125793457, -0.2927894592285156, -0.020334117114543915, -1.2637776136398315, -0.00037102968781255186, -7.712543447269127e-05, -0.12469379603862762, -0.6203749775886536, -0.11583808809518814, -0.19781987369060516, -0.8830652832984924, -0.0529530867934227, -0.1002277210354805, -0.000581572181545198, -0.00901450403034687, -0.001845919992774725, -0.0846632793545723, -0.0004945961991325021, -0.014066127128899097, -0.09157686680555344, -0.0013603252591565251, -0.03852776065468788, -0.002144895726814866, -0.031193498522043228, -0.01596606895327568, -0.005405808798968792, -0.03627956658601761], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013522337190806866, -0.00020037073409184813, -0.07611433416604996], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02308517135679722, -3.313963316031732e-05, -0.02987341396510601, -0.0002766464895103127, -0.0009413101943209767, -0.5020766854286194, -0.02256619557738304, -0.21241101622581482, -0.010188121348619461, -0.12849372625350952, -0.06191248819231987, -0.010202163830399513, -0.00043072958942502737, -5.483612312673358e-06, -5.245195097813848e-06, -0.015868335962295532, -0.0001726001501083374, -0.026998866349458694, -0.1730053424835205, -0.11212778836488724], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014465815387666225, -0.001279607880860567, -0.01637074537575245], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.009528987109661102, -0.00011431517486926168, -0.5214095115661621], "finish_reason": "stop"}], "metrics": {"energy": 277.8854787073133, "energy_per_token": 1.240560172800506, "time": 12.617455, "time_per_token": 0.05632792410714286}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-1.9736523628234863, -0.0007890925044193864, -0.007402491290122271, -0.00018690270371735096, -0.0072005996480584145, -0.0015403084689751267, -0.2352832704782486, -0.0025466412771493196, -0.0007848043460398912, -0.36321061849594116, -0.06382428854703903], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as file:  # Read from file path", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " file", ":", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.011309091933071613, -0.001526977401226759, -0.003962998278439045, -1.4662635294371285e-05, -0.00013374387344811112, -0.2779226303100586, -0.3081861436367035, -0.04805336147546768, -0.17912307381629944, -0.000710592488758266, -1.5260484218597412, -0.019507581368088722, -1.4276983737945557, -0.00019298121333122253, -0.4540107250213623, -0.10834334045648575, -0.3123661279678345, -0.9174389839172363, -0.05846361815929413], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from a file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " a", " file", " path", "\n"], "logprobs": [-0.00039104922325350344, -1.3708974620385561e-05, -3.659658250398934e-05, -0.009955042973160744, -5.006777428206988e-06, -7.295342220459133e-05, -0.03776457533240318, -0.010476120747625828, -0.7526279091835022, -0.0002798642381094396, -0.04184247553348541, -0.037952128797769547, -1.9805867671966553, -0.1098921149969101, -1.0710572004318237, -0.04816129058599472], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007748073898255825, -0.0002598424907773733, -9.42901024245657e-05, -5.495397272170521e-05, -0.0037520977202802896, -0.022793207317590714, -0.02375708520412445, -1.9311717551317997e-05, -5.328513361746445e-05, -6.6756979322235566e-06, -6.985420623095706e-05, -0.012462008744478226, -0.7834159731864929], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006886732880957425, -5.483612312673358e-06, -0.0018567480146884918, -0.0002449450839776546, -0.04490305110812187], "finish_reason": "stop"}, {"text": " ','.join(dr.fieldnames)", "tokens": [" '", ",", "'", ".", "join", "(", "dr", ".", "field", "names", ")", "\n"], "logprobs": [-1.8721981048583984, -0.04526679217815399, -0.736332893371582, -0.00015817821258679032, -0.00018737945356406271, -0.30488264560699463, -0.29724010825157166, -0.00029845553217455745, -0.0013398488517850637, -0.0013341344892978668, -0.005157262086868286, -0.3199790418148041], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({cols[0]} INT PRIMARY KEY, {cols[1]} TEXT)\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", " INT", " PR", "IM", "ARY", " KEY", ",", " {", "cols", "[", "1", "]}", " TEXT", ")\"", ")", "\n"], "logprobs": [-0.049662236124277115, -0.2895207703113556, -0.37941357493400574, -0.4746693968772888, -0.2698523700237274, -0.009521312080323696, -0.1297188103199005, -0.00035565727739594877, -0.000523430178873241, -0.00021979777375236154, -0.040832486003637314, -0.0020172500517219305, -8.4638240878121e-06, -1.2993727978027891e-05, -0.11020916700363159, -0.7750085592269897, -0.5012210011482239, -0.6169275045394897, -0.009363663382828236, -0.06224343553185463, -0.651094377040863, -3.0406911373138428, -0.00271904026158154, -0.0004377598816063255, -0.0008600826840847731, -0.18454396724700928, -0.5716267824172974, -0.005692224483937025, -0.0002029928145930171, -0.0008226824575103819, -0.031880542635917664, -0.37992367148399353, -0.12997488677501678, -0.005784320179373026, -0.060880061239004135], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.01895913854241371, -0.15601134300231934, -0.1264919936656952, -0.16387635469436646, -0.002907218411564827, -0.0032530506141483784, -0.0648084357380867, -0.0004144048143643886, -1.6689286894688848e-06, -5.960446742392378e-06, -0.09274075925350189, -0.2826538383960724, -0.021252987906336784, -0.005138642620295286, -0.741749107837677, -5.6980417866725475e-05, -8.725739462533966e-05, -0.06369902193546295, -0.04216253384947777, -0.013951514847576618, -0.006573481950908899, -0.03446025028824806], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.00760091096162796, -0.001100530382245779, -0.008449992164969444, -0.0783022791147232], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.055613938719034195, -0.033980101346969604, -2.860595464706421], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012422095984220505, -0.00016735584358684719, -0.0743621438741684], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.026286281645298004, -2.5748875486897305e-05, -0.035237353295087814, -0.00018976318824570626, -0.0010372978867962956, -0.5390018820762634, -0.026505600661039352, -0.23246118426322937, -0.010586059652268887, -0.13408693671226501, -0.06890226900577545, -0.01121986098587513, -0.00037305548903532326, -4.887569048150908e-06, -5.364403477869928e-06, -0.015913741663098335, -0.00018463814922142774, -0.029540488496422768, -0.18427303433418274, -0.11832807213068008], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014713703654706478, -0.0011406589765101671, -0.015805795788764954], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.010150006972253323, -0.00012599628826137632, -0.623546838760376], "finish_reason": "stop"}], "metrics": {"energy": 236.69334827995303, "energy_per_token": 1.322309208267894, "time": 10.737136, "time_per_token": 0.059983999999999996}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-1.8108196258544922, -0.000730128725990653, -0.0063290162943303585, -0.00016151554882526398, -0.005784083157777786, -0.0014335366431623697, -0.2970103621482849, -0.0027000184636563063, -0.0008192281820811331, -0.44922012090682983, -0.05921128764748573], "finish_reason": "stop"}, {"text": " open(csv_input, 'r', encoding='utf-8') as f:  # Read from file", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.011291176080703735, -0.0016545667313039303, -0.004415524657815695, -1.2397689715726301e-05, -9.190614218823612e-05, -0.2993430495262146, -0.30394670367240906, -0.048005640506744385, -1.8844780921936035, -0.004637083038687706, -0.3315276503562927, -0.09510178118944168, -0.1394498497247696, -0.15636314451694489, -0.002818067092448473, -0.08151266723871231, -0.0007286992622539401, -0.7784072160720825, -0.07656650990247726, -1.7682164907455444, -0.00012051333033014089, -0.4466710090637207, -0.1444776952266693, -0.3246050477027893, -0.7936241030693054], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from CSV file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " CS", "V", " file", "\n"], "logprobs": [-0.00047398300375789404, -1.3351351299206726e-05, -3.576214658096433e-05, -0.012629645876586437, -4.887569048150908e-06, -8.451581379631534e-05, -0.043095484375953674, -0.0084481006488204, -0.707897961139679, -0.0003271759778726846, -0.037346187978982925, -0.04611193388700485, -2.8937084674835205, -0.00036149643710814416, -0.06779683381319046, -0.10105752944946289], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create or connect to an SQLite database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " or", " connect", " to", " an", " SQL", "ite", " database", "\n"], "logprobs": [-0.00672647962346673, -0.0002493547508493066, -8.594620157964528e-05, -4.756337511935271e-05, -0.004177178256213665, -0.02185359224677086, -0.024869700893759727, -2.169585604860913e-05, -4.2437604861333966e-05, -8.940656698541716e-06, -5.411955135059543e-05, -0.010658008977770805, -0.6025086045265198, -0.00033122775494121015, -1.0073474645614624, -3.2777481079101562, -2.197521924972534, -0.017403744161128998, -2.451674461364746, -0.2829492390155792, -0.009827681817114353, -0.07336653769016266, -0.09933515638113022], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006947487709112465, -6.318072337307967e-06, -0.0024705384857952595, -0.0002008474839385599, -0.0514843612909317], "finish_reason": "stop"}, {"text": " [x['name'] for x in dr.fieldnames]", "tokens": [" [", "x", "['", "name", "']", " for", " x", " in", " dr", ".", "field", "names", "]", "\n"], "logprobs": [-1.200486183166504, -3.6091785430908203, -2.6911280155181885, -0.7446396946907043, -0.0005467826849780977, -0.08341152966022491, -0.001379491644911468, -0.000388665939681232, -0.020969361066818237, -0.09862586855888367, -0.003320063930004835, -0.004836052190512419, -0.014267107471823692, -0.22982096672058105], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE IF NOT EXISTS ' + TABLE_NAME + '(' + ','.join(cols) + ')')", "tokens": ["execute", "('", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " '", " +", " TABLE", "_", "NAME", " +", " '", "('", " +", " '", ",", "'", ".", "join", "(", "cols", ")", " +", " '", ")", "')", "\n"], "logprobs": [-0.06052711606025696, -1.4862465858459473, -0.8876295685768127, -0.01047269906848669, -0.0810120478272438, -0.0003408804477658123, -0.0006032554083503783, -0.0002335037279408425, -0.5134257674217224, -0.050474658608436584, -0.021294299513101578, -5.006777428206988e-06, -5.602820692729438e-06, -0.006871166173368692, -0.11507783085107803, -0.7531035542488098, -0.025801608338952065, -0.09949219226837158, -0.00689733074977994, -0.38677871227264404, -0.0008484101272188127, -0.00045265440712682903, -0.04408426210284233, -0.032887037843465805, -0.008275149390101433, -0.0011556621175259352, -0.008344546891748905, -0.27430546283721924, -0.0019132657907903194, -0.040455564856529236], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.01561451330780983, -0.1432190239429474, -0.12494569271802902, -0.14491122961044312, -0.00269906735047698, -0.0030028987675905228, -0.06943211704492569, -0.0003796095261350274, -1.4305104514278355e-06, -8.106198947643861e-06, -0.0869160071015358, -0.2892979085445404, -0.019816866144537926, -0.005213356576859951, -0.6699234247207642, -0.00013028726971242577, -0.000169382052263245, -0.048462070524692535, -0.03126166760921478, -0.024977371096611023, -0.006813388783484697, -0.036857541650533676], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008582137525081635, -0.0011188682401552796, -0.00930732861161232, -0.057625479996204376], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join(row.values())})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "(", "row", ".", "values", "())", "})", "')", "\n"], "logprobs": [-0.04719075560569763, -0.04169052839279175, -0.08638856559991837, -0.31486573815345764, -0.002441998338326812, -2.0265558760002023e-06, -0.005400591529905796, -0.002964152256026864, -0.000205018965061754, -1.0609570381348021e-05, -4.815939246327616e-05, -0.0036582706961780787, -0.19760465621948242, -0.08940799534320831, -0.010572966188192368, -0.012415973469614983, -0.14052385091781616, -5.495397272170521e-05, -0.00017855956684798002, -2.8683414459228516, -0.1820230334997177, -0.2050585001707077, -0.007406751159578562, -0.05418841913342476, -0.002594678197056055, -0.0038381970953196287, -0.04648832231760025], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.01226525753736496, -0.0001720042055239901, -0.06866467744112015], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.022344376891851425, -3.111314072157256e-05, -0.018383946269750595, -0.0002470903273206204, -0.000940476544201374, -0.9339987635612488, -0.08612490445375443, -0.007931877858936787, -0.024128250777721405, -0.3607015609741211, -0.01361841894686222, -0.08569957315921783, -0.05536414310336113, -0.006480866577476263, -0.0004189328756183386, -5.722029527532868e-06, -4.172316494077677e-06, -0.03044516034424305, -0.00018380382971372455, -0.026029514148831367, -0.10589653998613358, -0.11946718394756317], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.015217280015349388, -0.001479841535910964, -0.01895422674715519], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.009215911850333214, -0.00011765264935093, -0.6500499248504639], "finish_reason": "stop"}], "metrics": {"energy": 301.0340565099715, "energy_per_token": 1.3808901674769334, "time": 12.201525, "time_per_token": 0.055970298165137614}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.1799968034029007, -8.260862523457035e-05, -0.0007197650265879929, -2.145764938177308e-06, -2.5152843591058627e-05, -0.00010966652916977182, -0.11747272312641144, -2.7179348762729205e-05, -0.01834029145538807, -0.007821409963071346], "finish_reason": "stop"}, {"text": " StringIO(csv_input.read())", "tokens": [" String", "IO", "(", "csv", "_", "input", ".", "read", "())", "\n"], "logprobs": [-2.2828550338745117, -0.001953242812305689, -0.16482587158679962, -0.011769498698413372, -0.0003830652858596295, -0.0002397011558059603, -0.03486545383930206, -0.8562395572662354, -0.3234713077545166, -0.10047680139541626], "finish_reason": "stop"}, {"text": " open(csv_input) as f:", "tokens": [" open", "(", "csv", "_", "input", ")", " as", " f", ":", "\n"], "logprobs": [-0.01323427353054285, -0.0016884845681488514, -0.0037563731893897057, -1.4066597032069694e-05, -0.00010561384988250211, -1.394576907157898, -0.00016175392374861985, -0.8025709390640259, -0.07247161865234375, -0.16769586503505707], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0005086558521725237, -1.8715683836489916e-05, -4.184158387943171e-05, -0.008702448569238186, -4.0531076592742465e-06, -8.95221673999913e-05, -0.03782748058438301, -0.009946308098733425, -0.6965879797935486], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007634628098458052, -0.0001911934232339263, -9.226373367710039e-05, -4.660974445869215e-05, -0.004060833714902401, -0.025013530626893044, -0.02962207980453968, -1.8000440832111053e-05, -4.255681051290594e-05, -6.9141146923357155e-06, -5.9126061387360096e-05, -0.010570843704044819, -0.7891305685043335], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006606780225411057, -6.318072337307967e-06, -0.0019396792631596327, -0.0002321927313460037, -0.04659232497215271], "finish_reason": "stop"}, {"text": " [\"id\", \"name\"]", "tokens": [" [", "\"", "id", "\"", ",", " \"", "name", "\"", "]", "\n"], "logprobs": [-1.1517407894134521, -1.4288839101791382, -0.5554607510566711, -0.03740865737199783, -0.0049408008344471455, -0.040481436997652054, -0.010599859990179539, -0.0007693191873840988, -0.040694575756788254, -0.07574749737977982], "finish_reason": "stop"}, {"text": "execute('DROP TABLE IF EXISTS ' + TABLE_NAME)", "tokens": ["execute", "('", "DR", "OP", " TABLE", " IF", " EX", "ISTS", " '", " +", " TABLE", "_", "NAME", ")", "\n"], "logprobs": [-0.04821695387363434, -1.3666106462478638, -1.2029776573181152, -1.0490362910786644e-05, -0.012460360303521156, -0.007769720628857613, -0.0007873057620599866, -0.0003326578007545322, -0.7331849336624146, -0.05165441706776619, -0.009982660412788391, -2.622600959512056e-06, -4.410734163684538e-06, -0.12640343606472015, -0.1734849214553833], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.019324956461787224, -0.15390630066394806, -0.1325671672821045, -0.15382270514965057, -0.002661735750734806, -0.0030574502889066935, -0.08114252984523773, -0.00047886825632303953, -9.536738616588991e-07, -6.198863957251888e-06, -0.08798643201589584, -0.24931155145168304, -0.020445313304662704, -0.006187686696648598, -0.6594061851501465, -5.602679812000133e-05, -8.725739462533966e-05, -0.0640716478228569, -0.0402924120426178, -0.013891559094190598, -0.005474100820720196, -0.03234415873885155], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.008638868108391762, -0.000969535845797509, -0.011581331491470337, -0.0602712519466877], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES({', '.join([str(col) for col in row.values()])})\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", "({", "'", ",", " '", ".", "join", "([", "str", "(", "col", ")", " for", " col", " in", " row", ".", "values", "()", "])", "})", "\"", ")", "\n"], "logprobs": [-0.05014829710125923, -0.03779212385416031, -0.08241106569766998, -1.2421549558639526, -0.013334734365344048, -3.933898824470816e-06, -0.007065548561513424, -0.006112690083682537, -0.00032014489988796413, -9.536697689327411e-06, -3.981510963058099e-05, -0.007731631398200989, -0.12255778908729553, -2.602853536605835, -0.030752699822187424, -0.0024272524751722813, -0.2720775604248047, -2.5152843591058627e-05, -9.881961887003854e-05, -0.48585188388824463, -2.6585845947265625, -0.004351789131760597, -2.7891488075256348, -0.12641341984272003, -0.0878913402557373, -0.006235430482774973, -0.00042250767000950873, -0.05521378293633461, -0.012180233374238014, -0.004337545949965715, -0.012200725264847279, -0.0017746428493410349, -0.0015117417788133025, -0.0014572249492630363, -0.0016288596671074629, -0.04645441100001335], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013642290607094765, -0.0001892864383989945, -0.0813271775841713], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.024728061631321907, -2.2649508537142538e-05, -0.03188227489590645, -0.00020847532141488045, -0.0009683449170552194, -0.5302408933639526, -0.02707068808376789, -0.2706148624420166, -0.008902146480977535, -0.11985079199075699, -0.07396598905324936, -0.010963205248117447, -0.00045122456504032016, -4.887569048150908e-06, -4.529942543740617e-06, -0.016813119873404503, -0.00019941726350225508, -0.033056363463401794, -0.16694186627864838, -0.1215621829032898], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.014203292317688465, -0.0012613920262083411, -0.016775960102677345], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.008650213479995728, -0.00011169286881340668, -0.6370612978935242], "finish_reason": "stop"}], "metrics": {"energy": 230.1939157876969, "energy_per_token": 1.3306006692930457, "time": 10.52331, "time_per_token": 0.060828381502890175}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv_input", "tokens": [" c", "sv", "_", "input", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -1.206289529800415, -0.008606603369116783, -0.11619783192873001], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.011090303771197796, -0.0013940150383859873, -0.003739152569323778, -1.5139465176616795e-05, -0.00012694983161054552, -0.26935747265815735, -0.29839828610420227, -0.05059003457427025, -0.1828567087650299, -0.0006200536736287177, -0.8149670362472534, -0.07606528699398041, -0.20627433061599731], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.00043275527423247695, -1.3232143828645349e-05, -3.266281055402942e-05, -0.012795372866094112, -4.887569048150908e-06, -7.343022298300639e-05, -0.04331822693347931, -0.008400699123740196, -0.6045019030570984, -0.0002644904307089746, -0.04074275866150856, -0.03899426758289337, -0.3274317681789398, -0.8566110134124756, -0.0428503081202507], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-0.007239655591547489, -0.0002661589242052287, -8.868777513271198e-05, -4.8636207793606445e-05, -0.003311984706670046, -0.029395919293165207, -0.02226976677775383, -1.9073304429184645e-05, -4.851700214203447e-05, -7.390948667307384e-06, -4.625213477993384e-05, -0.011056231334805489, -0.9437741637229919], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.000707971747033298, -5.364403477869928e-06, -0.002133119385689497, -0.00027533553657121956, -0.04039076343178749], "finish_reason": "stop"}, {"text": " ', '.join(dr.fieldnames)", "tokens": [" '", ",", " '", ".", "join", "(", "dr", ".", "field", "names", ")", "\n"], "logprobs": [-1.7493793964385986, -0.04999658465385437, -0.6355829834938049, -8.201262971851975e-05, -0.0005003153928555548, -0.3662208616733551, -0.25184136629104614, -0.0003887851198669523, -0.0014253228437155485, -0.0017084777355194092, -0.005190112628042698, -0.26993125677108765], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE IF NOT EXISTS ' + TABLE_NAME + ' (' + ', '.join(cols) + ')')", "tokens": ["execute", "('", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " '", " +", " TABLE", "_", "NAME", " +", " '", " ('", " +", " '", ",", " '", ".", "join", "(", "cols", ")", " +", " '", ")", "')", "\n"], "logprobs": [-0.05811150744557381, -1.2948181629180908, -0.7671535611152649, -0.009457665495574474, -0.0822034552693367, -0.0003587556129787117, -0.0005771639989688993, -0.00023338454775512218, -0.4875003397464752, -0.0557989627122879, -0.02182256616652012, -4.172316494077677e-06, -5.245195097813848e-06, -0.007513478863984346, -0.1159122958779335, -0.718599259853363, -0.01281020138412714, -0.08513207733631134, -0.007017015945166349, -0.9774532914161682, -0.0005414212355390191, -0.0004558716027531773, -0.08221475780010223, -0.0560840405523777, -0.006629023235291243, -0.0012401993153616786, -0.005056687630712986, -0.30547162890434265, -0.0029294455889612436, -0.03649670630693436], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME}({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}(", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.013025907799601555, -0.1635243445634842, -0.1582247018814087, -0.18049095571041107, -0.0028471907135099173, -0.0029729476664215326, -0.07027597725391388, -0.0004632591735571623, -1.6689286894688848e-06, -5.602820692729438e-06, -2.438481330871582, -0.21039748191833496, -0.009299061261117458, -1.1640632152557373, -0.0001954841281985864, -0.00010334911348763853, -0.06329146027565002, -0.02898872271180153, -0.017933836206793785, -0.005956754554063082, -0.03379376232624054], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.006977951154112816, -0.0009445258183404803, -0.010558339767158031, -0.07003604620695114], "finish_reason": "stop"}, {"text": "execute(", "tokens": ["execute", "(", "\n"], "logprobs": [-0.04740678891539574, -0.04045648127794266, -2.9047510623931885], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.013087798841297626, -0.00016723664884921163, -0.07346922159194946], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.025023413822054863, -2.932505594799295e-05, -0.0254884734749794, -0.00022742546570952982, -0.0009159421897493303, -0.5456136465072632, -0.025265444070100784, -0.242824986577034, -0.009737138636410236, -0.13696041703224182, -0.06015844643115997, -0.01020605769008398, -0.0004012971476186067, -4.6491513785440475e-06, -5.245195097813848e-06, -0.014722866006195545, -0.00020013237372040749, -0.03255430608987808, -0.17083323001861572, -0.12441583722829819], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.01860067807137966, -0.0013055619783699512, -0.02054551988840103], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>from sqlite3 import Connection, Cursor", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "from", " sql", "ite", "3", " import", " Connection", ",", " C", "ursor", "\n"], "logprobs": [-0.00990960095077753, -0.0001234931987710297, -1.231667160987854, -2.3841855067985307e-07, -1.4305104514278355e-06, -4.9232225137529895e-05, -0.00029940891545265913, -0.08640124648809433, -1.3568919897079468, -3.397808074951172, -1.2620338201522827, -0.01975761167705059, -0.020283887162804604, -2.7193546295166016, -0.9092727899551392, -0.43711206316947937, -0.0003890234511345625, -0.3273690342903137], "finish_reason": "stop"}], "metrics": {"energy": 271.90967008590707, "energy_per_token": 1.5537695433480403, "time": 10.735323, "time_per_token": 0.06134470285714285}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " csv_input", "tokens": [" c", "sv", "_", "input", "\n"], "logprobs": [-0.5740599036216736, -0.0009708458674140275, -1.0715489387512207, -0.007311017718166113, -0.11141674965620041], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as file:  # Read from file", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " file", ":", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.011644843965768814, -0.0014842457603663206, -0.0030651751440018415, -1.156323378381785e-05, -0.0001137191939051263, -0.31020626425743103, -0.2979736030101776, -0.05565983057022095, -0.18475724756717682, -0.0007284610182978213, -1.516144037246704, -0.02198047935962677, -1.6728650331497192, -0.00020108585886191577, -0.4583141803741455, -0.12631960213184357, -0.3519670367240906, -0.5413340330123901], "finish_reason": "stop"}, {"text": " csv.DictReader(f)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "\n"], "logprobs": [-0.0004769618099089712, -1.4662635294371285e-05, -3.683499380713329e-05, -0.011673004366457462, -5.245195097813848e-06, -9.417090768693015e-05, -0.038355231285095215, -0.009540440514683723, -0.6770394444465637], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Create a new SQLite connection", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Create", " a", " new", " SQL", "ite", " connection", "\n"], "logprobs": [-0.007874398492276669, -0.0002610342635307461, -0.00010430268594063818, -5.23315102327615e-05, -0.004542983137071133, -0.028480447828769684, -0.026294292882084846, -2.3007127310847864e-05, -4.589452510117553e-05, -7.033323527139146e-06, -4.31528314948082e-05, -0.01161173265427351, -0.65445876121521, -0.0002890407631639391, -1.0994378328323364, -0.3946591019630432, -1.1004351377487183, -2.5659711360931396, -0.0348951555788517, -1.420278787612915, -0.17519967257976532], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0006084974738769233, -5.960446742392378e-06, -0.0019453902496024966, -0.0002131234941771254, -0.05245289206504822], "finish_reason": "stop"}, {"text": " [field['name'] for field in dr.field_names]", "tokens": [" [", "field", "['", "name", "']", " for", " field", " in", " dr", ".", "field", "_", "names", "]", "\n"], "logprobs": [-1.1908189058303833, -2.6637258529663086, -2.1775660514831543, -0.024516260251402855, -0.00018666432879399508, -0.08583710342645645, -0.0016191004542633891, -0.0009545299108140171, -0.3809155523777008, -0.007613806519657373, -0.0034184374380856752, -2.7340025901794434, -0.0001227780303452164, -0.01907891035079956, -0.2650803327560425], "finish_reason": "stop"}, {"text": "execute('CREATE TABLE IF NOT EXISTS {}({})'.format(TABLE_NAME, ','.join('%s %s' % (c, dtypes[c]) for c in cols)))", "tokens": ["execute", "('", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "}(", "{", "})", "'", ".", "format", "(", "TABLE", "_", "NAME", ",", " '", ",", "'", ".", "join", "('", "%", "s", " %", "s", "'", " %", " (", "c", ",", " d", "types", "[", "c", "])", " for", " c", " in", " col", "s", ")))", "\n"], "logprobs": [-0.06793428957462311, -1.2842884063720703, -0.8265278935432434, -0.009211777709424496, -0.07745358347892761, -0.00034433635300956666, -0.0005744237569160759, -0.0002636561985127628, -1.6680952310562134, -0.5587345361709595, -0.1116279810667038, -0.17315323650836945, -0.026522085070610046, -0.03036409616470337, -0.007181781344115734, -0.0017539369873702526, -0.10297387838363647, -2.9802276912960224e-06, -4.529942543740617e-06, -0.0003455280384514481, -0.0969209372997284, -0.005772705189883709, -0.4330005347728729, -0.00015352977789007127, -0.0004477690381463617, -2.6266307830810547, -3.142096519470215, -0.002931704046204686, -2.3148741722106934, -0.00034850722295232117, -0.0243446696549654, -0.009191815741360188, -1.1220993995666504, -1.1067453622817993, -0.025631168857216835, -2.6490817070007324, -0.7854353189468384, -0.1353842169046402, -0.10785073786973953, -0.030441228300333023, -0.04622621834278107, -0.005545707419514656, -0.1997561752796173, -0.060165632516145706, -1.6331539882230572e-05, -0.01646924950182438, -0.04910863935947418], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\",\".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", "\"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015990588814020157, -0.1605776697397232, -0.15302205085754395, -0.1489187777042389, -0.002500266768038273, -0.0032504366245120764, -0.08653594553470612, -0.00040236959466710687, -1.0728830375228426e-06, -5.483612312673358e-06, -0.0927610769867897, -0.25457563996315, -0.022212054580450058, -0.005188096780329943, -0.7673041820526123, -0.0001510267611593008, -0.0001525762490928173, -0.04659733176231384, -0.034862346947193146, -0.024727363139390945, -0.007956241257488728, -0.030268916860222816], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.00972438883036375, -0.0012567488010972738, -0.013444360345602036, -0.060225456953048706], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join([f'?' for _ in range(len(cols))])})\", [row[col] for col in cols])", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{'", ",", " '", ".", "join", "([", "f", "'", "?", "'", " for", " _", " in", " range", "(", "len", "(", "cols", "))", "])", "})", "\"", ",", " [", "row", "[", "col", "]", " for", " col", " in", " col", "s", "])", "\n"], "logprobs": [-0.052542928606271744, -0.031311120837926865, -0.07683910429477692, -1.292449951171875, -0.016500558704137802, -2.7418097943154862e-06, -0.008647376671433449, -0.0065789297223091125, -0.0002766464895103127, -1.1205610462639015e-05, -5.1020273531321436e-05, -0.007633917964994907, -0.12349720299243927, -0.5777992606163025, -0.03746366128325462, -0.010359090752899647, -0.27556705474853516, -4.7801782784517854e-05, -0.0002012050390476361, -0.10039173066616058, -0.6185722947120667, -1.1238298416137695, -0.7263731360435486, -0.002162381773814559, -0.0171442162245512, -0.25664299726486206, -0.0013255628291517496, -0.7361664175987244, -0.0008685392094776034, -0.013507518917322159, -0.0001323135511483997, -0.3310759961605072, -0.0007811117684468627, -0.0004914983292110264, -0.0004487222759053111, -0.0018365198047831655, -0.0008821171941235662, -1.5298312902450562, -0.2455822080373764, -0.06289302557706833, -0.09752287715673447, -0.002569589763879776, -0.02458605170249939, -0.0008010039455257356, -0.0004077318590134382, -0.030454063788056374, -8.40390202938579e-05, -0.0011071987682953477, -0.020273374393582344], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.012852334417402744, -0.00018904806347563863, -0.06841243803501129], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.023998841643333435, -2.3245540432981215e-05, -0.028670791536569595, -0.0002810560108628124, -0.0009435730753466487, -0.4924631416797638, -0.024992486461997032, -0.2411680370569229, -0.008883124217391014, -0.11063230782747269, -0.0684664323925972, -0.011501789093017578, -0.0003999863693024963, -5.364403477869928e-06, -4.172316494077677e-06, -0.016559185460209846, -0.0001839230244513601, -0.03645245358347893, -0.15337060391902924, -0.10777559876441956], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.012633060105144978, -0.0012747265864163637, -0.01799413561820984], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.010149062611162663, -0.00010394509445177391], "finish_reason": "stop"}], "metrics": {"energy": 293.89122213172925, "energy_per_token": 1.261335717303559, "time": 13.028221, "time_per_token": 0.05591511158798283}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " pd.read_csv(csv_input, index_col='id', engine='python')", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "input", ",", " index", "_", "col", "='", "id", "'", ",", " engine", "='", "python", "')", "\n"], "logprobs": [-1.8108196258544922, -0.000730128725990653, -0.0063290162943303585, -0.00016151554882526398, -0.005784083157777786, -0.0014335366431623697, -0.2970103621482849, -0.0027000184636563063, -0.0008192281820811331, -1.0272212028503418, -1.480120301246643, -4.6491513785440475e-06, -0.0006007535266689956, -2.3007240295410156, -0.06434398144483566, -2.1287448406219482, -0.037316445261240005, -1.936853289604187, -0.049375321716070175, -0.08725789934396744, -0.14309793710708618, -0.051907628774642944], "finish_reason": "stop"}, {"text": " open(csv_input, 'r') as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " '", "r", "')", " as", " f", ":", "\n"], "logprobs": [-0.011291176080703735, -0.0016545667313039303, -0.004415524657815695, -1.2397689715726301e-05, -9.190614218823612e-05, -0.2993430495262146, -0.30394670367240906, -0.048005640506744385, -0.16869786381721497, -0.000691770575940609, -0.8497275710105896, -0.06752811372280121, -0.1870858520269394], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from a file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " a", " file", "\n"], "logprobs": [-0.00047803416964598, -1.3470558769768104e-05, -3.93382906622719e-05, -0.0110772168263793, -5.006777428206988e-06, -7.950943836476654e-05, -0.03732379525899887, -0.008231168612837791, -0.7513810396194458, -0.00034481301554478705, -0.04010426998138428, -0.04033924266695976, -2.0042009353637695, -0.10413962602615356, -0.5380793809890747], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Connect to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Connect", " to", " the", " database", "\n"], "logprobs": [-0.007581745274364948, -0.0002859421947505325, -8.689979586051777e-05, -4.8993817472364753e-05, -0.004677188582718372, -0.027464866638183594, -0.022989295423030853, -2.0146166207268834e-05, -3.886147169396281e-05, -7.629365427419543e-06, -4.684815212385729e-05, -0.012026065960526466, -0.5887026190757751, -0.0002609150833450258, -1.073939323425293, -0.012293282896280289, -0.23476985096931458, -0.209019735455513, -0.03940486162900925], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007439468172378838, -5.8412379075889476e-06, -0.0020189157221466303, -0.00022265815641731024, -0.048054952174425125], "finish_reason": "stop"}, {"text": " ', '.join([name for name in dr.fieldnames])", "tokens": [" '", ",", " '", ".", "join", "([", "name", " for", " name", " in", " dr", ".", "field", "names", "])", "\n"], "logprobs": [-1.884722352027893, -0.04703017696738243, -0.6038039326667786, -7.533743337262422e-05, -0.0004686211177613586, -2.5517213344573975, -3.65484881401062, -0.12353555113077164, -0.02812805026769638, -0.08067075908184052, -0.029780734330415726, -0.0008349508279934525, -0.0032909540459513664, -0.001358896610327065, -0.03267499804496765, -0.19160884618759155], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.049727119505405426, -0.32902899384498596, -0.3811112642288208, -1.0109416246414185, -0.183397576212883, -0.010259745642542839, -0.15814228355884552, -0.00035363141796551645, -0.0006366133457049727, -0.000169382052263245, -0.058523885905742645, -0.001660517300479114, -1.728519782773219e-05, -1.3232143828645349e-05, -0.11394646763801575, -0.2828595042228699, -0.039648592472076416, -0.009365906938910484, -0.7707468867301941, -7.30726242181845e-05, -0.00011681827891152352, -0.08865311741828918, -0.054714154452085495, -0.009375827386975288, -0.04696887359023094, -0.06462641060352325], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.018093183636665344, -0.1765771210193634, -0.14351245760917664, -0.1747925728559494, -0.0027212989516556263, -0.0033881422132253647, -0.08907425403594971, -0.0004196478403173387, -1.4305104514278355e-06, -6.794906312279636e-06, -0.09632372856140137, -0.277461975812912, -0.02030806802213192, -0.00631586741656065, -0.7028027772903442, -4.732496745418757e-05, -9.512448741588742e-05, -0.06384912133216858, -0.04200160503387451, -0.015254028141498566, -0.006406365893781185, -0.03394599258899689], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.011212670244276524, -0.0010720703285187483, -0.011875761672854424, -0.06341331452131271], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([f\"?\" for _ in cols])})',", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "f", "\"", "?", "\"", " for", " _", " in", " col", "s", "])", "})", "'", ",", "\n"], "logprobs": [-0.06115012615919113, -0.042092930525541306, -0.0802447572350502, -0.2868172526359558, -0.0024004948791116476, -2.145764938177308e-06, -0.004387039691209793, -0.0034519389737397432, -0.00023421882360707968, -1.0132738680113107e-05, -4.136476854910143e-05, -0.003859572345390916, -0.2032914161682129, -0.07702785730361938, -0.009783769026398659, -0.012710864655673504, -0.1338091641664505, -4.160317621426657e-05, -0.00017951308109331876, -0.07281006872653961, -0.4553225338459015, -0.046851374208927155, -0.6477872133255005, -0.0035741752944886684, -0.14319764077663422, -0.25285208225250244, -0.001423775334842503, -0.6983188986778259, -1.5616295058862306e-05, -0.004964050371199846, -0.0012242449447512627, -0.0032548329327255487, -0.0017579830018803477, -1.0796464681625366], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.01313603762537241, -0.00016973962192423642, -0.07960359007120132], "finish_reason": "stop"}, {"text": " pd.read_sql(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.02452603168785572, -2.7179348762729205e-05, -0.02994965761899948, -0.0002127659390680492, -0.0010458719916641712, -0.5583314299583435, -0.02569553814828396, -0.2408745437860489, -0.00904108490794897, -0.11592546105384827, -0.05888989940285683, -0.011455356143414974, -0.0004085659747943282, -4.291525328881107e-06, -5.602820692729438e-06, -0.013906607404351234, -0.0001932195882545784, -0.02522406354546547, -0.15218421816825867, -0.11106327921152115], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.012791253626346588, -0.0010353925172239542, -0.019240180030465126], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01177939586341381, -0.00011324241495458409, -0.7560659646987915], "finish_reason": "stop"}], "metrics": {"energy": 298.25068610763554, "energy_per_token": 1.3872124935238863, "time": 12.19233, "time_per_token": 0.05670851162790698}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.16414295136928558, -7.378782902378589e-05, -0.0008429311565123498, -2.3841830625315197e-06, -2.396077979938127e-05, -0.00012003655137959868, -0.12377815693616867, -3.397406908334233e-05, -0.019790686666965485, -0.007541282568126917], "finish_reason": "stop"}, {"text": " csv.DictReader(csv_input)", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "csv", "_", "input", ")", "\n"], "logprobs": [-0.5766438841819763, -0.001016814960166812, -0.3610689342021942, -0.42585235834121704, -0.0003313469351269305, -0.0025512785650789738, -0.04200800508260727, -0.0001793938863556832, -0.00016258825780823827, -0.2002900242805481, -0.07139721512794495], "finish_reason": "stop"}, {"text": " open(csv_input) as csv_file:", "tokens": [" open", "(", "csv", "_", "input", ")", " as", " c", "sv", "_", "file", ":", "\n"], "logprobs": [-0.011684904806315899, -0.0014072287594899535, -0.0032643387094140053, -1.5020257706055418e-05, -0.00010597144137136638, -1.4291393756866455, -0.00021479207498487085, -1.0183467864990234, -0.004019397310912609, -0.05664921924471855, -0.0569373220205307, -0.0014257990987971425, -0.17667382955551147], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", "\n"], "logprobs": [-0.0004589696181938052, -1.7762025890988298e-05, -3.349725011503324e-05, -0.010659660212695599, -5.245195097813848e-06, -0.00010942813969450071, -0.04023653268814087, -0.009106648154556751, -0.7375065088272095, -0.00030727434204891324, -0.04427359625697136, -0.04358702898025513, -0.3306660056114197, -0.6430369019508362], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Connect to the database", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Connect", " to", " the", " database", "\n"], "logprobs": [-0.007772441022098064, -0.00026246439665555954, -7.259582343976945e-05, -4.708655978902243e-05, -0.004120313562452793, -0.02613961510360241, -0.024789581075310707, -2.1815061700181104e-05, -3.504691630951129e-05, -6.079655122448457e-06, -4.303362584323622e-05, -0.010325111448764801, -0.6165196299552917, -0.0002971446083392948, -1.1216294765472412, -0.013854878023266792, -0.2355315089225769, -0.22563126683235168, -0.039145708084106445], "finish_reason": "stop"}, {"text": " conn.cursor()  # Get a DB cursor", "tokens": [" conn", ".", "cursor", "()", "  ", "#", " Get", " a", " DB", " cursor", "\n"], "logprobs": [-0.0007284610182978213, -5.006777428206988e-06, -0.00215798057615757, -0.00021801002731081098, -2.9704647064208984, -0.0002673506969586015, -2.4875032901763916, -0.3283287584781647, -2.8633594512939453, -0.11008252948522568, -0.23274874687194824], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.119675636291504, -0.05457250401377678], "finish_reason": "stop"}, {"text": "execute('''", "tokens": ["execute", "('", "''", "\n"], "logprobs": [-0.04805063456296921, -1.3376151323318481, -1.987016201019287, -1.2134199142456055], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({\", \".join(cols)})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " (", "{\"", ",", " \"", ".", "join", "(", "cols", ")})", "')", "\n"], "logprobs": [-0.015063345432281494, -0.1644451767206192, -0.14040668308734894, -0.16657136380672455, -0.002569708740338683, -0.0034641751553863287, -2.67415189743042, -0.0009146321099251509, -0.0003713871701620519, -0.0002650863316375762, -0.0072732665576040745, -0.00044145373976789415, -1.7881377516459906e-06, -1.07287787614041e-05, -0.11569984257221222, -0.2604329288005829, -0.029043031856417656, -0.007620668038725853, -0.7669863104820251, -8.010543388081715e-05, -0.00013052565918769687, -0.05689103901386261, -0.03477945178747177, -0.011815209873020649, -0.007291491609066725, -0.027385763823986053], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.007680410053580999, -0.0010271755745634437, -0.009154370985925198, -0.08671894669532776], "finish_reason": "stop"}, {"text": "execute(f\"INSERT INTO {TABLE_NAME} VALUES ({', '.join([f\"'{row[col]}'\" for col in cols])})\")", "tokens": ["execute", "(", "f", "\"", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{'", ",", " '", ".", "join", "([", "f", "\"", "'{", "row", "[", "col", "]", "}'", "\"", " for", " col", " in", " col", "s", "])", "})", "\"", ")", "\n"], "logprobs": [-0.04929770901799202, -0.04338980093598366, -0.07369759678840637, -1.2866475582122803, -0.01850191503763199, -2.7418097943154862e-06, -0.008026842959225178, -0.006704455241560936, -0.00031394799589179456, -1.3589766240329482e-05, -3.516612196108326e-05, -0.007802367210388184, -0.12469001114368439, -0.6061239838600159, -0.037736911326646805, -0.012694268487393856, -0.25719720125198364, -4.3987260141875595e-05, -0.00019536493346095085, -0.0960279107093811, -0.5970300436019897, -0.593744158744812, -0.16072051227092743, -0.8439804911613464, -0.04002993926405907, -0.04916311800479889, -0.0003923600015696138, -0.020551476627588272, -0.001353420433588326, -0.04944952577352524, -0.00033778208307921886, -0.008056405931711197, -0.0873730406165123, -0.0008908117306418717, -0.0006566275842487812, -0.0007439468172378838, -0.0011273226700723171, -0.0018423503497615457, -0.040166910737752914], "finish_reason": "stop"}, {"text": "commit()", "tokens": ["commit", "()", "\n"], "logprobs": [-0.01404708530753851, -0.0001902399235405028, -0.07955702394247055], "finish_reason": "stop"}, {"text": " pd.read_sql(f\"SELECT * FROM {TABLE_NAME}\", conn, index_col=0)", "tokens": [" pd", ".", "read", "_", "sql", "(", "f", "\"", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}\"", ",", " conn", ",", " index", "_", "col", "=", "0", ")", "\n"], "logprobs": [-0.02604217454791069, -2.5510462364763953e-05, -0.0257465410977602, -0.00022909401741344482, -0.0009778724052011967, -0.544848620891571, -0.027269305661320686, -1.6717352867126465, -0.01948782242834568, -0.1221483126282692, -0.05482565611600876, -0.00741740083321929, -0.0005086558521725237, -5.960446742392378e-06, -5.245195097813848e-06, -0.016962097957730293, -0.00032669928623363376, -0.027999620884656906, -1.7167201042175293, -0.031247803941369057, -0.001064806361682713, -0.005009599030017853, -0.1649826616048813, -1.4824692010879517, -0.10158354043960571, -0.09665960818529129], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.01479440089315176, -0.0011805477552115917, -0.01848400942981243], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.010695750825107098, -0.0001062098381225951, -0.7036226987838745], "finish_reason": "stop"}], "metrics": {"energy": 248.47865838813772, "energy_per_token": 1.3216949914262643, "time": 11.151995, "time_per_token": 0.05931912234042553}}
{"outputs": [{"text": " isinstance(csv_input, StringIO):", "tokens": [" isinstance", "(", "csv", "_", "input", ",", " String", "IO", "):", "\n"], "logprobs": [-0.20290037989616394, -7.235741941258311e-05, -0.0009347598534077406, -2.622600959512056e-06, -3.099393507000059e-05, -0.0001287377526750788, -0.12513642013072968, -2.2053474822314456e-05, -0.021764829754829407, -0.007996450178325176], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "\n"], "logprobs": [-2.1692376136779785, -0.0012943708570674062, -0.0006915323319844902, -0.0005610798834823072, -0.06383894383907318, -0.07357588410377502, -0.10567336529493332, -2.3841574147809297e-05, -9.035655966727063e-05, -5.8412379075889476e-06, -1.966933996300213e-05, -0.022207392379641533, -0.06839907914400101], "finish_reason": "stop"}, {"text": " open(csv_input, \"r\") as f:", "tokens": [" open", "(", "csv", "_", "input", ",", " \"", "r", "\"", ")", " as", " f", ":", "\n"], "logprobs": [-0.011309091933071613, -0.001526977401226759, -0.003962998278439045, -1.4662635294371285e-05, -0.00013374387344811112, -0.2779226303100586, -2.6408028602600098, -0.09964682906866074, -0.015898607671260834, -0.24156013131141663, -0.0004832768754567951, -0.771370530128479, -0.06852743029594421, -0.21875552833080292], "finish_reason": "stop"}, {"text": " csv.DictReader(f)  # Read from file path", "tokens": [" c", "sv", ".", "Dict", "Reader", "(", "f", ")", "  ", "#", " Read", " from", " file", " path", "\n"], "logprobs": [-0.0004789874074049294, -1.1801649634435307e-05, -3.7431014789035544e-05, -0.01206210721284151, -5.483612312673358e-06, -8.77341881277971e-05, -0.03848084807395935, -0.00892825797200203, -0.7248680591583252, -0.0003979606262873858, -0.036802276968955994, -0.04379323124885559, -0.31895411014556885, -0.7783732414245605, -0.045172903686761856], "finish_reason": "stop"}, {"text": " sqlite3.connect(DATABASE_NAME)  # Open a new database connection", "tokens": [" sql", "ite", "3", ".", "connect", "(", "DAT", "AB", "ASE", "_", "NAME", ")", "  ", "#", " Open", " a", " new", " database", " connection", "\n"], "logprobs": [-0.008167912252247334, -0.0002613918040879071, -7.879423355916515e-05, -4.8040190449682996e-05, -0.004153079353272915, -0.023901425302028656, -0.025057826191186905, -2.002696055569686e-05, -3.969590397900902e-05, -7.986990567587782e-06, -4.911301948595792e-05, -0.012172343209385872, -0.586909830570221, -0.0002814135223161429, -1.9354037046432495, -0.9417370557785034, -1.8982796669006348, -0.9295514225959778, -0.18761980533599854, -0.09226551651954651], "finish_reason": "stop"}, {"text": " conn.cursor()", "tokens": [" conn", ".", "cursor", "()", "\n"], "logprobs": [-0.0007117837085388601, -6.198863957251888e-06, -0.0019422968616709113, -0.0002649671514518559, -0.05305393040180206], "finish_reason": "stop"}, {"text": " ','.join([\"'\" + col + \"'\" for col in dr.fieldnames])", "tokens": [" '", ",", "'", ".", "join", "([", "\"", "'", "\"", " +", " col", " +", " \"", "'", "\"", " for", " col", " in", " dr", ".", "field", "names", "])", "\n"], "logprobs": [-1.7664709091186523, -0.049191150814294815, -0.7269158363342285, -0.0001481661747675389, -0.00018702188390307128, -2.3261921405792236, -1.5573301315307617, -1.0090349912643433, -0.5524827837944031, -0.25132036209106445, -1.357028603553772, -0.1448458433151245, -0.003033086657524109, -0.0005959880072623491, -0.007188409101217985, -0.014844906516373158, -0.0030121691524982452, -0.0012953233672305942, -0.08634121716022491, -0.00041166413575410843, -0.002826150506734848, -0.0004650464979931712, -0.009142204187810421, -0.23938721418380737], "finish_reason": "stop"}, {"text": "execute(f\"CREATE TABLE IF NOT EXISTS {TABLE_NAME} ({cols[0]} INT PRIMARY KEY, {','.join(cols[1:])})\")", "tokens": ["execute", "(", "f", "\"", "CREATE", " TABLE", " IF", " NOT", " EX", "ISTS", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "[", "0", "]}", " INT", " PR", "IM", "ARY", " KEY", ",", " {'", ",", "'", ".", "join", "(", "cols", "[", "1", ":]", ")})", "\"", ")", "\n"], "logprobs": [-0.049706362187862396, -0.3000350296497345, -0.3969353437423706, -0.476941853761673, -0.33552661538124084, -0.009289022535085678, -0.1713327318429947, -0.00035398892941884696, -0.00041869457345455885, -0.0001754606782924384, -0.048015184700489044, -0.0016349294455721974, -8.702239938429557e-06, -1.0609570381348021e-05, -0.10676537454128265, -0.9565794467926025, -0.4351421594619751, -0.7225908041000366, -0.010074716061353683, -0.062497228384017944, -0.6663960814476013, -2.765326738357544, -0.002536890795454383, -0.0005154472892172635, -0.0008025524439290166, -0.19030271470546722, -1.4141377210617065, -0.0716470330953598, -0.6496065258979797, -0.00035637227119877934, -0.00024375328212045133, -0.18646159768104553, -0.07151685655117035, -0.018046118319034576, -0.0029309908859431744, -0.4065404236316681, -0.7228925228118896, -0.2151883840560913, -0.006030578166246414, -0.07733574509620667], "finish_reason": "stop"}, {"text": "execute(f'CREATE TABLE {TABLE_NAME} ({cols})')", "tokens": ["execute", "(", "f", "'", "CREATE", " TABLE", " {", "TABLE", "_", "NAME", "}", " ({", "cols", "})", "')", "\n"], "logprobs": [-0.016498800367116928, -0.16994501650333405, -0.1230967566370964, -0.14757508039474487, -0.002652699826285243, -0.0031411137897521257, -0.07269146293401718, -0.00035375059815123677, -1.0728830375228426e-06, -4.887569048150908e-06, -0.07590397447347641, -1.7682677507400513, -0.11131980270147324, -0.8965798616409302, -0.005492358468472958, -0.02597678266465664], "finish_reason": "stop"}, {"text": " in dr:", "tokens": [" in", " dr", ":", "\n"], "logprobs": [-0.01072759460657835, -0.001210790709592402, -0.011664402671158314, -0.06474810093641281], "finish_reason": "stop"}, {"text": "execute(f'INSERT INTO {TABLE_NAME} VALUES ({\", \".join([str(row[col]) for col in cols])})')", "tokens": ["execute", "(", "f", "'", "INS", "ERT", " INTO", " {", "TABLE", "_", "NAME", "}", " VALUES", " (", "{\"", ",", " \"", ".", "join", "([", "str", "(", "row", "[", "col", "])", " for", " col", " in", " col", "s", "])", "})", "')", "\n"], "logprobs": [-0.04696193337440491, -0.033508941531181335, -0.07955174148082733, -0.3006809651851654, -0.0024980073794722557, -1.6689286894688848e-06, -0.00441350694745779, -0.0032406931277364492, -0.00023576818057335913, -1.3232143828645349e-05, -3.349725011503324e-05, -0.0038127838633954525, -0.19201289117336273, -0.08887673914432526, -0.011255813762545586, -0.01731528900563717, -0.12984487414360046, -5.2927523938706145e-05, -0.00018523407925385982, -0.07286005467176437, -2.5755507946014404, -0.0012966329231858253, -0.17206667363643646, -0.055104129016399384, -0.04197531193494797, -0.024930980056524277, -0.022045550867915154, -0.00016532962035853416, -0.0016243371646851301, -0.0888107493519783, -0.001293299370445311, -0.0025612665340304375, -0.000675807474181056, -0.004354044329375029, -0.04208184406161308], "finish_reason": "stop"}, {"text": "commit()  # Save changes", "tokens": ["commit", "()", "  ", "#", " Save", " changes", "\n"], "logprobs": [-0.013389196246862411, -0.00018630675913300365, -2.541266679763794, -0.00010287232726113871, -2.661341667175293, -0.7263683676719666, -0.5758600234985352], "finish_reason": "stop"}, {"text": " pd.read_sql_query(f'SELECT * FROM {TABLE_NAME}', conn)", "tokens": [" pd", ".", "read", "_", "sql", "_", "query", "(", "f", "'", "SELECT", " *", " FROM", " {", "TABLE", "_", "NAME", "}'", ",", " conn", ")", "\n"], "logprobs": [-0.021187515929341316, -2.109982233378105e-05, -0.02047264389693737, -0.00030429501202888787, -0.0009234455064870417, -0.9930170774459839, -0.0914275050163269, -0.007340129464864731, -0.019031891599297523, -0.3514499366283417, -0.012934830039739609, -0.06795823574066162, -0.06361065804958344, -0.006596812047064304, -0.00042965717148035765, -6.556489552167477e-06, -4.172316494077677e-06, -0.02580823004245758, -0.00016699827392585576, -0.02325604483485222, -0.09082460403442383, -0.10571391135454178], "finish_reason": "stop"}, {"text": "close()", "tokens": ["close", "()", "\n"], "logprobs": [-0.012765948660671711, -0.0013080621138215065, -0.019931042566895485], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.009752603247761726, -0.00010346830822527409, -0.5915195941925049], "finish_reason": "stop"}], "metrics": {"energy": 289.2097856922147, "energy_per_token": 1.2519904142520117, "time": 12.829249, "time_per_token": 0.05553787445887446}}
