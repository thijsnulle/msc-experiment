{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    files = glob.iglob(directory + \"/**/*\", recursive=True)\n\n    extensions_counts = {ext: 0 for ext in extensions}\n\n    for file in files:\n        _, ext = os.path.splitext(file)\n        if ext in extensions:\n            extensions_counts[ext] += 1\n\n    if not keep_zero:\n        extensions_counts = {k: v for k, v in extensions_counts.items() if v > 0}\n\n    return Counter(extensions_counts)", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "ig", "lob", "(", "directory", " +", " \"", "/**", "/*", "\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "extensions", "_", "counts", " =", " {", "ext", ":", " ", "0", " for", " ext", " in", " extensions", "}", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "_", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")", "\n", "        ", "if", " ext", " in", " extensions", ":", "\n", "            ", "extensions", "_", "counts", "[", "ext", "]", " +=", " ", "1", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extensions", "_", "counts", " =", " {", "k", ":", " v", " for", " k", ",", " v", " in", " extensions", "_", "counts", ".", "items", "()", " if", " v", " >", " ", "0", "}", "\n", "\n", "    ", "return", " Counter", "(", "extensions", "_", "counts", ")", "\n", "\n", "if"], "logprobs": [-0.4511934220790863, -0.019470755010843277, -0.0066531808115541935, -2.658331868587993e-05, -0.0012376990634948015, -7.867782187531702e-06, -1.3637950420379639, -0.0004698126285802573, -0.00015877417172305286, -0.0009218971827067435, -0.0006915323319844902, -0.00711573613807559, -0.001615410903468728, -0.00753442058339715, -0.006874836515635252, -5.960462772236497e-07, 0.0, -0.030785761773586273, -0.35106903314590454, -0.02885623462498188, -0.7596657276153564, -0.5671394467353821, -0.00015925093612167984, -0.0006475735572166741, -0.001061352901160717, -0.07854828238487244, -0.00014327930693980306, -0.0011836434714496136, -0.2928301990032196, -0.0024176198057830334, -0.00022492263815365732, -0.000479344860650599, -0.13223540782928467, -0.00045277358731254935, -3.0763320922851562, -0.2889499068260193, -0.7975736856460571, -2.682172998902388e-05, -1.3461499214172363, -5.960462772236497e-07, -0.0034601360093802214, -1.7444226741790771, -0.03801318258047104, -0.2485671043395996, -0.09619975835084915, -0.06893075257539749, -0.055267930030822754, -0.0037114801816642284, -0.00010907054820563644, -0.0001554368354845792, -0.0003746046277228743, -0.001090289675630629, -0.031992655247449875, -1.0115920305252075, -0.0001652104256208986, -2.1431427001953125, -0.8231408596038818, -1.099609375, -0.0015086471103131771, -2.834751844406128, -0.16618134081363678, -0.01573128253221512, -0.020605312660336494, -0.00010764019680209458, -0.00020132421923335642, -1.0967194612021558e-05, -3.6954195820726454e-05, -0.025715753436088562, -0.05157788470387459, -0.09528549015522003, -0.36950409412384033, -8.05822346592322e-05, -0.024971675127744675, -0.08043220639228821, -0.09728366136550903, -0.0011598295532166958, -2.109982233378105e-05, -0.0014028241857886314, -0.0011517327511683106, -1.6742994785308838, -0.0008989107445813715, -0.39129653573036194, -0.0016199335223063827, -0.0002890407631639391, -1.5497195136049413e-06, -9.894321920000948e-06, -2.3841855067985307e-07, -5.364403477869928e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.645074735279195e-05, -0.017148317769169807, -0.007288414519280195, -0.004171124193817377, -0.08046696335077286, -0.028490064665675163, -0.01294789183884859, -0.053447604179382324, -0.00021741411183029413, -0.5121398568153381, -0.0002706876548472792, -0.00025662468397058547, -0.004789784085005522, -4.0531076592742465e-06, -2.7418097943154862e-06, -0.00042489083716645837, -5.054346183896996e-05, -0.0002426806604489684, -0.0006817638641223311, -0.001976205036044121, -2.7894584491150454e-05, -0.00112160702701658, -0.007013819646090269, -0.00033241944038309157, -0.12138292193412781, -0.03620529919862747, -0.00017593742813915014, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0013554443139582872, -0.0028364923782646656, -0.0003693613689392805, -0.03415960818529129, -0.0003057250869460404, -0.00025876989820972085, -0.0012477001873776317, -0.06234905868768692, -0.7730515003204346, -0.0004711233195848763, -0.0054080612026154995, -0.00023719835735391825, -0.000996331567876041, -1.0490362910786644e-05, -0.0030146650969982147, -3.6238969187252223e-05, -0.0002873722987715155, -5.4238757002167404e-05, -5.960462772236497e-07, -0.0014411549782380462, -6.937739817658439e-05, -9.214453893946484e-05, -0.0001445904199499637, -0.00015269544383045286, -0.38935741782188416, -0.00018106251081917435, -4.8397800128441304e-05, -0.0003232433518860489, -0.002974968170747161, -0.013109683059155941, -0.00016509123088326305, -0.048190031200647354, -0.019465025514364243, -0.001743821892887354, -0.0009690594743005931, -0.00014280252798926085, -1.4305104514278355e-06, -0.39072421193122864, -0.21402223408222198, -0.008377174846827984, -0.7221227884292603], "finish_reason": "stop"}], "metrics": {"energy": 722.9605674123767, "energy_per_token": 4.518503546327354, "time": 19.504885, "time_per_token": 0.12190553125}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"Invalid directory: {directory}\")\n    files = glob.glob(os.path.join(directory, '**'), recursive=True)\n    ext_counts = Counter()\n    for ext in extensions:\n        matching_files = [file for file in files if file.endswith(ext)]\n        ext_counts[ext] += len(matching_files)\n    if keep_zero:\n        return ext_counts\n    else:\n        return Counter({ext: count for ext, count in ext_counts.items() if count > 0})", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Invalid", " directory", ":", " {", "directory", "}\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "')", ",", " recursive", "=", "True", ")", "\n", "    ", "ext", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "matching", "_", "files", " =", " [", "file", " for", " file", " in", " files", " if", " file", ".", "end", "sw", "ith", "(", "ext", ")]", "\n", "        ", "ext", "_", "counts", "[", "ext", "]", " +=", " len", "(", "matching", "_", "files", ")", "\n", "    ", "if", " keep", "_", "zero", ":", "\n", "        ", "return", " ext", "_", "counts", "\n", "    ", "else", ":", "\n", "        ", "return", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " ext", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -3.345579147338867, -0.01960776373744011, -0.31091737747192383, -0.07774700224399567, -0.000842692912556231, -0.036466822028160095, -0.00019059749320149422, -0.0010602811817079782, -2.3324568271636963, -3.2076449394226074, -0.2126435935497284, -0.852954089641571, -2.253030106658116e-05, -0.16960881650447845, -0.0008469808381050825, -0.7742502689361572, -2.145764938177308e-06, -1.5139465176616795e-05, -5.722029527532868e-06, -0.0019965493120253086, -0.00026901919045485556, -0.0031346967443823814, -0.00040725519647821784, -1.4590030908584595, -0.0010941001819446683, -2.8394596576690674, -0.0032036192715168, -0.0006690170848742127, -0.00022802136663813144, -0.0005741854547522962, -0.0005135409301146865, -0.008682122454047203, -0.04304124787449837, -3.688002586364746, -0.26446643471717834, -0.1767221838235855, -0.0006311332108452916, -0.01415980514138937, -1.2167906761169434, -0.006335768382996321, -0.052993446588516235, -0.03196229040622711, -0.6040835380554199, -0.0007176207727752626, -0.0054407850839197636, -0.0012149580288678408, -0.001602914067916572, -0.0010551605373620987, -3.083228826522827, -0.12153589725494385, -0.029971176758408546, -0.00028546550311148167, -0.10343115776777267, -0.9164990782737732, -0.03718632087111473, -0.00021514961554203182, -0.00010954733443213627, -0.0006602014764212072, -0.0023738557938486338, -0.17107617855072021, -0.0006469779182225466, -0.18935765326023102, -7.152555099310121e-07, -2.3841855067985307e-07, -0.0004542034293990582, -0.001484721782617271, -0.040558479726314545, -0.0013490156270563602, -0.0004670721245929599, -0.07784835249185562, -1.0847986231965479e-05, -0.0002592465898487717, -0.02042067050933838, -0.0032436635810881853, -0.006296203006058931, -1.2834268808364868, -0.006051195319741964, -0.00017796363681554794, -0.00012706902634818107, -2.622600959512056e-06, -2.3841855067985307e-07, -0.00010299152199877426, -0.003785350825637579, -0.044621605426073074, -0.09002307802438736, -2.893843412399292, -1.311301275563892e-06, -1.9073468138230965e-06, -0.03665139898657799, -0.004269294906407595, -0.00024172721896320581, -0.1457792967557907, -0.01382689643651247, -8.344646857949556e-07, -5.602820692729438e-06, -0.003587716491892934, -0.001915883389301598, -0.08919103443622589, -2.253030106658116e-05, -0.001311871805228293, -0.00040904260822571814, -0.07190565764904022, -0.05451199784874916, -0.05286625027656555, -0.22447361052036285, -0.0005293875001370907, -0.03211907297372818, -0.00027378625236451626, -0.00037222131504677236, -9.775113539944869e-06, -0.004557698033750057, -6.532455881824717e-05, -0.0008995062671601772, -7.271740287251305e-06, -4.291525328881107e-06, -0.000259723310591653, -0.0003165697562508285, -1.847726889536716e-05, -0.00042489083716645837, -0.00043335105874575675, -0.09565378725528717, -0.00021371940965764225, -7.033100700937212e-05, -0.000993830617517233, -1.741825819015503, -7.390948667307384e-06, -1.9073468138230965e-06, -6.794906312279636e-06, -3.099393507000059e-05, -0.11560820043087006], "finish_reason": "stop"}], "metrics": {"energy": 503.7557239131928, "energy_per_token": 3.358371492754619, "time": 12.623357, "time_per_token": 0.08415571333333334}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} not found.\")\n    extensions = [ext.lower() for ext in extensions]\n    file_counts = Counter()\n    for root, _, files in os.walk(directory):\n        for file in files:\n            _, ext = os.path.splitext(file.lower())\n            if ext in extensions:\n                file_counts[ext] += 1\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n    return file_counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " {", "directory", "}", " not", " found", ".", "\"", ")", "\n", "    ", "extensions", " =", " [", "ext", ".", "lower", "()", " for", " ext", " in", " extensions", "]", "\n", "    ", "file", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "_", ",", " ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ".", "lower", "())", "\n", "            ", "if", " ext", " in", " extensions", ":", "\n", "                ", "file", "_", "counts", "[", "ext", "]", " +=", " ", "1", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "file", "_", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " file", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "    ", "return", " file", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -1.2460429668426514, -0.0012168630491942167, -0.011521704494953156, -2.822969675064087, -0.0007043979712761939, -0.3780725598335266, -0.013563734479248524, -0.0002503081923350692, -0.0003840185818262398, -1.9137670993804932, -1.3272236585617065, -0.11939038336277008, -0.29007241129875183, -0.4581092596054077, -0.5810307264328003, -0.025023644790053368, -4.8040190449682996e-05, -0.13533006608486176, -6.3774932641536e-05, -3.0636318115284666e-05, -0.0015279296785593033, -0.05579839646816254, -0.41262826323509216, -0.029041990637779236, -1.172398328781128, -0.009435109794139862, -0.20501498878002167, -0.0010068115079775453, -0.020717879757285118, -0.20091205835342407, -0.00674483273178339, -0.05976257845759392, -0.03880003094673157, -2.23291015625, -0.0005443998379632831, -0.9168446063995361, -0.0019664489664137363, -0.03893258422613144, -0.0003060825983993709, -0.0003404037852305919, -8.821448318485636e-06, -1.8715683836489916e-05, -9.476689592702314e-05, -0.00067223358200863, -0.014336677268147469, -0.0015824426664039493, -0.0005860995152033865, -0.01632629707455635, -0.1870933622121811, -0.04338672012090683, -0.005421933718025684, -4.303362584323622e-05, -0.00022825974156148732, -0.0004383556661196053, -2.4840598106384277, -0.0020115396473556757, -0.33619236946105957, -0.0008057684754021466, -9.357491217087954e-05, -4.768370445162873e-07, -4.887569048150908e-06, -5.960462772236497e-07, -4.768370445162873e-07, -4.768370445162873e-07, 0.0, -8.046303264563903e-05, -0.02692982368171215, -0.5436484813690186, -0.0008303055074065924, -0.0010030006524175406, -0.033039409667253494, -0.0007378716254606843, -0.011232827790081501, -0.008097320795059204, -0.0316135436296463, -0.0022348209749907255, -0.015358982607722282, -0.0006256530177779496, -0.00022968991834204644, -0.015006626024842262, -0.00018308870494365692, -0.002542598405852914, -0.02246980369091034, -0.0006659197388216853, -0.00998950656503439, -0.00010322991875000298, -0.004232259467244148, -1.2397689715726301e-05, -0.0005840741214342415, -0.031098397448658943, -0.13586844503879547, -0.09830404818058014, -0.0010845737997442484, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.003715399419888854, -0.004993704613298178, -0.00043394684325903654, -0.04932970926165581, -2.622600959512056e-06, -0.0002217047003796324, -0.34193941950798035, -0.10520562529563904, -0.03576819971203804, -0.256340354681015, -0.0008241117466241121, -0.03237982094287872, -0.000291662581730634, -0.00023493390472140163, -2.098061486321967e-05, -0.010618142783641815, -4.708655978902243e-05, -0.0008360228384844959, -3.576278118089249e-07, -3.576278118089249e-07, -0.00012909532233607024, -0.00016258825780823827, -1.2874520507466514e-05, -0.0010275328531861305, -0.00031192204914987087, -0.08682234585285187, -0.00023815179883968085, -4.2437604861333966e-05, -0.0008672290714457631, -0.0008137490367516875, -0.007296580355614424, -0.010282046161592007, -0.010070113465189934, -2.145764938177308e-06, -8.4638240878121e-06, -1.8814752101898193, -6.198863957251888e-06, -1.311301275563892e-06, -2.7418097943154862e-06, -2.4318398573086597e-05, -0.15350589156150818], "finish_reason": "stop"}], "metrics": {"energy": 535.5488934001924, "energy_per_token": 3.43300572692431, "time": 13.030959, "time_per_token": 0.08353178846153846}}
{"outputs": [{"text": "try:\n        counts = Counter()\n        for ext in extensions:\n            files = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n            counts[ext] = len(files)\n        if not keep_zero:\n            counts = Counter({ext: count for ext, count in counts.items() if count > 0})\n        return counts\n    except OSError as error:\n        raise error", "tokens": ["try", ":", "\n", "        ", "counts", " =", " Counter", "()", "\n", "        ", "for", " ext", " in", " extensions", ":", "\n", "            ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "            ", "counts", "[", "ext", "]", " =", " len", "(", "files", ")", "\n", "        ", "if", " not", " keep", "_", "zero", ":", "\n", "            ", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "        ", "return", " counts", "\n", "    ", "except", " O", "SE", "rror", " as", " error", ":", "\n", "        ", "raise", " error", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3393473625183105, -0.00010168035078095272, -0.004829052835702896, -0.005000109784305096, -2.3825936317443848, -0.00699286675080657, -0.02705908566713333, -0.2790474593639374, -0.010596911422908306, -0.07534349709749222, -0.1594053953886032, -0.29244980216026306, -0.0015793481143191457, -0.005919899791479111, -0.0006484074983745813, -0.004029252100735903, -0.0008150592911988497, -1.8580611944198608, -0.04313647374510765, -0.018279895186424255, -5.125868119648658e-05, -0.006323922425508499, -0.002482667798176408, -0.39173856377601624, -4.0531076592742465e-06, -4.017272294731811e-05, -2.7418097943154862e-06, -0.0017901124665513635, -0.0002849888114724308, -0.003603158053010702, -0.00028046013903804123, -0.3886227011680603, -0.6079471111297607, -0.015057590790092945, -0.002584809437394142, -0.00047755756531842053, -0.00047946401173248887, -0.0013304438907653093, -0.002617031103000045, -0.0002195594133809209, -0.0005806190893054008, -0.00013517419574782252, -0.0006637753685936332, -0.001358896610327065, -0.010508443228900433, -0.0010090741561725736, -0.016658375039696693, -0.05095862224698067, -0.002370287897065282, -0.005248814355581999, -1.083658218383789, -0.008389114402234554, -0.002911616349592805, -0.0014213945250958204, -0.00010311071673640981, -0.019099727272987366, -0.2659206986427307, -0.0858234241604805, -0.05300791934132576, -0.0003849719068966806, -3.576278118089249e-07, -5.960462772236497e-07, -0.0007253637886606157, -0.004015479236841202, -0.0003332536434754729, -0.05297976732254028, -0.04760731756687164, -0.06758182495832443, -0.02147434838116169, -1.0186299085617065, -0.00017379203927703202, -0.024951675906777382, -0.00024863966973498464, -0.00022420754248742014, -1.7404405298293568e-05, -0.002360773738473654, -2.2172682292875834e-05, -0.00012730741582345217, -0.00016509123088326305, -7.426462980220094e-05, -1.2993727978027891e-05, -0.00024077377747744322, -0.000228140561375767, -0.09183626621961594, -0.0001559135998832062, -3.635817120084539e-05, -0.0007717015105299652, -0.00318829040043056, -0.01669847033917904, -0.0076983910985291, -0.005091320723295212, -0.0004960260121151805, -0.02162274904549122, -0.0003355178632773459, -0.028653763234615326, -3.576278118089249e-07, -1.1920928244535389e-07, -0.6263743042945862, -2.9690442085266113, -0.0010632582707330585, -0.0013374679256230593, -0.0016163630643859506, -0.6212117671966553, -0.7944241762161255, -2.012094259262085, -2.169585604860913e-05, -6.556489552167477e-06, -3.933898824470816e-06, -1.8715683836489916e-05, -0.1386006623506546], "finish_reason": "stop"}], "metrics": {"energy": 402.6323349075321, "energy_per_token": 3.660293953704837, "time": 9.043603, "time_per_token": 0.08221457272727271}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"The specified directory does not exist: {directory}\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        file_count = len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n        extension_counts[ext] += file_count\n\n    if not keep_zero:\n        extension_counts = Counter({ext: count for ext, count in extension_counts.items() if count != 0})\n\n    return extension_counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "extension", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "count", " =", " len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", "))", "\n", "        ", "extension", "_", "counts", "[", "ext", "]", " +=", " file", "_", "count", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extension", "_", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " extension", "_", "counts", ".", "items", "()", " if", " count", " ", "!", "=", " ", "0", "})", "\n", "\n", "    ", "return", " extension", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -1.233657956123352, -0.7367466688156128, -0.008046472445130348, -0.6818104982376099, -0.00038771264371462166, -0.000583597575314343, -0.10694802552461624, -0.02729157730937004, -0.0006996329175308347, -0.0067675672471523285, -0.00023112009512260556, -0.0007164295529946685, -0.09907682985067368, -0.0005570290377363563, -2.6842052936553955, -0.0017673838883638382, -0.1305803805589676, -0.0006999903125688434, -0.03006916120648384, -0.2825701832771301, -0.007968303747475147, -0.6161404848098755, -0.08101095259189606, -0.4436943233013153, -0.0009993088897317648, -0.004527793265879154, -0.0008526980527676642, -0.002556034829467535, -0.0009477414423599839, -1.6660034656524658, -0.03564212843775749, -1.7595428228378296, -0.0011520899133756757, -0.7110275030136108, -0.0035802333150058985, -0.09056287258863449, -1.0609570381348021e-05, -8.892617915989831e-05, -0.00031609306461177766, -0.5663323998451233, -1.4305104514278355e-06, -6.079655122448457e-06, -9.536697689327411e-06, -0.0005963454605080187, -0.0001787979417713359, -0.0035014767199754715, -0.00014983485743869096, -0.14494723081588745, -0.2048308551311493, -0.01503011304885149, -0.0020527022425085306, -0.0010805251076817513, -0.00029595286468975246, -0.0012557962909340858, -0.0008802115335129201, -9.297892393078655e-05, -0.00040904260822571814, -0.00011491115583339706, -0.00030501006403937936, -0.0006092122639529407, -0.0012393658980727196, -0.005168528761714697, -0.149042546749115, -3.6000557884108275e-05, -1.1801649634435307e-05, -0.03768100589513779, -0.0015382850542664528, -0.005676341243088245, -1.4104669094085693, -0.0003933132975362241, -7.152555099310121e-07, -2.3841855067985307e-07, -0.002356254495680332, -0.032222963869571686, -0.000474936212413013, -0.13169841468334198, -0.04358680173754692, -0.00020692592079285532, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0017389428103342652, -0.0021381154656410217, -0.00019178935326635838, -0.027385300025343895, -3.2186455882765586e-06, -1.597391747054644e-05, -0.14048220217227936, -0.24310359358787537, -0.02719935216009617, -0.3246367573738098, -0.0005018643569201231, -0.020848765969276428, -0.0003228858404327184, -0.000219321038457565, -1.823885577323381e-05, -0.0020707848016172647, -2.372236667724792e-05, -9.846202738117427e-05, -3.576278118089249e-07, -4.768370445162873e-07, -0.00011705666838679463, -9.190614218823612e-05, -6.079655122448457e-06, -0.0002603192115202546, -0.00023100091493688524, -2.0181849002838135, -2.3841830625315197e-06, -1.1920928244535389e-07, -0.0003053675754927099, -4.6491513785440475e-06, -0.0004353767435532063, -0.0009607228566892445, -0.01438943948596716, -0.0001995364436879754, -0.006911774165928364, -0.0027591038960963488, -3.4570634852570947e-06, -5.960462772236497e-07, -1.5912775993347168, -5.245195097813848e-06, -1.7881377516459906e-06, -2.7418097943154862e-06, -3.0517112463712692e-05, -0.1028454601764679], "finish_reason": "stop"}], "metrics": {"energy": 493.22765018653837, "energy_per_token": 3.4251920151842943, "time": 11.989791, "time_per_token": 0.08326243750000001}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} not found.\")\n\n    file_counts = Counter()\n\n    for ext in extensions:\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        file_list = glob.glob(pattern, recursive=True)\n        file_counts[ext] += len(file_list)\n\n    if not keep_zero:\n        file_counts = +file_counts  # Filter out zeros\n\n    return file_counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " {", "directory", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "file", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "pattern", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "pattern", ",", " recursive", "=", "True", ")", "\n", "        ", "file", "_", "counts", "[", "ext", "]", " +=", " len", "(", "file", "_", "list", ")", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "file", "_", "counts", " =", " +", "file", "_", "counts", "  ", "#", " Filter", " out", " zeros", "\n", "\n", "    ", "return", " file", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -1.2460429668426514, -0.0012168630491942167, -0.011521704494953156, -2.822969675064087, -0.0007043979712761939, -0.3780725598335266, -0.013563734479248524, -0.0002503081923350692, -0.0003840185818262398, -0.1603986620903015, -0.00045885046711191535, -1.5592883825302124, -0.010434713214635849, -0.25035449862480164, -0.0013438966125249863, -0.014340908266603947, -0.058348361402750015, -0.010782433673739433, -0.7828775644302368, -0.00013064485392533243, -0.10496566444635391, -0.2481207400560379, -0.0007693191873840988, -0.0043179611675441265, -0.000542612629942596, -0.0014391313306987286, -0.0007614573696628213, -1.0057096481323242, -0.0006028980133123696, -0.3163206875324249, -6.079655122448457e-06, -2.455681169521995e-05, -2.7418097943154862e-06, -0.0022136487532407045, -0.0002687808300834149, -0.005634497385472059, -0.0002603192115202546, -0.28995954990386963, -0.15726828575134277, -0.010632768273353577, -0.01124779786914587, -0.0003815161471720785, -0.001444249995984137, -0.0008025524439290166, -0.004807698540389538, -0.012863279320299625, -0.006516634952276945, -0.6697577238082886, -0.000993116176687181, -2.246063709259033, -0.00026222606538794935, -0.007577367592602968, -7.748573807475623e-06, -0.029003892093896866, -7.56950321374461e-05, -0.0009613183210603893, -0.003879997180774808, -6.210611172718927e-05, -6.19869097135961e-05, -0.0004408579843584448, -0.0029314663261175156, -0.003995057195425034, -0.022867778316140175, -0.0449582114815712, -7.390948667307384e-06, -0.002250283258035779, -0.009614944458007812, -0.0014206803170964122, -0.0047532422468066216, -0.8260679244995117, -0.002297620987519622, -0.0004776767164003104, -0.0007376333815045655, -8.344646857949556e-07, -2.145764938177308e-06, -8.666139910928905e-05, -0.0008883106056600809, -0.008727028965950012, -0.0029049599543213844, -0.07418937981128693, -0.04360254853963852, -0.0003935516288038343, -1.1920928244535389e-07, -3.576278118089249e-07, -0.001699671265669167, -0.0024295118637382984, -0.00022539935889653862, -0.05911847949028015, -9.536738616588991e-07, -6.103329360485077e-05, -0.2541293501853943, -1.4297189712524414, -0.06695890426635742, -1.6689286894688848e-06, -5.483612312673358e-06, -0.1286119669675827, -1.0251946150674485e-05, -3.4966039657592773, -0.5909155607223511, -2.1491713523864746, -0.4402811825275421, -0.015398543328046799, -0.00013159839727450162, -0.004572768695652485, -0.006038161460310221, -1.4305104514278355e-06, -7.033323527139146e-06, -0.39283308386802673, -0.012758063152432442, -0.774757444858551], "finish_reason": "stop"}], "metrics": {"energy": 451.5658003921508, "energy_per_token": 3.4735830799396212, "time": 10.92572, "time_per_token": 0.08404400000000001}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n\n    counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, \"**\", f\"*{ext}\")\n        counts[ext] = sum(1 for file in glob.iglob(pattern, recursive=True))\n\n    if not keep_zero:\n        counts = Counter({ext: count for ext, count in counts.items() if count > 0})\n\n    return counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "pattern", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "**", "\"", ",", " f", "\"", "*{", "ext", "}\"", ")", "\n", "        ", "counts", "[", "ext", "]", " =", " sum", "(", "1", " for", " file", " in", " glob", ".", "ig", "lob", "(", "pattern", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "    ", "return", " counts"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -0.689651608467102, -0.587051510810852, -0.00014840454969089478, -0.000726316764485091, -0.0008231588872149587, -0.07512357085943222, -0.00012206286191940308, -0.001106127048842609, -1.514802098274231, -0.00020215852418914437, -0.0009972843108698726, -0.16016489267349243, -0.0004776767164003104, -1.6204426288604736, -0.009432866238057613, -0.014092573896050453, -0.08699501305818558, -0.013108035549521446, -0.2734599709510803, -0.07446683198213577, -0.25843545794487, -0.0007130940794013441, -0.005637697875499725, -0.0007003477076068521, -0.0018455630633980036, -0.0007858763565309346, -1.048915147781372, -0.0004024887748528272, -0.3617943823337555, -4.529942543740617e-06, -3.8265450712060556e-05, -1.07287787614041e-05, -0.0020787552930414677, -0.00028010259848088026, -0.006797996815294027, -0.0002516191452741623, -2.112384796142578, -0.0032038569916039705, -0.044497787952423096, -0.015119473449885845, -0.0306699275970459, -0.007408407516777515, -0.06829364597797394, -0.002615247620269656, -0.0015504255425184965, -0.0006364941946230829, -0.008903564885258675, -0.0021092090755701065, -1.2988704442977905, -0.10914143919944763, -0.0006772369961254299, -0.0032397424802184105, -1.23203444480896, -1.942234992980957, -0.036040645092725754, -0.1438470035791397, -0.0002884448622353375, -2.1669440269470215, -0.020310521125793457, -0.00028272447525523603, -4.410734163684538e-06, -0.2960776686668396, -2.3841855067985307e-07, -2.729855441430118e-05, -0.0022155519109219313, -0.0008509114268235862, -0.0002330270071979612, -5.400034933700226e-05, -0.00039307496626861393, -0.5488073825836182, -0.004270600620657206, -0.05356105789542198, -0.001670038211159408, -0.10650167614221573, -0.062017474323511124, -0.00011789103882620111, -5.960462772236497e-07, -3.576278118089249e-07, -0.0014806747203692794, -0.0025038341991603374, -0.0002475670480635017, -0.041905924677848816, -0.058952949941158295, -0.06075184419751167, -0.01359360571950674, -0.2578868865966797, -0.00018737945356406271, -0.020041465759277344, -0.00012420836719684303, -0.0001255195093108341, -9.65590606938349e-06, -0.0016395710408687592, -1.2755313036905136e-05, -4.458328112377785e-05, -0.00022027450904715806, -7.319182623177767e-05, -8.34461570775602e-06, -0.00022909401741344482, -0.00015925093612167984, -0.1269388645887375, -0.0001538873475510627, -2.9205850296420977e-05, -0.0007091629668138921, -0.0011611393420025706, -0.03209840878844261, -0.0002029928145930171, -0.006741872988641262, -0.0066049834713339806], "finish_reason": "stop"}], "metrics": {"energy": 429.99712855243666, "energy_per_token": 3.3593525668159114, "time": 10.723819, "time_per_token": 0.0837798359375}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"Directory does not exist: \" + directory)\n\n    total_counts = Counter()\n\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        total_counts[ext] += len(file_list)\n\n    if keep_zero:\n        return total_counts\n    else:\n        return Counter({ext: count for ext, count in total_counts.items() if count > 0})", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Directory", " does", " not", " exist", ":", " \"", " +", " directory", ")", "\n", "\n", "    ", "total", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "total", "_", "counts", "[", "ext", "]", " +=", " len", "(", "file", "_", "list", ")", "\n", "\n", "    ", "if", " keep", "_", "zero", ":", "\n", "        ", "return", " total", "_", "counts", "\n", "    ", "else", ":", "\n", "        ", "return", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " total", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -0.445766806602478, -0.25417134165763855, -0.00021038226259406656, -0.001415918697603047, -2.4549999237060547, -0.9826676845550537, -0.0750732570886612, -0.06964562088251114, -0.0013093716697767377, -0.0007982643437571824, -0.11636911332607269, -0.0005781171494163573, -4.354801177978516, -0.0803791880607605, -0.9574759602546692, -0.003211818402633071, -0.025167569518089294, -0.016550391912460327, -0.026147976517677307, -0.716587245464325, -0.00024434918304905295, -0.11828729510307312, -0.4308324456214905, -0.0018929197685793042, -0.005065108649432659, -0.0007166677969507873, -0.0028547984547913074, -0.0008659188752062619, -1.741558313369751, -0.024044811725616455, -2.927180051803589, -0.0012938946019858122, -0.03867502883076668, -2.5748875486897305e-05, -0.01931384764611721, -0.001764646964147687, -0.41851869225502014, -8.344646857949556e-07, -1.3470558769768104e-05, -1.6689286894688848e-06, -0.0013778250431641936, -0.00019572250312194228, -0.002301307860761881, -0.0003738896339200437, -1.2642061710357666, -0.23844583332538605, -0.024521028622984886, -0.007727609481662512, -0.0008563903393223882, -0.0008272086852230132, -0.0010118131758645177, -0.0021519139409065247, -0.00019226610311307013, -0.0003250309091527015, -0.00023934361524879932, -0.0004676678800024092, -0.0021023093722760677, -0.0073004853911697865, -0.011497899889945984, -0.33260422945022583, -6.818538531661034e-05, -0.0007508557755500078, -0.03139118105173111, -0.0029229081701487303, -0.007171365898102522, -0.40759342908859253, -0.0021843877620995045, -0.0008852138998918235, -0.0012435331009328365, -9.536738616588991e-07, -1.1920928244535389e-07, -0.00015031162183731794, -0.0016689670737832785, -0.008414057083427906, -0.0012204349040985107, -0.09972160309553146, -2.537728786468506, -1.0728830375228426e-06, -2.7418097943154862e-06, -0.06413303315639496, -0.004755615256726742, -0.00017331528943032026, -0.540806233882904, -0.06632790714502335, -1.1920922133867862e-06, -3.576278118089249e-07, -0.006597049068659544, -0.113784559071064, -0.010846821591258049, -1.9073304429184645e-05, -0.0020737587474286556, -0.00033706706017255783, -0.1951495260000229, -0.0507841482758522, -0.05492958426475525, -1.0517520904541016, -0.0005073452484793961, -0.0664338767528534, -0.0003916450368706137, -0.0007975496700964868, -3.8980677345534787e-05, -0.0007421599584631622, -4.351044481154531e-05, -0.0012192443246021867, -2.861018856492592e-06, -4.0531076592742465e-06, -0.0002924968139268458, -0.00031728477915748954, -1.645074735279195e-05, -0.00023421882360707968, -0.0003120412293355912, -0.14435388147830963, -6.05564855504781e-05, -4.541770613286644e-05, -0.0007074952009133995, -0.4941021203994751, -0.01465273555368185, -0.6620112657546997], "finish_reason": "stop"}], "metrics": {"energy": 470.615135795593, "energy_per_token": 3.460405410261713, "time": 11.359119, "time_per_token": 0.0835229338235294}}
{"outputs": [{"text": "# Create a counter to store the counts of file extensions\n    counter = Counter()\n\n    # Check if the directory exists\n    if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    # Iterate over each extension and count the corresponding files\n    for ext in extensions:\n        # Generate glob patterns for each extension\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        # Use glob to find files matching the pattern\n        files = glob.glob(pattern, recursive=True)\n        # Update the counter with the count of files for the extension\n        counter.update({ext: len(files)})\n\n    # Remove extensions with zero counts if keep_zero is False\n    if not keep_zero:\n        counter = Counter({k: v for k, v in counter.items() if v > 0})\n\n    return counter", "tokens": ["#", " Create", " a", " counter", " to", " store", " the", " counts", " of", " file", " extensions", "\n", "    ", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " extension", " and", " count", " the", " corresponding", " files", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "#", " Generate", " glob", " patterns", " for", " each", " extension", "\n", "        ", "pattern", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", "\n", "        ", "#", " Use", " glob", " to", " find", " files", " matching", " the", " pattern", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "pattern", ",", " recursive", "=", "True", ")", "\n", "        ", "#", " Update", " the", " counter", " with", " the", " count", " of", " files", " for", " the", " extension", "\n", "        ", "counter", ".", "update", "({", "ext", ":", " len", "(", "files", ")})", "\n", "\n", "    ", "#", " Remove", " extensions", " with", " zero", " counts", " if", " keep", "_", "zero", " is", " False", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counter", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " counter", ".", "items", "()", " if", " v", " >", " ", "0", "})", "\n", "\n", "    ", "return", " counter", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9378695487976074, -3.2496228218078613, -0.5366111397743225, -1.7174921035766602, -2.000434398651123, -0.8994172215461731, -0.45506688952445984, -0.48632287979125977, -1.1514792442321777, -2.7471611499786377, -0.1805240958929062, -0.05031438171863556, -0.0013729440979659557, -1.2694164514541626, -0.005112787708640099, -0.004756208509206772, -0.03172949701547623, -0.002139780670404434, -0.13068237900733948, -0.00043811736395582557, -0.08435752987861633, -0.7583434581756592, -0.048728808760643005, -0.1053244099020958, -0.2946808338165283, -0.04254692420363426, -0.07638242095708847, -0.0002422039397060871, -0.0067061129957437515, -0.020563272759318352, -0.0037276323419064283, -1.0490362910786644e-05, -0.0007333449902944267, -2.7418097943154862e-06, -0.2567775547504425, -4.2914423829643056e-05, -0.000286657246761024, -0.006028563715517521, -0.00046885941992513835, -0.0008110094931907952, -0.01810137741267681, -0.006886912509799004, -4.768370445162873e-07, 0.0, -0.025255447253584862, -0.400097519159317, -0.024969233199954033, -0.2808123230934143, -0.5138258934020996, -4.279521817807108e-05, -0.0005279577453620732, -0.000726316764485091, -0.0514494888484478, -7.259582343976945e-05, -0.0004978132783435285, -0.16701893508434296, -0.0020375936292111874, -0.00010895135346800089, -0.00021360022947192192, -0.00530395470559597, -0.00034195298212580383, -0.029839860275387764, -1.2541486024856567, -0.000575376907363534, -0.5072013735771179, -0.9830679297447205, -1.1494635343551636, -0.6877799034118652, -0.28765949606895447, -0.6157652139663696, -2.526293992996216, -0.06030110642313957, -0.23969802260398865, -0.00021324267436284572, -0.011158091016113758, -0.20321466028690338, -0.0004567056894302368, -0.005475167650729418, -0.000277123210253194, -6.305972783593461e-05, -0.0014815079048275948, -0.6102805733680725, -3.5694684982299805, -2.9988036155700684, -0.5830860733985901, -0.6435859203338623, -0.6769691705703735, -0.24825653433799744, -0.20981767773628235, -0.0005085367010906339, -0.529011607170105, -0.0023160558193922043, -0.7266571521759033, -9.059865078597795e-06, -5.113947918289341e-05, -1.6331539882230572e-05, -0.004045755136758089, -0.0006418551784008741, -0.00753619521856308, -0.000390215078368783, -0.8607650995254517, -0.4609608054161072, -0.01014882605522871, -0.003381726797670126, -0.0010151476599276066, -0.003199579194188118, -0.0009214208112098277, -0.022325841709971428, -0.00709087960422039, -0.2639225423336029, -0.23304614424705505, -1.0786291360855103, -0.04901568219065666, -0.1936485469341278, -0.2249688357114792, -0.7078514695167542, -0.5251530408859253, -0.005073292646557093, -0.018821338191628456, -0.2942769527435303, -7.64102369430475e-05, -0.34895625710487366, -0.019976848736405373, -0.004762970842421055, -8.821448318485636e-06, -0.06181824579834938, -4.5536911784438416e-05, -0.0010983869433403015, -0.0024335552006959915, -0.00013171759201213717, -6.544376083184034e-05, -0.0002915434306487441, -0.004919685889035463, -0.002460311632603407, -0.01965767703950405, -0.07379160821437836, -0.2310200333595276, -0.008166847750544548, -0.029689086601138115, -0.0564424991607666, -0.020547272637486458, -0.5346887707710266, -0.2132595330476761, -0.23967373371124268, -0.155717670917511, -0.813913106918335, -1.0745301246643066, -0.0011609011562541127, -0.00013243274588603526, -0.0035571889020502567, -1.3367714881896973, -6.8662193370983e-05, -0.26615065336227417, -0.002442117314785719, -0.003805302083492279, -0.006905854679644108, -0.0009246364934369922, -0.00040880427695810795, -0.0037954451981931925, -0.00017534149810671806, -0.011884715408086777, -0.0022518294863402843, -0.01857633888721466, -0.8410086631774902, -0.2328973114490509, -0.02521662414073944, -0.0313730426132679, -0.30934175848960876, -0.18619178235530853, -0.08190397918224335, -0.00012230125139467418, -0.00019536493346095085, -0.02273319661617279, -0.0641239732503891, -0.0013975863112136722, -6.663577369181439e-05, -0.001672894461080432, -0.0023843212984502316, -4.529942543740617e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0023279490415006876, -0.00010024998482549563, -0.0001538873475510627, -0.1123957633972168, -0.045142821967601776, -0.46339449286460876, -0.06731761246919632, -0.35125699639320374, -0.0001264730526600033, -0.027536770328879356, -1.549708758830093e-05, -0.000285584683297202, -3.6954811548639555e-06, -0.00047565114800818264, -2.276871418871451e-05, -6.365573790390044e-05, -6.222531374078244e-05, -7.199982064776123e-05, -3.814689989667386e-06, -3.8265450712060556e-05, -8.630380034446716e-05, -0.30680227279663086, -5.9126061387360096e-05, -1.7404405298293568e-05, -0.00022480344341602176, -0.0014555584639310837, -0.010183047503232956, -0.00028713393840007484, -0.060239262878894806, -0.0031562058720737696, -1.7440829277038574, -5.125986263010418e-06, -1.5497195136049413e-06, -3.099436753473128e-06, -3.2782016205601394e-05, -0.14959760010242462], "finish_reason": "stop"}], "metrics": {"energy": 737.8946795940392, "energy_per_token": 3.400436311493268, "time": 18.280792, "time_per_token": 0.08424328110599079}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"Specified directory does not exist\")\n\n    counts = Counter()\n    for ext in extensions:\n        count = len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n        if count > 0 or keep_zero:\n            counts[ext] = count\n\n    return counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Spec", "ified", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "count", " =", " len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", "))", "\n", "        ", "if", " count", " >", " ", "0", " or", " keep", "_", "zero", ":", "\n", "            ", "counts", "[", "ext", "]", " =", " count", "\n", "\n", "    ", "return", " counts"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -2.3263211250305176, -0.0010515881003811955, -0.004261341877281666, -0.03653394430875778, -0.000248401309363544, -0.0020902943797409534, -1.0474647283554077, -0.0010588521836325526, -0.001135300612077117, -0.15643684566020966, -0.00047910655848681927, -1.8593206405639648, -0.010242636315524578, -0.01531472522765398, -0.06941866129636765, -0.015333390794694424, -0.3029493987560272, -0.07346667349338531, -0.38025984168052673, -0.0009184433147311211, -0.004574310965836048, -0.0008017186191864312, -0.0023495943751186132, -0.0007751559023745358, -2.573352098464966, -0.017131678760051727, -0.7411203384399414, -0.010980302467942238, -0.11681320518255234, -1.2874520507466514e-05, -8.177422569133341e-05, -0.0023852726444602013, -0.2355920672416687, -3.2186455882765586e-06, -1.1920858014491387e-05, -4.529942543740617e-06, -0.0006631797295995057, -0.0002037079248111695, -0.002617150079458952, -0.00024732868769206107, -0.3372012674808502, -0.22675545513629913, -0.02538527548313141, -0.002097907941788435, -0.0006092122639529407, -0.0003968881501350552, -0.0011840007500723004, -0.002861217362806201, -0.00013696208770852536, -0.0005884823040105402, -0.00016366096679121256, -0.0004096384218428284, -0.0005687049706466496, -0.0021649987902492285, -0.005172086413949728, -0.42083820700645447, -0.38820603489875793, -0.2510493993759155, -5.1377883210079744e-05, -0.00018451895448379219, -0.005713086109608412, -0.00145948666613549, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0008466235012747347, -0.004160440061241388, -0.00018463814922142774, -0.0007338214782066643, -0.013195921666920185, -0.0041683935560286045, -0.008856302127242088, -0.06389038264751434, -0.0003352795320097357, -0.0006382812280207872, -0.6267887353897095, -0.0005277194431982934, -0.008837515488266945, -0.00741917546838522], "finish_reason": "stop"}], "metrics": {"energy": 365.4804676952362, "energy_per_token": 3.8070882051587103, "time": 8.001022, "time_per_token": 0.08334397916666668}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    # Create an empty counter object\n    counts = Counter()\n\n    # Recursively traverse the directory and its subdirectories\n    for ext in extensions:\n        for root, dirs, files in os.walk(directory):\n            for file in files:\n                if file.endswith(ext):\n                    counts[ext] += 1\n\n    # If keep_zero is False, remove extensions with zero counts\n    if not keep_zero:\n        counts = Counter({k: v for k, v in counts.items() if v != 0})\n\n    # Return the counter\n    return counts", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "The", " specified", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " an", " empty", " counter", " object", "\n", "    ", "counts", " =", " Counter", "()", "\n", "\n", "    ", "#", " Rec", "urs", "ively", " traverse", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "(", "ext", "):", "\n", "                ", "    ", "counts", "[", "ext", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " If", " keep", "_", "zero", " is", " False", ",", " remove", " extensions", " with", " zero", " counts", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counts", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " counts", ".", "items", "()", " if", " v", " ", "!", "=", " ", "0", "})", "\n", "\n", "    ", "#", " Return", " the", " counter", "\n", "    ", "return", " counts"], "logprobs": [-1.9378695487976074, -0.4611802399158478, -0.10715559870004654, -0.31780171394348145, -0.28792187571525574, -0.04191141203045845, -0.06914892792701721, -0.0012999664759263396, -0.009120351634919643, -0.006578574422746897, -0.0035062285605818033, -1.8715683836489916e-05, -0.0007805161876603961, -3.2186455882765586e-06, -0.32488444447517395, -6.01988795096986e-05, -0.00029416524921543896, -0.006820137612521648, -0.0005012686015106738, -0.0011724510695785284, -0.00884141493588686, -0.007213500328361988, -5.960462772236497e-07, 0.0, -0.027423923835158348, -0.9695351123809814, -1.150895118713379, -0.3194482624530792, -0.0009632238652557135, -0.004925142508000135, -7.581423415103927e-05, -0.00032240914879366755, -0.2830640375614166, -0.0033683013170957565, -0.0008476955117657781, -0.0002308817347511649, -0.03925322741270065, -0.0005382042727433145, -0.24140028655529022, -1.1731387376785278, -1.1107964515686035, -0.02294793725013733, -1.108804702758789, -0.6990100741386414, -0.34925901889801025, -0.0001284993631998077, -1.776803731918335, -0.0048120878636837006, -0.0018228357657790184, -0.0057653565891087055, -0.0006372089846991003, -0.025694260373711586, -0.0002273062855238095, -0.03737260028719902, -3.0919952392578125, -0.006838489323854446, -0.015413920395076275, -0.8476578593254089, -0.0604810006916523, -0.04194273427128792, -0.6140846014022827, -1.231722116470337, -0.005417190957814455, -0.028306640684604645, -3.2543604902457446e-05, -0.10158634185791016, -0.00024434918304905295, -0.04697558283805847, -1.1827402114868164, -0.0009395237429998815, -0.002347691683098674, -0.00025829317746683955, -0.010149888694286346, -0.002360179089009762, -1.596919298171997, -0.8424721360206604, -0.0005312938592396677, -0.25752899050712585, -8.5588610090781e-05, -1.680836794548668e-05, -0.005221420433372259, -9.297892393078655e-05, -0.00018880968855228275, -6.556489552167477e-06, -1.2159273865108844e-05, -0.0001264730526600033, -0.0010343207977712154, -0.007844120264053345, -0.0023297329898923635, -0.0008124388405121863, -0.6500664949417114, -0.1665397733449936, -0.028016777709126472, -0.023466715589165688, -0.0001102625101339072, -0.000814582861494273, -0.0007609808817505836, -0.32655635476112366, -0.11903759837150574, -0.0005978942499496043, -0.027033792808651924, -7.152555099310121e-07, -8.344646857949556e-07, -0.00047231485950760543, -0.0008624648326076567, -0.010661193169653416, -0.011392422020435333, -9.524368942948058e-05, -0.0003711488388944417, -0.04736347123980522, -0.016790730878710747, -0.0047686658799648285, -0.0029131616465747356, -0.0001991788885788992, -0.0003890234511345625, -1.6927575416048057e-05, -0.0036194308195263147, -0.02807229943573475, -0.01617429219186306, -0.04243849962949753, -1.989313006401062, -0.05476900562644005, -0.0003044141922146082, -0.00025674383505247533, -0.012760769575834274, -0.1202298179268837, -0.0034584729000926018, -0.03731093183159828, -0.29647132754325867, -0.02625667117536068, -0.0230963546782732, -0.07287146896123886, -0.13414312899112701, -0.00019608005823101848, -0.0014215136179700494, -0.0033267175313085318, -6.079655122448457e-06, -2.3841855067985307e-07, 0.0, -0.002396808471530676, -6.937739817658439e-05, -0.00030298411729745567, -0.1540142297744751, -0.05618276447057724, -0.1491575688123703, -0.05478796362876892, -1.038942575454712, -0.0001784403866622597, -0.07183798402547836, -3.218599158572033e-05, -0.0002787916746456176, -8.34461570775602e-06, -0.0006774752982892096, -2.8490614567999728e-05, -7.73638384998776e-05, -9.047575440490618e-05, -9.035655966727063e-05, -5.245195097813848e-06, -6.663577369181439e-05, -0.00024279984063468874, -1.234764575958252, -1.311301275563892e-06, -1.1920928244535389e-07, -0.0002805792901199311, -8.22540732769994e-06, -0.0003499372396618128, -0.0007799206068739295, -0.014755873940885067, -0.0003716255014296621, -2.076122283935547, -0.1600390374660492, -0.021922634914517403, -0.860697865486145, -2.4740099906921387, -0.0009215399040840566, -0.005680845119059086, -0.005789535120129585], "finish_reason": "stop"}], "metrics": {"energy": 603.4611939449316, "energy_per_token": 3.409385276525037, "time": 14.928648, "time_per_token": 0.08434264406779661}}
{"outputs": [{"text": "try:\n        files = glob.glob(os.path.join(directory, \"**\", \"*.*\"), recursive=True)\n        counts = Counter(os.path.splitext(file)[1] for file in files if any(file.endswith(ext) for ext in extensions))\n        return counts\n    except OSError as e:\n        raise OSError(f\"Failed to count files: {e}\")", "tokens": ["try", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "**", "\"", ",", " \"", "*", ".", "*", "\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "counts", " =", " Counter", "(", "os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " for", " file", " in", " files", " if", " any", "(", "file", ".", "end", "sw", "ith", "(", "ext", ")", " for", " ext", " in", " extensions", "))", "\n", "        ", "return", " counts", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Failed", " to", " count", " files", ":", " {", "e", "}\"", ")", "\n", "\n", "if"], "logprobs": [-3.3393473625183105, -0.00010168035078095272, -0.004829052835702896, -0.005000109784305096, -2.4023499488830566, -0.12424139678478241, -0.3682798743247986, -9.727005090098828e-05, -0.10185101628303528, -0.0034755796659737825, -0.5847541689872742, -8.4638240878121e-06, -7.295342220459133e-05, -2.407998726994265e-05, -0.0070507521741092205, -0.0003897384158335626, -0.005117057356983423, -0.0006322053959593177, -0.5437473654747009, -0.0038683598395437002, -0.07952994108200073, -0.08244103193283081, -0.02141437493264675, -0.003284894395619631, -2.29360294342041, -0.14857472479343414, -0.0004888770054094493, -0.0028546794783324003, -0.0003046525234822184, -0.0003387354372534901, -0.0001517419150331989, -0.0003861635341309011, -0.0011232740944251418, -0.00964481569826603, -0.6507071256637573, -1.269155502319336, -0.0067070601508021355, -0.007655093912035227, -0.4550492763519287, -0.5016583204269409, -5.960462772236497e-07, -4.935142715112306e-05, -1.1920928244535389e-07, -0.00011526874004630372, -1.4305104514278355e-06, 0.0, -0.00031537804170511663, -0.267400324344635, -0.4539708197116852, -0.005574396345764399, -0.0010146714048460126, -0.09894629567861557, -3.58813522325363e-05, -2.5987286790041253e-05, -0.0003420721332076937, -0.36601585149765015, -2.445688247680664, -0.0018136734142899513, -0.17362311482429504, -0.0007446615491062403, -0.04417197406291962, -1.9073468138230965e-06, -4.0531076592742465e-06, -0.0005799042410217226, -0.040992457419633865, -0.004295527469366789, -0.0016936019528657198, -7.915183232398704e-05, -2.884823152271565e-05, -0.0007390628452412784, -0.001875072019174695, -0.005300397519022226, -0.21299587190151215, -1.3282601833343506, -1.2679932117462158, -1.3652557134628296, -0.03487604483962059, -0.000966915744356811, -0.033817846328020096, -4.768370445162873e-07, -2.3841855067985307e-07, -0.6352510452270508, -0.1480647474527359, -0.00012706902634818107, -0.0010840974282473326, -0.0020403298549354076, -0.8319429755210876, -0.08662231266498566, -2.861018856492592e-06, 0.0, -0.0035533879417926073, -0.1816560924053192, -0.010592193342745304, -2.9243950843811035, -0.006853051949292421, -2.508023738861084, -0.05398276820778847, -1.1199796199798584, -0.007037849631160498, -0.4296642541885376, -0.0328064039349556, -0.10770142823457718, -0.5976431369781494, -0.030183328315615654, -0.9553344249725342], "finish_reason": "stop"}], "metrics": {"energy": 385.83542938232415, "energy_per_token": 3.6746231369745157, "time": 8.621991, "time_per_token": 0.0821142}}
{"outputs": [{"text": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise OSError(\"Directory does not exist\")\n\n    # Initialize a counter object\n    file_counter = Counter()\n\n    # Recursively traverse the directory using os.walk() and glob.glob()\n    # os.walk() returns a tuple of directories, subdirectories, and files in each level\n    for directory_name, subdirectories, files in os.walk(directory):\n        for file_name in files:\n            for extension in extensions:\n                # Check if file extension matches the extension from the list\n                if file_name.endswith(extension):\n                    # If yes, increment the count for the corresponding extension in the counter object\n                    file_counter[extension] += 1\n                    # Break from the loop as the file has already been counted\n                    break\n\n    # If keep_zero is False, remove extensions with zero count from the counter object\n    if not keep_zero:\n        file_counter = Counter({extension: count for extension, count in file_counter.items() if count != 0", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " a", " counter", " object", "\n", "    ", "file", "_", "counter", " =", " Counter", "()", "\n", "\n", "    ", "#", " Rec", "urs", "ively", " traverse", " the", " directory", " using", " os", ".", "walk", "()", " and", " glob", ".", "glob", "()", "\n", "    ", "#", " os", ".", "walk", "()", " returns", " a", " tuple", " of", " directories", ",", " sub", "direct", "ories", ",", " and", " files", " in", " each", " level", "\n", "    ", "for", " directory", "_", "name", ",", " sub", "direct", "ories", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "for", " extension", " in", " extensions", ":", "\n", "                ", "#", " Check", " if", " file", " extension", " matches", " the", " extension", " from", " the", " list", "\n", "                ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "extension", "):", "\n", "                ", "    ", "#", " If", " yes", ",", " increment", " the", " count", " for", " the", " corresponding", " extension", " in", " the", " counter", " object", "\n", "                ", "    ", "file", "_", "counter", "[", "extension", "]", " +=", " ", "1", "\n", "                ", "    ", "#", " Break", " from", " the", " loop", " as", " the", " file", " has", " already", " been", " counted", "\n", "                ", "    ", "break", "\n", "\n", "    ", "#", " If", " keep", "_", "zero", " is", " False", ",", " remove", " extensions", " with", " zero", " count", " from", " the", " counter", " object", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "file", "_", "counter", " =", " Counter", "({", "extension", ":", " count", " for", " extension", ",", " count", " in", " file", "_", "counter", ".", "items", "()", " if", " count", " ", "!", "=", " ", "0"], "logprobs": [-1.9378695487976074, -0.4611802399158478, -0.10715559870004654, -1.3887054920196533, -0.1205461397767067, -0.08151157200336456, -0.0010926711838692427, -0.010255733504891396, -0.009859670884907246, -0.0033073509112000465, -1.9907753085135482e-05, -0.0007759897271171212, -5.364403477869928e-06, -0.2988297641277313, -7.486063259420916e-05, -0.0003045333724003285, -0.005209917202591896, -0.0006435230607166886, -0.001148398732766509, -0.007684077136218548, -0.007187698967754841, -7.152555099310121e-07, 0.0, -0.025540301576256752, -0.9346576929092407, -0.22931884229183197, -0.1635381132364273, -0.00011443436960689723, -0.0009136793087236583, -0.605626106262207, -0.0011453027836978436, -0.0009157040040008724, -0.043726593255996704, -0.0004021312633994967, -0.2653382122516632, -0.5385377407073975, -1.534156322479248, -1.5833015441894531, -0.7516119480133057, -0.583492636680603, -0.00015293381875380874, -0.9769959449768066, -0.004655356053262949, -1.260104775428772, -0.00040844682371243834, -0.003908377606421709, -0.008960394188761711, -0.0008131535141728818, -0.024323146790266037, -0.00013243274588603526, -0.046014368534088135, -2.266143798828125, -0.00878445990383625, -0.02242446132004261, -0.9757046103477478, -0.2617485523223877, -0.04235977306962013, -2.657803535461426, -1.2409977912902832, -0.04395638406276703, -0.005561237223446369, -1.279174566268921, -2.2414376735687256, -0.043751925230026245, -0.22019530832767487, -0.053745441138744354, -0.009645996615290642, -0.03351977840065956, -0.0006076634745113552, -2.6658198833465576, -1.9840997457504272, -0.0020375936292111874, -0.03290722519159317, -0.11327333748340607, -1.1493291854858398, -0.11368731409311295, -0.6551952958106995, -1.3505358695983887, -2.2572717666625977, -0.263359397649765, -0.05752149224281311, -0.061865199357271194, -7.331102824537084e-05, -0.04781985282897949, -0.0014737708261236548, -0.18118418753147125, -0.9422135353088379, -0.44523003697395325, -1.3827786445617676, -0.4409829080104828, -0.0023818237241357565, -1.0932005643844604, -2.384444236755371, -0.09548065811395645, -1.9660459756851196, -0.005133661441504955, -0.36757901310920715, -0.02139115333557129, -0.00026854246971197426, -0.0008774721063673496, -0.09257440268993378, -0.0007627676823176444, -0.0004161922261118889, -1.2755313036905136e-05, -2.4437606043647975e-05, -0.00024625606602057815, -0.0015498304273933172, -0.004314637742936611, -0.0009758477681316435, -0.012037491425871849, -1.2496857643127441, -0.3366962969303131, -1.524957537651062, -0.03402607515454292, -0.00035637227119877934, -0.05615774914622307, -9.202533692587167e-05, -0.016751810908317566, -0.00233056559227407, -3.3222320079803467, -0.2560896575450897, -0.00047994061606004834, -0.0025918246246874332, -0.00012742661056108773, -0.013217803090810776, -0.0007553822943009436, -0.8247658610343933, -0.4295693039894104, -0.01383618451654911, -1.4703457355499268, -1.9821009635925293, -0.25785061717033386, -1.3774393796920776, -1.8628661632537842, -3.2456865310668945, -0.11159588396549225, -0.48739373683929443, -0.2870218753814697, -9.440929716220126e-05, -0.03356865420937538, -0.14818605780601501, -2.7656173188006505e-05, -6.770858453819528e-05, -0.0015076948329806328, -0.11075802147388458, -1.1920928244535389e-07, -4.768370445162873e-07, -0.00045217780279926956, -0.0008702066843397915, -0.013573378324508667, -0.001141968765296042, -0.0002674698771443218, -0.00024828212917782366, -0.4502468407154083, -1.5512752532958984, -1.8407589197158813, -0.0008641323074698448, -0.3291565477848053, -0.05042580887675285, -0.7699854969978333, -0.20769983530044556, -1.197145700454712, -3.0739355087280273, -0.04041595384478569, -1.0032904148101807, -0.022097207605838776, -0.04091385006904602, -0.48548412322998047, -0.0015034097013995051, -3.2782016205601394e-05, -7.30726242181845e-05, -0.004881251137703657, -5.960462772236497e-07, -1.9430925021879375e-05, -0.01125310268253088, -0.0009446449112147093, -0.002878453116863966, -0.0002547178009990603, -0.00025948495022021234, -1.7523612768854946e-05, -0.0003960540343541652, -0.6812795996665955, -0.0033315890468657017, -2.188241481781006, -0.28102123737335205, -2.888364791870117, -0.056448355317115784, -2.3090896606445312, -2.061619520187378, -1.7725872993469238, -0.101486936211586, -0.32265302538871765, -2.2086970806121826, -0.014791229739785194, -0.021604666486382484, -0.3119407296180725, -0.0004782725009135902, -2.884823152271565e-05, -0.02278691530227661, -0.0041814520955085754, -0.030397748574614525, -0.00282317865639925, -0.042731866240501404, -0.9869343638420105, -0.020849816501140594, -0.00023898606013972312, -0.0002754547167569399, -0.030097270384430885, -0.099144846200943, -0.005948578007519245, -0.04793178290128708, -0.24140076339244843, -0.04511798173189163, -0.05206844583153725, -1.2656145095825195, -0.46019595861434937, -0.0037592235021293163, -0.031230010092258453, -0.14047349989414215, -0.012789958156645298, -0.00013302871957421303, -0.004626759793609381, -0.003552437527105212, -1.1801649634435307e-05, -2.3841855067985307e-07, 0.0, -0.0015785150462761521, -0.00017045476124621928, -0.00033480284037068486, -0.29523423314094543, -1.311301275563892e-06, -0.0011537569807842374, -0.298599511384964, -0.19112901389598846, -0.21445214748382568, -1.3333402872085571, -0.0009509570081718266, -0.0016312400111928582, -0.0013302058214321733, -0.0008136299438774586, -1.8358061424805783e-05, -0.04212230443954468, -0.00033361115492880344, -0.0008575814426876605, -5.960462772236497e-07, -1.311301275563892e-06, -0.0002127659390680492, -0.0001705739414319396, -3.111314072157256e-05, -0.0008985534077510238, -0.0005750194541178644, -2.0455245971679688, -8.344646857949556e-07, -8.344646857949556e-07, -0.000894027529284358, -6.437280717364047e-06], "finish_reason": "length"}], "metrics": {"energy": 857.3803812065132, "energy_per_token": 3.3491421140879423, "time": 21.648212, "time_per_token": 0.084563328125}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"The specified directory '{directory}' does not exist.\")\n\n    all_counts = Counter()\n    for ext in extensions:\n        count = sum(1 for file in glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True) if os.path.isfile(file))\n        all_counts[ext] = count\n\n    if not keep_zero:\n        all_counts = Counter({k: v for k, v in all_counts.items() if v > 0})\n\n    return all_counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " specified", " directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "all", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "count", " =", " sum", "(", "1", " for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", " if", " os", ".", "path", ".", "is", "file", "(", "file", "))", "\n", "        ", "all", "_", "counts", "[", "ext", "]", " =", " count", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "all", "_", "counts", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " all", "_", "counts", ".", "items", "()", " if", " v", " >", " ", "0", "})", "\n", "\n", "    ", "return", " all", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -1.233657956123352, -0.7367466688156128, -0.008046472445130348, -0.9565602540969849, -0.00015090756642166525, -0.0008021951070986688, -0.0007063039811328053, -0.010335021652281284, -0.00012170527770649642, -0.0004198861715849489, -0.16932041943073273, -0.004421339835971594, -0.0004544417606666684, -0.00039188333903439343, -0.10847757756710052, -0.000476246903417632, -4.3873090744018555, -0.033798947930336, -2.9909043312072754, -0.004656186792999506, -0.1253143846988678, -0.047805532813072205, -0.03794179856777191, -0.6189491152763367, -0.10825497657060623, -0.3688809871673584, -0.0014416311169043183, -0.014341377653181553, -0.0012943708570674062, -0.0034857960417866707, -0.0007674132939428091, -1.7104308605194092, -0.05569715052843094, -0.6895098686218262, -0.10436883568763733, -0.5102555751800537, -0.0002466136065777391, -2.126814603805542, -0.03240186348557472, -0.008486044593155384, -1.2159273865108844e-05, -0.6301100850105286, -0.00023266946664080024, -0.8828371167182922, -1.7881377516459906e-06, -9.894321920000948e-06, -3.4570634852570947e-06, -0.0011124381562694907, -0.0002543602604418993, -0.004635422024875879, -0.0001784403866622597, -0.17604614794254303, -0.23084288835525513, -0.019827619194984436, -0.006883005611598492, -0.0005931286723352969, -0.0002094287920044735, -0.00048029806930571795, -0.0015100754098966718, -0.00011824862303910777, -0.0009388091857545078, -8.356221951544285e-05, -0.00025960413040593266, -0.05868914723396301, -0.13582514226436615, -0.01858324185013771, -1.2516897186287679e-05, -0.00024136967840604484, -1.5497195136049413e-06, -0.008401289582252502, -3.9219088648678735e-05, -0.0002795067266561091, -0.0009592937421984971, -0.001453653909265995, -0.002846239833161235, -0.008934756740927696, -0.41580405831336975, -5.960462772236497e-07, -4.6491513785440475e-06, -0.06203484162688255, -0.0035839155316352844, -0.004376595374196768, -0.3692695200443268, -0.0016945539973676205, -0.017808541655540466, -0.04761163517832756, -0.0005839549703523517, -0.12698842585086823, -0.12990380823612213, -0.00039569655200466514, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.0014602008741348982, -0.0035878352355211973, -0.0004328744253143668, -0.028332365676760674, -1.1920922133867862e-06, -1.5735502529423684e-05, -0.2510816752910614, -0.30214542150497437, -0.015115833841264248, -1.5134339332580566, -0.0002449450839776546, -0.06937706470489502, -1.811964830267243e-05, -0.0009058186551555991, -7.629365427419543e-06, -0.0007404923089779913, -3.242440288886428e-05, -0.0005342725198715925, -1.1920928244535389e-07, -2.861018856492592e-06, -0.00018761781393550336, -6.8662193370983e-05, -6.198863957251888e-06, -3.397406908334233e-05, -0.00010609064338495955, -0.41812020540237427, -4.8040190449682996e-05, -1.966933996300213e-05, -0.00041416651220060885, -0.007525901775807142, -0.020543769001960754, -0.0002623452164698392, -0.016393965110182762, -0.005899398121982813, -3.3378546504536644e-06, -3.576278118089249e-07, -1.5933877229690552, -3.933898824470816e-06, -1.0728830375228426e-06, -2.861018856492592e-06, -2.5033637939486653e-05, -0.13705626130104065], "finish_reason": "stop"}], "metrics": {"energy": 557.4649600524904, "energy_per_token": 3.6199023380031843, "time": 12.832725, "time_per_token": 0.08332938311688312}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory {directory} does not exist.\")\n    counts = Counter()\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        counts[ext] += len(file_list)\n    if not keep_zero:\n        counts += Counter()\n    return counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " {", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "counts", "[", "ext", "]", " +=", " len", "(", "file", "_", "list", ")", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counts", " +=", " Counter", "()", "\n", "    ", "return", " counts"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -0.689651608467102, -1.4917412996292114, -0.0020392590668052435, -0.0160500667989254, -0.09667627513408661, -0.0001578206429257989, -0.00215429300442338, -0.5548557043075562, -0.002814144128933549, -0.00024732868769206107, -0.0005669178790412843, -2.1289894580841064, -2.083249568939209, -0.007634746376425028, -0.014294489286839962, -0.0998152494430542, -0.008888322860002518, -0.02892259694635868, -0.06710349768400192, -0.2658722698688507, -0.0006985607906244695, -0.0068922401405870914, -0.0005831210291944444, -0.001877094735391438, -0.0009401192655786872, -2.218453884124756, -0.06825868785381317, -2.4504284858703613, -0.0014886498684063554, -0.020393922924995422, -2.52720492426306e-05, -0.013655813410878181, -0.0006754500791430473, -0.4843689203262329, -7.152555099310121e-07, -1.8715683836489916e-05, -5.125986263010418e-06, -0.0008877150830812752, -0.00018940561858471483, -0.003933669533580542, -0.000254241080256179, -0.20078586041927338, -0.22939211130142212, -0.008368072099983692, -0.0026622111909091473, -0.000993830617517233, -0.000554288737475872, -0.000811366830021143, -0.0018328310688957572, -0.00012659224739763886, -0.0005769256968051195, -0.00020525732543319464, -0.000505677133332938, -0.001256867777556181, -0.007520340848714113, -0.001313776709139347, -0.04444727301597595, -0.021865488961338997, -0.003842472331598401, -0.005975359119474888, -0.7750680446624756, -0.003102491609752178, -0.0011857867939397693, -0.0023600601125508547, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.00013386306818574667, -0.003842709818854928, -0.04453039541840553, -0.06603312492370605, -0.035856761038303375, -0.00023398046323563904, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0008451942121610045, -0.004288880620151758, -0.0005931286723352969, -0.0679229274392128, -2.897481918334961, -0.00016675988445058465, -0.0004906642716377974, -0.23817475140094757, -0.00845353864133358, -0.004892639350146055, -0.015148358419537544], "finish_reason": "stop"}], "metrics": {"energy": 353.8444521121978, "energy_per_token": 3.3699471629733124, "time": 8.842211, "time_per_token": 0.08421153333333334}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        count = 0\n        for root, dirs, files in os.walk(directory):\n            count += sum(1 for _ in glob.glob(os.path.join(root, f\"*{ext}\")))\n        extension_counts[ext] = count\n\n    if not keep_zero:\n        extension_counts = Counter({k: c for k, c in extension_counts.items() if c > 0})\n\n    return extension_counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "extension", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "count", " =", " ", "0", "\n", "        ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "count", " +=", " sum", "(", "1", " for", " _", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", " f", "\"", "*{", "ext", "}\"", ")))", "\n", "        ", "extension", "_", "counts", "[", "ext", "]", " =", " count", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extension", "_", "counts", " =", " Counter", "({", "k", ":", " c", " for", " k", ",", " c", " in", " extension", "_", "counts", ".", "items", "()", " if", " c", " >", " ", "0", "})", "\n", "\n", "    ", "return", " extension", "_", "counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -1.611983060836792, -0.6515209674835205, -0.3731635808944702, -0.00016532962035853416, -0.0006524579366669059, -0.0012449617497622967, -0.011428014375269413, -0.00011085849109804258, -0.0009991897968575358, -0.07331790775060654, -0.006042545661330223, -0.0003133521240670234, -0.0004786299541592598, -0.12014292180538177, -0.00041940953815355897, -2.819148540496826, -0.0014638908905908465, -0.1509939432144165, -0.0006086166249588132, -0.03441072255373001, -0.16523703932762146, -0.010272606275975704, -0.6318060159683228, -0.10365837812423706, -0.42058390378952026, -0.0006802152493037283, -0.004320335108786821, -0.0007516896002925932, -0.002617150079458952, -0.0009901388548314571, -3.61102294921875, -0.031453680247068405, -2.1618666648864746, -0.0002910667099058628, -0.0026052603498101234, -0.011614207178354263, -0.17997409403324127, -0.38968122005462646, -0.0004592079494614154, -0.8620821833610535, -0.0004931663861498237, -2.52720492426306e-05, -0.003119604429230094, -0.0001280225842492655, -0.0003946240758523345, -2.2053474822314456e-05, -1.6331539882230572e-05, -0.0002169373765354976, -0.0014481781981885433, -0.029300067573785782, -0.003940200433135033, -0.00047708096099086106, -0.8377773761749268, -0.0013808010844513774, -1.084301233291626, -0.04820389300584793, -0.6039190292358398, -0.0005018643569201231, -1.3604090213775635, -0.001848180778324604, -0.008316882885992527, -8.272782724816352e-05, -1.474198818206787, -0.024980859830975533, -0.02659069187939167, -1.8000440832111053e-05, -7.748573807475623e-06, -5.364403477869928e-06, -0.00017629499780014157, -4.3987260141875595e-05, -0.0012030514189973474, -4.9232225137529895e-05, -0.02133922651410103, -0.43994832038879395, -0.17013980448246002, -0.0006939148879610002, -0.005012089852243662, -0.08525577932596207, -0.003952905535697937, -0.04009751230478287, -0.04675411060452461, -2.0265558760002023e-06, -2.7418097943154862e-06, -0.03951842710375786, -0.0014778178883716464, -0.004079116974025965, -0.020101288333535194, -0.00014494798961095512, -0.011973768472671509, -0.06262163817882538, -0.0009965697536244988, -0.08469405770301819, -0.08321882039308548, -0.00031585473334416747, -1.1920928244535389e-07, -5.960462772236497e-07, -0.0017878514481708407, -0.0021550068631768227, -0.00020585325546562672, -0.03797714784741402, -2.0265558760002023e-06, -4.6491513785440475e-06, -0.03658968582749367, -0.19686730206012726, -0.03906523436307907, -0.7906785011291504, -0.00019822540343739092, -2.969320058822632, -0.0013221102999523282, -0.0010723085142672062, -4.6491513785440475e-06, -0.0006441186997108161, -1.3232143828645349e-05, -5.23315102327615e-05, -2.3841855067985307e-07, -1.1920922133867862e-06, -0.00022754464589525014, -0.00018249277491122484, -4.887569048150908e-06, -0.0002824861148837954, -0.00044967554276809096, -0.28095677495002747, -0.00035422726068645716, -2.062299427052494e-05, -0.0004287039046175778, -0.001848180778324604, -0.022219866514205933, -0.0001472126314183697, -0.008219582028687, -0.004338495433330536, -3.576272320060525e-06, -7.152555099310121e-07, -1.694431185722351, -5.006777428206988e-06, -9.536738616588991e-07, -2.9802276912960224e-06, -2.52720492426306e-05, -0.13701780140399933], "finish_reason": "stop"}], "metrics": {"energy": 525.2832604675292, "energy_per_token": 3.345753251385536, "time": 13.042108, "time_per_token": 0.08307075159235669}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"Directory not found\")\n    counter = Counter()\n    for ext in extensions:\n        counter[ext] += len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n    if not keep_zero:\n        counter = Counter({ext: count for ext, count in counter.items() if count != 0})\n    return counter", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Directory", " not", " found", "\"", ")", "\n", "    ", "counter", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "counter", "[", "ext", "]", " +=", " len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", "))", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counter", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " counter", ".", "items", "()", " if", " count", " ", "!", "=", " ", "0", "})", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -0.445766806602478, -1.7704410552978516, -0.0027042983565479517, -0.9484355449676514, -0.002952741924673319, -0.0023648173082619905, -1.9959617853164673, -2.266202688217163, -0.027278700843453407, -0.012901291251182556, -0.04998240992426872, -0.007550037931650877, -0.033956822007894516, -0.08433353155851364, -0.43148788809776306, -0.0010281282011419535, -0.005360989365726709, -0.0006276782951317728, -0.002075543161481619, -0.0010480155469849706, -1.452355980873108, -0.08378477394580841, -0.0019595485646277666, -0.022786332294344902, -0.350398987531662, -0.114193856716156, -0.0030377216171473265, -0.08117561787366867, -2.2291887944447808e-05, -9.953480184776708e-05, -0.002406084444373846, -0.34169575572013855, -1.847726889536716e-05, -2.5748875486897305e-05, -2.3483953555114567e-05, -0.0011810240102931857, -0.0002554328821133822, -0.004321285057812929, -0.00026973424246534705, -0.2934471368789673, -0.1861676275730133, -0.013891088776290417, -0.0029264739714562893, -0.0008503158460371196, -0.00043335105874575675, -0.0008648469229228795, -0.0029356263112276793, -0.00013648532330989838, -0.0013369916705414653, -0.0002562671434134245, -0.000395815703086555, -0.00042465253500267863, -0.0017047885339707136, -0.03515471890568733, -0.06582207977771759, -0.04935024678707123, -0.00022897482267580926, -9.536738616588991e-07, -5.960462772236497e-07, -0.0020599591080099344, -0.0026129886973649263, -0.00039962888695299625, -0.11150141805410385, -0.24942860007286072, -0.2559955418109894, -0.022155974060297012, -0.8024967312812805, -0.0004499138449318707, -0.024257875978946686, -0.0001287377526750788, -0.0008860476082190871, -2.8371408916427754e-05, -0.0003813969960901886, -8.940656698541716e-06, -0.0006140968762338161, -0.0001662831346038729, -0.0001938155182870105, -1.0371154530730564e-05, -0.000125281119835563, -0.00016819016309455037, -1.6868432760238647, -4.768370445162873e-07, -3.576278118089249e-07, -0.00043275527423247695, -4.172316494077677e-06, -0.0004533693427219987, -0.00235565984621644, -0.005990645382553339, -0.005944667384028435, -0.0030603024642914534, -0.5150644183158875, -0.017973294481635094, -0.7925567030906677], "finish_reason": "stop"}], "metrics": {"energy": 407.97529886054997, "energy_per_token": 3.6754531428878376, "time": 9.248459, "time_per_token": 0.08331945045045046}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory not found: {directory}\")\n\n    file_counts = Counter()\n    for ext in extensions:\n        for file in glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True):\n            file_counts[ext] += 1\n\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n\n    return file_counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " not", " found", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "file", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", "):", "\n", "            ", "file", "_", "counts", "[", "ext", "]", " +=", " ", "1", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "file", "_", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " file", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "    ", "return", " file", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -2.6820361614227295, -0.004630556795746088, -0.009492382407188416, -0.008380956947803497, -0.0007202415145002306, -0.004533370956778526, -0.00020180096908006817, -0.0006553170969709754, -0.0802362859249115, -0.0003695997002068907, -1.3277428150177002, -0.008234833367168903, -0.20168833434581757, -0.001384372473694384, -0.012849509716033936, -0.060386400669813156, -0.008880406618118286, -0.6819803714752197, -0.09709425270557404, -0.33139175176620483, -0.00044943721150048077, -0.0040666512213647366, -0.0006876011611893773, -0.0027035849634557962, -0.0007153574260883033, -3.146589756011963, -1.6501508951187134, -0.37120211124420166, -0.007020685356110334, -2.610649426060263e-05, -0.26954248547554016, -0.0003669780562631786, -1.0216608047485352, -7.152555099310121e-07, -1.2636104656849056e-05, -1.5497195136049413e-06, -0.0013998481445014477, -0.0002774807217065245, -0.0023517352528870106, -0.0002196785935666412, -0.32272183895111084, -0.23560355603694916, -0.00833154283463955, -0.001321515068411827, -0.0007927850820124149, -0.0005974177038297057, -0.0006011109799146652, -0.0022540895733982325, -7.807903602952138e-05, -0.00020811776630580425, -8.070142939686775e-05, -0.000403084559366107, -0.001179595128633082, -0.0018365198047831655, -0.0015268584247678518, -0.3789878487586975, -0.00019774865359067917, -0.0037068482488393784, -0.020562104880809784, -0.0197045486420393, -0.008557554334402084, -0.0002575780963525176, -0.009853532537817955, -4.136476854910143e-05, -0.004232615698128939, -0.04315965250134468, -0.001999523490667343, -0.15035730600357056, -0.05021881312131882, -0.0005899119423702359, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.002055438468232751, -0.0032998654060065746, -0.0003532739356160164, -0.0650244951248169, -2.3841830625315197e-06, -0.0001541257370263338, -0.34517180919647217, -0.14394910633563995, -0.047200191766023636, -0.37957775592803955, -0.00022516099852509797, -0.01043341588228941, -0.0002554328821133822, -0.0002783149539027363, -2.062299427052494e-05, -0.00715680792927742, -2.396077979938127e-05, -0.00035279724397696555, -3.576278118089249e-07, -3.576278118089249e-07, -8.487341256113723e-05, -0.00011848701251437888, -8.4638240878121e-06, -0.00020644917094614357, -0.0002273062855238095, -0.09900762140750885, -8.785339014139026e-05, -3.218599158572033e-05, -0.0005833592731505632, -0.0013572300085797906, -0.017120428383350372, -0.00015925093612167984, -0.007660299073904753, -0.00433991989120841, -1.7881377516459906e-06, -3.3378546504536644e-06, -0.4110696017742157, -0.012620463967323303, -0.6968112587928772], "finish_reason": "stop"}], "metrics": {"energy": 448.31753515052804, "energy_per_token": 3.422271260691054, "time": 10.946398, "time_per_token": 0.08356029007633588}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist\")\n\n    if not keep_zero:\n        extensions = [ext for ext in extensions if os.path.exists(f\"{directory}/*{ext}\")]\n\n    extensions = [ext.lower() if ext[0] == \".\" else f\".{ext.lower()}\" for ext in extensions]\n    extensions = [ext for ext in extensions if os.path.exists(f\"{directory}/*{ext}\")]\n    extensions = [ext for ext in extensions if any(glob.glob(f\"{directory}/*{ext}\"))]\n    extensions = [ext for ext in extensions if any(glob.glob(f\"{directory}/**/*{ext}\", recursive=True))]\n\n    result = Counter()\n    for ext in extensions:\n        for file in glob.glob(f\"{directory}/**/*{ext}\", recursive=True):\n            if os.path.isfile(file):\n                result[ext] += 1\n\n    if not keep_zero:\n        ", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " {", "directory", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extensions", " =", " [", "ext", " for", " ext", " in", " extensions", " if", " os", ".", "path", ".", "exists", "(", "f", "\"", "{", "directory", "}", "/*", "{", "ext", "}\"", ")]", "\n", "\n", "    ", "extensions", " =", " [", "ext", ".", "lower", "()", " if", " ext", "[", "0", "]", " ==", " \"", ".", "\"", " else", " f", "\"", ".", "{", "ext", ".", "lower", "()", "}\"", " for", " ext", " in", " extensions", "]", "\n", "    ", "extensions", " =", " [", "ext", " for", " ext", " in", " extensions", " if", " os", ".", "path", ".", "exists", "(", "f", "\"", "{", "directory", "}", "/*", "{", "ext", "}\"", ")]", "\n", "    ", "extensions", " =", " [", "ext", " for", " ext", " in", " extensions", " if", " any", "(", "glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/*", "{", "ext", "}\"", "))", "]", "\n", "    ", "extensions", " =", " [", "ext", " for", " ext", " in", " extensions", " if", " any", "(", "glob", ".", "glob", "(", "f", "\"", "{", "directory", "}/", "**", "/*", "{", "ext", "}\"", ",", " recursive", "=", "True", "))", "]", "\n", "\n", "    ", "result", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}/", "**", "/*", "{", "ext", "}\"", ",", " recursive", "=", "True", "):", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "result", "[", "ext", "]", " +=", " ", "1", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        "], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -1.2460429668426514, -0.0012168630491942167, -0.011521704494953156, -0.07177940756082535, -0.00011920218821614981, -0.0011825718684121966, -1.0810431241989136, -0.00022671037004329264, -0.00044907975825481117, -0.16123948991298676, -0.00048423008411191404, -3.3762216567993164, -0.4871847331523895, -1.5069384574890137, -3.2186455882765586e-06, -3.814689989667386e-06, -0.00400135014206171, -0.011318521574139595, -0.00158565619494766, -0.36539456248283386, -0.06352999806404114, -0.7042108178138733, -0.3997015357017517, -0.0028532531578093767, -0.0003971264814026654, -0.0002162222663173452, -0.00678153894841671, -0.0014671048847958446, -3.6101536750793457, -5.745722592109814e-05, -0.017536938190460205, -1.680836794548668e-05, -0.08821205794811249, -0.0011632826644927263, -1.4487640857696533, -0.04776393994688988, -0.014379803091287613, -0.0036320213694125414, -1.221031665802002, -0.07938437908887863, -0.005999295506626368, -0.0005007919971831143, -0.0038574349600821733, -0.004022602923214436, -0.004349533934146166, -0.07617122679948807, -0.000824349990580231, -2.416910171508789, -0.6692051887512207, -0.15295688807964325, -0.355663925409317, -0.47697338461875916, -0.05426463857293129, -0.0001072826053132303, -2.897474765777588, -0.6415582895278931, -1.4290188550949097, -0.0003693613689392805, -0.0009190387791022658, -0.7564599514007568, -0.7948959469795227, -0.0038783347699791193, -1.2755313036905136e-05, -0.0007607426377944648, -0.5997776389122009, -0.0008756855386309326, -0.0074363332241773605, -3.540453326422721e-05, -0.0003228858404327184, -0.12422202527523041, -8.165503095369786e-05, -0.00024923557066358626, -0.00011955977242905647, -0.004448992665857077, -6.556489552167477e-06, -2.3245540432981215e-05, -0.0007452571298927069, -0.0035833215806633234, -0.033341195434331894, -1.0003900527954102, -2.012101173400879, -0.5267736315727234, -0.3555043637752533, -0.4222564697265625, -0.20903907716274261, -0.0002588890492916107, -0.00041261743172071874, -0.010722994804382324, -0.0011514945654198527, -0.47403305768966675, -8.415821503149346e-05, -0.0006675875629298389, -6.198863957251888e-06, -0.01551897544413805, -4.2199197196168825e-05, -0.005031779408454895, -0.00024768622824922204, -7.712543447269127e-05, -5.936446541454643e-05, -0.015095989219844341, -0.0010969580616801977, -0.0003137096355203539, -0.0001289761275984347, -0.00303082843311131, -0.0030838334932923317, -0.009913377463817596, -1.7072563171386719, -1.4761427640914917, -0.5276155471801758, -0.4673018455505371, -0.3765953481197357, -0.40568673610687256, -0.0010397987207397819, -0.00112160702701658, -0.015179943293333054, -0.01129824761301279, -2.678210735321045, -0.06552279740571976, -0.44141578674316406, -0.0008895016508176923, -0.013104388490319252, -0.0013546108966693282, -0.16584812104701996, -0.002542122732847929, -0.021760981529951096, -0.004820273723453283, -0.6153945326805115, -0.04908764362335205, -0.00913582555949688, -0.0005876483046449721, -0.06325767189264297, -0.15063707530498505, -0.001611483283340931, -0.01632922887802124, -1.5916181802749634, -0.4743865132331848, -0.06593134254217148, -0.11823772639036179, -0.08099446445703506, -0.038533151149749756, -0.000837571220472455, -6.806619057897478e-05, -0.001763337990269065, -0.002824010793119669, -0.2775576412677765, -0.11040421575307846, -0.46237877011299133, -0.0002094287920044735, -0.14129191637039185, -0.0013492538128048182, -0.03912954777479172, -0.0009701313101686537, -0.021010568365454674, -0.002395143499597907, -0.16731151938438416, -0.011844662018120289, -0.01313521433621645, -0.00024029705673456192, -1.9550132492440753e-05, -0.0008594871615059674, -0.17388443648815155, -0.0006123098428361118, -0.0004538459761533886, -0.0011605439940467477, -0.0001679517881711945, -0.00017891713650897145, -0.004895842168480158, -0.3310801684856415, -0.0005133026279509068, -4.021050930023193, -0.05040869116783142, -0.059545937925577164, -0.28984466195106506, -0.0014023480471223593, -0.14028610289096832, -0.035784877836704254, -0.04530644044280052, -0.0007630059262737632, -0.005999295506626368, -0.0002562671434134245, -0.0002401778765488416, -0.001312586129643023, -3.1172749996185303, -1.032846212387085, -0.15378139913082123, -0.013687445782124996, -0.00010096516780322418, -0.09578313678503036, -0.00012718822108581662, -0.0059722778387367725, -0.001520192832686007, -0.0029261175077408552, -2.276871418871451e-05, -0.1370733082294464, -0.0008218486327677965, -0.00035851728171110153, -0.004488274920731783, -3.1470757676288486e-05, -0.004244130104780197, -0.0011555430246517062, -8.070142939686775e-05, -3.0636318115284666e-05, -0.0006404255982488394, -0.0004848258395213634, -0.0008015995263122022, -0.0012911563972011209, -0.8527231812477112, -0.0705338567495346, -6.794906312279636e-06, -0.0007583603146485984, -7.152555099310121e-07, -0.11791304498910904, -0.0016110072610899806, -0.001312943291850388, -0.0012411518255248666, -0.040477316826581955, -0.0012863941956311464, -0.0002915434306487441, -0.0121683394536376, -0.07344429939985275, -0.007820936851203442, -0.03799344226717949, -0.0005814530304633081, -0.0018970841774716973, -2.6702524337451905e-05, -0.0019963113591074944, -0.16617749631404877, -0.0029021073132753372, -1.7513206005096436, -0.4086702764034271, -0.020415764302015305, -5.960462772236497e-07, -2.7418097943154862e-06, -0.011947030201554298, -0.0015912501839920878, -0.000259723310591653], "finish_reason": "length"}], "metrics": {"energy": 875.4203977336883, "energy_per_token": 3.41961092864722, "time": 21.653574, "time_per_token": 0.0845842734375}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(\"Directory does not exist\")\n\n    extension_counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, f\"**/*{ext}\")\n        extension_counts[ext] += len(glob.glob(pattern, recursive=True))\n\n    if not keep_zero:\n        extension_counts = Counter(\n            {\n                ext: count\n                for ext, count in extension_counts.items()\n                if count != 0\n            }\n        )\n\n    return extension_counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "extension", "_", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "pattern", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", "\n", "        ", "extension", "_", "counts", "[", "ext", "]", " +=", " len", "(", "glob", ".", "glob", "(", "pattern", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extension", "_", "counts", " =", " Counter", "(", "\n", "            ", "{", "\n", "                ", "ext", ":", " count", "\n", "                ", "for", " ext", ",", " count", " in", " extension", "_", "counts", ".", "items", "()", "\n", "                ", "if", " count", " ", "!", "=", " ", "0", "\n", "            ", "}", "\n", "        ", ")", "\n", "\n", "    ", "return", " extension", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -1.1488237380981445, -0.8974010348320007, -0.47017550468444824, -0.00022682955022901297, -0.0015301911626011133, -0.7065812945365906, -0.0015847040340304375, -0.001741203828714788, -0.157353937625885, -0.0005479741375893354, -2.8536877632141113, -0.003668722929432988, -0.1756533980369568, -0.0007205988513305783, -0.04537251591682434, -0.3356277048587799, -0.008904391899704933, -0.6024807095527649, -0.07560493052005768, -0.3884776830673218, -0.0010599239030852914, -0.004941512830555439, -0.0008167268824763596, -0.002559007378295064, -0.001157924416474998, -1.1590297222137451, -0.0007008241955190897, -0.24992099404335022, -1.0371154530730564e-05, -3.8980677345534787e-05, -9.417489309271332e-06, -0.002852777484804392, -0.00025233422638848424, -0.005036761052906513, -0.0003762729174923152, -0.45053404569625854, -0.09764549136161804, -0.015137438662350178, -0.00961848720908165, -0.00032634177478030324, -0.0012760362587869167, -0.0011093420907855034, -0.0062780785374343395, -0.01633450761437416, -0.003008722560480237, -0.6013697385787964, -2.610649426060263e-05, -0.013835126534104347, -0.027069875970482826, -0.0011157722910866141, -0.00419130502268672, -0.7106171250343323, -0.10014133900403976, -0.0019263536669313908, -0.025164894759655, -5.8412379075889476e-06, -0.0004012971476186067, -5.6622808187967166e-05, -0.0009425011812709272, -0.00199250434525311, -0.0001294529065489769, -0.00013350549852475524, -0.0002540027489885688, -0.0006413786904886365, -0.0011606630869209766, -0.03336828947067261, -0.0011501847766339779, -0.09366799145936966, -0.07966755330562592, -0.00033706706017255783, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0017924923449754715, -0.0026985916774719954, -0.0002892790944315493, -0.03126594424247742, -3.576272320060525e-06, -1.2874520507466514e-05, -0.15968507528305054, -0.24902592599391937, -2.8503496646881104, -0.11843757331371307, -0.0019268295727670193, -0.0036973466631025076, -1.8518896102905273, -0.00011622230522334576, -0.6502519845962524, -0.0007135705673135817, -0.013123448938131332, -0.025850284844636917, -9.179073458653875e-06, -0.00011526874004630372, -0.00015424491721205413, -5.757642793469131e-05, -2.169585604860913e-05, -2.6940935640595853e-05, -0.0004059444472659379, -2.3841855067985307e-07, -2.3841855067985307e-07, -6.460934673668817e-05, -0.004748733714222908, -2.109982233378105e-05, -0.06555785238742828, -0.00015054999676067382, -0.0006036128615960479, -0.002646160777658224, -1.1652969121932983, -5.960462772236497e-07, -4.768370445162873e-07, -0.0003262225945945829, -8.940656698541716e-06, -0.02109437622129917, -0.0010833829874172807, -0.004076861310750246, -0.008780442178249359, -0.0019474128494039178, -1.549708758830093e-05, -0.0026462795212864876, -0.0689103901386261, -0.0006384003208950162, -0.007584466133266687, -0.0024207117967307568, -2.861018856492592e-06, -2.0265558760002023e-06, -0.5500224232673645, -0.010883613489568233, -0.656567394733429], "finish_reason": "stop"}], "metrics": {"energy": 535.5683854866024, "energy_per_token": 3.693575072321396, "time": 12.197308, "time_per_token": 0.08411936551724138}}
{"outputs": [{"text": "# Initialize an empty Counter object to store the counts\n    file_counts = Counter()\n\n    # Check if the specified directory exists\n    if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist.\")\n\n    # Iterate over the specified extensions to count the files\n    for extension in extensions:\n        file_counts[extension] += len(glob.glob(os.path.join(directory, f'**/*{extension}', recursive=True)))\n\n    # Return the Counter object with or without zero counts based on keep_zero\n    return Counter({ext: count for ext, count in file_counts.items() if count > 0 or keep_zero})", "tokens": ["#", " Initialize", " an", " empty", " Counter", " object", " to", " store", " the", " counts", "\n", "    ", "file", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " specified", " extensions", " to", " count", " the", " files", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "file", "_", "counts", "[", "extension", "]", " +=", " len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "'", "**", "/*", "{", "extension", "}'", ",", " recursive", "=", "True", ")))", "\n", "\n", "    ", "#", " Return", " the", " Counter", " object", " with", " or", " without", " zero", " counts", " based", " on", " keep", "_", "zero", "\n", "    ", "return", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " file", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", " or", " keep", "_", "zero", "})", "\n", "\n", "#"], "logprobs": [-1.9378695487976074, -3.1784310340881348, -1.701352596282959, -0.011658393777906895, -0.4960937201976776, -0.13666370511054993, -1.0627467632293701, -0.3684207499027252, -0.5184855461120605, -0.340661883354187, -0.37870651483535767, -0.001010503270663321, -1.728410243988037, -0.007828744128346443, -0.19214284420013428, -0.0015047191409394145, -0.0012431758223101497, -0.004405554849654436, -0.0008952185744419694, -0.11407177150249481, -0.00047255316167138517, -0.11823465675115585, -0.9054796099662781, -0.042864128947257996, -0.05578577145934105, -1.1813170909881592, -0.003710173536092043, -0.014486377127468586, -0.0782393366098404, -0.00039664984797127545, -0.007433611433953047, -0.03723708540201187, -0.003366875695064664, -7.867782187531702e-06, -0.0008094609947875142, -2.50339189733495e-06, -1.2465622425079346, -0.0001821352052502334, -7.843663479434326e-05, -0.0004188137245364487, -0.000256982195423916, -0.0005141366855241358, -0.000929281348362565, -0.019321799278259277, -0.005762274842709303, -3.576278118089249e-07, 0.0, -0.025653710588812828, -0.48962798714637756, -0.024035152047872543, -0.38915613293647766, -0.45485320687294006, -5.07818695041351e-05, -0.0005769256968051195, -0.0007626485894434154, -0.060252845287323, -5.400034933700226e-05, -0.0004992430913262069, -0.19377082586288452, -0.003054241416975856, -0.00011824862303910777, -0.00031382881570607424, -0.005471373908221722, -0.0004010588163509965, -0.016265427693724632, -1.1142430305480957, -0.00045885046711191535, -0.440912127494812, -0.5269825458526611, -0.4405269920825958, -0.35274243354797363, -2.963070869445801, -0.3744508624076843, -1.5504865646362305, -0.11181987076997757, -0.210357204079628, -0.00021920185827184469, -0.006634589284658432, -0.8964385390281677, -9.905801562126726e-05, -0.0033887361641973257, -0.00011622230522334576, -0.00010108436981681734, -0.0020511557813733816, -2.6637861728668213, -0.00632072426378727, -1.2955443859100342, -0.012238644063472748, -0.0014855550834909081, -0.012065640650689602, -0.9537925720214844, -0.1737724244594574, -0.0012759171659126878, -0.2614935338497162, -1.966933996300213e-05, -7.497983460780233e-05, -0.003726207185536623, -0.44847822189331055, -6.318072337307967e-06, -7.867782187531702e-06, -9.16677454370074e-05, -0.0003651905863080174, -0.00019822540343739092, -0.004125181119889021, -0.00017355366435367614, -0.16955529153347015, -1.1623001098632812, -0.02064221352338791, -0.002263604663312435, -0.0020695950370281935, -0.00013469743134919554, -0.2599858343601227, -1.3442002534866333, -0.16514891386032104, -0.0006986799417063594, -0.001413180842064321, -0.0030835960060358047, -0.0036210936959832907, -0.012104624882340431, -0.0039451876655220985, -0.0570448599755764, -3.2301185131073, -0.17470359802246094, -1.5314702987670898, -0.10777934640645981, -0.8741196990013123, -2.5792181491851807, -2.992108420585282e-05, -0.6802291870117188, -0.058829206973314285, -0.6778344511985779, -0.00035124807618558407, -1.6422183513641357, -0.0002739054325502366, -0.0001793938863556832, -0.522951066493988, -0.0003951007383875549, -0.13704970479011536, -2.436122179031372, -0.6156927347183228, -1.5018080472946167, -0.00048530244384892285, -0.03403736650943756, -0.0016469499096274376, -0.00012432756193447858, -8.165503095369786e-05, -0.0005936052766628563, -8.034383063204587e-05, -0.0013517538318410516, -5.960462772236497e-07, -2.145764938177308e-06, -5.411955135059543e-05, -0.0012162677012383938, -5.304672595229931e-05, -0.0008696111617609859, -0.4701623320579529, -0.4592665433883667, -0.001091599464416504, -4.732496745418757e-05, -0.033270858228206635, -0.007475143298506737, -3.933898824470816e-06, -5.960462772236497e-07, -0.004951951093971729, -0.4245681166648865, -0.01749488338828087, -1.234136939048767], "finish_reason": "stop"}], "metrics": {"energy": 596.0144483203884, "energy_per_token": 3.5689487923376553, "time": 14.093007, "time_per_token": 0.0843892634730539}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    total_counts = Counter()\n\n    for ext in extensions:\n        file_pattern = f\"{directory}/**/*{ext}\"\n        file_counts = Counter(glob.glob(file_pattern, recursive=True))\n        total_counts += file_counts\n\n    if not keep_zero:\n        total_counts = +total_counts  # Remove zero counts\n\n    return total_counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "total", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "pattern", " =", " f", "\"", "{", "directory", "}/", "**", "/*", "{", "ext", "}\"", "\n", "        ", "file", "_", "counts", " =", " Counter", "(", "glob", ".", "glob", "(", "file", "_", "pattern", ",", " recursive", "=", "True", "))", "\n", "        ", "total", "_", "counts", " +=", " file", "_", "counts", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "total", "_", "counts", " =", " +", "total", "_", "counts", "  ", "#", " Remove", " zero", " counts", "\n", "\n", "    ", "return", " total", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -1.233657956123352, -0.7009800672531128, -0.48711228370666504, -0.00025662468397058547, -0.0010240792762488127, -0.0013059191405773163, -0.0185234472155571, -0.00013910756388213485, -0.000912369170691818, -0.11326450854539871, -0.0063714231364429, -0.0002806984703056514, -0.00041476229671388865, -0.12020391970872879, -0.0004654039512388408, -4.361374378204346, -0.05601911619305611, -1.0051844120025635, -0.0036326153203845024, -0.01957351341843605, -0.027425315231084824, -0.021090758964419365, -0.5773214101791382, -0.00021109737281221896, -0.12114300578832626, -0.33349668979644775, -0.0012367465533316135, -0.007683604024350643, -0.0006778326351195574, -0.001793087343685329, -0.0006993946735747159, -1.5356037616729736, -0.027957426384091377, -0.6907740235328674, -0.0003491030656732619, -1.3833508491516113, -0.056768953800201416, -0.5742444396018982, -0.026987958699464798, -0.11747484654188156, -0.002195806708186865, -0.0028242485132068396, -0.002819374669343233, -0.0015438791597262025, -0.002009160118177533, -0.06552134454250336, -0.014205290004611015, -0.8753284811973572, -0.003350836457684636, -1.121230959892273, -0.006279736757278442, -0.2881614863872528, -0.07501398026943207, -0.03440231457352638, -8.129743218887597e-05, -0.029143076390028, -0.0001037067049765028, -0.0017754758009687066, -3.933898824470816e-06, -5.960462772236497e-07, -0.0019890540279448032, -0.0001081169830285944, -0.00012337400403339416, -0.0004499138449318707, -0.002581242239102721, -0.003777156351134181, -0.04078155755996704, -0.024753877893090248, -3.576278118089249e-07, -1.6331539882230572e-05, -1.1143624782562256, -0.008013006299734116, 0.0, -1.7881377516459906e-06, -0.0016874135471880436, -0.006477787159383297, -0.0012156723532825708, -0.14998562633991241, -0.08428137749433517, -0.00047946401173248887, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.002202229807153344, -0.002160240663215518, -0.00021705655672121793, -0.03668667748570442, -1.4305104514278355e-06, -3.58813522325363e-05, -0.9330930709838867, -1.409531593322754, -0.0038923469837754965, -8.344646857949556e-07, -3.3378546504536644e-06, -0.2419590801000595, -2.002696055569686e-05, -0.5760828852653503, -0.6882731914520264, -0.281355619430542, -0.13741406798362732, -0.010890216566622257, -0.00021264675888232887, -0.0079332971945405, -0.01238865777850151, -4.529942543740617e-06, -3.4570634852570947e-06, -0.45967021584510803, -0.011868222616612911, -0.7233856916427612], "finish_reason": "stop"}], "metrics": {"energy": 439.1392594547272, "energy_per_token": 3.4307754644900563, "time": 10.730154, "time_per_token": 0.083829328125}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    # Initialize a Counter object to keep track of counts\n    counts = Counter()\n\n    # Loop through each extension\n    for ext in extensions:\n        # Use glob to search for files with that extension in the directory and its subdirectories\n        files = glob.glob(os.path.join(directory, \"**\", f\"*{ext}\"), recursive=True)\n        # Add the count to the Counter object\n        counts[ext] += len(files)\n\n    # Remove extensions with zero counts if keep_zero is False\n    if not keep_zero:\n        counts = Counter({key: value for key, value in counts.items() if value > 0})\n\n    return counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "The", " specified", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " a", " Counter", " object", " to", " keep", " track", " of", " counts", "\n", "    ", "counts", " =", " Counter", "()", "\n", "\n", "    ", "#", " Loop", " through", " each", " extension", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "#", " Use", " glob", " to", " search", " for", " files", " with", " that", " extension", " in", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "**", "\"", ",", " f", "\"", "*{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "#", " Add", " the", " count", " to", " the", " Counter", " object", "\n", "        ", "counts", "[", "ext", "]", " +=", " len", "(", "files", ")", "\n", "\n", "    ", "#", " Remove", " extensions", " with", " zero", " counts", " if", " keep", "_", "zero", " is", " False", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counts", " =", " Counter", "({", "key", ":", " value", " for", " key", ",", " value", " in", " counts", ".", "items", "()", " if", " value", " >", " ", "0", "})", "\n", "\n", "    ", "return", " counts", "\n", "\n", "def"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -1.7007850408554077, -0.18395432829856873, -0.0009826361201703548, -0.007325928658246994, -0.00012313561455812305, -0.0003992714046034962, -0.2739217281341553, -0.004244248848408461, -0.0010515881003811955, -0.0004855407460127026, -0.0982581228017807, -0.00044490929576568305, -2.3499374389648438, -1.0291986465454102, -0.668250322341919, -0.37640270590782166, -0.18392972648143768, -0.3714076280593872, -1.2111847400665283, -0.022554190829396248, -0.0002299282787134871, -1.6145663261413574, -0.5153911709785461, -0.00023898606013972312, -0.7697221636772156, -0.0030972626991569996, -0.0014911495381966233, -0.032953593879938126, -0.0009305914281867445, -0.062497567385435104, -0.00019441144831944257, -0.15348605811595917, -1.4727858304977417, -0.3013131022453308, -0.3734019994735718, -0.5601146221160889, -1.6760284900665283, -3.862306402879767e-05, -0.0025127525441348553, -0.27183136343955994, -0.0005538121913559735, -0.0042246622033417225, -0.00014208737411536276, -5.495397272170521e-05, -0.00363558460958302, -0.09713103622198105, -0.4424108862876892, -0.069588802754879, -0.10200970619916916, -1.5863869190216064, -0.0395011231303215, -0.07857406884431839, -0.0674331784248352, -2.035618305206299, -0.0007746794726699591, -1.22371506690979, -0.023433296009898186, -0.3597303628921509, -0.4886765480041504, -0.11591622233390808, -0.0008871195605024695, -0.0587044358253479, -1.6093124941107817e-05, -0.02789297141134739, -0.0003455280384514481, -1.3911988735198975, -0.028576262295246124, -0.0034534833393990993, -2.90866428258596e-05, -0.020953718572854996, -0.0019720408599823713, -0.8480408191680908, -2.861018856492592e-06, -9.894321920000948e-06, -1.0728830375228426e-06, -0.0005856229108758271, -0.00030787018476985395, -0.0030780103988945484, -0.0005681092734448612, -1.2246999740600586, -0.0010994586627930403, -0.041508253663778305, -0.01619083061814308, -0.17504218220710754, -0.008775951340794563, -0.15769895911216736, -0.0006754500791430473, -0.0012823462020605803, -0.000964295701123774, -0.00017998983094003052, -0.0002165798214264214, -6.365573790390044e-05, -0.00035315475543029606, -0.0007252446957863867, -0.0016436175210401416, -0.14917194843292236, -0.3234387934207916, -2.3574585914611816, -0.026320185512304306, -0.14554888010025024, -1.3365638256072998, -0.005893472582101822, -0.05060306563973427, -0.2208435982465744, -0.14385247230529785, -0.00014697425649501383, -0.00387061620131135, -0.02380260080099106, -0.0010838593589141965, -0.0025177467614412308, -0.11379094421863556, -0.0006349454633891582, -0.0001559135998832062, -0.0005221195751801133, -2.0503786799963564e-05, -0.000791236583609134, -0.00861215777695179, -0.0016244561411440372, -0.09030118584632874, -1.5481774806976318, -0.15491925179958344, -0.02537783607840538, -0.03212380409240723, -0.18969890475273132, -0.27495473623275757, -0.0934130847454071, -0.00013457823661156, -0.0002674698771443218, -0.025669395923614502, -0.05835364758968353, -0.003246515290811658, -0.0001072826053132303, -0.0025548457633703947, -0.0037967516109347343, -7.152531907195225e-06, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0013548490824177861, -0.0001399419124936685, -0.0002796259068418294, -0.09117800742387772, -0.05208519101142883, -0.11407347023487091, -0.04579974338412285, -2.939148426055908, -0.00013517419574782252, -0.2930317521095276, -6.508615479106084e-05, -0.0009008163469843566, -1.7881377516459906e-06, -0.004010136239230633, -4.327203714638017e-05, -8.105902816168964e-05, -0.00013672371278516948, -3.45700973412022e-05, -6.318072337307967e-06, -0.00012790338951162994, -0.0002112165529979393, -0.5582090616226196, -0.00010358751023886725, -2.1219027985353023e-05, -0.00034254882484674454, -0.0010299145942553878, -0.011097141541540623, -0.000303818320389837, -0.073183074593544, -0.003534856950864196, -0.5404427647590637, -0.011901678517460823, -2.2129342555999756], "finish_reason": "stop"}], "metrics": {"energy": 662.5887398738857, "energy_per_token": 3.524408190818541, "time": 15.768732, "time_per_token": 0.08387623404255319}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"Directory not found\")\n    count = Counter()\n    for ext in extensions:\n        count[ext] += len(glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True))\n    if not keep_zero:\n        count += Counter()\n    return count", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Directory", " not", " found", "\"", ")", "\n", "    ", "count", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "count", "[", "ext", "]", " +=", " len", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", "))", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "count", " +=", " Counter", "()", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -0.445766806602478, -1.7704410552978516, -0.0027042983565479517, -0.9484355449676514, -0.002952741924673319, -0.0023648173082619905, -1.9959617853164673, -2.8095738887786865, -0.9498094320297241, -0.03494373708963394, -0.10978285223245621, -0.013447889126837254, -0.03981734812259674, -0.07982385158538818, -0.2181909829378128, -0.000990615226328373, -0.0060477592051029205, -0.0007454953738488257, -0.0014888879377394915, -0.0010495636379346251, -0.8924115896224976, -0.14002612233161926, -0.002410603454336524, -0.021622516214847565, -0.28095102310180664, -0.12834222614765167, -0.0032935680355876684, -0.1046183854341507, -2.372236667724792e-05, -0.00013445904187392443, -0.0029825749807059765, -0.2850634455680847, -3.194758028257638e-05, -2.396077979938127e-05, -3.099393507000059e-05, -0.0010755236726254225, -0.0002526917669456452, -0.0037475847639143467, -0.0003723404952324927, -0.3381095826625824, -0.1747197061777115, -0.012149261310696602, -0.003308420069515705, -0.0008374521275982261, -0.0004412154376041144, -0.0008054111385717988, -0.002964271232485771, -0.00015853578224778175, -0.0009873997187241912, -0.0002307625545654446, -0.00041309406515210867, -0.00044526674901135266, -0.002190573140978813, -0.026735085994005203, -0.08580537140369415, -0.044661395251750946, -0.00030214988510124385, -9.536738616588991e-07, -2.7418097943154862e-06, -0.002120153047144413, -0.002290722681209445, -0.00040797016117721796, -0.037734270095825195, -2.997966766357422, -0.0065987068228423595, -0.010005557909607887, -0.1479552537202835, -0.007336934097111225, -0.005779223516583443, -0.022470969706773758, -0.5314213633537292, -0.0213277917355299, -0.9736095070838928], "finish_reason": "stop"}], "metrics": {"energy": 304.3547103605272, "energy_per_token": 3.34455725670909, "time": 7.5637107, "time_per_token": 0.0831177}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"Directory '{directory}' does not exist\")\n\n    # Create a Counter object to store file counts\n    file_counts = Counter()\n\n    for ext in extensions:\n        file_counts[ext] = sum(\n            1 for _ in glob.iglob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        )\n\n    if not keep_zero:\n        file_counts = Counter({ext: count for ext, count in file_counts.items() if count > 0})\n\n    return file_counts", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " Counter", " object", " to", " store", " file", " counts", "\n", "    ", "file", "_", "counts", " =", " Counter", "()", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "counts", "[", "ext", "]", " =", " sum", "(", "\n", "            ", "1", " for", " _", " in", " glob", ".", "ig", "lob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", ")", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "file", "_", "counts", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " file", "_", "counts", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "    ", "return", " file", "_", "counts", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -0.689651608467102, -0.587051510810852, -0.00014840454969089478, -0.000726316764485091, -0.0008231588872149587, -0.07512357085943222, -0.00012206286191940308, -0.001106127048842609, -1.514802098274231, -0.00020215852418914437, -0.0009972843108698726, -0.16016489267349243, -0.0004776767164003104, -2.4083054065704346, -1.2400184869766235, -0.3413032293319702, -0.950869083404541, -0.19449947774410248, -0.2688990533351898, -0.8106239438056946, -1.5090943574905396, -0.21064549684524536, -0.2370990663766861, -0.0002451834443490952, -0.463979035615921, -0.0008625839254818857, -0.1833140105009079, -0.0010272946674376726, -0.0018937526037916541, -0.01738007925450802, -0.0011676882859319448, -0.03629428148269653, -0.00014935807848814875, -2.120734214782715, -0.32184410095214844, -0.0008223251206800342, -0.003265883307904005, -0.0004894727608188987, -0.010969454422593117, -0.002193784574046731, -2.9253830909729004, -0.009935331530869007, -1.00731360912323, -0.016863876953721046, -0.0030978568829596043, -0.026111045852303505, -0.15740272402763367, -2.2960524559020996, -0.09244322776794434, -0.2909049391746521, -0.0031966085080057383, -0.3564140796661377, -0.08609668165445328, -0.4692477881908417, -0.0032020746730268, -0.003108908887952566, -3.6238969187252223e-05, -0.04884881526231766, -1.1920928244535389e-07, -0.00042882305569946766, -0.35371583700180054, -1.0728830375228426e-06, -3.576272320060525e-06, -4.529942543740617e-06, -8.284702198579907e-05, -0.00015066919149830937, -0.0046514407731592655, -0.0001805857609724626, -0.21861125528812408, -0.06488385051488876, -0.010611183010041714, -0.0015655416063964367, -0.0006688979919999838, -0.000428942235885188, -0.0015785150462761521, -0.0011145814787596464, -5.149708886165172e-05, -0.0005747812101617455, -5.6622808187967166e-05, -0.00021336186910048127, -0.03397134318947792, -0.003750553820282221, -0.00362038123421371, -2.586808113846928e-05, -0.0012693690368905663, -0.020961422473192215, -0.006550743710249662, -0.4666484594345093, -0.04448193684220314, -0.0002951186615973711, -2.3841855067985307e-07, -4.768370445162873e-07, -0.001974539365619421, -0.005430351477116346, -0.00033456450910307467, -0.6611170172691345, -9.536738616588991e-07, -2.658331868587993e-05, -0.14813321828842163, -0.22416412830352783, -0.35728543996810913, -1.0595440864562988, -0.00022921319759916514, -0.04809698835015297, -0.00146793806925416, -0.000416907190810889, -1.2874520507466514e-05, -0.0024616196751594543, -1.9192511899746023e-05, -0.00043501926120370626, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0003392120997887105, -9.655486064730212e-05, -1.3232143828645349e-05, -0.0003163314249832183, -0.0004440752090886235, -0.13749967515468597, -0.00022027450904715806, -3.302042750874534e-05, -0.0002658013836480677, -0.001498410478234291, -0.01547390315681696, -0.0002960720448754728, -0.02514524944126606, -0.002084465464577079, -1.1920922133867862e-06, -1.1920922133867862e-06, -0.49733757972717285, -0.011139110662043095, -0.7622892260551453], "finish_reason": "stop"}], "metrics": {"energy": 525.1825869483945, "energy_per_token": 3.4780303771416854, "time": 12.607466, "time_per_token": 0.08349315231788079}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory {directory} does not exist\")\n    # Initialize a Counter object to count each extension\n    extension_counter = Counter()\n    # Iterate over the provided file extensions\n    for ext in extensions:\n        # Find all files matching the current extension in the directory\n        files = glob.glob(os.path.join(directory, '**', f'*{ext}'))\n        # Update the Counter with the count for the current extension\n        extension_counter[ext] += len(files)\n    # Filter out extensions with zero count if keep_zero is False\n    if not keep_zero:\n        extension_counter = Counter({k: v for k, v in extension_counter.items() if v != 0})\n    return extension_counter", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " {", "directory", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "#", " Initialize", " a", " Counter", " object", " to", " count", " each", " extension", "\n", "    ", "extension", "_", "counter", " =", " Counter", "()", "\n", "    ", "#", " Iter", "ate", " over", " the", " provided", " file", " extensions", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "#", " Find", " all", " files", " matching", " the", " current", " extension", " in", " the", " directory", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "'", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "        ", "#", " Update", " the", " Counter", " with", " the", " count", " for", " the", " current", " extension", "\n", "        ", "extension", "_", "counter", "[", "ext", "]", " +=", " len", "(", "files", ")", "\n", "    ", "#", " Filter", " out", " extensions", " with", " zero", " count", " if", " keep", "_", "zero", " is", " False", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "extension", "_", "counter", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " extension", "_", "counter", ".", "items", "()", " if", " v", " ", "!", "=", " ", "0", "})", "\n", "    ", "return", " extension", "_", "counter", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -1.2460429668426514, -0.0012168630491942167, -0.011521704494953156, -0.07177940756082535, -0.00011920218821614981, -0.0011825718684121966, -1.0810431241989136, -0.00022671037004329264, -0.00044907975825481117, -1.9087332487106323, -3.433591604232788, -1.688250184059143, -0.773592472076416, -0.4495549201965332, -0.14376895129680634, -0.29571017622947693, -1.517044186592102, -3.1176085472106934, -0.41760489344596863, -0.2622314393520355, -0.0010080024367198348, -1.4053280353546143, -0.0007525234250351787, -1.0167016983032227, -0.00043215948971919715, -0.0023655309341847897, -0.07263459265232086, -0.0020308124367147684, -0.14242450892925262, -0.3223789632320404, -0.9424441456794739, -0.0019901248160749674, -0.6723809242248535, -1.002476453781128, -3.604585647583008, -1.3477942943572998, -0.04714742675423622, -0.19777058064937592, -0.00033456450910307467, -0.010760262608528137, -0.42670631408691406, -0.0009604846709407866, -0.006587219424545765, -0.0004447901446837932, -0.00023648326168768108, -0.0018285474507138133, -0.06189209222793579, -2.831935405731201, -0.4835260212421417, -0.07207715511322021, -2.634814977645874, -0.026824569329619408, -1.288977026939392, -0.12535476684570312, -1.194576621055603, -0.00428164005279541, -0.33486032485961914, -1.2839993238449097, -0.00024589852546341717, -1.0943427085876465, -0.06927073001861572, -0.011179427616298199, -3.969590397900902e-05, -0.00496132206171751, -0.0005478549865074456, -0.575107216835022, -1.4305104514278355e-06, -9.775113539944869e-06, -2.50339189733495e-06, -0.0013517538318410516, -0.00012730741582345217, -0.00544493505731225, -0.0005907459417358041, -2.986543655395508, -0.016411907970905304, -0.06660988926887512, -0.0031905481591820717, -0.024622805416584015, -0.16032494604587555, -0.2414119988679886, -0.0006443570018745959, -0.6107316613197327, -0.13432970643043518, -0.01486146729439497, -0.0038758409209549427, -0.0430365651845932, -0.6278055310249329, -0.008297731168568134, -0.9536256790161133, -0.4179699420928955, -0.016685105860233307, -0.6894853115081787, -1.4933404922485352, -0.12648506462574005, -0.007071230560541153, -0.008027788251638412, -0.00810748990625143, -0.0002256377338198945, -0.008747708983719349, -6.437280717364047e-06, -2.396077979938127e-05, -0.4003570079803467, -0.0017993940273299813, -0.004136933945119381, -0.2491268366575241, -0.0024073924869298935, -0.0005355831235647202, -0.0015091231325641274, -0.00010966652916977182, -0.0012356749502941966, -0.18093959987163544, -0.08836124837398529, -1.7743713855743408, -0.23014414310455322, -0.2041255384683609, -0.04654373973608017, -0.09678124636411667, -0.9744950532913208, -0.138296440243721, -0.1325773000717163, -0.00019012074335478246, -0.0003110878460574895, -0.05284408852458, -0.08999377489089966, -0.0037662305403500795, -0.00024053541710600257, -0.020186224952340126, -0.0036187181249260902, -1.2159273865108844e-05, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0009230881696566939, -0.0003828269545920193, -0.0005069877952337265, -0.0279071144759655, -3.3378546504536644e-06, -0.00032074074260890484, -0.015287253074347973, -0.1020994782447815, -0.2025771290063858, -0.7206258773803711, -0.0002971446083392948, -0.15448246896266937, -0.0003296785580459982, -0.0008578196284361184, -9.179073458653875e-06, -0.004793698899447918, -0.00013326710904948413, -0.00023576818057335913, -1.1920922133867862e-06, -5.960462772236497e-07, -0.0001911934232339263, -0.0002728328399825841, -1.9788545614574105e-05, -0.000713213172275573, -0.000359351426595822, -0.9641166925430298, -4.768370445162873e-07, -7.152555099310121e-07, -0.001341872732155025, -4.0531076592742465e-06, -0.0006006343755871058, -0.0007990981102921069, -0.039466746151447296, -0.13996435701847076, -0.0029906569980084896, -2.7418097943154862e-06, -2.7418097943154862e-06, -0.5180371403694153, -0.019444331526756287, -0.8708329200744629], "finish_reason": "stop"}], "metrics": {"energy": 686.3829542474749, "energy_per_token": 3.593628032709293, "time": 15.965508, "time_per_token": 0.08358904712041884}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(\"The specified directory does not exist.\")\n\n    all_extensions = [extension for extension in extensions if isinstance(extension, str) and extension.startswith(\".\")]\n\n    extensions_counter = Counter({ext: 0 for ext in all_extensions})\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            extension = os.path.splitext(file)[1]\n            if extension in all_extensions:\n                extensions_counter[extension] += 1\n\n    if keep_zero:\n        return extensions_counter\n    else:\n        return Counter({ext: count for ext, count in extensions_counter.items() if count > 0})", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "The", " specified", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "all", "_", "extensions", " =", " [", "extension", " for", " extension", " in", " extensions", " if", " isinstance", "(", "extension", ",", " str", ")", " and", " extension", ".", "start", "sw", "ith", "(", "\"", ".", "\"", ")]", "\n", "\n", "    ", "extensions", "_", "counter", " =", " Counter", "({", "ext", ":", " ", "0", " for", " ext", " in", " all", "_", "extensions", "})", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", "\n", "            ", "if", " extension", " in", " all", "_", "extensions", ":", "\n", "                ", "extensions", "_", "counter", "[", "extension", "]", " +=", " ", "1", "\n", "\n", "    ", "if", " keep", "_", "zero", ":", "\n", "        ", "return", " extensions", "_", "counter", "\n", "    ", "else", ":", "\n", "        ", "return", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " extensions", "_", "counter", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "def"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.784758448600769, -1.7007850408554077, -0.18395432829856873, -0.0009826361201703548, -0.007325928658246994, -0.00012313561455812305, -0.0003992714046034962, -0.2739217281341553, -0.004244248848408461, -0.0010515881003811955, -0.0004855407460127026, -0.0982581228017807, -0.00044490929576568305, -4.266792297363281, -0.035764750093221664, -1.005307674407959, -0.008917978964745998, -0.8112848997116089, -2.8686437606811523, -1.0169140100479126, -0.11675688624382019, -0.0006853376980870962, -0.009784122928977013, -0.10291989147663116, -1.7071470022201538, -6.496695277746767e-05, -0.01167889591306448, -0.0003326578007545322, -0.0032879835925996304, -0.775912344455719, -0.011852319352328777, -0.15359698235988617, -0.050167568027973175, -0.005319251213222742, -4.0531076592742465e-06, 0.0, -0.4804365336894989, -0.0052617397159338, -8.070142939686775e-05, -1.3708974620385561e-05, -0.028689442202448845, -0.008063974790275097, -0.5889468193054199, -0.00016664070426486433, -3.2925238609313965, -0.057620640844106674, -1.1543200016021729, -0.0018255725735798478, -0.03309499844908714, -0.8925386071205139, -2.1114518642425537, -0.008954369463026524, -0.008790722116827965, -0.00021002470748499036, -0.0004574206250254065, -8.4638240878121e-06, -4.279521817807108e-05, -0.03621575981378555, -7.629365427419543e-06, -3.8742269680369645e-05, -0.15106825530529022, -0.04579905793070793, -0.18417754769325256, -0.00013565097469836473, -0.16747820377349854, -2.5782523155212402, -0.0015029336791485548, -0.605451762676239, -0.0001685477327555418, -3.158996332786046e-05, -0.0057287318632006645, -0.00018821375851985067, -0.0002828436263371259, -5.364403477869928e-06, -1.490105023549404e-05, -7.521823135903105e-05, -0.001259725191630423, -0.04322495684027672, -0.0030031364876776934, -0.0019328974885866046, -0.026521505787968636, -0.313068687915802, -0.06942099332809448, -0.004613826051354408, -8.916457591112703e-05, -0.0002379134384682402, -0.00026341783814132214, -0.8494381308555603, -0.0019006537040695548, -0.01076545100659132, -5.960462772236497e-07, -1.2636104656849056e-05, -1.1920928244535389e-07, -8.34461570775602e-06, 0.0, 0.0, -8.22540732769994e-06, -0.004235345870256424, -0.06422962248325348, -0.0007102350937202573, -0.0002696150622796267, -0.2288598120212555, -0.0157525222748518, -0.012267377227544785, -0.013225685805082321, -0.025257889181375504, -0.1417437046766281, -2.145764938177308e-06, -2.3841855067985307e-07, -0.0043898881413042545, -0.000358159770257771, -0.00023552982020191848, -0.0028626436833292246, -5.960462772236497e-07, -8.344646857949556e-07, -0.005018020514398813, -8.725739462533966e-05, -0.000636255950666964, -0.00040797016117721796, -0.0016944350209087133, -3.4927710657939315e-05, -0.0005839549703523517, -0.011462192051112652, -0.001142206834629178, -0.07477307319641113, -2.4852170944213867, -8.344646857949556e-07, -3.6954811548639555e-06, -0.09232008457183838, -0.006114467047154903, -0.00037377048283815384, -0.08428773283958435, -0.04063059389591217, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.0020973130594938993, -0.1668725609779358, -0.012847273610532284, -1.5735502529423684e-05, -0.0003256267518736422, -0.0004001055203843862, -0.11509323865175247, -0.12631413340568542, -0.06163489446043968, -0.35893598198890686, -0.0003526780928950757, -0.07727593928575516, -0.0003830652858596295, -0.00040749352774582803, -1.156323378381785e-05, -0.0007352509419433773, -3.40932747349143e-05, -0.00038366109947673976, -7.867782187531702e-06, -2.145764938177308e-06, -0.00015114595589693636, -0.0008668717346154153, -1.6212332411669195e-05, -0.00017271934484597296, -0.00039939055568538606, -0.19868114590644836, -6.115249561844394e-05, -0.00010287232726113871, -0.0013240152038633823, -0.3621850907802582, -0.010689735412597656, -1.4827964305877686], "finish_reason": "stop"}], "metrics": {"energy": 617.9408262720109, "energy_per_token": 3.3583740558261463, "time": 15.556545, "time_per_token": 0.0845464402173913}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"The specified directory does not exist: {directory}\")\n\n    extensions = [ext.lower() for ext in extensions]\n\n    counter = Counter()\n    for ext in extensions:\n        file_list = glob.glob(os.path.join(directory, f\"**/*{ext}\"), recursive=True)\n        counter[ext] += len(file_list)\n\n    # Remove extensions with zero count if keep_zero is False\n    if not keep_zero:\n        counter = Counter({ext: count for ext, count in counter.items() if count > 0})\n\n    return counter", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "extensions", " =", " [", "ext", ".", "lower", "()", " for", " ext", " in", " extensions", "]", "\n", "\n", "    ", "counter", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " f", "\"", "**", "/*", "{", "ext", "}\"", ")", ",", " recursive", "=", "True", ")", "\n", "        ", "counter", "[", "ext", "]", " +=", " len", "(", "file", "_", "list", ")", "\n", "\n", "    ", "#", " Remove", " extensions", " with", " zero", " count", " if", " keep", "_", "zero", " is", " False", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counter", " =", " Counter", "({", "ext", ":", " count", " for", " ext", ",", " count", " in", " counter", ".", "items", "()", " if", " count", " >", " ", "0", "})", "\n", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -1.611983060836792, -0.7955753803253174, -0.004272262565791607, -0.4473683536052704, -0.0003147821989841759, -0.0012912754900753498, -0.07102053612470627, -0.021356264129281044, -0.00043275527423247695, -0.00456683523952961, -0.00020001317898277193, -0.0005994430393911898, -0.07577335834503174, -0.00042632073746062815, -1.7438457012176514, -0.12722840905189514, -0.3410462737083435, -0.35786354541778564, -0.47105756402015686, -0.02251211553812027, -3.9934315282152966e-05, -0.10303076356649399, -8.093983342405409e-05, -2.5987286790041253e-05, -0.0013758012792095542, -0.05406995862722397, -0.3888568878173828, -0.736018717288971, -0.00014649749209638685, -2.187278985977173, -0.01289411261677742, -0.008469732478260994, -0.03127102926373482, -0.008008157834410667, -0.31956249475479126, -0.029086340218782425, -0.16097089648246765, -0.0005841932725161314, -0.0019022003980353475, -0.00011646069469861686, -0.0012040039291605353, -0.0007968349382281303, -2.1986441612243652, -0.05146137624979019, -2.090174674987793, -0.001256391522474587, -0.03503628447651863, -3.349725011503324e-05, -0.029230142012238503, -0.0006903410539962351, -0.5372604727745056, -3.576278118089249e-07, -8.702239938429557e-06, -1.311301275563892e-06, -0.000785280775744468, -0.0001668790791882202, -0.0031154451426118612, -0.00015293381875380874, -0.1440490186214447, -0.22298914194107056, -0.010403921827673912, -0.0035290364176034927, -0.0008842610404826701, -0.0002227773511549458, -0.0023396043106913567, -0.001263297046534717, -0.00012981049076188356, -0.00020132421923335642, -0.00012694983161054552, -0.0004323977918829769, -0.002200802555307746, -0.0063557871617376804, -0.0034920922480523586, -0.03224247321486473, -0.03382234275341034, -0.002468041144311428, -0.02414337731897831, -0.8856870532035828, -0.006457297131419182, -0.0055785453878343105, -0.0025969373527914286, -9.536738616588991e-07, 0.0, -0.0001481661747675389, -0.002233036793768406, -0.01465860940515995, -0.001069093239493668, -2.754232406616211, -0.49001869559288025, -0.11606834083795547, -0.020854603499174118, -0.02751171961426735, -1.4030855894088745, -0.3412034213542938, -0.09335412085056305, -0.00011467275908216834, -0.0002227773511549458, -0.04236365854740143, -0.041840534657239914, -0.020736562088131905, -0.0001546025014249608, -0.002600504318252206, -0.0027032282669097185, -6.079655122448457e-06, -1.1920928244535389e-07, 0.0, -0.001921713468618691, -0.00012170527770649642, -0.00016020445036701858, -0.13773435354232788, -0.1404140442609787, -0.39651554822921753, -0.06425734609365463, -0.5070881247520447, -0.0003137096355203539, -0.012035842053592205, -6.615896563744172e-05, -0.00010847456724150106, -1.1086402082582936e-05, -0.0015115038258954883, -6.079655122448457e-06, -7.116541382856667e-05, -6.639736966462806e-05, -4.303362584323622e-05, -4.887569048150908e-06, -7.998623186722398e-05, -0.00012611546844709665, -0.14022910594940186, -4.9470632802695036e-05, -1.597391747054644e-05, -0.0006498370785266161, -0.0005248599336482584, -0.009498522616922855, -0.00020549570035655051, -0.022874420508742332, -0.0028326883912086487, -0.6466938853263855, -0.010621916502714157, -0.7721540331840515], "finish_reason": "stop"}], "metrics": {"energy": 575.7792702732089, "energy_per_token": 3.644172596665879, "time": 13.246385, "time_per_token": 0.08383787974683544}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise OSError(f\"Directory '{directory}' not found.\")\n\n    counts = Counter()\n    for ext in extensions:\n        pattern = os.path.join(directory, f'**/*{ext}')\n        counts[ext] += sum(1 for _ in glob.iglob(pattern, recursive=True))\n\n    if not keep_zero:\n        counts = Counter({k: v for k, v in counts.items() if v > 0})\n\n    return counts", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "counts", " =", " Counter", "()", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "pattern", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "'", "**", "/*", "{", "ext", "}", "')", "\n", "        ", "counts", "[", "ext", "]", " +=", " sum", "(", "1", " for", " _", " in", " glob", ".", "ig", "lob", "(", "pattern", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "counts", " =", " Counter", "({", "k", ":", " v", " for", " k", ",", " v", " in", " counts", ".", "items", "()", " if", " v", " >", " ", "0", "})", "\n", "\n", "    ", "return", " counts", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -0.31834569573402405, -9.846202738117427e-05, -0.000426439888542518, -0.004790970589965582, -0.003448018804192543, -0.001890540006570518, -0.007423080503940582, -0.007512177340686321, -9.536738616588991e-07, 0.0, -0.02567264810204506, -0.6302098035812378, -0.020606130361557007, -0.35816454887390137, -0.6366298794746399, -9.572047565598041e-05, -0.000604565953835845, -0.0011297041783109307, -2.8033595085144043, -0.000200609109015204, -0.17469178140163422, -0.00972096435725689, -0.00024148885859176517, -0.00046302087139338255, -0.09552605450153351, -0.00035720644518733025, -2.0304830074310303, -0.008227266371250153, -0.011351288296282291, -0.09025608748197556, -0.009651308879256248, -0.31638115644454956, -0.08431249856948853, -0.27564841508865356, -0.0006179092451930046, -0.004548679105937481, -0.0006335158832371235, -0.0018923247698694468, -0.0006624649395234883, -0.9993519186973572, -0.00037877538125030696, -0.3428056240081787, -4.529942543740617e-06, -3.182837463100441e-05, -8.940656698541716e-06, -0.0035525562707334757, -0.0002824861148837954, -0.00565109308809042, -0.0002244459028588608, -0.33549201488494873, -1.1687407493591309, -0.015636928379535675, -0.008041624911129475, -0.0009806115413084626, -0.002638432662934065, -0.023831119760870934, -9.48860906646587e-05, -0.037742651998996735, -0.002183792879804969, -1.3801531791687012, -0.04077034071087837, -0.001156852813437581, -0.004113546572625637, -0.3931862711906433, -1.5848925113677979, -0.06396453082561493, -0.28258275985717773, -0.0002548369811847806, -0.32704848051071167, -0.001190906623378396, -0.0002671123365871608, -7.033323527139146e-06, -0.14824073016643524, -1.1920928244535389e-07, -0.00017045476124621928, -0.004700562916696072, -0.0004801789182238281, -0.0003364712174516171, -6.258291978156194e-05, -0.0004568248405121267, -0.002245049923658371, -0.002179510658606887, -0.046351075172424316, -0.0014512732159346342, -0.09746643155813217, -0.05269109085202217, -0.00012981049076188356, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0015038858400657773, -0.0025222653057426214, -0.0003358753747306764, -0.039738986641168594, -0.09666058421134949, -0.07990672439336777, -0.012200606986880302, -1.3210325241088867, -0.00021610308613162488, -0.10099665075540543, -1.7523612768854946e-05, -0.0006618693005293608, -2.861018856492592e-06, -0.00044979469384998083, -2.9205850296420977e-05, -3.886147169396281e-05, -0.00018034738604910672, -5.3165931603871286e-05, -3.6954811548639555e-06, -3.814624506048858e-05, -9.846202738117427e-05, -0.2090543657541275, -8.844937838148326e-05, -3.111314072157256e-05, -0.00035506143467500806, -0.0037908137310296297, -0.030476264655590057, -0.00021491125517059118, -0.00716071343049407, -0.009483525529503822, -1.617165207862854, -6.556489552167477e-06, -3.099436753473128e-06, -2.7418097943154862e-06, -2.7656173188006505e-05, -0.11761189252138138], "finish_reason": "stop"}], "metrics": {"energy": 436.0882403964996, "energy_per_token": 3.3289178656221345, "time": 10.929049, "time_per_token": 0.08342785496183205}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise OSError(f\"The directory '{directory}' does not exist.\")\n\n    counters = Counter()\n    for extension in extensions:\n        pattern = f\"{directory}/**/*{extension}\"\n        file_list = glob.glob(pattern, recursive=True)\n        counters[extension] = len(file_list)\n\n    if not keep_zero:\n        counters = {k: v for k, v in counters.items() if v != 0}\n\n    return counters", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "count", "ers", " =", " Counter", "()", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "pattern", " =", " f", "\"", "{", "directory", "}/", "**", "/*", "{", "extension", "}\"", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "pattern", ",", " recursive", "=", "True", ")", "\n", "        ", "count", "ers", "[", "extension", "]", " =", " len", "(", "file", "_", "list", ")", "\n", "\n", "    ", "if", " not", " keep", "_", "zero", ":", "\n", "        ", "count", "ers", " =", " {", "k", ":", " v", " for", " k", ",", " v", " in", " counters", ".", "items", "()", " if", " v", " ", "!", "=", " ", "0", "}", "\n", "\n", "    ", "return", " counters", "\n", "\n", "def"], "logprobs": [-0.41592928767204285, -0.01990474946796894, -0.00739621976390481, -2.9205850296420977e-05, -0.0014747231034561992, -7.748573807475623e-06, -1.3000808954238892, -0.0005119920242577791, -0.000169382052263245, -0.0009597701136954129, -0.0006911749369464815, -0.0069285850040614605, -0.0015862513100728393, -0.009946308098733425, -0.005657968111336231, -8.344646857949556e-07, 0.0, -0.03313697874546051, -0.39579105377197266, -0.028288910165429115, -1.233657956123352, -0.7009800672531128, -0.48711228370666504, -0.00025662468397058547, -0.0010240792762488127, -0.0013059191405773163, -0.0185234472155571, -0.00013910756388213485, -0.000912369170691818, -0.11326450854539871, -0.0063714231364429, -0.0002806984703056514, -0.00041476229671388865, -0.12020391970872879, -0.0004654039512388408, -2.8687844276428223, -1.4315032958984375, -0.016726959496736526, -0.2852073907852173, -0.18274052441120148, -0.017476258799433708, -0.40211614966392517, -0.14367881417274475, -1.065809726715088, -0.0007129749283194542, -0.009346774779260159, -0.0010495636379346251, -0.002107186708599329, -0.0013767535565420985, -1.5291765928268433, -0.000865680689457804, -1.4956648349761963, -0.07463810592889786, -0.2605664134025574, -0.08223804086446762, -0.17621026933193207, -0.0020035686902701855, -0.0026129886973649263, -0.005761800799518824, -0.0012425805907696486, -0.0038725160993635654, -0.06984540820121765, -0.005382213741540909, -2.753222942352295, -0.039478663355112076, -0.6678932905197144, -0.0009839460253715515, -0.02083779126405716, -1.7762025890988298e-05, -0.028556451201438904, -0.00015317220822907984, -0.007129584904760122, -0.004922295920550823, -0.00012933371181134135, -0.0002882065309677273, -0.0006796196103096008, -0.004629726056009531, -0.008121561259031296, -0.008212251588702202, -0.026272229850292206, -0.05461810529232025, -0.03633566573262215, -0.005414582323282957, -0.0029475123155862093, -0.5295601487159729, -0.006516279652714729, -0.003542578313499689, -0.000982397934421897, -1.6689286894688848e-06, -3.576278118089249e-07, -0.00012087091454304755, -0.005856497213244438, -0.06672430783510208, -0.0019550274591892958, -0.0914188027381897, -0.035503845661878586, -0.00012516192509792745, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0026247594505548477, -0.00417931517586112, -0.00034338299883529544, -0.03576072305440903, -0.0001037067049765028, -0.09958554059267044, -2.6514527797698975, -0.6451007127761841, -0.0004021312633994967, -0.03891102969646454, -5.745722592109814e-05, -0.0024752949830144644, -1.8954096958623268e-05, -0.001513408264145255, -2.455681169521995e-05, -0.00010859376925509423, -0.000568228424526751, -0.0008328068652190268, -0.00011955977242905647, -3.2543604902457446e-05, -0.0002383901592111215, -1.0892980098724365, -1.1920928244535389e-07, -5.960462772236497e-07, -0.0003381395654287189, -5.483612312673358e-06, -0.0002369599969824776, -0.010583817958831787, -0.06158748269081116, -0.0003736513026524335, -0.011241314932703972, -0.01416262611746788, -0.5786185264587402, -0.009632537141442299, -1.9633198976516724], "finish_reason": "stop"}], "metrics": {"energy": 486.2022874755859, "energy_per_token": 3.628375279668551, "time": 11.145348, "time_per_token": 0.08317423880597015}}
