{"outputs": [{"text": "try:\n        if not url:\n            raise ValueError\n\n        response = urllib.request.urlopen(url)\n\n        if not response:\n            raise URLError\n\n        html_content = response.read().decode()\n\n        pq_obj = pq(html_content)\n\n        df = pd.DataFrame(columns=['text', 'href', 'fetch_time'])\n\n        for anchor in pq_obj('a').items():\n            text = anchor.text().strip()\n            href = anchor.attr('href')\n            time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n            df.loc[len(df)] = [text, href, time]\n\n        return df\n    except ValueError:\n        return f'Url is empty'\n    except URLError:\n        return f'URL is invalid'", "tokens": ["try", ":", "\n", "        ", "if", " not", " url", ":", "\n", "            ", "raise", " Value", "Error", "\n", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "\n", "        ", "if", " not", " response", ":", "\n", "            ", "raise", " UR", "LE", "rror", "\n", "\n", "        ", "html", "_", "content", " =", " response", ".", "read", "()", ".", "decode", "()", "\n", "\n", "        ", "pq", "_", "obj", " =", " p", "q", "(", "html", "_", "content", ")", "\n", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'])", "\n", "\n", "        ", "for", " anchor", " in", " p", "q", "_", "obj", "('", "a", "')", ".", "items", "():", "\n", "            ", "text", " =", " anchor", ".", "text", "()", ".", "strip", "()", "\n", "            ", "href", " =", " anchor", ".", "attr", "('", "href", "')", "\n", "            ", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "            ", "df", ".", "loc", "[", "len", "(", "df", ")]", " =", " [", "text", ",", " href", ",", " time", "]", "\n", "\n", "        ", "return", " df", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "return", " f", "'", "Url", " is", " empty", "'", "\n", "    ", "except", " UR", "LE", "rror", ":", "\n", "        ", "return", " f", "'", "URL", " is", " invalid", "'", "\n", "\n", "def"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -0.9905291199684143, -0.4951539933681488, -0.019832294434309006, -0.12398816645145416, -0.044124070554971695, -0.0021865288726985455, -0.03565673902630806, -0.011050218716263771, -5.9602869441732764e-05, -2.237175703048706, -1.2529014348983765, -0.009672560729086399, -1.6004157066345215, -0.007081173360347748, -0.08776915818452835, -0.00010978573118336499, -1.6689286894688848e-06, -0.0008886678842827678, -0.00022194306075107306, -0.0001714082609396428, -0.019026629626750946, -0.00020787939138244838, -0.0011861439561471343, -0.002893073484301567, -0.05233105644583702, -0.04157240688800812, -1.523680329322815, -0.030702760443091393, -1.0144298076629639, -1.7356996536254883, -0.029437705874443054, -0.6500943899154663, -0.009212722070515156, -0.001685152412392199, -0.01530321966856718, -0.10750146210193634, -0.00043644916149787605, -0.00012027494085486978, -0.253731906414032, -0.06798407435417175, -0.036216333508491516, -0.5526402592658997, -1.489953637123108, -0.6335387229919434, -0.0020748295355588198, -0.04923052713274956, -0.0005520250415429473, -0.0013321106089279056, -0.0010971962474286556, -1.609311580657959, -0.0007552632014267147, -1.1658015251159668, -0.013103329576551914, -0.7497515082359314, -0.08380845189094543, -2.6719791889190674, -0.17141076922416687, -2.0796735286712646, -0.0030666012316942215, -0.0010269373888149858, -4.660974445869215e-05, -0.0014349650591611862, -0.00262214383110404, -0.006564007606357336, -0.00010394509445177391, -0.010774296708405018, -0.01568903587758541, -0.407070130109787, -0.004893588367849588, -2.376758575439453, -0.12924395501613617, -0.36702483892440796, -0.00159327348228544, -0.0032242953311651945, -0.8196199536323547, -0.4789353311061859, -0.11166508495807648, -0.06215471401810646, -0.0007469248375855386, -0.00015948931104503572, -0.014738841913640499, -0.002930040005594492, -0.04177376627922058, -8.463501580990851e-05, -0.004209467675536871, -0.00837977509945631, -0.001459962804801762, -0.0008625839254818857, -0.017999405041337013, -0.003386360127478838, -0.18539078533649445, -0.0015172171406447887, -0.17624135315418243, -0.5813612341880798, -0.1978592872619629, -0.0024239225313067436, -0.00014006110723130405, -0.00034957972820848227, -6.198863957251888e-06, -0.16416874527931213, -0.10115525871515274, -0.11102849990129471, -1.0394210815429688, -0.004237719811499119, -0.0031091466080397367, -0.029894471168518066, -0.060936033725738525, -1.541814923286438, -0.10911097377538681, -0.03234034776687622, -0.3109148442745209, -0.15686553716659546, -0.09933990985155106, -1.6278941631317139, -0.04282301291823387, -0.00791047140955925, -0.16854821145534515, -0.04289679229259491, -0.057308197021484375, -0.005435568280518055, -0.013528570532798767, -0.1288323849439621, -0.010521301068365574, -1.0965946912765503, -0.00019298121333122253, -0.00018082413589581847, -0.08303770422935486, -0.26322922110557556, -3.1560592651367188, -0.13412675261497498, -0.03494914621114731, -0.00033098942367359996, -0.06013711914420128, -0.00036590558011084795, -0.07965224981307983, -0.022394269704818726, -6.41325386823155e-05, -0.13753022253513336, -0.005337156355381012, -0.0016287406906485558, -0.0013467537937685847, -0.001111247343942523, -3.683499380713329e-05, -0.00012432756193447858, -0.006341809406876564, -0.0013718727277591825, -0.0008560330606997013, -0.00010692501382436603, -0.001115891383960843, -0.00029273517429828644, -0.004248165991157293, -0.0033085390459746122, -0.6316462755203247, -0.0003860443539451808, -0.10598553717136383, -0.6191248893737793, -0.009777394123375416, -0.048022229224443436, -0.12288697808980942, -5.6265202147187665e-05, -0.0002826052950695157, -0.1116771325469017, -0.0035335503052920103, -0.03119511529803276, -0.005886480677872896, -0.0015956539427861571, -0.0031414704862982035, -0.001815577270463109, -0.0034713030327111483, -0.0009240409708581865, -0.003033086657524109, -0.05803704261779785, -0.12652350962162018, -0.09690092504024506, -0.0032471094746142626, -0.013827601447701454, -1.476485252380371, -0.00330901425331831, -0.3465929627418518, -1.4781842764932662e-05, -0.15313272178173065, -0.010981244966387749, -0.001994169782847166, -2.773209571838379, -2.669950008392334, -0.5948829650878906, -3.998793601989746, -0.8153494000434875, -1.1446291208267212, -0.8675430417060852, -0.015134268440306187, -0.09396081417798996, -0.0010318199638277292, -0.0248330719769001, -9.775113539944869e-06, -1.2040065485052764e-05, -0.03407435119152069, -0.00038258862332440913, -0.0010083595989271998, -0.014505880884826183, -0.21868397295475006, -0.0321519710123539, -2.6147499084472656, -0.60368412733078, -0.3423510789871216, -0.3122531771659851, -0.15459901094436646, -0.26195892691612244, -1.8524792194366455], "finish_reason": "stop"}], "metrics": {"energy": 213.61270532798758, "energy_per_token": 1.0028765508356225, "time": 9.261061, "time_per_token": 0.04347915962441314}}
{"outputs": [{"text": "if url is None or len(url) == 0:\n        raise ValueError(\"Provided URL is either invalid or empty.\")\n    try:\n        response = urllib.request.urlopen(url)\n        html = response.read().decode()\n        doc = pq(html)\n    except urllib.error.URLError:\n        raise ValueError(\"There is an issue with network connectivity or the server.\")\n    anchors = doc('a')\n    df = pd.DataFrame({'text': [anchor.text() for anchor in anchors], 'href': [anchor.attr('href') for anchor in anchors]})\n    df['fetch_time'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    return df", "tokens": ["if", " url", " is", " None", " or", " len", "(", "url", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Prov", "ided", " URL", " is", " either", " invalid", " or", " empty", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", " =", " response", ".", "read", "()", ".", "decode", "()", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " is", " an", " issue", " with", " network", " connectivity", " or", " the", " server", ".", "\"", ")", "\n", "    ", "anch", "ors", " =", " doc", "('", "a", "')", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "text", "':", " [", "anchor", ".", "text", "()", " for", " anchor", " in", " anch", "ors", "]", ",", " '", "href", "':", " [", "anchor", ".", "attr", "('", "href", "')", " for", " anchor", " in", " anch", "ors", "]", "})", "\n", "    ", "df", "['", "fetch", "_", "time", "']", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.309146523475647, -1.0612399578094482, -1.422696828842163, -0.06181522086262703, -0.22816859185695648, -1.6039164066314697, -0.00020668754586949944, -0.010149180889129639, -0.24373683333396912, -0.2675025761127472, -0.0013728251215070486, -0.00023326536756940186, -0.020161574706435204, -0.016110247001051903, -0.0034578789491206408, -0.04873925447463989, -0.006419276352971792, -5.4238757002167404e-05, -0.5576401352882385, -0.09200753271579742, -2.4617419242858887, -0.27513936161994934, -0.08616285026073456, -0.11971352994441986, -2.796065330505371, -1.8603229522705078, -0.02027582749724388, -0.034704841673374176, -0.5412105917930603, -0.05378193035721779, -0.0005571481888182461, -0.0041206697933375835, -1.1473106145858765, -0.9241928458213806, -0.0005103239673189819, -0.003964660689234734, -0.006655194330960512, -0.9502659440040588, -0.00784057192504406, -0.04743475466966629, -8.368142152903602e-05, -6.437280717364047e-06, -0.00035363141796551645, -0.0001854724541772157, -0.00011145447206217796, -0.02571726404130459, -0.00010430268594063818, -0.000720956246368587, -0.0029960053507238626, -0.07969848066568375, -0.047235555946826935, -0.6741318106651306, -0.5935171246528625, -0.3615765869617462, -0.09768625348806381, -0.00027104519540444016, -0.0015470929211005569, -0.0008877150830812752, -1.060892105102539, -0.0007794441189616919, -1.033308506011963, -0.016452012583613396, -0.48261207342147827, -0.8593047857284546, -0.005111601669341326, -0.0014106809394434094, -1.966933996300213e-05, -0.0006585336523130536, -0.0035315309651196003, -0.00974493008106947, -0.015351704321801662, -2.374541759490967, -0.004889673553407192, -0.5551387071609497, -0.00017176583060063422, -2.50339189733495e-06, -6.83045873302035e-05, -0.06709067523479462, -0.0004894727608188987, -0.027362218126654625, -5.781483559985645e-05, -8.106198947643861e-06, -1.1603386402130127, -0.012171637266874313, -0.0023406746331602335, -0.2998560965061188, -1.0203667879104614, -0.00034874555421993136, -0.07996714115142822, -0.08101557195186615, -1.018041968345642, -0.44701361656188965, -0.5639290809631348, -0.13025780022144318, -0.10670258849859238, -0.36371058225631714, -0.025013530626893044, -0.06593212485313416, -0.11566246300935745, -0.022008001804351807, -0.11223381012678146, -0.0196978859603405, -0.0012916326522827148, -0.0030384347774088383, -0.2892056107521057, -3.56903076171875, -0.008462876081466675, -0.03689166530966759, -0.1301535665988922, -0.47447189688682556, -0.08454398810863495, -0.05355517938733101, -0.11977687478065491, -0.05428089573979378, -1.2922518253326416, -0.05916645750403404, -0.07093070447444916, -0.00013159839727450162, -0.0024921807926148176, -1.1530296802520752, -0.3347862958908081, -0.10688161104917526, -0.00868377648293972, -0.8218485713005066, -0.8377166986465454, -0.012880696915090084, -0.014336559921503067, -0.17941024899482727, -0.03463909402489662, -0.0001784403866622597, -0.0003103728231508285, -0.0010961245279759169, -2.3841855067985307e-07, -0.01608467288315296, -0.003277646377682686, -2.7450549602508545, -0.002882970031350851, -0.0013758012792095542, -0.05496343597769737, -0.08444254845380783, -0.07948964089155197, -0.08086109906435013, -0.7088013887405396, -0.000276765669696033, -0.00022623363474849612, -0.047582536935806274, -0.0045006172731518745, -0.0014528206083923578, -0.00028689560713246465, -5.125986263010418e-06, -0.02368129976093769, -0.8466767072677612, -0.008415593765676022, -0.007122246082872152, -0.12293315678834915, -0.12657266855239868, -0.0045031094923615456, -0.0016331442166119814, -0.0014841266674920917, -0.0003759154351428151, -0.0033654500730335712, -0.1319112628698349, -0.0002047805901383981, -0.09137386828660965, -0.0003873551613651216, -0.025055501610040665, -0.021310986950993538, -6.48477507638745e-05, -0.3791831135749817, -0.009371929802000523, -0.0019713270012289286, -0.0014967439929023385, -0.0014754373114556074, -5.328513361746445e-05, -0.00016330339713022113, -0.006973925977945328, -0.0014542490243911743, -0.0006977269076742232, -0.00011002412065863609, -0.0009480987209826708, -0.0003082277253270149, -0.004925854504108429, -0.008814828470349312, -0.04293687641620636, -0.037340447306632996, -0.005110652651637793, -1.4781124591827393, -2.264974000354414e-06, -1.0728830375228426e-06, -0.0001573438785271719, -0.00010001159535022452, -0.07645586133003235], "finish_reason": "stop"}], "metrics": {"energy": 243.99249188423173, "energy_per_token": 1.2707942285637068, "time": 8.635395, "time_per_token": 0.044976015625000004}}
{"outputs": [{"text": "# Check if the input URL is valid\n    if not url:\n        raise ValueError(\"URL cannot be empty or null\")\n    # Extract the HTML content from the URL and check if it was successful\n    try:\n        response = urllib.request.urlopen(url)\n    except urllib.error.URLError:\n        raise ValueError(\"Invalid URL\")\n    else:\n        html = response.read()\n        if html == None:\n            raise ValueError(\"URL cannot be empty\")\n    # Create the PyQuery instance\n    doc = pq(html)\n    # Extract the anchor tags from the document\n    anchors = doc('a')\n    # Create a DataFrame with columns 'text', 'href', and 'fetch_time'\n    df = pd.DataFrame(columns=['text', 'href', 'fetch_time'])\n    # Extract the text and href attributes of the anchor tags\n    for a in anchors.items():\n        text = a.text()\n        href = a.attr.href\n        df.loc[len(df)] = [", "tokens": ["#", " Check", " if", " the", " input", " URL", " is", " valid", "\n", "    ", "if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " cannot", " be", " empty", " or", " null", "\"", ")", "\n", "    ", "#", " Ext", "ract", " the", " HTML", " content", " from", " the", " URL", " and", " check", " if", " it", " was", " successful", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " URL", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "html", " =", " response", ".", "read", "()", "\n", "        ", "if", " html", " ==", " None", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "URL", " cannot", " be", " empty", "\"", ")", "\n", "    ", "#", " Create", " the", " Py", "Query", " instance", "\n", "    ", "doc", " =", " p", "q", "(", "html", ")", "\n", "    ", "#", " Ext", "ract", " the", " anchor", " tags", " from", " the", " document", "\n", "    ", "anch", "ors", " =", " doc", "('", "a", "')", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " columns", " '", "text", "'", ",", " '", "href", "'", ",", " and", " '", "fetch", "_", "time", "'", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'])", "\n", "    ", "#", " Ext", "ract", " the", " text", " and", " href", " attributes", " of", " the", " anchor", " tags", "\n", "    ", "for", " a", " in", " anch", "ors", ".", "items", "():", "\n", "        ", "text", " =", " a", ".", "text", "()", "\n", "        ", "href", " =", " a", ".", "attr", ".", "href", "\n", "        ", "df", ".", "loc", "[", "len", "(", "df", ")]", " =", " ["], "logprobs": [-1.6888309717178345, -1.3917981386184692, -0.6417310237884521, -0.6486677527427673, -2.8321189880371094, -0.6835283637046814, -0.008002008311450481, -0.1246178150177002, -0.6542450189590454, -0.00409455131739378, -0.03685443848371506, -0.18092219531536102, -0.015818702057003975, -0.14672833681106567, -0.004949222784489393, -0.0013253247598186135, -0.03108718805015087, -0.0034629872534424067, -1.9788545614574105e-05, -0.5462509393692017, -0.030742527917027473, -1.0936161279678345, -0.52271568775177, -0.00016425691137555987, -0.01616021618247032, -1.5451459884643555, -2.412783145904541, -0.7149325609207153, -0.0005488081369549036, -0.0031497888267040253, -1.3839703798294067, -0.6703065037727356, -3.600590705871582, -0.028599316254258156, -0.7827959656715393, -0.5694499015808105, -0.10459938645362854, -0.5797674655914307, -0.028658397495746613, -0.386985182762146, -3.29673433303833, -2.027925968170166, -1.0878081321716309, -0.622618556022644, -2.9502642154693604, -0.9749878644943237, -0.10758539289236069, -0.006049418356269598, -0.19426704943180084, -0.0003588747640606016, -0.0016068416880443692, -0.004366150591522455, -1.0698456764221191, -0.006986711174249649, -0.07148811221122742, -5.1616290875244886e-05, -1.3828182090946939e-05, -0.0005554801900871098, -0.00022909401741344482, -8.999896090244874e-05, -0.022779807448387146, -0.00015007323236204684, -0.0007036832394078374, -0.002373380120843649, -0.09788354486227036, -0.03394944965839386, -0.6177078485488892, -0.008331306278705597, -0.42099520564079285, -4.327203714638017e-05, -1.0490362910786644e-05, -0.00014840454969089478, -0.06848479807376862, -0.00036435641231946647, -0.02111235074698925, -6.401333666872233e-05, -3.8742269680369645e-05, -0.8793017864227295, -0.014783477410674095, -0.0021098037250339985, -0.14660769701004028, -0.947611927986145, -0.0001668790791882202, -0.08960659801959991, -0.07704783231019974, -2.275683879852295, -0.09279953688383102, -0.8186358213424683, -0.001932302606292069, -0.013460002839565277, -0.41933614015579224, -2.2875428199768066, -0.0002498314715921879, -0.009258432313799858, -0.019812660291790962, -0.7451606392860413, -0.36360964179039, -0.05770380049943924, -0.0005164004978723824, -0.0034484940115362406, -0.0006864098832011223, -0.36264148354530334, -0.9989213347434998, -2.1942524909973145, -1.6209421157836914, -1.2221633195877075, -2.9385013580322266, -0.06937695294618607, -0.020410625264048576, -0.009634898044168949, -0.05870499834418297, -0.056014835834503174, -2.5748875486897305e-05, -0.02554425224661827, -0.006746609229594469, -1.6268047094345093, -2.364488124847412, -0.046918828040361404, -0.18498198688030243, -2.0957396030426025, -0.000876757490914315, -0.0038121899124234915, -0.6784352660179138, -0.10483481734991074, -3.0937957763671875, -2.5425031185150146, -1.150280475616455, -0.006185554433614016, -1.4669878482818604, -1.503709077835083, -0.0023308033123612404, -0.46274951100349426, -0.006735597271472216, -0.0011373248416930437, -2.0265373677830212e-05, -0.005520100239664316, -0.016598230227828026, -0.06087501347064972, -0.009622501209378242, -0.16368204355239868, -0.2348695695400238, -0.8934047222137451, -0.009709985926747322, -0.6834279894828796, -1.3564422130584717, -0.17949801683425903, -0.9259464740753174, -0.015241466462612152, -2.761598587036133, -0.330025851726532, -0.002011658623814583, -0.7468476891517639, -0.007595705799758434, -0.012840094976127148, -0.04110046848654747, -0.380392849445343, -0.05886753275990486, -0.07164592295885086, -0.055491361767053604, -0.08047785609960556, -0.1118231788277626, -0.9050493836402893, -0.394594669342041, -1.1902514696121216, -0.0011199399596080184, -0.5052288174629211, -0.8255771398544312, -0.24799981713294983, -0.0347643680870533, -0.0030055134557187557, -0.04059247672557831, -0.002432603854686022, -0.001383896335028112, -0.000856747676152736, -0.06780652701854706, -0.06918419152498245, -0.0038789284881204367, -0.017429400235414505, -0.00702648563310504, -0.000780635280534625, -0.0031680890824645758, -0.09228117018938065, -0.0011481605470180511, -0.47654208540916443, -0.014074708335101604, -0.015722833573818207, -0.00205163168720901, -0.0013636585790663958, -0.5322445631027222, -0.11402060836553574, -0.10192713141441345, -0.024133719503879547, -0.0004459816846065223, -0.00014876213390380144, -0.01371002197265625, -0.0029424012172967196, -0.002886179368942976, -0.000350175570929423, -0.006773842498660088, -0.006179037969559431, -0.001213052892126143, -0.00047100416850298643, -0.017109999433159828, -0.001615172834135592, -0.10176639258861542, -0.13004136085510254, -2.2648274898529053, -0.004771869163960218, -0.315421998500824, -0.47393664717674255, -0.5779609084129333, -0.04043759033083916, -0.09862057864665985, -0.3725387454032898, -2.3748655319213867, -0.08577495813369751, -0.0041438196785748005, -0.7297297120094299, -0.0015349523164331913, -0.041947994381189346, -1.6784770488739014, -0.0033930132631212473, -0.0017999890260398388, -1.4305104514278355e-06, -1.9447941780090332, -0.0027091726660728455, -0.002514536026865244, -0.005018139258027077, -0.003869547275826335, -1.6899152994155884, -0.054563697427511215, -0.16225822269916534, -0.11089406907558441, -0.2213819921016693, -0.045188289135694504, -0.24600902199745178, -0.0005704921204596758, -0.05110781267285347, -0.0020557953976094723, -0.05444200709462166, -0.0665755346417427, -0.009610576555132866, -1.3689942359924316, -0.09828697144985199, -0.014390849508345127, -0.0037316703237593174, -1.1779695749282837, -0.8338791131973267, -0.010794698260724545, -0.03518291935324669, -0.3336230516433716, -5.2569914259947836e-05, -0.0004988856380805373, -0.18665409088134766, -0.007036429364234209, -0.05466720461845398], "finish_reason": "length"}], "metrics": {"energy": 272.468692448616, "energy_per_token": 1.0643308298774063, "time": 11.148471, "time_per_token": 0.04354871484375}}
{"outputs": [{"text": "try:\n        res = urllib.request.urlopen(url)\n        if res.code == 200:\n            doc = pq(url=url, parser='html5lib')\n            anchors = doc('a')\n            data = []\n            for a in anchors:\n                data.append({\n                    'text': pq(a).text(),\n                    'href': pq(a).attr('href'),\n                    'fetch_time': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),\n                })\n            df = pd.DataFrame(data)\n            return df\n        else:\n            raise URLError(res.code)\n    except ValueError:\n        raise ValueError(f'Invalid URL: {url}')\n    except URLError as e:\n        raise URLError(e.code)", "tokens": ["try", ":", "\n", "        ", "res", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "if", " res", ".", "code", " ==", " ", "2", "0", "0", ":", "\n", "            ", "doc", " =", " p", "q", "(", "url", "=", "url", ",", " parser", "='", "html", "5", "lib", "')", "\n", "            ", "anch", "ors", " =", " doc", "('", "a", "')", "\n", "            ", "data", " =", " []", "\n", "            ", "for", " a", " in", " anch", "ors", ":", "\n", "                ", "data", ".", "append", "({", "\n", "                ", "    ", "'", "text", "':", " p", "q", "(", "a", ")", ".", "text", "()", ",", "\n", "                ", "    ", "'", "href", "':", " p", "q", "(", "a", ")", ".", "attr", "('", "href", "')", ",", "\n", "                ", "    ", "'", "fetch", "_", "time", "':", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "                ", "})", "\n", "            ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "            ", "return", " df", "\n", "        ", "else", ":", "\n", "            ", "raise", " UR", "LE", "rror", "(", "res", ".", "code", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Invalid", " URL", ":", " {", "url", "}", "')", "\n", "    ", "except", " UR", "LE", "rror", " as", " e", ":", "\n", "        ", "raise", " UR", "LE", "rror", "(", "e", ".", "code", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -3.66574764251709, -0.04371621087193489, -0.3000261187553406, -9.989239333663136e-05, -1.1801649634435307e-05, -0.0008045773720368743, -0.0004060635983478278, -0.0003349220205564052, -0.09336802363395691, -0.0005516675882972777, -0.002987685613334179, -0.0028380376752465963, -0.08954250812530518, -0.07525880634784698, -0.46920761466026306, -2.394519805908203, -0.6941334009170532, -0.09380540996789932, -1.9610121250152588, -0.9424196481704712, -0.010110002011060715, -0.22612068057060242, -0.0001736728590913117, -0.00027938754647038877, -0.020864875987172127, -0.04632501304149628, -0.023292500525712967, -2.2478444576263428, -0.019567785784602165, -0.008036894723773003, -3.0636318115284666e-05, -0.0015067425556480885, -1.7561687231063843, -0.1642937809228897, -0.08924130350351334, -2.764676570892334, -2.0738067626953125, -0.21156121790409088, -0.21656055748462677, -0.2300509512424469, -0.010722994804382324, -0.033564161509275436, -0.04265419393777847, -0.11760669946670532, -2.458549976348877, -0.009017812088131905, -0.024552784860134125, -0.060547538101673126, -0.2162804901599884, -0.08974839001893997, -0.14600245654582977, -0.15031351149082184, -0.10050677508115768, -1.3282647132873535, -0.17846888303756714, -0.5382809042930603, -0.004771157167851925, -0.049389276653528214, -0.13988713920116425, -1.6247000694274902, -0.005897620692849159, -0.001057661371305585, -9.536738616588991e-07, -0.08351702988147736, -0.00549010606482625, -0.0025000290479511023, -1.7489217519760132, -0.017231514677405357, -0.0022280411794781685, -0.4297325313091278, -0.44899782538414, -0.00026806574896909297, -0.07268458604812622, -0.07898206263780594, -0.13278451561927795, -0.014981025829911232, -1.0116486549377441, -0.00014208737411536276, -0.008131848648190498, -0.004335290752351284, -0.0017032414907589555, -0.05975920706987381, -0.23607465624809265, -0.004029133357107639, -0.1088518500328064, -0.07177451997995377, -7.4741430580616e-05, -0.00033468366018496454, -0.0036042272113263607, -0.005586250685155392, -0.0009716795175336301, -0.04878523573279381, -0.0002469711471349001, -0.000750617531593889, -0.00022468426323030144, -0.00047743841423653066, -0.01317568589001894, -0.005709411576390266, -0.1847745031118393, -0.0010420613689348102, -0.0003355178632773459, -0.021192416548728943, -0.00532695883885026, -0.00032574593205936253, -0.013690503314137459, -0.015187692828476429, -0.017130624502897263, -0.0037325017619878054, -0.0019050560658797622, -0.0017579830018803477, -0.12241192907094955, -0.00031382881570607424, -0.13397985696792603, -0.0005152089870534837, -0.0156692024320364, -0.06226830184459686, -9.691245941212401e-05, -0.18685190379619598, -0.004249234218150377, -0.002954405965283513, -0.0030433074571192265, -0.002324500121176243, -8.380061626667157e-05, -0.0003618539194576442, -0.008237316273152828, -0.0027839497197419405, -0.0005332001601345837, -0.000270091783022508, -0.0020129671320319176, -0.0005009111482650042, -0.006524569820612669, -2.055234670639038, -0.01900510862469673, -0.011151842772960663, -0.052303340286016464, -0.0008667526417411864, -0.1455717533826828, -0.8826393485069275, -0.012054098770022392, -0.0036566078197211027, -6.222531374078244e-05, -0.0053137969225645065, -0.021579118445515633, -0.007775634527206421, -0.2220623642206192, -0.008615703321993351, -0.13994745910167694, -0.17506209015846252, -0.006183658726513386, -0.006399377249181271, -0.13605937361717224, -0.04927138239145279, -0.0004549183649942279, -0.009188272058963776, -0.0026956195943057537, -0.22590701282024384, -1.4894905090332031, -0.0005127069307491183, -0.00015293381875380874, -1.044025182723999, -1.4552383422851562, -0.1232980489730835, -0.5696409344673157, -0.053153861314058304, -0.004572768695652485, -0.07321321219205856, -0.002376353135332465, -0.6424838900566101, -0.00016556799528189003, -0.45685455203056335, -0.004597450606524944, -0.0015572099946439266, -0.07934550940990448, -0.17279906570911407, -0.0003906917118001729, -0.7069912552833557, -1.5623878240585327, -0.6965696811676025, -0.6887333393096924, -0.17775101959705353, -0.15639658272266388, -0.026181422173976898, -0.0034602549858391285, -0.012370643205940723, -0.026862168684601784, -0.0562739335000515, -0.12367693334817886, -0.003921795636415482, -0.6161668300628662, -1.764281842042692e-05, -4.529942543740617e-06, -0.5861805081367493, -0.3134586811065674, -0.0005397531786002219, -0.002290603704750538, -0.000704159727320075, -0.373256653547287, -0.08433780819177628, -4.660974445869215e-05, -7.033323527139146e-06, -0.04880646616220474, -0.8556455373764038, -0.43689677119255066, -1.8542888164520264, -1.307471752166748, -4.768370445162873e-07, -1.4305104514278355e-06, -0.0004700509598478675, -8.11782301752828e-05, -0.06664378941059113], "finish_reason": "stop"}], "metrics": {"energy": 209.50341827487966, "energy_per_token": 0.9789879358639236, "time": 9.264321, "time_per_token": 0.04329121962616823}}
{"outputs": [{"text": "# If the provided URL is invalid or empty, raise a ValueError.\n    if not url or not str(url).strip() or url.split('://')[-1] == '':\n        raise ValueError('URL is invalid or empty')\n\n    try:\n        # Get the HTML content of the URL.\n        html = urllib.request.urlopen(url).read()\n        # Parse the HTML content using the PyQuery library.\n        doc = pq(html)\n    except Exception as e:\n        raise URLError(e)\n\n    # Initialize a pandas DataFrame to store the HTML tags.\n    data = pd.DataFrame()\n\n    # Iterate over the HTML tags and add their attributes to the data.\n    for a in doc('a').items():\n        data = pd.concat([data, pd.DataFrame({'href': [a.attr.href], 'text': [a.text()], 'fetch_time': [datetime.now()]})],\n                    ignore_index=True)\n\n    return data", "tokens": ["#", " If", " the", " provided", " URL", " is", " invalid", " or", " empty", ",", " raise", " a", " Value", "Error", ".", "\n", "    ", "if", " not", " url", " or", " not", " str", "(", "url", ")", ".", "strip", "()", " or", " url", ".", "split", "('", "://", "')", "[-", "1", "]", " ==", " '", "':", "\n", "        ", "raise", " Value", "Error", "('", "URL", " is", " invalid", " or", " empty", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Get", " the", " HTML", " content", " of", " the", " URL", ".", "\n", "        ", "html", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", ".", "read", "()", "\n", "        ", "#", " Parse", " the", " HTML", " content", " using", " the", " Py", "Query", " library", ".", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " UR", "LE", "rror", "(", "e", ")", "\n", "\n", "    ", "#", " Initialize", " a", " pandas", " Data", "Frame", " to", " store", " the", " HTML", " tags", ".", "\n", "    ", "data", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " HTML", " tags", " and", " add", " their", " attributes", " to", " the", " data", ".", "\n", "    ", "for", " a", " in", " doc", "('", "a", "')", ".", "items", "():", "\n", "        ", "data", " =", " pd", ".", "concat", "([", "data", ",", " pd", ".", "DataFrame", "({", "'", "href", "':", " [", "a", ".", "attr", ".", "href", "]", ",", " '", "text", "':", " [", "a", ".", "text", "()", "]", ",", " '", "fetch", "_", "time", "':", " [", "datetime", ".", "now", "()", "]", "})]", ",", "\n", "                ", "    ", "ignore", "_", "index", "=", "True", ")", "\n", "\n", "    ", "return", " data", "\n", "\n", "def"], "logprobs": [-1.6888309717178345, -4.02631950378418, -0.556973397731781, -1.209779143333435, -0.07518759369850159, -0.004109510220587254, -0.6816238760948181, -0.2500019669532776, -0.01218294259160757, -0.07184097915887833, -0.030421223491430283, -0.5710757970809937, -0.014565800316631794, -0.002989706117659807, -0.9230095744132996, -0.006567087024450302, -0.004989078734070063, -0.03957010433077812, -0.20760850608348846, -0.010180569253861904, -2.3531198501586914, -0.9505491852760315, -3.3361449241638184, -0.05769322067499161, -0.006022283341735601, -0.1376345157623291, -0.03360035642981529, -0.26021963357925415, -2.739504337310791, -0.9059710502624512, -1.4596693515777588, -0.44189828634262085, -3.022519111633301, -0.9483627676963806, -1.1839841604232788, -0.02479737251996994, -1.3349316120147705, -0.0007474012672901154, -0.015753930434584618, -1.1438729763031006, -0.2417587786912918, -0.06453175842761993, -0.024398768320679665, -0.003153591649606824, -0.04180269315838814, -0.0034313867799937725, -3.6238969187252223e-05, -0.5864420533180237, -2.0145082473754883, -0.6535888910293579, -0.2650136649608612, -0.2991631329059601, -0.017439942806959152, -0.45569536089897156, -0.001303895260207355, -0.3255607783794403, -0.0021878371480852365, -2.6166739463806152, -0.0005371319712139666, -0.025871891528367996, -0.023568715900182724, -0.22685977816581726, -3.5817160606384277, -0.2709200382232666, -0.1864197552204132, -0.06724706292152405, -0.6136618256568909, -0.010387050919234753, -0.7537381649017334, -1.1961476802825928, -0.01645670272409916, -0.001013361383229494, -1.5023953914642334, -0.315811425447464, -0.27952539920806885, -0.00019035911827813834, -8.583032467868179e-06, -0.0003047717036679387, -0.00010501786891836673, -4.470248313737102e-05, -0.010745874606072903, -0.0003203832311555743, -0.0008205384365282953, -0.013292857445776463, -0.04853622615337372, -0.3524288833141327, -0.0007350126979872584, -0.0011124381562694907, -0.22953777015209198, -1.015864372253418, -0.3868600130081177, -1.188368797302246, -0.047460220754146576, -0.032442256808280945, -0.26187756657600403, -0.4306189715862274, -1.1249897480010986, -0.37143680453300476, -0.0011638780124485493, -0.13485276699066162, -0.10891257226467133, -0.00398579565808177, -0.0008985534077510238, -1.0692143440246582, -0.005892643239349127, -0.0006962973857298493, -3.516612196108326e-05, -0.0004175029753241688, -0.006212092004716396, -0.10361463576555252, -0.005528636276721954, -1.703099250793457, -0.10455171018838882, -2.986332654953003, -0.12897522747516632, -0.19978037476539612, -0.001702408422715962, -0.05400162935256958, -0.0032366530504077673, -0.7192733287811279, -0.6174220442771912, -0.0007202415145002306, -9.965400386136025e-05, -0.5645328164100647, -0.7368344068527222, -0.04597167670726776, -0.06198262795805931, -0.25134769082069397, -0.00456837797537446, -0.3544759154319763, -2.281998634338379, -1.4068982601165771, -2.395817279815674, -0.07911986112594604, -0.0014581772265955806, -1.8664170503616333, -0.09176471084356308, -0.16328613460063934, -3.8740575313568115, -3.167313814163208, -0.6845899224281311, -0.009289140813052654, -0.0009697740315459669, -1.797999620437622, -0.204555943608284, -0.717888355255127, -0.0005932478234171867, -0.00481612142175436, -1.0318878889083862, -0.002211983548477292, -0.3784584403038025, -0.0009944260818883777, -0.14715781807899475, -0.6991225481033325, -0.0023437668569386005, -0.2739502787590027, -1.4776965379714966, -1.8714689016342163, -0.2784600257873535, -0.8631466031074524, -2.296497106552124, -1.1893954277038574, -1.4448994398117065, -0.12290912121534348, -0.06382160633802414, -2.841963291168213, -2.6610450744628906, -0.008126409724354744, -0.0020697140134871006, -0.09743452817201614, -2.0063765048980713, -0.02779083140194416, -0.0036185993812978268, -0.25349193811416626, -0.0676756352186203, -0.16567733883857727, -1.523991584777832, -0.0050806463696062565, -0.001043133088387549, -0.03078818880021572, -0.01560653280466795, -1.0135329961776733, -0.5335078239440918, -2.1530184745788574, -0.0005339150666259229, -0.4648496210575104, -0.05716150626540184, -0.08713105320930481, -0.007087210193276405, -0.2574475109577179, -0.00024089295766316354, -0.010895876213908195, -0.8602184653282166, -0.6943240165710449, -1.6450209617614746, -0.0114445136860013, -0.22402597963809967, -0.26439881324768066, -0.20168842375278473, -0.012150791473686695, -1.005281925201416, -0.1835329234600067, -0.016370980069041252, -0.06816092133522034, -0.6301811337471008, -0.016323482617735863, -0.0018713833997026086, -0.010348117910325527, -0.009511275216937065, -0.0008045773720368743, -0.10403553396463394, -0.06960270553827286, -0.037688810378313065, -1.4144811630249023, -0.6393711566925049, -0.04054279625415802, -0.0035051594022661448, -0.0015977962175384164, -0.003759104758501053, -0.17453470826148987, -0.09209255874156952, -0.001352706109173596, -0.07329375296831131, -0.0037836881820112467, -0.6610562205314636, -0.03899690508842468, -0.0013486584648489952, -1.4961973428726196, -0.021413790062069893, -3.08689022064209, -0.5557823777198792, -4.529942543740617e-06, -0.0005925330333411694, -0.051560673862695694, -0.003569423919543624, -0.1078767403960228, -0.008155378513038158, -0.2149963080883026, -0.006394639145582914, -0.3866603970527649, -0.008221355266869068, -0.7647672295570374, -0.039651114493608475, -1.630226731300354], "finish_reason": "stop"}], "metrics": {"energy": 283.3490305662155, "energy_per_token": 1.1612665187139979, "time": 10.516396, "time_per_token": 0.043099983606557375}}
{"outputs": [{"text": "df = None\n\n    if url:\n        try:\n            with urllib.request.urlopen(url) as response:\n                doc = pq(response.read().decode('utf-8'))\n                # Extract anchor tags and their attributes\n                anchors = doc('#mw-content-text a').items()\n\n                df = pd.DataFrame([\n                    {\n                        \"text\": a.text(),\n                        \"href\": a.attr('href'),\n                        \"fetch_time\": datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n                    } for a in anchors\n                ])\n        except (URLError, ValueError):\n            pass\n\n    return df", "tokens": ["df", " =", " None", "\n", "\n", "    ", "if", " url", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", " as", " response", ":", "\n", "                ", "doc", " =", " p", "q", "(", "response", ".", "read", "()", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "                ", "#", " Ext", "ract", " anchor", " tags", " and", " their", " attributes", "\n", "                ", "anch", "ors", " =", " doc", "('#", "mw", "-", "content", "-", "text", " a", "')", ".", "items", "()", "\n", "\n", "                ", "df", " =", " pd", ".", "DataFrame", "([", "\n", "                ", "    ", "{", "\n", "                ", "        ", "\"", "text", "\":", " a", ".", "text", "()", ",", "\n", "                ", "        ", "\"", "href", "\":", " a", ".", "attr", "('", "href", "')", ",", "\n", "                ", "        ", "\"", "fetch", "_", "time", "\":", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "                ", "    ", "}", " for", " a", " in", " anch", "ors", "\n", "                ", "])", "\n", "        ", "except", " (", "UR", "LE", "rror", ",", " Value", "Error", "):", "\n", "            ", "pass", "\n", "\n", "    ", "return", " df"], "logprobs": [-2.8027243614196777, -0.1120196208357811, -2.038083553314209, -0.02267388068139553, -1.323999047279358, -0.002600979758426547, -1.415846824645996, -0.5707280039787292, -1.170841932296753, -0.04304375872015953, -0.044053804129362106, -0.37427031993865967, -0.0003296785580459982, -0.0076385317370295525, -0.014026514254510403, -2.9346113204956055, -0.05360206961631775, -0.0002033503697020933, -7.629365427419543e-06, -0.0006445952458307147, -0.0002217047003796324, -0.00022480344341602176, -0.004532777238637209, -0.0003129946126136929, -0.001705383649095893, -0.002085417043417692, -0.15863952040672302, -0.001077428925782442, -1.1944726705551147, -0.009057624265551567, -0.022594982758164406, -0.022067122161388397, -2.3182826042175293, -0.01269591599702835, -0.00882735289633274, -3.6238969187252223e-05, -0.0014884117990732193, -0.11433465033769608, -0.6027364134788513, -0.007849679328501225, -1.2701005935668945, -0.7425238490104675, -0.0025399825535714626, -0.5316871404647827, -0.0101179089397192, -0.16105228662490845, -0.0007578838267363608, -0.020301993936300278, -0.01730228401720524, -0.25161367654800415, -3.4450020790100098, -1.8495776653289795, -0.16266000270843506, -2.395941734313965, -0.2243945598602295, -1.6528593301773071, -0.42936447262763977, -0.778015673160553, -0.16504240036010742, -0.004065107554197311, -0.6895530819892883, -0.00217189802788198, -0.007808990776538849, -0.051976438611745834, -2.743711471557617, -1.0191758871078491, -0.0015668508131057024, -0.1432051807641983, -0.0005919373361393809, -0.0018216458847746253, -0.8643462061882019, -0.21663716435432434, -2.1316025257110596, -0.019377337768673897, -0.00486179580911994, -0.01968105509877205, -1.6998399496078491, -0.01081451028585434, -1.7525558471679688, -0.049870025366544724, -0.06365048140287399, -0.00031251792097464204, -0.005053366534411907, -1.437156081199646, -1.7559823989868164, -0.0005511910421773791, -0.06388624757528305, -0.9571585059165955, -0.015695489943027496, -0.0004969792207702994, -0.012868693098425865, -2.804011344909668, -0.10752565413713455, -0.007700520101934671, -1.95640230178833, -0.03422089293599129, -0.06607173383235931, -0.08543222397565842, -0.05884595215320587, -0.03503340855240822, -9.655486064730212e-05, -0.0007332258974201977, -0.0049607292748987675, -0.00455532455816865, -0.0005999195855110884, -0.10421717911958694, -0.06390459090471268, -0.007590973284095526, -0.7312177419662476, -0.00039009589818306267, -0.0007390628452412784, -0.0710134282708168, -0.011225873604416847, -0.00048232366680167615, -0.008403299376368523, -0.019927769899368286, -0.019758429378271103, -0.003412734717130661, -0.001955146435648203, -0.0018637683242559433, -0.11752031743526459, -0.00019202772818971425, -0.07099965959787369, -0.0002734287118073553, -0.008702566847205162, -0.05386868491768837, -6.961580220377073e-05, -0.7878507971763611, -0.03059558942914009, -0.0021107555367052555, -0.0021663072984665632, -0.0018422313733026385, -0.0018961322493851185, -4.207999518257566e-05, -0.00017867876158561558, -0.008442427031695843, -0.0012223399244248867, -0.0005872909096069634, -0.00010477947944309562, -0.0008812834857963026, -0.0004391897819004953, -0.006885018199682236, -0.0020258158911019564, -0.11220771074295044, -0.009156261570751667, -0.019015399739146233, -7.331102824537084e-05, -0.5296143293380737, -0.002959041390568018, -0.001692292862571776, -0.000764792668633163, -2.0265558760002023e-06, -0.08007168769836426, -0.0045211478136479855, -0.12664660811424255, -0.007029090076684952, -0.5584260821342468, -0.005701233167201281, -0.9450500011444092, -1.720808982849121, -0.0004232226056046784, -7.390948667307384e-06, -0.033546753227710724, -0.3644635081291199, -3.373566141817719e-05, -0.6009016036987305, -0.008684131316840649, -0.004688223358243704, -1.8117958307266235, -0.024097878485918045, -0.9265741109848022, -0.010645153000950813, -0.03786512836813927, -0.0024701817892491817], "finish_reason": "stop"}], "metrics": {"energy": 207.66254926872261, "energy_per_token": 1.1934629268317392, "time": 7.3648286, "time_per_token": 0.04232660114942529}}
{"outputs": [{"text": "fetch_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    df = None\n    try:\n        if not url:\n            raise ValueError('URL cannot be empty or null')\n        content = urllib.request.urlopen(url)\n        html = content.read().decode('utf-8')\n        doc = pq(html)\n        df = pd.DataFrame()\n        for ele in doc('a[href]').items():\n            elem_text = ele.text()\n            elem_href = ele.attr('href')\n            df = df.append(pd.DataFrame(\n                {\n                    'text': [elem_text],\n                    'href': [elem_href],\n                    'fetch_time': [fetch_time],\n                }\n            ))\n    except urllib.error.URLError as e:\n        print(e)\n    except Exception as e:\n        print(f\"Error: {e}\")\n    return df", "tokens": ["fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "df", " =", " None", "\n", "    ", "try", ":", "\n", "        ", "if", " not", " url", ":", "\n", "            ", "raise", " Value", "Error", "('", "URL", " cannot", " be", " empty", " or", " null", "')", "\n", "        ", "content", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", " =", " content", ".", "read", "()", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "        ", "for", " ele", " in", " doc", "('", "a", "[", "href", "]", "')", ".", "items", "():", "\n", "            ", "elem", "_", "text", " =", " ele", ".", "text", "()", "\n", "            ", "elem", "_", "href", " =", " ele", ".", "attr", "('", "href", "')", "\n", "            ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "\n", "                ", "{", "\n", "                ", "    ", "'", "text", "':", " [", "elem", "_", "text", "]", ",", "\n", "                ", "    ", "'", "href", "':", " [", "elem", "_", "href", "]", ",", "\n", "                ", "    ", "'", "fetch", "_", "time", "':", " [", "fetch", "_", "time", "]", ",", "\n", "                ", "}", "\n", "            ", "))", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n", "    ", "return", " df"], "logprobs": [-2.9121222496032715, -0.020064834505319595, -0.0860733836889267, -0.033958666026592255, -0.04984552785754204, -0.0002972637885250151, -0.10938242822885513, -0.001001690630801022, -0.13904277980327606, -0.030024854466319084, -5.6265202147187665e-05, -0.27114176750183105, -0.015938615426421165, -0.006917220074683428, -0.0038602848071604967, -0.002419165801256895, -8.046303264563903e-05, -0.00023266946664080024, -0.027104103937745094, -0.0037561357021331787, -0.0012244831304997206, -0.0002240883477497846, -0.0017763087525963783, -0.000714523543138057, -0.007897816598415375, -0.044615451246500015, -0.3303222358226776, -2.7486565113067627, -0.06944257020950317, -2.512535333633423, -0.016704684123396873, -0.449234277009964, -0.8800452351570129, -0.0008509114268235862, -0.003927257843315601, -0.02000138722360134, -0.8388709425926208, -1.002183198928833, -0.02162601612508297, -0.1322115957736969, -0.023730777204036713, -0.0020901754032820463, -0.03282024711370468, -0.012683557346463203, -4.768258077092469e-05, -0.8963919878005981, -1.0662709474563599, -0.7631136178970337, -0.00039772229501977563, -0.04019748792052269, -1.7915847301483154, -2.698922634124756, -0.5126014947891235, -0.001911837956868112, -0.26071447134017944, -3.9848194122314453, -0.01366345677524805, -0.21673688292503357, -0.00015269544383045286, -5.364403477869928e-06, -0.00043644916149787605, -9.226373367710039e-05, -7.676783570786938e-05, -0.009663470089435577, -0.00022504181833937764, -0.000692961853928864, -0.002753992099314928, -0.0543084479868412, -1.4776643514633179, -0.07157689332962036, -1.1617488861083984, -0.25278228521347046, -0.12117986381053925, -0.0010342017048969865, -0.003678224515169859, -0.0018141493201255798, -0.8705165386199951, -0.0009087961516343057, -0.4212179481983185, -0.019668782129883766, -0.05844675377011299, -0.0002699726028367877, -0.009275085292756557, -0.013214627280831337, -0.07523027807474136, -1.1835720539093018, -0.006085675675421953, -0.001427346607670188, -1.9550132492440753e-05, -0.000757645582780242, -0.003325291909277439, -0.00949521642178297, -0.015816709026694298, -0.08156793564558029, -1.2730766534805298, -0.035092685371637344, -0.2142762839794159, -0.00010561384988250211, -0.006846066564321518, -1.8703919649124146, -0.006147049367427826, -0.07362273335456848, -0.46761706471443176, -2.797173023223877, -1.4687496423721313, -0.0076548573561012745, -0.21744276583194733, -0.24148747324943542, -2.625701904296875, -0.008714739233255386, -0.07307437807321548, -0.015263655222952366, -0.2087673544883728, -0.002095290692523122, -0.0028855851851403713, -0.01960975117981434, -0.008953424170613289, -2.9583184719085693, -1.6088634729385376, -1.140224814414978, -0.051520369946956635, -0.05445307120680809, -0.13071449100971222, -0.08935283124446869, -0.012395487166941166, -0.27354177832603455, -0.0015328098088502884, -0.03230191394686699, -0.00243926327675581, -0.10203758627176285, -0.0028376809787005186, -0.012921767309308052, -0.08051503449678421, -0.01366416271775961, -1.5082858800888062, -0.0006889115320518613, -0.00014578233822248876, -0.009527452290058136, -0.017120076343417168, -0.41095170378685, -0.48192963004112244, -0.07623297721147537, -0.001383539172820747, -0.01772422157227993, -1.6209453344345093, -0.6492177248001099, -3.8742269680369645e-05, -0.2963419258594513, -1.5887223482131958, -0.5566992163658142, -0.016614409163594246, -2.6871609687805176, -0.036924637854099274, -0.0005090133054181933, -0.03552306070923805, -0.05029851198196411, -0.05370386689901352, -0.01377398706972599, -1.0875879526138306, -0.004475814290344715, -0.0002585315378382802, -0.00010549465514486656, -0.02409985661506653, -0.01104161236435175, -0.01613018848001957, -7.128461584215984e-05, -0.00023898606013972312, -0.0011451836908236146, -0.004381105303764343, -0.001715499092824757, -0.008757871575653553, -0.000694153131917119, -9.035655966727063e-05, -7.843663479434326e-05, -0.0013185387942939997, -0.017188511788845062, -0.0006394725642167032, -0.00032062159152701497, -0.016422461718320847, -0.0052036321721971035, -0.01229634415358305, -0.0030841901898384094, -0.0009454786195419729, -0.0030204886570572853, -0.042472776025533676, -0.005541439633816481, -2.062299427052494e-05, -1.3112935448589269e-05, -0.009187563322484493, -2.0563652515411377, -0.005834453739225864, -0.012246062979102135, -0.3426770269870758, -1.7618745565414429, -0.09185682237148285, -0.6732996106147766, -0.005878184922039509, -0.3715769946575165, -0.00405347254127264, -1.775377631187439, -0.0004676678800024092, -3.099436753473128e-06, -0.00019524575327523053, -0.07567279040813446, -0.0013138956855982542, -0.04409441351890564, -4.970903682988137e-05, -1.680836794548668e-05, -0.29542961716651917, -0.443000853061676, -0.0033906372264027596, -0.00544493505731225, -0.0031891223043203354, -0.5281403660774231, -0.3055499792098999, -0.8445680737495422, -0.2533448338508606, -0.007114434149116278, -0.34224721789360046, -0.4740754961967468, -1.533179759979248, -0.01725190319120884, -0.03824520483613014, -0.003579520620405674, -0.0026324877981096506, -0.0008823553798720241, -0.0590561144053936, -0.038843948394060135, -2.5857720375061035, -1.0335423946380615, -1.2159470319747925, -0.6947094798088074, -0.05797359719872475, -0.09519542753696442, -0.10772562026977539, -0.005141963250935078, -0.0022759742569178343, -0.14223074913024902, -0.5161868333816528, -0.006930716335773468], "finish_reason": "stop"}], "metrics": {"energy": 239.29643914413458, "energy_per_token": 0.9970684964338941, "time": 10.5074215, "time_per_token": 0.043780922916666666}}
{"outputs": [{"text": "fetch_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    if not url:\n        raise ValueError('URL is empty.')\n\n    try:\n        response = urllib.request.urlopen(url)\n    except (urllib.error.URLError, ConnectionError, HTTPError) as e:\n        raise ValueError(\"Error in network connectivity\")\n\n    try:\n        data = pq(response)\n        data.find(\".mw-headline\").each(lambda elem: print(elem))\n        print(f\"Extracted data at {fetch_time}\")\n        return pd.DataFrame({\"text\": [elem.text() for elem in data.find(\".mw-headline\")],\n                             \"href\": [elem.attr['href'] for elem in data.find(\".mw-headline\")],\n                             \"fetch_time\": fetch_time})\n\n    except Exception as e:\n        raise ValueError(\"Error in parsing HTML data\")", "tokens": ["fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "('", "URL", " is", " empty", ".", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "    ", "except", " (", "ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ",", " Connection", "Error", ",", " HTTP", "Error", ")", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Error", " in", " network", " connectivity", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "data", " =", " p", "q", "(", "response", ")", "\n", "        ", "data", ".", "find", "(", "\"", ".", "mw", "-", "head", "line", "\"", ")", ".", "each", "(", "lambda", " ele", "m", ":", " print", "(", "elem", "))", "\n", "        ", "print", "(", "f", "\"", "Ext", "racted", " data", " at", " {", "fetch", "_", "time", "}\"", ")", "\n", "        ", "return", " pd", ".", "DataFrame", "(", "{\"", "text", "\":", " [", "elem", ".", "text", "()", " for", " ele", "m", " in", " data", ".", "find", "(", "\"", ".", "mw", "-", "head", "line", "\"", ")]", ",", "\n", "                ", "             ", "\"", "href", "\":", " [", "elem", ".", "attr", "['", "href", "']", " for", " ele", "m", " in", " data", ".", "find", "(", "\"", ".", "mw", "-", "head", "line", "\"", ")]", ",", "\n", "                ", "             ", "\"", "fetch", "_", "time", "\":", " fetch", "_", "time", "})", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Error", " in", " parsing", " HTML", " data", "\"", ")", "\n", "\n", "if"], "logprobs": [-2.9121222496032715, -0.020064834505319595, -0.0860733836889267, -0.033958666026592255, -0.04984552785754204, -0.0002972637885250151, -0.10938242822885513, -0.001001690630801022, -0.13904277980327606, -0.030024854466319084, -5.6265202147187665e-05, -1.4400508403778076, -0.01528431847691536, -0.007165329530835152, -0.013859462924301624, -0.0043254392221570015, -0.0023832509759813547, -8.391981828026474e-05, -0.00038389943074434996, -0.02700907737016678, -0.004058102611452341, -0.0018704315880313516, -0.0002571013756096363, -0.0018250966677442193, -0.0007389436941593885, -0.010770286433398724, -0.0002456601650919765, -0.0648893192410469, -0.40336641669273376, -1.3629266023635864, -0.4046143889427185, -0.013351320289075375, -0.08849906176328659, -0.020034922286868095, -0.003950886894017458, -0.05359292030334473, -0.0063591040670871735, -4.792098479811102e-05, -1.434672236442566, -1.3395658731460571, -0.9949608445167542, -0.6901436448097229, -2.050898313522339, -0.2113509625196457, -0.0029447784181684256, -1.0852224826812744, -0.0011695933062583208, -0.5671889781951904, -0.0004530118894763291, -0.005460347980260849, -0.008939718827605247, -1.166393518447876, -0.007053356617689133, -0.05805380269885063, -6.663577369181439e-05, -1.2040065485052764e-05, -0.00037472377880476415, -0.00021038226259406656, -0.00012039413559250534, -0.02691090852022171, -0.00021455370006151497, -0.0014317509485408664, -0.001617315225303173, -0.09465878456830978, -0.035170603543519974, -0.8292935490608215, -0.0018134353449568152, -2.818240165710449, -0.33304667472839355, -0.00025281094713136554, -1.9073468138230965e-06, -0.0009205871028825641, -0.046627938747406006, -0.00042703570215962827, -0.10031204670667648, -7.080780778778717e-05, -7.092700980138034e-05, -0.07383490353822708, -2.701510190963745, -0.09780062735080719, -1.7197555303573608, -1.5972262620925903, -0.003927495330572128, -0.9852237105369568, -0.005263874307274818, -0.42151954770088196, -0.0016373097896575928, -0.010062324814498425, -0.0033639054745435715, -0.5923916697502136, -0.36165472865104675, -5.447716102935374e-05, -0.30388855934143066, -2.0023996829986572, -1.92917001247406, -2.317248821258545, -2.475675582885742, -0.9970978498458862, -2.4742207527160645, -0.15418630838394165, -0.052102506160736084, -0.3309500515460968, -0.001368777477182448, -3.2930908203125, -0.000490068516228348, -0.0020655503030866385, -0.0038007893599569798, -2.8454465866088867, -0.02721536159515381, -0.4530474841594696, -3.2066785934148356e-05, -0.0013768726494163275, -0.17202651500701904, -1.1635704040527344, -0.09922149032354355, -1.5092227458953857, -1.784942865371704, -1.9861643314361572, -1.8524203300476074, -1.5371893644332886, -0.0056443363428115845, -2.287489414215088, -1.6718270778656006, -0.006207708735018969, -1.2560479640960693, -0.7674177885055542, -0.22581389546394348, -0.0030581632163375616, -0.27932798862457275, -0.4651898741722107, -0.0034313867799937725, -0.26579010486602783, -1.9756977558135986, -0.8198870420455933, -0.039102837443351746, -0.8071876764297485, -0.070485420525074, -0.3898637592792511, -1.835593342781067, -0.055373843759298325, -0.8725034594535828, -2.151667833328247, -0.08102590590715408, -3.1000685691833496, -0.3500273525714874, -2.6722960472106934, -0.2539900243282318, -0.6259946227073669, -1.8550746440887451, -0.3097212314605713, -0.050674572587013245, -4.1483970562694594e-05, -7.533743337262422e-05, -0.18734554946422577, -0.006422829814255238, -0.009407240897417068, -0.5408751368522644, -0.48465853929519653, -0.4894024431705475, -0.0001967951684491709, -0.010693863965570927, -0.4468405246734619, -1.4741290807724, -0.1307162642478943, -0.013094034045934677, -1.817582368850708, -0.9738128185272217, -0.0868040919303894, -0.08718054741621017, -0.4094160795211792, -0.08871344476938248, -0.0009565545478835702, -1.3351351299206726e-05, -0.0021190824918448925, -0.06743886321783066, -0.502536952495575, -0.054146748036146164, -0.05983421951532364, -0.004327694419771433, -0.04160316661000252, -0.001520549994893372, -0.00039104922325350344, -0.005292096640914679, -0.0001248043408850208, -0.013089210726320744, -0.028509413823485374, -0.01029384508728981, -0.06528026610612869, -0.022203894332051277, -0.3701868951320648, -0.005216321442276239, -0.012547479011118412, -0.0025242867413908243, -0.027698421850800514, -0.045898694545030594, -0.0659278854727745, -0.470440536737442, -1.9749382734298706, -0.026649659499526024, -0.0013962768716737628, -0.03271307051181793, -0.00027855331427417696, -5.483612312673358e-06, -0.000659248442389071, -0.004676595330238342, -0.005723635200411081, -0.0008684201166033745, -0.014014171436429024, -0.0015854182420298457, -0.02380632609128952, -0.0004981707315891981, -0.0001445904199499637, -0.004582617897540331, -0.001973706530407071, -0.009716005995869637, -0.006740451790392399, -0.01564960367977619, -0.010487090796232224, -0.0004538459761533886, -0.01753939688205719, -0.015194854699075222, -0.017093593254685402, -0.005059059709310532, -0.0015822045970708132, -0.0047532422468066216, -0.6583681106567383, -9.894321920000948e-06, -2.0265373677830212e-05, -0.2259695827960968, -0.004695223644375801, -1.602961540222168, -0.004698546137660742, -0.013496345840394497, -0.881210446357727, -0.028505707159638405, -0.04820661619305611, -0.0025496138259768486, -0.0066421679221093655, -0.003434831975027919, -0.6025256514549255, -0.15115107595920563, -1.7523612768854946e-05, -0.04781541973352432, -0.9870427846908569, -0.5878019332885742, -0.7281873822212219, -1.6848859786987305, -0.8990843892097473, -2.015624761581421, -0.34807440638542175, -0.5073559880256653, -0.5651545524597168, -0.06225161254405975, -0.3688052296638489], "finish_reason": "stop"}], "metrics": {"energy": 265.5217966690063, "energy_per_token": 1.045361404208686, "time": 10.93482, "time_per_token": 0.043050472440944884}}
{"outputs": [{"text": "if not url:\n        raise ValueError('URL cannot be empty')\n\n    try:\n        # fetch HTML content from URL\n        req = urllib.request.Request(url)\n        with urllib.request.urlopen(req) as response:\n            html = response.read().decode(\"utf-8\")\n\n        # parse HTML content using PyQuery\n        pq_obj = pq(html)\n\n        # extract anchor tag data and format time stamp\n        anchor_tags = pq_obj('a')\n        fetch_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n        # build DataFrame with anchor tag data\n        data = {'text': [], 'href': [], 'fetch_time': []}\n        for tag in anchor_tags:\n            anchor_text = pq(tag).text()\n            anchor_href = pq(tag).attr.get('href', None)\n            data['text'].append(anchor_text)\n            data['href'].append(anchor_href)\n            data", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "('", "URL", " cannot", " be", " empty", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " fetch", " HTML", " content", " from", " URL", "\n", "        ", "req", " =", " ur", "ll", "ib", ".", "request", ".", "Request", "(", "url", ")", "\n", "        ", "with", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "req", ")", " as", " response", ":", "\n", "            ", "html", " =", " response", ".", "read", "()", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n", "\n", "        ", "#", " parse", " HTML", " content", " using", " Py", "Query", "\n", "        ", "pq", "_", "obj", " =", " p", "q", "(", "html", ")", "\n", "\n", "        ", "#", " extract", " anchor", " tag", " data", " and", " format", " time", " stamp", "\n", "        ", "anchor", "_", "tags", " =", " p", "q", "_", "obj", "('", "a", "')", "\n", "        ", "fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "        ", "#", " build", " Data", "Frame", " with", " anchor", " tag", " data", "\n", "        ", "data", " =", " {'", "text", "':", " []", ",", " '", "href", "':", " []", ",", " '", "fetch", "_", "time", "':", " []", "}", "\n", "        ", "for", " tag", " in", " anchor", "_", "tags", ":", "\n", "            ", "anchor", "_", "text", " =", " p", "q", "(", "tag", ")", ".", "text", "()", "\n", "            ", "anchor", "_", "href", " =", " p", "q", "(", "tag", ")", ".", "attr", ".", "get", "('", "href", "'", ",", " None", ")", "\n", "            ", "data", "['", "text", "']", ".", "append", "(", "anchor", "_", "text", ")", "\n", "            ", "data", "['", "href", "']", ".", "append", "(", "anchor", "_", "href", ")", "\n", "            ", "data"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.7515633702278137, -1.2962188720703125, -0.5960391163825989, -0.00029571453342214227, -0.026000361889600754, -0.683875560760498, -0.003810527501627803, -0.45728808641433716, -0.0016160060185939074, -0.8871418237686157, -0.00035398892941884696, -0.00553290406242013, -0.0074418941512703896, -2.442868709564209, -2.354081630706787, -1.22160005569458, -0.28104013204574585, -0.8600762486457825, -1.4462577104568481, -0.17436069250106812, -0.0010938619961962104, -2.6174793243408203, -0.012114164419472218, -0.047661080956459045, -0.00010466027742950246, -5.8412379075889476e-06, -0.0004744596080854535, -0.00015662873920518905, -0.0002882065309677273, -0.10852303355932236, -0.0008247073274105787, -0.0038456786423921585, -0.06956122815608978, -0.028154706582427025, -0.00896228477358818, -0.9896435737609863, -0.007808399386703968, -2.038458114839159e-05, -9.775113539944869e-06, -2.825220326485578e-05, -0.00015066919149830937, -2.276871418871451e-05, -0.00042000532266683877, -0.0011088658357039094, -0.0009364272118546069, -0.031036339700222015, -0.060623835772275925, -0.000262106885202229, -1.2977714538574219, -0.009456484578549862, -0.014228089712560177, -0.004662713035941124, -0.47408515214920044, -0.2933434844017029, -0.0451824776828289, -0.0001264730526600033, -0.0011408970458433032, -0.0007273888913914561, -1.3445816040039062, -0.0006485265912488103, -2.4754159450531006, -0.24099183082580566, -0.022542651742696762, -0.12153473496437073, -0.0006873629172332585, -0.0001433984871255234, -0.0025567482225596905, -0.016881341114640236, -0.6510587334632874, -0.1685415655374527, -0.08136245608329773, -0.5904082655906677, -0.11656232923269272, -0.3554815649986267, -0.8768297433853149, -0.29093050956726074, -0.0018829250475391746, -0.8242089152336121, -0.0005875291535630822, -2.081159830093384, -0.14466513693332672, -2.2268881797790527, -0.0038226405158638954, -0.0014181805308908224, -3.71926071238704e-05, -0.0012391278287395835, -0.0034791436046361923, -0.011497428640723228, -0.008854175917804241, -0.252883642911911, -0.008468668907880783, -0.15944187343120575, -0.5139486193656921, -1.1951987743377686, -1.5197418928146362, -1.113327980041504, -1.877112627029419, -3.2008485794067383, -2.79538631439209, -3.0073909759521484, -0.16260752081871033, -0.0009055804111994803, -1.0407541990280151, -0.011862685903906822, -0.46315035223960876, -0.02158016711473465, -0.15751567482948303, -0.00019774865359067917, -0.001177690108306706, -5.8412379075889476e-06, -0.1868818700313568, -0.03576037660241127, -0.07696891576051712, -0.3996638059616089, -0.04132342338562012, -1.9028046131134033, -0.004212079104036093, -0.0286790169775486, -0.01738511584699154, -0.032992925494909286, -0.0001012035645544529, -0.05852219834923744, -0.0001839230244513601, -0.020172907039523125, -0.013713902793824673, -2.4676019165781327e-05, -1.2220410108566284, -0.010835383087396622, -0.005296721588820219, -0.001716808183118701, -0.001177451922558248, -0.000841025379486382, -2.062299427052494e-05, -9.77468371274881e-05, -0.007281905505806208, -0.0012401993153616786, -0.0006438804557546973, -7.4741430580616e-05, -0.0003295593778602779, -0.00045122456504032016, -0.004996669944375753, -8.356221951544285e-05, -0.008700676262378693, -0.14882315695285797, -0.004616911057382822, -0.2104254961013794, -4.023273468017578, -0.7301157116889954, -0.002248261356726289, -1.6570954322814941, -0.8068584203720093, -0.2150522619485855, -0.08899747580289841, -0.11830350011587143, -0.0010241983691230416, -1.4863085746765137, -0.10660304874181747, -2.2985100746154785, -0.05445736274123192, -0.005759548861533403, -1.230520486831665, -0.0002834395272657275, -0.038096267729997635, -0.0023467401042580605, -0.00031120702624320984, -0.004313095007091761, -0.01024145632982254, -0.0033388365991413593, -0.004930599592626095, -0.0007692000363022089, -0.00033468366018496454, -0.0020170120988041162, -1.3038811683654785, -0.006774671375751495, -0.0024668520782142878, -0.2928444445133209, -0.024128250777721405, -1.0080180168151855, -0.004173261113464832, -0.002161906100809574, -1.9073468138230965e-06, -2.861018856492592e-06, -0.3439677953720093, -0.0020393780432641506, -0.004657254554331303, -1.3310514688491821, -0.5041176676750183, -2.0861239433288574, -0.021463613957166672, -0.6649492979049683, -6.3774932641536e-05, -0.29720786213874817, -0.0016986002447083592, -0.001473889802582562, -0.03983350098133087, -0.1887681782245636, -0.0015274535398930311, -0.2852654755115509, -0.0077815488912165165, -0.2136240154504776, -0.0009501233580522239, -0.3511250913143158, -0.0009633429581299424, -0.025779535993933678, -0.00016699827392585576, -0.002744124736636877, -0.00013541258522309363, -0.0006574614671990275, -0.048365529626607895, -0.0018874465022236109, -1.460723638534546, -2.0354011058807373, -0.09471061825752258, -0.0009622710640542209, -1.373913288116455, -0.005078867077827454, -0.8496165871620178, -8.940297266235575e-05, -0.038369689136743546, -0.15063245594501495, -0.1941618174314499, -0.01587866060435772, -0.0014743659412488341, -1.2874520507466514e-05, -0.004207686986774206, -0.00037353215157054365, -0.00023016665363684297, -0.002733425237238407, -7.271740287251305e-06, -8.296622399939224e-05, -0.024047954007983208, -0.00223910273052752, -0.0007894498412497342, -0.027913490310311317, -0.00026008085114881396, -0.00027771908207796514, -2.884823152271565e-05, -0.0147193418815732, -0.00011085849109804258, -0.00047183825518004596, -0.0011587579501792789, -5.435795901576057e-05, -3.7788631743751466e-05, -0.0253415759652853, -0.002126933541148901, -0.011865513399243355, -0.0037751374766230583], "finish_reason": "length"}], "metrics": {"energy": 256.7138386144638, "energy_per_token": 1.0027884320877491, "time": 11.138023, "time_per_token": 0.04350790234375}}
{"outputs": [{"text": "url = url or \"\"\n    if not url:\n        raise ValueError(\"URL cannot be empty.\")\n\n    url_doc = \"\"\n    try:\n        url_doc = urllib.request.urlopen(url).read()\n    except urllib.request.URLError as e:\n        if hasattr(e, \"code\") and e.code == 404:\n            raise ValueError(f\"URL is invalid: {url}\")\n        elif hasattr(e, \"code\") and e.code == 500:\n            raise ValueError(f\"URL is invalid: {url}\")\n        else:\n            raise e\n\n    d = pq(url_doc)\n\n    rows = []\n    for tag in d('.mw-headline a'):\n        href = pq(tag).attr('href')\n        text = pq(tag).text()\n        rows.append((text, href, datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")))\n\n    return pd.", "tokens": ["url", " =", " url", " or", " \"", "\"", "\n", "    ", "if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " cannot", " be", " empty", ".", "\"", ")", "\n", "\n", "    ", "url", "_", "doc", " =", " \"", "\"", "\n", "    ", "try", ":", "\n", "        ", "url", "_", "doc", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", ".", "read", "()", "\n", "    ", "except", " ur", "ll", "ib", ".", "request", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "if", " has", "attr", "(", "e", ",", " \"", "code", "\"", ")", " and", " e", ".", "code", " ==", " ", "4", "0", "4", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "URL", " is", " invalid", ":", " {", "url", "}\"", ")", "\n", "        ", "elif", " has", "attr", "(", "e", ",", " \"", "code", "\"", ")", " and", " e", ".", "code", " ==", " ", "5", "0", "0", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "URL", " is", " invalid", ":", " {", "url", "}\"", ")", "\n", "        ", "else", ":", "\n", "            ", "raise", " e", "\n", "\n", "    ", "d", " =", " p", "q", "(", "url", "_", "doc", ")", "\n", "\n", "    ", "rows", " =", " []", "\n", "    ", "for", " tag", " in", " d", "('", ".", "mw", "-", "head", "line", " a", "')", ":", "\n", "        ", "href", " =", " p", "q", "(", "tag", ")", ".", "attr", "('", "href", "')", "\n", "        ", "text", " =", " p", "q", "(", "tag", ")", ".", "text", "()", "\n", "        ", "rows", ".", "append", "((", "text", ",", " href", ",", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")))", "\n", "\n", "    ", "return", " pd", "."], "logprobs": [-4.168515682220459, -0.2518855929374695, -0.23701395094394684, -0.8147764205932617, -1.5529183149337769, -0.39151889085769653, -0.024203188717365265, -0.2969543933868408, -0.4252288341522217, -0.38428011536598206, -0.009498522616922855, -0.07994171977043152, -0.018418239429593086, -0.0024366469588130713, -0.04220321774482727, -0.005224859807640314, -3.6477376852417365e-05, -0.17253215610980988, -0.06702345609664917, -1.1319841146469116, -0.5954614877700806, -0.0002739054325502366, -0.03038676269352436, -1.34022855758667, -0.034816641360521317, -0.00033384948619641364, -0.004256475251168013, -0.4087972640991211, -0.001503052655607462, -3.819329261779785, -0.8292407393455505, -3.9089674949645996, -0.018707387149333954, -3.432373046875, -0.26332882046699524, -0.04154610633850098, -0.20499750971794128, -0.20301812887191772, -0.00022635281493421644, -0.004758699797093868, -0.003950293175876141, -0.3305322229862213, -0.001823549740947783, -0.00972627755254507, -0.005420510657131672, -0.570826530456543, -0.00022218143567442894, -3.3378546504536644e-06, -0.0012828224571421742, -0.0003305127320345491, -7.223821739898995e-05, -0.013098387978971004, -0.00020966715237591416, -0.00032824851223267615, -0.004233090206980705, -0.110915407538414, -1.5983002185821533, -0.003006820799782872, -0.004298376385122538, -0.30725547671318054, -0.09540599584579468, -0.002274547005072236, -0.43226245045661926, -3.325883881188929e-05, -6.198863957251888e-06, -0.00017534149810671806, -2.9511783123016357, -3.3378044463461265e-05, -0.0077608488500118256, -0.0001264730526600033, -1.585470999998506e-05, -0.28044450283050537, -0.44826000928878784, -0.0017103818245232105, -0.012357691302895546, -0.0018560340395197272, -1.346559762954712, -0.032257936894893646, -2.074220174108632e-05, -0.00017951308109331876, -0.0004190520558040589, -0.0016432604752480984, -0.5668438673019409, -0.5366427302360535, -0.00010609064338495955, -2.1165900230407715, -0.018579615280032158, -0.6446813344955444, -0.00011038171214750037, -0.00027855331427417696, -0.1810762733221054, -0.001764765940606594, -0.00830328743904829, -0.0006293461774475873, -0.05065497010946274, -0.004870099946856499, -0.052886150777339935, -0.001963831717148423, -0.4703308939933777, -0.1345563679933548, -0.0002658013836480677, -0.015589632093906403, -1.40199613571167, -0.02502724900841713, -1.1317137479782104, -3.2302663326263428, -0.41225892305374146, -0.46292001008987427, -0.04594343900680542, -0.2712494730949402, -0.11709413677453995, -0.0006989181856624782, -0.008911008015275002, -0.04204709827899933, -2.226653575897217, -0.12232765555381775, -6.580135959666222e-05, -6.782778655178845e-05, -0.0004836343287024647, -0.0013043713988736272, -0.022461062297225, -0.31203314661979675, -5.030505417380482e-05, -0.5867161750793457, -0.021149350330233574, -0.08422844856977463, -0.00022897482267580926, -0.0007205988513305783, -0.40694499015808105, -0.0017591729993000627, -0.767425000667572, -0.002218644367530942, -0.24360986053943634, -0.01529746688902378, -0.00778722669929266, -0.0031243578996509314, -0.0811668261885643, -0.2743013799190521, -0.00010978573118336499, -0.0028070115949958563, -0.11659383773803711, -0.0014810318825766444, -1.0350613594055176, -0.327006459236145, -0.20758631825447083, -0.04928624629974365, -0.0034420788288116455, -0.005036761052906513, -0.0865917056798935, -0.0006843847222626209, -0.00573738431558013, -0.08035190403461456, -0.4309057295322418, -0.00010680581908673048, -0.04367136210203171, -0.0014687713701277971, -0.03589310497045517, -1.0840544700622559, -0.01978905126452446, -0.5332537293434143, -0.002891052979975939, -4.197190284729004, -0.1412562131881714, -0.07793271541595459, -5.376194530981593e-05, -0.006401627790182829, -0.022863933816552162, -0.021180279552936554, -3.9457496313843876e-05, -0.09860210865736008, -0.0717197135090828, -1.5905786752700806, -0.0006996329175308347, -3.527308464050293, -0.03233388438820839, -0.1118009015917778, -0.003765755333006382, -0.15163704752922058, -0.2065020352602005, -2.4582762718200684, -0.01241244189441204, -0.007415270898491144, -1.429857850074768, -2.355158805847168, -0.6632544994354248, -0.0019086254760622978, -0.7663605213165283, -0.25259339809417725, -0.4740919768810272, -0.10082465410232544, -0.6682069897651672, -0.03708696365356445, -0.007151363417506218, -2.6663424968719482, -0.09896119683980942, -0.6877346634864807, -0.00026592056383378804, -0.005809328053146601, -0.0010459910845384002, -0.003339549293741584, -0.021516118198633194, -0.017092889174818993, -0.8368822932243347, -0.0016057705506682396, -0.0008204193436540663, -0.12981177866458893, -0.016347171738743782, -0.428653359413147, -0.005129154305905104, -0.05733465030789375, -5.447716102935374e-05, -0.0007277462864294648, -0.000505677133332938, -0.0007717015105299652, -0.00382608431391418, -0.07478601485490799, -0.0011953121284022927, -0.19449064135551453, -0.13148470222949982, -0.42970266938209534, -0.0039155022241175175, -0.0010115751065313816, -1.2941843271255493, -0.1644793599843979, -0.014840326271951199, -0.02100379765033722, -0.1476770043373108, -0.11411058902740479, -0.0002675890573300421, -0.06493110209703445, -0.12843574583530426, -0.001167092937976122, -0.04410114139318466, -7.080780778778717e-05, -0.48800310492515564, -0.01116233505308628, -0.0018687656847760081, -0.017142577096819878, -0.003914433531463146, -0.0035183453001081944, -8.713819261174649e-05, -0.0003833036171272397, -0.019146040081977844, -0.004003130830824375, -0.0015379278920590878, -0.0004805363714694977, -0.0035187015309929848, -0.0009386900928802788, -0.00826982967555523, -0.010275792330503464, -0.004887301009148359, -0.35535699129104614, -0.0005679901223629713, -1.1909024715423584, -0.01156459841877222, -2.5033637939486653e-05], "finish_reason": "length"}], "metrics": {"energy": 256.6474418258667, "energy_per_token": 1.0025290696322917, "time": 11.137113, "time_per_token": 0.04350434765625}}
{"outputs": [{"text": "if not url:\n        raise ValueError('Empty URL!')\n\n    try:\n        response = urllib.request.urlopen(url, timeout=30)\n        html_content = response.read()\n\n        # Convert HTML content to PyQuery object\n        html_doc = pq(html_content)\n\n        # Extract anchor tag data\n        anchor_tags = html_doc('a')\n        anchor_data = []\n        for tag in anchor_tags:\n            text = tag.text.strip()  # Remove whitespace\n            href = tag.attrib.get('href', '')  # Get hyperlink attribute, or an empty string\n            anchor_data.append([text, href])\n\n        df = pd.DataFrame(anchor_data, columns=['text', 'href'])\n        df['fetch_time'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n        return df\n\n    except urllib.error.URLError as e:\n        raise URLError(f'Network Error: {e}')", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "('", "Empty", " URL", "!", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ",", " timeout", "=", "3", "0", ")", "\n", "        ", "html", "_", "content", " =", " response", ".", "read", "()", "\n", "\n", "        ", "#", " Convert", " HTML", " content", " to", " Py", "Query", " object", "\n", "        ", "html", "_", "doc", " =", " p", "q", "(", "html", "_", "content", ")", "\n", "\n", "        ", "#", " Ext", "ract", " anchor", " tag", " data", "\n", "        ", "anchor", "_", "tags", " =", " html", "_", "doc", "('", "a", "')", "\n", "        ", "anchor", "_", "data", " =", " []", "\n", "        ", "for", " tag", " in", " anchor", "_", "tags", ":", "\n", "            ", "text", " =", " tag", ".", "text", ".", "strip", "()", "  ", "#", " Remove", " whites", "pace", "\n", "            ", "href", " =", " tag", ".", "att", "rib", ".", "get", "('", "href", "'", ",", " '", "')", "  ", "#", " Get", " hyper", "link", " attribute", ",", " or", " an", " empty", " string", "\n", "            ", "anchor", "_", "data", ".", "append", "([", "text", ",", " href", "])", "\n", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "anchor", "_", "data", ",", " columns", "=['", "text", "'", ",", " '", "href", "'])", "\n", "        ", "df", "['", "fetch", "_", "time", "']", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "        ", "return", " df", "\n", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "raise", " UR", "LE", "rror", "(", "f", "'", "Network", " Error", ":", " {", "e", "}", "')"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.7515633702278137, -3.2827625274658203, -0.2853529453277588, -3.5933754444122314, -0.09907618165016174, -0.004766530357301235, -0.5864198207855225, -0.0017093108035624027, -1.013586401939392, -0.0004188137245364487, -0.005496033933013678, -0.009685665369033813, -1.0669373273849487, -0.006242657080292702, -0.0630180612206459, -7.450303382938728e-05, -1.9192511899746023e-05, -0.000964295701123774, -0.0002493547508493066, -0.00010299152199877426, -0.022586939856410027, -0.00014578233822248876, -0.0013149671722203493, -0.0023217645939439535, -2.5982723236083984, -0.07211919128894806, -0.033415790647268295, -2.1669492721557617, -0.45694905519485474, -0.19212494790554047, -0.09003113955259323, -0.8523983955383301, -0.718941330909729, -1.8491933345794678, -0.6757153868675232, -0.003108908887952566, -0.04798553138971329, -0.0003097769513260573, -0.0010757618583738804, -0.0010792152024805546, -0.4772041141986847, -2.196382999420166, -0.5500698089599609, -1.4987038373947144, -2.227114200592041, -1.520557165145874, -0.14949916303157806, -0.06425466388463974, -1.5185611248016357, -0.0024160738103091717, -0.3070588707923889, -0.12525905668735504, -0.0009290431626141071, -2.047654151916504, -0.876137912273407, -0.22739389538764954, -0.0018474669195711613, -0.008093536831438541, -2.9205850296420977e-05, -0.0004974558250978589, -0.002667204709723592, -0.03728474676609039, -5.757642793469131e-05, -0.2976904809474945, -0.002997669158503413, -0.13952979445457458, -0.012199311517179012, -0.22473359107971191, -0.29705917835235596, -0.013128625229001045, -1.0871773958206177, -1.5771006345748901, -1.1297314167022705, -0.42029282450675964, -0.0009742995607666671, -0.3292112946510315, -0.002807487268000841, -0.298831969499588, -0.014775725081562996, -0.1627468317747116, -1.5020257706055418e-05, -5.864924969500862e-05, -0.09704697877168655, -0.015977567061781883, -0.04498385265469551, -0.07224529981613159, -0.303448349237442, -1.8486847877502441, -0.0006677066558040679, -0.5956611037254333, -0.022756384685635567, -0.5180337429046631, -0.0063583930023014545, -0.2728949189186096, -0.05805639177560806, -0.6881582736968994, -0.0022561114747077227, -0.0006043276516720653, -2.5629668016335927e-05, -3.2186455882765586e-06, -0.06495333462953568, -0.0027931032236665487, -0.0068603926338255405, -1.545873999595642, -0.05463774502277374, -0.40751001238822937, -0.01944783888757229, -0.08695097267627716, -0.8240872621536255, -0.026433853432536125, -0.005992541089653969, -2.783834934234619, -0.0003363520372658968, -0.6808974742889404, -2.3413820266723633, -0.29219090938568115, -1.211708426475525, -0.006279618479311466, -0.04737313464283943, -0.0064043523743748665, -0.15084736049175262, -0.0502680167555809, -0.18124446272850037, -0.00035529976594261825, -1.4048612117767334, -0.00022706791060045362, -0.00658378517255187, -0.0002236116270069033, -1.0247821807861328, -0.0017689309315755963, -0.5001469254493713, -0.022262420505285263, -0.6246830821037292, -4.386805812828243e-05, -0.7258949875831604, -2.5884134769439697, -0.011989669874310493, -1.1714234352111816, -1.7784473896026611, -0.5438064336776733, -1.382431149482727, -0.000498289882671088, -0.011561652645468712, -0.5763887763023376, -0.11037848889827728, -0.6944825053215027, -0.004238313529640436, -0.009912197478115559, -0.0008989107445813715, -0.0005087750032544136, -0.9672685265541077, -0.013409544713795185, -0.005360871087759733, -0.007495967671275139, -0.748284101486206, -0.01903575286269188, -0.07360179722309113, -0.061861276626586914, -2.2119853496551514, -0.018698494881391525, -0.0022448119707405567, -0.0018705505644902587, -0.00038378025055862963, -0.007511467207223177, -0.011797185055911541, -1.0013530300057027e-05, -2.47952248173533e-05, -0.13020861148834229, -0.04581591114401817, -0.045671287924051285, -0.034746408462524414, -0.0003588747640606016, -3.516612196108326e-05, -0.011031708680093288, -0.00528545631095767, -0.008586629293859005, -0.0173463374376297, -0.22882084548473358, -0.30868345499038696, -0.07081776112318039, -0.0048685576766729355, -0.001960976282134652, -0.0013379440642893314, -0.00018010901112575084, -0.002049847040325403, -0.08119682967662811, -8.11782301752828e-05, -0.061506886035203934, -0.0001110968878492713, -0.014941096305847168, -0.009949848987162113, -3.516612196108326e-05, -0.12469632178544998, -0.005795342847704887, -0.0011647114297375083, -0.0007995745982043445, -0.000476246903417632, -1.9550132492440753e-05, -3.886147169396281e-05, -0.0061334241181612015, -0.0013081812066957355, -0.00028355870745144784, -4.660974445869215e-05, -0.001303061842918396, -0.00017379203927703202, -0.004131116904318333, -0.10935208201408386, -0.9182079434394836, -0.07564593106508255, -0.00433386629447341, -0.015008152462542057, -0.6316734552383423, -0.004954086616635323, -0.01788945682346821, -0.4687176048755646, -0.0001517419150331989, -3.2186455882765586e-06, -0.0002669931564014405, -0.03956609591841698, -0.0006031363154761493, -0.03427157923579216, -0.0001456631434848532, -1.597391747054644e-05, -0.31541329622268677, -0.11883173882961273, -0.00025102324434556067, -0.01331320870667696, -0.0018617454916238785, -1.2298741340637207, -1.1228768825531006, -0.003222750499844551, -0.00033802041434682906, -0.3462446928024292, -1.082217812538147, -0.2691552937030792, -2.5735535621643066, -1.3121569156646729, -0.2817647457122803, -0.05010271444916725, -0.13214285671710968, -0.19192984700202942, -0.023845437914133072], "finish_reason": "stop"}], "metrics": {"energy": 265.924949104309, "energy_per_token": 1.059461948622745, "time": 10.942099, "time_per_token": 0.04359401992031873}}
{"outputs": [{"text": "if url is None or url == '':\n        raise ValueError('url is not valid')\n\n    try:\n        res = urllib.request.urlopen(url)\n        html = res.read().decode('utf-8')\n        df = pd.DataFrame(pq(html)('a').items(), columns=['text', 'href', 'fetch_time'])\n        df['fetch_time'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n        return df\n\n    except urllib.error.URLError:\n        raise urllib.error.URLError('The server was not found or the server')", "tokens": ["if", " url", " is", " None", " or", " url", " ==", " '", "':", "\n", "        ", "raise", " Value", "Error", "('", "url", " is", " not", " valid", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "res", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", " =", " res", ".", "read", "()", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "pq", "(", "html", ")", "('", "a", "')", ".", "items", "()", ",", " columns", "=['", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'])", "\n", "        ", "df", "['", "fetch", "_", "time", "']", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "        ", "return", " df", "\n", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", "('", "The", " server", " was", " not", " found", " or", " the", " server", "')", "\n", "\n", "print"], "logprobs": [-1.309146523475647, -1.0612399578094482, -1.422696828842163, -0.06181522086262703, -0.22816859185695648, -0.6009581089019775, -0.19656355679035187, -0.4504558742046356, -0.014122663997113705, -0.01329638622701168, -0.0029912511818110943, -0.05148538202047348, -0.009561930783092976, -6.341733387671411e-05, -0.5875309705734253, -3.0466461181640625, -1.1460949182510376, -2.6294326782226562, -0.28559306263923645, -0.40628954768180847, -0.004424781538546085, -0.6970458030700684, -0.0013062763027846813, -0.8587139844894409, -0.0005782362422905862, -0.00624028779566288, -0.014113378711044788, -3.2626471519470215, -0.04399391636252403, -0.19838878512382507, -0.00014029949670657516, -1.7165990357170813e-05, -0.0011073178611695766, -0.0003474347176961601, -0.00014578233822248876, -0.10015406459569931, -0.00040713604539632797, -0.0020359281916171312, -0.002934794407337904, -0.08045629411935806, -0.08418286591768265, -1.0264015197753906, -0.8869206309318542, -0.11564112454652786, -0.0797685980796814, -0.00047755756531842053, -0.0021673778537660837, -0.0014806747203692794, -0.9921332597732544, -0.001010503270663321, -0.48960503935813904, -0.021209456026554108, -0.08463238924741745, -0.00037722624256275594, -0.006562231108546257, -0.014130187220871449, -0.47384434938430786, -2.765834331512451, -0.045797236263751984, -0.7802547216415405, -0.0023910999298095703, -0.21265698969364166, -0.8826711177825928, -0.6282281875610352, -0.016887085512280464, -0.01115207839757204, -0.5275508761405945, -0.060096483677625656, -0.07277204841375351, -0.5204983353614807, -0.08280937373638153, -0.09886984527111053, -1.0270462036132812, -0.0018373527564108372, -0.2545698285102844, -0.1530761569738388, -0.1344008892774582, -0.0015307862777262926, -0.0002474478678777814, -0.019805997610092163, -0.00257862638682127, -0.9929580688476562, -0.016890717670321465, -0.025907205417752266, -0.03817291930317879, -0.0029939848463982344, -0.0009180859779007733, -0.010431645438075066, -0.02710062265396118, -0.14148803055286407, -0.19395466148853302, -0.09891282021999359, -0.01704976335167885, -0.0004539651272352785, -0.000707971747033298, -0.000966915744356811, -0.008788831532001495, -0.2788845896720886, -0.0006700892699882388, -0.22048775851726532, -0.00041869457345455885, -0.05900430679321289, -0.04728274419903755, -0.00013815402053296566, -0.13661180436611176, -0.014442668296396732, -0.003997431602329016, -0.0030137142166495323, -0.002683730563148856, -0.0001062098381225951, -0.00029273517429828644, -0.012267141602933407, -0.0032165716402232647, -0.0008914072532206774, -0.0002650863316375762, -0.003298320807516575, -0.0004390706308186054, -0.007361785043030977, -0.010360623709857464, -2.3431808948516846, -0.6484779715538025, -0.12916035950183868, -0.007802603766322136, -0.013235332444310188, -0.7151807546615601, -0.005712493322789669, -0.0044149309396743774, -0.5968889594078064, -0.0005964645533822477, -1.1920922133867862e-06, -0.00011264643399044871, -0.05510266497731209, -0.0009706076816655695, -0.021854057908058167, -5.721882189391181e-05, -2.9205850296420977e-05, -1.2755422592163086, -0.008029444143176079, -0.008183165453374386, -0.3514491021633148, -1.0569379329681396, -0.00011860620725201443, -1.0251946150674485e-05, -0.0004385939973872155, -0.0029844765085726976, -0.002782047726213932, -0.007991128601133823, -0.00015758226800244302, -5.960446742392378e-06, -0.42744359374046326, -3.588200092315674, -0.5097220540046692, -0.8140062689781189, -0.2890634834766388, -0.015090587548911572, -0.3622305691242218, -2.174241065979004, -2.197838306427002, -3.2942192554473877, -0.6392073631286621, -0.20947539806365967, -3.3911726474761963], "finish_reason": "stop"}], "metrics": {"energy": 163.4224872837066, "energy_per_token": 1.0087807857018927, "time": 6.9519672, "time_per_token": 0.04291337777777778}}
{"outputs": [{"text": "if not url:\n        raise ValueError('Provided url is empty')\n\n    try:\n        r = requests.get(url)\n        r.raise_for_status()\n    except requests.exceptions.RequestException as e:\n        print(\"An error occurred: {}\".format(e))\n    except Exception as e:\n        print(\"An error occurred: {}\".format(e))\n\n    data = []\n    doc = pq(r.content)\n    for a in doc('a').items():\n        data.append({\n            'text': a.text(),\n            'href': a.attr.href,\n            'fetch_time': str(datetime.now())\n        })\n    return pd.DataFrame(data)", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "('", "Prov", "ided", " url", " is", " empty", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "r", " =", " requests", ".", "get", "(", "url", ")", "\n", "        ", "r", ".", "raise", "_", "for", "_", "status", "()", "\n", "    ", "except", " requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", ":", " {", "}\"", ".", "format", "(", "e", "))", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", ":", " {", "}\"", ".", "format", "(", "e", "))", "\n", "\n", "    ", "data", " =", " []", "\n", "    ", "doc", " =", " p", "q", "(", "r", ".", "content", ")", "\n", "    ", "for", " a", " in", " doc", "('", "a", "')", ".", "items", "():", "\n", "        ", "data", ".", "append", "({", "\n", "            ", "'", "text", "':", " a", ".", "text", "()", ",", "\n", "            ", "'", "href", "':", " a", ".", "attr", ".", "href", ",", "\n", "            ", "'", "fetch", "_", "time", "':", " str", "(", "datetime", ".", "now", "())", "\n", "        ", "})", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "data", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.7515633702278137, -1.7047348022460938, -0.22127050161361694, -2.899855375289917, -0.15509383380413055, -0.5283137559890747, -0.6342045664787292, -0.004461691714823246, -0.5703254342079163, -0.0017575069796293974, -0.8038202524185181, -0.0004328744253143668, -0.005914448760449886, -0.012694504112005234, -3.0261971950531006, -0.017601126804947853, -1.721048355102539, -0.0008922410197556019, -0.0034026363864541054, -0.0019337303237989545, -0.0025348695926368237, -0.23958423733711243, -0.026529863476753235, -0.25838702917099, -0.24441999197006226, -0.001986198825761676, -0.005119191948324442, -2.3841830625315197e-06, -5.1616290875244886e-05, -8.856858039507642e-05, -1.9073304429184645e-05, -0.0031393314711749554, -0.034845076501369476, -0.5321667194366455, -0.002546403557062149, -0.2508145272731781, -0.00019572250312194228, -0.16827452182769775, -7.152555099310121e-07, -0.001334372558631003, -0.18119890987873077, -0.002185458317399025, -0.16181418299674988, -0.35324764251708984, -0.0021695189643651247, -0.012031955644488335, -0.0021589321549981833, -1.3402758836746216, -0.3000450134277344, -2.119302749633789, -3.533855676651001, -0.07240398228168488, -0.05142367258667946, -0.6247193217277527, -0.851789653301239, -0.3714391887187958, -0.012673787772655487, -0.003545666579157114, -0.0005980133428238332, -0.16834211349487305, -0.026895590126514435, -0.003385766176506877, -2.455899715423584, -0.9219754934310913, -1.5644370317459106, -0.05074358358979225, -0.03032778389751911, -0.005283796228468418, -0.015364617109298706, -0.001396872103214264, -0.0732608512043953, -0.06364231556653976, -0.13284923136234283, -0.2510087788105011, -0.6324024200439453, -0.008781859651207924, -0.034650493413209915, -0.014010174199938774, -0.002800473477691412, -0.0009022455778904259, -0.0035385394003242254, -0.0003300360403954983, -0.005025493446737528, -0.010196499526500702, -0.0016796779818832874, -0.42308786511421204, -0.002326997695490718, -2.4866623878479004, -0.17203976213932037, -2.3020172119140625, -0.0221489779651165, -0.3125748634338379, -2.0621089935302734, -0.010163105092942715, -0.0073888832703232765, -6.353653589030728e-05, -0.003109978511929512, -0.10589568316936493, -0.000972155889030546, -1.2963078022003174, -0.010682305321097374, -0.030743684619665146, -0.26656484603881836, -0.736789882183075, -1.0689681768417358, -0.024028053507208824, -0.00276932748965919, -0.34189334511756897, -0.12858512997627258, -0.11940741539001465, -1.0869454145431519, -0.0038010268472135067, -0.0010892179561778903, -0.029787560924887657, -0.016812769696116447, -1.0035032033920288, -0.008552707731723785, -0.0028377999551594257, -0.19844597578048706, -0.4213531017303467, -0.03513020649552345, -0.09677302092313766, -0.13856641948223114, -0.027172205969691277, -0.06689803302288055, -0.25336554646492004, -0.046532243490219116, -0.03765322268009186, -0.09647300839424133, -0.05644925683736801, -0.0006522196927107871, -0.0029025827534496784, -0.0058665708638727665, -0.0026653024833649397, -0.04386305809020996, -0.34022367000579834, -0.021257072687149048, -0.25424355268478394, -0.07759269326925278, -0.012704391032457352, -0.013589606620371342, -0.009723207913339138, -0.017886530607938766, -0.0259119663387537, -0.005515832453966141, -0.002086368855088949, -0.003378875320777297, -2.5737144947052, -0.002071022754535079, -0.002212578197941184, -0.00027640812913887203, -0.03465498611330986, -0.04914654791355133, -0.28311893343925476, -0.04410159960389137, -0.0008609164506196976, -0.0007724162423983216, -0.7342063784599304, -0.44680508971214294, -0.01511407271027565, -6.4490144723095e-05, -0.0012880609137937427, -0.01444760337471962, -0.003617530455812812, -1.7567434310913086, -9.536738616588991e-07, -2.0265558760002023e-06, -0.0002814135223161429, -0.0001006075763143599, -2.1502137184143066, -0.00661694398149848], "finish_reason": "stop"}], "metrics": {"energy": 175.9512210721968, "energy_per_token": 0.9775067837344267, "time": 7.790113, "time_per_token": 0.04327840555555555}}
{"outputs": [{"text": "try:\n        resp = urllib.request.urlopen(url)\n        html = resp.read().decode('utf-8')\n    except (urllib.error.URLError, ValueError):\n        return\n\n    try:\n        doc = pq(html)\n    except:\n        return\n\n    df = pd.DataFrame({'text': [],\n                       'href': [],\n                       'fetch_time': []})\n    for a in doc('a'):\n        elem = pq(a)\n        href = elem.attr('href')\n        text = elem.text()\n        df.loc[df.shape[0]] = [text, href, datetime.now().strftime('%Y-%m-%d %H:%M:%S')]\n    return df", "tokens": ["try", ":", "\n", "        ", "resp", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", " =", " resp", ".", "read", "()", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "except", " (", "ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ",", " Value", "Error", "):", "\n", "        ", "return", "\n", "\n", "    ", "try", ":", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "    ", "except", ":", "\n", "        ", "return", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "text", "':", " []", ",", "\n", "                ", "       ", "'", "href", "':", " []", ",", "\n", "                ", "       ", "'", "fetch", "_", "time", "':", " []", "})", "\n", "    ", "for", " a", " in", " doc", "('", "a", "')", ":", "\n", "        ", "elem", " =", " p", "q", "(", "a", ")", "\n", "        ", "href", " =", " ele", "m", ".", "attr", "('", "href", "')", "\n", "        ", "text", " =", " ele", "m", ".", "text", "()", "\n", "        ", "df", ".", "loc", "[", "df", ".", "shape", "[", "0", "]]", " =", " [", "text", ",", " href", ",", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "]", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -3.924557685852051, -0.017199760302901268, -0.1451711803674698, -7.235741941258311e-05, -1.07287787614041e-05, -0.0008850948070175946, -0.0001967951684491709, -0.00018499570433050394, -0.03147701174020767, -0.0002547178009990603, -0.001991790486499667, -0.0025258325040340424, -0.07088050991296768, -0.06372866779565811, -0.4012435972690582, -0.7928091287612915, -0.17273126542568207, -0.16799026727676392, -0.00029225845355540514, -0.002360773738473654, -0.0010156240314245224, -0.8315946459770203, -0.00075049843871966, -0.5898140668869019, -0.017108241096138954, -0.08476842194795609, -0.0002723561483435333, -0.00590958958491683, -0.02057039551436901, -1.3348947763442993, -0.0037422403693199158, -1.3328943252563477, -0.7783052325248718, -0.00030357998912222683, -2.7418097943154862e-06, -0.0002329078270122409, -0.06230459362268448, -0.00024482590379193425, -0.05156305432319641, -5.149708886165172e-05, -3.981510963058099e-05, -0.025481153279542923, -0.36175262928009033, -1.2993727978027891e-05, -0.6343939304351807, -0.03632991760969162, -0.001999404514208436, -2.167389392852783, -3.088805675506592, -0.7450976371765137, -0.0015956539427861571, -3.2965598106384277, -0.000739539333153516, -0.0047726999036967754, -0.004004555754363537, -0.7433279156684875, -0.004252676852047443, -0.0012741313548758626, -2.288792165927589e-05, -0.001046705641783774, -0.004076742567121983, -0.016936898231506348, -0.02313665859401226, -0.6578259468078613, -0.001434369827620685, -1.4367451667785645, -0.009307565167546272, -0.0018615075387060642, -0.0876745954155922, -0.023223433643579483, -0.12340753525495529, -0.0009388091857545078, -1.7212244272232056, -0.062131863087415695, -0.18993031978607178, -0.0016513533191755414, -0.01331603154540062, -1.228158950805664, -0.4895189702510834, -0.18677911162376404, -0.014313527382910252, -0.45511484146118164, -0.0038010268472135067, -2.5100152492523193, -0.027827352285385132, -0.21804146468639374, -0.0014542490243911743, -0.005031305365264416, -0.0013936578761786222, -0.008872726000845432, -0.03380759060382843, -0.004868201911449432, -0.0003352795320097357, -0.0037019785959273577, -0.005867874715477228, -0.01116881798952818, -0.002303091809153557, -0.0009551253751851618, -0.0022481423802673817, -0.3873794376850128, -0.360394686460495, -0.004800817463546991, -1.1573915481567383, -0.59866863489151, -1.2744566202163696, -0.03005412220954895, -0.0034039432648569345, -0.22595332562923431, -0.1054627001285553, -0.14910109341144562, -0.5981821417808533, -0.03225667029619217, -0.01357443630695343, -3.85198974609375, -0.0285588838160038, -0.08027082681655884, -1.3112935448589269e-05, -0.0012530578533187509, -0.0016755126416683197, -0.0010657589882612228, -0.0176437608897686, -0.0307488851249218, -2.3596670627593994, -0.054297495633363724, -0.04650527611374855, -2.2649508537142538e-05, -0.08002645522356033, -0.003919539507478476, -0.32033571600914, -0.0005865760613232851, -0.0005296258023008704, -0.06590813398361206, -0.021388819441199303, -0.640986979007721, -0.0053092907182872295, -0.03019246645271778, -0.0002516191452741623, -0.001660279231145978, -0.053122662007808685, -0.0008379285573028028, -0.13551591336727142, -0.15455999970436096, -0.628157913684845, -0.6636502742767334, -0.029234889894723892, -0.051083799451589584, -1.2968311309814453, -0.09935177862644196, -0.7588813900947571, -0.0004894727608188987, -0.005220590624958277, -0.19646728038787842, -0.016338728368282318, -0.09860102832317352, -0.02839725650846958, -0.011266305111348629, -0.01826982945203781, -0.009991512633860111, -0.13005642592906952, -0.0005292683490552008, -0.07066959887742996, -0.0012898467248305678, -0.2585163712501526, -0.04789712652564049, -9.97731985989958e-05, -0.21345415711402893, -0.0022054414730519056, -0.006944567430764437, -0.0035886666737496853, -0.0024833811912685633, -0.00013004888023715466, -0.0002953569928649813, -0.009151417762041092, -0.0034378019627183676, -0.0008488865569233894, -0.00047434045700356364, -0.001888398313894868, -0.0006191005813889205, -0.004672798328101635, -0.004480086732655764, -0.00451545137912035, -0.7444309592247009, -0.06933257728815079, -0.012444819323718548, -1.098994493484497, -4.172316494077677e-06, -1.5497195136049413e-06, -0.0001012035645544529, -8.892617915989831e-05, -2.6720998287200928, -0.007641016039997339], "finish_reason": "stop"}], "metrics": {"energy": 207.02518100357048, "energy_per_token": 1.061667594890105, "time": 8.4217205, "time_per_token": 0.043188310256410255}}
{"outputs": [{"text": "if not url:\n        raise ValueError(\"Provided URL is invalid or empty\")\n\n    # Extracts HTML content from the provided URL using urllib.request.urlopen().\n    try:\n        html = urllib.request.urlopen(url)\n    except urllib.error.URLError as e:\n        print(\"Error: \", e.reason)\n    # Extracts the HTML content of the provided URL using PyQuery's .parse_from_string() method.\n    html = pq(html.read())\n    # Fetches the current time using datetime.now().\n    current_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    # Iterates through all anchor tags and extracts text and hyperlink using .text() and .attr(),\n    # respectively.\n    anchor_tags = html('a')\n    for a in anchor_tags:\n        text = a.text()\n        href = a.attr.href\n        df = pd.DataFrame([{'text': text, 'href", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Prov", "ided", " URL", " is", " invalid", " or", " empty", "\"", ")", "\n", "\n", "    ", "#", " Ext", "ract", "s", " HTML", " content", " from", " the", " provided", " URL", " using", " ur", "ll", "ib", ".", "request", ".", "url", "open", "()", ".", "\n", "    ", "try", ":", "\n", "        ", "html", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", ":", " \"", ",", " e", ".", "reason", ")", "\n", "    ", "#", " Ext", "ract", "s", " the", " HTML", " content", " of", " the", " provided", " URL", " using", " Py", "Query", "'", "s", " ", ".", "parse", "_", "from", "_", "string", "()", " method", ".", "\n", "    ", "html", " =", " p", "q", "(", "html", ".", "read", "())", "\n", "    ", "#", " F", "et", "ches", " the", " current", " time", " using", " datetime", ".", "now", "()", ".", "\n", "    ", "current", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "#", " Iter", "ates", " through", " all", " anchor", " tags", " and", " extracts", " text", " and", " hyper", "link", " using", " ", ".", "text", "()", " and", " ", ".", "attr", "()", ",", "\n", "    ", "#", " respectively", ".", "\n", "    ", "anchor", "_", "tags", " =", " html", "('", "a", "')", "\n", "    ", "for", " a", " in", " anchor", "_", "tags", ":", "\n", "        ", "text", " =", " a", ".", "text", "()", "\n", "        ", "href", " =", " a", ".", "attr", ".", "href", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "([", "{'", "text", "':", " text", ",", " '", "href"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.6724503636360168, -0.05274537205696106, -2.1184144020080566, -0.16490240395069122, -0.07250798493623734, -0.1350734829902649, -1.0269752740859985, -0.4128417670726776, -0.00984656810760498, -0.9674841165542603, -0.0005584587925113738, -0.003941981587558985, -0.45510977506637573, -0.001260201446712017, -2.4925317764282227, -3.0509610176086426, -0.10529179126024246, -2.1459012031555176, -1.7271757125854492, -0.127766951918602, -0.21801722049713135, -0.4886438548564911, -1.0005031824111938, -0.013744239695370197, -1.3158540725708008, -0.7529141306877136, -0.0035485175903886557, -4.410646579344757e-05, -0.4559408128261566, -0.09209951758384705, -1.3198446035385132, -0.22662506997585297, -0.0020536540541797876, -0.4896470606327057, -1.8978345394134521, -0.07874288409948349, -0.0027348517905920744, -0.9675650000572205, -0.0003526780928950757, -0.0019821536261588335, -0.003941625356674194, -1.530141830444336, -0.49233388900756836, -0.19521886110305786, -7.593343616463244e-05, -5.960446742392378e-06, -9.095255518332124e-05, -0.00013457823661156, -3.564294092939235e-05, -0.0014553203945979476, -7.855583680793643e-05, -0.0003781795676331967, -0.0013444918440654874, -0.07388295978307724, -0.5371176600456238, -0.3455869257450104, -0.008823217824101448, -0.3104652166366577, -4.2914423829643056e-05, -1.8596476365928538e-05, -9.715084888739511e-05, -0.09275922924280167, -0.00025650550378486514, -0.014701956883072853, -4.470248313737102e-05, -4.31528314948082e-05, -0.25788414478302, -0.20661091804504395, -0.0010543270036578178, -0.019722314551472664, -0.0019583588000386953, -1.4461590051651, -0.06659605354070663, -0.9174683094024658, -1.1419284343719482, -1.7556424140930176, -0.8959867358207703, -0.2548382580280304, -0.3148161470890045, -0.40682539343833923, -0.23920422792434692, -0.023184647783637047, -0.01903516799211502, -2.2103140354156494, -1.3413913249969482, -1.5093905925750732, -0.02675679139792919, -0.03498747944831848, -1.0997828245162964, -1.4137444496154785, -0.21448802947998047, -2.2019519805908203, -0.08500079810619354, -1.3885433673858643, -0.02399849146604538, -0.5575459003448486, -0.8398531675338745, -0.0034849646035581827, -1.8972606658935547, -0.00017271934484597296, -1.8889368772506714, -0.003685944713652134, -1.4754210710525513, -0.676831066608429, -2.823519229888916, -0.630196213722229, -0.05334533005952835, -0.020641395822167397, -0.8105559945106506, -0.16620022058486938, -0.004938310012221336, -0.008139652200043201, -1.0477112531661987, -0.9306064248085022, -0.007440829649567604, -0.00015925093612167984, -0.008349393494427204, -0.018306933343410492, -0.2014116793870926, -0.003384221578016877, -0.3795383870601654, -0.035596802830696106, -0.9501774311065674, -0.42041292786598206, -3.3277170658111572, -0.7818748354911804, -0.026165280491113663, -0.1532983034849167, -0.4149455726146698, -0.8098281025886536, -1.144818902015686, -0.13842059671878815, -0.03847832232713699, -0.4503706395626068, -0.003961335867643356, -0.48251569271087646, -0.03591173514723778, -0.001653733546845615, -2.2907278537750244, -0.024774229153990746, -0.05160098150372505, -0.005954384338110685, -0.005065820179879665, -3.4927710657939315e-05, -0.0019083875231444836, -0.00029476112104021013, -1.025008201599121, -0.017038043588399887, -3.111314072157256e-05, -0.4039606750011444, -0.0032641009893268347, -0.00632025022059679, -0.006389664486050606, -0.0016545667313039303, -0.0014780559577047825, -3.123234637314454e-05, -0.00015364897262770683, -0.013893087394535542, -0.002248380333185196, -0.0013140147784724832, -0.00010322991875000298, -0.0006841464783065021, -0.0003669780562631786, -0.005819402169436216, -9.536288416711614e-05, -0.00754495058208704, -0.3354176878929138, -0.1183527484536171, -2.8115854263305664, -0.015314372256398201, -1.145958662033081, -0.40088966488838196, -0.2696504592895508, -0.04485050588846207, -1.989966630935669, -0.41392818093299866, -2.2899367809295654, -0.19129374623298645, -2.432300090789795, -0.17673927545547485, -3.5727763175964355, -1.0941193103790283, -0.0004287039046175778, -0.5784844756126404, -0.020176995545625687, -0.06674281507730484, -0.030123990029096603, -2.753696753643453e-05, -0.004918262362480164, -0.8735535144805908, -1.6910550594329834, -1.910474181175232, -0.0015443552983924747, -0.0007961202645674348, -0.03276948630809784, -0.33417463302612305, -0.47305187582969666, -0.004057153128087521, -2.2055869102478027, -0.01802890934050083, -0.4368514120578766, -0.015108436346054077, -0.11407314985990524, -0.7694774866104126, -0.075806625187397, -0.06111794337630272, -0.04796769097447395, -0.034673407673835754, -1.4133814573287964, -2.692326307296753, -0.0928688496351242, -0.005951184779405594, -1.7881233361549675e-05, -3.6954811548639555e-06, -0.07262317091226578, -0.0035388958640396595, -0.005085864569991827, -1.246398687362671, -0.06921400129795074, -0.540986955165863, -0.0029105464927852154, -0.04934808984398842, -2.330005645751953, -0.10719768702983856, -0.0022224506828933954, -0.06972134113311768, -0.004856219980865717, -0.11842888593673706, -0.01899469830095768, -0.6614043712615967, -1.4278993606567383, -0.06380337476730347, -0.01138464268296957, -0.044655691832304, -1.8899500370025635, -0.7602198123931885, -0.03380228951573372, -0.0018318791408091784, -0.005856734234839678, -1.5030980110168457, -2.1511549949645996, -0.039618801325559616, -0.008441953919827938, -0.11634746938943863, -0.004247572273015976, -0.0724218338727951, -0.0071275727823376656], "finish_reason": "length"}], "metrics": {"energy": 258.9922992849351, "energy_per_token": 1.0116886690817777, "time": 11.149087, "time_per_token": 0.04355112109375}}
{"outputs": [{"text": "try:\n        response = urllib.request.urlopen(url)\n        html = response.read().decode('utf8')\n        doc = pq(html)\n        df = pd.DataFrame()\n        for anchor in doc.find('a'):\n            text = anchor.text()\n            href = anchor.attr('href')\n            fetch_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            df.loc[len(df), :] = [text, href, fetch_time]\n        return df\n    except ValueError:\n        raise ValueError(\"Invalid URL\")\n    except urllib.error.URLError:\n        raise urllib.error.URLError(\"Unable to reach the server or the server is unavailable\")", "tokens": ["try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", " =", " response", ".", "read", "()", ".", "decode", "('", "utf", "8", "')", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "        ", "for", " anchor", " in", " doc", ".", "find", "('", "a", "')", ":", "\n", "            ", "text", " =", " anchor", ".", "text", "()", "\n", "            ", "href", " =", " anchor", ".", "attr", "('", "href", "')", "\n", "            ", "fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "df", ".", "loc", "[", "len", "(", "df", ")", ",", " :", "]", " =", " [", "text", ",", " href", ",", " fetch", "_", "time", "]", "\n", "        ", "return", " df", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " URL", "\"", ")", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", "(", "\"", "Un", "able", " to", " reach", " the", " server", " or", " the", " server", " is", " unavailable", "\"", ")"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -1.9706544876098633, -0.006560218054801226, -0.09969495236873627, -8.225102646974847e-05, -8.22540732769994e-06, -0.0008740180637687445, -0.0002530493075028062, -0.00022635281493421644, -0.02414337731897831, -0.0001842805795604363, -0.0015716117341071367, -0.0021922383457422256, -0.09607534110546112, -0.05540395528078079, -0.3183133602142334, -0.4617229998111725, -0.21071097254753113, -0.09248833358287811, -0.0002233732520835474, -0.0015028145862743258, -0.0006949870148673654, -0.8391863107681274, -0.000742398202419281, -0.4854944050312042, -0.015556300058960915, -2.855681896209717, -0.003986033145338297, -0.013755644671618938, -0.4227754771709442, -0.8284473419189453, -0.00495029054582119, -0.001341991825029254, -1.6689160474925302e-05, -0.0004957877099514008, -0.002918510464951396, -0.006640154868364334, -0.017711807042360306, -0.3696315288543701, -2.3244781494140625, -0.04680439084768295, -0.2169097363948822, -0.0009077242575585842, -0.0035987631417810917, -1.6016452312469482, -0.006657443940639496, -0.18576370179653168, -0.47915026545524597, -1.3261703252792358, -0.029817644506692886, -0.0019361099693924189, -2.2034754753112793, -0.14549590647220612, -0.08001303672790527, -0.10478909313678741, -0.028277438133955002, -0.05855738744139671, -0.02159930020570755, -0.005857919342815876, -1.41838538646698, -0.05126309394836426, -0.05643303319811821, -0.0627276748418808, -0.055540189146995544, -0.048653870820999146, -0.22809705138206482, -0.0008724696817807853, -0.033677585422992706, -0.0029847142286598682, -0.020193351432681084, -0.07542861998081207, -0.04807028919458389, -1.207505226135254, -0.0007082099909894168, -0.0001501924270996824, -0.025669395923614502, -0.009469592012465, -0.8909057378768921, -0.004367693793028593, -0.005406045820564032, -0.004516638349741697, -0.05164116993546486, -0.0001685477327555418, -0.08023771643638611, -0.00033384948619641364, -0.021626366302371025, -0.020642681047320366, -3.85038583772257e-05, -0.11913115531206131, -0.008589701727032661, -0.0015685171820223331, -0.0014071096666157246, -0.0018087946809828281, -3.576214658096433e-05, -7.939023635117337e-05, -0.00548334838822484, -0.0013103241799399257, -0.0003936707798857242, -8.332382276421413e-05, -0.0008062449633143842, -0.00032634177478030324, -0.002659238874912262, -0.007946070283651352, -0.027838483452796936, -0.17705309391021729, -1.9761165380477905, -0.04380076006054878, -0.051175203174352646, -0.08050953596830368, -0.0001262346631847322, -0.0005210472736507654, -2.9604668617248535, -0.03203514218330383, -0.4707622826099396, -0.0008273277780972421, -0.00038211196078918874, -0.039546385407447815, -0.006794089451432228, -0.0016074366867542267, -0.004049316979944706, -0.0012656782055273652, -0.0030999958980828524, -7.748573807475623e-06, -1.3232143828645349e-05, -0.0016875325236469507, -0.008581310510635376, -0.25469884276390076, -0.16552358865737915, -0.005286760628223419, -0.012627055868506432, -0.12912516295909882, -0.0013809201773256063, -0.9657890200614929, -4.458328112377785e-05, -0.58076012134552, -0.04193667694926262, -0.001065520802512765, -0.31226345896720886, -0.08202819526195526, -1.2755313036905136e-05, -0.677078127861023, -0.24711324274539948, -0.6803224682807922, -0.08794363588094711, -1.1295819282531738, -0.0009009354980662465, -0.008938773535192013, -0.014721574261784554, -0.0019487215904518962, -0.7334375381469727, -0.0005334384622983634, -1.7881377516459906e-06, -0.00014006110723130405, -0.04394303634762764, -0.0019388464279472828, -0.014451480470597744, -3.504691630951129e-05, -1.4185804502631072e-05, -0.3011535406112671, -0.0008448368753306568, -0.0010723085142672062, -0.03254634514451027, -0.5321155786514282, -0.0002299282787134871, -2.0146166207268834e-05, -9.250213042832911e-05, -0.001258653705008328, -0.0024057275149971247, -0.006331029813736677, -5.054346183896996e-05, -1.4305104514278355e-06, -0.10065769404172897, -0.047194622457027435, -1.6210464239120483, -0.077098049223423, -0.001928495243191719, -3.3926901817321777, -1.1556768417358398, -0.7353255152702332, -1.8031991720199585, -1.5866880416870117, -2.350252628326416, -0.3351145386695862, -1.5751972198486328, -0.5598233938217163, -0.28508979082107544], "finish_reason": "stop"}], "metrics": {"energy": 187.8399751739502, "energy_per_token": 0.9938623025076729, "time": 8.21457, "time_per_token": 0.04346333333333333}}
{"outputs": [{"text": "df = pd.DataFrame(columns=['text', 'href', 'fetch_time'])\n    if not url:\n        raise ValueError(\"Invalid or empty URL\")\n    else:\n        try:\n            req = urllib.request.Request(url)\n            html = urllib.request.urlopen(req)\n            html = pq(html.read())\n        except (urllib.error.URLError, ValueError) as e:\n            raise ValueError(str(e))\n        for item in html.items('.toctree-l1 > a'):\n            row = pd.Series({\n                'text': item.text(),\n                'href': item.attr('href'),\n                'fetch_time': datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")})\n            df = df.append(row, ignore_index=True)\n        return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'])", "\n", "    ", "if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " or", " empty", " URL", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "req", " =", " ur", "ll", "ib", ".", "request", ".", "Request", "(", "url", ")", "\n", "            ", "html", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "req", ")", "\n", "            ", "html", " =", " p", "q", "(", "html", ".", "read", "())", "\n", "        ", "except", " (", "ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ",", " Value", "Error", ")", " as", " e", ":", "\n", "            ", "raise", " Value", "Error", "(", "str", "(", "e", "))", "\n", "        ", "for", " item", " in", " html", ".", "items", "('", ".", "to", "ct", "ree", "-", "l", "1", " >", " a", "')", ":", "\n", "            ", "row", " =", " pd", ".", "Series", "({", "\n", "                ", "'", "text", "':", " item", ".", "text", "()", ",", "\n", "                ", "'", "href", "':", " item", ".", "attr", "('", "href", "')", ",", "\n", "                ", "'", "fetch", "_", "time", "':", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")})", "\n", "            ", "df", " =", " df", ".", "append", "(", "row", ",", " ignore", "_", "index", "=", "True", ")", "\n", "        ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.8027243614196777, -0.1120196208357811, -0.35261666774749756, -0.002971521345898509, -0.015039507299661636, -1.0555232763290405, -0.05683315172791481, -0.1847471445798874, -0.06907094269990921, -0.0009274948388338089, -0.00017736769223120064, -0.027619455009698868, -0.004174210596829653, -0.017227530479431152, -0.00011705666838679463, -0.005847016349434853, -0.006305443122982979, -0.0013303249143064022, -0.0009037939016707242, -0.03230791538953781, -0.012769832275807858, -0.31663230061531067, -1.609460711479187, -0.5672276616096497, -0.015615100041031837, -0.11734594404697418, -0.01932273432612419, -0.004081848077476025, -0.06258636713027954, -0.007367583457380533, -4.5298504119273275e-05, -0.7725799083709717, -0.05317285284399986, -1.4479284286499023, -2.8335001468658447, -0.06212805211544037, -0.06384028494358063, -1.1697545051574707, -0.0002818902430590242, -0.002940974896773696, -0.6116248369216919, -3.4690232276916504, -0.00022754464589525014, -0.0033852909691631794, -0.017748815938830376, -0.3312491476535797, -0.00047291061491705477, -0.005489394534379244, -0.004921821411699057, -2.013780117034912, -0.017889223992824554, -0.05518671125173569, -6.5205356804654e-05, -2.2291887944447808e-05, -0.0011638780124485493, -0.00018499570433050394, -0.0007288183551281691, -0.1587497740983963, -0.0009659630013629794, -0.009003989398479462, -0.09180701524019241, -0.03889715299010277, -0.015627775341272354, -3.033644199371338, -0.2277527004480362, -0.06596605479717255, -4.076874756719917e-05, -1.645074735279195e-05, -4.994744449504651e-05, -0.00016056202002801, -1.0371154530730564e-05, -0.0005469018360599875, -0.0006391151691786945, -0.00030417583184316754, -0.0657808929681778, -0.05055932328104973, -0.38143935799598694, -0.2790187895298004, -1.3527209758758545, -1.8157693147659302, -0.8886828422546387, -4.1483970562694594e-05, -0.0006391151691786945, -0.007296935189515352, -0.9705250263214111, -0.00603093346580863, -0.1800847202539444, -0.02483411878347397, -1.815950632095337, -0.00334596517495811, -1.768388271331787, -0.6210322976112366, -0.00043847484630532563, -9.536738616588991e-07, -0.0013167529832571745, -0.18422305583953857, -0.0003461238811723888, -0.06591103225946426, -6.41325386823155e-05, -2.7179348762729205e-05, -0.05305144563317299, -0.5887534618377686, -4.410646579344757e-05, -0.6419073939323425, -0.005362530704587698, -0.24701446294784546, -0.0013861581683158875, -0.009345239959657192, -0.004366269335150719, -0.684587836265564, -0.3874344527721405, -7.986990567587782e-06, -0.04283660277724266, -1.753164291381836, -0.0004634975048247725, -0.0038880719803273678, -0.02468177303671837, -0.03800537809729576, -0.37013107538223267, -1.356092929840088, -2.0262537002563477, -0.0027882291469722986, -0.010974288918077946, -0.9018504619598389, -0.6183266639709473, -0.17470969259738922, -2.8049509525299072, -1.2127430438995361, -0.23260875046253204, -0.27139779925346375, -0.8186526298522949, -0.33754581212997437, -1.0337469577789307, -1.3560127019882202, -2.4166409969329834, -0.1214989498257637, -0.008021521382033825, -0.02133677713572979, -0.007691293489187956, -2.837007999420166, -0.03321481868624687, -2.521660804748535, -8.999896090244874e-05, -0.8391821980476379, -1.0976999998092651, -1.6049766540527344, -0.0061408886685967445, -0.056086067110300064, -0.061696313321590424, -0.012031837366521358, -0.5016496181488037, -0.1109081581234932, -0.08853626996278763, -0.2590474784374237, -0.08837095648050308, -0.02479620836675167, -0.00041797960875555873, -0.0023506649304181337, -0.005014106631278992, -0.001111009274609387, -0.06136585772037506, -0.019153641536831856, -0.0067743160761892796, -0.49683839082717896, -0.0006507901125587523, -0.0007537146448157728, -0.014897759072482586, -0.006408379413187504, -0.004324845504015684, -0.008585919626057148, -0.0050504012033343315, -0.0017206162447109818, -0.0005180685548111796, -0.0014541300479322672, -0.1589186042547226, -0.00022075122979003936, -0.13740523159503937, -0.0014753182185813785, -0.01492030918598175, -0.04311535134911537, -0.00011014331539627165, -1.448593020439148, -0.022756852209568024, -0.0015548295341432095, -0.004072468727827072, -0.003373529063537717, -0.0023858672939240932, -7.843663479434326e-05, -0.000362807244528085, -0.010820996016263962, -0.00252404878847301, -0.0012292455649003386, -0.0002631794777698815, -0.001374253653921187, -0.0005832401220686734, -0.008265928365290165, -2.491365909576416, -0.01574207842350006, -0.01299390196800232, -0.018188709393143654, -0.07331591099500656, -0.021674195304512978, -0.0011742371134459972, -0.0007683662115596235, -0.054201290011405945, -0.006914733909070492, -0.012044675648212433, -0.005728139076381922, -6.9141146923357155e-06, -0.0005068686441518366, -0.018408408388495445, -0.0012654400197789073, -0.011254046112298965, -0.010883967392146587, -0.4840286672115326, -0.08426570892333984, -0.010396961122751236, -0.8322372436523438, -0.10373812168836594, -0.5382156372070312], "finish_reason": "stop"}], "metrics": {"energy": 235.46230964469913, "energy_per_token": 1.0702832256577233, "time": 9.662933, "time_per_token": 0.04392242272727273}}
{"outputs": [{"text": "if url is None:\n        raise ValueError(\"url can not be empty.\")\n    if not url:\n        raise ValueError(\"url can not be empty.\")\n    data = pd.DataFrame()\n    data[\"href\"] = \"\"\n    data[\"text\"] = \"\"\n    data[\"fetch_time\"] = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    try:\n        page = urllib.request.Request(url)\n        page = urllib.request.urlopen(url)\n        content = pq(page.read().decode('utf-8'))\n        for ele in content.find(\"a\"):\n            # print(ele.text.strip(), ele.attr.href)\n            data.loc[data.index.max() + 1] = [ele.text.strip(),\n                                              ele.attr.href,\n                                              datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")]\n            # print(ele", "tokens": ["if", " url", " is", " None", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "url", " can", " not", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "url", " can", " not", " be", " empty", ".", "\"", ")", "\n", "    ", "data", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "data", "[", "\"", "href", "\"", "]", " =", " \"", "\"", "\n", "    ", "data", "[", "\"", "text", "\"", "]", " =", " \"", "\"", "\n", "    ", "data", "[", "\"", "fetch", "_", "time", "\"", "]", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "page", " =", " ur", "ll", "ib", ".", "request", ".", "Request", "(", "url", ")", "\n", "        ", "page", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "content", " =", " p", "q", "(", "page", ".", "read", "()", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "        ", "for", " ele", " in", " content", ".", "find", "(", "\"", "a", "\"", "):", "\n", "            ", "#", " print", "(", "ele", ".", "text", ".", "strip", "()", ",", " ele", ".", "attr", ".", "href", ")", "\n", "            ", "data", ".", "loc", "[", "data", ".", "index", ".", "max", "()", " +", " ", "1", "]", " =", " [", "ele", ".", "text", ".", "strip", "()", ",", "\n", "                ", "                ", "              ", "ele", ".", "attr", ".", "href", ",", "\n", "                ", "                ", "              ", "datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")]", "\n", "            ", "#", " print", "(", "ele"], "logprobs": [-1.309146523475647, -1.0612399578094482, -1.422696828842163, -0.06181522086262703, -1.5978928804397583, -0.01843871921300888, -0.004477475769817829, -0.09812596440315247, -0.023078763857483864, -5.1020273531321436e-05, -0.5928614139556885, -0.08899006247520447, -2.5614051818847656, -2.7760610580444336, -1.2559090852737427, -0.007377996575087309, -1.6162209510803223, -2.0202643871307373, -0.1451706737279892, -0.0011941214324906468, -0.003705066628754139, -0.5731505155563354, -1.0270240306854248, -0.8024592995643616, -0.060110289603471756, -0.705597996711731, -0.013505636714398861, -0.0012391278287395835, -0.02858993224799633, -0.13981178402900696, -0.00011193125828867778, -0.024163858965039253, -0.0422775000333786, -0.24125991761684418, -0.2755693197250366, -0.009808322414755821, -0.01091556902974844, -0.1206449419260025, -0.06282104551792145, -0.00468513835221529, -0.0002575780963525176, -0.0014673429541289806, -0.4783954620361328, -3.440638542175293, -0.2651015520095825, -1.3946436643600464, -5.054346183896996e-05, -0.05358568951487541, -0.8224852085113525, -0.020552411675453186, -0.09102510660886765, -1.7685401439666748, -1.5496599674224854, -0.017496759071946144, -2.149704933166504, -0.0014266322832554579, -0.017760176211595535, -0.045183274894952774, -1.485182762145996, -0.07103308290243149, -0.016887085512280464, -0.0015142414486035705, -0.013043557293713093, -0.008085968904197216, -7.4741430580616e-05, -0.07457946985960007, -0.0004727914638351649, -0.002410603454336524, -0.0006130246329121292, -0.0035000513307750225, -0.0017670269589871168, -0.0006227937992662191, -0.01841718517243862, -0.09122240543365479, -0.01057508960366249, -0.00029130507027730346, -0.014395196922123432, -0.0027403205167502165, -0.00108624086715281, -0.0006281548412516713, -0.005301701836287975, -0.0026736250147223473, -0.3666023910045624, -0.0007339406292885542, -0.10372038930654526, -0.0019143365789204836, -0.19092004001140594, -0.03623553365468979, -0.00015686711412854493, -0.2482442557811737, -0.011393246240913868, -0.006153328809887171, -0.013504460453987122, -0.00598389096558094, -0.007206872571259737, -0.00017975145601667464, -0.000750736624468118, -0.0186725202947855, -0.005278815981000662, -0.002359941368922591, -0.00046850196667946875, -0.0024673277512192726, -0.0009847796754911542, -0.019885700196027756, -0.00025912740966305137, -0.011095726862549782, -1.132007360458374, -0.001531738555058837, -0.3747756779193878, -0.0006791430641897023, -0.003080981317907572, -0.010998105630278587, -4.157870292663574, -0.036663006991147995, -1.3079535961151123, -0.0004172646440565586, -1.2993727978027891e-05, -0.0007335832342505455, -0.0002867764269467443, -0.0001578206429257989, -2.870319366455078, -0.0009084388730116189, -0.013445536606013775, -0.1966080218553543, -0.027600089088082314, -0.03127819299697876, -1.5848047733306885, -0.2561124563217163, -0.09273717552423477, -0.00033396866638213396, -1.4543427823809907e-05, -0.00039760314393788576, -0.0007445423980243504, -2.586808113846928e-05, -0.0011556621175259352, -0.00025293012731708586, -0.0005210472736507654, -2.3601062297821045, -0.09503284096717834, -0.06448671221733093, -0.1732562929391861, -2.6995317935943604, -0.011399729177355766, -2.157320022583008, -2.5987286790041253e-05, -0.0007545484695583582, -0.015579773113131523, -1.078335165977478, -0.006840383633971214, -1.5426379442214966, -0.9056546688079834, -0.004029726609587669, -0.9798200130462646, -0.027296101674437523, -0.15299801528453827, -0.0004332319076638669, -0.03746400773525238, -0.04293367639183998, -0.3857868015766144, -1.5487418174743652, -2.9181110858917236, -1.4616326093673706, -0.022618990391492844, -2.4843356609344482, -0.39513224363327026, -0.5629578828811646, -0.0011124381562694907, -0.14126500487327576, -0.04158121347427368, -0.03502880409359932, -0.01561380922794342, -0.010708251968026161, -3.8900885581970215, -1.4162747859954834, -0.04363427311182022, -0.31950873136520386, -0.7063370943069458, -0.8276740312576294, -2.729201078414917, -0.12268570810556412, -0.6103966236114502, -0.13129644095897675, -0.1744338870048523, -0.012194600887596607, -0.05565836653113365, -0.2795776128768921, -0.14556506276130676, -0.34891554713249207, -0.02854660339653492, -0.008967246860265732, -0.25919511914253235, -0.4215635061264038, -0.15518172085285187, -0.025593172758817673, -0.829532265663147, -0.527449905872345, -1.0714590549468994, -1.0174055099487305, -0.3460133671760559, -0.0020366418175399303, -1.4197750091552734, -0.006570639554411173, -0.00030489088385365903, -1.0634007453918457, -0.002050441922619939, -0.08380056172609329, -0.10683587193489075, -0.001942891743965447, -0.012738760560750961, -0.054910968989133835, -0.0005054388311691582, -0.0006347072194330394, -0.015720251947641373, -3.0372679233551025, -0.005339409224689007, -0.02675272896885872, -0.6131508946418762, -0.13932697474956512, -0.0016861044568940997, -0.003574887989088893, -0.058821339160203934, -0.03781519830226898, -0.04034760221838951, -0.07802743464708328, -0.0004655231023207307, -2.4676019165781327e-05, -0.01027272455394268, -0.3576815724372864, -0.00016652150952722877, -0.00120936194434762, -0.0001778444420779124, -0.002659833524376154, -0.001578157884068787, -1.0251946150674485e-05, -0.009045573882758617, -0.028391346335411072, -0.0005665604257956147, -0.0013980624498799443, -0.0012028133496642113, -0.0001705739414319396, -8.082063141046092e-05, -0.0007549058645963669, -0.00488445395603776, -0.00034505134681239724, -0.0005214046686887741, -0.0002840353990904987, -0.00040725519647821784, -0.0006932000978849828, -0.0008219677838496864, -0.181137353181839, -0.004258730448782444, -2.596109628677368, -0.6508685350418091, -0.7900870442390442, -0.040865786373615265, -1.154091477394104], "finish_reason": "length"}], "metrics": {"energy": 254.2695511341094, "energy_per_token": 0.9932404341176149, "time": 11.127059, "time_per_token": 0.04346507421875}}
{"outputs": [{"text": "if not url:\n        raise ValueError(\"URL is invalid or empty.\")\n\n    try:\n        response = urllib.request.urlopen(url)\n        html_str = response.read().decode()\n    except urllib.error.URLError:\n        raise URLError(\"Server or network issue, unable to connect to URL.\")\n    except ValueError:\n        raise ValueError(\"URL is invalid or empty.\")\n\n    p_obj = pq(html_str)\n\n    data_arr = []\n\n    for tag in p_obj(\".mw-headline\"):\n        data_dict = {'text': tag.text.strip(), 'href': p_obj(tag).attr('href'),\n                     'fetch_time': datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n        data_arr.append(data_dict)\n\n    df = pd.DataFrame(data_arr)\n\n    return df", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " is", " invalid", " or", " empty", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "html", "_", "str", " =", " response", ".", "read", "()", ".", "decode", "()", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " UR", "LE", "rror", "(", "\"", "Server", " or", " network", " issue", ",", " unable", " to", " connect", " to", " URL", ".", "\"", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " is", " invalid", " or", " empty", ".", "\"", ")", "\n", "\n", "    ", "p", "_", "obj", " =", " p", "q", "(", "html", "_", "str", ")", "\n", "\n", "    ", "data", "_", "arr", " =", " []", "\n", "\n", "    ", "for", " tag", " in", " p", "_", "obj", "(", "\"", ".", "mw", "-", "head", "line", "\"", "):", "\n", "        ", "data", "_", "dict", " =", " {'", "text", "':", " tag", ".", "text", ".", "strip", "()", ",", " '", "href", "':", " p", "_", "obj", "(", "tag", ")", ".", "attr", "('", "href", "')", ",", "\n", "                ", "     ", "'", "fetch", "_", "time", "':", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')}", "\n", "        ", "data", "_", "arr", ".", "append", "(", "data", "_", "dict", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", "_", "arr", ")", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.6724503636360168, -0.05274537205696106, -1.132509708404541, -1.5361557006835938, -1.4473412036895752, -0.40518468618392944, -0.013961625285446644, -0.95212721824646, -0.024101369082927704, -0.00030727434204891324, -0.003913958556950092, -0.46102574467658997, -0.0017403707606717944, -0.5876376628875732, -0.00023993951617740095, -0.0048190876841545105, -0.0076359291560947895, -0.7668435573577881, -0.00394352525472641, -0.06183875352144241, -8.082063141046092e-05, -1.2278481335670222e-05, -0.0007061848300509155, -0.0002273062855238095, -6.937739817658439e-05, -0.023394983261823654, -9.512448741588742e-05, -0.00043406602344475687, -0.0025858795270323753, -0.09157686680555344, -0.05279591679573059, -0.8554592132568359, -0.39995241165161133, -1.441697597503662, -3.2647457122802734, -0.0020848223939538, -0.03708087280392647, -9.512448741588742e-05, -0.0007128558354452252, -0.0009672730811871588, -0.5488660931587219, -0.00035363141796551645, -1.0362430810928345, -0.024532893672585487, -0.9951919913291931, -0.002553418977186084, -0.2678883373737335, -4.541770613286644e-05, -4.291525328881107e-06, -4.172238186583854e-05, -0.09472069889307022, -0.0003097769513260573, -0.02529589645564556, -3.564294092939235e-05, -2.1457441107486375e-05, -1.3984274864196777, -0.01263459026813507, -0.0012541294563561678, -0.29346543550491333, -1.611365795135498, -0.0022163845133036375, -0.00020489977032411844, -0.07382438331842422, -0.07959093153476715, -3.873110294342041, -0.9239704012870789, -0.27450406551361084, -1.8812369108200073, -2.46199369430542, -1.2731271982192993, -0.00493498845025897, -3.0329325199127197, -0.5627424120903015, -1.197457194328308, -0.4162549674510956, -0.02373426966369152, -0.0009346407605335116, -0.004571107216179371, -1.8734780550003052, -0.6347251534461975, -1.2055662870407104, -0.00015901254664640874, -0.07795366644859314, -0.06695221364498138, -0.0011647114297375083, -0.044187031686306, -0.2768096923828125, -0.0001858300092862919, -0.02100776508450508, -0.03744218870997429, -0.6645863056182861, -0.15666987001895905, -0.0839981958270073, -0.20950430631637573, -0.009936511516571045, -0.044792599976062775, -0.006139703560620546, -0.00031764229061082006, -0.0013229437172412872, -0.13812139630317688, -0.0011955503141507506, -4.101912975311279, -1.8544189929962158, -4.543944358825684, -0.008659076876938343, -0.0018296183552592993, -2.884823152271565e-05, -0.007247585337609053, -0.004561970010399818, -0.03412504494190216, -0.00018809456378221512, -0.008915379643440247, -0.03187026455998421, -1.3301411867141724, -0.000681883015204221, -1.8966412544250488, -1.2478249073028564, -3.7526144981384277, -0.015619090758264065, -0.18912027776241302, -0.01177150197327137, -1.3037924766540527, -0.00019238528329879045, -0.2546174228191376, -2.496917963027954, -0.03732322156429291, -0.0036041084676980972, -0.0017572689102962613, -2.2649508537142538e-05, -1.1097867488861084, -0.0027526842895895243, -2.5584776401519775, -0.9692173600196838, -0.0012062662281095982, -0.6874378323554993, -0.5760642886161804, -0.6092610359191895, -0.154646098613739, -0.028989069163799286, -0.033373940736055374, -1.580021619796753, -0.36823251843452454, -1.4506828784942627, -0.004444720223546028, -1.6915793418884277, -0.12974174320697784, -0.024310581386089325, -1.3184583187103271, -0.015220684930682182, -0.015570031479001045, -1.9659059047698975, -0.0819593295454979, -0.06097809225320816, -0.07479597628116608, -0.6527772545814514, -0.013382961973547935, -0.005290080793201923, -1.4919261932373047, -0.7251622080802917, -0.0005204515182413161, -0.0571378618478775, -0.022927898913621902, -0.03055731952190399, -0.11156485974788666, -0.03913768380880356, -1.9322657585144043, -0.07812291383743286, -0.8241024613380432, -0.030505403876304626, -0.6019690036773682, -0.022634491324424744, -0.09201090037822723, -0.008436989039182663, -0.011747467331588268, -0.0031283984426409006, -0.001629335805773735, -0.0032795476727187634, -0.13841290771961212, -0.00029702542815357447, -0.12721507251262665, -0.03364819288253784, -0.00134151556994766, -0.04977056011557579, -8.642300235806033e-05, -0.5483562350273132, -0.0013397298753261566, -0.003690695622935891, -0.002609778428450227, -0.002921244129538536, -7.235741941258311e-05, -0.0002554328821133822, -0.01057402789592743, -0.00431807991117239, -0.0008001701789908111, -0.00031454383861273527, -0.0021310970187187195, -0.0004292996891308576, -0.04472329467535019, -0.002152984729036689, -0.09074492007493973, -0.009157205931842327, -0.001023364719003439, -0.0007027302053757012, -0.001212338567711413, -0.0003401654539629817, -0.0022352966479957104, -0.017606865614652634, -4.410646579344757e-05, -0.00019107422849629074, -0.005620509851723909, -0.000621840707026422, -0.06476418673992157, -0.0008001701789908111, -0.6997529864311218, -0.020731892436742783, -0.002792390063405037, -6.031808152329177e-05, -0.0021815330255776644, -0.014176495373249054, -0.004247334785759449, -0.008101814426481724, -8.308542601298541e-05, -0.20287176966667175, -0.019437668845057487, -0.5880196690559387, -0.0016811060486361384, -0.03928234428167343, -0.006253674626350403, -1.5086359977722168, -1.4305104514278355e-06, -1.1920922133867862e-06, -0.00011562632425921038, -0.00014304091746453196, -0.11370433866977692], "finish_reason": "stop"}], "metrics": {"energy": 253.224738714218, "energy_per_token": 1.0420771140502798, "time": 10.522854, "time_per_token": 0.043303925925925926}}
{"outputs": [{"text": "fetch_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    try:\n        with urllib.request.urlopen(url) as response:\n            html = response.read()\n            html = html.decode('utf8')\n        doc = pq(html)\n        table = doc('#mw-content-text > div.mw-parser-output > table > tbody > tr:nth-child(1)')\n        anchor_tags = table(\"a\")\n        df = pd.DataFrame({\"text\": [], \"href\": [], \"fetch_time\": fetch_time})\n        for anchor in anchor_tags:\n            anchor = pq(anchor)\n            text = anchor(\"span.mw-headline\").text()\n            href = anchor(\"a\").attr(\"href\")\n            df = df.append(\n                {\"text\": text, \"href\": href, \"fetch_time\": fetch_time},\n                ignore_index=True\n            )\n        return df\n    except Exception as e:\n        print(e", "tokens": ["fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "try", ":", "\n", "        ", "with", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", " as", " response", ":", "\n", "            ", "html", " =", " response", ".", "read", "()", "\n", "            ", "html", " =", " html", ".", "decode", "('", "utf", "8", "')", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "        ", "table", " =", " doc", "('#", "mw", "-", "content", "-", "text", " >", " div", ".", "mw", "-", "parser", "-", "output", " >", " table", " >", " t", "body", " >", " tr", ":", "nth", "-", "child", "(", "1", ")", "')", "\n", "        ", "anchor", "_", "tags", " =", " table", "(", "\"", "a", "\"", ")", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "{\"", "text", "\":", " []", ",", " \"", "href", "\":", " []", ",", " \"", "fetch", "_", "time", "\":", " fetch", "_", "time", "})", "\n", "        ", "for", " anchor", " in", " anchor", "_", "tags", ":", "\n", "            ", "anchor", " =", " p", "q", "(", "anchor", ")", "\n", "            ", "text", " =", " anchor", "(", "\"", "span", ".", "mw", "-", "head", "line", "\"", ")", ".", "text", "()", "\n", "            ", "href", " =", " anchor", "(", "\"", "a", "\"", ")", ".", "attr", "(", "\"", "href", "\"", ")", "\n", "            ", "df", " =", " df", ".", "append", "(", "\n", "                ", "{\"", "text", "\":", " text", ",", " \"", "href", "\":", " href", ",", " \"", "fetch", "_", "time", "\":", " fetch", "_", "time", "}", ",", "\n", "                ", "ignore", "_", "index", "=", "True", "\n", "            ", ")", "\n", "        ", "return", " df", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e"], "logprobs": [-2.9121222496032715, -0.020064834505319595, -0.0860733836889267, -0.033958666026592255, -0.04984552785754204, -0.0002972637885250151, -0.10938242822885513, -0.001001690630801022, -0.13904277980327606, -0.030024854466319084, -5.6265202147187665e-05, -0.27114176750183105, -0.015938615426421165, -0.006917220074683428, -0.0038602848071604967, -0.002419165801256895, -8.046303264563903e-05, -0.00023266946664080024, -0.027104103937745094, -0.0037561357021331787, -0.0012244831304997206, -0.0002240883477497846, -0.0017763087525963783, -0.000714523543138057, -0.007897816598415375, -0.044615451246500015, -0.3303222358226776, -1.6923038959503174, -0.0014885308919474483, -0.004755496513098478, -0.017320092767477036, -3.639866590499878, -0.04098238795995712, -0.00041154498467221856, -5.364403477869928e-06, -0.0003387354372534901, -0.00017617580306250602, -0.00028880240279249847, -0.004266683477908373, -0.00036864637513644993, -0.003358677960932255, -0.0024022788275033236, -0.12548641860485077, -0.001064687268808484, -1.1563491821289062, -0.019213635474443436, -0.02161598391830921, -0.008932039141654968, -0.447746604681015, -0.2152484655380249, -0.06030739098787308, -0.00023195437097456306, -0.0016887226374819875, -0.0012226970866322517, -0.4518040120601654, -0.8564062714576721, -1.7227461338043213, -0.6108993291854858, -0.38539111614227295, -0.0034781931899487972, -0.006761765107512474, -0.4308167099952698, -0.024901561439037323, -2.1942028999328613, -0.004928227048367262, -0.024061104282736778, -1.6405690908432007, -0.5479394197463989, -0.005634497385472059, -0.0013367536012083292, -1.1801649634435307e-05, -0.000759074988309294, -0.0034263969864696264, -0.013959391042590141, -0.017348680645227432, -0.14873984456062317, -3.8082661628723145, -0.18115127086639404, -0.8292609453201294, -2.0358006954193115, -0.3517887592315674, -0.0014065144350752234, -0.11440514773130417, -0.00042846560245379806, -0.0013711584033444524, -0.4007691740989685, -0.04103605076670647, -0.4024750888347626, -0.04565386101603508, -0.0003413571394048631, -0.03894806280732155, -1.9073468138230965e-06, -0.003053290769457817, -0.054765280336141586, -0.9628003835678101, -1.705385684967041, -0.02092663384974003, -0.0013897294411435723, -1.6144349575042725, -0.007321195211261511, -1.0512627363204956, -0.01590435579419136, -0.00019262365822214633, -0.006713691167533398, -0.0013436584267765284, -0.8577741980552673, -0.11416057497262955, -0.7523384094238281, -0.058946091681718826, -0.06038437783718109, -2.426971435546875, -0.1335371732711792, -0.6706578731536865, -0.017871424555778503, -0.21575616300106049, -2.881620168685913, -0.07262306660413742, -1.3710130453109741, -0.07912702113389969, -0.0026072815526276827, -0.04319984093308449, -0.12863744795322418, -1.9271082878112793, -0.04579700902104378, -0.11583277583122253, -0.0013674680376425385, -0.006570758298039436, -0.6121520400047302, -3.0110435485839844, -0.12464097142219543, -0.012852217070758343, -0.4410638213157654, -0.00244770641438663, -0.05379469692707062, -0.004394991789013147, -0.0015889888163655996, -0.01928672008216381, -0.07151574641466141, -0.007309597916901112, -0.009156615473330021, -0.0019487215904518962, -0.0006167178507894278, -0.0033742417581379414, -0.6279003024101257, -1.0609570381348021e-05, -1.9550132492440753e-05, -0.1095498651266098, -0.0036295270547270775, -0.1085037812590599, -0.054811663925647736, -0.8027858138084412, -0.6506927013397217, -0.002351259347051382, -0.00014101465058047324, -7.390948667307384e-06, -0.061200473457574844, -0.0015119798481464386, -0.00558210164308548, -0.9037548303604126, -0.4502532184123993, -0.057245492935180664, -9.464769391342998e-05, -0.0007649118197150528, -0.004149992950260639, -0.002204132964834571, -0.009559215046465397, -0.003524997504428029, -1.7559874057769775, -0.0693221241235733, -0.016571497544646263, -2.3115265369415283, -0.005291148088872433, -1.2123562097549438, -0.9138436317443848, -0.2772250175476074, -0.0013260389678180218, -0.38282597064971924, -0.014578841626644135, -0.07923098653554916, -0.11313740164041519, -0.05243479460477829, -0.022374453023076057, -0.003468808252364397, -0.26441022753715515, -0.0025291619822382927, -0.12236636877059937, -0.005775312427431345, -0.036420729011297226, -0.49120962619781494, -0.001760719926096499, -0.09261917322874069, -0.09837092459201813, -0.030234798789024353, -0.03042515553534031, -0.02284540794789791, -0.2750369608402252, -0.0005822870298288763, -0.0075617507100105286, -7.402622577501461e-05, -0.004663543310016394, -0.009941468946635723, -0.007735653314739466, -0.09796299040317535, -0.7919493913650513, -0.05808856338262558, -0.0007088055717758834, -0.007128993049263954, -0.22981716692447662, -2.411848545074463, -0.014340555295348167, -1.4150500297546387, -0.009299179539084435, -0.0009866851614788175, -0.0320260226726532, -0.015285257250070572, -0.028433870524168015, -0.0020920787937939167, -0.0010060969507321715, -0.006587693467736244, -0.005096420645713806, -0.005948459263890982, -0.0004462200158741325, -0.00022194306075107306, -9.679325739853084e-05, -0.0006304183625616133, -0.00691639119759202, -1.8596476365928538e-05, -3.683499380713329e-05, -0.11153831332921982, -0.006715111900120974, -0.5447883009910583, -0.0055389502085745335, -0.024365030229091644, -1.0728830375228426e-06, -6.389413465512916e-05, -0.018931299448013306, -0.0014610340585932136, -0.9679926037788391, -0.022581113502383232, -0.0005421360838226974, -0.002336869016289711, -0.3432174324989319, -0.17001932859420776, -0.005155483260750771, -0.02230917103588581, -0.12752006947994232, -0.0013850866816937923, -1.9238977432250977, -0.07097556442022324, -0.2044723778963089, -0.0007558587822131813, -0.0036620714236050844, -0.002488137688487768, -0.7602759599685669, -0.07540231198072433, -0.8355749249458313], "finish_reason": "length"}], "metrics": {"energy": 258.34633036613474, "energy_per_token": 1.0091653529927138, "time": 11.143597, "time_per_token": 0.04352967578125}}
{"outputs": [{"text": "try:\n        html = urllib.request.urlopen(url).read()\n        doc = pq(html)\n        anchor_tags = doc('a')\n        df = pd.DataFrame(columns=['text', 'href', 'fetch_time'])\n        for node in anchor_tags:\n            node = pq(node)\n            text = node.text()\n            href = node.attr('href')\n            fetch_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n            df = df.append({'text': text, 'href': href, 'fetch_time': fetch_time}, ignore_index=True)\n        return df\n    except:\n        raise ValueError('Invalid url provided')", "tokens": ["try", ":", "\n", "        ", "html", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", ".", "read", "()", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "        ", "anchor", "_", "tags", " =", " doc", "('", "a", "')", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'])", "\n", "        ", "for", " node", " in", " anchor", "_", "tags", ":", "\n", "            ", "node", " =", " p", "q", "(", "node", ")", "\n", "            ", "text", " =", " node", ".", "text", "()", "\n", "            ", "href", " =", " node", ".", "attr", "('", "href", "')", "\n", "            ", "fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "            ", "df", " =", " df", ".", "append", "({", "'", "text", "':", " text", ",", " '", "href", "':", " href", ",", " '", "fetch", "_", "time", "':", " fetch", "_", "time", "}", ",", " ignore", "_", "index", "=", "True", ")", "\n", "        ", "return", " df", "\n", "    ", "except", ":", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " url", " provided", "')", "\n", "\n", "if"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -2.386397361755371, -0.26352500915527344, -0.30047568678855896, -0.0001559135998832062, -1.4543427823809907e-05, -0.0006095697171986103, -0.0001954841281985864, -0.00013720047718379647, -0.010438487865030766, -0.00018487652414478362, -0.0008953376673161983, -0.0017316836165264249, -0.0953487828373909, -0.7428865432739258, -0.002329970942810178, -0.0013228246243670583, -0.28033533692359924, -0.6210203170776367, -1.2018405199050903, -0.007000087760388851, -0.0019606193527579308, -2.062299427052494e-05, -0.0006650857976637781, -0.008375046774744987, -0.13168995082378387, -0.01907949522137642, -0.3675188422203064, -1.6051901578903198, -0.09334565699100494, -0.26974305510520935, -0.007554179057478905, -0.06907150149345398, -0.12938767671585083, -0.06912556290626526, -0.06967397779226303, -0.07576651126146317, -0.2507343888282776, -1.8996952772140503, -0.04781939834356308, -0.09233073890209198, -0.0015063855098560452, -0.0033433514181524515, -0.6921688318252563, -0.31490471959114075, -0.09997447580099106, -0.08839409053325653, -0.00046826363541185856, -0.00019274283840786666, -0.016365351155400276, -0.0019810828380286694, -0.07122126966714859, -7.021180499577895e-05, -0.006435740273445845, -0.007042110897600651, -0.0009345216676592827, -0.0006780709372833371, -0.01095813512802124, -0.002824010793119669, -0.2623865008354187, -0.15341652929782867, -4.070632457733154, -0.0021497728303074837, -0.0011941214324906468, -2.9802276912960224e-06, -9.179073458653875e-06, -0.5344420671463013, -0.0038151589687913656, -0.004480442497879267, -3.678433418273926, -0.5235788226127625, -0.09935944527387619, -0.0001820160250645131, -0.0020404488313943148, -0.005025018937885761, -0.0024600739125162363, -0.01610168255865574, -0.00454713637009263, -1.2994811534881592, -0.07504704594612122, -0.035412147641181946, -0.028379876166582108, -0.1662069857120514, -0.003303905250504613, -0.34202706813812256, -0.0008759237825870514, -0.0370018407702446, -0.004409352783113718, -0.02421598695218563, -0.03844700753688812, -0.0016659918474033475, -0.1559094488620758, -0.0007955246837809682, -0.0001299296854995191, -0.014810727909207344, -0.0038051833398640156, -0.48552343249320984, -0.002502050483599305, -0.00498706242069602, -0.003243782324716449, -0.039505019783973694, -0.00019464982324279845, -0.059412382543087006, -0.0003725788265001029, -0.02180495485663414, -0.022114114835858345, -4.994744449504651e-05, -0.11522603780031204, -0.0070311021991074085, -0.001465676468797028, -0.001311752712354064, -0.0014024670235812664, -3.6000557884108275e-05, -8.5588610090781e-05, -0.00482335826382041, -0.0013019903562963009, -0.00035124807618558407, -7.426462980220094e-05, -0.0009023646707646549, -0.000302030734019354, -0.002516557462513447, -0.0066221547313034534, -0.012678142637014389, -0.08448560535907745, -0.3591397702693939, -0.025703206658363342, -0.00019631843315437436, -0.005914092995226383, -0.11040645837783813, -0.08924958854913712, -0.0025232164189219475, -0.004048485774546862, -0.05420795455574989, -0.0013919912744313478, -0.02660253271460533, -0.001698124222457409, -0.0007770617958158255, -0.0027865648735314608, -0.0008398343343287706, -0.020726637914776802, -0.00046230596490204334, -0.0005611990345641971, -0.0001525762490928173, -0.0012409137561917305, -0.016135700047016144, -1.0132738680113107e-05, -1.3232143828645349e-05, -0.02085343562066555, -0.00039426659350283444, -0.10215620696544647, -3.099436753473128e-06, -0.00016830935783218592, -0.014984430745244026, -0.0013775869738310575, -0.0012915135594084859, -0.001672775368206203, -0.21587692201137543, -0.14300815761089325, -0.004890385549515486, -0.007543885614722967, -0.13220980763435364, -0.0008041008841246367, -3.0749833583831787, -0.010314256884157658, -0.0033475097734481096, -0.23999635875225067, -0.1446719467639923, -0.00012015574611723423, -0.6145898699760437, -0.7233830094337463, -2.561323404312134, -2.6151821613311768, -0.5868416428565979, -0.1166561096906662, -0.49499988555908203, -0.5926235318183899], "finish_reason": "stop"}], "metrics": {"energy": 187.01944359970094, "energy_per_token": 1.044801360892184, "time": 7.5806875, "time_per_token": 0.042350209497206706}}
{"outputs": [{"text": "try:\n        html = urllib.request.urlopen(url)\n    except urllib.error.URLError as e:\n        print(f\"Error fetching {url}: {e}\")\n        return\n\n    doc = pq(html)\n\n    data = []\n    fetch_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    for anchor in doc(\"#MainPage a\").items():\n        text = anchor(\"text()\").item().strip()\n        href = anchor.attr.href\n        data.append([text, href, fetch_time])\n\n    df = pd.DataFrame(data, columns=[\"text\", \"href\", \"fetch_time\"])\n\n    return df", "tokens": ["try", ":", "\n", "        ", "html", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " fetch", "ing", " {", "url", "}:", " {", "e", "}\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "doc", " =", " p", "q", "(", "html", ")", "\n", "\n", "    ", "data", " =", " []", "\n", "    ", "fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "for", " anchor", " in", " doc", "(", "\"", "#", "Main", "Page", " a", "\"", ")", ".", "items", "():", "\n", "        ", "text", " =", " anchor", "(", "\"", "text", "()", "\"", ")", ".", "item", "()", ".", "strip", "()", "\n", "        ", "href", " =", " anchor", ".", "attr", ".", "href", "\n", "        ", "data", ".", "append", "([", "text", ",", " href", ",", " fetch", "_", "time", "])", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=[", "\"", "text", "\"", ",", " \"", "href", "\"", ",", " \"", "fetch", "_", "time", "\"", "])", "\n", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -2.386397361755371, -0.26352500915527344, -0.30047568678855896, -0.0001559135998832062, -1.4543427823809907e-05, -0.0006095697171986103, -0.0001954841281985864, -0.00013720047718379647, -0.010438487865030766, -0.00018487652414478362, -0.0008953376673161983, -0.0017316836165264249, -0.0953487828373909, -0.7420873641967773, -0.9569358229637146, -0.0021922383457422256, -0.7430004477500916, -4.136476854910143e-05, -5.602820692729438e-06, -0.00035208225017413497, -0.04656000807881355, -0.00022980909852776676, -0.006663009524345398, -5.4596363042946905e-05, -5.507317473529838e-05, -0.42337867617607117, -0.21520395576953888, -0.0017755947774276137, -0.02730201743543148, -0.0025662605185061693, -1.219465732574463, -0.21346253156661987, -0.9617530107498169, -0.517898440361023, -0.8344035744667053, -0.764842689037323, -0.0010028815595433116, -2.4988017082214355, -0.007082001771777868, -0.15469714999198914, -0.06070719659328461, -0.09268002212047577, -0.5540055632591248, -0.0017109769396483898, -0.020738547667860985, -0.14725525677204132, -0.4538634717464447, -1.5421934127807617, -0.613745391368866, -0.0009788251481950283, -0.9930229783058167, -0.0049314298667013645, -0.0011928117601200938, -1.3232143828645349e-05, -0.0022747849579900503, -0.007525192108005285, -0.12445162236690521, -0.021526850759983063, -1.050192952156067, -0.0008336406317539513, -1.7949265241622925, -0.0713985413312912, -0.15024703741073608, -0.007702767848968506, -0.23222258687019348, -2.8997530937194824, -0.005314626730978489, -0.01643078774213791, -0.007333857472985983, -0.015186870470643044, -0.00013636612857226282, -0.05139796808362007, -0.00025817399728111923, -0.11669620871543884, -0.030434058979153633, -2.539125671319198e-05, -0.6331703066825867, -0.00468098558485508, -0.002096956130117178, -0.002032478107139468, -0.0010974343167617917, -0.0007108307327143848, -1.5258672647178173e-05, -8.391981828026474e-05, -0.013296857476234436, -0.001831641187891364, -0.0005703729693777859, -5.1020273531321436e-05, -0.0005863377591595054, -0.0003564914222806692, -0.0041175829246640205, -8.797258487902582e-05, -0.01790151745080948, -0.5604843497276306, -0.0005214046686887741, -0.2937411367893219, -0.9502378106117249, -0.04851226508617401, -0.0011410161387175322, -1.2960352897644043, -0.0006302992696873844, -2.910055637359619, -3.6607348918914795, -0.7333367466926575, -1.2422471046447754, -0.22139804065227509, -1.3364903926849365, -0.0005639393348246813, -0.001772143878042698, -0.0016782497987151146, -0.028256693854928017, -0.009528987109661102, -1.2408299446105957, -0.04634925723075867, -0.013034027069807053, -2.1753387451171875, -0.007904321886599064, -1.3690663576126099, -0.7229629158973694, -0.0012159105390310287, -0.02692251279950142, -0.2604818046092987, -2.1341307163238525, -0.010852009989321232, -0.4542367458343506, -0.0630577951669693, -0.008175479248166084, -0.0729324221611023, -0.01136708166450262, -0.0286656953394413, -0.0021807001903653145, -0.0120933186262846, -1.6902565956115723, -0.01801883988082409, -0.8020297288894653, -0.0320853628218174, -0.0685712918639183, -0.21586903929710388, -0.12526610493659973, -0.005726479925215244, -0.0012861560098826885, -1.1151189804077148, -0.030133476480841637, -0.0026222625747323036, -0.004910788964480162, -0.003169277450069785, -0.004775309935212135, -1.8596476365928538e-05, -2.0861407392658293e-05, -0.0013729440979659557, -0.0016518294578418136, -0.052250731736421585, -0.0015338810626417398, -0.43118152022361755, -0.007354566361755133, -0.002049133414402604, -0.0018455630633980036, -0.0006541258189827204, -0.0022122215013951063, -0.014920895919203758, -0.04949819669127464, -0.03515471890568733, -0.4827168583869934, -0.010500657372176647, -0.019820373505353928, -0.0003137096355203539, -7.486063259420916e-05, -0.007251727394759655, -0.00482596829533577, -0.00015639036428183317, -0.000388665939681232, -0.005490698851644993, -0.0022812075912952423, -0.002001189161092043, -0.0004138090298511088, -0.00023922442051116377, -0.0023088008165359497, -0.005189045332372189, -0.9534468054771423, -0.0028641889803111553, -0.07646237313747406, -0.006604865193367004, -0.832659125328064, -0.023266177624464035, -0.7251344323158264], "finish_reason": "stop"}], "metrics": {"energy": 200.3505343360901, "energy_per_token": 1.06005573722799, "time": 7.9957037, "time_per_token": 0.042305310582010584}}
{"outputs": [{"text": "if not url:\n        raise ValueError('URL cannot be empty.')\n\n    try:\n        with urllib.request.urlopen(url) as response:\n            html = response.read()\n    except urllib.error.URLError:\n        raise URLError('No internet connection.')\n    except ConnectionError:\n        raise URLError('No internet connection.')\n\n    try:\n        doc = pq(html)\n        # Extract the href attributes of all anchor tags in the HTML\n        href_list = [item.attr('href') for item in doc('a').items()]\n\n        # Extract the text of all anchor tags\n        text_list = [item.text() for item in doc('a').items()]\n\n        # Convert the text and href attributes to a list of dicts\n        data = [(text, link) for (text, link) in zip(text_list, href_list)]\n\n        # Convert data to a pandas DataFrame\n        df = pd.DataFrame(data, columns=['text', 'href'])\n\n        # Get the current datetime in", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "('", "URL", " cannot", " be", " empty", ".", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", " as", " response", ":", "\n", "            ", "html", " =", " response", ".", "read", "()", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ":", "\n", "        ", "raise", " UR", "LE", "rror", "('", "No", " internet", " connection", ".", "')", "\n", "    ", "except", " Connection", "Error", ":", "\n", "        ", "raise", " UR", "LE", "rror", "('", "No", " internet", " connection", ".", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "doc", " =", " p", "q", "(", "html", ")", "\n", "        ", "#", " Ext", "ract", " the", " href", " attributes", " of", " all", " anchor", " tags", " in", " the", " HTML", "\n", "        ", "href", "_", "list", " =", " [", "item", ".", "attr", "('", "href", "')", " for", " item", " in", " doc", "('", "a", "')", ".", "items", "()", "]", "\n", "\n", "        ", "#", " Ext", "ract", " the", " text", " of", " all", " anchor", " tags", "\n", "        ", "text", "_", "list", " =", " [", "item", ".", "text", "()", " for", " item", " in", " doc", "('", "a", "')", ".", "items", "()", "]", "\n", "\n", "        ", "#", " Convert", " the", " text", " and", " href", " attributes", " to", " a", " list", " of", " dict", "s", "\n", "        ", "data", " =", " [(", "text", ",", " link", ")", " for", " (", "text", ",", " link", ")", " in", " zip", "(", "text", "_", "list", ",", " href", "_", "list", ")]", "\n", "\n", "        ", "#", " Convert", " data", " to", " a", " pandas", " Data", "Frame", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=['", "text", "'", ",", " '", "href", "'])", "\n", "\n", "        ", "#", " Get", " the", " current", " datetime", " in"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.7515633702278137, -1.2962188720703125, -0.5960391163825989, -0.00029571453342214227, -0.026000361889600754, -1.195716381072998, -0.03397652879357338, -0.0029056731145828962, -0.4894252419471741, -0.0014310367405414581, -0.9278087019920349, -0.00035637227119877934, -0.005489276256412268, -0.007529924623668194, -3.136831283569336, -0.04554144665598869, -0.0003051292151212692, -9.298280929215252e-06, -0.0007183355046436191, -0.0002157455455744639, -0.00021610308613162488, -0.004320810083299875, -0.0001823735801735893, -0.002744243713095784, -0.0017776177264750004, -0.09432884305715561, -0.000759074988309294, -1.1660429239273071, -0.00922795943915844, -0.03368265554308891, -0.013757643289864063, -0.41904014348983765, -0.2394922971725464, -0.04222710430622101, -0.00018559163436293602, -0.0012541294563561678, -0.0011533997021615505, -0.3684932291507721, -1.1298216581344604, -0.002234939718618989, -0.3333342373371124, -2.7417760065873154e-05, -3.933898824470816e-06, -5.972207145532593e-05, -0.051303181797266006, -0.00020454221521504223, -0.0161212719976902, -5.757642793469131e-05, -2.3364747903542593e-05, -1.3325132131576538, -0.013204745016992092, -0.002284181071445346, -0.340800940990448, -1.7595267295837402, -0.002650321926921606, -0.00022933237778488547, -0.19822454452514648, -2.389864444732666, -0.8695776462554932, -0.40225011110305786, -1.2748149633407593, -0.17370809614658356, -0.010761559940874577, -1.6646448373794556, -0.5564994215965271, -3.7525129318237305, -0.24187147617340088, -0.0929310992360115, -0.07315272092819214, -0.0018446111353114247, -0.02899138629436493, -0.7279086709022522, -0.0008474572678096592, -1.2040065485052764e-05, -0.009390353225171566, -0.21153795719146729, -0.03178331255912781, -0.011635064147412777, -0.012603748589754105, -0.0033927755430340767, -0.003019181312993169, -0.3189378082752228, -0.0015798242529854178, -2.6137197017669678, -0.0005312938592396677, -0.0044640651904046535, -0.002825318370014429, -0.9259617328643799, -0.0047526489943265915, -0.001964426366612315, -2.8609820219571702e-05, -0.004664492793381214, -0.007337644230574369, -0.10375101864337921, -0.02314586006104946, -1.2108145952224731, -3.651939868927002, -1.9093332290649414, -0.14130951464176178, -1.4801210165023804, -3.34110951423645, -2.2039568424224854, -0.36221039295196533, -0.09349039196968079, -0.1151258572936058, -0.01679096557199955, -2.480713367462158, -0.11617119610309601, -0.7167009711265564, -1.5293322801589966, -0.0026787372771650553, -1.545856237411499, -1.2510156631469727, -0.8498181700706482, -0.009135943837463856, -0.4664516746997833, -2.445303440093994, -0.238050639629364, -0.15196684002876282, -0.9580246806144714, -0.0006194579764269292, -0.00025781645672395825, -0.048586077988147736, -0.002121699508279562, -0.001033010776154697, -0.00553598627448082, -0.35062476992607117, -0.04611842334270477, -0.05612596496939659, -2.0476274490356445, -0.002796194050461054, -0.0030560242012143135, -0.10932451486587524, -0.004875200800597668, -2.0187690258026123, -0.028326688334345818, -0.13358786702156067, -0.3874070942401886, -0.005834453739225864, -0.042016465216875076, -0.08765177428722382, -1.6278725862503052, -0.07321731001138687, -0.054487504065036774, -0.003927139099687338, -1.6398710012435913, -0.00044907975825481117, -0.04895972087979317, -0.027112457901239395, -0.0033753111492842436, -0.0010068115079775453, -0.06927696615457535, -0.11591686308383942, -0.007201783359050751, -0.06527803093194962, -0.004045161418616772, -0.05438284948468208, -0.0001311216183239594, -8.451581379631534e-05, -0.00022468426323030144, -0.00471824174746871, -0.007149114273488522, -0.0005032941699028015, -0.007336342707276344, -0.0002157455455744639, -6.925819616299123e-05, -0.006216475740075111, -0.0010826685465872288, -0.17455653846263885, -0.034688375890254974, -0.12493433058261871, -1.5656925439834595, -0.42576757073402405, -2.7337429523468018, -0.895405650138855, -0.03801938146352768, -1.4032020568847656, -0.6726258397102356, -1.0198562145233154, -1.5161614418029785, -0.1834823191165924, -2.5478243827819824, -0.0694284439086914, -0.22146157920360565, -0.002411079127341509, -0.6434729695320129, -0.34343022108078003, -2.2197327613830566, -0.6236089468002319, -0.043663375079631805, -3.0186519622802734, -0.7620928883552551, -0.02386743761599064, -2.5683860778808594, -0.032826244831085205, -0.0001530530134914443, -0.005404029972851276, -0.0035206021275371313, -0.004250064957886934, -0.019955933094024658, -0.00020168177434243262, -0.021004963666200638, -0.00010072677832795307, -6.9141146923357155e-06, -0.0005893162451684475, -0.004696528892964125, -1.2397689715726301e-05, -2.145764938177308e-06, -0.03473880887031555, -0.0030504383612424135, -0.21243222057819366, -0.03718585893511772, -0.09824872016906738, -0.5632765889167786, -2.919903516769409, -0.17097268998622894, -0.2716626524925232, -0.3252827823162079, -0.0748489573597908, -0.005365495104342699, -0.21540561318397522, -0.0017708349041640759, -0.05599026381969452, -0.006836713291704655, -0.0036975841503590345, -0.0013829439412802458, -0.0005484507419168949, -0.025153039023280144, -0.009889298118650913, -0.1818973273038864, -0.02330111712217331, -0.06603044271469116, -0.032038722187280655, -0.0005202132160775363, -7.211902266135439e-05, -0.010685843415558338, -0.03370824456214905, -0.011964816600084305, -0.020161107182502747, -0.5105116367340088, -0.09604144841432571, -0.06792749464511871, -2.778750419616699, -0.34487783908843994, -0.1406567245721817, -3.2529733180999756, -1.0811173915863037], "finish_reason": "length"}], "metrics": {"energy": 265.85270407581316, "energy_per_token": 1.0384871252961452, "time": 11.144664, "time_per_token": 0.04353384375}}
{"outputs": [{"text": "# check that the url is valid\n    if url == \"\":\n        raise ValueError(\"url cannot be empty\")\n\n    # check for internet connectivity\n    try:\n        response = urllib.request.urlopen(url)\n    except URLError as e:\n        raise\n\n    # get the HTML content of the URL\n    html = response.read()\n\n    # extract the anchor tags from the HTML content\n    d = pq(html)('a')\n\n    # create the dataframe\n    data = pd.DataFrame(columns=['text', 'href'])\n\n    for item in d.items():\n        anchor_tag = pq(item)\n        text = anchor_tag.text()\n        href = anchor_tag.attr('href')\n        data.loc[len(data)] = [text, href]\n\n    # add the fetch time column\n    data['fetch_time'] = [datetime.now().strftime('%Y-%m-%d %H:%M:%S')]\n\n    return data", "tokens": ["#", " check", " that", " the", " url", " is", " valid", "\n", "    ", "if", " url", " ==", " \"", "\":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "url", " cannot", " be", " empty", "\"", ")", "\n", "\n", "    ", "#", " check", " for", " internet", " connectivity", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "    ", "except", " UR", "LE", "rror", " as", " e", ":", "\n", "        ", "raise", "\n", "\n", "    ", "#", " get", " the", " HTML", " content", " of", " the", " URL", "\n", "    ", "html", " =", " response", ".", "read", "()", "\n", "\n", "    ", "#", " extract", " the", " anchor", " tags", " from", " the", " HTML", " content", "\n", "    ", "d", " =", " p", "q", "(", "html", ")", "('", "a", "')", "\n", "\n", "    ", "#", " create", " the", " data", "frame", "\n", "    ", "data", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "text", "'", ",", " '", "href", "'])", "\n", "\n", "    ", "for", " item", " in", " d", ".", "items", "():", "\n", "        ", "anchor", "_", "tag", " =", " p", "q", "(", "item", ")", "\n", "        ", "text", " =", " anchor", "_", "tag", ".", "text", "()", "\n", "        ", "href", " =", " anchor", "_", "tag", ".", "attr", "('", "href", "')", "\n", "        ", "data", ".", "loc", "[", "len", "(", "data", ")]", " =", " [", "text", ",", " href", "]", "\n", "\n", "    ", "#", " add", " the", " fetch", " time", " column", "\n", "    ", "data", "['", "fetch", "_", "time", "']", " =", " [", "datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "]", "\n", "\n", "    ", "return", " data"], "logprobs": [-1.6888309717178345, -2.66190242767334, -3.0581750869750977, -0.9240120053291321, -1.3009432554244995, -0.17652685940265656, -0.4528108835220337, -0.4498513638973236, -0.005003905855119228, -0.05314617604017258, -1.6208258867263794, -0.6912220120429993, -0.950366199016571, -0.09899002313613892, -0.006948710884898901, -0.002800473477691412, -0.04418360814452171, -0.007597125135362148, -6.3774932641536e-05, -0.21592187881469727, -0.047930192202329636, -2.4613940715789795, -1.177452564239502, -0.0016012478154152632, -0.0776873305439949, -0.22607067227363586, -0.0004935238393954933, -0.002148583298549056, -0.492542564868927, -0.0030467540491372347, -0.29378318786621094, -1.6727452278137207, -2.3762543201446533, -0.8814055323600769, -0.15495029091835022, -0.235369473695755, -0.004870693199336529, -0.11111576110124588, -0.0004674295778386295, -0.003978552762418985, -0.003287270897999406, -1.2130249738693237, -0.003170228097587824, -0.09052683413028717, -8.332382276421413e-05, -6.437280717364047e-06, -0.0006036128615960479, -0.00028379703871905804, -0.00010263393050990999, -0.022058960050344467, -8.904537389753386e-05, -0.0006189814303070307, -0.0032261963933706284, -0.08644028007984161, -0.019459063187241554, -0.16611823439598083, -0.0030646997038275003, -2.1470530033111572, -9.16677454370074e-05, -3.2543604902457446e-05, -0.7524212598800659, -0.19418548047542572, -0.0011922164121642709, -0.012058102525770664, -0.0018277144990861416, -1.5482887029647827, -3.7037370204925537, -0.2568686306476593, -0.0031699903775006533, -0.20463025569915771, -2.3884382247924805, -0.8004192113876343, -1.1183748245239258, -0.1045294851064682, -1.6070835590362549, -0.01360242534428835, -0.6959465742111206, -0.1295444518327713, -0.0017074067145586014, -0.2835038900375366, -0.31584298610687256, -0.10138870030641556, -0.00028355870745144784, -0.0005435658385977149, -0.000691770575940609, -0.3421747386455536, -0.2733458876609802, -0.000942858459893614, -0.04061536863446236, -3.0031375885009766, -0.7760219573974609, -0.9106971025466919, -0.11037411540746689, -0.7705659866333008, -0.02204146981239319, -0.02502329647541046, -0.2090042531490326, -0.33858755230903625, -0.0007999319350346923, -3.5571656227111816, -0.02710120379924774, -0.0034113090950995684, -2.288792165927589e-05, -0.002009873976930976, -0.00572458328679204, -0.08412577211856842, -1.441838026046753, -0.07401193678379059, -0.07187969982624054, -0.026852652430534363, -0.14578434824943542, -0.0010888606775552034, -0.07124735414981842, -1.2675411701202393, -2.951392650604248, -1.2976446151733398, -0.11643479764461517, -0.573451578617096, -0.0030852595809847116, -1.7428141832351685, -0.20794115960597992, -1.3246996402740479, -0.0012525817146524787, -0.005960783455520868, -0.8568828701972961, -0.2856714725494385, -0.2815227806568146, -0.06754081696271896, -0.0007773000397719443, -0.0006136203301139176, -0.03998103365302086, -0.0035274920519441366, -2.8476321697235107, -0.011449817568063736, -0.23536457121372223, -0.0008923601126298308, -2.3110270500183105, -2.152242660522461, -0.00157423026394099, -0.008920342661440372, -0.5248726606369019, -0.0027209424879401922, -0.025691820308566093, -0.013292034156620502, -0.05310796573758125, -2.9863810539245605, -1.4362521171569824, -0.4707977771759033, -0.038932815194129944, -0.5928834676742554, -0.00041952868923544884, -0.006716888397932053, -0.016673030331730843, -0.11675571650266647, -0.08746337890625, -0.15159054100513458, -1.5276768207550049, -0.061362940818071365, -0.0441753976047039, -6.198863957251888e-06, -1.549708758830093e-05, -0.0718255564570427, -0.21582715213298798, -0.015451014041900635, -0.16903044283390045, -0.01652834750711918, -0.08873439580202103, -0.009388345293700695, -0.026673339307308197, -3.3378044463461265e-05, -2.253030106658116e-05, -0.05128234624862671, -0.006683614104986191, -0.42969995737075806, -0.0007440659101121128, -0.0002348147245356813, -0.018253324553370476, -0.1704811453819275, -0.32452189922332764, -0.4693639576435089, -0.014463112689554691, -0.04852805286645889, -0.30134856700897217, -0.00013636612857226282, -0.0010773098329082131, -0.22403846681118011, -0.013057795353233814, -0.08020690828561783, -0.01283068023622036, -0.003354281885549426, -0.008859965018928051, -0.1384415626525879, -0.01063854806125164, -0.17599356174468994, -0.009487422183156013, -0.3439018726348877, -0.9481124877929688, -0.4611269235610962, -0.4273364543914795, -0.5195721387863159, -0.5942042469978333, -0.2487642914056778, -0.0010674261720851064, -0.6809138655662537, -0.13253167271614075, -0.004671137314289808, -0.004997381940484047, -0.0010436094598844647, -0.00044586253352463245, -0.0024752949830144644, -3.0553643703460693, -0.03472752496600151, -0.0005470209871418774, -0.06199764460325241, -0.00032908268622122705, -0.1832679659128189, -0.04162798076868057, -4.6132929128361866e-05, -0.5663600564002991, -0.002607875969260931, -0.0021651177667081356, -0.0026082326658070087, -0.0006169561529532075, -4.1483970562694594e-05, -0.00019941726350225508, -0.00829028245061636, -0.0013725870521739125, -0.00040725519647821784, -0.00013374387344811112, -0.000707971747033298, -0.00033682872890494764, -0.0028351848013699055, -0.022427842020988464, -0.4141477048397064, -0.14008373022079468, -0.004404961597174406, -0.1702456921339035, -0.006688469089567661], "finish_reason": "stop"}], "metrics": {"energy": 234.5524974794388, "energy_per_token": 0.9855146952917597, "time": 10.312365, "time_per_token": 0.04332926470588235}}
{"outputs": [{"text": "try:\n        if url == '':\n            raise ValueError('url is invalid')\n\n        data = urllib.request.urlopen(url)\n\n        data = data.read()\n\n        doc = pq(data)\n        result_dict = {\n            \"text\": doc(\"a\").text(),\n            \"href\": doc(\"a\").attr.href,\n            \"fetch_time\": datetime.now().strftime('%Y-%m-%d %H:%M:%S'),\n        }\n\n        return pd.DataFrame(result_dict)\n\n    except Exception as e:\n        print(f'Exception: {e}')", "tokens": ["try", ":", "\n", "        ", "if", " url", " ==", " '", "':", "\n", "            ", "raise", " Value", "Error", "('", "url", " is", " invalid", "')", "\n", "\n", "        ", "data", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "\n", "        ", "data", " =", " data", ".", "read", "()", "\n", "\n", "        ", "doc", " =", " p", "q", "(", "data", ")", "\n", "        ", "result", "_", "dict", " =", " {", "\n", "            ", "\"", "text", "\":", " doc", "(", "\"", "a", "\"", ")", ".", "text", "()", ",", "\n", "            ", "\"", "href", "\":", " doc", "(", "\"", "a", "\"", ")", ".", "attr", ".", "href", ",", "\n", "            ", "\"", "fetch", "_", "time", "\":", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "        ", "}", "\n", "\n", "        ", "return", " pd", ".", "DataFrame", "(", "result", "_", "dict", ")", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Exception", ":", " {", "e", "}", "')", "\n", "\n", "if"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -0.9905291199684143, -1.076189637184143, -0.9975882768630981, -0.5929418206214905, -0.018698962405323982, -0.020899316295981407, -0.002694787224754691, -0.05475478619337082, -0.011928183026611805, -8.463501580990851e-05, -0.8526198267936707, -3.329596996307373, -1.0699820518493652, -1.9632858037948608, -0.50095134973526, -0.003568473504856229, -1.4494211673736572, -0.01267614122480154, -3.436278820037842, -0.20099328458309174, -2.130897045135498, -0.00025817399728111923, -1.0490362910786644e-05, -0.00042965717148035765, -0.0012371037155389786, -0.0004440752090886235, -0.033268436789512634, -0.0004210777406115085, -0.00248659192584455, -0.002388721564784646, -0.04480263218283653, -0.5196387767791748, -1.3704099655151367, -0.08382368832826614, -3.7305784225463867, -0.7642768025398254, -1.2069590091705322, -0.0015733970794826746, -0.015986014157533646, -0.004223119001835585, -0.32548433542251587, -0.7137960195541382, -0.04596017673611641, -1.3906316757202148, -0.010863566771149635, -0.005282965954393148, -2.8371408916427754e-05, -0.002113372553139925, -0.019643649458885193, -0.05084533244371414, -0.019406918436288834, -1.2895904779434204, -3.6386466026306152, -2.201181650161743, -2.0291478633880615, -0.03365107253193855, -3.004899501800537, -0.08687010407447815, -0.06528696417808533, -1.7966792583465576, -0.23549127578735352, -0.027928097173571587, -1.7718619108200073, -0.8494426012039185, -0.00630662776529789, -0.4615633487701416, -0.0459769144654274, -0.004170055501163006, -0.015080254524946213, -0.9146586060523987, -0.0586417056620121, -0.14383120834827423, -0.027301320806145668, -0.003929395228624344, -0.00743467640131712, -0.01241409033536911, -0.0042405687272548676, -0.04713958129286766, -0.018948495388031006, -0.0001774868869688362, -0.0054330783896148205, -0.002145609585568309, -0.00816661212593317, -0.005121208261698484, -0.0026927662547677755, -1.4466419219970703, -0.1153828352689743, -0.10368997603654861, -0.0048047322779893875, -0.030099468305706978, -0.016889663413167, -0.02419993095099926, -0.007967830635607243, -0.0019810828380286694, -0.003598050447180867, -0.23174558579921722, -0.0004374024283606559, -0.10953886061906815, -0.0014387742849066854, -0.08120562136173248, -0.03652612864971161, -0.00017379203927703202, -0.7835201621055603, -0.00552614638581872, -0.007868129760026932, -0.007060221862047911, -0.005659746006131172, -0.00023946279543451965, -0.0009167758980765939, -0.012983782216906548, -0.005314033944159746, -0.0018845908343791962, -0.0006989181856624782, -0.0045715817250311375, -0.0006549597019329667, -0.06656772643327713, -2.225436210632324, -0.014215397648513317, -0.07381784915924072, -0.00010477947944309562, -0.0013678251998499036, -0.48513558506965637, -0.07845394313335419, -1.0454031229019165, -0.03726912662386894, -4.6967357775429264e-05, -0.004770564381033182, -0.1593354493379593, -0.08870144933462143, -2.038458114839159e-05, -7.343022298300639e-05, -1.5296447277069092, -0.04482690989971161, -0.31519126892089844, -0.0047189537435770035, -0.003632496576756239, -2.750873565673828, -0.06660018116235733, -0.263769268989563, -0.0017234723782166839, -0.008610148914158344, -0.01759023405611515, -0.5090526342391968, -0.1301395297050476, -1.332674264907837, -1.0062015056610107, -2.8663339614868164, -1.3576321601867676, -0.047736093401908875, -0.14832131564617157, -0.06488575041294098, -0.02967948094010353, -0.43259161710739136, -0.9364802837371826, -0.6223292946815491], "finish_reason": "stop"}], "metrics": {"energy": 164.57483259773247, "energy_per_token": 1.035061840237311, "time": 6.7379527, "time_per_token": 0.04237706100628931}}
{"outputs": [{"text": "try:\n        if url is None or url == \"\":\n            raise ValueError('Empty URL')\n        else:\n            response = urllib.request.urlopen(url)\n            doc = pq(response.read())\n            data = []\n            for link in doc.find('a'):\n                text = link.text()\n                href = link.attr('href')\n                data.append({\n                    \"text\": text,\n                    \"href\": href,\n                    \"fetch_time\": datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n                })\n            df = pd.DataFrame(data)\n            return df\n    except (ValueError, URLError) as e:\n        print(f\"An error occurred: {e}\")", "tokens": ["try", ":", "\n", "        ", "if", " url", " is", " None", " or", " url", " ==", " \"", "\":", "\n", "            ", "raise", " Value", "Error", "('", "Empty", " URL", "')", "\n", "        ", "else", ":", "\n", "            ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "            ", "doc", " =", " p", "q", "(", "response", ".", "read", "())", "\n", "            ", "data", " =", " []", "\n", "            ", "for", " link", " in", " doc", ".", "find", "('", "a", "')", ":", "\n", "                ", "text", " =", " link", ".", "text", "()", "\n", "                ", "href", " =", " link", ".", "attr", "('", "href", "')", "\n", "                ", "data", ".", "append", "({", "\n", "                ", "    ", "\"", "text", "\":", " text", ",", "\n", "                ", "    ", "\"", "href", "\":", " href", ",", "\n", "                ", "    ", "\"", "fetch", "_", "time", "\":", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "                ", "})", "\n", "            ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "            ", "return", " df", "\n", "    ", "except", " (", "Value", "Error", ",", " UR", "LE", "rror", ")", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "\n", "def"], "logprobs": [-1.654309868812561, -0.0019279003608971834, -0.012647420167922974, -0.0179100651293993, -0.9905291199684143, -1.076189637184143, -1.46308434009552, -0.16968266665935516, -0.25434577465057373, -0.41933849453926086, -0.205958291888237, -1.0343092679977417, -0.036431532353162766, -0.02948932908475399, -0.0025001477915793657, -0.04874039068818092, -0.010830076411366463, -6.496695277746767e-05, -2.1439785957336426, -3.1347947120666504, -0.461310476064682, -0.7760146856307983, -0.005422526504844427, -0.4342452883720398, -1.4824575185775757, -0.0007608617888763547, -0.0068667856976389885, -0.020178163424134254, -1.755557656288147, -0.01666259579360485, -0.10781744867563248, -0.00013219437096267939, -4.291525328881107e-06, -0.0016263603465631604, -0.0002406545972917229, -0.00014375607133843005, -0.03569216653704643, -0.00022718709078617394, -0.0017515569925308228, -0.0034316242672502995, -0.05331786721944809, -0.05768242105841637, -0.17510651051998138, -2.8057861328125, -0.014043323695659637, -0.0074065146036446095, -3.8265450712060556e-05, -0.0009176096064038575, -0.13988237082958221, -0.3347349464893341, -0.008349748328328133, -0.13017533719539642, -0.021499667316675186, -0.2720184624195099, -1.6216429471969604, -0.2035292387008667, -0.4759220480918884, -0.009649420157074928, -0.06580935418605804, -0.28213855624198914, -2.809539318084717, -0.012180587276816368, -0.007286165840923786, -2.0874199867248535, -0.4781437814235687, -0.18764647841453552, -0.18255959451198578, -0.04936601594090462, -0.09977932274341583, -0.04257594048976898, -0.004645389039069414, -1.7455459833145142, -0.06450895965099335, -0.17373734712600708, -0.06049143522977829, -0.08159265667200089, -0.07574230432510376, -0.12923693656921387, -0.0018626974197104573, -0.04462719336152077, -0.004474627319723368, -0.03721239045262337, -0.049566835165023804, -0.023539258167147636, -2.218583583831787, -0.0010193157941102982, -0.00029404606902971864, -0.024975860491394997, -0.010577213019132614, -1.144334316253662, -0.02934926748275757, -0.0018518695142120123, -0.9284364581108093, -1.4466784000396729, -0.00029774048016406596, -0.06974779814481735, -2.302131175994873, -0.04762527719140053, -0.016472768038511276, -0.0654696449637413, -0.012016878463327885, -0.0037131428252905607, -5.8887653722194955e-05, -0.00025781645672395825, -0.0031399254221469164, -0.006264455150812864, -0.002271335804834962, -0.008777842856943607, -0.018572594970464706, -0.001465557492338121, -0.00038580605178140104, -0.00959298387169838, -0.012603984214365482, -0.01603516936302185, -0.0056714811362326145, -0.0019181440584361553, -0.005310713779181242, -0.1732911765575409, -0.0002791491860989481, -0.11008018255233765, -0.0007621721015311778, -0.03171321377158165, -0.03753083199262619, -0.00011801023356383666, -0.47387632727622986, -0.019216910004615784, -0.0033728161361068487, -0.00634844321757555, -0.004938310012221336, -0.006188634783029556, -0.00011824862303910777, -0.00038914260221645236, -0.012761122547090054, -0.003789507318288088, -0.0013730631908401847, -0.00033063191222026944, -0.0014663906767964363, -0.0007557396893389523, -0.008724193088710308, -0.04937725141644478, -0.0953344777226448, -0.01290917582809925, -0.07459849864244461, -0.0009110590908676386, -0.29125306010246277, -1.0568339824676514, -0.019740430638194084, -0.004081373102962971, -4.160317621426657e-05, -0.005530177149921656, -0.02264847606420517, -0.00676318584010005, -0.16919924318790436, -0.011165635660290718, -0.1846517026424408, -0.12075323611497879, -0.01146242767572403, -0.004662119783461094, -0.2040894776582718, -0.0031083147041499615, -1.7083585262298584, -0.34865033626556396, -1.4424220353248529e-05, -0.012902703136205673, -0.19473782181739807, -0.0001012035645544529, -6.794906312279636e-06, -0.18156880140304565, -0.002358514117076993, -0.4582407474517822, -0.0008823553798720241, -0.0030780103988945484, -0.005504095461219549, -0.39735108613967896, -0.0768410935997963, -1.1835014820098877, -0.3724372982978821, -2.818985939025879, -0.0660555511713028, -0.042290300130844116, -0.1908358335494995, -0.017421551048755646, -0.1862974613904953, -0.05875299498438835, -0.17115916311740875, -0.2800823152065277, -0.371929794549942, -1.9751884937286377], "finish_reason": "stop"}], "metrics": {"energy": 184.61878963088995, "energy_per_token": 0.9820148384621806, "time": 7.998083, "time_per_token": 0.042542994680851064}}
{"outputs": [{"text": "if not url:\n        raise ValueError(\"URL cannot be empty.\")\n    url = url.strip()\n\n    try:\n        req = urllib.request.Request(url)\n        response = urllib.request.urlopen(req)\n        content = response.read().decode()\n    except (urllib.error.URLError, ValueError):\n        return None\n    return pq(content)('a').map(lambda _: (_.text(), _.attr.href, datetime.now().strftime('%Y-%m-%d %H:%M:%S'))).to_dict(orient='records')", "tokens": ["if", " not", " url", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " cannot", " be", " empty", ".", "\"", ")", "\n", "    ", "url", " =", " url", ".", "strip", "()", "\n", "\n", "    ", "try", ":", "\n", "        ", "req", " =", " ur", "ll", "ib", ".", "request", ".", "Request", "(", "url", ")", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "req", ")", "\n", "        ", "content", " =", " response", ".", "read", "()", ".", "decode", "()", "\n", "    ", "except", " (", "ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ",", " Value", "Error", "):", "\n", "        ", "return", " None", "\n", "    ", "return", " p", "q", "(", "content", ")", "('", "a", "')", ".", "map", "(", "lambda", " _", ":", " (_", ".", "text", "()", ",", " _", ".", "attr", ".", "href", ",", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "'))", ")", ".", "to", "_", "dict", "(", "orient", "='", "records", "')", "\n", "\n", "if"], "logprobs": [-1.309146523475647, -0.5063750743865967, -0.020549023523926735, -0.10220614075660706, -0.02594890631735325, -0.002755180699750781, -0.03531848266720772, -0.006059726700186729, -4.458328112377785e-05, -0.6724503636360168, -0.05274537205696106, -1.132509708404541, -0.41148751974105835, -0.00022909401741344482, -0.020656343549489975, -1.0938642024993896, -0.027175569906830788, -0.00027092601521871984, -0.0047692591324448586, -0.9870867133140564, -3.818065643310547, -0.5470700860023499, -0.26832231879234314, -0.28924453258514404, -0.1608455628156662, -0.037389595061540604, -0.20410211384296417, -1.2587406635284424, -0.0011019593803212047, -0.7860718965530396, -0.0002949994814116508, -0.005199718754738569, -0.006799535825848579, -2.0992681980133057, -0.01989142782986164, -0.09945366531610489, -9.738924563862383e-05, -7.629365427419543e-06, -0.0012319840025156736, -0.00022551853908225894, -0.000597179401665926, -0.06780341267585754, -0.0009227308910340071, -0.005925469566136599, -0.12389801442623138, -0.02585098147392273, -0.044583868235349655, -2.0129127502441406, -0.004522334318608046, -0.011888248845934868, -0.00019691436318680644, -9.775113539944869e-06, -6.210611172718927e-05, -9.238292841473594e-05, -1.5735502529423684e-05, -0.0006073060794733465, -0.0006524579366669059, -0.00015615197480656207, -0.04609178379178047, -0.07746902853250504, -0.03000657632946968, -0.2702291011810303, -2.5470871925354004, -0.006809718441218138, -0.06898938864469528, -0.0001463782973587513, -0.0007605044520460069, -0.0007317964336834848, -0.8526094555854797, -0.0013547299895435572, -1.1406192779541016, -0.01719636283814907, -1.1459847688674927, -0.0034349507186561823, -1.804684042930603, -0.47772216796875, -0.00022504181833937764, -1.4305104514278355e-06, -9.917721035890281e-05, -0.17900127172470093, -0.00016556799528189003, -0.12644577026367188, -6.329813186312094e-05, -5.090107151772827e-05, -0.03393032029271126, -0.5530888438224792, -2.5510462364763953e-05, -1.2046329975128174, -0.020222675055265427, -0.0013947292463853955, -1.9511724710464478, -1.0794858932495117, -0.015557004138827324, -1.7629872560501099, -3.5989935398101807, -0.660294234752655, -0.003447662340477109, -0.008148993365466595, -0.07540307939052582, -0.6838884949684143, -0.2311592996120453, -0.053358666598796844, -0.11638832092285156, -0.13268910348415375, -0.16511911153793335, -0.015393847599625587, -0.12487036734819412, -1.1553701162338257, -0.4180102050304413, -3.6528587341308594, -0.5297383069992065, -0.056877072900533676, -0.5046612620353699, -0.052508655935525894, -0.05599014833569527, -0.020067639648914337, -0.028637776151299477, -0.4555419981479645, -0.033771976828575134, -0.2523967921733856, -0.1635064333677292, -0.00038413776201196015, -0.05575927719473839, -0.2344503402709961, -0.0022250674664974213, -0.06899461895227432, -9.512448741588742e-05, -0.5103966593742371, -0.0029432333540171385, -0.007666214369237423, -0.003968579228967428, -0.002681352896615863, -0.00019798702851403505, -0.00022766382608097047, -0.012395958416163921, -0.0045167566277086735, -0.0009863278828561306, -0.00039569655200466514, -0.005808735266327858, -0.0007883778307586908, -0.01866491511464119, -0.3078761696815491, -0.21328774094581604, -0.10084793716669083, -0.0028392262756824493, -0.6625844240188599, -1.1982691287994385, -1.04263436794281, -0.08397003263235092, -0.11385414004325867, -0.0021912867669016123, -0.37196552753448486, -0.05956851691007614, -0.6395132541656494], "finish_reason": "stop"}], "metrics": {"energy": 147.43494613838203, "energy_per_token": 0.9573697801193638, "time": 6.5309997, "time_per_token": 0.04240908896103896}}
{"outputs": [{"text": "fetch_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    # if empty, return an error message.\n    if url == \"\":\n        raise ValueError(\"URL cannot be empty\")\n\n    # Fetch the HTML content from the URL using urllib\n    try:\n        response = urllib.request.urlopen(url)\n        content = response.read()\n    except urllib.error.URLError as e:\n        print(e.reason)\n\n    # Parse the HTML content using pyquery\n    doc = pq(content)\n    data = []\n    for item in doc(\"a\").items():\n        row = {\n            'text': item.text(),\n            'href': item.attr.href,\n            'fetch_time': fetch_time,\n        }\n        data.append(row)\n    df = pd.DataFrame(data)\n    return df", "tokens": ["fetch", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "#", " if", " empty", ",", " return", " an", " error", " message", ".", "\n", "    ", "if", " url", " ==", " \"", "\":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "URL", " cannot", " be", " empty", "\"", ")", "\n", "\n", "    ", "#", " F", "etch", " the", " HTML", " content", " from", " the", " URL", " using", " ur", "ll", "ib", "\n", "    ", "try", ":", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "        ", "content", " =", " response", ".", "read", "()", "\n", "    ", "except", " ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "e", ".", "reason", ")", "\n", "\n", "    ", "#", " Parse", " the", " HTML", " content", " using", " py", "query", "\n", "    ", "doc", " =", " p", "q", "(", "content", ")", "\n", "    ", "data", " =", " []", "\n", "    ", "for", " item", " in", " doc", "(", "\"", "a", "\"", ")", ".", "items", "():", "\n", "        ", "row", " =", " {", "\n", "            ", "'", "text", "':", " item", ".", "text", "()", ",", "\n", "            ", "'", "href", "':", " item", ".", "attr", ".", "href", ",", "\n", "            ", "'", "fetch", "_", "time", "':", " fetch", "_", "time", ",", "\n", "        ", "}", "\n", "        ", "data", ".", "append", "(", "row", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "return", " df"], "logprobs": [-2.9121222496032715, -0.020064834505319595, -0.0860733836889267, -0.033958666026592255, -0.04984552785754204, -0.0002972637885250151, -0.10938242822885513, -0.001001690630801022, -0.13904277980327606, -0.030024854466319084, -5.6265202147187665e-05, -0.27114176750183105, -0.015938615426421165, -0.006917220074683428, -0.0038602848071604967, -0.002419165801256895, -8.046303264563903e-05, -0.00023266946664080024, -0.027104103937745094, -0.0037561357021331787, -0.0012244831304997206, -0.0002240883477497846, -0.0017763087525963783, -0.000714523543138057, -0.007897816598415375, -0.044615451246500015, -0.3303222358226776, -2.621962785720825, -3.1233444213867188, -2.91633939743042, -1.661176085472107, -2.3931937217712402, -1.9698160886764526, -0.7103579640388489, -1.7148314714431763, -2.9629428386688232, -0.15455223619937897, -0.00967444945126772, -0.07203611731529236, -1.3022968769073486, -0.4135836064815521, -1.085634708404541, -0.061887722462415695, -0.006071931216865778, -0.005006040912121534, -0.362754225730896, -0.019485367462038994, -6.8662193370983e-05, -0.3960973620414734, -0.09305264800786972, -1.417008638381958, -0.8678684830665588, -0.0017803546506911516, -0.04943840578198433, -0.624769389629364, -0.0008241117466241121, -0.002231014659628272, -0.974085807800293, -0.004526013042777777, -0.4607143998146057, -4.213571071624756, -0.03271445631980896, -1.0615935325622559, -0.10501997172832489, -0.05920488387346268, -0.861926794052124, -0.04618319123983383, -0.7982862591743469, -1.477137804031372, -0.6721625328063965, -0.004393330309540033, -0.00012981049076188356, -1.7240201234817505, -0.0034629872534424067, -0.41144928336143494, -0.0004441943601705134, -0.0016799159348011017, -0.005493781063705683, -0.7493745684623718, -0.0026983539573848248, -0.03890632838010788, -3.2066785934148356e-05, -5.602820692729438e-06, -0.0001436368766007945, -0.00021753329201601446, -0.00012587709352374077, -0.009905941784381866, -0.00013159839727450162, -0.000604565953835845, -0.002512038918212056, -0.09718523174524307, -0.019806815311312675, -0.8139936327934265, -2.912415027618408, -0.0059194257482886314, -0.014980203472077847, -0.00020037073409184813, -0.0007247682078741491, -0.0006665153778158128, -0.5844568014144897, -0.5950530171394348, -0.0227984506636858, -0.34658747911453247, -2.6225699912174605e-05, -6.318072337307967e-06, -0.00010144196130568162, -0.06526786834001541, -0.0002307625545654446, -0.01650173030793667, -4.327203714638017e-05, -4.732496745418757e-05, -0.3116402328014374, -0.20168998837471008, -0.0015723258256912231, -0.03570182994008064, -0.002967718057334423, -1.354968547821045, -0.07551495730876923, -1.2099690437316895, -0.8943383097648621, -0.2627599239349365, -0.05502650886774063, -0.016187546774744987, -0.9756335020065308, -0.01965615712106228, -0.05547963082790375, -0.8193482756614685, -0.026290344074368477, -0.03013474866747856, -0.06037427857518196, -0.14884421229362488, -1.4642560482025146, -0.012149025686085224, -0.40822893381118774, -0.0012523435289040208, -0.543314516544342, -0.0038073209580034018, -0.0008316157618537545, -2.0503786799963564e-05, -0.0009062950266525149, -0.01977023482322693, -0.09110912680625916, -0.00979982316493988, -1.4985976219177246, -2.2525203227996826, -0.12428614497184753, -0.1654430627822876, -0.03780291602015495, -0.47554653882980347, -0.2771333158016205, -2.194641590118408, -0.0024559118319302797, -0.004671611823141575, -1.6970008611679077, -0.0014072287594899535, -0.5127123594284058, -0.056354839354753494, -1.9540159702301025, -0.0007308434578590095, -0.0008717550663277507, -0.0012346034636721015, -0.04591896012425423, -0.012354748323559761, -4.063397407531738, -0.00880974717438221, -0.7306647896766663, -0.015825625509023666, -0.019403763115406036, -0.736480176448822, -0.1284487545490265, -0.01331932470202446, -0.07995834201574326, -0.05211404711008072, -0.10556428134441376, -0.032925333827733994, -0.06814099103212357, -0.1422911435365677, -0.0010269373888149858, -0.005607351660728455, -0.0046249800361692905, -0.0015338810626417398, -0.0234038345515728, -0.012574437074363232, -0.007060221862047911, -0.5078202486038208, -0.026676123961806297, -0.015715790912508965, -0.008301632478833199, -0.015133447013795376, -0.015346773900091648, -0.02383461222052574, -0.0033926567994058132, -0.0011528043542057276, -0.005635919980704784, -0.023524470627307892, -8.583032467868179e-06, -1.9073304429184645e-05, -1.8423128128051758, -0.009209651499986649, -0.04459013789892197, -9.452849917579442e-05, -0.0005466635921038687, -0.010446274653077126, -0.011190272867679596, -0.000432278640801087, -0.0003430254873819649, -0.0013978243805468082, -0.002732949797064066, -0.00044610086479224265, -0.0011182728921994567, -0.903197169303894, -0.7045323848724365, -0.009120705537497997, -0.0032313058618456125, -5.6980417866725475e-05, -0.0014896021457388997, -0.007061642594635487, -0.003534619463607669, -0.12219104170799255, -0.01208566315472126, -0.16862495243549347, -0.07679549604654312, -0.008976816199719906], "finish_reason": "stop"}], "metrics": {"energy": 252.78154992008206, "energy_per_token": 1.1335495512111302, "time": 9.683085, "time_per_token": 0.043421905829596416}}
{"outputs": [{"text": "df = pd.DataFrame()\n    try:\n        if not url:\n            raise ValueError(\"Please provide a valid URL to fetch data.\")\n        request = urllib.request.Request(url)\n        response = urllib.request.urlopen(request)\n        html = response.read().decode(\"utf-8\")\n        html = pq(html)\n        df['text'] = html('a').text()\n        df['href'] = html('a').attr('href')\n        df['fetch_time'] = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    except (urllib.error.URLError, ValueError) as e:\n        raise ValueError(f\"{str(e)}\")\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "try", ":", "\n", "        ", "if", " not", " url", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Please", " provide", " a", " valid", " URL", " to", " fetch", " data", ".", "\"", ")", "\n", "        ", "request", " =", " ur", "ll", "ib", ".", "request", ".", "Request", "(", "url", ")", "\n", "        ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "request", ")", "\n", "        ", "html", " =", " response", ".", "read", "()", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n", "        ", "html", " =", " p", "q", "(", "html", ")", "\n", "        ", "df", "['", "text", "']", " =", " html", "('", "a", "')", ".", "text", "()", "\n", "        ", "df", "['", "href", "']", " =", " html", "('", "a", "')", ".", "attr", "('", "href", "')", "\n", "        ", "df", "['", "fetch", "_", "time", "']", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "except", " (", "ur", "ll", "ib", ".", "error", ".", "UR", "LE", "rror", ",", " Value", "Error", ")", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "str", "(", "e", ")}", "\"", ")", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.8027243614196777, -0.1120196208357811, -0.35261666774749756, -0.002971521345898509, -0.015039507299661636, -0.5888866186141968, -0.0399002805352211, -0.22565969824790955, -1.1592613458633423, -0.0012554391287267208, -0.00674506975337863, -0.019784610718488693, -1.4840635061264038, -1.182270884513855, -0.019797466695308685, -0.12519048154354095, -0.02960333228111267, -0.002394429873675108, -0.03899633139371872, -0.014928295277059078, -5.364274329622276e-05, -0.602358341217041, -0.07213316857814789, -2.5369656085968018, -0.4011926054954529, -0.09423468261957169, -0.06994567811489105, -0.0592506118118763, -2.363509178161621, -0.2168811410665512, -1.607790470123291, -0.8587796688079834, -0.015748297795653343, -0.00045944625162519515, -0.002540695946663618, -0.46980246901512146, -3.9467098712921143, -0.03731265664100647, -0.04244832694530487, -9.393251093570143e-05, -5.960462772236497e-07, -0.00039891392225399613, -0.0003152588615193963, -0.0029922020621597767, -0.10041232407093048, -0.0007863528444431722, -0.0057990169152617455, -0.09545248746871948, -0.019404463469982147, -0.023988250643014908, -0.8541122078895569, -0.0037193186581134796, -0.011640130542218685, -7.259582343976945e-05, -1.07287787614041e-05, -5.471556869451888e-05, -6.723177648382261e-05, -2.3364747903542593e-05, -0.0005921755800954998, -0.00033396866638213396, -0.00020752183627337217, -0.026804259046912193, -0.03956540673971176, -0.02707347273826599, -0.07654651999473572, -0.5552107691764832, -0.2638779580593109, -0.13178128004074097, -0.00020847532141488045, -0.0006053998949937522, -0.0005388000281527638, -1.2513447999954224, -0.0007401349139399827, -1.847337245941162, -0.06383245438337326, -0.02018973045051098, -0.08263982087373734, -0.00024816294899210334, -0.00025245340657420456, -0.003108552424237132, -0.016752632334828377, -0.2036624699831009, -2.323692560195923, -0.7392013072967529, -0.22880983352661133, -7.891343557275832e-05, -0.0008740180637687445, -0.0053656138479709625, -0.013856759294867516, -0.02785981446504593, -0.1650770604610443, -2.6876091957092285, -0.6968546509742737, -0.3282986283302307, -0.001471390132792294, -0.01830751821398735, -0.3333439528942108, -0.5215485692024231, -0.09889597445726395, -0.019901594147086143, -0.03040318377315998, -0.5390902161598206, -0.13300788402557373, -0.05838153511285782, -0.002092197770252824, -0.011858680285513401, -0.005315931048244238, -0.0070836590602993965, -0.0004439560289029032, -0.008432142436504364, -0.017991207540035248, -0.013292034156620502, -0.0012869894271716475, -0.0010184821439906955, -0.15693259239196777, -0.007828034460544586, -0.30173158645629883, -0.0006905793561600149, -0.000846266164444387, -0.008478124625980854, -0.021183431148529053, -0.1248554214835167, -0.027097607031464577, -0.014796280302107334, -0.002036403864622116, -0.0019319456769153476, -0.00046588058467023075, -0.007088156882673502, -0.14681017398834229, -0.0003135904553346336, -0.08182764053344727, -0.0009756095823831856, -0.03697541728615761, -0.024552319198846817, -7.176141662057489e-05, -0.9160012006759644, -0.008750781416893005, -0.0022696706000715494, -0.0018423503497615457, -0.0016143397660925984, -6.961580220377073e-05, -0.00016723664884921163, -0.007464139256626368, -0.0018737631617113948, -0.0008306628442369401, -0.00015031162183731794, -0.001430798671208322, -0.00039307496626861393, -0.008276687003672123, -0.006517108529806137, -0.4767465889453888, -0.002708102809265256, -1.0124289989471436, -1.7992072105407715, -0.00021562635083682835, -3.2186455882765586e-06, -0.0004487222759053111, -0.08347436785697937, -0.0006312523037195206, -0.04731890186667442, -3.71926071238704e-05, -2.253030106658116e-05, -0.025545647367835045, -0.2333623319864273, -1.7523612768854946e-05, -0.2872474789619446, -0.0014555584639310837, -0.2641094923019409, -0.00041786045767366886, -0.0041219755075871944, -0.002330089919269085, -1.4130043983459473, -0.7646468281745911, -0.00013648532330989838, -0.038880299776792526, -0.6446776390075684, -0.052784837782382965, -2.9018189907073975, -2.5129201412200928, -0.00047755756531842053, -0.02579905278980732, -0.049147456884384155, -0.5548888444900513, -0.0029647466726601124, -0.06538143754005432, -0.13291603326797485, -0.15628942847251892, -0.00587332621216774, -0.852110743522644, -0.03933437913656235, -0.5166131854057312], "finish_reason": "stop"}], "metrics": {"energy": 215.12293187713612, "energy_per_token": 1.126298072655163, "time": 8.205651, "time_per_token": 0.04296152356020942}}
{"outputs": [{"text": "df = pd.DataFrame(columns=('text', 'href', 'fetch_time'))\n    try:\n        if url:\n            response = urllib.request.urlopen(url)\n            html = response.read()\n            doc = pq(html)\n            for anchor in doc('a'):\n                fetch_time = datetime.now()\n                href = anchor('@href')\n                if href is not None:\n                    text = anchor.text()\n                    if text is not None:\n                        df.loc[len(df)] = {'text': text, 'href': href, 'fetch_time': fetch_time.strftime('%Y-%m-%d %H:%M:%S')}\n    except URLError as err:\n        if hasattr(err, 'code'):\n            print(f'URLError: {err.code}')\n        elif hasattr(err, 'reason'):\n            print(f'Error: {err.reason}')\n        else:\n            print(f'Error: {err}')\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "columns", "=", "('", "text", "'", ",", " '", "href", "'", ",", " '", "fetch", "_", "time", "'))", "\n", "    ", "try", ":", "\n", "        ", "if", " url", ":", "\n", "            ", "response", " =", " ur", "ll", "ib", ".", "request", ".", "url", "open", "(", "url", ")", "\n", "            ", "html", " =", " response", ".", "read", "()", "\n", "            ", "doc", " =", " p", "q", "(", "html", ")", "\n", "            ", "for", " anchor", " in", " doc", "('", "a", "')", ":", "\n", "                ", "fetch", "_", "time", " =", " datetime", ".", "now", "()", "\n", "                ", "href", " =", " anchor", "('", "@", "href", "')", "\n", "                ", "if", " href", " is", " not", " None", ":", "\n", "                ", "    ", "text", " =", " anchor", ".", "text", "()", "\n", "                ", "    ", "if", " text", " is", " not", " None", ":", "\n", "                ", "        ", "df", ".", "loc", "[", "len", "(", "df", ")]", " =", " {'", "text", "':", " text", ",", " '", "href", "':", " href", ",", " '", "fetch", "_", "time", "':", " fetch", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')}", "\n", "    ", "except", " UR", "LE", "rror", " as", " err", ":", "\n", "        ", "if", " has", "attr", "(", "err", ",", " '", "code", "')", ":", "\n", "            ", "print", "(", "f", "'", "UR", "LE", "rror", ":", " {", "err", ".", "code", "}", "')", "\n", "        ", "elif", " has", "attr", "(", "err", ",", " '", "reason", "')", ":", "\n", "            ", "print", "(", "f", "'", "Error", ":", " {", "err", ".", "reason", "}", "')", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "f", "'", "Error", ":", " {", "err", "}", "')", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.8027243614196777, -0.1120196208357811, -0.35261666774749756, -0.002971521345898509, -0.015039507299661636, -1.0555232763290405, -0.05683315172791481, -2.986833095550537, -0.09682528674602509, -0.0884760394692421, -0.0008742563077248633, -0.00011097769311163574, -0.08032737672328949, -0.0037269198801368475, -0.02459966018795967, -0.00010001159535022452, -0.008288509212434292, -0.0074143242090940475, -0.0017492959741503, -0.0010830257087945938, -0.029268695041537285, -0.014092809520661831, -0.3071207106113434, -1.2275220155715942, -0.0008681819308549166, -0.00533466599881649, -0.013199921697378159, -1.2726341485977173, -0.7084306478500366, -1.010170578956604, -0.045198772102594376, -0.00979793444275856, -1.5365384817123413, -0.00846086721867323, -0.08712122589349747, -0.00011383838864276186, -8.344646857949556e-07, -0.0006516240537166595, -0.00018189683032687753, -0.0001294529065489769, -0.024705732241272926, -0.0002847504511009902, -0.001029080944135785, -0.0032624374143779278, -0.09341113269329071, -0.03878466412425041, -0.10435530543327332, -0.9627931714057922, -0.23976922035217285, -0.1734459400177002, -0.00018368464952800423, -0.0011370867723599076, -0.0007426364463753998, -0.5964534282684326, -0.10808026790618896, -0.8353130221366882, -0.00426787044852972, -0.002250402234494686, -1.9907753085135482e-05, -0.000902007392141968, -0.007269124500453472, -0.08785171061754227, -0.015978505834937096, -0.14046987891197205, -0.8568170666694641, -1.090915322303772, -0.039075665175914764, -0.0012357940431684256, -0.2974720001220703, -0.14301228523254395, -0.1514531522989273, -0.31979119777679443, -0.030363749712705612, -0.0033085390459746122, -4.091541767120361, -0.009635606780648232, -0.0266819279640913, -0.010468216612935066, -0.031914953142404556, -0.0003829461056739092, -0.09958381205797195, -0.0005110388156026602, -2.5753865242004395, -0.010766630992293358, -2.5727698802948, -0.10231935977935791, -0.18302617967128754, -2.605262517929077, -0.1817081719636917, -0.0021196771413087845, -0.0007820646860636771, -0.070621058344841, -0.002336750039830804, -2.4665374755859375, -0.10480432957410812, -2.488532304763794, -0.44538331031799316, -0.0050152926705777645, -0.08157946914434433, -0.02454010583460331, -0.0013192531187087297, -0.0023808723781257868, -0.5497912168502808, -0.006631510332226753, -0.058998238295316696, -0.20700187981128693, -0.010224937461316586, -0.20215952396392822, -0.1684187799692154, -0.0067043364979326725, -0.03956357389688492, -2.337354898452759, -0.20615337789058685, -0.22075021266937256, -0.06417082250118256, -0.0030410494655370712, -0.020822029560804367, -0.006024297792464495, -0.0018385426374152303, -0.004062970634549856, -0.1723317950963974, -1.0884935855865479, -0.03291299194097519, -0.08457762002944946, -0.1136532723903656, -0.0001137191939051263, -0.0007309625507332385, -0.12208575010299683, -0.007911772467195988, -2.4330356121063232, -0.06909686326980591, -0.016736922785639763, -0.0658150464296341, -0.0121340686455369, -0.1033962219953537, -0.0032456836197525263, -0.0008400725200772285, -0.008389586582779884, -0.005276918411254883, -0.11613510549068451, -0.0008182753226719797, -0.0007177399238571525, -0.000226472009671852, -0.002348286332562566, -0.17579859495162964, -0.00012289722508285195, -2.3603161025675945e-05, -1.152925968170166, -0.08123783022165298, -0.00010489867418073118, -0.2949260175228119, -0.0032940434757620096, -0.00689259497448802, -0.004441871773451567, -0.0035036150366067886, -0.00019536493346095085, -0.0005153281381353736, -0.012575378641486168, -0.001898868940770626, -0.0011562574654817581, -0.0003522014303598553, -0.002419879427179694, -0.0005621521850116551, -0.0210348479449749, -0.0030151403043419123, -0.6557691097259521, -0.005176118575036526, -2.846308708190918, -0.00011324241495458409, -5.483612312673358e-06, -0.43198162317276, -2.387301445007324, -0.001964426366612315, -0.01304038055241108, -0.0031936378218233585, -0.8362422585487366, -0.036625657230615616, -4.875540980719961e-05, -0.00022480344341602176, -0.0016731324139982462, -0.0001426833332516253, -0.03294667601585388, -0.45522940158843994, -0.000259723310591653, -0.019127679988741875, -0.020849116146564484, -0.00158946483861655, -0.27505064010620117, -0.9748483896255493, -0.686337411403656, -0.5546090602874756, -2.2017290592193604, -0.005937912501394749, -0.009813634678721428, -0.42988672852516174, -0.09769100695848465, -0.014037328772246838, -0.010972991585731506, -0.043934933841228485, -0.05861135199666023, -0.032720111310482025, -0.005883755162358284, -0.08407721668481827, -0.2102074772119522, -0.009556027129292488, -6.4490144723095e-05, -6.186770770000294e-05, -4.446407547220588e-05, -0.00018690270371735096, -0.0017923733685165644, -0.020316829904913902, -0.0010677833342924714, -0.00026782741770148277, -0.0016715852543711662, -0.0005515484372153878, -0.0033534502144902945, -0.047686655074357986, -0.0074113658629357815, -0.01284821517765522, -2.9772040843963623, -0.39124518632888794, -0.06216782331466675, -0.015725649893283844, -0.0020180828869342804, -0.003761004889383912, -0.004621420055627823, -0.0016434985445812345, -0.004487562924623489, -1.6140146255493164, -0.21942676603794098, -8.761498611420393e-05, -0.008492308668792248, -0.000719645875506103, -0.043515242636203766, -0.46251699328422546, -0.21866768598556519, -0.051566675305366516, -1.479124665260315, -0.16902489960193634, -0.39203202724456787, -0.04959099739789963, -0.5359293818473816, -0.006724229548126459, -0.004309177864342928, -0.2005205601453781, -1.2747670412063599, -0.007345099467784166, -0.8515940308570862, -0.04665149003267288, -0.5510441660881042], "finish_reason": "stop"}], "metrics": {"energy": 255.35842579841616, "energy_per_token": 1.0214337031936647, "time": 10.939032, "time_per_token": 0.043756128}}
