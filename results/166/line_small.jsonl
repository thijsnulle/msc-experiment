{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.3308705687522888, -0.03260011598467827, -0.00021979777375236154, -0.015046552754938602, -2.9682672902708873e-05, -1.0847986231965479e-05, -0.00010144196130568162, -0.028175106272101402, -0.39688050746917725, -0.00905833300203085], "finish_reason": "stop"}, {"text": " ValueError(\"The start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "The", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -3.1004135608673096, -0.2497919350862503, -0.6687692999839783, -0.0008353081648238003, -0.06596706062555313, -0.005670533049851656, -0.002709767082706094, -0.0009968079393729568, -0.5112001299858093, -0.01599317044019699, -0.19018326699733734, -0.01228739507496357, -1.6822067499160767, -0.00022957073815632612, -0.002277877414599061], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -0.37591642141342163, -0.0310836061835289, -0.19093561172485352, -0.16822434961795807, -0.1769832819700241, -0.38808807730674744, -0.0038643223233520985, -0.16933703422546387, -0.0971524566411972], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='B')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", "\n"], "logprobs": [-2.784440279006958, -3.957670196541585e-05, -0.02002055011689663, -2.109982233378105e-05, -3.40932747349143e-05, -0.0004614718782249838, -0.011714360676705837, -0.009839131496846676, -6.890059739816934e-05, -0.010839864611625671, -0.013293563388288021, -4.8636207793606445e-05, -6.9141146923357155e-06, -1.2051483392715454, -0.04683101177215576, -0.0006080209277570248, -0.11492843180894852, -0.0312524251639843, -0.0034976755268871784, -0.14552898705005646], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4471496045589447, -0.003377568442374468], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03866998478770256, -4.6967357775429264e-05, -4.768360213347478e-06, -0.7168851494789124], "finish_reason": "stop"}], "metrics": {"energy": 137.6221706752777, "energy_per_token": 1.4958931595138878, "time": 6.44989, "time_per_token": 0.0701075}}
{"outputs": [{"text": " isinstance(start_date, datetime):", "tokens": [" isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-2.3371050357818604, -0.00014840454969089478, -0.005869296845048666, -4.088794958079234e-05, -1.7046782886609435e-05, -0.0003780603874474764, -0.10713857412338257, -0.6679742932319641, -0.019298646599054337], "finish_reason": "stop"}, {"text": " ValueError('Invalid start_date or end_date. Both should be datetime objects.')", "tokens": [" Value", "Error", "('", "Invalid", " start", "_", "date", " or", " end", "_", "date", ".", " Both", " should", " be", " datetime", " objects", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -2.9650511741638184, -1.6470308303833008, -1.027817964553833, -0.000801837770268321, -0.04641367122530937, -0.010793165303766727, -0.0009400001727044582, -0.0004680253332480788, -0.7268051505088806, -1.6716408729553223, -1.3423402309417725, -0.0033655688166618347, -0.22019435465335846, -0.05784444510936737, -0.14416565001010895, -0.013008728623390198, -0.0017516759689897299], "finish_reason": "stop"}, {"text": " end_date < start_date:", "tokens": [" end", "_", "date", " <", " start", "_", "date", ":", "\n"], "logprobs": [-2.935950994491577, -2.0861407392658293e-05, -3.933898824470816e-06, -0.06325778365135193, -0.0006472161621786654, -1.537788011773955e-05, -1.1920922133867862e-06, -0.0021977098658680916, -0.005935542285442352], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002557904226705432, -2.932505594799295e-05, -0.00549994595348835, -0.02762014977633953, -0.15658098459243774, -0.0005052005290053785, -0.00013481661153491586, -0.2885489761829376, -0.09601642936468124, -0.15271317958831787, -0.2613200545310974, -0.0005279577453620732, -0.00015090756642166525, -0.02022816613316536, -0.0008351890719495714, -7.795983401592821e-05, -0.0006245807744562626], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country, years=range(start_date.year, end_date.year + 1))", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ",", " years", "=", "range", "(", "start", "_", "date", ".", "year", ",", " end", "_", "date", ".", "year", " +", " ", "1", "))", "\n"], "logprobs": [-0.03785112500190735, -0.003059827256947756, -0.36697807908058167, -0.025560520589351654, -0.22125980257987976, -0.15875770151615143, -0.21599669754505157, -0.36029648780822754, -0.005144335329532623, -1.9875320196151733, -1.1197344064712524, -0.33092615008354187, -0.7326849699020386, -0.0015125750796869397, -0.10960061103105545, -0.0001382732152706012, -3.528532761265524e-05, -0.0001494772732257843, -0.000459565402707085, -0.0022314905654639006, -0.023844972252845764, -4.6491513785440475e-06, -2.9802276912960224e-06, -2.6464111215318553e-05, -0.00019202772818971425, -0.34718602895736694, -0.002268837997689843, -0.006708717904984951, -0.08498185873031616, -0.03655417263507843], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5397301316261292, -0.017656058073043823], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4581213891506195, -0.0032021934166550636], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03699345514178276, -6.0437283536884934e-05, -4.410734163684538e-06, -0.7370808720588684], "finish_reason": "stop"}], "metrics": {"energy": 140.14265364456176, "energy_per_token": 1.5069102542425996, "time": 6.3207765, "time_per_token": 0.06796533870967741}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"The start and end dates must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "The", " start", " and", " end", " dates", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -3.1004135608673096, -0.2497919350862503, -1.0971407890319824, -0.007036547642201185, -0.02894911728799343, -0.1724916249513626, -0.0051535856910049915, -0.24844084680080414, -0.008953542448580265, -0.20710179209709167, -0.009862976148724556, -0.0001250427303602919, -0.0027048927731812], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country, include_today=True)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ",", " include", "_", "today", "=", "True", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -0.37591642141342163, -0.0310836061835289, -0.19093561172485352, -0.16822434961795807, -0.1769832819700241, -0.38808807730674744, -0.0038643223233520985, -2.0407912731170654, -2.1142520904541016, -4.434487345861271e-05, -4.23111629486084, -0.002272644080221653, -0.3614458739757538, -0.12366566061973572, -0.053197719156742096], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5931675434112549, -0.02313665859401226], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5235022306442261, -0.0033534502144902945], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03924371674656868, -5.6265202147187665e-05, -4.0531076592742465e-06], "finish_reason": "stop"}], "metrics": {"energy": 153.9901335449218, "energy_per_token": 1.9998718642197637, "time": 5.482425, "time_per_token": 0.07120032467532468}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -1.3573713302612305, -0.0001436368766007945, -0.002272644080221653], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.get(country=country)", "tokens": [" holidays", ".", "get", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -2.736924171447754, -1.589868187904358, -0.05761962756514549, -0.7782864570617676, -0.00574745936319232, -0.2881360948085785, -0.10016204416751862], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.1398727893829346, -0.1304052323102951, -9.274052717955783e-05, -2.777537883957848e-05, -0.08975067734718323, -0.03566605597734451], "finish_reason": "stop"}, {"text": " [dt for dt in dates if dt.weekday() not in [5, 6] and dt not in country_holidays]", "tokens": [" [", "dt", " for", " dt", " in", " dates", " if", " dt", ".", "week", "day", "()", " not", " in", " [", "5", ",", " ", "6", "]", " and", " dt", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.2710248231887817, -2.8999335765838623, -0.04193941876292229, -0.0023369877599179745, -0.00047851080307736993, -0.0010625437134876847, -0.07445133477449417, -0.12175344675779343, -0.02033189870417118, -0.19469711184501648, -3.564294092939235e-05, -0.007222968153655529, -0.7638894319534302, -2.753696753643453e-05, -0.24267908930778503, -0.06938062608242035, -8.177422569133341e-05, -0.0859469398856163, -0.00010442188795423135, -0.007132543716579676, -0.07286769896745682, -0.011962107382714748, -0.08314872533082962, -8.487341256113723e-05, -0.007687862496823072, -3.099436753473128e-06, -3.576278118089249e-07, -1.7762025890988298e-05, -0.3239513635635376, -0.008229749277234077], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03551938012242317, -5.411955135059543e-05, -3.3378546504536644e-06, -0.710365355014801], "finish_reason": "stop"}], "metrics": {"energy": 169.03265496063236, "energy_per_token": 1.6253139900060805, "time": 6.9506464, "time_per_token": 0.06683313846153846}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError('Both start_date and end_date must be datetime objects.')", "tokens": [" Value", "Error", "('", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -0.7146925926208496, -0.1140408143401146, -0.05931656062602997, -0.0005489272880367935, -0.0017523899441584945, -0.0006101653561927378, -0.0008045773720368743, -0.00047219570842571557, -0.2439553290605545, -0.0003398079425096512, -0.11028902977705002, -0.012554659508168697, -0.5271999835968018, -0.0062490543350577354, -0.0017615529941394925], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -1.2678117752075195, -0.29942047595977783, -0.05525664985179901, -0.0027015639934688807, -0.0012641304638236761, -0.00018857131362892687, -0.020809654146432877, -0.0008036244544200599, -0.00011216964776394889, -0.0006642519147135317], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -0.3315005302429199, -0.04120960831642151, -0.1504596620798111, -0.1587529331445694, -0.2514418065547943, -0.3289016783237457, -0.004901417531073093, -0.14825481176376343, -0.11278347671031952], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5281702280044556, -0.01803651824593544], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4685400128364563, -0.003399547655135393], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.036851223558187485, -4.9828242481453344e-05, -3.6954811548639555e-06, -0.7602932453155518], "finish_reason": "stop"}], "metrics": {"energy": 108.21977755451204, "energy_per_token": 1.4239444415067373, "time": 5.2643905, "time_per_token": 0.06926829605263159}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError('Both start and end dates must be datetime objects.')", "tokens": [" Value", "Error", "('", "Both", " start", " and", " end", " dates", " must", " be", " datetime", " objects", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -0.7146925926208496, -0.1140408143401146, -2.9439773559570312, -0.0013453251449391246, -0.07794473320245743, -0.20683380961418152, -0.0002862997353076935, -0.16332471370697021, -0.015681525692343712, -0.5119243860244751, -0.008098148740828037, -0.0015944637125357985], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must not be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " not", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -2.3128135204315186, -0.009426135569810867, -0.0602482408285141, -0.003990663681179285, -0.0013799677835777402, -0.00014506718434859067, -0.0202605240046978, -0.0011267272057011724, -9.83428253675811e-05, -0.0005852655158378184], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday('US')", "tokens": [" holidays", ".", "Country", "H", "oliday", "('", "US", "')", "\n"], "logprobs": [-0.046991508454084396, -0.0030805058777332306, -0.3304508328437805, -0.045611608773469925, -0.19454029202461243, -1.7495806217193604, -0.09146209806203842, -0.0838133841753006, -0.1677522212266922], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.570806086063385, -0.020337270572781563], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays.keys()]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", ".", "keys", "()", "]", "\n"], "logprobs": [-1.3225146532058716, -0.5542932748794556, -0.009727575816214085, -0.0023953812196850777, -0.0002579356369096786, -0.000653411028906703, -0.08563599735498428, -0.07961812615394592, -0.02747228927910328, -0.1789124608039856, -2.8609820219571702e-05, -0.004621301311999559, -1.0892237424850464, -0.0006152882124297321, -0.0036225190851837397, -0.0790189653635025, -0.02099095657467842, -0.058452825993299484, -5.769562994828448e-05, -0.01059502363204956, -3.2186455882765586e-06, -3.576278118089249e-07, -2.1457441107486375e-05, -1.398691177368164, -0.6365646123886108, -0.0019016055157408118, -0.02256677858531475, -0.01120489090681076], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>def task_func(**kwargs):", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "**", "kwargs", "):", "\n"], "logprobs": [-0.03990486264228821, -5.1973900554003194e-05, -3.933898824470816e-06, -1.632218837738037, -1.6689286894688848e-06, -5.960462772236497e-07, -5.578839045483619e-05, -0.00017772526189219207, -0.08063150197267532, -2.791980266571045, -1.2145756483078003, -0.05585533007979393, -0.1300639659166336, -0.2563849985599518, -4.428532600402832, -0.09405934810638428, -0.04270559549331665, -0.01151298452168703], "finish_reason": "stop"}], "metrics": {"energy": 184.59116234779358, "energy_per_token": 1.6934969022733357, "time": 7.372218, "time_per_token": 0.06763502752293578}}
{"outputs": [{"text": " start_date.tzinfo is None:", "tokens": [" start", "_", "date", ".", "tz", "info", " is", " None", ":", "\n"], "logprobs": [-2.2227232456207275, -0.000626367807853967, -5.245071224635467e-05, -0.3865761160850525, -0.4521283805370331, -0.04684784635901451, -0.03718987852334976, -0.032130733132362366, -0.19757971167564392, -0.033065129071474075], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date should be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -1.270514726638794, -0.020094161853194237, -0.0009258274803869426, -0.04646465182304382, -0.003958605229854584, -0.002368028275668621, -0.0007322729215957224, -2.136974811553955, -0.023064902052283287, -0.18457618355751038, -0.05083354935050011, -0.49307215213775635, -0.00021514961554203182, -0.002009873976930976], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06950028985738754, -0.00011777184408856556, -7.510157047363464e-06, -0.09382516145706177, -0.000576449150685221, -4.768370445162873e-07, -8.344646857949556e-07, -0.0022473097778856754, -0.0024201171472668648], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must not be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " not", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00025185750564560294, -2.8013790142722428e-05, -0.00446453969925642, -0.02722151018679142, -0.15277354419231415, -0.0006014683749526739, -0.0001515035255579278, -0.27947285771369934, -2.3653345108032227, -0.00762551836669445, -0.04895574972033501, -0.0041770595125854015, -0.0008363801171071827, -0.00017105070583056659, -0.02059643715620041, -0.0011529234470799565, -9.262132516596466e-05, -0.000518664310220629], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", ")", "\n"], "logprobs": [-0.045223724097013474, -0.003880472155287862, -0.34119799733161926, -0.04866999387741089, -0.17728805541992188, -0.16689899563789368, -0.24682234227657318, -1.6005839109420776, -0.09115754812955856], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5878490805625916, -0.020576585084199905], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.49509957432746887, -0.003121030516922474], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>import os", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "import", " os", "\n"], "logprobs": [-0.03615482524037361, -6.0794889577664435e-05, -5.006777428206988e-06, -1.5493272542953491, -1.7881377516459906e-06, -5.960462772236497e-07, -6.854299135738984e-05, -0.00010013079008786008, -0.06996691226959229, -1.4219945669174194, -2.7176313400268555, -0.05634233355522156], "finish_reason": "stop"}], "metrics": {"energy": 142.92848630809783, "energy_per_token": 1.7866060788512228, "time": 5.4734626, "time_per_token": 0.06841828250000001}}
{"outputs": [{"text": " not isinstance(start_date, datetime.datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ".", "datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -2.046546459197998, -0.9318568706512451, -0.15648363530635834, -0.00967078935354948], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -1.3573713302612305, -0.0001436368766007945, -0.002272644080221653], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.get(country=country, include_nones=True)", "tokens": [" holidays", ".", "get", "(", "country", "=", "country", ",", " include", "_", "non", "es", "=", "True", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -2.736924171447754, -1.589868187904358, -0.05761962756514549, -0.7782864570617676, -0.00574745936319232, -1.4181753396987915, -2.700465679168701, -0.00010752100206445903, -3.5837864875793457, -0.017336495220661163, -0.09653741121292114, -0.20029540359973907, -0.10985773056745529, -0.0798085555434227], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.1398727893829346, -0.1304052323102951, -9.274052717955783e-05, -2.777537883957848e-05, -0.08975067734718323, -0.03566605597734451], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4711667597293854, -0.003564791288226843], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>import functools", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "import", " fun", "ct", "ools", "\n"], "logprobs": [-0.04108353331685066, -6.842378934379667e-05, -4.529942543740617e-06, -1.4565129280090332, -1.5497195136049413e-06, -5.960462772236497e-07, -5.173549288883805e-05, -0.00014911970356479287, -0.07724283635616302, -1.3115291595458984, -4.442317008972168, -0.009944537654519081, -0.00026043839170597494, -0.044398240745067596], "finish_reason": "stop"}], "metrics": {"energy": 183.19293450164793, "energy_per_token": 1.928346678964715, "time": 6.728681, "time_per_token": 0.07082822105263158}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"Both 'start_date' and 'end_date' must be a datetime object.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " '", "start", "_", "date", "'", " and", " '", "end", "_", "date", "'", " must", " be", " a", " datetime", " object", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -3.0068612098693848, -0.001661945367231965, -0.004361165687441826, -0.0008348317351192236, -0.0007049936102703214, -0.0019348012283444405, -0.0009369035833515227, -0.0004741021548397839, -0.00030882356804795563, -0.0004462200158741325, -0.0005038899253122509, -0.2269337922334671, -0.000617432699073106, -2.9077394008636475, -0.040215350687503815, -0.026310665532946587, -0.24461127817630768, -0.010197797790169716, -0.00019059749320149422, -0.0025630502495914698], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -1.7164560556411743, -0.0017199022695422173, -0.04587990790605545, -0.002900799736380577, -0.0007750368095003068, -0.00013195598148740828, -0.023921560496091843, -0.001313419546931982, -8.487341256113723e-05, -0.0007350126979872584], "finish_reason": "stop"}, {"text": " holidays.CountryHolidays(prov='US')", "tokens": [" holidays", ".", "Country", "H", "olidays", "(", "prov", "='", "US", "')", "\n"], "logprobs": [-0.05004137381911278, -0.004395466763526201, -0.37609052658081055, -0.02927413582801819, -1.7387596368789673, -0.009882688522338867, -0.970008134841919, -0.6964816451072693, -1.604020357131958, -0.6747375130653381, -0.19616663455963135], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5409625172615051, -0.022809287533164024], "finish_reason": "stop"}, {"text": " [date for date in dates if date.isoweekday() not in [5, 6] and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "is", "ow", "e", "ek", "day", "()", " not", " in", " [", "5", ",", " ", "6", "]", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.306728482246399, -0.5994690656661987, -0.008788714185357094, -0.002283110748976469, -0.00034445550409145653, -0.0005787128466181457, -0.08842606842517853, -0.07293985038995743, -0.0421738475561142, -1.800747275352478, -0.06922979652881622, -0.0002563863235991448, -7.438383181579411e-05, -6.151010165922344e-05, -0.0014486543368548155, -0.2954249978065491, -3.707340147229843e-05, -0.21685224771499634, -2.218613624572754, -0.0001915509783430025, -0.05838974192738533, -0.0063341096974909306, -0.04326171800494194, -0.07937094569206238, -0.015296058729290962, -0.03609848394989967, -0.00032729512895457447, -0.006010908167809248, -2.0265558760002023e-06, -5.960462772236497e-07, -1.537788011773955e-05, -0.28903213143348694, -0.00713538471609354], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>import pandas as pd", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.03488617762923241, -6.282132380874828e-05, -3.814689989667386e-06, -1.5369956493377686, -1.1920922133867862e-06, -5.960462772236497e-07, -6.305972783593461e-05, -0.0001472126314183697, -0.07666411995887756, -1.2934545278549194, -1.5739483833312988, -0.01372377946972847, -0.001997025217860937, -0.005013038869947195], "finish_reason": "stop"}], "metrics": {"energy": 183.9965787944794, "energy_per_token": 1.5206328825990034, "time": 8.200028, "time_per_token": 0.06776882644628099}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date.tzinfo is None:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", ".", "tz", "info", " is", " None", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -1.7723274230957031, -0.4842331111431122, -0.004201870411634445, -0.06388255953788757, -0.07849285006523132, -0.16790743172168732, -0.01689200848340988], "finish_reason": "stop"}, {"text": " ValueError('Both start_date and end_date should be of type datetime.')", "tokens": [" Value", "Error", "('", "Both", " start", "_", "date", " and", " end", "_", "date", " should", " be", " of", " type", " datetime", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -0.7146925926208496, -0.1140408143401146, -0.05931656062602997, -0.0005489272880367935, -0.0017523899441584945, -0.0006101653561927378, -0.0008045773720368743, -0.00047219570842571557, -1.684751272201538, -0.0020233176182955503, -2.987480640411377, -0.6015022397041321, -0.04391200467944145, -0.6862114667892456, -0.048529867082834244, -0.0026184578891843557], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -0.33523082733154297, -0.0007890925044193864, -0.0001658063702052459, -0.02241198904812336, -0.0009136793087236583, -9.035655966727063e-05, -0.0006974886637181044], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -0.3315005302429199, -0.04120960831642151, -0.1504596620798111, -0.1587529331445694, -0.2514418065547943, -0.3289016783237457, -0.004901417531073093, -0.14825481176376343, -0.11278347671031952], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.2552515268325806, -0.12267463654279709, -9.178694017464295e-05, -3.659658250398934e-05, -0.09605822712182999, -0.03574013337492943], "finish_reason": "stop"}, {"text": " [day for day in dates if day.weekday() < 5 and day not in country_holidays]", "tokens": [" [", "day", " for", " day", " in", " dates", " if", " day", ".", "week", "day", "()", " <", " ", "5", " and", " day", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.2814271450042725, -2.624042510986328, -0.008534151129424572, -0.0010523025412112474, -0.000608854868914932, -0.0011519708205014467, -0.080911785364151, -0.04262414947152138, -0.026522550731897354, -0.2171168029308319, -9.452849917579442e-05, -0.004748022183775902, -1.015108346939087, -0.0006104036583565176, -0.0042567127384245396, -0.06158602237701416, -0.020514922216534615, -0.16358831524848938, -4.5298504119273275e-05, -0.010366051457822323, -1.9073468138230965e-06, -2.3841855067985307e-07, -1.883488948806189e-05, -0.37104928493499756, -0.01387074962258339], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03667185455560684, -5.018585216021165e-05, -4.529942543740617e-06, -0.7838879823684692], "finish_reason": "stop"}], "metrics": {"energy": 147.47040087890625, "energy_per_token": 1.3285621700802364, "time": 6.9522896, "time_per_token": 0.06263323963963964}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(f\"Both 'start_date' and 'end_date' must be datetime objects. \"", "tokens": [" Value", "Error", "(", "f", "\"", "Both", " '", "start", "_", "date", "'", " and", " '", "end", "_", "date", "'", " must", " be", " datetime", " objects", ".", " \"", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -2.725055456161499, -0.2342555969953537, -1.2192707061767578, -2.266383171081543, -0.006156646180897951, -0.005834927782416344, -0.0009372609201818705, -0.0047404286451637745, -0.014490136876702309, -0.0014552014181390405, -0.0006033745594322681, -0.0003232433518860489, -0.0006635371246375144, -0.0007552632014267147, -0.20593906939029694, -0.0012182918144389987, -0.21588537096977234, -0.031403426080942154, -0.46762481331825256, -3.2916319370269775, -0.1660080850124359], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06427400559186935, -9.941560711013153e-05, -7.867782187531702e-06, -0.09501690417528152, -0.0005411829333752394, -7.152555099310121e-07, -8.344646857949556e-07, -0.0028285279404371977, -0.0029082882683724165], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00024971229140646756, -2.6702524337451905e-05, -0.006647496949881315, -0.021604200825095177, -0.16085967421531677, -0.0006032554083503783, -0.00014482879487331957, -0.2728048264980316, -0.11217648535966873, -0.1325657069683075, -0.24753913283348083, -0.0006023023161105812, -0.00017641419253777713, -0.019983744248747826, -0.0008623456815257668, -8.225102646974847e-05, -0.0005972985527478158], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "\n"], "logprobs": [-0.047626983374357224, -0.003022627905011177, -0.3823707699775696, -0.03247837722301483, -0.1823541820049286, -0.13481047749519348, -2.702164888381958], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5739656090736389, -0.020481636747717857], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-1.2984366416931152, -2.591789960861206], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.042384225875139236, -5.98412734689191e-05, -3.933898824470816e-06, -0.6880935430526733], "finish_reason": "stop"}], "metrics": {"energy": 139.14645201492314, "energy_per_token": 1.855286026865642, "time": 5.058978, "time_per_token": 0.06745303999999999}}
{"outputs": [{"text": " type(start_date) is not datetime:", "tokens": [" type", "(", "start", "_", "date", ")", " is", " not", " datetime", ":", "\n"], "logprobs": [-2.761392831802368, -0.0003023882454726845, -0.010868401266634464, -0.00010263393050990999, -1.6569954823353328e-05, -0.00025006983196362853, -1.2544300556182861, -0.05639100819826126, -0.0201481394469738, -0.5122104287147522, -0.015224911272525787], "finish_reason": "stop"}, {"text": " ValueError(\"The start date and end date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "The", " start", " date", " and", " end", " date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -3.1004135608673096, -0.2497919350862503, -2.333962917327881, -0.049580447375774384, -0.005618138704448938, -0.016385521739721298, -0.20976364612579346, -0.01762162335216999, -0.23678743839263916, -0.009636197239160538, -0.2054869532585144, -0.007992074824869633, -0.00014447122521232814, -0.002873936202377081], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -1.7164560556411743, -0.0017199022695422173, -0.04587990790605545, -0.002900799736380577, -0.0007750368095003068, -0.00013195598148740828, -0.023921560496091843, -0.001313419546931982, -8.487341256113723e-05, -0.0007350126979872584], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.05004137381911278, -0.004395466763526201, -0.37609052658081055, -0.02927413582801819, -0.19671210646629333, -0.20785701274871826, -0.2813686728477478, -0.35434284806251526, -0.00471646199002862, -0.14619146287441254, -0.11359815299510956], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.553356945514679, -0.02046353369951248], "finish_reason": "stop"}, {"text": " [day for day in dates if day.weekday() <= 4 and day not in country_holidays]", "tokens": [" [", "day", " for", " day", " in", " dates", " if", " day", ".", "week", "day", "()", " <=", " ", "4", " and", " day", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.2957167625427246, -2.6903257369995117, -0.009595227427780628, -0.0012653210433200002, -0.0007490689749829471, -0.0009873997187241912, -0.09573016315698624, -0.036402683705091476, -0.024598265066742897, -0.19758069515228271, -6.913899414939806e-05, -0.0037178935017436743, -2.065892219543457, -0.00272260676138103, -0.11086452007293701, -0.027785150334239006, -0.03117801435291767, -0.1133425235748291, -4.5298504119273275e-05, -0.009830042719841003, -2.7418097943154862e-06, -4.768370445162873e-07, -2.038458114839159e-05, -0.3146616816520691, -0.01827053166925907], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>from pyspark.sql import SparkSession", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "from", " p", "ys", "park", ".", "sql", " import", " Spark", "Session", "\n"], "logprobs": [-0.03876092657446861, -8.391981828026474e-05, -4.6491513785440475e-06, -1.5323121547698975, -1.4305104514278355e-06, -5.960462772236497e-07, -6.425174069590867e-05, -0.00016127715934999287, -0.07137168198823929, -1.1848758459091187, -4.2951741218566895, -0.8719720244407654, -0.1547783464193344, -0.4613490402698517, -0.06849448382854462, -0.2768503725528717, -0.22321563959121704, -0.0029475123155862093, -0.12421465665102005], "finish_reason": "stop"}], "metrics": {"energy": 206.35716743659958, "energy_per_token": 1.8424747092553535, "time": 7.3663154, "time_per_token": 0.06577067321428572}}
{"outputs": [{"text": " type(start_date) != datetime:", "tokens": [" type", "(", "start", "_", "date", ")", " ", "!", "=", " datetime", ":", "\n"], "logprobs": [-2.761392831802368, -0.0003023882454726845, -0.010868401266634464, -0.00010263393050990999, -1.6569954823353328e-05, -0.00025006983196362853, -0.4964211583137512, -4.6491513785440475e-06, -4.470248313737102e-05, -0.04926105588674545, -0.6166719794273376, -0.013050617650151253], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -1.270514726638794, -0.020094161853194237, -0.0009258274803869426, -0.04646465182304382, -0.003958605229854584, -0.002368028275668621, -0.0007322729215957224, -0.15860411524772644, -0.014346196316182613, -0.1381390541791916, -0.01800490729510784, -1.1250011920928955, -0.007658879738301039, -0.00018070495571009815, -0.002329495269805193], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.07211586833000183, -0.00012766500003635883, -8.22540732769994e-06, -0.08965826034545898, -0.0005659647285938263, -5.960462772236497e-07, -8.344646857949556e-07, -0.0028778587002307177, -0.002861930523067713], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00021181246847845614, -2.95634672511369e-05, -0.005269447807222605, -0.02687806822359562, -0.17701265215873718, -0.0006497179274447262, -0.00013040646445006132, -0.2967527508735657, -0.10768644511699677, -0.13475391268730164, -0.20432759821414948, -0.000581572181545198, -0.0001652104256208986, -0.02523336187005043, -0.000998951611109078, -8.093983342405409e-05, -0.0005741854547522962], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country).get_list()", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", ".", "get", "_", "list", "()", "\n"], "logprobs": [-0.04675763472914696, -0.003688676515594125, -0.35707125067710876, -0.04217899218201637, -0.18687216937541962, -0.22452446818351746, -0.2602761685848236, -0.32286253571510315, -0.004404842853546143, -0.16261015832424164, -2.9754018783569336, -0.746887743473053, -0.006309352349489927, -0.06355606764554977, -0.05534902960062027, -0.054018232971429825], "finish_reason": "stop"}, {"text": " list(pd.date_range(start_date, end_date, freq='B'))", "tokens": [" list", "(", "pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "'))", "\n"], "logprobs": [-3.291747808456421, -0.3621132969856262, -0.47274506092071533, -0.0007817073492333293, -0.031174201518297195, -1.2159273865108844e-05, -3.158996332786046e-05, -0.0019645453430712223, -0.009427079930901527, -0.0005071069463156164, -6.389413465512916e-05, -0.009712937287986279, -0.013361436314880848, -0.00026008085114881396, -7.629365427419543e-06, -0.7302461862564087, -0.07231394201517105, -0.00045003299601376057, -0.09814076870679855, -0.025584807619452477, -0.2605190873146057, -0.06806949526071548], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.463127464056015, -0.003604345954954624], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04226984456181526, -6.01988795096986e-05, -4.0531076592742465e-06, -0.6760346293449402], "finish_reason": "stop"}], "metrics": {"energy": 170.77095607376103, "energy_per_token": 1.6908015452847627, "time": 6.536748, "time_per_token": 0.06472027722772278}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -1.270514726638794, -0.020094161853194237, -0.0009258274803869426, -0.04646465182304382, -0.003958605229854584, -0.002368028275668621, -0.0007322729215957224, -0.15860411524772644, -0.014346196316182613, -0.1381390541791916, -0.01800490729510784, -0.42766305804252625, -0.0001284993631998077, -0.0021257440093904734], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.07211586833000183, -0.00012766500003635883, -8.22540732769994e-06, -0.08965826034545898, -0.0005659647285938263, -5.960462772236497e-07, -8.344646857949556e-07, -0.0028778587002307177, -0.002861930523067713], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00021181246847845614, -2.95634672511369e-05, -0.005269447807222605, -0.02687806822359562, -0.17701265215873718, -0.0006497179274447262, -0.00013040646445006132, -1.6383779048919678, -0.0016625404823571444, -0.04806165397167206, -0.0025439064484089613, -0.000766102981287986, -0.00011336160969221964, -0.024572093039751053, -0.001396872103214264, -7.903263758635148e-05, -0.0007737264968454838], "finish_reason": "stop"}, {"text": " holidays.get_calendar(country=country)", "tokens": [" holidays", ".", "get", "_", "calendar", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.05320676416158676, -0.003360578790307045, -2.7966508865356445, -0.21475456655025482, -0.7360662221908569, -0.018041200935840607, -0.22801077365875244, -1.285964012145996, -0.006174062378704548, -0.05803074315190315, -0.18313001096248627], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.558770477771759, -0.021011969074606895], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4838601350784302, -0.003268853761255741], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.040343135595321655, -6.294052582234144e-05, -4.529942543740617e-06], "finish_reason": "stop"}], "metrics": {"energy": 135.02498567390438, "energy_per_token": 1.875347023248672, "time": 5.05517, "time_per_token": 0.07021069444444444}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -0.2663726210594177, -0.02761458419263363, -5.125986263010418e-06, -2.50339189733495e-06, -0.009798288345336914, -0.009184019640088081], "finish_reason": "stop"}, {"text": " ValueError('start_date and end_date must be datetime objects')", "tokens": [" Value", "Error", "('", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -1.2705416679382324, -0.020537346601486206, -0.0007914748275652528, -0.05289666727185249, -0.0061944397166371346, -0.0030787233263254166, -0.0005816913326270878, -0.14358258247375488, -0.015186987817287445, -0.1409434676170349, -0.019914798438549042, -0.27461737394332886, -0.002493488835170865], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -0.33523082733154297, -0.0007890925044193864, -0.0001658063702052459, -0.02241198904812336, -0.0009136793087236583, -9.035655966727063e-05, -0.0006974886637181044], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country, years=2023)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ",", " years", "=", "2", "0", "2", "3", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -0.3315005302429199, -0.04120960831642151, -0.1504596620798111, -0.1587529331445694, -0.2514418065547943, -0.3289016783237457, -0.004901417531073093, -2.214174747467041, -1.2815744876861572, -0.3462965488433838, -1.3958194255828857, -0.0038032832089811563, -0.005057754926383495, -0.05856109783053398, -0.09678395092487335, -0.08369103819131851], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5281702280044556, -0.01803651824593544], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4685400128364563, -0.003399547655135393], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.036851223558187485, -4.9828242481453344e-05, -3.6954811548639555e-06], "finish_reason": "stop"}], "metrics": {"energy": 125.95976694107057, "energy_per_token": 1.4646484528031463, "time": 5.889988, "time_per_token": 0.06848823255813953}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date should be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -1.791982650756836, -0.0014384171226993203, -0.13481736183166504, -0.031715523451566696, -0.38435959815979004, -0.009175396524369717, -0.00022313489171210676, -0.002745907986536622], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -1.7164560556411743, -0.0017199022695422173, -0.04587990790605545, -0.002900799736380577, -0.0007750368095003068, -0.00013195598148740828, -0.023921560496091843, -0.001313419546931982, -8.487341256113723e-05, -0.0007350126979872584], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday('US')", "tokens": [" holidays", ".", "Country", "H", "oliday", "('", "US", "')", "\n"], "logprobs": [-0.05004137381911278, -0.004395466763526201, -0.37609052658081055, -0.02927413582801819, -0.19671210646629333, -1.7226637601852417, -0.09128443151712418, -0.10073239356279373, -0.16196171939373016], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.553356945514679, -0.02046353369951248], "finish_reason": "stop"}, {"text": " [date for date in dates", "tokens": [" [", "date", " for", " date", " in", " dates", "\n"], "logprobs": [-1.2957167625427246, -0.5095109343528748, -0.01132382545620203, -0.0022293494548648596, -0.00031096869497559965, -0.0005816913326270878, -2.439960479736328], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03514045104384422, -7.009260298218578e-05, -4.0531076592742465e-06, -0.7409695386886597], "finish_reason": "stop"}], "metrics": {"energy": 101.67103073787688, "energy_per_token": 1.3034747530497035, "time": 5.2628565, "time_per_token": 0.06747251923076923}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError('start_date and end_date must be datetime objects')", "tokens": [" Value", "Error", "('", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -1.2705416679382324, -0.020537346601486206, -0.0007914748275652528, -0.05289666727185249, -0.0061944397166371346, -0.0030787233263254166, -0.0005816913326270878, -0.14358258247375488, -0.015186987817287445, -0.1409434676170349, -0.019914798438549042, -0.27461737394332886, -0.002493488835170865], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -0.33523082733154297, -0.0007890925044193864, -0.0001658063702052459, -0.02241198904812336, -0.0009136793087236583, -9.035655966727063e-05, -0.0006974886637181044], "finish_reason": "stop"}, {"text": " holidays.get(country, as_dict=True)", "tokens": [" holidays", ".", "get", "(", "country", ",", " as", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -2.815864086151123, -1.5344702005386353, -0.07108071446418762, -1.5069997310638428, -0.3387432098388672, -0.023262102156877518, -2.8277058601379395, -0.013531040400266647, -0.5972132682800293, -0.022692643105983734, -0.09041325002908707], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.1433401107788086, -0.11085832864046097, -0.00010609064338495955, -3.123234637314454e-05, -0.09100878238677979, -0.050287287682294846], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4918372333049774, -0.0033394305501133204], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.033912114799022675, -7.378782902378589e-05, -4.172316494077677e-06], "finish_reason": "stop"}], "metrics": {"energy": 154.1642765645981, "energy_per_token": 2.028477323218396, "time": 5.4699583, "time_per_token": 0.07197313552631579}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -0.2663726210594177, -0.02761458419263363, -5.125986263010418e-06, -2.50339189733495e-06, -0.009798288345336914, -0.009184019640088081], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -0.3409547209739685, -0.004869387950748205, -0.00012468514614738524, -0.002712144749239087], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or on end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " on", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -1.5701864957809448, -1.718959093093872, -0.019051073119044304, -0.0013271104544401169, -0.00026472879108041525, -0.02088390663266182, -0.000929400441236794, -0.00010918975021922961, -0.0004564673872664571], "finish_reason": "stop"}, {"text": " holidays.get_calendar(country=country)", "tokens": [" holidays", ".", "get", "_", "calendar", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -2.736924171447754, -0.24322287738323212, -0.839435875415802, -0.023837754502892494, -0.18682174384593964, -1.2963045835494995, -0.005238022655248642, -0.05832991749048233, -0.21048152446746826], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5819465517997742, -0.01920848898589611], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4711667597293854, -0.003564791288226843], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04108353331685066, -6.842378934379667e-05, -4.529942543740617e-06, -0.8986630439758301], "finish_reason": "stop"}], "metrics": {"energy": 143.36362138557433, "energy_per_token": 1.6670188533206318, "time": 5.6916776, "time_per_token": 0.0661822976744186}}
{"outputs": [{"text": " type(start_date) != datetime or type(end_date) != datetime:", "tokens": [" type", "(", "start", "_", "date", ")", " ", "!", "=", " datetime", " or", " type", "(", "end", "_", "date", ")", " ", "!", "=", " datetime", ":", "\n"], "logprobs": [-2.761392831802368, -0.0003023882454726845, -0.010868401266634464, -0.00010263393050990999, -1.6569954823353328e-05, -0.00025006983196362853, -0.4964211583137512, -4.6491513785440475e-06, -4.470248313737102e-05, -0.04926105588674545, -1.2261137962341309, -0.30516505241394043, -0.00030310326837934554, -0.0038720411248505116, -4.9232225137529895e-05, -4.8874615458771586e-05, -0.0003079893649555743, -0.05242415890097618, -1.1920928244535389e-07, -2.8371408916427754e-05, -0.00152757263276726, -0.028529224917292595, -0.008488999679684639], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -0.3409547209739685, -0.004869387950748205, -0.00012468514614738524, -0.002712144749239087], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -0.37591642141342163, -0.0310836061835289, -0.19093561172485352, -0.16822434961795807, -0.1769832819700241, -0.38808807730674744, -0.0038643223233520985, -0.16933703422546387, -0.0971524566411972], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5931675434112549, -0.02313665859401226], "finish_reason": "stop"}, {"text": " [d for d in dates if d.weekday() < 5 and d.date() not in country_holidays]", "tokens": [" [", "d", " for", " d", " in", " dates", " if", " d", ".", "week", "day", "()", " <", " ", "5", " and", " d", ".", "date", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.1601370573043823, -1.897554874420166, -0.01864081248641014, -0.0005989664932712913, -0.0007362039177678525, -0.0013329440262168646, -0.04258633777499199, -0.1464977264404297, -0.022377250716090202, -0.1714392900466919, -7.331102824537084e-05, -0.004348228219896555, -1.1351232528686523, -0.0006411403883248568, -0.0036052961368113756, -0.05782059580087662, -0.04638237506151199, -2.0094237327575684, -0.4729062616825104, -0.03831049054861069, -0.0014111570781096816, -9.42901024245657e-05, -0.013798443600535393, -1.9073468138230965e-06, -3.576278118089249e-07, -1.4662635294371285e-05, -0.33843672275543213, -0.010080616921186447], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.04385872185230255, -5.757642793469131e-05, -4.529942543740617e-06], "finish_reason": "stop"}], "metrics": {"energy": 157.31525549125666, "energy_per_token": 1.3921704025774926, "time": 7.3707504, "time_per_token": 0.0652278796460177}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -1.270514726638794, -0.020094161853194237, -0.0009258274803869426, -0.04646465182304382, -0.003958605229854584, -0.002368028275668621, -0.0007322729215957224, -0.15860411524772644, -0.014346196316182613, -0.1381390541791916, -0.01800490729510784, -0.42766305804252625, -0.0001284993631998077, -0.0021257440093904734], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.07211586833000183, -0.00012766500003635883, -8.22540732769994e-06, -0.08965826034545898, -0.0005659647285938263, -5.960462772236497e-07, -8.344646857949556e-07, -0.0028778587002307177, -0.002861930523067713], "finish_reason": "stop"}, {"text": " ValueError(\"end_date must be after or equal to start_date.\")", "tokens": [" Value", "Error", "(", "\"", "end", "_", "date", " must", " be", " after", " or", " equal", " to", " start", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00021181246847845614, -2.95634672511369e-05, -0.005269447807222605, -0.02687806822359562, -2.0514156818389893, -0.0032456836197525263, -0.00031990656862035394, -0.12508614361286163, -0.018418941646814346, -0.19347526133060455, -1.437793493270874, -0.10934118181467056, -0.05682402849197388, -0.008157270960509777, -0.0011603058082982898, -0.00033444532891735435, -0.03452140465378761, -0.0009728704462759197, -0.00012373158824630082, -0.0006885541952215135], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04447327181696892, -0.003380776150152087, -0.3762463331222534, -0.035909779369831085, -0.18572311103343964, -0.18277806043624878, -0.23098218441009521, -0.3668907880783081, -0.00394958071410656, -0.19401739537715912, -0.10752801597118378], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.605477511882782, -0.018047524616122246], "finish_reason": "stop"}, {"text": " [date for date in dates if date.isoweekday() not in [6, 7] and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "is", "ow", "e", "ek", "day", "()", " not", " in", " [", "6", ",", " ", "7", "]", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.247124195098877, -0.5746761560440063, -0.009142440743744373, -0.0024038248229771852, -0.00029523781267926097, -0.000527123745996505, -0.08373697847127914, -0.06027012690901756, -0.043734580278396606, -1.7791684865951538, -0.06484552472829819, -0.0002426806604489684, -0.0001037067049765028, -3.909988299710676e-05, -0.0014132998185232282, -0.2872156500816345, -3.4450891689630225e-05, -0.2198859304189682, -0.1887761652469635, -0.0009062950266525149, -0.0699835792183876, -0.00019631843315437436, -0.026870757341384888, -0.07133083790540695, -0.012755355797708035, -0.030759520828723907, -0.00020811776630580425, -0.006809007842093706, -2.145764938177308e-06, -3.576278118089249e-07, -1.2993727978027891e-05, -0.2924906313419342, -0.00792206171900034], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.032503072172403336, -5.602679812000133e-05, -4.0531076592742465e-06], "finish_reason": "stop"}], "metrics": {"energy": 157.73207123947142, "energy_per_token": 1.4880384079195417, "time": 7.162666, "time_per_token": 0.06757232075471697}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date.tzinfo is None:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", ".", "tz", "info", " is", " None", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -1.7723274230957031, -0.4842331111431122, -0.004201870411634445, -0.06388255953788757, -0.07849285006523132, -0.16790743172168732, -0.01689200848340988], "finish_reason": "stop"}, {"text": " ValueError('Invalid start or end date.')", "tokens": [" Value", "Error", "('", "Invalid", " start", " or", " end", " date", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -2.9650511741638184, -1.6470308303833008, -0.677567720413208, -0.011495189741253853, -0.44479840993881226, -0.4324701726436615, -0.8409749269485474, -0.0035729873925447464], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"end_date must be after start_date.\")", "tokens": [" Value", "Error", "(", "\"", "end", "_", "date", " must", " be", " after", " start", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -2.132205009460449, -0.002983050188049674, -0.00028534632292576134, -0.11418747901916504, -0.020383527502417564, -0.20226381719112396, -0.24617697298526764, -0.0008875959902070463, -0.0002636561985127628, -0.029485510662198067, -0.0012647256953641772, -0.00012361239350866526, -0.0008048156159929931], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country).get_list()", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", ".", "get", "_", "list", "()", "\n"], "logprobs": [-0.04521289840340614, -0.003284894395619631, -0.36961546540260315, -0.05901385843753815, -0.19500495493412018, -0.15420030057430267, -0.21672901511192322, -0.36304083466529846, -0.004423832520842552, -0.18819652497768402, -3.0070507526397705, -0.7496182918548584, -0.006215172354131937, -0.06001576781272888, -0.0446341447532177, -0.0481514073908329], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5044811964035034, -0.02225589193403721], "finish_reason": "stop"}, {"text": " [day for day in dates if day.weekday() not in [5, 6] and day not in country_holidays]", "tokens": [" [", "day", " for", " day", " in", " dates", " if", " day", ".", "week", "day", "()", " not", " in", " [", "5", ",", " ", "6", "]", " and", " day", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.1618564128875732, -2.705507278442383, -0.011325475759804249, -0.00115863885730505, -0.0007059465860947967, -0.0012119814055040479, -0.0907907485961914, -0.04156714677810669, -0.025280553847551346, -0.18097352981567383, -6.937739817658439e-05, -0.004644440021365881, -0.7293163537979126, -3.671578815556131e-05, -0.19097726047039032, -0.05586378276348114, -0.00011383838864276186, -0.06423644721508026, -0.00010978573118336499, -0.005877118557691574, -0.06832337379455566, -0.009377244859933853, -0.1100984439253807, -0.00011705666838679463, -0.005018969532102346, -2.50339189733495e-06, -5.960462772236497e-07, -1.7762025890988298e-05, -0.35619136691093445, -0.009010841138660908], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03742358833551407, -5.757642793469131e-05, -5.245195097813848e-06, -0.7135700583457947], "finish_reason": "stop"}], "metrics": {"energy": 162.47061376953127, "energy_per_token": 1.4905560896287273, "time": 7.384657, "time_per_token": 0.06774914678899083}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -1.3573713302612305, -0.0001436368766007945, -0.002272644080221653], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -0.23689834773540497, -0.0006656814948655665, -0.00015817821258679032, -0.022600576281547546, -0.0009030792862176895, -8.546940807718784e-05, -0.0006641327636316419], "finish_reason": "stop"}, {"text": " holidays.get_country(country)", "tokens": [" holidays", ".", "get", "_", "country", "(", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -2.736924171447754, -0.24322287738323212, -2.2972137928009033, -1.0844765901565552, -0.055986542254686356, -0.22933021187782288, -0.06399606168270111], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5819465517997742, -0.01920848898589611], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4711667597293854, -0.003564791288226843], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.04108353331685066, -6.842378934379667e-05, -4.529942543740617e-06], "finish_reason": "stop"}], "metrics": {"energy": 140.8536749572754, "energy_per_token": 1.9838545768630336, "time": 5.060758, "time_per_token": 0.07127828169014085}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -0.2663726210594177, -0.02761458419263363, -5.125986263010418e-06, -2.50339189733495e-06, -0.009798288345336914, -0.009184019640088081], "finish_reason": "stop"}, {"text": " ValueError('Invalid date format. Both start_date and end_date must be datetime objects.')", "tokens": [" Value", "Error", "('", "Invalid", " date", " format", ".", " Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -2.9650511741638184, -0.9140463471412659, -0.634607195854187, -0.24796511232852936, -1.8512654304504395, -0.26576104760169983, -0.09380117803812027, -0.0007778956205584109, -0.0039267828688025475, -0.0009286858257837594, -0.0022113888990134, -0.0006730675231665373, -0.5807048082351685, -0.00102324562612921, -0.18077734112739563, -0.03245460242033005, -0.10082357376813889, -0.006943856831640005, -0.0017841625958681107], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -0.33523082733154297, -0.0007890925044193864, -0.0001658063702052459, -0.02241198904812336, -0.0009136793087236583, -9.035655966727063e-05, -0.0006974886637181044], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country, include_key=True)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ",", " include", "_", "key", "=", "True", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -0.3315005302429199, -0.04120960831642151, -0.1504596620798111, -0.1587529331445694, -0.2514418065547943, -0.3289016783237457, -0.004901417531073093, -2.214174747467041, -2.1586992740631104, -4.6132929128361866e-05, -3.7281503677368164, -0.09434598684310913, -1.3757554292678833, -0.11097516119480133, -0.10390757769346237], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5281702280044556, -0.01803651824593544], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4685400128364563, -0.003399547655135393], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.036851223558187485, -4.9828242481453344e-05, -3.6954811548639555e-06, -0.7602932453155518], "finish_reason": "stop"}], "metrics": {"energy": 148.2598532981873, "energy_per_token": 1.611520144545514, "time": 6.1029296, "time_per_token": 0.06633619130434783}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"The start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "The", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -3.1004135608673096, -0.2497919350862503, -0.6687692999839783, -0.0008353081648238003, -0.06596706062555313, -0.005670533049851656, -0.002709767082706094, -0.0009968079393729568, -0.5112001299858093, -0.01599317044019699, -0.19018326699733734, -0.01228739507496357, -0.24010813236236572, -0.007479047868400812, -0.00015901254664640874, -0.00277289398945868], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must not be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " not", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -2.520975351333618, -0.007475498132407665, -0.05607220530509949, -0.00422525592148304, -0.0010898133041337132, -0.00013982271775603294, -0.01976906508207321, -0.001013718661852181, -0.00010656742961145937, -0.0005439232336357236], "finish_reason": "stop"}, {"text": " holidays.get(country)", "tokens": [" holidays", ".", "get", "(", "country", ")", "\n"], "logprobs": [-0.05182579904794693, -0.002943352097645402, -2.5980119705200195, -1.5108864307403564, -0.06935982406139374, -1.0694613456726074, -0.10524962097406387], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6257138848304749, -0.021278662607073784], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.46372392773628235, -0.0036427113227546215], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.035820070654153824, -5.745722592109814e-05, -4.410734163684538e-06], "finish_reason": "stop"}], "metrics": {"energy": 96.31604542160035, "energy_per_token": 1.3565640200225402, "time": 4.8464313, "time_per_token": 0.06825959577464788}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -1.8563381433486938, -0.020655643194913864, -0.23544172942638397, -0.00012146688823122531, -3.790783375734463e-05, -0.2663726210594177, -0.02761458419263363, -5.125986263010418e-06, -2.50339189733495e-06, -0.009798288345336914, -0.009184019640088081], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -0.8441804051399231, -0.15288794040679932, -0.061021946370601654, -0.0005096090608276427, -0.001505790394730866, -0.0007560970261693001, -0.0009305914281867445, -0.0003927174839191139, -0.2224292755126953, -0.0002821285743266344, -0.12427224218845367, -0.01231212355196476, -0.3409547209739685, -0.004869387950748205, -0.00012468514614738524, -0.002712144749239087], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -0.2746683657169342, -0.09630228579044342, -0.14353549480438232, -1.5701864957809448, -0.3881256580352783, -0.07065904885530472, -0.0030525776091963053, -0.0014073477359488606, -0.00016830935783218592, -0.02191738784313202, -0.0008465044084005058, -0.00011729506513802335, -0.0007412070408463478], "finish_reason": "stop"}, {"text": " holidays.CountryHolidays(country=country)", "tokens": [" holidays", ".", "Country", "H", "olidays", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04753570631146431, -0.003123525995761156, -0.37591642141342163, -0.0310836061835289, -1.7684292793273926, -0.010287709534168243, -1.5174921751022339, -0.08129860460758209, -0.004539660178124905, -0.10145042091608047, -0.21587826311588287], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5446450710296631, -0.01765231043100357], "finish_reason": "stop"}, {"text": " [d for d in dates if d.weekday() <= 5 and d not in country_holidays]", "tokens": [" [", "d", " for", " d", " in", " dates", " if", " d", ".", "week", "day", "()", " <=", " ", "5", " and", " d", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.2556273937225342, -1.9747962951660156, -0.01682378724217415, -0.0006582954083569348, -0.0007412070408463478, -0.001501148217357695, -0.04872267693281174, -0.13190269470214844, -0.02017313987016678, -0.20555450022220612, -9.738924563862383e-05, -0.004178246948868036, -2.3652656078338623, -0.0027787189465016127, -2.2305803298950195, -0.041567716747522354, -0.06564035266637802, -0.1228933036327362, -3.2782016205601394e-05, -0.010357674211263657, -2.622600959512056e-06, -4.768370445162873e-07, -1.7523612768854946e-05, -0.21845777332782745, -0.01109372265636921], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03885312378406525, -5.7338023907504976e-05, -3.814689989667386e-06, -0.698337197303772], "finish_reason": "stop"}], "metrics": {"energy": 180.75413658905026, "energy_per_token": 1.6432194235368205, "time": 7.3712234, "time_per_token": 0.06701112181818182}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError('Both start_date and end_date should be datetime objects')", "tokens": [" Value", "Error", "('", "Both", " start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -0.7146925926208496, -0.1140408143401146, -0.05931656062602997, -0.0005489272880367935, -0.0017523899441584945, -0.0006101653561927378, -0.0008045773720368743, -0.00047219570842571557, -1.684751272201538, -0.0020233176182955503, -0.17067775130271912, -0.037149909883737564, -0.8390923142433167, -0.002311417367309332], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -0.09309272468090057, -0.000607782625593245, -5.960462772236497e-07, -8.344646857949556e-07, -0.0032660020515322685, -0.0025518732145428658], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002460177056491375, -3.194758028257638e-05, -0.006448769476264715, -0.026737524196505547, -0.1706552356481552, -0.0007035640883259475, -0.00013457823661156, -0.2720017433166504, -0.11539334803819656, -0.12341312319040298, -0.33523082733154297, -0.0007890925044193864, -0.0001658063702052459, -0.02241198904812336, -0.0009136793087236583, -9.035655966727063e-05, -0.0006974886637181044], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.038312554359436035, -0.003734639612957835, -0.3315005302429199, -0.04120960831642151, -0.1504596620798111, -0.1587529331445694, -0.2514418065547943, -0.3289016783237457, -0.004901417531073093, -0.14825481176376343, -0.11278347671031952], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.2552515268325806, -0.12267463654279709, -9.178694017464295e-05, -3.659658250398934e-05, -0.09605822712182999, -0.03574013337492943], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() not in [5,6] and date not in country_holidays.keys()]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " not", " in", " [", "5", ",", "6", "]", " and", " date", " not", " in", " country", "_", "h", "olidays", ".", "keys", "()", "]", "\n"], "logprobs": [-1.2814271450042725, -0.5685061812400818, -0.009387282654643059, -0.002316293539479375, -0.0003321811091154814, -0.0005478549865074456, -0.0989818200469017, -0.08015508949756622, -0.03644935041666031, -0.23383429646492004, -3.7788631743751466e-05, -0.005477657541632652, -0.6421732306480408, -3.2782016205601394e-05, -0.19668646156787872, -0.06808129698038101, -7.724463648628443e-05, -2.6029136180877686, -0.007623744197189808, -0.06100904569029808, -0.014109382405877113, -0.043131109327077866, -0.0001851148990681395, -0.0069345044903457165, -2.622600959512056e-06, -7.152555099310121e-07, -1.7523612768854946e-05, -1.5311845541000366, -0.5631902813911438, -0.0019100533099845052, -0.022235257551074028, -0.009146339260041714], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03822076693177223, -6.294052582234144e-05, -4.529942543740617e-06], "finish_reason": "stop"}], "metrics": {"energy": 155.52841087055208, "energy_per_token": 1.4812229606719245, "time": 7.1516566, "time_per_token": 0.06811101523809523}}
{"outputs": [{"text": " not isinstance(start_date, datetime.date):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ".", "date", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -2.046546459197998, -0.5038554668426514, -0.2601497173309326, -0.014600693248212337], "finish_reason": "stop"}, {"text": " ValueError('Both start_date and end_date must be datetime objects.')", "tokens": [" Value", "Error", "('", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -1.5394587516784668, -0.7146925926208496, -0.1140408143401146, -0.05931656062602997, -0.0005489272880367935, -0.0017523899441584945, -0.0006101653561927378, -0.0008045773720368743, -0.00047219570842571557, -0.2439553290605545, -0.0003398079425096512, -0.11028902977705002, -0.012554659508168697, -0.5271999835968018, -0.0062490543350577354, -0.0017615529941394925], "finish_reason": "stop"}, {"text": " start_date.tzinfo is None:", "tokens": [" start", "_", "date", ".", "tz", "info", " is", " None", ":", "\n"], "logprobs": [-0.06591571867465973, -9.512448741588742e-05, -8.34461570775602e-06, -2.9253222942352295, -0.7591541409492493, -0.010577094741165638, -0.027493976056575775, -0.01771215908229351, -0.21060176193714142, -0.02154773473739624], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002733095607254654, -3.158996332786046e-05, -0.005662590730935335, -0.024440648034214973, -0.1789245307445526, -0.000557267339900136, -0.0001264730526600033, -0.304609477519989, -0.09126930683851242, -0.13818202912807465, -0.2544848918914795, -0.0005769256968051195, -0.00018809456378221512, -0.02228154055774212, -0.0009990707039833069, -7.915183232398704e-05, -0.000602421467192471], "finish_reason": "stop"}, {"text": " holidays.CountryHoliday(country=country)", "tokens": [" holidays", ".", "Country", "H", "oliday", "(", "country", "=", "country", ")", "\n"], "logprobs": [-0.04395239055156708, -0.003754116827622056, -0.31298255920410156, -0.031832505017519, -0.19771158695220947, -0.16029731929302216, -0.20821398496627808, -0.3421936333179474, -0.004691070877015591, -0.14402197301387787, -0.11737848818302155], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5540746450424194, -0.021269559860229492], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.49310773611068726, -0.003032017033547163], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>from datetime import datetime", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "from", " datetime", " import", " datetime", "\n"], "logprobs": [-0.032858431339263916, -5.495397272170521e-05, -4.172316494077677e-06, -1.5307163000106812, -1.9073468138230965e-06, -5.960462772236497e-07, -6.69933797325939e-05, -0.00017021637177094817, -0.08330218493938446, -1.1540720462799072, -1.5888625383377075, -0.0012280549854040146, -0.19491687417030334, -0.4516037404537201], "finish_reason": "stop"}], "metrics": {"energy": 123.75542141151428, "energy_per_token": 1.4390165280408638, "time": 5.899571, "time_per_token": 0.06859966279069768}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(f'The start_date and end_date should be datetime objects, not {type(start_date)} and {type(end_date)}.')", "tokens": [" Value", "Error", "(", "f", "'", "The", " start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", ",", " not", " {", "type", "(", "start", "_", "date", ")}", " and", " {", "type", "(", "end", "_", "date", ")}", ".", "')", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -2.725055456161499, -1.6185004711151123, -3.1688921451568604, -0.68495774269104, -0.7346855998039246, -0.0015378089156001806, -0.20626336336135864, -0.01592312939465046, -0.005187859293073416, -0.0013680632691830397, -2.1098668575286865, -0.05101447179913521, -0.27509716153144836, -0.11337711662054062, -1.0399987697601318, -0.9063028693199158, -0.02766653336584568, -0.01862899400293827, -0.0010502781951799989, -0.002233869396150112, -9.63164638960734e-05, -0.00045110538485459983, -0.16005580127239227, -0.17614589631557465, -0.007226755376905203, -0.0011453027836978436, -0.0005855038180015981, -0.010529558174312115, -0.00035339308669790626, -0.0013227055314928293, -0.0138212526217103, -1.021225094795227, -0.030682645738124847, -0.0023160558193922043], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06427400559186935, -9.941560711013153e-05, -7.867782187531702e-06, -0.09501690417528152, -0.0005411829333752394, -7.152555099310121e-07, -8.344646857949556e-07, -0.0028285279404371977, -0.0029082882683724165], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00024971229140646756, -2.6702524337451905e-05, -0.006647496949881315, -0.021604200825095177, -0.16085967421531677, -0.0006032554083503783, -0.00014482879487331957, -0.2728048264980316, -0.11217648535966873, -0.1325657069683075, -0.24753913283348083, -0.0006023023161105812, -0.00017641419253777713, -0.019983744248747826, -0.0008623456815257668, -8.225102646974847e-05, -0.0005972985527478158], "finish_reason": "stop"}, {"text": " holidays.country(country, as_region=True)", "tokens": [" holidays", ".", "country", "(", "country", ",", " as", "_", "region", "=", "True", ")", "\n"], "logprobs": [-0.047626983374357224, -0.003022627905011177, -2.0143535137176514, -1.5951024293899536, -0.07937094569206238, -2.218776226043701, -1.3345805406570435, -0.07980778068304062, -0.8548179864883423, -0.011962814256548882, -0.24726733565330505, -0.10849373042583466, -0.106644406914711], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.55454021692276, -0.017827395349740982], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5083408355712891, -0.0036541137378662825], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>from . import models", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "from", " ", ".", " import", " models", "\n"], "logprobs": [-0.0423099547624588, -6.544376083184034e-05, -4.0531076592742465e-06, -1.6131460666656494, -1.5497195136049413e-06, -3.576278118089249e-07, -5.531158240046352e-05, -0.00014852374442853034, -0.07122326642274857, -1.0192960500717163, -2.661925792694092, -0.019299816340208054, -2.008310317993164, -4.603191375732422, -0.3066627085208893], "finish_reason": "stop"}], "metrics": {"energy": 163.39508162498473, "energy_per_token": 1.556143634523664, "time": 7.1997585, "time_per_token": 0.06856912857142856}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.37506696581840515, -0.027030078694224358, -0.00022015532886143774, -0.012320365756750107, -2.8609820219571702e-05, -9.059865078597795e-06, -0.00010263393050990999, -0.03052193857729435, -0.33645400404930115, -0.009367087855935097], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -1.270514726638794, -0.020094161853194237, -0.0009258274803869426, -0.04646465182304382, -0.003958605229854584, -0.002368028275668621, -0.0007322729215957224, -0.15860411524772644, -0.014346196316182613, -0.1381390541791916, -0.01800490729510784, -1.1250011920928955, -0.007658879738301039, -0.00018070495571009815, -0.002329495269805193], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.07211586833000183, -0.00012766500003635883, -8.22540732769994e-06, -0.08965826034545898, -0.0005659647285938263, -5.960462772236497e-07, -8.344646857949556e-07, -0.0028778587002307177, -0.002861930523067713], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00021181246847845614, -2.95634672511369e-05, -0.005269447807222605, -0.02687806822359562, -0.17701265215873718, -0.0006497179274447262, -0.00013040646445006132, -0.2967527508735657, -0.10768644511699677, -0.13475391268730164, -0.20432759821414948, -0.000581572181545198, -0.0001652104256208986, -0.02523336187005043, -0.000998951611109078, -8.093983342405409e-05, -0.0005741854547522962], "finish_reason": "stop"}, {"text": " holidays.CountryHolidays(subdiv=country)", "tokens": [" holidays", ".", "Country", "H", "olidays", "(", "sub", "div", "=", "country", ")", "\n"], "logprobs": [-0.04675763472914696, -0.003688676515594125, -0.35707125067710876, -0.04217899218201637, -1.790610909461975, -0.011418232694268227, -1.569246530532837, -0.03570574149489403, -0.006139111239463091, -0.007642317563295364, -0.13258574903011322, -0.1643238216638565], "finish_reason": "stop"}, {"text": " [start_date]", "tokens": [" [", "start", "_", "date", "]", "\n"], "logprobs": [-1.130613923072815, -0.1103895902633667, -0.00010179955279454589, -2.9205850296420977e-05, -0.10366257280111313, -0.04613151401281357], "finish_reason": "stop"}, {"text": " [date for date in dates", "tokens": [" [", "date", " for", " date", " in", " dates", "\n"], "logprobs": [-1.3004857301712036, -0.5402118563652039, -0.009826737456023693, -0.0022818022407591343, -0.00030727434204891324, -0.0005759726045653224, -2.3695216178894043], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.033870629966259, -7.92710343375802e-05, -4.410734163684538e-06, -0.6948271989822388], "finish_reason": "stop"}], "metrics": {"energy": 150.4416045799255, "energy_per_token": 1.790971483094351, "time": 5.90861, "time_per_token": 0.07034059523809524}}
{"outputs": [{"text": " start_date.__class__ != datetime:", "tokens": [" start", "_", "date", ".", "__", "class", "__", " ", "!", "=", " datetime", ":", "\n"], "logprobs": [-2.2227232456207275, -0.000626367807853967, -5.245071224635467e-05, -0.3865761160850525, -1.7749452590942383, -0.011506385169923306, -0.002673387061804533, -0.7070267200469971, -1.8596476365928538e-05, -8.391981828026474e-05, -0.016448376700282097, -1.0205155611038208, -0.016932092607021332], "finish_reason": "stop"}, {"text": " ValueError(\"'start_date' and 'end_date' must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "'", "start", "_", "date", "'", " and", " '", "end", "_", "date", "'", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.02187703549861908, -4.768360213347478e-06, -0.2473292350769043, -0.09199503064155579, -3.3365681171417236, -0.007932824082672596, -0.00350052653811872, -0.0008141063735820353, -0.004438786301761866, -0.03304678946733475, -0.003842234844341874, -0.0004233417857903987, -0.0002337421028641984, -0.0005875291535630822, -0.0005530973430722952, -0.14252975583076477, -0.015378938987851143, -0.20645470917224884, -0.01751655526459217, -0.9753404259681702, -0.000192504478036426, -0.002356849145144224], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.06367676705121994, -9.476689592702314e-05, -8.106198947643861e-06, -0.09184910356998444, -0.0005546461907215416, -5.960462772236497e-07, -8.344646857949556e-07, -0.0027157114818692207, -0.0023896729107946157], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.0002743821241892874, -3.397406908334233e-05, -0.005713915918022394, -0.02533925138413906, -0.1552053987979889, -0.0006578188622370362, -0.00012730741582345217, -1.7164560556411743, -0.0017199022695422173, -0.04587990790605545, -0.002900799736380577, -0.0007750368095003068, -0.00013195598148740828, -0.023921560496091843, -0.001313419546931982, -8.487341256113723e-05, -0.0007350126979872584], "finish_reason": "stop"}, {"text": " holidays.CountryHolidays(prov='', subdiv=country)", "tokens": [" holidays", ".", "Country", "H", "olidays", "(", "prov", "=", "''", ",", " sub", "div", "=", "country", ")", "\n"], "logprobs": [-0.05004137381911278, -0.004395466763526201, -0.37609052658081055, -0.02927413582801819, -1.7387596368789673, -0.009882688522338867, -0.970008134841919, -0.8149451613426208, -0.7235289812088013, -0.00033539868309162557, -0.8202236890792847, -0.05597617104649544, -0.012235700152814388, -1.2733306884765625, -0.611138641834259, -0.09325411170721054], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5409625172615051, -0.022809287533164024], "finish_reason": "stop"}, {"text": " [dt for dt in dates if dt.weekday() not in [5, 6] and dt not in country_holidays]", "tokens": [" [", "dt", " for", " dt", " in", " dates", " if", " dt", ".", "week", "day", "()", " not", " in", " [", "5", ",", " ", "6", "]", " and", " dt", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-1.306728482246399, -2.739649772644043, -0.03755597770214081, -0.002601098734885454, -0.00034624303225427866, -0.0012036467669531703, -0.06340357661247253, -0.14400845766067505, -0.021576551720499992, -0.21359455585479736, -3.6477376852417365e-05, -0.005421459209173918, -0.6789087653160095, -2.7656173188006505e-05, -0.2262749969959259, -0.06748287379741669, -9.250213042832911e-05, -0.09254136681556702, -0.0001110968878492713, -0.008088333532214165, -0.0692276880145073, -0.010543359443545341, -0.09351036697626114, -8.844937838148326e-05, -0.009248392656445503, -3.576272320060525e-06, -3.576278118089249e-07, -1.9907753085135482e-05, -0.28491443395614624, -0.007343797944486141], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04066642001271248, -5.376194530981593e-05, -4.529942543740617e-06, -0.7158850431442261], "finish_reason": "stop"}], "metrics": {"energy": 164.94405593872077, "energy_per_token": 1.4596819109621306, "time": 7.58064, "time_per_token": 0.06708530973451328}}
