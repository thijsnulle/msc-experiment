{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.030849914997816086, -0.011364724487066269, -4.3987260141875595e-05, -0.0017327546374872327, -5.602820692729438e-06, -2.264974000354414e-06, -0.00020251607929822057, -0.0039411503821611404, -0.3901209831237793, -0.016399476677179337, -1.0211145877838135, -0.0011595914838835597, -5.757642793469131e-05, -0.004425494000315666, -3.576278118089249e-07, -4.768370445162873e-07, -9.178694017464295e-05, -0.001116129569709301, -0.03834766149520874, -0.002554608043283224], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.9989899396896362, -0.002450560452416539, -0.0001512651506345719, -0.0015147175872698426], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='B')  # Exclude weekends", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", "  ", "#", " Ex", "clude", " weekends", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -0.23662270605564117, -0.012460948899388313, -6.794906312279636e-06, -0.06331966072320938, -1.0491771697998047, -0.045255739241838455, -2.3687047958374023, -0.0006730675231665373, -3.5625874996185303, -0.09292621165513992, -0.1583535373210907, -0.2130756378173828], "finish_reason": "stop"}, {"text": " dates[", "tokens": [" dates", "[", "\n"], "logprobs": [-1.4911179542541504, -0.8017913103103638, -3.0938074588775635], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03500083088874817, -5.364274329622276e-05, -8.308542601298541e-05, -0.6580532193183899], "finish_reason": "stop"}], "metrics": {"energy": 634.814584529877, "energy_per_token": 5.932846584391374, "time": 17.867819, "time_per_token": 0.16698896261682245}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -1.9612140655517578, -0.06568065285682678, -0.020496003329753876, -0.0005041282274760306, -0.00035565727739594877, -0.0003084660565946251, -0.00015209948469419032, -3.516612196108326e-05, -0.1769717037677765, -0.0005389191792346537, -0.14072994887828827, -0.007149469573050737, -0.4138585031032562, -0.002010706812143326, -0.00019262365822214633, -0.0009086770587600768], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -0.295091450214386, -0.00016819016309455037, -7.1403817855753e-05, -0.009593102149665356, -0.0004314445541240275, -6.01988795096986e-05, -0.000536655425094068], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -0.25204336643218994, -0.012865751050412655, -6.318072337307967e-06, -0.06622314453125, -0.6158154010772705, -0.05680646002292633, -0.11267729848623276], "finish_reason": "stop"}, {"text": " [d.to_pydatetime() for d in dates if not d.to_pydatetime().weekday() >= 5 and not d in country_holidays]", "tokens": [" [", "d", ".", "to", "_", "py", "datetime", "()", " for", " d", " in", " dates", " if", " not", " d", ".", "to", "_", "py", "datetime", "()", ".", "week", "day", "()", " >=", " ", "5", " and", " not", " d", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5633237361907959, -1.366926908493042, -0.9995822906494141, -0.3562083840370178, -1.811964830267243e-05, -0.00021872512297704816, -0.000510204816237092, -0.0005277194431982934, -0.13837221264839172, -0.001042894902639091, -0.0006003961316309869, -0.001434131758287549, -0.3546827733516693, -2.7038872241973877, -0.43800321221351624, -0.0007115454645827413, -2.4115355014801025, -5.483612312673358e-06, -0.00047124247066676617, -4.708655978902243e-05, -6.0437283536884934e-05, -0.08393166214227676, -0.11134359240531921, -2.7656173188006505e-05, -0.0017454879125580192, -0.8398101329803467, -0.0012291265884414315, -0.020737379789352417, -0.05901296064257622, -1.2223196029663086, -0.067802295088768, -2.068988561630249, -0.005152399651706219, -1.8954096958623268e-05, -3.6954811548639555e-06, -5.960462772236497e-07, -0.021997971460223198, -0.0240236297249794], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.039545126259326935, -3.7431014789035544e-05, -0.0001110968878492713], "finish_reason": "stop"}], "metrics": {"energy": 580.8022562961577, "energy_per_token": 4.270604825707042, "time": 15.346722, "time_per_token": 0.11284354411764706}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -1.9612140655517578, -0.06568065285682678, -0.020496003329753876, -0.0005041282274760306, -0.00035565727739594877, -0.0003084660565946251, -0.00015209948469419032, -3.516612196108326e-05, -0.1769717037677765, -0.0005389191792346537, -0.14072994887828827, -0.007149469573050737, -1.1118909120559692, -0.000169382052263245, -0.0012667496921494603], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -0.295091450214386, -0.00016819016309455037, -7.1403817855753e-05, -0.009593102149665356, -0.0004314445541240275, -6.01988795096986e-05, -0.000536655425094068], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date, end_date, freq='C', tz=None).to_pydatetime().tolist()", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "C", "'", ",", " t", "z", "=", "None", ")", ".", "to", "_", "py", "datetime", "()", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -1.7267208099365234, -0.0002812943421304226, -2.7418097943154862e-06, -0.00010609064338495955, -0.0005274811992421746, -0.009618132375180721, -0.24373272061347961, -0.00019107422849629074, -0.05109025537967682, -0.0029155388474464417, -0.000102037942269817, -4.172238186583854e-05, -0.7860463261604309, -0.13653694093227386, -0.0001911934232339263, -0.0865197628736496, -1.6159443855285645, -0.655707061290741, -0.0006959400488995016, -1.1976923942565918, -0.0008294717408716679, -0.9766160249710083, -0.32091671228408813, -0.3738410174846649, -1.6024197340011597, -0.43995869159698486, -1.4305104514278355e-06, -0.09937077760696411, -0.010196617804467678, -0.00045217780279926956, -1.5909972190856934, -0.0048146978951990604, 0.0, -0.00036090059438720345, -0.05913330987095833], "finish_reason": "stop"}, {"text": " dates[(dates.weekday < 5) & (~dates.isin(country_holidays))]  # Remove weekends and holidays", "tokens": [" dates", "[(", "dates", ".", "week", "day", " <", " ", "5", ")", " &", " (~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", "))", "]", "  ", "#", " Remove", " weekends", " and", " holidays", "\n"], "logprobs": [-1.3571557998657227, -0.8084931969642639, -0.016939712688326836, -0.00019167017308063805, -0.35231390595436096, -1.1920858014491387e-05, -0.31264129281044006, -0.00042226933874189854, -0.03967895358800888, -0.012961070984601974, -0.04430951923131943, -0.1820937842130661, -0.01670655980706215, -0.00022504181833937764, -0.0233735553920269, -0.0007949291029945016, -0.016902204602956772, -2.8490614567999728e-05, -3.099436753473128e-06, -2.3841855067985307e-07, -0.011616681702435017, -0.0059351869858801365, -3.0181968212127686, -0.0022260190453380346, -3.752101182937622, -0.31321415305137634, -0.07251352816820145, -0.543664276599884, -0.061340294778347015], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04093410074710846, -5.23315102327615e-05, -9.655486064730212e-05, -0.6033700108528137], "finish_reason": "stop"}], "metrics": {"energy": 618.9256325912479, "energy_per_token": 4.298094670772555, "time": 16.193853, "time_per_token": 0.1124573125}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date should be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -1.9612140655517578, -0.06568065285682678, -0.020496003329753876, -0.0005041282274760306, -0.00035565727739594877, -0.0003084660565946251, -0.00015209948469419032, -3.516612196108326e-05, -1.8828470706939697, -0.0004619484825525433, -0.18396960198879242, -0.00886859092861414, -0.356612890958786, -0.0018695986364036798, -0.00015793983766343445, -0.000998594332486391], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be on or before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " on", " or", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -2.5002315044403076, -0.0020276003051549196, -0.0010057396721094847, -0.014561100862920284, -0.0002592465898487717, -6.05564855504781e-05, -0.008369963616132736, -0.00039939055568538606, -7.497983460780233e-05, -0.0008649660157971084], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='B').tolist()", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -0.25204336643218994, -0.012865751050412655, -6.318072337307967e-06, -0.06622314453125, -0.8348019123077393, -0.04514077305793762, -0.7822344303131104, -0.8374619483947754, -1.1920928244535389e-07, -0.001601009746082127, -0.21268706023693085], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5633237361907959, -0.6325747966766357, -0.1783064305782318, -0.0006090931710787117, -0.0008023141999728978, -0.0007877822499722242, -0.08843250572681427, -0.16960509121418, -0.031562838703393936, -0.1842060089111328, -1.9192511899746023e-05, -0.0005868143052794039, -0.17608542740345, -0.0005169962532818317, -0.00682451855391264, -0.02356068231165409, -0.10812381654977798, -0.03668426349759102, -2.0265373677830212e-05, -0.0030197754967957735, -5.1020273531321436e-05, -7.510157047363464e-06, -1.1920928244535389e-07, -0.015533060766756535, -0.03087846376001835], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04057885333895683, -4.2437604861333966e-05, -0.00010442188795423135, -0.6960161328315735], "finish_reason": "stop"}], "metrics": {"energy": 527.2200656824109, "energy_per_token": 4.024580654064206, "time": 14.084686, "time_per_token": 0.10751668702290076}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be on or before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " on", " or", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -2.565196990966797, -0.0016031521372497082, -0.0010744519531726837, -0.009801121428608894, -0.00024434918304905295, -5.066266385256313e-05, -0.00943298451602459, -0.0003337303060106933, -8.248942322097719e-05, -0.0010750473011285067], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country, years=[start_date.year, end_date.year])", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ",", " years", "=[", "start", "_", "date", ".", "year", ",", " end", "_", "date", ".", "year", "])", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -2.129821300506592, -0.08749198913574219, -0.7668592929840088, -0.12639009952545166, -0.0001951265730895102, -4.6132929128361866e-05, -0.006313142832368612, -0.00016926287207752466, -0.04789360240101814, -0.08413179963827133, -2.3841830625315197e-06, -7.152555099310121e-07, -5.209310256759636e-05, -1.537788011773955e-05, -0.03893224149942398, -0.017883602529764175], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -0.23662270605564117, -0.012460948899388313, -6.794906312279636e-06, -0.06331966072320938, -0.4621906280517578, -0.060847196727991104, -0.1266726553440094], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() not in [5,6] and not date in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " not", " in", " [", "5", ",", "6", "]", " and", " not", " date", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5370545387268066, -0.6705171465873718, -0.12949083745479584, -0.0006910558440722525, -0.0008382858941331506, -0.0007736074039712548, -0.08453303575515747, -0.18082678318023682, -0.041357167065143585, -0.19199399650096893, -2.1934269170742482e-05, -0.00047755756531842053, -2.569303512573242, -4.362964682513848e-05, -0.9885640740394592, -0.007485200650990009, -0.0005075835506431758, -2.6383583545684814, -0.029676472768187523, -0.034101080149412155, -1.4728991985321045, -0.6718260645866394, -0.018119757995009422, -0.006781893782317638, -4.362964682513848e-05, -9.536697689327411e-06, -5.960462772236497e-07, -0.028366202488541603, -0.05145582929253578], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03608618304133415, -3.290122185717337e-05, -9.440929716220126e-05], "finish_reason": "stop"}], "metrics": {"energy": 586.3920334796906, "energy_per_token": 4.158808748082912, "time": 15.136128, "time_per_token": 0.10734842553191488}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError('Both start_date and end_date must be datetime objects')", "tokens": [" Value", "Error", "('", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "')", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -2.0855062007904053, -1.5437647104263306, -0.052441466599702835, -0.02049296535551548, -0.0005326044629327953, -0.0005171154043637216, -0.00036006642039865255, -0.00023898606013972312, -3.0397906812140718e-05, -0.17280256748199463, -0.0006227937992662191, -0.11595720052719116, -0.009485769085586071, -0.775084376335144, -0.0016231469344347715], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04650834947824478, -1.7881377516459906e-06, -5.960462772236497e-07, -0.057447660714387894, -0.0005091324565000832, 0.0, 0.0, -0.007929394952952862, -0.0013554443139582872], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00014399446081370115, -2.622600959512056e-06, -0.0017865424742922187, -0.011018149554729462, -0.035473473370075226, -0.0004080893413629383, -0.00027891082572750747, -0.10699237138032913, -0.06896769255399704, -0.1521262675523758, -0.507003128528595, -0.00023100091493688524, -8.248942322097719e-05, -0.00959829706698656, -0.00045789722935296595, -6.532455881824717e-05, -0.0005628670332953334], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08768158406019211, -0.00034517052699811757, -0.030103515833616257, -1.4305104514278355e-06, -0.00013076403411105275, -4.088794958079234e-05, -0.0019593106117099524, -0.0036934271920472383, -0.16325190663337708, -0.04192764684557915], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.0777590200304985, -6.05564855504781e-05, -0.24222475290298462, -3.814689989667386e-06, -2.264974000354414e-06, -0.00016616393986623734, -0.003941506613045931, -0.3126984238624573, -4.362964682513848e-05, -0.05813119187951088, -0.0026138208340853453, -0.00043025295599363744, -4.875540980719961e-05, -0.3240746259689331, -0.01033785380423069, -6.318072337307967e-06, -0.0658637136220932, -0.4338684678077698, -0.07886187732219696, -0.13042427599430084], "finish_reason": "stop"}, {"text": " dates[dates.dayofweek < 5] # Exclude weekends", "tokens": [" dates", "[", "dates", ".", "day", "of", "week", " <", " ", "5", "]", " #", " Ex", "clude", " weekends", "\n"], "logprobs": [-1.218773365020752, -0.8699289560317993, -1.1544240713119507, -0.00020919041708111763, -0.5239533185958862, -0.031064191833138466, -1.1444026313256472e-05, -0.04582798480987549, -0.00026854246971197426, -0.012178938835859299, -0.02246805652976036, -1.988829493522644, -0.9277493953704834, -0.024639206007122993, -0.14247249066829681, -0.24246229231357574], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03445414453744888, -4.9470632802695036e-05, -8.570780482841656e-05], "finish_reason": "stop"}], "metrics": {"energy": 485.9276047077178, "energy_per_token": 4.377726168537999, "time": 13.051307, "time_per_token": 0.11757934234234234}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date)", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ")", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -1.5695236921310425, -0.07165069133043289], "finish_reason": "stop"}, {"text": " [d.date() for d in dates if d.weekday() < 5 and d.date() not in country_holidays]", "tokens": [" [", "d", ".", "date", "()", " for", " d", " in", " dates", " if", " d", ".", "week", "day", "()", " <", " ", "5", " and", " d", ".", "date", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5370545387268066, -1.3551256656646729, -0.84781813621521, -1.374546766281128, -0.0001481661747675389, -0.013270976953208447, -0.0008311392739415169, -0.0005778788472525775, -0.0006124289939180017, -0.16469140350818634, -0.19753822684288025, -0.004028539638966322, -0.38321179151535034, -2.1815061700181104e-05, -0.001462819636799395, -0.10103113204240799, -0.0003777029050979763, -0.005258775316178799, -0.01068065408617258, -0.1465015411376953, -0.10379120707511902, -0.025976549834012985, -0.00024089295766316354, -0.003906833939254284, -7.748573807475623e-06, -0.006937582511454821, -4.827859811484814e-05, -1.311301275563892e-06, -1.1920928244535389e-07, -0.013402722775936127, -0.01747215911746025], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>def func_1(x: int):", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "def", " func", "_", "1", "(", "x", ":", " int", "):", "\n"], "logprobs": [-0.03797668591141701, -4.327203714638017e-05, -9.119095193454996e-05, -1.5685615539550781, -3.814689989667386e-06, -2.0265558760002023e-06, -1.6689286894688848e-06, -1.1444026313256472e-05, -0.10913491994142532, -1.8079547882080078, -3.616488456726074, -1.1780118942260742, -2.5693883895874023, -0.5728813409805298, -1.8622905015945435, -2.3675765991210938, -0.6677201986312866, -2.3288509845733643, -0.018329406157135963], "finish_reason": "stop"}], "metrics": {"energy": 556.8321698713304, "energy_per_token": 4.035015723705293, "time": 15.142622, "time_per_token": 0.10972914492753623}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError('Start date and end date must be valid datetime objects')", "tokens": [" Value", "Error", "('", "Start", " date", " and", " end", " date", " must", " be", " valid", " datetime", " objects", "')", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -2.0855062007904053, -2.0746350288391113, -1.641299843788147, -0.009782234206795692, -0.023526566103100777, -0.0011559001868590713, -0.09183517843484879, -0.017077302560210228, -2.3502793312072754, -0.05370702967047691, -0.013727189972996712, -0.8809242844581604, -0.0015691122971475124], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04650834947824478, -1.7881377516459906e-06, -5.960462772236497e-07, -0.057447660714387894, -0.0005091324565000832, 0.0, 0.0, -0.007929394952952862, -0.0013554443139582872], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or on the same day as end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " on", " the", " same", " day", " as", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00014399446081370115, -2.622600959512056e-06, -0.0017865424742922187, -0.011018149554729462, -0.035473473370075226, -0.0004080893413629383, -0.00027891082572750747, -0.10699237138032913, -0.06896769255399704, -0.1521262675523758, -0.9300034642219543, -2.673050880432129, -0.7469579577445984, -0.005551634822040796, -0.13347218930721283, -0.010619557462632656, -0.004853254184126854, -0.0002543602604418993, -8.642300235806033e-05, -0.008834797888994217, -0.001116724917665124, -8.844937838148326e-05, -0.001495434669777751], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08768158406019211, -0.00034517052699811757, -0.030103515833616257, -1.4305104514278355e-06, -0.00013076403411105275, -4.088794958079234e-05, -0.0019593106117099524, -0.0036934271920472383, -0.16325190663337708, -0.04192764684557915], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date)", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ")", "\n"], "logprobs": [-0.0777590200304985, -6.05564855504781e-05, -0.24222475290298462, -3.814689989667386e-06, -2.264974000354414e-06, -0.00016616393986623734, -0.003941506613045931, -1.3165359497070312, -0.019778765738010406, -1.0728830375228426e-06, -3.4570634852570947e-06, -0.024285100400447845, -0.004766767844557762, -0.00011955977242905647, -0.0004668337933253497, -3.099436753473128e-06, -2.3841855067985307e-07, -1.5192524194717407, -0.0653720572590828], "finish_reason": "stop"}, {"text": " dates[~dates.isin(country_holidays)]", "tokens": [" dates", "[", "~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", ")]", "\n"], "logprobs": [-1.4370577335357666, -0.6386505365371704, -0.5708998441696167, -0.052581384778022766, -6.985420623095706e-05, -0.12325578927993774, -0.02318965643644333, -0.32061389088630676, -0.0001411338453181088, -3.135155202471651e-05, -7.152555099310121e-07, -0.3709755837917328, -0.35608574748039246], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.037890952080488205, -3.242440288886428e-05, -6.5205356804654e-05, -0.640802264213562], "finish_reason": "stop"}], "metrics": {"energy": 498.9268839187623, "energy_per_token": 4.415282158573118, "time": 13.467719, "time_per_token": 0.11918335398230089}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -1.3397414684295654, -0.19737081229686737, -0.007113250438123941, -0.001997858053073287, -0.0003420721332076937, -6.210611172718927e-05, -0.0071901846677064896, -0.0004204819560982287, -5.507317473529838e-05, -0.0007110689766705036], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date, end_date, freq='B', closed='left')", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "'", ",", " closed", "='", "left", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -1.4319214820861816, -0.00025018901214934886, -2.7418097943154862e-06, -0.00010346830822527409, -0.0004142856632824987, -0.010856609791517258, -0.27006831765174866, -0.0002273062855238095, -0.05935408174991608, -0.002826150506734848, -0.00013326710904948413, -4.768258077092469e-05, -0.6168564558029175, -0.14470206201076508, -0.00017486473370809108, -0.10090602189302444, -0.30972692370414734, -1.6668407917022705, -0.0006210067658685148, -0.4845210015773773, -0.08164231479167938, -1.4429434537887573, -0.09329027682542801, -0.5197705030441284], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0988926887512207, -0.004702105652540922], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.02831440418958664, -4.434487345861271e-05, -8.809178689261898e-05, -0.6916954517364502], "finish_reason": "stop"}], "metrics": {"energy": 471.6446076774595, "energy_per_token": 4.367079700717217, "time": 12.622119, "time_per_token": 0.11687147222222222}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -1.3397414684295654, -0.19737081229686737, -0.007113250438123941, -0.001997858053073287, -0.0003420721332076937, -6.210611172718927e-05, -0.0071901846677064896, -0.0004204819560982287, -5.507317473529838e-05, -0.0007110689766705036], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='B')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -0.23662270605564117, -0.012460948899388313, -6.794906312279636e-06, -0.06331966072320938, -1.0491771697998047, -0.045255739241838455, -0.8441191911697388], "finish_reason": "stop"}, {"text": " dates[(dates.weekday != 5) & (dates.weekday != 6) & ~dates.isin(country_holidays)]", "tokens": [" dates", "[(", "dates", ".", "week", "day", " ", "!", "=", " ", "5", ")", " &", " (", "dates", ".", "week", "day", " ", "!", "=", " ", "6", ")", " &", " ~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", ")]", "\n"], "logprobs": [-1.4911179542541504, -0.67341148853302, -0.013376845978200436, -0.00020418466010596603, -0.42086896300315857, -1.0609570381348021e-05, -2.6020939350128174, -7.152555099310121e-07, -5.125986263010418e-06, -0.0009662011871114373, -0.03705548867583275, -0.00044550508027896285, -0.0907130166888237, -0.03342766687273979, -0.0013373488327488303, -4.494089080253616e-05, -8.415821503149346e-05, -2.3841855067985307e-07, -0.0002530493075028062, 0.0, -8.344646857949556e-07, -0.0007826602668501437, -0.00035124807618558407, -0.031195810064673424, -0.021422307938337326, -1.5598872900009155, -0.5874954462051392, -3.576214658096433e-05, -0.0003480305604171008, -0.0008069596369750798, -0.024820629507303238, -3.58813522325363e-05, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.01559514831751585, -0.42895469069480896], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03500083088874817, -5.364274329622276e-05, -8.308542601298541e-05, -0.6580532193183899], "finish_reason": "stop"}], "metrics": {"energy": 542.7183014221192, "energy_per_token": 4.273372452142671, "time": 14.092216, "time_per_token": 0.11096233070866142}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.9989899396896362, -0.002450560452416539, -0.0001512651506345719, -0.0015147175872698426], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -1.150791883468628, -0.018263742327690125, -1.311301275563892e-06, -4.768360213347478e-06, -0.02424624003469944, -0.004211960360407829, -0.0001736728590913117, -0.00045599075383506715, -3.814689989667386e-06, -2.3841855067985307e-07, -0.27665096521377563, -0.02028902806341648, -3.4570634852570947e-06, -0.056098803877830505, -0.40284496545791626, -0.09261167794466019, -0.09209364652633667], "finish_reason": "stop"}, {"text": " dates.to_pydatetime().tolist()", "tokens": [" dates", ".", "to", "_", "py", "datetime", "()", ".", "tol", "ist", "()", "\n"], "logprobs": [-1.2438685894012451, -2.995260715484619, -0.7179833054542542, -4.172316494077677e-06, -0.783314049243927, -0.09007243067026138, -0.0023820616770535707, -0.19347840547561646, -0.005434026941657066, 0.0, -0.002241124864667654, -0.02310672029852867], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>\"\"\"", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.036400385200977325, -5.2927523938706145e-05, -9.285972191719338e-05, -1.5938835144042969, -3.4570634852570947e-06, -2.264974000354414e-06, -1.9073468138230965e-06, -1.3351351299206726e-05, -2.2578916549682617, -0.002887367969378829, -0.006522556766867638, -0.00026592056383378804, -0.41748037934303284], "finish_reason": "stop"}], "metrics": {"energy": 477.8668247776032, "energy_per_token": 4.191814252435115, "time": 13.0345, "time_per_token": 0.11433771929824561}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be on or before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " on", " or", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -2.565196990966797, -0.0016031521372497082, -0.0010744519531726837, -0.009801121428608894, -0.00024434918304905295, -5.066266385256313e-05, -0.00943298451602459, -0.0003337303060106933, -8.248942322097719e-05, -0.0010750473011285067], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq=\"D\").tolist()", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "=", "\"", "D", "\"", ")", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -0.23662270605564117, -0.012460948899388313, -6.794906312279636e-06, -2.8310770988464355, -0.047866784036159515, -0.36052030324935913, -4.160317621426657e-05, -0.08118484914302826, -1.9773950576782227, -1.035114049911499, -1.1920928244535389e-07, -0.0026628058403730392, -0.04307904466986656], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.5370545387268066, -2.5170862674713135], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03797668591141701, -4.327203714638017e-05, -9.119095193454996e-05], "finish_reason": "stop"}], "metrics": {"energy": 467.32879940223705, "energy_per_token": 4.367558872918103, "time": 12.421625, "time_per_token": 0.11608995327102804}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be on or before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " on", " or", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -2.565196990966797, -0.0016031521372497082, -0.0010744519531726837, -0.009801121428608894, -0.00024434918304905295, -5.066266385256313e-05, -0.00943298451602459, -0.0003337303060106933, -8.248942322097719e-05, -0.0010750473011285067], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country, years=[start_date.year, end_date.year])", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ",", " years", "=[", "start", "_", "date", ".", "year", ",", " end", "_", "date", ".", "year", "])", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -2.129821300506592, -0.08749198913574219, -0.7668592929840088, -0.12639009952545166, -0.0001951265730895102, -4.6132929128361866e-05, -0.006313142832368612, -0.00016926287207752466, -0.04789360240101814, -0.08413179963827133, -2.3841830625315197e-06, -7.152555099310121e-07, -5.209310256759636e-05, -1.537788011773955e-05, -0.03893224149942398, -0.017883602529764175], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date, end_date, closed='both')  # Include both endpoints", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " closed", "='", "both", "')", "  ", "#", " Include", " both", " endpoints", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -1.4319214820861816, -0.00025018901214934886, -2.7418097943154862e-06, -0.00010346830822527409, -0.0004142856632824987, -0.010856609791517258, -0.27006831765174866, -0.0002273062855238095, -0.05935408174991608, -0.002826150506734848, -0.00013326710904948413, -4.768258077092469e-05, -0.6168564558029175, -2.980648994445801, -0.18002866208553314, -0.10847340524196625, -0.02749212086200714, -2.848841667175293, -0.0014918637461960316, -2.77864408493042, -1.5122277736663818, -2.5442495346069336, -0.30307698249816895], "finish_reason": "stop"}, {"text": " dates[(dates.weekday < 5) & (~dates.isin(country_holidays))]", "tokens": [" dates", "[(", "dates", ".", "week", "day", " <", " ", "5", ")", " &", " (~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", "))", "]", "\n"], "logprobs": [-1.284111499786377, -0.7880591154098511, -0.015962665900588036, -0.00017093151109293103, -0.3214206397533417, -1.4066597032069694e-05, -0.28645405173301697, -0.00026794656878337264, -0.040743906050920486, -0.01388850249350071, -0.028540579602122307, -0.1409289687871933, -0.017224250361323357, -0.00013147920253686607, -0.0322604775428772, -0.0006494796834886074, -0.014749765396118164, -2.7417760065873154e-05, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0075277951546013355, -0.00564267672598362, -0.34815534949302673], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.02831440418958664, -4.434487345861271e-05, -8.809178689261898e-05, -0.6916954517364502], "finish_reason": "stop"}], "metrics": {"energy": 566.3557608165742, "energy_per_token": 4.290573945580107, "time": 14.919081, "time_per_token": 0.11302334090909091}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date.date(), end_date.date())", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ".", "date", "()", ",", " end", "_", "date", ".", "date", "())", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -2.9212868213653564, -0.2830060124397278, -7.676783570786938e-05, -0.0040494357235729694, -0.004091701935976744, -0.0004430027911439538, -3.5523738915799186e-05, -0.004744106903672218, -3.433168603805825e-05, -0.25513535737991333, -0.10046407580375671], "finish_reason": "stop"}, {"text": " [d.to_pydatetime() for d in dates if d.weekday() < 5 and d.to_pydatetime() not in country_holidays]", "tokens": [" [", "d", ".", "to", "_", "py", "datetime", "()", " for", " d", " in", " dates", " if", " d", ".", "week", "day", "()", " <", " ", "5", " and", " d", ".", "to", "_", "py", "datetime", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.6430410742759705, -1.3122749328613281, -1.1563583612442017, -0.30840930342674255, -2.4437606043647975e-05, -0.00013457823661156, -0.0005026984144933522, -0.0006385194719769061, -0.12534530460834503, -0.0012435331009328365, -0.0005726366653107107, -0.0013055619783699512, -0.3263852894306183, -0.18145278096199036, -0.0015810144832357764, -0.19320546090602875, -2.90866428258596e-05, -0.031083490699529648, -0.12141469866037369, -0.0004256058018654585, -0.0064792088232934475, -0.020252931863069534, -0.26812613010406494, -0.19470083713531494, -0.2379104495048523, -1.1324817933200393e-05, -0.00037055302527733147, -0.0007239343249239028, -0.00025876989820972085, -0.14203302562236786, -1.6212332411669195e-05, -0.013740358874201775, -2.6702524337451905e-05, -3.6954811548639555e-06, -2.3841855067985307e-07, -0.018496764823794365, -0.014878380112349987], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.04074516519904137, -3.4689302992774174e-05, -8.737658936297521e-05, -0.7041652202606201], "finish_reason": "stop"}], "metrics": {"energy": 566.4639745912552, "energy_per_token": 4.196029441416705, "time": 14.945727, "time_per_token": 0.11070908888888889}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -1.3397414684295654, -0.19737081229686737, -0.007113250438123941, -0.001997858053073287, -0.0003420721332076937, -6.210611172718927e-05, -0.0071901846677064896, -0.0004204819560982287, -5.507317473529838e-05, -0.0007110689766705036], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -1.150791883468628, -0.018263742327690125, -1.311301275563892e-06, -4.768360213347478e-06, -0.02424624003469944, -0.004211960360407829, -0.0001736728590913117, -0.00045599075383506715, -3.814689989667386e-06, -2.3841855067985307e-07, -0.27665096521377563, -0.02028902806341648, -3.4570634852570947e-06, -0.056098803877830505, -0.40284496545791626, -0.09261167794466019, -0.09209364652633667], "finish_reason": "stop"}, {"text": " dates[(dates.weekday != 5) & (dates.weekday != 6) & (~dates.isin(country_holidays))].to_list()", "tokens": [" dates", "[(", "dates", ".", "week", "day", " ", "!", "=", " ", "5", ")", " &", " (", "dates", ".", "week", "day", " ", "!", "=", " ", "6", ")", " &", " (~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", "))", "]", ".", "to", "_", "list", "()", "\n"], "logprobs": [-1.2438685894012451, -0.7994179129600525, -0.012264786288142204, -0.00021669900161214173, -0.3430965840816498, -8.583032467868179e-06, -2.3161916732788086, -8.344646857949556e-07, -5.364403477869928e-06, -0.000979658798314631, -0.0460454486310482, -0.00031275625224225223, -0.10747887194156647, -0.03151236101984978, -0.0012459142599254847, -4.053033626405522e-05, -8.201262971851975e-05, -3.576278118089249e-07, -0.00015853578224778175, 0.0, -7.152555099310121e-07, -0.0007664603181183338, -0.00041559641249477863, -0.03298381343483925, -0.016714883968234062, -0.305637001991272, -0.008204448036849499, -7.366862701019272e-05, -0.00856984592974186, -0.0009047467028722167, -0.014926415868103504, -2.729855441430118e-05, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.010568838566541672, -0.005179676692932844, -1.5968137979507446, -0.3722941279411316, -1.1920922133867862e-06, -0.03421409800648689, -0.0018678138731047511, -0.013881566002964973], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.036400385200977325, -5.2927523938706145e-05, -9.285972191719338e-05], "finish_reason": "stop"}], "metrics": {"energy": 604.1354470424659, "energy_per_token": 4.442172404724014, "time": 15.144239, "time_per_token": 0.11135469852941177}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date, end_date).to_pydatetime().tolist()", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ")", ".", "to", "_", "py", "datetime", "()", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -1.4319214820861816, -0.00025018901214934886, -2.7418097943154862e-06, -0.00010346830822527409, -0.0004142856632824987, -0.010856609791517258, -0.27006831765174866, -0.0002273062855238095, -0.05935408174991608, -0.002826150506734848, -0.00013326710904948413, -4.768258077092469e-05, -0.796721339225769, -1.1953400373458862, -0.3938834071159363, -1.4305104514278355e-06, -0.10646941512823105, -0.012766066007316113, -0.00018344627460464835, -0.9381729364395142, -0.010378792881965637, 0.0, -0.0005131834768690169, -0.036824796348810196], "finish_reason": "stop"}, {"text": " dates[~dates.isin(country_holidays)].to_list()", "tokens": [" dates", "[", "~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", ")]", ".", "to", "_", "list", "()", "\n"], "logprobs": [-1.284111499786377, -0.7102698087692261, -0.7126004099845886, -0.04643802344799042, -6.09140915912576e-05, -0.07073968648910522, -0.021736718714237213, -0.2728883922100067, -0.00012659224739763886, -2.5033637939486653e-05, -7.152555099310121e-07, -0.4107150435447693, -1.6556469202041626, -0.2499467134475708, -3.814689989667386e-06, -0.13797436654567719, -0.012009340338408947, -0.03242690861225128], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.02831440418958664, -4.434487345861271e-05, -8.809178689261898e-05, -0.6916954517364502], "finish_reason": "stop"}], "metrics": {"energy": 484.16856554412846, "energy_per_token": 4.322933620929718, "time": 13.241343, "time_per_token": 0.11822627678571429}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.9989899396896362, -0.002450560452416539, -0.0001512651506345719, -0.0015147175872698426], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country, years=[start_date.year, end_date.year])", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ",", " years", "=[", "start", "_", "date", ".", "year", ",", " end", "_", "date", ".", "year", "])", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -2.129821300506592, -0.08749198913574219, -0.7668592929840088, -0.12639009952545166, -0.0001951265730895102, -4.6132929128361866e-05, -0.006313142832368612, -0.00016926287207752466, -0.04789360240101814, -0.08413179963827133, -2.3841830625315197e-06, -7.152555099310121e-07, -5.209310256759636e-05, -1.537788011773955e-05, -0.03893224149942398, -0.017883602529764175], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date.strftime(\"%Y-%m-%d\"), end_date.strftime(\"%Y-%m-%d\"))", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "\"", ")", ",", " end", "_", "date", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "\"", "))", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -1.4319214820861816, -0.00025018901214934886, -2.7418097943154862e-06, -0.00010346830822527409, -0.0004142856632824987, -0.010856609791517258, -0.27006831765174866, -0.0002273062855238095, -2.8650600910186768, -0.9084053635597229, -3.0397906812140718e-05, -1.0999904870986938, -0.03921803832054138, -0.0018970841774716973, -0.09971286356449127, -0.11217275261878967, -0.0019884591456502676, -9.190614218823612e-05, -0.001911837956868112, -0.020700599998235703, -0.00025876989820972085, -0.0019116000039502978, -0.028737861663103104, -0.00013910756388213485, -1.0490362910786644e-05, -0.0007429938414134085, -7.223821739898995e-05, -1.1920928244535389e-07, -0.0015804193681105971, -0.0008185135084204376, -3.802703940891661e-05, -4.172238186583854e-05, -0.00012385078298393637, -3.4689302992774174e-05, -5.495397272170521e-05, -5.722029527532868e-06, -0.0002127659390680492, -0.5259637236595154, -0.49143439531326294], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-2.0988926887512207, -0.004702105652540922], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.02831440418958664, -4.434487345861271e-05, -8.809178689261898e-05], "finish_reason": "stop"}], "metrics": {"energy": 596.7880510835643, "energy_per_token": 4.420652230248624, "time": 15.354738, "time_per_token": 0.1137388}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be valid datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " valid", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -2.309288501739502, -0.04402961954474449, -0.011899675242602825, -0.6337051391601562, -0.0027542298194020987, -0.00014244495832826942, -0.0010377742582932115], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04682338982820511, -2.3841830625315197e-06, -5.960462772236497e-07, -0.06081163510680199, -0.00039939055568538606, 0.0, 0.0, -0.009609631262719631, -0.0010084786918014288], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00013791563105769455, -2.9802276912960224e-06, -0.0018561530159786344, -0.009546462446451187, -0.03707616403698921, -0.00041547726141288877, -0.0002535260282456875, -0.1056092232465744, -0.06926828622817993, -0.16371767222881317, -0.40639546513557434, -0.000205018965061754, -6.270212179515511e-05, -0.009319847449660301, -0.000444551813416183, -7.402622577501461e-05, -0.0006232702871784568], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.09104480594396591, -0.0003936707798857242, -0.027087165042757988, -1.7881377516459906e-06, -0.00016592556494288146, -4.207999518257566e-05, -0.001745249843224883, -0.003578570205718279, -0.19646620750427246, -0.04563575237989426], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D').to_pydatetime()", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", ".", "to", "_", "py", "datetime", "()", "\n"], "logprobs": [-0.09554274380207062, -7.903263758635148e-05, -0.29067981243133545, -4.6491513785440475e-06, -3.2186455882765586e-06, -0.00020013237372040749, -0.006414064671844244, -0.3368331789970398, -6.139089964563027e-05, -0.053188223391771317, -0.002837443258613348, -0.000336590368533507, -5.113947918289341e-05, -0.31228092312812805, -0.015336442738771439, -6.437280717364047e-06, -0.05565103515982628, -0.6138812899589539, -0.0629824623465538, -2.523937702178955, -0.5401632189750671, -1.4305104514278355e-06, -0.3247385025024414, -0.004310008604079485, -0.00020692592079285532, -0.33786556124687195], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.7433772087097168, -0.6021630764007568, -0.11278656870126724, -0.000486970558995381, -0.0009085579658858478, -0.0008724696817807853, -0.08187684416770935, -0.18489369750022888, -0.026267701759934425, -0.23251181840896606, -1.4305012882687151e-05, -0.0005105622112751007, -0.14100506901741028, -0.00038985759601928294, -0.0063107735477387905, -0.015776460990309715, -0.12465812265872955, -0.030477536842226982, -1.4305012882687151e-05, -0.003573937574401498, -2.8132995794294402e-05, -7.510157047363464e-06, -2.3841855067985307e-07, -0.017315641045570374, -0.029899677261710167], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.027238331735134125, -2.9444261599564925e-05, -9.572047565598041e-05], "finish_reason": "stop"}], "metrics": {"energy": 512.82010543251, "energy_per_token": 3.9753496545155813, "time": 13.662721, "time_per_token": 0.10591256589147287}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.9989899396896362, -0.002450560452416539, -0.0001512651506345719, -0.0015147175872698426], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date, freq='B').to_pydatetime()", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "B", "')", ".", "to", "_", "py", "datetime", "()", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -1.150791883468628, -0.018263742327690125, -1.311301275563892e-06, -4.768360213347478e-06, -0.02424624003469944, -0.004211960360407829, -0.0001736728590913117, -0.00045599075383506715, -3.814689989667386e-06, -2.3841855067985307e-07, -0.27665096521377563, -0.02028902806341648, -3.4570634852570947e-06, -0.056098803877830505, -1.155515193939209, -0.08649593591690063, -0.7097184658050537, -0.41851383447647095, -2.0265558760002023e-06, -0.4194628596305847, -0.0029142312705516815, -9.619726915843785e-05, -0.5517936944961548], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.6553637981414795, -0.7344806790351868, -0.17150767147541046, -0.0004961451631970704, -0.0008112476789392531, -0.0007874249131418765, -0.08306228369474411, -0.20163922011852264, -0.040824245661497116, -0.20379957556724548, -1.2755313036905136e-05, -0.0005298641044646502, -0.1437070071697235, -0.0003748429589904845, -0.007148995995521545, -0.02203785441815853, -0.12323945760726929, -0.021215759217739105, -1.823885577323381e-05, -0.004005743190646172, -3.838465272565372e-05, -9.417489309271332e-06, -3.576278118089249e-07, -0.012252657674252987, -0.028944021090865135], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>def task_func(text='Hi there!'):", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "text", "='", "Hi", " there", "!", "')", ":", "\n"], "logprobs": [-0.03169034793972969, -4.684815212385729e-05, -0.00010013079008786008, -1.6380069255828857, -3.933898824470816e-06, -2.0265558760002023e-06, -1.6689286894688848e-06, -8.34461570775602e-06, -0.09690005332231522, -1.705501914024353, -0.696551501750946, -0.04471258074045181, -0.1630116105079651, -0.19908781349658966, -3.501375913619995, -1.920384407043457, -4.124656677246094, -3.1013689041137695, -0.08643776923418045, -0.49067509174346924, -0.019822126254439354, -0.009170790202915668], "finish_reason": "stop"}], "metrics": {"energy": 552.5351312389374, "energy_per_token": 3.891092473513644, "time": 14.716777, "time_per_token": 0.10363927464788733}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -1.150791883468628, -0.018263742327690125, -1.311301275563892e-06, -4.768360213347478e-06, -0.02424624003469944, -0.004211960360407829, -0.0001736728590913117, -0.00045599075383506715, -3.814689989667386e-06, -2.3841855067985307e-07, -0.27665096521377563, -0.02028902806341648, -3.4570634852570947e-06, -0.056098803877830505, -0.40284496545791626, -0.09261167794466019, -0.09209364652633667], "finish_reason": "stop"}, {"text": " dates[(dates.dayofweek < 5) & (~dates.isin(country_holidays))]", "tokens": [" dates", "[(", "dates", ".", "day", "of", "week", " <", " ", "5", ")", " &", " (~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", "))", "]", "\n"], "logprobs": [-1.2438685894012451, -0.7994179129600525, -0.012264786288142204, -0.00021669900161214173, -1.264414668083191, -0.024320237338542938, -1.3708974620385561e-05, -0.038006871938705444, -0.00039867559098638594, -0.137176513671875, -0.01285068690776825, -0.033013228327035904, -0.16860179603099823, -0.01659705676138401, -0.00024256148026324809, -0.008886195719242096, -0.000601349223870784, -0.01224782969802618, -2.8132995794294402e-05, -2.861018856492592e-06, -2.3841855067985307e-07, -0.007811947725713253, -0.008266518823802471, -0.3649137318134308], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>def task_func(a, b):", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "a", ",", " b", "):", "\n"], "logprobs": [-0.036400385200977325, -5.2927523938706145e-05, -9.285972191719338e-05, -1.5938835144042969, -3.4570634852570947e-06, -2.264974000354414e-06, -1.9073468138230965e-06, -1.3351351299206726e-05, -0.11051661521196365, -1.6831187009811401, -0.6284618377685547, -0.0543200746178627, -0.2100663185119629, -0.17544035613536835, -2.6195437908172607, -0.9425610303878784, -0.1673869490623474, -0.3477766513824463, -0.006729913409799337], "finish_reason": "stop"}], "metrics": {"energy": 568.3530894298558, "energy_per_token": 4.338573201754625, "time": 14.939174, "time_per_token": 0.11403949618320611}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date should be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " should", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -2.4345312118530273, -0.009728638455271721, -0.15926115214824677, -0.018859241157770157, -0.6970987915992737, -0.00022635281493421644, -0.0012522244360297918], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04759015515446663, -2.50339189733495e-06, -7.152555099310121e-07, -0.05133659020066261, -0.00044610086479224265, 0.0, 0.0, -0.00721787940710783, -0.0010081215295940638], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00014983485743869096, -3.576272320060525e-06, -0.0017639329889789224, -0.009089519269764423, -0.026740774512290955, -0.00042012447374872863, -0.0002602000313345343, -0.10777699202299118, -0.09521797299385071, -0.1477249264717102, -0.3366064131259918, -0.0001821352052502334, -6.83045873302035e-05, -0.009227722883224487, -0.00040570611599832773, -7.60526381782256e-05, -0.0007862337515689433], "finish_reason": "stop"}, {"text": " pd.DataFrame(holidays.country_holidays(country, years=pd.date_range(start_date, end_date)).reset_index())", "tokens": [" pd", ".", "DataFrame", "(", "h", "olidays", ".", "country", "_", "h", "olidays", "(", "country", ",", " years", "=", "pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", "))", ".", "reset", "_", "index", "())", "\n"], "logprobs": [-3.008197069168091, -6.592056161025539e-05, -0.2701072692871094, -0.20316514372825623, -0.34458792209625244, -0.000105375460407231, -0.002845288719981909, -0.08752759546041489, -7.009260298218578e-05, -0.001304133329540491, -5.221230458118953e-05, -0.00258861412294209, -0.010745402425527573, -0.28246763348579407, -0.25871849060058594, -0.4654417634010315, -3.594029664993286, -6.568216485902667e-05, -0.37932589650154114, -2.062299427052494e-05, -2.372236667724792e-05, -0.0011244647903367877, -0.07140986621379852, -0.10639160871505737, -3.707340147229843e-05, -0.06452248245477676, -0.02441214583814144, -4.60137271147687e-05, -4.95898348162882e-05, -1.905779480934143, -0.17013759911060333, -1.4344104528427124, -3.576272320060525e-06, -1.5497195136049413e-06, -0.25244539976119995, -0.18851043283939362], "finish_reason": "stop"}, {"text": " pd.date_range(start=start_date, end=end_date, freq='D', closed='both')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "D", "'", ",", " closed", "='", "both", "')", "\n"], "logprobs": [-0.08868693560361862, -5.972207145532593e-05, -0.32125386595726013, -5.006777428206988e-06, -2.50339189733495e-06, -0.00016234986833296716, -0.005726242903620005, -1.2479290962219238, -0.019016101956367493, -1.1920922133867862e-06, -4.887569048150908e-06, -0.027781672775745392, -0.0038638473488390446, -0.0001720042055239901, -0.00043704494601115584, -3.6954811548639555e-06, -2.3841855067985307e-07, -0.23801428079605103, -0.026226943358778954, -4.768360213347478e-06, -0.05827324092388153, -0.4407046139240265, -2.4885668754577637, -0.0005460678366944194, -1.1399474143981934, -0.09447039663791656, -0.4787438213825226, -0.028336768969893456, -0.12462834268808365], "finish_reason": "stop"}, {"text": " dates[(dates.dayofweek < 5) & (~dates.isin(country_holidays))]", "tokens": [" dates", "[(", "dates", ".", "day", "of", "week", " <", " ", "5", ")", " &", " (~", "dates", ".", "isin", "(", "country", "_", "h", "olidays", "))", "]", "\n"], "logprobs": [-1.324476957321167, -0.6764238476753235, -0.012649421580135822, -0.00018773700867313892, -1.2718544006347656, -0.01951424404978752, -1.4424220353248529e-05, -0.03598177060484886, -0.0005914607318118215, -0.1817052960395813, -0.016048308461904526, -0.055651262402534485, -0.1466122269630432, -0.01655789650976658, -0.00018809456378221512, -0.006534281652420759, -0.0008415018673986197, -0.016618279740214348, -3.1470757676288486e-05, -2.7418097943154862e-06, -2.3841855067985307e-07, -0.007923362776637077, -0.006197757087647915, -0.34986403584480286], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03367066755890846, -3.45700973412022e-05, -9.154854342341423e-05, -0.6961039900779724], "finish_reason": "stop"}], "metrics": {"energy": 643.3638216438289, "energy_per_token": 4.124127061819416, "time": 17.039442, "time_per_token": 0.10922719230769232}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"Start and end date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Start", " and", " end", " date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -2.856752395629883, -0.2624638080596924, -0.035827431827783585, -1.139492392539978, -0.11891874670982361, -0.005420629400759935, -0.17407456040382385, -0.012122644111514091, -0.48136794567108154, -0.002931585069745779, -0.0002464944263920188, -0.0017376337200403214], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -0.295091450214386, -0.00016819016309455037, -7.1403817855753e-05, -0.009593102149665356, -0.0004314445541240275, -6.01988795096986e-05, -0.000536655425094068], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -0.25204336643218994, -0.012865751050412655, -6.318072337307967e-06, -0.06622314453125, -0.6158154010772705, -0.05680646002292633, -0.11267729848623276], "finish_reason": "stop"}, {"text": " [d.to_pydatetime() for d in dates if d.weekday() < 5 and d.to_pydatetime() not in country_holidays]", "tokens": [" [", "d", ".", "to", "_", "py", "datetime", "()", " for", " d", " in", " dates", " if", " d", ".", "week", "day", "()", " <", " ", "5", " and", " d", ".", "to", "_", "py", "datetime", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5633237361907959, -1.366926908493042, -0.9995822906494141, -0.3562083840370178, -1.811964830267243e-05, -0.00021872512297704816, -0.000510204816237092, -0.0005277194431982934, -0.13837221264839172, -0.001042894902639091, -0.0006003961316309869, -0.001434131758287549, -0.3546827733516693, -0.20283624529838562, -0.0012503195321187377, -0.16573399305343628, -2.634490556374658e-05, -0.014599048532545567, -0.12617827951908112, -0.00042655906872823834, -0.00750815449282527, -0.01601475663483143, -0.29195019602775574, -0.2616210877895355, -0.2765235900878906, -2.8013790142722428e-05, -0.0005510718910954893, -0.00046492734691128135, -0.0002324311062693596, -0.16770504415035248, -2.2053474822314456e-05, -0.022617941722273827, -2.8729025871143676e-05, -4.0531076592742465e-06, -1.1920928244535389e-07, -0.017834069207310677, -0.017713680863380432], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.039545126259326935, -3.7431014789035544e-05, -0.0001110968878492713, -0.6696186065673828], "finish_reason": "stop"}], "metrics": {"energy": 561.4104466438293, "energy_per_token": 4.253109444271434, "time": 14.9352, "time_per_token": 0.11314545454545455}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be valid datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " valid", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -2.309288501739502, -0.04402961954474449, -0.011899675242602825, -0.6337051391601562, -0.0027542298194020987, -0.00014244495832826942, -0.0010377742582932115], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04682338982820511, -2.3841830625315197e-06, -5.960462772236497e-07, -0.06081163510680199, -0.00039939055568538606, 0.0, 0.0, -0.009609631262719631, -0.0010084786918014288], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00013791563105769455, -2.9802276912960224e-06, -0.0018561530159786344, -0.009546462446451187, -0.03707616403698921, -0.00041547726141288877, -0.0002535260282456875, -0.1056092232465744, -0.06926828622817993, -0.16371767222881317, -0.40639546513557434, -0.000205018965061754, -6.270212179515511e-05, -0.009319847449660301, -0.000444551813416183, -7.402622577501461e-05, -0.0006232702871784568], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.09104480594396591, -0.0003936707798857242, -0.027087165042757988, -1.7881377516459906e-06, -0.00016592556494288146, -4.207999518257566e-05, -0.001745249843224883, -0.003578570205718279, -0.19646620750427246, -0.04563575237989426], "finish_reason": "stop"}, {"text": " pd.bdate_range(start=start_date, end=end_date, freq='B').to_pydatetime().tolist()", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "=", "start", "_", "date", ",", " end", "=", "end", "_", "date", ",", " fre", "q", "='", "B", "')", ".", "to", "_", "py", "datetime", "()", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.09554274380207062, -7.903263758635148e-05, -1.4160231351852417, -0.0002609150833450258, -2.50339189733495e-06, -0.0001225396408699453, -0.00047124247066676617, -0.013349438086152077, -1.4371968507766724, -0.026532534509897232, -2.861018856492592e-06, -7.152555099310121e-07, -0.033957745879888535, -0.007944532670080662, -0.00013493580627255142, -0.0006272017490118742, -6.079655122448457e-06, -3.2186455882765586e-06, -0.6854873299598694, -0.3944404721260071, -7.354942499659956e-05, -0.08933179080486298, -0.5341637134552002, -0.27344608306884766, -1.0025289058685303, -0.556631326675415, -1.1920922133867862e-06, -0.2047494500875473, -0.004491835366934538, -0.0004223884898237884, -1.0699288845062256, -0.00374259683303535, 0.0, -0.00046719127567484975, -0.03664369881153107], "finish_reason": "stop"}, {"text": " [date.date() for date in dates if date.date() in dates.bday and date.date() not in country_holidays]", "tokens": [" [", "date", ".", "date", "()", " for", " date", " in", " dates", " if", " date", ".", "date", "()", " in", " dates", ".", "b", "day", " and", " date", ".", "date", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.568671703338623, -0.5410320162773132, -1.7271558046340942, -1.218809962272644, -0.0001618731184862554, -0.015613339841365814, -0.0004292996891308576, -0.0007282227743417025, -0.001379610737785697, -0.10312905162572861, -0.2944925129413605, -0.005906390026211739, -1.5302512645721436, -7.915183232398704e-05, -2.803800582885742, -1.715806484222412, -0.5580829381942749, -3.3655407428741455, -0.0520133338868618, -0.30806270241737366, -0.07601269334554672, -0.15522202849388123, -0.021171992644667625, -0.000359351426595822, -0.007037967909127474, -2.6702524337451905e-05, -0.006276301573961973, -3.731181277544238e-05, -5.8412379075889476e-06, -1.1920928244535389e-07, -0.01074740756303072, -0.009737255983054638], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.031209329143166542, -4.2676016164477915e-05, -9.417090768693015e-05, -0.7103536128997803], "finish_reason": "stop"}], "metrics": {"energy": 642.982441117286, "energy_per_token": 4.403989322721137, "time": 16.419476, "time_per_token": 0.11246216438356164}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or not isinstance(end_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " not", " isinstance", "(", "end", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -1.038726806640625, -0.0011479223612695932, -5.054346183896996e-05, -0.004318317398428917, -3.576278118089249e-07, -5.960462772236497e-07, -8.40390202938579e-05, -0.0011157722910866141, -0.039300911128520966, -0.002381704980507493], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -0.23662270605564117, -0.012460948899388313, -6.794906312279636e-06, -0.06331966072320938, -0.4621906280517578, -0.060847196727991104, -0.1266726553440094], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5370545387268066, -0.6705171465873718, -0.12949083745479584, -0.0006910558440722525, -0.0008382858941331506, -0.0007736074039712548, -0.08453303575515747, -0.18082678318023682, -0.041357167065143585, -0.19199399650096893, -2.1934269170742482e-05, -0.00047755756531842053, -0.1705074906349182, -0.00043811736395582557, -0.00799183826893568, -0.018598221242427826, -0.10401931405067444, -0.02652464061975479, -1.585470999998506e-05, -0.004031151533126831, -3.123234637314454e-05, -7.271740287251305e-06, -2.3841855067985307e-07, -0.015619794838130474, -0.02800031751394272], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03906511887907982, -3.540453326422721e-05, -9.16677454370074e-05, -0.7279306650161743], "finish_reason": "stop"}], "metrics": {"energy": 491.57094691944116, "energy_per_token": 3.996511763572692, "time": 13.255778, "time_per_token": 0.10777055284552844}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError('start_date and end_date must be datetime objects')", "tokens": [" Value", "Error", "('", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "')", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -2.0855062007904053, -0.5710073709487915, -0.004283182788640261, -0.000288087350782007, -0.009936157613992691, -0.008906636387109756, -0.000432278640801087, -4.303362584323622e-05, -0.12108851224184036, -0.012445996515452862, -0.12338108569383621, -0.016922833397984505, -0.24369534850120544, -0.0014621054287999868], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04650834947824478, -1.7881377516459906e-06, -5.960462772236497e-07, -0.057447660714387894, -0.0005091324565000832, 0.0, 0.0, -0.007929394952952862, -0.0013554443139582872], "finish_reason": "stop"}, {"text": " ValueError(\"start_date cannot be after end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " cannot", " be", " after", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00014399446081370115, -2.622600959512056e-06, -0.0017865424742922187, -0.011018149554729462, -0.035473473370075226, -0.0004080893413629383, -0.00027891082572750747, -2.3792855739593506, -0.009239298291504383, -0.08314763009548187, -0.0027317609637975693, -0.0002661589242052287, -7.259582343976945e-05, -0.017722113057971, -0.0009893052047118545, -6.770858453819528e-05, -0.0007284610182978213], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08215238898992538, -0.00046993177966214716, -0.04522942006587982, -1.6689286894688848e-06, -9.941560711013153e-05, -5.9960475482512265e-05, -0.0021803434938192368, -0.004788597580045462, -0.1994229257106781, -0.03975708782672882], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date)", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ")", "\n"], "logprobs": [-0.07437077909708023, -7.712543447269127e-05, -0.29581305384635925, -5.125986263010418e-06, -1.6689286894688848e-06, -0.00019107422849629074, -0.007646813057363033, -0.32137084007263184, -4.792098479811102e-05, -0.05152931436896324, -0.0029066239949315786, -0.00044967554276809096, -8.642300235806033e-05, -1.4017046689987183, -0.07253537327051163], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.6932435035705566, -0.5724697113037109, -0.11683070659637451, -0.0005808573332615197, -0.0007414452848024666, -0.0008790204883553088, -0.08314379304647446, -0.15084540843963623, -0.03723122924566269, -0.2029578983783722, -1.5735502529423684e-05, -0.000493762141559273, -0.175515279173851, -0.00046456989366561174, -0.006311484612524509, -0.019285082817077637, -0.1120222806930542, -0.03017904981970787, -2.312633478140924e-05, -0.005494610872119665, -3.290122185717337e-05, -8.702239938429557e-06, -2.3841855067985307e-07, -0.015499960631132126, -0.02809768356382847], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.032623425126075745, -3.671578815556131e-05, -0.00010299152199877426, -0.5651307106018066], "finish_reason": "stop"}], "metrics": {"energy": 455.5646104373933, "energy_per_token": 4.297779343748993, "time": 11.989788, "time_per_token": 0.11311120754716981}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"Start and end date should be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Start", " and", " end", " date", " should", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -2.856752395629883, -0.2624638080596924, -0.035827431827783585, -1.139492392539978, -2.285071611404419, -0.013598074205219746, -0.33667945861816406, -0.05637895315885544, -1.0478888750076294, -0.00031406714697368443, -0.001738585764542222], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -0.295091450214386, -0.00016819016309455037, -7.1403817855753e-05, -0.009593102149665356, -0.0004314445541240275, -6.01988795096986e-05, -0.000536655425094068], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='D')", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "D", "')", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -0.25204336643218994, -0.012865751050412655, -6.318072337307967e-06, -0.06622314453125, -0.6158154010772705, -0.05680646002292633, -0.11267729848623276], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5633237361907959, -0.6325747966766357, -0.1783064305782318, -0.0006090931710787117, -0.0008023141999728978, -0.0007877822499722242, -0.08843250572681427, -0.16960509121418, -0.031562838703393936, -0.1842060089111328, -1.9192511899746023e-05, -0.0005868143052794039, -0.17608542740345, -0.0005169962532818317, -0.00682451855391264, -0.02356068231165409, -0.10812381654977798, -0.03668426349759102, -2.0265373677830212e-05, -0.0030197754967957735, -5.1020273531321436e-05, -7.510157047363464e-06, -1.1920928244535389e-07, -0.015533060766756535, -0.03087846376001835], "finish_reason": "stop"}, {"text": " business_days<|endoftext|>\"\"\"", "tokens": [" business", "_", "days", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.04057885333895683, -4.2437604861333966e-05, -0.00010442188795423135, -1.5082566738128662, -4.410734163684538e-06, -1.6689286894688848e-06, -2.145764938177308e-06, -1.07287787614041e-05, -2.334522247314453, -0.002935150871053338, -0.006208182778209448, -0.00028618055512197316, -0.36497241258621216], "finish_reason": "stop"}], "metrics": {"energy": 504.96004199028005, "energy_per_token": 4.243361697397312, "time": 13.046021, "time_per_token": 0.10963042857142857}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"Start date and end date must be datetime objects.\")", "tokens": [" Value", "Error", "(", "\"", "Start", " date", " and", " end", " date", " must", " be", " datetime", " objects", ".", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -2.856752395629883, -1.5595180988311768, -0.005161294247955084, -0.04577013477683067, -0.0008948612376116216, -0.07597756385803223, -0.011132745072245598, -0.19544509053230286, -0.006378174759447575, -0.4066942036151886, -0.002506212331354618, -0.00021395778458099812, -0.0012278169160708785], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before or equal to end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " or", " equal", " to", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -1.3750817775726318, -0.17137642204761505, -0.005042572971433401, -0.001693958998657763, -0.00024101213784888387, -7.009260298218578e-05, -0.007504960056394339, -0.0003743662964552641, -7.295342220459133e-05, -0.0007231004419736564], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -0.19277791678905487, -0.04639625921845436], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date, freq='B')  # Create a series of business days", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", "  ", "#", " Create", " a", " series", " of", " business", " days", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -0.25204336643218994, -0.012865751050412655, -6.318072337307967e-06, -0.06622314453125, -0.8348019123077393, -0.04514077305793762, -2.3995649814605713, -0.00064876489341259, -3.964772939682007, -0.563762903213501, -1.504030704498291, -0.007508864160627127, -0.04411129653453827, -0.1746997833251953, -0.5999786853790283], "finish_reason": "stop"}, {"text": " [date for date in dates if (date.weekday() in (0, 1, 2, 3, 4) and date not in country_holidays)]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " (", "date", ".", "week", "day", "()", " in", " (", "0", ",", " ", "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ")", " and", " date", " not", " in", " country", "_", "h", "olidays", ")]", "\n"], "logprobs": [-0.5633237361907959, -0.6325747966766357, -0.1783064305782318, -0.0006090931710787117, -0.0008023141999728978, -0.0007877822499722242, -0.08843250572681427, -2.6550538539886475, -0.32186752557754517, -0.03666587918996811, -0.21197916567325592, -2.372236667724792e-05, -0.0010052633006125689, -2.183089256286621, -1.2947502136230469, -0.04902328923344612, -4.708655978902243e-05, -0.06524084508419037, -0.008115649223327637, -0.0028110535349696875, -0.0009503615438006818, -0.0011276798322796822, -0.0008149401983246207, -0.0003885467885993421, -0.000205018965061754, -0.005491765681654215, -0.0002687808300834149, -0.0001578206429257989, -0.3269694149494171, -0.06269576400518417, -0.18731965124607086, -0.0933752954006195, -4.446407547220588e-05, -0.005146232433617115, -5.2927523938706145e-05, -5.483612312673358e-06, -2.3841855067985307e-07, -0.02763383463025093, -0.033513668924570084], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days"], "logprobs": [-0.03286950662732124, -3.3378044463461265e-05, -8.320462075062096e-05], "finish_reason": "stop"}], "metrics": {"energy": 631.82804536438, "energy_per_token": 4.357434795616414, "time": 16.212301, "time_per_token": 0.1118089724137931}}
{"outputs": [{"text": " not isinstance(start_date, datetime):", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", "):", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.9679005742073059, -0.004699850920587778], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date)", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ")", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -0.2838730812072754, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00020096666412428021, -0.004946850705891848, -0.38132548332214355, -4.994744449504651e-05, -0.055609989911317825, -0.0026019311044365168, -0.00035506143467500806, -5.304672595229931e-05, -1.5695236921310425, -0.07165069133043289], "finish_reason": "stop"}, {"text": " dates[dates.weekday < 5].to_list()", "tokens": [" dates", "[", "dates", ".", "week", "day", " <", " ", "5", "]", ".", "to", "_", "list", "()", "\n"], "logprobs": [-1.4911179542541504, -0.8017913103103638, -1.441265344619751, -0.0002571013756096363, -1.0009350776672363, -3.2543604902457446e-05, -0.5471603870391846, -0.0009366653976030648, -0.01686329022049904, -0.019722314551472664, -1.7738933563232422, -0.5383652448654175, -2.622600959512056e-06, -0.1009414792060852, -0.0023520919494330883, -0.18245898187160492], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.03500083088874817, -5.364274329622276e-05, -8.308542601298541e-05, -0.6580532193183899], "finish_reason": "stop"}], "metrics": {"energy": 430.4949775657652, "energy_per_token": 4.348434116825912, "time": 11.579989, "time_per_token": 0.11696958585858586}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -0.3447761535644531, -0.002383964601904154, -0.0003369478799868375, -0.003776918863877654, -0.0076214964501559734, -0.000262106885202229, -2.062299427052494e-05, -0.10226351022720337, -0.00903045292943716, -0.13147392868995667, -0.00781514123082161, -0.47663578391075134, -0.00020847532141488045, -0.0008977196994237602], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.052238963544368744, -2.622600959512056e-06, -5.960462772236497e-07, -0.061878759413957596, -0.00040844682371243834, 0.0, 0.0, -0.009677400812506676, -0.0011324428487569094], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00012003655137959868, -3.2186455882765586e-06, -0.002071617403998971, -0.005676341243088245, -0.026718026027083397, -0.00038818930624984205, -0.0002619877050165087, -0.11607715487480164, -0.07700743526220322, -0.12773706018924713, -0.30779722332954407, -0.00023684080224484205, -8.987976616481319e-05, -0.008520440198481083, -0.0004146431456319988, -6.961580220377073e-05, -0.0005178302526473999], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country)", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ")", "\n"], "logprobs": [-0.07625164091587067, -0.0004067785630468279, -0.02674669399857521, -1.9073468138230965e-06, -0.0001892864383989945, -3.7431014789035544e-05, -0.0018795934738591313, -0.004537761677056551, -0.17435798048973083, -0.0431225448846817], "finish_reason": "stop"}, {"text": " pd.bdate_range(start_date, end_date, freq='B')", "tokens": [" pd", ".", "b", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ",", " fre", "q", "='", "B", "')", "\n"], "logprobs": [-0.08103436976671219, -7.176141662057489e-05, -1.4319214820861816, -0.00025018901214934886, -2.7418097943154862e-06, -0.00010346830822527409, -0.0004142856632824987, -0.010856609791517258, -0.27006831765174866, -0.0002273062855238095, -0.05935408174991608, -0.002826150506734848, -0.00013326710904948413, -4.768258077092469e-05, -0.6168564558029175, -0.14470206201076508, -0.00017486473370809108, -0.10090602189302444, -0.30972692370414734, -0.23377352952957153, -0.5628817677497864], "finish_reason": "stop"}, {"text": " [date for date in dates if date.weekday() < 5 and date not in country_holidays]", "tokens": [" [", "date", " for", " date", " in", " dates", " if", " date", ".", "week", "day", "()", " <", " ", "5", " and", " date", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.6179738640785217, -0.9174584746360779, -0.1558634489774704, -0.0005880056996829808, -0.0012535341084003448, -0.0009561972692608833, -0.0740005299448967, -0.16203784942626953, -0.03206735476851463, -0.25643637776374817, -1.549708758830093e-05, -0.0005665604257956147, -0.15826429426670074, -0.0004447901446837932, -0.006123827304691076, -0.017641887068748474, -0.12285619974136353, -0.025226039811968803, -2.2172682292875834e-05, -0.00482596829533577, -3.397406908334233e-05, -7.390948667307384e-06, -2.3841855067985307e-07, -0.014496599324047565, -0.026351304724812508], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.039676547050476074, -3.40932747349143e-05, -8.95221673999913e-05, -0.610242486000061], "finish_reason": "stop"}], "metrics": {"energy": 547.611638240814, "energy_per_token": 4.45212714016922, "time": 13.923095, "time_per_token": 0.11319589430894308}}
{"outputs": [{"text": " not isinstance(start_date, datetime) or start_date > end_date:", "tokens": [" not", " isinstance", "(", "start", "_", "date", ",", " datetime", ")", " or", " start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.04098318889737129, -0.011316517367959023, -4.100715523236431e-05, -0.0016969341086223722, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00015507926582358778, -0.004698427394032478, -0.4798749089241028, -0.012096498161554337, -0.459804505109787, -7.033323527139146e-06, -3.576278118089249e-07, -0.1182219460606575, -0.005116345826536417, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.009222880005836487, -0.0041733793914318085], "finish_reason": "stop"}, {"text": " ValueError(\"Both start_date and end_date must be datetime objects\")", "tokens": [" Value", "Error", "(", "\"", "Both", " start", "_", "date", " and", " end", "_", "date", " must", " be", " datetime", " objects", "\"", ")", "\n"], "logprobs": [-0.0172635018825531, -3.576278118089249e-07, -0.13391855359077454, -0.012366287410259247, -1.9612140655517578, -0.06568065285682678, -0.020496003329753876, -0.0005041282274760306, -0.00035565727739594877, -0.0003084660565946251, -0.00015209948469419032, -3.516612196108326e-05, -0.1769717037677765, -0.0005389191792346537, -0.14072994887828827, -0.007149469573050737, -1.1118909120559692, -0.000169382052263245, -0.0012667496921494603], "finish_reason": "stop"}, {"text": " start_date > end_date:", "tokens": [" start", "_", "date", " >", " end", "_", "date", ":", "\n"], "logprobs": [-0.05439222231507301, -2.7418097943154862e-06, -5.960462772236497e-07, -0.06041097640991211, -0.00041368984966538846, 0.0, 0.0, -0.0076242173090577126, -0.0013304438907653093], "finish_reason": "stop"}, {"text": " ValueError(\"start_date must be before end_date.\")", "tokens": [" Value", "Error", "(", "\"", "start", "_", "date", " must", " be", " before", " end", "_", "date", ".", "\"", ")", "\n"], "logprobs": [-0.00010978573118336499, -1.4305104514278355e-06, -0.0018819731194525957, -0.008056169375777245, -0.03127218410372734, -0.0004389514506328851, -0.00029940891545265913, -0.12717340886592865, -0.06658624112606049, -0.13860958814620972, -0.295091450214386, -0.00016819016309455037, -7.1403817855753e-05, -0.009593102149665356, -0.0004314445541240275, -6.01988795096986e-05, -0.000536655425094068], "finish_reason": "stop"}, {"text": " holidays.country_holidays(country, years=[start_date.year, end_date.year])", "tokens": [" holidays", ".", "country", "_", "h", "olidays", "(", "country", ",", " years", "=[", "start", "_", "date", ".", "year", ",", " end", "_", "date", ".", "year", "])", "\n"], "logprobs": [-0.08639774471521378, -0.0004058252670802176, -0.03739005699753761, -2.264974000354414e-06, -0.00022790218645241112, -2.5629668016335927e-05, -0.001853535301052034, -0.005250474438071251, -2.0419485569000244, -0.11331932246685028, -0.8310380578041077, -0.10780268162488937, -0.00020656836568377912, -5.0424259825376794e-05, -0.0066489181481301785, -0.00013255194062367082, -0.0392337441444397, -0.09463633596897125, -2.622600959512056e-06, -5.960462772236497e-07, -5.638440416078083e-05, -1.3112935448589269e-05, -0.0319097563624382, -0.0196104533970356], "finish_reason": "stop"}, {"text": " pd.date_range(start_date, end_date)", "tokens": [" pd", ".", "date", "_", "range", "(", "start", "_", "date", ",", " end", "_", "date", ")", "\n"], "logprobs": [-0.08358468115329742, -7.92710343375802e-05, -0.2055797427892685, -5.483612312673358e-06, -1.6689286894688848e-06, -0.00017569905321579427, -0.006823807954788208, -0.3466964662075043, -3.58813522325363e-05, -0.03376736864447594, -0.0031735554803162813, -0.0004925706889480352, -4.911301948595792e-05, -1.5170866250991821, -0.09261993318796158], "finish_reason": "stop"}, {"text": " [d.to_pydatetime() for d in dates if d.day_of_week < 5 and d.to_pydatetime() not in country_holidays]", "tokens": [" [", "d", ".", "to", "_", "py", "datetime", "()", " for", " d", " in", " dates", " if", " d", ".", "day", "_", "of", "_", "week", " <", " ", "5", " and", " d", ".", "to", "_", "py", "datetime", "()", " not", " in", " country", "_", "h", "olidays", "]", "\n"], "logprobs": [-0.5633237361907959, -1.366926908493042, -0.9995822906494141, -0.3562083840370178, -1.811964830267243e-05, -0.00021872512297704816, -0.000510204816237092, -0.0005277194431982934, -0.13837221264839172, -0.001042894902639091, -0.0006003961316309869, -0.001434131758287549, -0.3546827733516693, -0.20283624529838562, -0.0012503195321187377, -2.0584075450897217, -0.7318000793457031, -1.6062583923339844, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.084686279296875, -0.0008172033121809363, -0.02179853990674019, -0.029833612963557243, -0.251802921295166, -0.16598182916641235, -0.31642216444015503, -4.6132929128361866e-05, -0.00033301531220786273, -0.0018260485958307981, -0.00031990656862035394, -0.1229323148727417, -2.753696753643453e-05, -0.017858659848570824, -3.1470757676288486e-05, -3.2186455882765586e-06, -1.1920928244535389e-07, -0.014418580569326878, -0.01982855424284935], "finish_reason": "stop"}, {"text": " business_days", "tokens": [" business", "_", "days", "\n"], "logprobs": [-0.039545126259326935, -3.7431014789035544e-05, -0.0001110968878492713, -0.6696186065673828], "finish_reason": "stop"}], "metrics": {"energy": 612.5512421731949, "energy_per_token": 4.1955564532410605, "time": 15.981544, "time_per_token": 0.1094626301369863}}
