{"outputs": [{"text": "# Check if the data_dir exists\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory '{data_dir}' does not exist.\")\n\n    # Get all CSV files in the data directory\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    csv_files = sorted(csv_files)\n\n    # Check if there are any CSV files\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in the directory '{data_dir}'\")\n\n    # Create a table using Texttable\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_align(['l', 'r', 'r'])\n\n    # Loop through each file\n    for file in csv_files:\n        try:\n            # Read the CSV file using pandas\n            df = pd.read_csv(file)\n\n            # Get the file name, number of rows, and number of columns\n", "tokens": ["#", " Check", " if", " the", " data", "_", "dir", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " CS", "V", " files", " in", " the", " data", " directory", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "csv", "_", "files", ")", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " CS", "V", " files", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", " '", "{", "data", "_", "dir", "}'", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " table", " using", " Text", "table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "\n", "\n", "    ", "#", " Loop", " through", " each", " file", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " the", " CS", "V", " file", " using", " pandas", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "\n", "            ", "#", " Get", " the", " file", " name", ",", " number", " of", " rows", ",", " and", " number", " of", " columns", "\n"], "logprobs": [-1.5855598449707031, -0.5120956301689148, -0.07708138972520828, -0.13957615196704865, -2.0696098804473877, -1.280578851699829, -0.003642473602667451, -0.10332806408405304, -0.16780947148799896, -0.0010704031446948647, -0.006005101837217808, -0.008797221817076206, -0.0013774678809568286, -7.986990567587782e-06, -0.0006803343421779573, -6.90197994117625e-05, -0.06336811184883118, -0.00020346954988781363, -0.000518664310220629, -7.152555099310121e-07, -3.576278118089249e-07, -0.0044942088425159454, -0.0006877202540636063, -0.0024946779012680054, -0.019661184400320053, -0.0016856284346431494, -4.565611743601039e-05, -5.125986263010418e-06, -0.03981597349047661, -0.2790524363517761, -0.02678336761891842, -0.6690866947174072, -0.5209932327270508, -0.708966851234436, -0.0002044230350293219, -0.0008874768391251564, -1.0132738680113107e-05, -9.536738616588991e-07, -0.002034024568274617, -0.013507518917322159, -0.00017152745567727834, -0.0015216212486848235, -0.058362528681755066, -0.021007532253861427, -0.00018880968855228275, -0.00021073981770314276, -0.04804143309593201, -0.00052426423644647, -0.007752805482596159, -1.2520289421081543, -0.9817658066749573, -0.5074700713157654, -7.73638384998776e-05, -0.01984666846692562, -0.11906839907169342, -0.07675939798355103, -0.40288829803466797, -2.704345941543579, -0.2386649250984192, -0.00017236177518498152, -0.1442437767982483, -0.00016282663273159415, -0.012375352904200554, -0.0014044907875359058, -0.07743670046329498, -2.7179348762729205e-05, -0.0008806879632174969, -0.0005407063290476799, -0.057983048260211945, -3.4570634852570947e-06, -1.4305104514278355e-06, -1.6689286894688848e-06, -0.0001627074379939586, -0.00012396997772157192, -0.00024577934527769685, -4.410734163684538e-06, -2.3841855067985307e-07, -0.00015376816736534238, -0.9669742584228516, -0.0033258858602494, -0.0007427555974572897, -0.0002669931564014405, -0.00015162272029556334, -0.0029030581936240196, -0.001443892833776772, -2.0556983947753906, -2.2285938262939453, -0.00020215852418914437, -0.010606701485812664, -1.489189624786377, -0.05227901414036751, -0.00749478442594409, -0.0036171742249280214, -6.079655122448457e-06, -3.2186455882765586e-06, -0.09271370619535446, -0.3195752203464508, -0.12234938144683838, -0.00037877538125030696, -0.03538648784160614, -0.26039937138557434, -0.01736285723745823, -0.02832888998091221, -0.006738202180713415, -0.36120444536209106, -0.004072706215083599, -1.2993727978027891e-05, -0.00015507926582358778, -0.8085957765579224, -4.768258077092469e-05, -0.0013094907626509666, -0.09685742110013962, -0.0008868813747540116, 0.0, -1.1920928244535389e-07, 0.0, -0.00038580605178140104, -0.00021979777375236154, -0.00044288364006206393, -0.0015610187547281384, -0.0006155265145935118, 0.0, -0.0009341643890365958, -0.13854286074638367, -0.00016139635408762842, -0.5619728565216064, -0.004725954029709101, -8.940656698541716e-06, -0.00046302087139338255, -0.0164522472769022, -0.000395815703086555, -0.7132596969604492, -0.029151296243071556, -0.04209132865071297, -5.781483559985645e-05, -0.0007471630233339965, -2.0265558760002023e-06, -1.0490362910786644e-05, -0.006093495525419712, -2.9043288230895996, -0.00011836781777674332, -0.00010346830822527409, -0.012502036988735199, -0.0008753282018005848, -0.10980048030614853, -0.6994450688362122, -0.3578272759914398, -0.9369453191757202, -0.7005817294120789, -0.2863078713417053, -0.009632537141442299, -0.09004268795251846, -0.0007365613128058612, -0.06586326658725739, -0.0026320121251046658, -0.0004717191040981561, -5.960462772236497e-07, -0.02292218990623951, -0.002165474696084857, -0.14303626120090485, -0.047528430819511414, -0.0021064728498458862, -0.43360286951065063, -0.7954497337341309, -0.001312467036768794, -0.0016708712792024016, -9.786603914108127e-05, -0.005060127470642328, -0.001258177449926734, -0.00027652730932459235, -0.00012373158824630082, -0.0016601602546870708, -0.00016449528629891574, -0.0010924329981207848, -0.007201546337455511, -0.45601940155029297, -0.09582851827144623, -0.000904032145626843, -0.11657802760601044, -1.6689286894688848e-06, -0.11733969300985336, -4.172316494077677e-06, -0.6290768384933472, -0.1426064521074295, -0.16432654857635498, -0.0002213471452705562, -0.00015531764074694365, -0.008884187787771225, -0.09747302532196045, -0.00018869050836656243, -8.904537389753386e-05, -0.001974420389160514, -0.002333657816052437, -0.0013400870375335217, -0.04625330865383148, -0.5728556513786316, -0.0004247716860845685, -0.24370674788951874, -2.3933470249176025, -0.21460644900798798, -0.49127116799354553, -2.570114850997925, -2.293588876724243, -0.0003946240758523345, -0.006594917271286249, -0.36012619733810425, -0.2843945622444153, -0.01173203345388174, -1.3112935448589269e-05, -5.960462772236497e-07, -1.1920928244535389e-07, -0.0011478032683953643, -0.00011085849109804258, -0.010876184329390526, -0.2348424345254898, -9.929640509653836e-05, -0.0010408704401925206, -0.002940618433058262, -0.6172645092010498, -0.2551516890525818, -0.2767183184623718, -0.11795277893543243, -6.079655122448457e-06, -0.020886942744255066, -0.2754071354866028, -0.07073257863521576, -0.13572627305984497, -0.00042715485324151814, -0.09344131499528885, -0.000617432699073106, -0.00033480284037068486, -6.9141146923357155e-06, -0.00023421882360707968, -6.878139538457617e-05, -2.396077979938127e-05, -5.340433563105762e-05, -0.01328650489449501, -0.1547253429889679, -0.001291751628741622, -0.5809295177459717, -0.004653932526707649, -0.004114377778023481, -0.6268482804298401, -0.05965757742524147, -1.482940435409546, -0.012355807237327099, -3.14353346824646, -0.08580274879932404, -0.0002083561266772449, -0.0016876515001058578, -0.10561834275722504, -0.0006457865820266306, -0.08074157685041428, -7.688703772146255e-05, -0.0002516191452741623, -0.022329222410917282], "finish_reason": "length"}], "metrics": {"energy": 1193.2480263118748, "energy_per_token": 4.661125102780761, "time": 29.883772, "time_per_token": 0.116733484375}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' does not exist.\")\n\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    table = Texttable()\n    table.set_deco(Texttable.HEADER)\n    table.set_cols_align([\"r\", \"r\", \"r\"])\n    table.add_rows([[\"File\", \"Rows\", \"Columns\"]] +\n                   [[os.path.basename(f), pd.read_csv(f).shape[0], pd.read_csv(f).shape[1]] for f in csv_files])\n    return str(table)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "dec", "o", "(", "Text", "table", ".", "HEAD", "ER", ")", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "r", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "table", ".", "add", "_", "rows", "([", "[", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "]]", " +", "\n", "                ", "   ", "[[", "os", ".", "path", ".", "bas", "ename", "(", "f", ")", ",", " pd", ".", "read", "_", "csv", "(", "f", ")", ".", "shape", "[", "0", "]", ",", " pd", ".", "read", "_", "csv", "(", "f", ")", ".", "shape", "[", "1", "]]", " for", " f", " in", " c", "sv", "_", "files", "])", "\n", "    ", "return", " str", "(", "table", ")", "\n", "\n", "if"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -0.41229113936424255, -0.0002584123576525599, -0.0015589953400194645, -0.24497635662555695, -0.010700350627303123, -0.00013457823661156, -0.0006329201860353351, -0.2085290253162384, -0.0002616301644593477, -0.45588287711143494, -0.0009248746791854501, -0.04628153517842293, -0.0029126862064003944, -1.0326592922210693, -0.01083337888121605, -0.007107095792889595, -2.8132995794294402e-05, -0.0010565895354375243, -0.0008635367848910391, -0.08600185066461563, -3.576278118089249e-07, -2.9802276912960224e-06, -2.0265558760002023e-06, -0.0003240775258745998, -0.00016282663273159415, -0.0006165986997075379, -3.4570634852570947e-06, -4.768370445162873e-07, -0.00023314618738368154, -0.251156210899353, -0.010929718613624573, -0.0009488132782280445, -0.0004051103023812175, -0.010063623078167439, -0.03717460483312607, -0.012985194101929665, -1.0193623304367065, -0.00010144196130568162, -0.012518401257693768, -0.15543849766254425, -0.000681883015204221, 0.0, -5.960462772236497e-07, -2.3841855067985307e-07, -0.0003582789213396609, -0.000819347333163023, -0.0005268854438327253, -0.0011256556026637554, -0.0009616755996830761, 0.0, -0.002745432546362281, -0.043953415006399155, -0.0004065402317792177, -0.024587098509073257, -0.006045271176844835, -2.13382354559144e-05, -0.0003036991402041167, -0.008191205561161041, -0.0003763920976780355, -0.1476087123155594, -0.04995995759963989, -2.884823152271565e-05, -0.00037508129025809467, -8.344646857949556e-07, -2.7418097943154862e-06, -0.0034457615111023188, -0.07371055334806442, -0.00087878224439919, -5.602679812000133e-05, -5.98412734689191e-05, -0.0137808071449399, -0.0003667397249955684, -0.5099307298660278, -0.011588873341679573, -0.004402468912303448, -5.960462772236497e-07, -0.027148887515068054, -0.006756555289030075, -0.017478952184319496, -0.023597240447998047, -0.0015192406717687845, -1.321690320968628, -1.537788011773955e-05, -1.0010594129562378, -0.0018440161366015673, -0.00134222989436239, -0.002454246859997511, -1.1920928244535389e-07, -6.48477507638745e-05, -0.05528710409998894, -0.0002862997353076935, -0.7432066202163696, -0.018177002668380737, -0.017051639035344124, -0.01659201644361019, -0.000590865034610033, -0.09933170676231384, -2.264974000354414e-06, -0.07787404954433441, -0.0002809368306770921, -1.0061454772949219, -1.4825013875961304, -0.000947503256611526, -1.7980434894561768, -4.970903682988137e-05, -0.0031478875316679478, -0.016376961022615433, -1.1913056373596191, -1.0967194612021558e-05, -0.003739627543836832, -0.0035042089875787497, -0.013308621011674404, -6.556489552167477e-06, -0.005022646393626928, -0.008817782625555992, -0.03724225237965584, -0.01574947126209736, -0.0007976687629707158, -2.5692708492279053, -4.768370445162873e-07, -0.008779260329902172, -0.22671173512935638, -0.08098731935024261, -0.009335673414170742, -0.005837890785187483, -0.004005624447017908, -0.0002498314715921879, -0.002680758247151971, -0.0016368337674066424, -0.00010132275929208845, -0.00010048838157672435, -0.0006165986997075379, -0.0002351722796447575, -2.169585604860913e-05, -0.14468061923980713, -0.4369852542877197, -0.24239717423915863, -0.00752306217327714, -0.04189552366733551, -0.02951965481042862, -0.159911647439003, -8.702239938429557e-06, -6.437280717364047e-06, -7.033323527139146e-06, -0.033454298973083496, 0.0, -0.0005890780012123287, -1.364501714706421, -0.11826357245445251, -0.008037013001739979, -0.3362239897251129, -0.00028725311858579516, -0.03310826048254967, -2.264974000354414e-06, -7.509902934543788e-05, -9.417090768693015e-05, -0.005620035342872143, -0.03487742692232132, -0.0011803095694631338, -0.0019010106334462762, -0.002333776792511344, -0.004795597400516272, -0.0005022218101657927, -0.003632377600297332, -0.03738867864012718, -2.1934269170742482e-05, -7.986703712958843e-05, -3.576278118089249e-07, -1.5735502529423684e-05, -4.327203714638017e-05, -0.0006753309280611575, -0.00048458753735758364, -6.925819616299123e-05, -0.0002579356369096786, -0.00037043384509161115, -0.0007707485929131508, -0.014746594242751598, -0.152779683470726, -0.0014030622551217675, -0.00011777184408856556, -0.016344591975212097, -2.3841855067985307e-07, -3.3378546504536644e-06, -4.887569048150908e-06, -0.3346559405326843, -0.002595034893602133, -1.522043228149414, -0.07707619667053223, -2.5323262214660645, -0.0001070442158379592, -0.00016342257731594145, -2.4089901447296143, -0.22308290004730225, -0.007522707339376211, -1.7646658420562744], "finish_reason": "stop"}], "metrics": {"energy": 779.1793028888704, "energy_per_token": 3.4940775914299125, "time": 19.118084, "time_per_token": 0.08573131838565022}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory '{data_dir}' does not exist.\")\n\n    # Get the sorted CSV files from the directory\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in the directory '{data_dir}'.\")\n\n    # Initialize the Texttable object\n    table = Texttable()\n\n    # Set the column headings\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    # Read each CSV file, calculate rows and columns, and add a row to the table\n    for file in csv_files:\n        try:\n            df = pd.read_csv(file, index_col=0)\n        except pandas.errors.EmptyDataError:\n            raise\n\n        # Add a row to the table with the file name, number of rows, and number of columns\n        table.add_row([os.path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " the", " sorted", " CS", "V", " files", " from", " the", " directory", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " Text", "table", " object", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Set", " the", " column", " head", "ings", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "#", " Read", " each", " CS", "V", " file", ",", " calculate", " rows", " and", " columns", ",", " and", " add", " a", " row", " to", " the", " table", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " index", "_", "col", "=", "0", ")", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", "\n", "\n", "        ", "#", " Add", " a", " row", " to", " the", " table", " with", " the", " file", " name", ",", " number", " of", " rows", ",", " and", " number", " of", " columns", "\n", "        ", "table", ".", "add", "_", "row", "([", "os", ".", "path"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -1.0948567390441895, -0.722522497177124, -0.6357200741767883, -0.00033241944038309157, -0.0008974815136753023, -5.722029527532868e-06, -1.6689286894688848e-06, -0.003042119089514017, -0.021597666665911674, -0.00022492263815365732, -0.0014588914345949888, -0.08320105075836182, -0.019731080159544945, -0.0002299282787134871, -0.0006410212954506278, -0.20352564752101898, -0.0002728328399825841, -1.6448417901992798, -1.374900221824646, -1.720369577407837, -1.5668647289276123, -2.29056978225708, -9.941560711013153e-05, -0.4021635353565216, -2.368910789489746, -0.04436596855521202, -1.390535831451416, -0.057383276522159576, -0.0008933129138313234, -0.2810942232608795, -0.0008428120636381209, -0.012452472001314163, -0.004059408791363239, -0.2844972014427185, -0.03541041910648346, -0.011684550903737545, -4.875540980719961e-05, -0.001262939884327352, -0.0006020640721544623, -0.10268055647611618, -1.1920922133867862e-06, -4.887569048150908e-06, -2.145764938177308e-06, -0.000243634101934731, -9.858122211880982e-05, -0.0005235493299551308, -8.344646857949556e-07, 0.0, -0.00032658010604791343, -0.35228481888771057, -0.00693332077935338, -0.001039679627865553, -0.00032014489988796413, -0.0062117367051541805, -0.01951751671731472, -0.002295717829838395, -0.33552056550979614, -0.00010716341057559475, -0.22817228734493256, -0.1599491387605667, -0.0006968930247239769, 0.0, -5.960462772236497e-07, -2.3841855067985307e-07, -0.00024387246230617166, -0.0019248068565502763, -0.00041976699139922857, -0.0026333199348300695, -0.0006435230607166886, -1.1920928244535389e-07, -0.004017259925603867, -0.07518991827964783, -0.0007303669699467719, -0.27746766805648804, -0.003018587129190564, -1.3351351299206726e-05, -0.0003761537664104253, -0.020052917301654816, -0.00041392818093299866, -0.5692955851554871, -0.01641225814819336, -0.054314203560352325, -4.386805812828243e-05, -0.0007367995567619801, -7.748573807475623e-06, -4.0531076592742465e-06, -0.004876149818301201, -0.06271815299987793, -0.0011647114297375083, -3.7788631743751466e-05, -3.862306402879767e-05, -0.008870836347341537, -0.0006504327175207436, -0.306630939245224, -0.943701982498169, -0.30875277519226074, -1.0465328693389893, -0.017708878964185715, -0.526651918888092, -0.19510048627853394, -0.0005490464391186833, -0.12438993901014328, -0.004330068361014128, -0.0003691230376716703, -1.4305104514278355e-06, -0.030417175963521004, -0.000513064325787127, -0.7677680850028992, -0.00016842853801790625, -0.0037095798179507256, -0.6841589212417603, -0.11196643114089966, -2.530897617340088, -0.8436280488967896, -0.0004986473359167576, -0.04275631159543991, -0.00013505500101018697, -0.036544863134622574, -0.0003475538978818804, -0.014755286276340485, -1.6983815431594849, -0.0205205287784338, -0.0018465149914845824, -0.0012221018550917506, -8.511180931236595e-05, -0.0014019908849149942, -0.000503770774230361, -9.500529267825186e-05, -0.00013255194062367082, -0.0005843124235980213, -0.0001147919538198039, -1.2278481335670222e-05, -0.00044824567157775164, -0.00013779645087197423, -0.07069836556911469, -0.00023934361524879932, -0.17026549577713013, -2.0791008472442627, -0.3056568503379822, -0.05987463891506195, -7.271740287251305e-06, -0.0036904579028487206, -1.3102071285247803, -1.0232751369476318, -2.268129587173462, -0.037016429007053375, -0.007591091562062502, -0.04044480249285698, -0.012633530423045158, -0.049319155514240265, -1.703115463256836, -0.06573881208896637, -0.01678275875747204, -0.004502041265368462, -0.003137429943308234, -0.020768672227859497, -0.0016295737586915493, -0.010687140747904778, -0.5994603633880615, -0.27383843064308167, -0.008672667667269707, -0.0001037067049765028, -9.536738616588991e-07, -7.152555099310121e-07, -0.0005103239673189819, -0.00011669908417388797, -0.0074048577807843685, -0.13749925792217255, -7.939023635117337e-05, -0.0005411829333752394, -0.0013267532922327518, -0.2294122874736786, -0.0008981961291283369, -0.001142325927503407, -1.5735502529423684e-05, -0.0005154472892172635, -1.2874520507466514e-05, -4.482168878894299e-05, -8.141662692651153e-05, -0.005314033944159746, -2.133883237838745, -1.1665804386138916, -0.0006513857515528798, -7.510157047363464e-06, -0.021608401089906693, -0.4131713807582855, -0.19273848831653595, -0.07614041119813919, -1.6570935249328613, -0.001959072658792138, -0.895051896572113, -3.2782016205601394e-05, -0.0013502062065526843, -1.5497195136049413e-06, -5.054346183896996e-05, -9.536738616588991e-07, -5.722029527532868e-06, -0.45199108123779297, -0.002380634658038616, -0.0018174811266362667, -0.08105569332838058, -0.5509868264198303, -0.9209505319595337, -0.002888319082558155, -1.9307780265808105, -1.1596646308898926, -0.37722378969192505, -0.07393588125705719, -0.06497735530138016, -0.0012363893911242485, -0.0021878371480852365, -1.9877469539642334, -0.24650870263576508, -0.09781543910503387, -0.025220924988389015, -0.011066724546253681, -0.1448311060667038, -0.00020394629973452538, -0.0007040405762381852, -0.017177848145365715, -0.0004631400224752724, -0.0025328481569886208, -4.470248313737102e-05, -0.0002449450839776546, -0.006942554842680693, -0.00040344204171560705, -0.07596242427825928, -0.0002273062855238095, -2.95634672511369e-05, -2.7418097943154862e-06, -0.016773616895079613, -0.004439260810613632, -0.13549071550369263, -1.5497195136049413e-06, -6.079655122448457e-06], "finish_reason": "length"}], "metrics": {"energy": 902.0292175340652, "energy_per_token": 3.523551630992442, "time": 22.057251, "time_per_token": 0.08616113671875}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' does not exist\")\n\n    csv_files = sorted(glob.glob(os.path.join(data_dir, \"*.csv\")))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'\")\n\n    table = Texttable()\n    table.set_cols_align([\"c\", \"c\", \"c\"])\n    table.set_cols_dtype([\"t\", \"i\", \"i\"])\n\n    header = [\"File\", \"Rows\", \"Columns\"]\n    table.add_rows([header])\n\n    for file in sorted(csv_files):\n        try:\n            df = pd.read_csv(file)\n            nrows = df.shape[0]\n            ncolumns = df.shape[1]\n            table.add_row([os.path.basename(file), nrows, ncolumns])\n        except pandas.errors.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", ")))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "c", "\"", ",", " \"", "c", "\"", ",", " \"", "c", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "([", "\"", "t", "\"", ",", " \"", "i", "\"", ",", " \"", "i", "\"", "])", "\n", "\n", "    ", "header", " =", " [", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "]", "\n", "    ", "table", ".", "add", "_", "rows", "([", "header", "])", "\n", "\n", "    ", "for", " file", " in", " sorted", "(", "csv", "_", "files", "):", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "n", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "ncol", "umns", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " n", "rows", ",", " n", "columns", "])", "\n", "        ", "except", " pandas", ".", "errors", "."], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -0.41229113936424255, -0.0002584123576525599, -0.0015589953400194645, -1.6640819311141968, -0.00013290952483657748, -0.0006191005813889205, -0.2319178432226181, -0.00030429501202888787, -0.5235106348991394, -0.0009529816452413797, -0.0473516471683979, -0.0020615055691450834, -1.196643590927124, -0.012204846367239952, -0.009004934690892696, -3.58813522325363e-05, -0.00139639584813267, -0.0009483369067311287, -0.10036337375640869, -1.1920928244535389e-07, -2.9802276912960224e-06, -2.7418097943154862e-06, -0.000459565402707085, -0.0002047805901383981, -0.0005883631529286504, -4.410734163684538e-06, -4.768370445162873e-07, -0.0003591130953282118, -1.448349952697754, -0.008107963018119335, -0.0012948471121490002, -0.00054058717796579, -0.0001941730733960867, -0.029242299497127533, -0.008050493896007538, -0.4901999533176422, -0.012073650024831295, -0.072142593562603, -0.000559173640795052, 0.0, -8.344646857949556e-07, -1.1920928244535389e-07, -0.00018869050836656243, -0.0008874768391251564, -0.0004477690381463617, -0.0012294837506487966, -0.001347229932434857, -2.3841855067985307e-07, -0.000797311426140368, -0.039762016385793686, -0.0001935771433636546, -0.04423048719763756, -0.007425328716635704, -3.302042750874534e-05, -0.0003588747640606016, -0.018850000575184822, -0.0003526780928950757, -0.21382039785385132, -0.040615253150463104, -5.8053239627042785e-05, -0.00037543877260759473, -2.0265558760002023e-06, -1.2159273865108844e-05, -0.003834159579128027, -0.0014019908849149942, -4.303362584323622e-05, -6.258291978156194e-05, -0.023098217323422432, -0.0002613918040879071, -0.35590511560440063, -0.010074716061353683, -0.0035975754726678133, -8.344646857949556e-07, -0.03162682428956032, -0.004521029070019722, -0.007350897882133722, -0.025221621617674828, -0.00139639584813267, -1.235917329788208, -1.5020257706055418e-05, -0.479261577129364, -0.0004247716860845685, -0.19790810346603394, -0.1839517503976822, -0.00015829740732442588, -1.9212688207626343, -3.242440288886428e-05, -0.010572141036391258, -0.004098350182175636, -0.296174019575119, -1.811964830267243e-05, -0.0005650115781463683, -0.0007129749283194542, -0.003840097226202488, -4.172316494077677e-06, -0.002380991354584694, -0.016829179599881172, -0.00838663149625063, -0.018647247925400734, -0.0012721073580905795, -0.22034689784049988, -1.7881377516459906e-06, -0.25443145632743835, 0.0, -0.12946036458015442, -7.86750388215296e-05, -0.034049808979034424, -0.0014479401288554072, -0.009592629969120026, -1.8596476365928538e-05, -0.0002698534226510674, -0.0011324428487569094, -0.010469278320670128, -1.0609570381348021e-05, -9.369411418447271e-05, -0.0006737822550348938, -0.0016468308167532086, -4.172316494077677e-06, -0.0007331067463383079, -0.01083078421652317, -2.7859246730804443, -0.00019262365822214633, -2.052255630493164, -0.03075397200882435, -0.02878720499575138, -0.0037962766364216805, -0.0021084952168166637, -0.0010251511121168733, -0.0003301552205812186, -0.0006784282741136849, -0.001281036646105349, -0.00012861855793744326, -0.00014423283573705703, -0.00022384998737834394, -0.0017323975916951895, -2.4914430468925275e-05, -0.00024816294899210334, -0.001737157697789371, -0.015708398073911667, -0.11726261675357819, -0.005633193533867598, -1.0506386756896973, -7.152555099310121e-07, -0.1604526937007904, -0.005863607861101627, -0.0024563875049352646, -0.4778209924697876, -0.0031722483690828085, -0.04237896949052811, -0.00010168035078095272, -0.04464668780565262, -0.7008500695228577, -0.343723326921463, -2.810589075088501, -0.0008903353591449559, -0.13659943640232086, -2.3841830625315197e-06, -1.9430925021879375e-05, -0.028259823098778725, -0.00307598989456892, -0.005212170537561178, -0.11726399511098862, -6.305972783593461e-05, -0.00039867559098638594, -0.000977276940830052, -0.1729423701763153, -0.000835903687402606, -0.0010488491971045732, -1.7165990357170813e-05, -0.0010985060362145305, -2.7418097943154862e-06, -7.426462980220094e-05, -2.8729025871143676e-05, -0.009320556186139584, -0.11625503748655319, -0.0026312987320125103, -0.25569233298301697, -3.396169662475586, -1.3612451553344727, -0.4456266462802887, -0.06736631691455841, -0.00035601475974544883, -0.0009135602158494294, -6.55629628454335e-05, -0.0002165798214264214, -1.9550132492440753e-05, -0.004805325530469418, -0.00028725311858579516, -2.6982836723327637, -0.004809596575796604, -0.0002779574424494058, -0.005227112676948309, -1.2040065485052764e-05, -7.664863369427621e-05, -0.00018165845540352166, -0.00018165845540352166, -8.106198947643861e-06, -0.0007488307310268283, -0.29294297099113464, -0.23652324080467224, -0.004034119658172131, -1.0847986231965479e-05, -2.3841855067985307e-07, -0.5370493531227112, -0.003171654185280204, -0.1462365835905075, -1.9073468138230965e-06, -1.3708974620385561e-05, -2.0265558760002023e-06, -0.016671976074576378, -1.1920928244535389e-07, -7.152531907195225e-06, -0.00034195298212580383, -0.0005397531786002219, -0.005605573300272226, -0.009657212533056736, -6.97350042173639e-05, -0.00029881304362788796, -0.0004640932602342218, -9.476689592702314e-05, -0.0018192660063505173, -0.001615410903468728, -0.026760157197713852, -0.000590865034610033, -0.8835663795471191, -3.659658250398934e-05, -0.002637005876749754, -4.768360213347478e-06], "finish_reason": "length"}], "metrics": {"energy": 922.6595226955411, "energy_per_token": 3.6041387605294575, "time": 22.239126, "time_per_token": 0.0868715859375}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory {data_dir} does not exist.\")\n\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in the directory {data_dir}.\")\n\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_dtype(['t', 'i', 'i'])\n    for file in sorted(csv_files):\n        try:\n            data = pd.read_csv(file)\n            table.add_row([os.path.basename(file), len(data), len(data.columns)])\n        except EmptyDataError:\n            raise EmptyDataError(\"Empty CSV file encountered.\")\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "data", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", " {", "data", "_", "dir", "}", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "    ", "for", " file", " in", " sorted", "(", "csv", "_", "files", "):", "\n", "        ", "try", ":", "\n", "            ", "data", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " len", "(", "data", ")", ",", " len", "(", "data", ".", "columns", ")]", ")", "\n", "        ", "except", " Em", "pty", "Data", "Error", ":", "\n", "            ", "raise", " Em", "pty", "Data", "Error", "(", "\"", "Empty", " CS", "V", " file", " encountered", ".", "\"", ")", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "if"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -1.0948567390441895, -0.722522497177124, -0.9025886654853821, -0.0008897398365661502, -3.576272320060525e-06, -2.0265558760002023e-06, -0.0012206730898469687, -0.017894258722662926, -0.00030989613151177764, -0.0025202438700944185, -0.15890812873840332, -0.016227543354034424, -0.00018451895448379219, -0.0005304598016664386, -0.2564896047115326, -0.0003351603518240154, -0.5338264107704163, -0.0010520643554627895, -0.040390536189079285, -0.0023393663577735424, -0.4796816110610962, -2.0146166207268834e-05, -0.0018935146508738399, -0.0009092725813388824, -0.12224822491407394, -3.576278118089249e-07, -2.145764938177308e-06, -1.0728830375228426e-06, -0.001025627483613789, -0.00020704510097857565, -0.0005746620590798557, -5.006777428206988e-06, -1.0728830375228426e-06, -0.00029881304362788796, -0.4754738509654999, -0.014684101566672325, -0.0012028133496642113, -0.0005067494930699468, -0.00027307120035402477, -0.002711193636059761, -0.009614236652851105, -0.3074984848499298, -0.051532596349716187, -0.07990221679210663, -0.0006216024048626423, 0.0, -7.152555099310121e-07, -5.960462772236497e-07, -0.00036221143091097474, -0.0010852882405743003, -0.0004996005445718765, -0.0009553635609336197, -0.0019144555553793907, -2.3841855067985307e-07, -0.0005728749092668295, -0.08059334009885788, -0.0002315968304174021, -0.3980260193347931, -0.005777090322226286, -5.686121585313231e-05, -0.00039414744242094457, -0.01693994551897049, -0.00031668893643654883, -1.2752776145935059, -0.036394521594047546, -0.12091761082410812, -0.00039593485416844487, -3.4570634852570947e-06, -1.311301275563892e-06, -0.12103834748268127, -0.0018886362668126822, -0.0012738931691274047, -5.4596363042946905e-05, -4.184158387943171e-05, -0.044621262699365616, -0.00023314618738368154, -1.1710166931152344, -0.019406335428357124, -0.004208399448543787, -9.536738616588991e-07, -0.022600460797548294, -0.004051810130476952, -0.01069056149572134, -0.029424510896205902, -0.0028960451018065214, -0.505601704120636, -1.261769413948059, -0.0009758477681316435, -0.001777022727765143, -0.00015877417172305286, -0.009171144105494022, -0.0008588915807195008, -0.00014995403762441128, -0.00023600654094479978, -0.0025811234954744577, -0.00012337400403339416, -0.0005659647285938263, -0.002534037223085761, -0.2614131271839142, -0.38805580139160156, -0.0027132148388773203, -0.19365237653255463, -2.264974000354414e-06, -0.11155889183282852, -3.3378546504536644e-06, -0.9686365127563477, -8.308542601298541e-05, -0.02324160374701023, -0.006528359837830067, -0.003352381056174636, -0.000479344860650599, -0.03380966559052467, -0.012816675007343292, -7.045020902296528e-05, -0.0001333863037871197, -0.0017841625958681107, -0.0006542449118569493, -0.0009809688199311495, -0.046066854149103165, -0.41989895701408386, -2.12060284614563, -0.609061598777771, -0.15495938062667847, -0.28442302346229553, -0.0005488081369549036, -0.010597500950098038, -4.768370445162873e-07, -2.145764938177308e-06, -0.05711996182799339, -0.0035189392510801554, -0.003935688175261021, -0.08193956315517426, -7.199982064776123e-05, -0.000339569611242041, -0.0009635811438784003, -2.4472033977508545, -0.024961210787296295, -0.0009759668610058725, -4.410734163684538e-06, -0.000393432448618114, -4.768370445162873e-07, -2.95634672511369e-05, -5.340433563105762e-05, -0.017269359901547432, -0.07782662659883499, -0.0037536416202783585, -0.15475618839263916, -0.6374226808547974, -0.0024782679975032806, -3.6954195820726454e-05, -1.311301275563892e-06, -0.01999274082481861, -0.00312673463486135, -0.16806283593177795, -1.9073468138230965e-06, -5.960446742392378e-06, -7.152555099310121e-07, -0.01843099482357502, 0.0, -8.702239938429557e-06, -0.0006547214579768479, -0.0007188120507635176, -0.004080423153936863, -1.182265281677246, -1.847726889536716e-05, -0.004988959990441799, -0.05434785038232803, -0.0009814451914280653, -0.2501806616783142, -0.00012134769349358976, -0.009751777164638042, -1.5735502529423684e-05, -0.0013849677052348852, -0.0029427579138427973, -0.00199167151004076, -0.003431743010878563, -0.008129129186272621, -0.0005949157639406621, -1.2626252174377441, -3.576272320060525e-06, -0.00013159839727450162, -1.3589766240329482e-05, -0.7291201949119568, -0.0031785464379936457, -0.002428203821182251, -0.08306195586919785, -0.5240114331245422, -1.5258672647178173e-05, -0.0005274811992421746, -0.0001110968878492713, -0.010345286689698696, -2.897106409072876, -0.7937586307525635, -0.4315221905708313, -0.00017629499780014157, -0.20062708854675293, -0.10305227339267731, -0.3271371126174927, -0.07632796466350555, -0.009960117749869823, -0.04605114087462425, -0.11726632714271545, -0.0013777059502899647, -0.0575178898870945, -0.07111935317516327, -0.0009949024533852935, -1.2278481335670222e-05, -0.0001528146385680884, -0.4498957097530365, -0.006430292036384344, -1.4169464111328125], "finish_reason": "stop"}], "metrics": {"energy": 833.9905017662044, "energy_per_token": 3.5947866455439845, "time": 19.932201, "time_per_token": 0.08591465948275862}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(\"Directory not found\")\n\n    # Find all CSV files in the specified directory\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n\n    if not csv_files:\n        raise ValueError(\"No CSV files found in the directory\")\n\n    # Create the table with headers\n    table = Texttable()\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    # Add rows for each CSV file\n    for file in csv_files:\n        try:\n            df = pd.read_csv(file)\n            file_name = os.path.basename(file)\n            rows = len(df)\n            columns = len(df.columns)\n            table.add_row([file_name, rows, columns])\n        except pandas.errors.EmptyDataError:\n            raise\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Find", " all", " CS", "V", " files", " in", " the", " specified", " directory", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " table", " with", " headers", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "#", " Add", " rows", " for", " each", " CS", "V", " file", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "rows", " =", " len", "(", "df", ")", "\n", "            ", "columns", " =", " len", "(", "df", ".", "columns", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "file", "_", "name", ",", " rows", ",", " columns", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "#"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -1.6366844177246094, -0.00017557987303007394, -0.0005801424849778414, -0.0011676882859319448, -1.9073468138230965e-06, -5.125986263010418e-06, -0.0025952726136893034, -0.02071285992860794, -0.005431774538010359, -0.01695823110640049, -0.0035666918847709894, -7.045020902296528e-05, -1.0371154530730564e-05, -0.06452594697475433, -1.2727023363113403, -0.9476894736289978, -0.6227692365646362, -0.003905290039256215, -1.1941039562225342, -0.0036187181249260902, -0.0017639329889789224, -0.44506123661994934, -0.000382707774406299, -1.7311489582061768, -1.9507105350494385, -0.1933353692293167, -0.22759415209293365, -0.0002536452084314078, -0.005346998106688261, -0.14416874945163727, -0.0661451518535614, -0.7252745628356934, -0.02295772358775139, -0.38882383704185486, -0.00038842763751745224, -0.3716268241405487, -0.0007886160165071487, -0.022488687187433243, -0.0027852572966367006, -0.1339561939239502, -2.288792165927589e-05, -0.002025458961725235, -0.0016304069431498647, -0.061113569885492325, -2.3841855067985307e-07, -2.9802276912960224e-06, -1.311301275563892e-06, -0.000442407006630674, -0.00015424491721205413, -0.0005302215577103198, -8.821448318485636e-06, -1.1920922133867862e-06, -0.0002603192115202546, -0.7606419324874878, -0.005866807885468006, -0.0012893705861642957, -0.00032574593205936253, -0.0002562671434134245, -0.0020386644173413515, -0.0024072735104709864, -0.4579167664051056, -0.0001408954558428377, -0.21204058825969696, -0.1368653029203415, -0.0010297955013811588, 0.0, -3.576278118089249e-07, 0.0, -0.0003197873884346336, -0.003249961184337735, -0.0004549183649942279, -0.004507856443524361, -0.0011485177092254162, 0.0, -0.002550446195527911, -0.021080954000353813, -0.01711363159120083, -0.004364251624792814, -2.0503786799963564e-05, -0.0011743560899049044, -0.031209906563162804, -0.15671879053115845, -0.1715981513261795, -0.6207292079925537, -0.07206795364618301, -0.00014733182615600526, -9.333651541965082e-05, -0.01334402710199356, -0.0007744412287138402, -0.41963839530944824, -1.4954514503479004, -3.078472137451172, -0.47375786304473877, -3.0184154510498047, -1.5638923645019531, -0.07653581351041794, -0.000546425289940089, -0.07677606493234634, -0.003974515944719315, -0.0010768335778266191, -2.3841855067985307e-07, -0.01984398066997528, -0.002846239833161235, -0.0021513192914426327, -0.0453844778239727, -0.0008000510279089212, -0.2028835415840149, -0.21560627222061157, -0.0016208856832236052, -0.0015744682168588042, -0.0008023141999728978, -5.793403761344962e-05, -0.0008017186191864312, -0.0006192197324708104, -6.305972783593461e-05, -7.60526381782256e-05, -0.0003719830128829926, -0.00012051333033014089, -8.702239938429557e-06, -0.00034624303225427866, -0.0012292455649003386, -0.6358515024185181, -0.0003003622987307608, -0.4096340537071228, -1.745595932006836, -0.20508025586605072, -1.9266657829284668, -0.002551397541537881, -0.046656154096126556, -7.152555099310121e-07, -0.0006644901586696506, -0.15122096240520477, -0.0007439468172378838, -0.015752052888274193, -0.7145411372184753, -0.45454642176628113, -0.5296759605407715, -0.0001578206429257989, -2.622600959512056e-06, -9.417489309271332e-06, -0.0006252956227399409, -0.00025459862081333995, -0.004444720223546028, -0.19716636836528778, -5.340433563105762e-05, -0.0007377525325864553, -0.0012163867941126227, -0.21982651948928833, -0.0006279165390878916, -0.0007402540650218725, -2.95634672511369e-05, -0.001036107074469328, -3.075552376685664e-05, -2.3245540432981215e-05, -4.2437604861333966e-05, -0.009231148287653923, -0.10057598352432251, -0.027571214362978935, -0.17993296682834625, -2.8278918266296387, -0.01576085388660431, -0.030185988172888756, -0.003258516313508153, -0.004058577585965395, -2.145764938177308e-06, -1.0728830375228426e-06, -7.152555099310121e-07, -0.016842424869537354, 0.0, -2.3841830625315197e-06, -0.0003761537664104253, -0.0006874820101074874, -0.047881897538900375, -0.009953980334103107, -1.4341676235198975, -0.20106542110443115, -1.4016798734664917, -1.3947389561508317e-05, -0.00015710550360381603, -0.40482452511787415, -0.004591754637658596, -0.0002982171718031168, -0.34444543719291687, -0.00011443436960689723, -0.016315624117851257, -8.487341256113723e-05, -0.0034033493138849735, -4.017272294731811e-05, -0.0014367506373673677, -0.0005644158809445798, -0.0010481346398591995, -0.059938639402389526, -0.02161831595003605, -0.0003471963864285499, -1.0132738680113107e-05, -1.4305104514278355e-06, -0.03589264303445816, -0.0007189311436377466, -0.0036120666190981865, -0.0015276916092261672, -1.1920922133867862e-06, -0.0038296468555927277, -0.012633766047656536, -0.00033909291960299015, -0.00020132421923335642, -0.0007594323833473027, -0.001254724687896669, -0.024108119308948517, -0.0024233281146734953, -0.8975760340690613, -2.2649508537142538e-05, -0.001686342409811914, -2.50339189733495e-06, -7.760223525110632e-05, -2.145764938177308e-06, -9.536697689327411e-06, -0.3697952628135681, -0.0023053516633808613, -0.002415241440758109, -0.07461000978946686, -0.565231442451477, -0.09541856497526169, -0.003357489826157689, -0.6225576996803284, -0.18311730027198792, -0.0015624469378963113, -3.433168603805825e-05, -0.00010668662434909493, -0.5299551486968994, -0.007143551483750343, -3.1843106746673584], "finish_reason": "stop"}], "metrics": {"energy": 836.4561977787016, "energy_per_token": 3.5293510454797534, "time": 20.586586, "time_per_token": 0.08686323206751055}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"The specified directory does not exist.\")\n\n    # Find all CSV files in the data_dir\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise ValueError(\"No CSV files found in the specified directory.\")\n\n    # Initialize the table\n    table = Texttable()\n    table.header([\"File\", \"Rows\", \"Columns\"])\n    table.set_cols_dtype([\"t\", \"i\", \"i\"])\n    table.set_cols_align([\"l\", \"r\", \"r\"])\n\n    for csv_file in csv_files:\n        try:\n            # Read the CSV file and get the number of rows and columns\n            df = pd.read_csv(csv_file)\n            num_rows = df.shape[0]\n            num_columns = df.shape[1]\n            # Add the row to the table\n            ", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Find", " all", " CS", "V", " files", " in", " the", " data", "_", "dir", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "([", "\"", "t", "\"", ",", " \"", "i", "\"", ",", " \"", "i", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " the", " CS", "V", " file", " and", " get", " the", " number", " of", " rows", " and", " columns", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "num", "_", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "num", "_", "columns", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "#", " Add", " the", " row", " to", " the", " table", "\n", "            "], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -1.8561794757843018, -0.8303256630897522, -0.14739075303077698, -0.02446519397199154, -0.012363696470856667, -0.0002040654799202457, -0.0013165149139240384, -0.21192438900470734, -0.0083116814494133, -0.0003251500893384218, -0.00043525759247131646, -0.24757236242294312, -0.0003149013500660658, -1.2844226360321045, -1.5755337476730347, -0.18336045742034912, -0.17366079986095428, -5.2569914259947836e-05, -0.003753285389393568, -0.13724572956562042, -0.04916300252079964, -2.044045925140381, -1.2566521167755127, -0.005881621968001127, -1.119645595550537, -0.0003564914222806692, -0.24437929689884186, -0.00043442347669042647, -0.02376674860715866, -0.0019421778852120042, -0.10147379338741302, -3.0517112463712692e-05, -0.001369253732264042, -0.000990615226328373, -0.05708719789981842, -4.768370445162873e-07, -1.9073468138230965e-06, -4.172316494077677e-06, -0.0003135904553346336, -0.00015090756642166525, -0.00032228996860794723, -3.099436753473128e-06, -2.3841855067985307e-07, -0.00022825974156148732, -0.8215401768684387, -0.006178208626806736, -0.0009046276099979877, -0.00036435641231946647, -0.0028897454030811787, -0.002398473210632801, -1.1452226638793945, -0.1376478224992752, -0.10668490827083588, -0.0007425173535011709, -1.1920928244535389e-07, -4.768370445162873e-07, -1.1920928244535389e-07, -0.000543446687515825, -0.0021077815908938646, -0.0006443570018745959, -0.0028084381483495235, -0.0008569859201088548, -1.1920928244535389e-07, -0.003808746114373207, -0.022251112386584282, -0.27105221152305603, -0.002647468587383628, -1.5139465176616795e-05, -0.00029952809563837945, -0.01550489105284214, -0.008929084986448288, -0.017802802845835686, -0.03707559034228325, -0.0008721124031580985, -0.008111628703773022, -0.000427274004323408, -8.797258487902582e-05, -6.305972783593461e-05, -0.037085238844156265, -0.0007954055909067392, -0.21560348570346832, -1.664369821548462, -0.6718353033065796, -0.4918102025985718, -0.2500769793987274, -0.0005169962532818317, -0.09073446691036224, -0.0031386183109134436, -0.0008339979685842991, -1.1920928244535389e-07, -0.02862630784511566, -0.0019451522966846824, -0.03104720450937748, -0.04481927305459976, -0.0015029336791485548, -0.33358490467071533, -1.4109318256378174, -0.007930459454655647, -0.0013185387942939997, -0.001430917764082551, -6.01988795096986e-05, -0.001946580014191568, -0.0007845661020837724, -8.606540359323844e-05, -7.331102824537084e-05, -0.0005697772721759975, -0.00013529339048545808, -1.2516897186287679e-05, -0.00034028460504487157, -0.00624028779566288, -0.6563917994499207, -0.07648015767335892, -0.0007961202645674348, -0.0821480005979538, -1.5497195136049413e-06, -0.11721300333738327, -2.622600959512056e-06, -1.0635337829589844, -7.164221460698172e-05, -0.2806173861026764, -0.003508366644382477, -0.009795336984097958, -5.1973900554003194e-05, -0.004671611823141575, -0.009208469651639462, -0.00663541816174984, -1.4781842764932662e-05, -0.0001736728590913117, -0.0008208957733586431, -0.000529149197973311, -3.4570634852570947e-06, -0.0016494491137564182, -0.15468744933605194, -0.5606625080108643, -0.052601516246795654, -0.00048375347978435457, -0.03686926141381264, -4.768370445162873e-07, -0.292389452457428, -2.3841855067985307e-07, -0.024357816204428673, -0.019802024587988853, -2.729855441430118e-05, -0.0630815178155899, -9.536697689327411e-06, -0.0005055579822510481, -0.001122797722928226, -0.05456584319472313, -3.933898824470816e-06, -0.00018654513405635953, -0.0007520469953306019, -0.0017516759689897299, -1.4305104514278355e-06, -0.0005962263094261289, -0.0032229882199317217, -0.2575974464416504, -0.0004518203204497695, -2.022815465927124, -0.8788008093833923, -0.00019870213873218745, -0.04900217428803444, -0.011139700189232826, -0.0008591298246756196, -0.7111785411834717, -5.8412379075889476e-06, -5.006777428206988e-06, -2.288792165927589e-05, -0.0005119920242577791, -0.0024057275149971247, -0.006746016908437014, -0.17349675297737122, -4.60137271147687e-05, -0.0018981549656018615, -0.0016780118457973003, -1.1725025177001953, -0.33227697014808655, -0.22696752846240997, -0.024897491559386253, -3.3378546504536644e-06, -0.018864857032895088, -1.8204843997955322, -2.2250471115112305, -0.20131215453147888, -0.05289135128259659, -0.00011252723925281316, -0.0015211451100185513, -0.004619996063411236, -0.00042417587246745825, -0.005161412991583347, -0.0006210067658685148, -0.14366281032562256, -0.00052426423644647, -0.0005559567362070084, -5.3881147323409095e-05, -0.0005484507419168949, -4.768360213347478e-06, -6.3774932641536e-05, -3.886147169396281e-05, -0.007773623801767826, -3.576278118089249e-07, -1.7046782886609435e-05, -0.1316608041524887, -0.0025081150233745575, -0.009085385128855705, -0.2770485579967499, -1.9550132492440753e-05, -0.0029561889823526144, -0.07027820497751236, -0.37582671642303467, -0.00020704510097857565, -0.0006080209277570248, -6.09140915912576e-05, -0.00025602878304198384, -3.194758028257638e-05, -0.003679055953398347, -0.0002040654799202457, -0.0005606033373624086, -4.768370445162873e-07, -2.027552843093872, -0.00011765264935093, -0.0039316508919000626, -5.722029527532868e-06, -4.7801782784517854e-05, -8.606540359323844e-05, -6.365573790390044e-05, -1.2516897186287679e-05, -0.0004477690381463617, -1.4745566844940186, -0.5670071840286255, -0.04721634089946747, -0.505896806716919, -1.6758819818496704, -0.004849695134907961, -0.0006728292210027575, -0.0008902162662707269, -0.005096895154565573, -0.0011478032683953643], "finish_reason": "length"}], "metrics": {"energy": 901.5706725635522, "energy_per_token": 3.5217604397013758, "time": 22.261814, "time_per_token": 0.0869602109375}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n    if not csv_files:\n        raise ValueError(\"There are no CSV files in the specified directory\")\n\n    table = Texttable()\n    table.set_cols_align([\"l\", \"r\", \"r\"])\n    table.set_cols_dtype(['t','i','i'])\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    for file in csv_files:\n        try:\n            df = pd.read_csv(file)\n            table.add_row([os.path.basename(file), df.shape[0], df.shape[1]])\n        except pandas.errors.EmptyDataError:\n            raise pandas.errors.EmptyDataError(f\"Encountered an empty CSV file: {file}\")\n\n    return table.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " are", " no", " CS", "V", " files", " in", " the", " specified", " directory", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", "'", "i", "'", ",", "'", "i", "'])", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " pandas", ".", "errors", ".", "Empty", "Data", "Error", "(", "f", "\"", "Enc", "ount", "ered", " an", " empty", " CS", "V", " file", ":", " {", "file", "}\"", ")", "\n", "\n", "    ", "return", " table", "."], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -1.8561794757843018, -0.8303256630897522, -0.14739075303077698, -0.02446519397199154, -0.012363696470856667, -0.0002040654799202457, -0.0013165149139240384, -1.9782246351242065, -0.0009492897079326212, -0.0008535317610949278, -0.2666144371032715, -0.0003695997002068907, -0.8556281328201294, -0.002083870582282543, -0.03417054936289787, -0.0025454522110521793, -1.2085305452346802, -0.014723100699484348, -0.006642996799200773, -4.0411134250462055e-05, -0.0012859179405495524, -0.0013511584838852286, -0.11088169366121292, -3.576278118089249e-07, -4.768360213347478e-06, -1.6689286894688848e-06, -0.0011089849285781384, -0.00028379703871905804, -0.0007317964336834848, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0006923662149347365, -0.5838724970817566, -0.009516824968159199, -0.0013168720761314034, -0.00037400881410576403, -0.014768442139029503, -0.03803739696741104, -0.011547158472239971, -0.5090974569320679, -0.01748773828148842, -0.10065758973360062, -0.0011044599814340472, 0.0, -1.311301275563892e-06, -4.768370445162873e-07, -0.0002649671514518559, -0.0011926926672458649, -0.0006816447712481022, -0.0009978797752410173, -0.000856509490404278, -2.3841855067985307e-07, -0.004963813349604607, -0.022628895938396454, -0.8848729729652405, -0.0025113255251199007, -0.0004049911512993276, -0.003314004512503743, -1.4781842764932662e-05, -0.0002754547167569399, -0.0017321596387773752, -0.007116209715604782, -0.013754586689174175, -0.0005169962532818317, -0.006630562711507082, -0.000219321038457565, -5.4834770708112046e-05, -0.02299838326871395, -0.00032872517476789653, -0.4290655255317688, -0.009387519210577011, -0.0042474535293877125, -5.960462772236497e-07, -0.03553813323378563, -0.006147404666990042, -0.0072587099857628345, -0.0316036082804203, -0.0011205353075638413, -1.792685866355896, -4.60137271147687e-05, -0.5154967904090881, -0.0008188708452507854, -0.26202359795570374, -0.554257869720459, -0.00046754872892051935, -0.41774702072143555, -6.568216485902667e-05, -0.004910314455628395, -0.017885476350784302, -0.07280352711677551, -7.629365427419543e-06, -0.0004024887748528272, -0.0021377585362643003, -0.004014291800558567, -3.576272320060525e-06, -0.0036465120501816273, -0.022269999608397484, -0.01898861490190029, -0.02502201870083809, -0.0021799865644425154, -0.3181028962135315, -1.5497195136049413e-06, -0.47060099244117737, -4.768370445162873e-07, -0.06938406825065613, -8.83301836438477e-05, -1.0252431631088257, -0.01289081759750843, -0.0024946779012680054, -6.603976362384856e-05, -2.646258592605591, -0.005575344432145357, -5.9126061387360096e-05, -0.002200207905843854, -0.16583135724067688, -0.0010508735431358218, -0.0033797069918364286, -0.0215324517339468, -0.08439499884843826, -0.06753256916999817, -0.0021113501861691475, -0.852152943611145, -0.09336519986391068, -0.0034708278253674507, -0.0017116909148171544, -0.001392586505971849, -0.0005471401382237673, -0.06307324022054672, -0.002383369952440262, -0.00011801023356383666, -0.0005657264264300466, -0.011741341091692448, -0.0011555430246517062, -5.1973900554003194e-05, -0.0004601611872203648, -0.0015079329023137689, -0.5677826404571533, -0.00015627116954419762, -0.04067351669073105, -0.6554232835769653, -0.2210690677165985, -0.036301638931035995, -0.00020358874462544918, -3.576272320060525e-06, -2.0265558760002023e-06, -0.0017395378090441227, -0.000359351426595822, -0.010680889710783958, -0.15253429114818573, -0.000296310376143083, -0.00034314466756768525, -0.001515788841061294, -0.1885322481393814, -0.0029031771700829268, -0.0015442363219335675, -2.5510462364763953e-05, -0.0020061859395354986, -3.2186455882765586e-06, -8.165503095369786e-05, -0.00013839241000823677, -0.010256442241370678, -0.08406680822372437, -0.004078879952430725, -0.22535963356494904, -0.402437299489975, -0.0007980260998010635, -0.00013302871957421303, -5.245195097813848e-06, -0.04866170510649681, -0.004661882296204567, -0.24151940643787384, -2.622600959512056e-06, -1.8715683836489916e-05, -1.6689286894688848e-06, -0.024458445608615875, -1.1920928244535389e-07, -1.7523612768854946e-05, -0.0007116645574569702, -0.0007630059262737632, -0.009311816655099392, -0.34755367040634155, -0.00036435641231946647, -0.0025502084754407406, -5.9602869441732764e-05, -0.00029976642690598965, -7.283422019099817e-05, -0.0029069806914776564, -0.007407579571008682, -2.5510462364763953e-05, -8.237022848334163e-05, -0.00027104519540444016, -0.00013219437096267939, -0.0036281016655266285, -0.0008378094644285738, -0.00431178929284215, -0.013345204293727875, -0.0008000510279089212, -0.9262470602989197, -2.9801878554280847e-05, -0.0024028734769672155, -4.291525328881107e-06, -7.86750388215296e-05, -1.0728830375228426e-06, -1.645074735279195e-05, -0.3656933903694153, -0.002980435499921441, -0.0045499843545258045, -0.08368906378746033, -1.276085615158081, -4.207999518257566e-05, -0.0002535260282456875, -2.586808113846928e-05, -2.253030106658116e-05, -9.775113539944869e-06, -4.362964682513848e-05, -0.012497209943830967, -1.497609257698059, -0.009642218239605427, -1.8465077877044678, -0.0003281293320469558, -0.0020329540129750967, -0.2535567879676819, -0.0023902675602585077, -0.1864919662475586, -2.312633478140924e-05, -0.003125071059912443, -0.04596325010061264, -0.002647468587383628, -0.27380606532096863, -0.009386573918163776, -0.00037531962152570486, -0.006556309759616852, -0.06143547594547272, -0.0024245171807706356, -0.0637151300907135, -0.09786614030599594, -0.0019497923785820603], "finish_reason": "length"}], "metrics": {"energy": 923.5863143615726, "energy_per_token": 3.607759040474893, "time": 22.279572, "time_per_token": 0.087029578125}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} does not exist\")\n\n    # Check if there are any CSV files in the directory\n    if len(glob.glob(data_dir + \"*.csv\")) == 0:\n        raise ValueError(f\"No CSV files found in {data_dir}\")\n\n    # Get the list of sorted CSV files in the directory\n    files = sorted(glob.glob(data_dir + \"*.csv\"))\n\n    # Create a Texttable\n    table = Texttable()\n\n    # Add column headings\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    # Add rows to the table\n    for file in files:\n        # Read the CSV file\n        df = pd.read_csv(file)\n\n        # Check if the CSV file is empty\n        if df.empty:\n            raise pd.errors.EmptyDataError(f\"File {file} is empty\")\n\n        # Add a row to the table\n        table.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "if", " len", "(", "glob", ".", "glob", "(", "data", "_", "dir", " +", " \"", "*", ".", "csv", "\"", "))", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " sorted", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "data", "_", "dir", " +", " \"", "*", ".", "csv", "\"", "))", "\n", "\n", "    ", "#", " Create", " a", " Text", "table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Add", " column", " head", "ings", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "#", " Add", " rows", " to", " the", " table", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Read", " the", " CS", "V", " file", "\n", "        ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " CS", "V", " file", " is", " empty", "\n", "        ", "if", " df", ".", "empty", ":", "\n", "            ", "raise", " pd", ".", "errors", ".", "Empty", "Data", "Error", "(", "f", "\"", "File", " {", "file", "}", " is", " empty", "\"", ")", "\n", "\n", "        ", "#", " Add", " a", " row", " to", " the", " table", "\n", "        ", "table", "."], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.908584475517273, -0.001077071763575077, -7.629365427419543e-06, -1.0728830375228426e-06, -0.0007303669699467719, -0.4502013325691223, -0.0002649671514518559, -0.0016313589876517653, -0.9603258967399597, -0.00012396997772157192, -0.00040892345714382827, -0.27014073729515076, -0.0002774807217065245, -1.4910069704055786, -3.0856211185455322, -0.13988837599754333, -0.20862695574760437, -0.012060223147273064, -0.508380651473999, -0.08689436316490173, -0.00028379703871905804, -0.000554288737475872, -0.03237093240022659, -0.02485760860145092, -0.6226367354393005, -0.035220663994550705, -0.0004742213059216738, -1.3110636472702026, -1.8962724208831787, -0.005434619728475809, -0.046677544713020325, -4.768258077092469e-05, -5.066266385256313e-05, -0.004075318109244108, -2.77068829536438, -8.34461570775602e-06, -1.6093124941107817e-05, -0.05241658166050911, -0.9517620205879211, -0.2806638479232788, -0.0017131189815700054, -0.0005128260818310082, -0.00010597144137136638, -0.0017019324004650116, -0.009270833805203438, -5.9126061387360096e-05, -3.6477376852417365e-05, -0.0005890780012123287, -0.002684919396415353, -0.0012229352723807096, -0.0019911956042051315, -0.0007032066932879388, -1.1920928244535389e-07, -0.0010763572063297033, -0.14269493520259857, -0.00037853704998269677, -0.13633973896503448, -0.0066964030265808105, -5.030505417380482e-05, -0.00046826363541185856, -0.06703493744134903, -0.0003567297535482794, -0.8145948052406311, -0.0004287039046175778, -2.7418097943154862e-06, -3.2186455882765586e-06, -0.01022576354444027, -6.031808152329177e-05, -7.855583680793643e-05, -0.01102463435381651, -0.0007982643437571824, -0.5024713277816772, -2.3092446327209473, -0.8922817707061768, -1.4324777126312256, -0.0001967951684491709, -1.0713868141174316, -0.1402684897184372, -6.83045873302035e-05, -0.08017819374799728, -0.80696702003479, -0.10050731152296066, -0.08041537553071976, -0.018385350704193115, -0.0006582954083569348, -2.0993378162384033, -0.024198416620492935, -0.07940717786550522, -0.048912953585386276, -0.09877275675535202, -8.821448318485636e-06, -0.00012659224739763886, -0.00024577934527769685, -0.025402475148439407, -3.6954811548639555e-06, -1.1920922133867862e-06, -0.005881858989596367, -0.011402086354792118, -0.006889872252941132, -0.000910106289666146, -0.00012599628826137632, -2.932505594799295e-05, -0.022091377526521683, -0.0013915151357650757, -0.1547182947397232, -0.0003626880934461951, -0.15747421979904175, -0.9233542084693909, -0.42672210931777954, -0.6693525910377502, -0.019770117476582527, -3.355419158935547, -0.0002317160106031224, -0.108378104865551, -0.0018103414913639426, -0.00031990656862035394, -1.6689286894688848e-06, -0.02300805225968361, -0.0006885541952215135, -0.9538527727127075, -0.00015746307326480746, -0.004620826803147793, -0.9139397144317627, -2.442538022994995, -1.829721212387085, -9.321732068201527e-05, -0.12311667203903198, -0.00011657988943625242, -0.015257081016898155, -0.000324673397699371, -0.12712080776691437, -0.2534545660018921, -0.0019869126845151186, -0.001149470335803926, -0.0004861365014221519, -5.566918844124302e-05, -0.0014699617167934775, -0.0006171943969093263, -5.578839045483619e-05, -7.271502545336261e-05, -0.00039033422945067286, -9.42901024245657e-05, -8.821448318485636e-06, -0.0003022690652869642, -0.00012754580529872328, -0.057316526770591736, -0.00019167017308063805, -0.08268174529075623, -0.5176383256912231, -0.6769236922264099, -1.0830533504486084, -0.014141235500574112, -0.0021048076450824738, -0.2631140351295471, -0.0009924016194418073, -0.016868799924850464, -0.17088466882705688, -0.0673714429140091, -0.005492595490068197, -0.0009472650708630681, -0.0003110878460574895, -0.00773458881303668, -2.175389289855957, -0.7664000391960144, -0.21343210339546204, -0.047534339129924774, -4.0531076592742465e-06, -0.010457717813551426, -1.7628564834594727, -0.0019840572495013475, -1.187875509262085, -0.0010231266496703029, -0.003933550789952278, -4.7801782784517854e-05, -0.0013007997767999768, -1.2516897186287679e-05, -0.0001433984871255234, -5.6265202147187665e-05, -0.0038263218011707067, -0.17146378755569458, -0.0011824527755379677, -0.3377479612827301, -0.0017394188325852156, -0.03594830632209778, -0.591541051864624, -0.13802170753479004, -0.03884303197264671, -0.36419087648391724, -2.5033637939486653e-05, -0.06719088554382324, -0.013048617169260979, -0.11046751588582993, -0.09616608172655106, -0.00025733973598107696, -0.008056997321546078, -0.10690560936927795, -0.0003047717036679387, -0.021180279552936554, -0.0017802356742322445, -0.00042632073746062815, -0.0019747773185372353, -0.047747571021318436, -0.36412951350212097, -3.0517112463712692e-05, -9.059495641849935e-05, -4.768360213347478e-06, -3.814689989667386e-06, -1.6689286894688848e-06, -1.0609570381348021e-05, -0.01133785117417574, -0.13486547768115997, -0.0005165196489542723, -1.6460487842559814, -0.061965711414813995, -0.026820622384548187, -0.0011369676794856787, -0.002928732428699732, -0.0006392342620529234, -0.02929046005010605, -0.00010501786891836673, -0.0001227780303452164, -0.011890605092048645, -0.0007728926721028984, -0.0166111271828413, -0.19049221277236938, -0.5398229956626892, -0.03584687039256096, -0.02143339440226555, -0.00023576818057335913, -0.00112160702701658, -0.11807640641927719, -0.00018892886873800308, -0.026747621595859528, -0.00015639036428183317], "finish_reason": "length"}], "metrics": {"energy": 871.5200554504407, "energy_per_token": 3.404375216603284, "time": 21.857225, "time_per_token": 0.08537978515625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} not found\")\n\n    # Get a list of sorted CSV files in the specified directory\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n    if len(csv_files) == 0:\n        raise ValueError(f\"No CSV files found in directory {data_dir}\")\n\n    # Create a Texttable object\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n\n    # Iterate over the sorted CSV files\n    for csv_file in csv_files:\n        try:\n            # Read the CSV file into a pandas DataFrame\n            df = pd.read_csv(csv_file)\n            # Add a row to the table with the file name, number of rows, and number of columns\n            table.add_row([os.path.basename(csv_file), df.shape[0], df.shape[1]])\n        except", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " sorted", " CS", "V", " files", " in", " the", " specified", " directory", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "    ", "if", " len", "(", "csv", "_", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Create", " a", " Text", "table", " object", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " sorted", " CS", "V", " files", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " the", " CS", "V", " file", " into", " a", " pandas", " Data", "Frame", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "#", " Add", " a", " row", " to", " the", " table", " with", " the", " file", " name", ",", " number", " of", " rows", ",", " and", " number", " of", " columns", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.908584475517273, -0.001077071763575077, -7.629365427419543e-06, -1.0728830375228426e-06, -0.0007303669699467719, -1.0427839756011963, -0.00042655906872823834, -0.9228023886680603, -0.0001267114421352744, -0.0005034133209846914, -0.3447513282299042, -0.0002803409588523209, -1.4044830799102783, -1.4621293544769287, -1.4709362983703613, -0.23051369190216064, -0.0003449321957305074, -1.7434449195861816, -0.1630685180425644, -0.00015007323236204684, -0.07285495102405548, -0.21339917182922363, -0.04276670515537262, -0.9801850914955139, -0.02952069602906704, -0.030844712629914284, -0.000727508042473346, -0.3692932426929474, -0.0005153281381353736, -0.017071561887860298, -0.0025597207713872194, -0.19790075719356537, -0.016357962042093277, -0.009029152803122997, -4.458328112377785e-05, -0.0012852036161348224, -0.0005981324939057231, -0.072292760014534, -2.3841855067985307e-07, -3.2186455882765586e-06, -1.3708974620385561e-05, -0.00016711745411157608, -9.297892393078655e-05, -0.00045003299601376057, -2.50339189733495e-06, -3.576278118089249e-07, -0.0002236116270069033, -0.6419926881790161, -0.005005684681236744, -0.0010203876299783587, -0.0002980979916173965, -0.0047686658799648285, -0.014893648214638233, -0.0015393561916425824, -1.1596870422363281, -0.05168452858924866, -2.3640475273132324, -2.95634672511369e-05, -5.1377883210079744e-05, 0.0, 0.0, -0.00010609064338495955, -0.008422449231147766, -6.794698856538162e-05, -0.00020239688456058502, -0.00023326536756940186, -0.0017028844449669123, -0.000770391256082803, -0.0013198483502492309, -0.0005143749876879156, -2.3841855067985307e-07, -0.005799253936856985, -0.11030151695013046, -0.0011173202656209469, -0.024151522666215897, -0.005671362392604351, -9.190614218823612e-05, -0.0004943578969687223, -0.01643829233944416, -0.0005022218101657927, -0.784017026424408, -0.07607478648424149, -0.0007880204357206821, -5.006777428206988e-06, -6.079655122448457e-06, -0.0013653251808136702, -6.651657167822123e-05, -7.331102824537084e-05, -0.026525335386395454, -0.0005802616360597312, -0.15702073276042938, -0.7731849551200867, -0.15780575573444366, -0.8354792594909668, -0.012268083170056343, -0.7925413846969604, -0.9612414240837097, -0.00031680811662226915, -0.1304505467414856, -0.0015870844945311546, -0.0002184867626056075, -1.1920922133867862e-06, -0.01617347076535225, -0.0005248599336482584, -0.43244972825050354, -0.3658520579338074, -0.0017357297474518418, -0.523756206035614, -0.20403066277503967, -0.001157329068519175, -0.0018828060710802674, -0.00010406429646536708, -0.005010666791349649, -0.0007509748684242368, -0.00013684290752280504, -5.602679812000133e-05, -0.0008093419019132853, -7.366862701019272e-05, -0.0007918321643956006, -0.011421886272728443, -0.6923768520355225, -0.0003412379592191428, -0.20766720175743103, -0.9974659085273743, -0.00047052756417542696, -0.4553409218788147, -0.5897859930992126, -1.1105940341949463, -0.07375573366880417, -1.1086402082582936e-05, -0.001353420433588326, -0.6273231506347656, -0.00022968991834204644, -0.007043531630188227, -0.9539991617202759, -0.00014995403762441128, -0.039966143667697906, -0.007918987423181534, -0.0011892396723851562, -0.012506628409028053, -0.0002351722796447575, -2.264974000354414e-06, -5.960446742392378e-06, -0.0004601611872203648, -0.00012110930401831865, -0.008986386470496655, -0.22735923528671265, -5.4238757002167404e-05, -0.0028242485132068396, -0.0022737146355211735, -0.3132942318916321, -0.28679245710372925, -0.11190930753946304, -0.02100776508450508, -1.6689286894688848e-06, -0.008823336102068424, -1.4621691703796387, -0.007306876126676798, -0.8882802128791809, -0.09496378153562546, -0.0009436921682208776, -0.07257340103387833, -0.00045503751607611775, -0.02940969355404377, -0.0005978942499496043, -0.0006439996068365872, -1.4305012882687151e-05, -0.0005378468777053058, -1.6689286894688848e-06, -5.94836674281396e-05, -3.7431014789035544e-05, -0.010375017300248146, -3.576278118089249e-07, -7.390948667307384e-06, -0.15308424830436707, -0.0006615119054913521, -0.6893922090530396, -0.15522949397563934, -0.5015318393707275, -0.7619603276252747, -0.13614749908447266, -0.011510627344250679, -0.0010303908493369818, -0.2968277037143707, -0.654009222984314, -0.06438511610031128, -0.05233818292617798, -0.005096064880490303, -0.0142558254301548, -0.01845475286245346, -0.00010930894495686516, -0.00022873646230436862, -0.028176844120025635, -0.0006135011790320277, -0.001595296896994114, -5.3881147323409095e-05, -0.00017808281700126827, -0.006353417877107859, -0.0005588161875493824, -0.06976792216300964, -0.00025900822947733104, -3.123234637314454e-05, -4.291525328881107e-06, -0.014272983185946941, -0.0030655316077172756, -0.03610572963953018, -2.0265558760002023e-06, -4.172316494077677e-06, -1.1920928244535389e-07, -0.009438416920602322, 0.0, -5.602820692729438e-06, -0.0022600365336984396, -7.629365427419543e-06, -4.291525328881107e-06, -0.0006002769805490971, -0.0029714026022702456, -0.20210322737693787, -0.00013958434283267707, -0.0011467316653579473, -4.9470632802695036e-05, -0.00045217780279926956, -4.577531944960356e-05, -0.0006680640508420765, -0.002644615015015006, -4.529942543740617e-06, -2.3364747903542593e-05, -8.487341256113723e-05, -9.643566590966657e-05, -0.0007856381707824767, -0.0006344689172692597, -0.00031144535751082003, -0.014286615885794163, -0.002760649425908923], "finish_reason": "length"}], "metrics": {"energy": 894.4099769840237, "energy_per_token": 3.4937889725938427, "time": 21.853521, "time_per_token": 0.08536531640625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} does not exist.\")\n\n    # Get sorted list of CSV files\n    file_pattern = os.path.join(data_dir, '*.csv')\n    file_list = sorted(glob.glob(file_pattern))\n    if len(file_list) == 0:\n        raise ValueError(\"No CSV files found in directory {data_dir}\")\n\n    # Initialize table\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_align(['r', 'l', 'l'])\n\n    # Add data to table\n    for file_name in file_list:\n        try:\n            # Read CSV file with pandas\n            df = pd.read_csv(file_name, header=None)\n        except pd.errors.EmptyDataError:\n            raise pd.errors.EmptyDataError(f\"Empty CSV file: {file_name}\")\n        row_count = len(", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " sorted", " list", " of", " CS", "V", " files", "\n", "    ", "file", "_", "pattern", " =", " os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "')", "\n", "    ", "file", "_", "list", " =", " sorted", "(", "glob", ".", "glob", "(", "file", "_", "pattern", "))", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " directory", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Initialize", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "r", "'", ",", " '", "l", "'", ",", " '", "l", "'])", "\n", "\n", "    ", "#", " Add", " data", " to", " table", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " CS", "V", " file", " with", " pandas", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "name", ",", " header", "=", "None", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " pd", ".", "errors", ".", "Empty", "Data", "Error", "(", "f", "\"", "Empty", " CS", "V", " file", ":", " {", "file", "_", "name", "}\"", ")", "\n", "        ", "row", "_", "count", " =", " len", "("], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.908584475517273, -0.001077071763575077, -7.629365427419543e-06, -1.0728830375228426e-06, -0.0007303669699467719, -0.4502013325691223, -0.0002649671514518559, -0.0016313589876517653, -0.5432612299919128, -0.008253159001469612, -0.00012563870404846966, -0.0005209281225688756, -0.24096757173538208, -0.00028546550311148167, -1.5874323844909668, -1.4456144571304321, -2.6658010482788086, -0.347091943025589, -0.0006825978052802384, -0.4442722797393799, -0.0007512131123803556, -0.09837870299816132, -1.5862812995910645, -0.0005103239673189819, -2.786118507385254, -0.04134984686970711, -2.9583747386932373, -0.0026115619111806154, -0.06732485443353653, -7.748573807475623e-06, -5.209310256759636e-05, -1.2636104656849056e-05, -0.0016464737709611654, -0.0005962263094261289, -0.002892717020586133, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.0006268443539738655, -0.9489733576774597, -0.02292405441403389, -0.005686535034328699, -0.001453534816391766, -0.00042703570215962827, -0.03100872039794922, -0.0009352362249046564, -1.4986777305603027, -0.014200001023709774, -0.15533308684825897, -0.002971045905724168, -0.45384371280670166, -0.020709240809082985, -0.003914196044206619, -1.5616295058862306e-05, -0.009395195171236992, -6.139089964563027e-05, -0.0004047528200317174, -1.5497195136049413e-06, -4.768370445162873e-07, -0.05974741652607918, -0.001784400548785925, -1.6483540534973145, -0.07388882339000702, -1.606096625328064, -6.01988795096986e-05, -7.450303382938728e-05, -5.960462772236497e-07, -3.3378546504536644e-06, -0.0002184867626056075, -0.01307768002152443, -6.294052582234144e-05, -0.00038556772051379085, -0.00043132537393830717, -0.0013154434273019433, -0.0009865660686045885, -0.0023789696861058474, -0.0005415403284132481, -1.1920928244535389e-07, -0.002410127781331539, -2.7618160247802734, -0.058052681386470795, -0.018417537212371826, -7.402622577501461e-05, -0.0014587724581360817, -0.04323431849479675, -0.07718314230442047, -1.7787432670593262, -2.6080706119537354, -1.403073787689209, -0.0003077510336879641, -0.00017045476124621928, -0.7791334390640259, -0.019893530756235123, -0.00117649941239506, -0.04368152096867561, -0.001057423185557127, -0.13630563020706177, -0.8707796335220337, -0.8879154324531555, -0.31144940853118896, -0.0004962643142789602, -0.16798846423625946, -0.005280238576233387, -0.0011200590524822474, -3.576278118089249e-07, -0.027500471100211143, -0.004171361681073904, -0.028897928074002266, -0.07095280289649963, -0.0018059387803077698, -0.458966463804245, -0.5916925668716431, -0.002081967191770673, -0.0023840833455324173, -0.00016425691137555987, -0.012729579582810402, -0.0009656057227402925, -0.0001530530134914443, -0.00013243274588603526, -0.0018030828796327114, -0.0001740304142003879, -0.0008878341759555042, -0.005509786307811737, -0.4936399459838867, -0.12696175277233124, -0.0007699147681705654, -0.05650164559483528, -2.861018856492592e-06, -0.11511034518480301, -4.172316494077677e-06, -0.8054108023643494, -0.10535284131765366, -2.084176778793335, -0.00026663561584427953, -0.00029690624796785414, -0.055821169167757034, -1.0572954416275024, -0.001257820287719369, -0.0002236116270069033, -0.006651878356933594, -0.07994722574949265, -0.003017398528754711, -0.019530843943357468, -0.7858543395996094, -0.0005212855176068842, -0.192917600274086, -1.067736268043518, -1.9488475322723389, -0.26542532444000244, -0.07409296929836273, -0.03389528766274452, -0.0011613775277510285, -0.020322786644101143, -0.32214897871017456, -1.0503849983215332, -0.7249957919120789, -0.002798809204250574, -0.011748881079256535, -8.344646857949556e-07, -1.3112935448589269e-05, -0.0005894353962503374, -0.0005552418879233301, -0.008733173832297325, -0.19013121724128723, -0.0001380348257953301, -0.0012538912706077099, -0.0017698828596621752, -2.5727179050445557, -0.5722048282623291, -0.2693844437599182, -2.8967437174287625e-05, -0.167507141828537, -2.792036294937134, -0.6556536555290222, -0.3062676787376404, -0.0009388091857545078, -0.1575261652469635, -0.0019593106117099524, -0.0008588915807195008, -1.0490362910786644e-05, -0.0007784912013448775, -1.490105023549404e-05, -9.738924563862383e-05, -0.00015877417172305286, -0.02277316525578499, -0.00011240804451517761, -9.60780744208023e-05, -1.8889660835266113, -1.5630831718444824, -0.01562965288758278, -0.2328336536884308, -0.15918174386024475, -0.016857663169503212, -1.8722431659698486, -0.0037276323419064283, -1.4061988592147827, -2.2172682292875834e-05, -0.00100740697234869, -2.3841830625315197e-06, -0.0002693767019081861, -1.0728830375228426e-06, -1.168244216387393e-05, -0.5254731178283691, -0.004402943886816502, -0.00215143826790154, -0.08347601443529129, -1.5984992980957031, -1.7165990357170813e-05, -0.00022396916756406426, -0.00013100242358632386, -4.184158387943171e-05, -2.4676019165781327e-05, -1.823885577323381e-05, -0.02819700911641121, -0.18385176360607147, -0.015677299350500107, -1.0382375717163086, -0.3348037004470825, -2.4914430468925275e-05, -0.01498865894973278, -0.5521423816680908, -0.0026046657003462315, -0.02562454529106617, -4.351044481154531e-05, -6.806619057897478e-05, -0.016056519001722336, -0.0002985746832564473, -0.005403437186032534, -1.0467875003814697, -2.931422472000122, -0.07442743331193924, -0.057243578135967255, -0.030896034091711044, -1.2367514371871948, -6.997340824455023e-05], "finish_reason": "length"}], "metrics": {"energy": 900.0232162427899, "energy_per_token": 3.515715688448398, "time": 22.052765, "time_per_token": 0.08614361328125}}
{"outputs": [{"text": "# Validate data_dir\n    if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"The specified directory '{data_dir}' does not exist.\")\n\n    # Initialize table\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_align(['l', 'r', 'r'])\n    table.set_deco(Texttable.HEADER | Texttable.VLINES)\n\n    # Sort CSV files in ascending order of file name\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n\n    # Ensure there are CSV files in the directory\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in the directory '{data_dir}'.\")\n\n    # Process each CSV file and populate the table\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file)\n            file_name = os", "tokens": ["#", " Valid", "ate", " data", "_", "dir", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "\n", "    ", "table", ".", "set", "_", "dec", "o", "(", "Text", "table", ".", "HEAD", "ER", " |", " Text", "table", ".", "V", "LIN", "ES", ")", "\n", "\n", "    ", "#", " Sort", " CS", "V", " files", " in", " ascending", " order", " of", " file", " name", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "\n", "    ", "#", " Ensure", " there", " are", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Process", " each", " CS", "V", " file", " and", " populate", " the", " table", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "file", "_", "name", " =", " os"], "logprobs": [-1.68333899974823, -2.6475188732147217, -0.04495878145098686, -2.3514761924743652, -0.17803379893302917, -0.0023744504433125257, -0.6187393665313721, -0.0028713210485875607, -0.04917106032371521, -0.013080150820314884, -0.023354806005954742, -4.100715523236431e-05, -0.0015256681945174932, -8.11782301752828e-05, -1.3214787244796753, -0.0008367374539375305, -0.00033718624035827816, -0.0009827552130445838, -1.311301275563892e-06, -3.576278118089249e-07, -0.0034389898646622896, -0.0032020746730268, -0.0025630502495914698, -0.010026329196989536, -0.009680116549134254, -4.053033626405522e-05, -6.6756979322235566e-06, -0.048715412616729736, -0.20955872535705566, -0.035172101110219955, -1.2673237323760986, -0.2881198227405548, -0.05377063527703285, -0.5421427488327026, -0.0003081085451412946, -0.0005697772721759975, -7.986990567587782e-06, -8.344646857949556e-07, -0.0012231733417138457, -0.012911529280245304, -0.00023529145983047783, -0.0005913416389375925, -0.08300084620714188, -0.01955726370215416, -0.0003351603518240154, -0.0002898749662563205, -0.09843326359987259, -0.0005921755800954998, -0.026066679507493973, -2.9623160362243652, -1.3098987340927124, -0.29375767707824707, -0.00033146608620882034, -0.17908738553524017, -0.003957417793571949, -0.0016552807064726949, -8.344646857949556e-07, -0.029373694211244583, -0.006031288765370846, -0.06619536131620407, -0.05233263969421387, -0.0026567422319203615, -0.31432169675827026, -0.5330213308334351, -0.0013580633094534278, -0.001622551935724914, -0.00017796363681554794, -0.021285196766257286, -0.0008216104470193386, -0.0001387499796692282, -0.00014435203047469258, -0.002435457892715931, -0.00015853578224778175, -0.0005054388311691582, -0.010793283581733704, -0.5681539177894592, -0.07310596108436584, -0.0016200524987652898, -0.06460964679718018, -2.7418097943154862e-06, -0.11086974292993546, -4.291525328881107e-06, -0.7393459677696228, -0.11062035709619522, -0.24170243740081787, -0.00020632999076042324, -0.0002037079248111695, -0.026841511949896812, -0.095243439078331, -0.0002330270071979612, -7.60526381782256e-05, -0.0030490122735500336, -0.0016959820641204715, -0.001117201172746718, -0.04647853597998619, -0.7506117224693298, -0.043068308383226395, -0.0009159421897493303, -0.02540270797908306, -4.291525328881107e-06, -0.9813824892044067, -0.0013636585790663958, -0.0003551805857568979, -0.004390006884932518, 0.0, -1.5139465176616795e-05, -0.04148080572485924, -0.00010525626566959545, -0.1409524828195572, -0.0143966069445014, 0.0, -2.145764938177308e-06, -0.43248361349105835, -0.000846027978695929, -2.5748875486897305e-05, -0.08844996243715286, -0.013252743519842625, -0.08504153043031693, -0.0003955773718189448, -0.02556714415550232, -2.6718783378601074, -0.6032242774963379, -0.0033532127272337675, -0.03613412752747536, -0.7380885481834412, -0.7433620095252991, -0.007625873666256666, -2.665008783340454, -1.139456033706665, -0.4263574481010437, -0.05479360744357109, -0.0004568248405121267, -0.26097172498703003, -0.0002727136597968638, -0.009367560036480427, -0.0030589953530579805, -0.09918446838855743, -0.01948992721736431, -0.009839014150202274, -3.361645576660521e-05, -0.0019312318181619048, -0.0006258912617340684, -0.0597374252974987, -2.264974000354414e-06, -2.3841830625315197e-06, -7.629365427419543e-06, -0.00020895205670967698, -0.00018451895448379219, -0.0003418338019400835, -1.9073468138230965e-06, -1.6689286894688848e-06, -0.00017033556650858372, -0.16702619194984436, -0.006805574521422386, -0.0008347125840373337, -0.000439428084064275, -0.0060940878465771675, -0.05981939658522606, -0.0011504229623824358, -0.22902195155620575, -0.00018344627460464835, -0.08951330184936523, -3.708843231201172, -0.43479931354522705, -0.10306818783283234, -0.18130949139595032, -6.318072337307967e-06, -0.00022635281493421644, -0.0559113547205925, -0.08962654322385788, -0.7772398591041565, -0.00847682449966669, -5.94836674281396e-05, -0.0009026029147207737, -0.11755158752202988, -0.000940714729949832, 0.0, -1.1920928244535389e-07, -1.2516897186287679e-05, -0.00030501006403937936, -0.0002244459028588608, -0.0004968600696884096, -0.0011660212185233831, -0.0007522851810790598, 0.0, -0.00917327031493187, -0.07295580953359604, -0.000895933189895004, -0.23767153918743134, -0.00367002934217453, -1.2278481335670222e-05, -0.0002335037279408425, -0.02067047357559204, -0.0003364712174516171, -0.9236183166503906, -0.28776058554649353, -0.14089563488960266, -4.9828242481453344e-05, -0.001989767886698246, -2.861018856492592e-06, -1.4305104514278355e-06, -0.004371847957372665, -0.15170833468437195, -0.0029403807129710913, -6.282132380874828e-05, -4.7444173105759546e-05, -0.004031982738524675, -0.0002951186615973711, -0.1289834976196289, -1.038931131362915, -0.26514747738838196, -0.06432364135980606, -4.768370445162873e-07, -0.0009305914281867445, -1.9098448753356934, -2.0156288146972656, -0.2757752537727356, -0.002334371441975236, -0.023069677874445915, -0.00035851728171110153, -0.018895387649536133, -0.9597140550613403, -0.00012420836719684303, -0.03829660639166832, -0.0036889140028506517, -0.0009048658539541066, -0.014796045608818531, -4.768370445162873e-07, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0005066303419880569, -0.00010227633902104571, -0.005583050195127726, -0.17185859382152557, -3.4450891689630225e-05, -0.0006656814948655665, -0.0010605193674564362, -0.4752906560897827, -0.0007830176036804914, -0.000802075956016779, -6.794906312279636e-06, -0.0009261847590096295, -2.3841855067985307e-07, -3.909988299710676e-05, -3.123234637314454e-05, -0.007346164435148239, -1.1920928244535389e-07, -6.794906312279636e-06, -0.18775002658367157, -0.05785265937447548, -0.08475276082754135, -1.9369548559188843, -0.012461184523999691, -0.024641532450914383, -0.0026739814784377813, -0.009426607750356197], "finish_reason": "length"}], "metrics": {"energy": 915.7339684486384, "energy_per_token": 3.5770858142524937, "time": 22.065264, "time_per_token": 0.0861924375}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"Directory not found.\")\n\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n    if not csv_files:\n        raise ValueError(\"No CSV files found in the directory.\")\n\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file)\n            file_name = os.path.basename(csv_file)\n            rows = len(df)\n            columns = len(df.columns)\n            table.add_row([file_name, rows, columns])\n        except pd.errors.EmptyDataError:\n            raise\n        except Exception as e:\n            print(f\"Error reading file '{file_name}': {e}\")\n            continue\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", "\n", "            ", "rows", " =", " len", "(", "df", ")", "\n", "            ", "columns", " =", " len", "(", "df", ".", "columns", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "file", "_", "name", ",", " rows", ",", " columns", "])", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "Error", " reading", " file", " '", "{", "file", "_", "name", "}", "':", " {", "e", "}\"", ")", "\n", "            ", "continue", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -1.8561794757843018, -0.9457641243934631, -1.1576528549194336, -0.00463838828727603, -1.485032081604004, -0.052337054163217545, -0.0004919749335385859, -0.0013423488708212972, -0.33117005228996277, -0.000392598332837224, -0.8116540312767029, -0.0019840572495013475, -0.037209633737802505, -0.0026204793248325586, -1.0473406314849854, -0.022319313138723373, -0.008481789380311966, -3.242440288886428e-05, -0.0009535771678201854, -0.0010523025412112474, -0.14466018974781036, -3.576278118089249e-07, -4.6491513785440475e-06, -1.4305104514278355e-06, -0.0006194579764269292, -0.0002205128694185987, -0.0008504349971190095, -2.7418097943154862e-06, -5.960462772236497e-07, -0.0006069486844353378, -0.6956177353858948, -0.008327759802341461, -0.0010515881003811955, -0.00045718232286162674, -0.011129680089652538, -0.0461687371134758, -0.012517930008471012, -0.5289070010185242, -0.013491288758814335, -0.11136896908283234, -0.0007584794075228274, 0.0, -1.1920922133867862e-06, -5.960462772236497e-07, -0.00029476112104021013, -0.0012137673329561949, -0.0006406639004126191, -0.0013980624498799443, -0.0009517907164990902, -1.1920928244535389e-07, -0.005225333850830793, -0.034910235553979874, -0.019113294780254364, -0.007352436427026987, -6.55629628454335e-05, -0.0010644490830600262, -0.03722008690237999, -0.10869467258453369, -0.17722705006599426, -0.6182986497879028, -0.012626232579350471, -0.0005042473785579205, -0.00015090756642166525, -9.297892393078655e-05, -0.018395066261291504, -0.0003299168893136084, -0.40842100977897644, -0.009837007150053978, -0.0031585826072841883, -8.344646857949556e-07, -0.024719571694731712, -0.004047536291182041, -0.007127335760742426, -0.020026860758662224, -0.0019525288371369243, -0.31127408146858215, -0.4445056617259979, -0.0007636015070602298, -0.0016060085035860538, -0.00010287232726113871, -0.003925476688891649, -0.0006098079611547291, -0.00013839241000823677, -9.643566590966657e-05, -0.000943096645642072, -0.00010775939153973013, -0.0005075835506431758, -0.001800108002498746, -0.30002301931381226, -1.1094948053359985, -1.212218999862671, -0.00024387246230617166, -0.09007494151592255, -0.006403996609151363, -0.0008753282018005848, -0.06415282189846039, -0.00019858295854646713, -1.7881377516459906e-06, -3.3378546504536644e-06, -0.0013683013385161757, -0.00040904260822571814, -0.004123400431126356, -0.10466767102479935, -4.827859811484814e-05, -0.0005896736984141171, -0.000773369160015136, -0.13506285846233368, -0.000940595637075603, -0.0007236960809677839, -1.0013530300057027e-05, -0.0014278227463364601, -4.768360213347478e-06, -2.3483953555114567e-05, -5.4834770708112046e-05, -0.009355632588267326, -1.07287787614041e-05, -3.6954811548639555e-06, -0.126337468624115, -0.005361700896173716, -0.169325053691864, -2.1747186183929443, -0.012267965823411942, -0.050167229026556015, -0.0058518750593066216, -0.023252202197909355, -1.5497195136049413e-06, -1.4305104514278355e-06, -7.152555099310121e-07, -0.02039053477346897, 0.0, -3.6954811548639555e-06, -0.0008506731828674674, -4.529942543740617e-06, -5.125986263010418e-06, -0.001157686347141862, -0.008519613184034824, -0.0028208012226969004, -1.6676876544952393, -0.4275035560131073, -1.5225446224212646, -1.7165990357170813e-05, -0.00027056847466155887, -0.43188896775245667, -0.004531709477305412, -0.0001481661747675389, -0.5663454532623291, -0.00014327930693980306, -0.013378022238612175, -0.00014959646796341985, -0.0016124354442581534, -3.6954195820726454e-05, -0.0010542079107835889, -0.0006934384000487626, -0.0014480592217296362, -0.034237250685691833, -0.01358866598457098, -0.00041547726141288877, -3.504691630951129e-05, -2.9802276912960224e-06, -0.01654253527522087, -0.0011736417654901743, -0.006013988982886076, -3.814689989667386e-06, 0.0, -0.004800698719918728, -0.019735872745513916, -0.00040844682371243834, -0.0001984637783607468, -0.001053969725035131, -0.0006282739923335612, -0.01392635703086853, -0.0006668727728538215, -1.1591477394104004, -2.861018856492592e-06, -0.0006637753685936332, -1.4305104514278355e-06, -4.756337511935271e-05, -7.152555099310121e-07, -4.172316494077677e-06, -0.39904850721359253, -0.0017849955474957824, -0.0018111744429916143, -0.0550898015499115, -0.5655121803283691, -1.8220975399017334, -0.04249345511198044, -0.35856491327285767, -0.06846331804990768, -0.013659576885402203, -0.00015507926582358778, -0.0014103237772360444, -0.0006579380133189261, -0.21593426167964935, -0.00341023993678391, -0.07494297623634338, -0.0294584259390831, -0.14036545157432556, -0.800041675567627, -0.9619668126106262, -1.8550738096237183, -5.245071224635467e-05, -2.8929080963134766, -0.007597480434924364, -3.349725011503324e-05, -0.005906745791435242, -0.000328367663314566, -0.0019759670831263065, -0.7009949684143066, -0.007338709197938442, -0.003602564102038741, -0.006336953025311232, -2.137648820877075, -0.10660336911678314, -0.006553467363119125, -0.11454909294843674, -0.0017538178944960237, -0.10450371354818344, -0.044019922614097595, -0.0013888961402699351, -2.074220174108632e-05, -0.00012218205665703863, -0.2408088594675064, -0.00652705691754818, -0.37711066007614136], "finish_reason": "stop"}], "metrics": {"energy": 852.6033593626022, "energy_per_token": 3.5086557998460997, "time": 20.793968, "time_per_token": 0.08557188477366255}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory '{data_dir}' does not exist.\")\n\n    # Find all CSV files in the directory and its subdirectories\n    csv_files = glob.glob(os.path.join(data_dir, '**/*.csv'), recursive=True)\n\n    # Check if there are any CSV files\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in the directory '{data_dir}'.\")\n\n    # Sort the CSV files in ascending order\n    csv_files = sorted(csv_files)\n\n    # Initialize a Texttable instance\n    table = Texttable()\n\n    # Set the headers for the table\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    # Read each CSV file, count the rows and columns, and add to the table\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Find", " all", " CS", "V", " files", " in", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "**", "/*", ".", "csv", "')", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " CS", "V", " files", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " the", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Sort", " the", " CS", "V", " files", " in", " ascending", " order", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "csv", "_", "files", ")", "\n", "\n", "    ", "#", " Initialize", " a", " Text", "table", " instance", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Set", " the", " headers", " for", " the", " table", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "#", " Read", " each", " CS", "V", " file", ",", " count", " the", " rows", " and", " columns", ",", " and", " add", " to", " the", " table", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file"], "logprobs": [-1.68333899974823, -0.6197478771209717, -0.08166000247001648, -0.12191270291805267, -0.8767383694648743, -0.02191248908638954, -0.07003604620695114, -0.0007668177131563425, -0.005321385804563761, -0.007091234438121319, -0.001849489752203226, -6.198863957251888e-06, -0.00045658653834834695, -6.949660019017756e-05, -0.10975849628448486, -0.00020394629973452538, -0.0003053675754927099, -5.960462772236497e-07, -1.311301275563892e-06, -0.006141836289316416, -0.0005266471416689456, -0.0023217645939439535, -0.007264508865773678, -0.0020284331403672695, -4.172238186583854e-05, -3.576272320060525e-06, -0.02676897682249546, -0.2748839259147644, -0.024690262973308563, -1.1617666482925415, -0.49184882640838623, -0.6154102683067322, -0.00012778419477399439, -0.0009971652179956436, -7.986990567587782e-06, -8.344646857949556e-07, -0.0019032713025808334, -0.01382607314735651, -0.00012134769349358976, -0.0010649253381416202, -0.07149765640497208, -0.012565608136355877, -0.0001991788885788992, -0.0002227773511549458, -0.032961439341306686, -0.00047255316167138517, -0.009221462532877922, -0.9134126901626587, -0.17201809585094452, -0.13452750444412231, -2.5629668016335927e-05, -0.0015234065940603614, -0.07373059540987015, -0.0030573313124477863, -0.26453495025634766, -1.4117000102996826, -0.8829801082611084, -0.0025301130954176188, -0.03396454453468323, -7.033323527139146e-06, -0.12756487727165222, -0.0002033503697020933, -0.13164940476417542, -0.00015925093612167984, -0.015072857029736042, -0.001624099095351994, -0.02710827998816967, -1.7881233361549675e-05, -0.011266305111348629, -0.0018195039592683315, -0.21748247742652893, -2.145764938177308e-06, -1.1920922133867862e-06, -1.7881377516459906e-06, -0.00030179237364791334, -0.0005286726518534124, -0.000567275274079293, -2.622600959512056e-06, -3.2186455882765586e-06, -0.0006310140597634017, -0.23549410700798035, -0.008891277015209198, -0.9009720683097839, -0.001929447171278298, -0.00018142008048016578, -0.00217189802788198, -9.142934868577868e-05, -0.0004768426588270813, -0.0001209901092806831, -0.00032443503732793033, -0.0005871717585250735, -0.0013904437655583024, -0.043317198753356934, -0.00014840454969089478, -0.016111887991428375, -0.25545746088027954, -0.007894741371273994, -0.034651875495910645, -0.0029078128281980753, -0.38567590713500977, -0.0024436633102595806, -7.152555099310121e-07, -6.115249561844394e-05, -0.5226930379867554, -2.7656173188006505e-05, -0.00039450492477044463, -0.029995933175086975, -0.00026008085114881396, -4.768370445162873e-07, 0.0, 0.0, -0.00042215018766000867, -0.00013934595335740596, -0.0002356490003876388, -0.0009697740315459669, -0.00027652730932459235, 0.0, -0.002292030956596136, -0.07274489104747772, -0.0002836778585333377, -0.30978700518608093, -0.0016731324139982462, -2.861018856492592e-06, -0.00014578233822248876, -0.013540918938815594, -0.00033444532891735435, -0.541923463344574, -0.025035737082362175, -0.026656623929739, -3.0040289857424796e-05, -0.0006375664379447699, -2.7418097943154862e-06, -1.0013530300057027e-05, -0.0037123113870620728, -0.1938256174325943, -0.0004922132357023656, -2.5987286790041253e-05, -3.182837463100441e-05, -0.007212671916931868, -0.0005627478822134435, -0.06440567970275879, -1.10606849193573, -0.23148582875728607, -0.2116851806640625, -1.0013530300057027e-05, -0.020580671727657318, -0.7583481669425964, -0.04583378881216049, -0.003161196829751134, -0.12675899267196655, -0.00019369633810129017, -0.2917410731315613, -3.6954811548639555e-06, -0.0001728385395836085, -1.1716187000274658, -0.0030341562815010548, -0.00045217780279926956, -0.0003518439189065248, -7.152555099310121e-07, -1.4305104514278355e-06, -0.01192252803593874, -0.0004914983292110264, -0.01789671741425991, -0.00035446559195406735, -0.03182211518287659, -0.6504522562026978, -1.5312336683273315, -0.34720590710639954, -0.01218164712190628, -1.296815037727356, -0.17349103093147278, -0.00040356122190132737, -0.10055183619260788, -0.002389197237789631, -0.0002315968304174021, -9.536738616588991e-07, -0.027185315266251564, -0.0004949536523781717, -0.5513538718223572, -0.00013279033009894192, -0.00225242436863482, -0.5129513144493103, -0.1156642735004425, -1.403639316558838, -1.5976179838180542, -0.028309769928455353, -0.021574918180704117, -0.004651677794754505, -7.486063259420916e-05, -0.2643274962902069, -0.000858415151014924, -0.058474186807870865, -1.6664851903915405, -0.015632351860404015, -0.001456867903470993, -0.0014922209084033966, -6.687417771900073e-05, -0.0014267513761296868, -0.0007639588438905776, -0.00010513706365600228, -9.858122211880982e-05, -0.000276765669696033, -0.00013040646445006132, -1.4543427823809907e-05, -0.00029225845355540514, -8.368142152903602e-05, -0.06903945654630661, -0.00017438798386137933, -0.04400041699409485, -1.173249363899231, -0.14793890714645386, -0.011119659058749676, -1.1920922133867862e-06, -0.0014863882679492235, -0.7763150334358215, -1.2931095361709595, -0.9707691073417664, -1.2258695363998413, -0.04695090278983116, -0.0037972265854477882, -0.009938281960785389, -0.00632996391505003, -0.04884131997823715, -0.8543748259544373, -0.007659707684069872, -0.0012276978231966496, -0.0017376337200403214, -0.0008419782971031964, -0.017538107931613922, -0.8910818099975586, -9.858122211880982e-05, -0.020668137818574905, -0.0032561400439590216, -0.0007397775771096349, -0.004967253189533949, -2.6464111215318553e-05, -1.1920928244535389e-07, -7.152555099310121e-07, -0.001312467036768794, -9.810443589231e-05, -0.009344294667243958, -0.19199950993061066, -6.353653589030728e-05, -0.000770510348957032, -0.0013262771535664797, -0.2189193069934845, -0.0009329734020866454, -0.0010388459777459502, -1.3828182090946939e-05, -0.00041952868923544884, -2.2649508537142538e-05, -4.0411134250462055e-05, -4.279521817807108e-05, -0.007456093095242977, -8.344646857949556e-07, -5.483612312673358e-06], "finish_reason": "length"}], "metrics": {"energy": 914.5538459739685, "energy_per_token": 3.5724759608358143, "time": 22.052668, "time_per_token": 0.086143234375}}
{"outputs": [{"text": "# Validate input\n    if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"The specified directory does not exist: {data_dir}\")\n\n    # Find all CSV files in the specified directory and sort them\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n\n    # Validate that there are CSV files in the specified directory\n    if not csv_files:\n        raise ValueError(\"No CSV files found in the specified directory\")\n\n    # Create a table object\n    table = Texttable()\n    # Set the header row\n    table.header([\"File\", \"Rows\", \"Columns\"])\n    # Set the alignment of each column in the table\n    table.set_cols_align(['l', 'r', 'r'])\n\n    # Iterate through each CSV file\n    for file in csv_files:\n        try:\n            # Read the CSV file using pandas\n            df = pd.read_csv(file)\n            # Append a row to the", "tokens": ["#", " Valid", "ate", " input", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", ":", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Find", " all", " CS", "V", " files", " in", " the", " specified", " directory", " and", " sort", " them", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "\n", "    ", "#", " Valid", "ate", " that", " there", " are", " CS", "V", " files", " in", " the", " specified", " directory", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " table", " object", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "#", " Set", " the", " header", " row", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "#", " Set", " the", " alignment", " of", " each", " column", " in", " the", " table", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " CS", "V", " file", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " the", " CS", "V", " file", " using", " pandas", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "#", " App", "end", " a", " row", " to", " the"], "logprobs": [-1.68333899974823, -2.6475188732147217, -0.04495878145098686, -1.8398641347885132, -0.8986302614212036, -0.004010967444628477, -0.04121017828583717, -0.013266036286950111, -0.03176160156726837, -1.1086402082582936e-05, -0.0008955758530646563, -8.713819261174649e-05, -1.3806354999542236, -0.0003325386205688119, -0.0002759314374998212, -0.0009843033039942384, -9.536738616588991e-07, -8.344646857949556e-07, -0.0027105992194265127, -0.003273487789556384, -0.0023347281385213137, -0.007883032783865929, -0.005152636673301458, -4.8040190449682996e-05, -6.6756979322235566e-06, -0.040388818830251694, -0.2470555156469345, -0.039852630347013474, -1.52052903175354, -0.5458449125289917, -0.027913374826312065, -1.4326560497283936, -0.0003232433518860489, -0.0009289240115322173, -0.03331686556339264, -0.018490329384803772, -0.000746448349673301, -1.2278481335670222e-05, -9.536738616588991e-07, -0.008369017392396927, -0.00011169286881340668, -0.0002037079248111695, -0.2708442211151123, -0.0005765683017671108, -0.08893389254808426, -0.9511290192604065, -0.4724079668521881, -0.08314642310142517, -0.00010263393050990999, -0.002394429873675108, -0.08245651423931122, -0.055023688822984695, -0.7064080238342285, -0.008771697990596294, -1.5984020233154297, -0.5923949480056763, -0.08660132437944412, -1.766055703163147, -0.00023231192608363926, -0.2805688679218292, -0.00023123928986024112, -0.015053246170282364, -0.0015240018256008625, -0.3714617192745209, -0.011749470606446266, -0.003196489764377475, -4.1960789531003684e-05, -0.002430938882753253, -0.0005391574813984334, -0.04805801808834076, -6.437280717364047e-06, -1.6689286894688848e-06, -5.960462772236497e-07, -0.0001399419124936685, -7.414542778860778e-05, -0.00037174468161538243, -1.5497195136049413e-06, -4.768370445162873e-07, -0.0001538873475510627, -0.6417567729949951, -0.005119547713547945, -0.0009908534120768309, -0.00019143179815728217, -0.004473796579986811, -0.004214809741824865, -0.0010483728256076574, -0.40334761142730713, -0.00010573305189609528, -0.09383340924978256, -0.7328675985336304, -6.246371776796877e-05, -0.7034999132156372, -0.09377957880496979, -0.042013950645923615, -0.13991905748844147, -7.271740287251305e-06, -0.0002224197960458696, -0.04133017361164093, -0.0007217901293188334, -0.400219589471817, -0.0003500564198475331, -0.0026637569535523653, -3.8742269680369645e-05, -0.0006281548412516713, -0.17926187813282013, -0.0012272215681150556, 0.0, 0.0, 0.0, -0.0002640137099660933, -0.0001308832288486883, -0.00029666791670024395, -0.0005920564290136099, -0.0006634180317632854, 0.0, -0.0022647941950708628, -1.7417833805084229, -0.35385024547576904, -0.003802689490839839, -1.2755313036905136e-05, -0.0004456242313608527, -0.03214331343770027, -0.014102094806730747, -0.046042148023843765, -0.019514011219143867, -0.0006896263221278787, -0.5562179088592529, -0.00046004203613847494, -4.279521817807108e-05, -0.004751225467771292, -0.0006528153317049146, -0.04131210222840309, -0.8166252970695496, -0.44843369722366333, -0.785780131816864, -2.724116802215576, -1.1355435848236084, -0.00038961926475167274, -0.06996246427297592, -0.007335514295846224, -0.0005423743859864771, -8.344646857949556e-07, -0.02439853549003601, -0.0015344761777669191, -0.5912458896636963, -2.4176087379455566, -0.599667489528656, -0.39614903926849365, -1.1846745014190674, -1.9818203449249268, -0.26268428564071655, -0.00027640812913887203, -0.03495432808995247, -0.00035279724397696555, -0.01699397712945938, -1.1674392223358154, -0.008987095206975937, -0.0012963948538526893, -0.0009282094542868435, -0.00010823617776622996, -0.0044717793352901936, -0.0007259594276547432, -4.875540980719961e-05, -9.154854342341423e-05, -0.0007097586058080196, -0.0001287377526750788, -1.0132738680113107e-05, -0.00035315475543029606, -0.00025340684805996716, -0.3672812283039093, -0.23784127831459045, -0.2588798999786377, -0.06630916148424149, -1.0578703880310059, -1.0511878728866577, -0.46545419096946716, -0.011059768497943878, -2.756194829940796, -0.004243655130267143, -0.007300603669136763, -0.05566028133034706, -0.00037722624256275594, -0.023894324898719788, -3.9934315282152966e-05, -0.06352753937244415, -2.3841855067985307e-07, -0.0003971264814026654, -5.960462772236497e-07, -0.0033956270199269056, -1.6574079990386963, -0.2340640276670456, -0.00011288482346571982, -0.00021801002731081098, -0.010923940688371658, -0.0720677301287651, -0.00016664070426486433, -6.615896563744172e-05, -0.002203776268288493, -0.003028332721441984, -0.004503584001213312, -0.0025439064484089613, -0.5715373754501343, -0.0005819296347908676, -0.20226985216140747, -0.6388034224510193, -0.0010187203297391534, -1.3141825199127197, -0.5479887127876282, -0.04587728902697563, -5.364403477869928e-06, -0.001796776195988059, -0.6888906955718994, -0.00018130090029444546, -0.003899471601471305, -0.6902702450752258, -0.2522762715816498, -0.010340803302824497, -5.364403477869928e-06, -3.576278118089249e-07, -8.344646857949556e-07, -0.0004077318590134382, -0.00010513706365600228, -0.014911618083715439, -0.4620662033557892, -0.00011503035057103261, -0.0020559143740683794, -0.0027995225973427296, -0.06410519033670425, -0.33557212352752686, -0.10508747398853302, -0.1362398862838745, -3.6954811548639555e-06, -0.010797528550028801, -0.5364817976951599, -0.08122606575489044, -0.23308145999908447, -0.0003164505760651082, -0.1486535370349884, -0.0013581824023276567, -0.0005093707586638629, -1.4305012882687151e-05, -0.00010334911348763853, -4.768370445162873e-07, -3.2782016205601394e-05, -5.519237674889155e-05, -0.0030273818410933018, -0.11396976560354233, -0.0005614373367279768, -0.22864235937595367, -0.01545336190611124, -1.7978160381317139, -0.00015352977789007127, -0.6593650579452515, -0.2962508797645569, -0.07738451659679413, -0.002337939338758588], "finish_reason": "length"}], "metrics": {"energy": 910.5266716442114, "energy_per_token": 3.556744811110201, "time": 22.05088, "time_per_token": 0.08613625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The specified directory '{data_dir}' does not exist.\")\n\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n\n    for csv_file in sorted(csv_files):\n        try:\n            df = pd.read_csv(csv_file)\n            filename = os.path.basename(csv_file)\n            num_rows = len(df.index)\n            num_cols = len(df.columns)\n            table.add_row([filename, num_rows, num_cols])\n        except pd.errors.EmptyDataError as e:\n            raise e\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "for", " c", "sv", "_", "file", " in", " sorted", "(", "csv", "_", "files", "):", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", "\n", "            ", "num", "_", "rows", " =", " len", "(", "df", ".", "index", ")", "\n", "            ", "num", "_", "cols", " =", " len", "(", "df", ".", "columns", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "filename", ",", " num", "_", "rows", ",", " num", "_", "cols", "])", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "            ", "raise", " e", "\n", "\n", "    ", "return", " table", ".", "draw", "()"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -1.0948567390441895, -0.7506711483001709, -0.0236186645925045, -1.0594706535339355, -0.00030179237364791334, -0.0010082405060529709, -3.099436753473128e-06, -2.0265558760002023e-06, -0.0015410225605592132, -0.01063076313585043, -0.0004303721070755273, -0.000816012208815664, -0.07245631515979767, -0.0141063267365098, -0.0002928543253801763, -0.0005974177038297057, -0.164785236120224, -0.00031513971043750644, -0.5219678282737732, -0.0010668307077139616, -0.03668196499347687, -0.003168920986354351, -0.5473223328590393, -1.8358061424805783e-05, -0.001493173069320619, -0.0011201781453564763, -0.08641874045133591, -3.576278118089249e-07, -1.9073468138230965e-06, -1.4305104514278355e-06, -0.0005327236140146852, -0.00021217002358753234, -0.00042989550274796784, -3.099436753473128e-06, -1.0728830375228426e-06, -0.00020883286197204143, -0.4152146875858307, -0.016013700515031815, -0.0010478964541107416, -0.0005814530304633081, -0.006762593984603882, -0.010440257377922535, -0.33078503608703613, -0.1087999939918518, -0.07804529368877411, -0.0006126672378741205, 0.0, -5.960462772236497e-07, -1.1920922133867862e-06, -0.00039664984797127545, -0.0010475391754880548, -0.0004337085410952568, -0.0012886562617495656, -0.00167753582354635, -2.3841855067985307e-07, -0.0058140684850513935, -0.05435248091816902, -0.0010194348869845271, -0.3991374373435974, -0.00382382795214653, -2.4914430468925275e-05, -0.00019274283840786666, -0.021977214142680168, -0.0003082277253270149, -0.8873733878135681, -0.13216228783130646, -3.909988299710676e-05, -0.0008518642862327397, -2.3841830625315197e-06, -4.172316494077677e-06, -0.003930226434022188, -0.10070415586233139, -0.0015808953903615475, -5.030505417380482e-05, -0.00012408917245920748, -0.037435758858919144, -0.00026842328952625394, -1.0803163051605225, -0.014167680405080318, -0.0033846967853605747, -1.0728830375228426e-06, -0.02760101668536663, -0.006839318200945854, -0.011600303463637829, -0.032040223479270935, -0.001810817513614893, -0.4370468556880951, -0.2564086318016052, -0.0009883524617180228, -0.0014188947388902307, -0.00014041867689229548, -0.004779343493282795, -0.0007340597221627831, -0.00016842853801790625, -0.00016902448260225356, -0.0009089152445085347, -0.00010740180005086586, -0.0005849081207998097, -0.0030152592808008194, -1.5003910064697266, -0.0002177716523874551, -0.15864551067352295, -1.1015129089355469, -0.00016866691294126213, -0.042775385081768036, -0.006552993785589933, -0.0022182876709848642, -0.37323713302612305, -0.0003311085747554898, -0.007016187068074942, -8.344646857949556e-07, -6.592056161025539e-05, -0.045124705880880356, -0.0063528260216116905, -0.0041948664002120495, -0.1807257980108261, -6.09140915912576e-05, -0.0003636414185166359, -0.0008001701789908111, -0.10538094490766525, -0.0009391664643771946, -0.0008640132145956159, -1.0847986231965479e-05, -0.0007496645557694137, -2.861018856492592e-06, -2.7417760065873154e-05, -5.5549986427649856e-05, -0.015302046202123165, -1.9073468138230965e-06, -2.0265558760002023e-06, -0.11951383203268051, -0.006873771082609892, -0.2136518359184265, -3.8325486183166504, -0.003462868509814143, -0.008868000470101833, -5.960462772236497e-07, -7.152555099310121e-07, -2.3841855067985307e-07, -0.016922716051340103, -1.1920928244535389e-07, -2.622600959512056e-06, -0.0006700892699882388, -2.50339189733495e-06, -4.887569048150908e-06, -0.0018093895632773638, -0.007984742522239685, -0.007955295033752918, -0.8500379920005798, -4.494089080253616e-05, -0.002427609171718359, -0.10646952688694, -0.9702320694923401, -9.65590606938349e-06, -5.447716102935374e-05, -1.046021580696106, -0.0027620759792625904, -0.00022516099852509797, -0.0033915876410901546, -0.0001705739414319396, -0.0010002615163102746, -1.0728830375228426e-06, -0.4807884693145752, -7.83174327807501e-05, -0.0021572669502347708, -5.876845170860179e-05, -0.0021193204447627068, -0.00011181206355104223, -0.0012399612460285425, -0.0006495987763628364, -0.0003026265767402947, -0.10246807336807251, -0.01715710759162903, -0.00029869386344216764, -4.815939246327616e-05, -2.622600959512056e-06, -0.015557590872049332, -0.0009600082994438708, -0.0026361735071986914, -0.004869743715971708, -0.015080254524946213, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.00033361115492880344, -0.00020275443966966122, -1.1920928244535389e-07, -4.160317621426657e-05, -0.0013400870375335217, -0.0005081792478449643, -0.02128426358103752, -0.0002131234941771254, -1.0391666889190674, -2.3841830625315197e-06, -0.0003307510633021593, -1.1920922133867862e-06, -5.6503606174374e-05, -7.152555099310121e-07, -6.079655122448457e-06, -0.9245961308479309, -0.03722158074378967, -0.0004104725376237184, -0.0021512003149837255, -0.0021828413009643555, -0.10825604945421219, -1.1930596828460693, -0.052116651087999344, -0.1599830687046051, -0.004270481877028942, -0.047020282596349716, -0.11833993345499039, -0.0011537569807842374, -2.8013790142722428e-05, -9.023735765367746e-05], "finish_reason": "stop"}], "metrics": {"energy": 819.0710694446561, "energy_per_token": 3.5003037155754537, "time": 20.180676, "time_per_token": 0.08624220512820512}}
{"outputs": [{"text": "# Check if the specified directory exists\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"The specified directory does not exist.\")\n\n    # Get a list of sorted CSV files in the directory\n    csv_files = sorted(glob.glob(os.path.join(data_dir, \"*.csv\")))\n\n    # Check if there are no CSV files in the directory\n    if not csv_files:\n        raise ValueError(\"There are no CSV files in the specified directory.\")\n\n    # Initialize the Texttable object\n    table = Texttable()\n\n    # Set the headers\n    table.header(['File', 'Rows', 'Columns'])\n\n    # Set the column types\n    table.set_cols_dtype(['t', 'i', 'i'])\n\n    # Iterate through the sorted CSV files\n    for file in csv_files:\n        try:\n            # Read the CSV file using pandas\n            df = pd.read_csv(file)\n\n            # Get the number of rows and columns\n            nrows", "tokens": ["#", " Check", " if", " the", " specified", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " sorted", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", ")))", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " no", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " are", " no", " CS", "V", " files", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " Text", "table", " object", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Set", " the", " headers", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "#", " Set", " the", " column", " types", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " sorted", " CS", "V", " files", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Read", " the", " CS", "V", " file", " using", " pandas", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "\n", "            ", "#", " Get", " the", " number", " of", " rows", " and", " columns", "\n", "            ", "n", "rows"], "logprobs": [-1.68333899974823, -0.6197478771209717, -0.08166000247001648, -0.12191270291805267, -0.8867786526679993, -0.03958591818809509, -0.01603892259299755, -0.07376890629529953, -0.0006317288498394191, -0.0052262828685343266, -0.00850826594978571, -0.0016451646806672215, -6.318072337307967e-06, -0.00045122456504032016, -8.606540359323844e-05, -0.12922877073287964, -0.00031287543242797256, -0.00037865620106458664, -7.152555099310121e-07, -1.311301275563892e-06, -0.006426975596696138, -0.0004175029753241688, -0.002414052141830325, -0.012285275384783745, -0.0017753568245097995, -2.634490556374658e-05, -3.576272320060525e-06, -0.027470316737890244, -1.7378931045532227, -0.544291615486145, -0.08027753978967667, -0.014879319816827774, -0.010496292263269424, -0.0001573438785271719, -0.0008167268824763596, -0.2299118936061859, -0.007729265373200178, -0.0002616301644593477, -0.0001530530134914443, -0.036278415471315384, -0.0004881620698142797, -0.006335886660963297, -1.4387609958648682, -0.8287014961242676, -0.11912035942077637, -9.369411418447271e-05, -2.1926472187042236, -0.056423120200634, -2.658331868587993e-05, -0.09184355288743973, -0.05946630239486694, -0.002007494680583477, -0.7850452661514282, -0.0265475083142519, -0.0002329078270122409, -0.20686647295951843, -0.0003700763627421111, -0.014474627561867237, -0.002229825360700488, -0.1565612107515335, -0.019946817308664322, -0.006688824389129877, -4.339123915997334e-05, -0.0009023646707646549, -0.0008547228644602001, -0.062320273369550705, -1.6689286894688848e-06, -2.7418097943154862e-06, -1.1444026313256472e-05, -0.0001731960946926847, -9.715084888739511e-05, -0.0004078510100953281, -3.099436753473128e-06, -4.768370445162873e-07, -0.0002208704245276749, -0.7763231992721558, -0.0028169972356408834, -0.0011324428487569094, -0.00041976699139922857, -0.00013064485392533243, -0.011229291558265686, -0.0013300867285579443, -0.03360358253121376, -0.00016485285595990717, -0.010578274726867676, -0.17658241093158722, -0.01920919120311737, -0.023822156712412834, -0.0029055543709546328, -1.3508979082107544, -0.0031443224288523197, -9.536738616588991e-07, -7.045020902296528e-05, -0.023323245346546173, -0.00011491115583339706, -0.12471147626638412, -0.004156166221946478, -3.2782016205601394e-05, -0.0004698126285802573, -0.10917019098997116, -0.00036793138133361936, 0.0, 0.0, 0.0, -0.0002696150622796267, -0.00013541258522309363, -0.0002674698771443218, -0.0005141366855241358, -0.0002548369811847806, 0.0, -0.0003741279651876539, -0.025765594094991684, -0.5319092273712158, -0.0006862907321192324, -0.0001802282058633864, -0.0011957883834838867, -1.9073468138230965e-06, -0.00013612773909699172, -0.000674616196192801, -0.001100173220038414, -0.0346473827958107, -0.00019226610311307013, -0.004152248613536358, -0.00027736154152080417, -6.139089964563027e-05, -1.4424220353248529e-05, -0.005872852168977261, -0.0006193388253450394, -0.04134573042392731, -1.0229876041412354, -0.7007815837860107, -0.85331791639328, -0.010127703659236431, -0.40372440218925476, -0.36743736267089844, -0.0004657614335883409, -0.13447341322898865, -0.0039530242793262005, -0.0005066303419880569, -9.536738616588991e-07, -0.033353302627801895, -0.0005570290377363563, -0.8720724582672119, -0.00014852374442853034, -0.0019884591456502676, -0.6846855878829956, -0.08420346677303314, -1.1653547286987305, -0.4530777335166931, -6.747018051100895e-05, -0.1356954723596573, -0.000350175570929423, -0.0444960780441761, -1.3637067079544067, -0.0007923085941001773, -0.002152984729036689, -0.00013934595335740596, -0.006677219644188881, -0.0007014198345132172, -0.00012909532233607024, -9.047575440490618e-05, -0.0013299677520990372, -8.391981828026474e-05, -0.0006294653285294771, -0.0002138386043952778, -0.11017297208309174, -0.00021455370006151497, -0.04979800805449486, -2.358642816543579, -0.05234123766422272, -2.6194419860839844, -0.45081982016563416, -0.546658456325531, -0.0001774868869688362, -0.007306520827114582, -5.8412379075889476e-06, -0.00023195437097456306, -7.152555099310121e-07, -0.0005838358192704618, -9.536738616588991e-07, -0.17216120660305023, -4.3748852476710454e-05, -0.0118715213611722, -0.02197791449725628, -0.012753119692206383, -0.0002420847595203668, -0.021055391058325768, -0.01808732934296131, -0.00012790338951162994, -4.851700214203447e-05, -0.0013313962845131755, -0.0005977750988677144, -0.0013179434463381767, -0.006930479314178228, -0.012622936628758907, -0.00037091050762683153, -0.02717568725347519, -1.445535659790039, -0.00014351768186315894, -1.4870070219039917, -0.19952985644340515, -0.8039298057556152, -0.026645133271813393, -4.172316494077677e-06, -0.0005308172549121082, -0.24011479318141937, -0.0003469580551609397, -0.006400324869900942, -0.5201689600944519, -0.20570212602615356, -0.012071647681295872, -5.960446742392378e-06, -7.152555099310121e-07, -1.6689286894688848e-06, -0.0008476955117657781, -4.339123915997334e-05, -0.020949164405465126, -0.3836362063884735, -8.67805938469246e-05, -0.0005874100024811924, -0.0029157765675336123, -0.08844396471977234, -0.18415801227092743, -0.0303272046148777, -0.03543412312865257, -1.311301275563892e-06, -0.00595379201695323, -0.4814446270465851, -0.06689680367708206, -0.09758634865283966, -0.0003022690652869642, -0.11787468940019608, -0.000624104228336364, -0.0003083468764089048, -1.8596476365928538e-05, -0.0002256377338198945, -3.2186455882765586e-06, -2.992108420585282e-05, -7.688703772146255e-05, -0.007441657595336437, -0.08922505378723145, -0.0006529344827868044, -0.2817207872867584, -0.004953730385750532, -0.001122202374972403, -0.7034094929695129, -0.0060138702392578125, -0.22273118793964386, -3.909988299710676e-05, -0.0025944404769688845, -0.02524266205728054, -0.0007348936051130295, -0.31805214285850525, -0.0001408954558428377, -3.017338752746582, -1.311920166015625], "finish_reason": "length"}], "metrics": {"energy": 929.6202030105586, "energy_per_token": 3.6313289180099946, "time": 22.699335, "time_per_token": 0.08866927734375}}
{"outputs": [{"text": "# Validate input\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' not found.\")\n\n    # Search for CSV files in the directory\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in '{data_dir}' directory.\")\n\n    # Load CSV files into pandas and get number of rows and columns\n    table = Texttable()\n    table.set_cols_align(['l', 'r', 'r'])\n    table.set_cols_dtype(['t', 'i', 'i'])\n    table.set_deco(Texttable.HEADER)\n    table.header([\"File\", \"Rows\", \"Columns\"])\n    for csv_file in sorted(csv_files):\n        try:\n            df = pd.read_csv(csv_file)\n            table.add_row([os.path.basename(csv_", "tokens": ["#", " Valid", "ate", " input", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Search", " for", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " '", "{", "data", "_", "dir", "}'", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Load", " CS", "V", " files", " into", " pandas", " and", " get", " number", " of", " rows", " and", " columns", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "    ", "table", ".", "set", "_", "dec", "o", "(", "Text", "table", ".", "HEAD", "ER", ")", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "for", " c", "sv", "_", "file", " in", " sorted", "(", "csv", "_", "files", "):", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_"], "logprobs": [-1.68333899974823, -2.6475188732147217, -0.04495878145098686, -1.8398641347885132, -0.8986302614212036, -0.004010967444628477, -0.04121017828583717, -0.013266036286950111, -0.03176160156726837, -1.1086402082582936e-05, -0.0008955758530646563, -8.713819261174649e-05, -0.2896588146686554, -0.0003364712174516171, -0.0011085085570812225, -1.311301275563892e-06, -8.344646857949556e-07, -0.017977626994252205, -0.0022540895733982325, -0.0021489402279257774, -0.007694724015891552, -0.0036653971765190363, -4.172238186583854e-05, -8.22540732769994e-06, -0.030705535784363747, -0.23990529775619507, -0.039721231907606125, -0.46738895773887634, -0.6146232485771179, -0.00012694983161054552, -0.00041416651220060885, -7.033323527139146e-06, -1.1920928244535389e-07, -0.001408895361237228, -1.2653313875198364, -0.00012289722508285195, -0.2611812353134155, -0.029266031458973885, -0.00016211149340961128, -0.00034362133010290563, -0.4204126298427582, -0.0006316096987575293, -0.09652096033096313, -2.940995454788208, -0.09976303577423096, -0.10750917345285416, -0.0002640137099660933, -0.0011707840021699667, -0.4437728822231293, -0.1622919738292694, -0.9919754266738892, -0.31671038269996643, -0.00010716341057559475, -0.2891550660133362, -0.00028761065914295614, -0.02284342795610428, -0.0016623024130240083, -0.17871318757534027, -1.9907753085135482e-05, -0.0012407946633175015, -0.00045622908510267735, -0.07651703804731369, -8.344646857949556e-07, -1.311301275563892e-06, -3.4570634852570947e-06, -0.00014351768186315894, -7.843663479434326e-05, -0.00034362133010290563, -1.5497195136049413e-06, -1.1920928244535389e-07, -9.679325739853084e-05, -0.5339351296424866, -0.0034773615188896656, -0.0005752577562816441, -0.0003277718205936253, -0.0014650813536718488, -0.001968947472050786, -0.44650664925575256, -0.052304018288850784, -0.0574302151799202, -0.0003819928097072989, 0.0, -2.3841855067985307e-07, 0.0, -0.00033241944038309157, -0.0012347224401310086, -0.000271879427600652, -0.0009726322605274618, -0.0009124883217737079, 0.0, -0.004119007848203182, -0.03758077695965767, -0.0006286313873715699, -0.0022027057129889727, -0.0035036150366067886, -7.986990567587782e-06, -0.00022909401741344482, -0.0041770595125854015, -0.0003077510336879641, -1.0062774419784546, -2.682172998902388e-05, -0.00046039948938414454, -1.1920922133867862e-06, -1.6689286894688848e-06, -0.0025305887684226036, -2.0554518699645996, -0.006239103153347969, -0.00040236959466710687, -5.030505417380482e-05, -4.23184028477408e-05, -0.02080148085951805, -0.0005553610390052199, -0.05215693265199661, -3.5487444400787354, -0.5894519686698914, -0.008427532389760017, -0.015027646906673908, -2.191589117050171, -1.564842700958252, -2.215848207473755, -2.766554117202759, -2.4653377532958984, -0.0004689785710070282, -0.0051873852498829365, -0.01752428710460663, -0.0005293875001370907, -0.2871021330356598, -0.0015956539427861571, -1.5762559175491333, -0.06301425397396088, -0.006829727906733751, -1.5497195136049413e-06, -0.028709249570965767, -0.021265242248773575, -0.004353331867605448, -0.02498004585504532, -0.0016235039802268147, -1.3630472421646118, -3.4450891689630225e-05, -0.5716578960418701, -0.000645429186988622, -0.3812062740325928, -0.24702897667884827, -0.4896087646484375, -0.00019703354337252676, -0.00026544384309090674, -0.024870632216334343, -0.05145163834095001, -0.0004441943601705134, -4.911301948595792e-05, -0.0012899658177047968, -0.0021546499338001013, -0.002568519674241543, -0.04638749361038208, -0.010682894848287106, -0.0247187577188015, -0.0037637364584952593, -0.3628975450992584, -3.4570634852570947e-06, -0.5489290356636047, -1.1920928244535389e-07, -0.10142888128757477, -8.689979586051777e-05, -0.0050782738253474236, -0.03622104972600937, -0.0025295186787843704, -9.464769391342998e-05, -0.0026310610119253397, -0.006772421766072512, -4.23184028477408e-05, -4.708655978902243e-05, -0.0006877202540636063, -0.00038628268521279097, -0.0010095505276694894, -0.014136768877506256, -0.042937446385622025, -0.06392662227153778, -0.001007287879474461, -1.365708351135254, -2.0265558760002023e-06, -0.3760678470134735, -0.0021142051555216312, -0.0018283093813806772, -0.004933920688927174, 0.0, -0.00023719835735391825, -0.09179842472076416, -0.00010227633902104571, -1.824089527130127, -0.012585503049194813, -0.10711126029491425, -0.04627060890197754, -0.0014098476385697722, -0.5748664140701294, -1.4691706895828247, -0.05115198716521263, -0.0032038569916039705, -0.00201094476506114, -0.00011693747364915907, -0.004497888032346964, -0.0019891730044037104, -0.00020728347590193152, -0.00010346830822527409, -0.0008074360666796565, -0.0008007657015696168, -2.0503786799963564e-05, -0.00043049128726124763, -0.004050741903483868, -0.33849501609802246, -0.24305535852909088, -1.3457778692245483, -0.0002637753786984831, -0.09491955488920212, -0.009343350306153297, -0.0011559001868590713, -0.3973369002342224, -0.00031871485407464206, -0.005069971550256014, -7.152555099310121e-07, -1.5497195136049413e-06, -0.033754922449588776, -0.012669550254940987, -0.005671125371009111, -0.12808038294315338, -5.328513361746445e-05, -0.000940476544201374, -0.0008329259580932558, -0.1101207584142685, -0.0016300498973578215, -0.0008890252211131155, -2.610649426060263e-05, -0.0004807746736332774, -4.172238186583854e-05, -0.00011407678539399058, -5.757642793469131e-05, -0.017537875100970268, -7.986990567587782e-06, -3.3378546504536644e-06, -0.11638269573450089, -0.007312674541026354, -0.17804816365242004, -0.7818101048469543, -0.0006087357178330421, -0.0001938155182870105, -7.867782187531702e-06, -0.0357983335852623, -0.0037930700927972794, -0.054144151508808136, -2.3841830625315197e-06, -3.933898824470816e-06, -1.5497195136049413e-06, -0.013114036060869694, 0.0, -6.9141146923357155e-06, -0.0020525832660496235, -4.887569048150908e-06], "finish_reason": "length"}], "metrics": {"energy": 921.7826194248198, "energy_per_token": 3.6007133571282024, "time": 22.068449, "time_per_token": 0.08620487890625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' does not exist.\")\n\n    files = glob.glob(f\"{data_dir}/*.csv\")\n    if not files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    for file in files:\n        try:\n            df = pd.read_csv(file)\n            table.add_row([os.path.basename(file), df.shape[0], df.shape[1]])\n        except EmptyDataError as e:\n            raise e\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "/*", ".", "csv", "\"", ")", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " Em", "pty", "Data", "Error", " as", " e", ":", "\n", "            ", "raise", " e", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "if"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -0.41229113936424255, -0.0002584123576525599, -0.0015589953400194645, -0.24497635662555695, -0.010700350627303123, -0.00013457823661156, -0.0006329201860353351, -0.2085290253162384, -0.0002616301644593477, -2.5824429988861084, -0.02191680483520031, -0.4068213403224945, -3.0636318115284666e-05, -0.0010684978915378451, -0.0010013333521783352, -2.0086569786071777, -0.22085832059383392, -0.00019167017308063805, -0.002042352221906185, -9.536738616588991e-07, -1.1920928244535389e-07, -0.07389214634895325, -0.2584938108921051, -0.0035058720968663692, -0.0022637236397713423, -0.00010680581908673048, -0.009755082428455353, -0.01917095109820366, -0.22822856903076172, -0.043492186814546585, -0.10321593284606934, -0.0022299441043287516, -0.0004862556525040418, -0.0013719918206334114, -0.0005134217790327966, -0.0012991330586373806, -0.0017502479022368789, 0.0, -0.001002047909423709, -0.05437901243567467, -0.0001230164198204875, -0.04918729141354561, -0.013854172080755234, -0.00020394629973452538, -0.0004196478403173387, -0.011408214457333088, -0.0003352795320097357, -0.2085544764995575, -0.03271595761179924, -5.221230458118953e-05, -0.0003090619284193963, -2.50339189733495e-06, -1.4305104514278355e-06, -0.003004800295457244, -0.07344695925712585, -0.0008978387922979891, -6.425174069590867e-05, -7.843663479434326e-05, -0.0417439267039299, -0.0002896366349887103, -0.9321232438087463, -0.014085639268159866, -0.0032556646037846804, -1.5497195136049413e-06, -0.01986922323703766, -0.006563534028828144, -0.010137026198208332, -0.027868742123246193, -0.0018344969721511006, -0.3248450756072998, -0.9805646538734436, -0.0007047553663142025, -0.0016832482069730759, -0.00013171759201213717, -0.007326165214180946, -0.0008442413527518511, -0.0002004899288294837, -0.00012814177898690104, -0.001468414207920432, -0.00015031162183731794, -0.0006715188501402736, -0.0023732611443847418, -0.22626757621765137, -1.506693720817566, -0.16284751892089844, -0.053798310458660126, -1.463805913925171, -0.0011655449634417892, -0.0007215518853627145, -0.004384072497487068, -0.0738198459148407, -5.793403761344962e-05, -0.00033122775494121015, -0.0009672730811871588, -0.1572417914867401, -0.0008550802012905478, -0.0008934320067055523, -2.0265373677830212e-05, -0.000692961853928864, -2.825220326485578e-05, -3.4927710657939315e-05, -8.201262971851975e-05, -0.004342293832451105, -0.10530488193035126, -0.004691664129495621, -0.13952720165252686, -0.6433521509170532, -0.0010147904977202415, -5.2689116273541003e-05, -4.768360213347478e-06, -0.007945715449750423, -0.0029420447535812855, -0.3539063036441803, -4.768360213347478e-06, -3.0278701160568744e-05, -1.4305104514278355e-06, -0.007815377786755562, -1.1920928244535389e-07, -1.2516897186287679e-05, -0.0008126770262606442, -0.0014331794809550047, -0.005015767179429531, -0.16824258863925934, -0.0002475670480635017, -0.0026750515680760145, -7.10462118149735e-05, -0.0004898302140645683, -6.425174069590867e-05, -0.0018303323304280639, -0.0024824298452585936, -1.4662635294371285e-05, -6.3774932641536e-05, -0.00014506718434859067, -0.00016139635408762842, -0.0016601602546870708, -0.002096480457112193, -0.0031553739681839943, -0.009359175339341164, -0.0005169962532818317, -1.8158149719238281, -3.933898824470816e-06, -0.00023421882360707968, -1.7762025890988298e-05, -0.7077104449272156, -0.026137059554457664, -0.0004396664153318852, -0.0043362402357161045, -0.0028736984822899103, -0.20997336506843567, -1.6062121391296387, -0.059367112815380096, -0.3491455912590027, -0.0041245874017477036, -0.06302040815353394, -0.14234697818756104, -0.0014321081107482314, -4.625213477993384e-05, -0.00014768941036891192, -0.3155616521835327, -0.008405427448451519, -1.5187848806381226], "finish_reason": "stop"}], "metrics": {"energy": 735.5514524574277, "energy_per_token": 3.8918066267588767, "time": 17.225767, "time_per_token": 0.09114162433862434}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' does not exist.\")\n\n    # Search for all CSV files in the directory and sort them in ascending order\n    csv_files = sorted(glob.glob(os.path.join(data_dir, \"*.csv\")))\n\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in '{data_dir}'.\")\n\n    # Create an instance of Texttable for table creation\n    table = Texttable()\n    table.set_cols_align(['r', 'l', 'l'])\n    table.header([\"File\", \"Rows\", \"Columns\"])\n\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file)\n            table.add_row([os.path.basename(csv_file), df.shape[0], df.shape[1]])\n        except pd.errors.EmptyDataError:\n            raise pd.errors.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Search", " for", " all", " CS", "V", " files", " in", " the", " directory", " and", " sort", " them", " in", " ascending", " order", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", ")))", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " an", " instance", " of", " Text", "table", " for", " table", " creation", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "r", "'", ",", " '", "l", "'", ",", " '", "l", "'])", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " pd", ".", "errors", "."], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -0.41229113936424255, -0.0002584123576525599, -0.0015589953400194645, -0.24497635662555695, -0.010700350627303123, -0.00013457823661156, -0.0006329201860353351, -0.2085290253162384, -0.0002616301644593477, -1.7823408842086792, -2.941549777984619, -0.14842018485069275, -2.1260061264038086, -0.08804778009653091, -6.437094270950183e-05, -0.0011707840021699667, -0.10353735834360123, -0.040691256523132324, -1.0657806396484375, -1.6717170476913452, -0.9961052536964417, -0.09821079671382904, -1.1996963024139404, -0.039065808057785034, -0.0028892699629068375, -0.14043724536895752, -0.0005778788472525775, -0.1425245851278305, -0.0002307625545654446, -0.015215636231005192, -0.001785828499123454, -0.17147111892700195, -0.031099436804652214, -0.003922508098185062, -2.1219027985353023e-05, -0.0014581772265955806, -0.000705589191056788, -0.05211133137345314, -1.9073468138230965e-06, -1.9073468138230965e-06, -2.7418097943154862e-06, -0.00020704510097857565, -0.00011503035057103261, -0.0004109491710551083, -2.9802276912960224e-06, 0.0, -0.0002015625941567123, -1.3462330102920532, -0.004906518384814262, -0.0017629809444770217, -0.0002675890573300421, -9.405170567333698e-05, -0.00782436691224575, -0.0015710166189819574, -0.23077541589736938, -8.415821503149346e-05, -0.10854442417621613, -0.14005906879901886, -0.0006661579827778041, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00019441144831944257, -0.0014772227732464671, -0.00036125810584053397, -0.0031773580703884363, -0.0004085659747943282, 0.0, -0.0009511952521279454, -0.06477312743663788, -0.000102037942269817, -0.027939457446336746, -0.001679201959632337, -8.34461570775602e-06, -0.0002540027489885688, -0.0037307203747332096, -0.0002348147245356813, -1.6804041862487793, -3.123234637314454e-05, -0.000519617460668087, -1.7881377516459906e-06, -4.768370445162873e-07, -0.001977394800633192, -0.409061461687088, -0.0012899658177047968, -3.1470757676288486e-05, -5.817244164063595e-05, -0.009074280969798565, -0.0006148116663098335, -0.44872522354125977, -0.7580930590629578, -2.288019895553589, -0.7152660489082336, -0.00032443503732793033, -0.4443500339984894, -0.00481932470574975, -2.4109764099121094, -1.6560876369476318, -1.9426369667053223, -0.029501251876354218, -0.0006940339808352292, -0.14065061509609222, -0.006357919424772263, -0.00028761065914295614, -3.4570634852570947e-06, -0.01358901895582676, -0.000508417550008744, -0.6778632402420044, -0.16282230615615845, -0.00397332850843668, -0.9062894582748413, -3.7788631743751466e-05, -0.323956698179245, -0.0005283151986077428, -0.2056974619626999, -1.3651890754699707, -1.2689645290374756, -0.00026353701832704246, -0.0004687402688432485, -0.036800552159547806, -1.1205190420150757, -0.010118262842297554, -0.00013243274588603526, -0.0026400971692055464, -0.11374274641275406, -0.006430529057979584, -0.27275508642196655, -0.2531038522720337, -0.05090786889195442, -0.0025031205732375383, -1.8194302320480347, -0.9937615394592285, -0.13402938842773438, -0.014985958114266396, -0.005089185666292906, -0.00013755806139670312, -0.006477668881416321, -0.003726682160049677, -0.00033790123416110873, -9.560128091834486e-05, -0.0015061474405229092, -0.0007015389273874462, -3.6000557884108275e-05, -0.00041345154750160873, -0.006735123693943024, -0.2167997509241104, -0.0003175231395289302, -0.6164115071296692, -0.9076783061027527, -0.00020728347590193152, -0.053222812712192535, -0.007034772075712681, -0.001379848807118833, -0.024640601128339767, -4.3748852476710454e-05, -5.960462772236497e-07, -3.814689989667386e-06, -0.0007825411157682538, -0.0009077242575585842, -0.007361548021435738, -0.2153417021036148, -5.3165931603871286e-05, -0.001980844885110855, -0.00204806262627244, -0.4934449791908264, -0.0011606630869209766, -0.001016934053041041, -1.1801649634435307e-05, -0.0009940688032656908, -2.264974000354414e-06, -3.540453326422721e-05, -6.365573790390044e-05, -0.007996213622391224, -1.1920922133867862e-06, -8.4638240878121e-06, -0.20222029089927673, -0.07565466314554214, -0.19107486307621002, -0.9337311387062073, -0.002887486945837736, -0.00030501006403937936, -2.50339189733495e-06, -0.04659039154648781, -0.007644683588296175, -0.12523119151592255, -1.0728830375228426e-06, -1.4185804502631072e-05, -3.576278118089249e-07, -0.01404626201838255, 0.0, -1.2159273865108844e-05, -0.004021890461444855, -6.9141146923357155e-06, -4.887569048150908e-06, -0.0010503972880542278, -0.006391796749085188, -0.19092988967895508, -0.00024482590379193425, -0.0023252135142683983, -7.56950321374461e-05, -0.0005841932725161314, -5.447716102935374e-05, -0.002562217880040407, -0.004745174665004015, -3.933898824470816e-06, -7.188061863416806e-05, -7.390703103737906e-05, -0.00013755806139670312, -0.0012032896047458053, -0.0015474499668926, -0.01019449345767498, -0.018962882459163666, -0.0022991669829934835, -0.8492543697357178, -5.125986263010418e-06, -0.0004737447015941143, -9.536738616588991e-07, -6.258291978156194e-05, -3.576278118089249e-07, -4.6491513785440475e-06, -0.5237239599227905, -0.002138353418558836, -0.0018741200910881162, -0.05693405494093895, -0.5579853653907776, -2.4437606043647975e-05, -0.00014685506175737828, -0.00011205045302631333], "finish_reason": "length"}], "metrics": {"energy": 936.2535352859493, "energy_per_token": 3.6572403722107394, "time": 22.043428, "time_per_token": 0.086107140625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"Directory '{}' does not exist.\".format(data_dir))\n    files = glob.glob(data_dir + '*.csv')\n    if not files:\n        raise ValueError(\"No CSV files found in directory '{}'.\".format(data_dir))\n    files = sorted(files)\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    for file in files:\n        try:\n            df = pd.read_csv(file)\n            n_rows = df.shape[0]\n            n_columns = df.shape[1]\n            table.add_row([os.path.basename(file), n_rows, n_columns])\n        except pandas.errors.EmptyDataError:\n            raise pandas.errors.EmptyDataError(\"CSV file '{}' is empty.\".format(file))\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " '", "{}", "'", " does", " not", " exist", ".", "\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "data", "_", "dir", " +", " '", "*", ".", "csv", "')", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{}", "'", ".", "\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "    ", "files", " =", " sorted", "(", "files", ")", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "n", "_", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "n", "_", "columns", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " n", "_", "rows", ",", " n", "_", "columns", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " pandas", ".", "errors", ".", "Empty", "Data", "Error", "(", "\"", "CS", "V", " file", " '", "{}", "'", " is", " empty", ".", "\"", ".", "format", "(", "file", "))", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -1.8561794757843018, -0.9457641243934631, -3.011113166809082, -0.04780792072415352, -0.003252575406804681, -0.24233655631542206, -0.0004602803383022547, -0.0015692312736064196, -0.3144257962703705, -0.011942082084715366, -0.004022602923214436, -0.00010787858627736568, -0.00012683063687290996, -0.0013131813611835241, -6.16293036728166e-05, -4.768360213347478e-06, -0.00037579628406092525, -0.00031454383861273527, -1.4507086277008057, -2.2248339653015137, -0.010759790427982807, -0.46724042296409607, -3.015949550899677e-05, -0.002147869672626257, -0.012372645549476147, -2.2304909229278564, -2.861018856492592e-06, -2.0265558760002023e-06, -0.08347568660974503, -0.3578754663467407, -0.26904919743537903, -0.005522590130567551, -0.001497934339568019, -0.01629439741373062, -0.029308171942830086, -0.043907780200242996, -0.06641814857721329, -0.19453579187393188, -0.003845559898763895, -0.0006046851049177349, -0.0017971331253647804, -0.0009541726321913302, -0.0017228773795068264, -0.0023494756314903498, -3.576278118089249e-07, -0.009251345880329609, -0.00810689851641655, -0.049549590796232224, -0.01825578324496746, -0.00013183678674977273, -0.0005540504935197532, -0.020035039633512497, -0.002740558236837387, -0.20936129987239838, -0.024642927572131157, -0.00011753345461329445, -0.0011083895806223154, -0.09137125313282013, -0.0009055804111994803, -0.001001571537926793, -5.447716102935374e-05, -2.90866428258596e-05, -0.00047743841423653066, -1.0490362910786644e-05, -2.0265558760002023e-06, -9.226373367710039e-05, -0.00010024998482549563, -0.3304036259651184, -0.7087574601173401, -1.1478264331817627, -0.023433063179254532, -0.002668155822902918, -0.004349652677774429, -0.0436117947101593, -0.025677761062979698, -0.21448573470115662, -0.5276030898094177, -0.012513927184045315, -0.0067580947652459145, -9.536738616588991e-07, -0.03195132315158844, -0.005902597680687904, -0.002404657192528248, -0.04531988129019737, -0.0016218378441408277, -0.24016813933849335, -0.28156137466430664, -0.0007649118197150528, -0.002659714547917247, -0.0001971527235582471, -0.018472891300916672, -0.0007485924870707095, -0.00017593742813915014, -0.0001311216183239594, -0.0021873614750802517, -9.142934868577868e-05, -0.0005876483046449721, -0.001678725820966065, -0.00643929373472929, -0.37176409363746643, -0.1539260298013687, -0.051102373749017715, -0.003641642164438963, -0.0019472938729450107, -0.0002910667099058628, -0.0032316623255610466, -0.11153212189674377, -8.904537389753386e-05, -0.0007095203618519008, -0.0009029601933434606, -0.16816237568855286, -0.0010484919184818864, -0.0010724276071414351, -2.288792165927589e-05, -0.0010349161457270384, -1.3947389561508317e-05, -5.209310256759636e-05, -0.00024875884992070496, -0.003679649904370308, -0.08079194277524948, -0.0046243867836892605, -0.2144031822681427, -3.3302550315856934, -0.3996821939945221, -0.01551897544413805, -0.5589461922645569, -0.34176141023635864, -0.0005090133054181933, -0.001010384177789092, -0.00010227633902104571, -0.00031883400515653193, -4.7801782784517854e-05, -0.004493853077292442, -0.00021610308613162488, -0.0011518517276272178, -1.3828182090946939e-05, -2.3207688331604004, -0.0001958416833076626, -0.004463115707039833, -6.6756979322235566e-06, -8.272782724816352e-05, -0.00012063252506777644, -0.00012742661056108773, -2.0146166207268834e-05, -0.00045265440712682903, -0.10400889068841934, -0.04884427413344383, -0.0006949870148673654, -4.3987260141875595e-05, -5.245195097813848e-06, -0.02204088494181633, -0.0020475867204368114, -0.20643338561058044, -2.3841855067985307e-07, -1.8954096958623268e-05, -5.960462772236497e-07, -0.012550069019198418, 0.0, -1.2278481335670222e-05, -0.00040904260822571814, -0.0004365683125797659, -0.006080936174839735, -0.02254556491971016, -2.264974000354414e-06, -4.911301948595792e-05, -0.0010443239007145166, -0.0008207766804844141, -8.344646857949556e-07, -1.3112935448589269e-05, -0.0007990981102921069, -0.0018202179344370961, -0.006313498131930828, -0.0007744412287138402, -0.932602047920227, -1.5258672647178173e-05, -0.0032801416236907244, -4.0531076592742465e-06, -5.221230458118953e-05, -1.311301275563892e-06, -1.168244216387393e-05, -0.3287493884563446, -0.0017701209289953113, -0.003109978511929512, -0.0808868333697319, -1.3153705596923828, -4.2914423829643056e-05, -0.00020883286197204143, -2.992108420585282e-05, -2.992108420585282e-05, -1.2636104656849056e-05, -3.0636318115284666e-05, -0.035557229071855545, -0.050854846835136414, -2.3156871795654297, -1.847726889536716e-05, -0.004733072593808174, -0.04137546941637993, -0.0005357022164389491, -0.0002985746832564473, -0.004612402059137821, -0.0003978414461016655, -0.04421531781554222, -0.011113056913018227, -0.00038580605178140104, -0.00011002412065863609, -5.98412734689191e-05, -0.08058509230613708, -0.0003411188081372529, -0.014820006676018238, -0.072899729013443, -0.040597282350063324, -0.07323348522186279, -0.0009305914281867445, -3.862306402879767e-05, -0.00012587709352374077, -0.26929163932800293, -0.01199073065072298, -0.23609650135040283], "finish_reason": "stop"}], "metrics": {"energy": 844.0401351413724, "energy_per_token": 3.561350781187225, "time": 20.403988, "time_per_token": 0.08609277637130801}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} does not exist\")\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory {data_dir}\")\n\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n\n    for csv_file in csv_files:\n        df = pd.read_csv(csv_file)\n        try:\n            df = pd.read_csv(csv_file)\n            row_count = df.shape[0]\n            column_count = df.shape[1]\n            table.add_row([os.path.basename(csv_file), row_count, column_count])\n        except pd.errors.EmptyDataError:\n            raise\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "row", "_", "count", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "column", "_", "count", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " row", "_", "count", ",", " column", "_", "count", "])", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.908584475517273, -0.001077071763575077, -7.629365427419543e-06, -1.0728830375228426e-06, -0.0007303669699467719, -0.4502013325691223, -0.0002649671514518559, -0.0016313589876517653, -0.9603258967399597, -0.00012396997772157192, -0.00040892345714382827, -1.4451085329055786, -0.4644664227962494, -0.0023110604379326105, -0.03703055903315544, -0.0022381513845175505, -1.1782777309417725, -0.015004982240498066, -0.010458542965352535, -3.5523738915799186e-05, -0.0012325793504714966, -0.0008934320067055523, -0.10513394325971603, -4.768370445162873e-07, -2.9802276912960224e-06, -1.7881377516459906e-06, -0.0006011109799146652, -0.00020096666412428021, -0.0007476395112462342, -5.483612312673358e-06, -3.576278118089249e-07, -0.0004891153075732291, -0.6141863465309143, -0.007849561050534248, -0.0009681067313067615, -0.0005645350320264697, -0.013921301811933517, -0.0353614017367363, -0.011960458010435104, -0.07548964023590088, -0.009416216053068638, -0.11026094853878021, -0.0009527434594929218, 0.0, -1.6689286894688848e-06, -4.768370445162873e-07, -0.0002924968139268458, -0.0009036748087964952, -0.0007686044555157423, -0.0011320855701342225, -0.0016546857077628374, -5.960462772236497e-07, -0.0028621682431548834, -0.045595549046993256, -0.0009996660519391298, -0.06248076632618904, -0.007239655591547489, -4.9232225137529895e-05, -0.0004444326623342931, -0.029920272529125214, -0.0004648081958293915, -0.5609981417655945, -0.08606190234422684, -0.0007479969062842429, -7.748573807475623e-06, -1.6689286894688848e-06, -0.0011730464175343513, -5.352353764465079e-05, -9.691245941212401e-05, -1.0004360675811768, -0.0003477922291494906, -0.5061376690864563, -0.010482962243258953, -0.0027035849634557962, -7.152555099310121e-07, -0.029626594856381416, -0.005952369887381792, -0.005539661273360252, -0.038619980216026306, -0.0017874945187941194, -0.35805362462997437, -0.3879251182079315, -0.0007890925044193864, -0.0016179102240130305, -0.00014649749209638685, -0.007659352850168943, -0.000795762927737087, -0.0001262346631847322, -0.00014006110723130405, -0.001364849042147398, -9.619726915843785e-05, -0.0005858612130396068, -0.0014434166951104999, -1.8146097660064697, -0.000176652567461133, -0.037059277296066284, -0.9060465693473816, -0.00022289653134066612, -0.0822892040014267, -0.00791295524686575, -0.001262344536371529, -0.08336283266544342, -4.815939246327616e-05, -1.9073468138230965e-06, -4.51792984677013e-05, -0.0015428080223500729, -0.0003116837178822607, -0.006177498027682304, -2.80324387550354, -0.002698116237297654, -0.015045848675072193, -3.957670196541585e-05, -0.0022647941950708628, -1.0371154530730564e-05, -6.985420623095706e-05, -5.507317473529838e-05, -0.014793343842029572, -1.7881377516459906e-06, -6.556489552167477e-06, -0.23386090993881226, -0.009006352163851261, -0.03675102815032005, -2.7090883255004883, -0.00023600654094479978, -0.002638432662934065, -0.00160089076962322, -1.7141616344451904, -0.4060431718826294, -0.14649927616119385, -7.784063927829266e-05, -0.0058820960111916065, -8.844937838148326e-05, -8.940297266235575e-05, -0.0003844952443614602, -0.0020902943797409534, -2.8729025871143676e-05, -1.4781842764932662e-05, -0.02276885323226452, -0.00428164005279541, -0.424014151096344, -2.868743896484375, -0.049722809344530106, -0.06523235142230988, -0.0651770681142807, -0.35863354802131653, -0.0011917401570826769, -0.004000043962150812, -0.0001728385395836085, -0.00043072958942502737, -5.2927523938706145e-05, -0.01902826689183712, -0.0006098079611547291, -0.8181676268577576, -2.5510462364763953e-05, -9.16677454370074e-05, -5.495397272170521e-05, -0.008234006352722645, -8.34461570775602e-06, -7.664863369427621e-05, -0.0001902399235405028, -5.900685573578812e-05, -1.6212332411669195e-05, -0.0009033175301738083, -0.16496022045612335, -0.09518231451511383, -0.001341634662821889, -3.635817120084539e-05, -4.172316494077677e-06, -0.018955396488308907, -0.0018911350052803755, -0.027484813705086708, -1.1920928244535389e-07, -8.821448318485636e-06, -5.960462772236497e-07, -0.010222340933978558, 0.0, -8.940656698541716e-06, -0.0029719967860728502, -1.3947389561508317e-05, -6.794906312279636e-06, -0.0008499585674144328, -0.0073830848559737206, -0.02902323007583618, -1.311301275563892e-06, -4.768370445162873e-07, -0.000813034363090992, -0.011260410770773888, -9.536738616588991e-07, -1.311301275563892e-06, -0.0010282472940161824, -0.0011531615164130926, -0.015324820764362812, -0.0009048658539541066, -1.0376558303833008, -8.34461570775602e-06, -0.0005390383303165436, -2.861018856492592e-06, -8.380061626667157e-05, -8.344646857949556e-07, -8.702239938429557e-06, -0.4060726463794708, -0.0014817459741607308, -0.0026675614062696695, -0.08688780665397644, -0.5105078816413879, -0.3071591854095459, -0.0036962777376174927, -0.05033648759126663, -0.09730377793312073, -0.001666586846113205, -8.380061626667157e-05, -0.0001225396408699453, -0.3784264326095581, -0.008815418928861618, -0.2026306837797165], "finish_reason": "stop"}], "metrics": {"energy": 882.4068825283052, "energy_per_token": 3.7232357912586718, "time": 20.79183, "time_per_token": 0.08772924050632912}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory {data_dir} does not exist.\")\n\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n\n    if not csv_files:\n        raise ValueError(f\"There are no CSV files in the directory {data_dir}.\")\n\n    csv_files.sort()\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_dtype(['t', 'i', 'i'])\n\n    for filename in csv_files:\n        try:\n            df = pd.read_csv(filename)\n            table.add_row([os.path.basename(filename), df.shape[0], df.shape[1]])\n        except EmptyDataError as e:\n            raise\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "data", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "There", " are", " no", " CS", "V", " files", " in", " the", " directory", " {", "data", "_", "dir", "}", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", ".", "sort", "()", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "\n", "    ", "for", " filename", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " Em", "pty", "Data", "Error", " as", " e", ":", "\n", "            ", "raise", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -1.0948567390441895, -0.722522497177124, -0.9025886654853821, -0.0008897398365661502, -3.576272320060525e-06, -2.0265558760002023e-06, -0.0012206730898469687, -0.017894258722662926, -0.00030989613151177764, -0.0025202438700944185, -0.15890812873840332, -0.016227543354034424, -0.00018451895448379219, -0.0005304598016664386, -0.2564896047115326, -0.0003351603518240154, -0.5338264107704163, -0.0010520643554627895, -0.040390536189079285, -0.0023393663577735424, -0.4796816110610962, -2.0146166207268834e-05, -0.0018935146508738399, -0.0009092725813388824, -0.12224822491407394, -3.576278118089249e-07, -2.145764938177308e-06, -1.0728830375228426e-06, -0.001025627483613789, -0.00020704510097857565, -0.0005746620590798557, -5.006777428206988e-06, -1.0728830375228426e-06, -0.00029881304362788796, -0.4754738509654999, -0.014684101566672325, -0.0012028133496642113, -0.0005067494930699468, -0.00027307120035402477, -0.002711193636059761, -0.009614236652851105, -1.329383373260498, -0.00015448330668732524, -0.024092990905046463, -0.11364231258630753, -0.0009117737063206732, 0.0, -1.0728830375228426e-06, -7.152555099310121e-07, -0.0004931663861498237, -0.0007780147134326398, -0.0005384425749070942, -0.0013019903562963009, -0.0017685738857835531, 0.0, -0.0005648924270644784, -0.09126963466405869, -0.00027616979787126184, -0.9154691696166992, -0.0020368797704577446, -0.0003256267518736422, -0.006573837250471115, -1.2993727978027891e-05, -0.00022182388056535274, -0.0017135950038209558, -0.41151049733161926, -0.049975376576185226, -0.04343283176422119, -0.0005429700831882656, -2.0265558760002023e-06, -2.9802276912960224e-06, -0.0933184027671814, -0.0029654596000909805, -0.0019812018144875765, -0.0001294529065489769, -8.010543388081715e-05, -0.02142067439854145, -0.0003103728231508285, -1.1225413084030151, -0.000311802898067981, -0.025823332369327545, -0.43220192193984985, -0.00018571082910057157, -0.038843147456645966, -0.05848925560712814, -2.02333927154541, -0.7465795278549194, -0.020970994606614113, -0.01290329173207283, -9.536738616588991e-07, -0.03803475946187973, -0.00704779289662838, -0.024377943947911263, -0.04094588756561279, -0.0021851013880223036, -0.26787856221199036, -1.2168939113616943, -0.0008987916517071426, -0.002838750835508108, -0.00017891713650897145, -0.01432692352682352, -0.0008076743106357753, -0.00016127715934999287, -0.0002637753786984831, -0.003306519240140915, -0.0001591317413840443, -0.0011554239317774773, -0.0015393561916425824, -0.2708169221878052, -1.116286039352417, -0.0024297498166561127, -0.19109268486499786, -1.9073468138230965e-06, -0.13141925632953644, -4.529942543740617e-06, -0.7638874053955078, -0.00010501786891836673, -0.027666766196489334, -0.0027733694296330214, -0.004250896163284779, -0.0006063529872335494, -0.04436676949262619, -0.010036478750407696, -8.308542601298541e-05, -0.00013910756388213485, -0.003566454164683819, -0.0008467426523566246, -0.0014627005439251661, -0.0315084345638752, -1.2613552808761597, -0.00023684080224484205, -0.04382609203457832, -2.1096670627593994, -0.0008070787298493087, -0.002446041675284505, -6.496695277746767e-05, -8.344646857949556e-07, -3.4570634852570947e-06, -0.004320453852415085, -0.00030012393835932016, -0.00972627755254507, -0.1692158579826355, -6.97350042173639e-05, -0.00040987672400660813, -0.0010989824077114463, -0.15729691088199615, -0.0010475391754880548, -0.0012980615720152855, -1.3589766240329482e-05, -0.0010762381134554744, -3.0874729418428615e-05, -3.1709168979432434e-05, -0.0001255195093108341, -0.029444651678204536, -0.1043323203921318, -0.00452553853392601, -0.2651000916957855, -0.9232723712921143, -0.0011848341673612595, -3.349725011503324e-05, -2.145764938177308e-06, -0.016434187069535255, -0.004629370290786028, -0.1606716811656952, -1.311301275563892e-06, -5.602820692729438e-06, -5.960462772236497e-07, -0.022055579349398613, 0.0, -1.3470558769768104e-05, -0.0014886498684063554, -0.0009201106731779873, -0.005867281928658485, -0.26608240604400635, -0.00024816294899210334, -0.0014142522122710943, -6.639736966462806e-05, -0.0002851079625543207, -7.128461584215984e-05, -0.001974539365619421, -0.003813140094280243, -1.4305012882687151e-05, -8.237022848334163e-05, -0.00014423283573705703, -0.00013696208770852536, -0.001784519525244832, -0.002063171239569783, -0.005177779123187065, -0.016710428521037102, -0.00032443503732793033, -1.5146610736846924, -2.9802276912960224e-06, -0.0001699779968475923, -1.0013530300057027e-05, -0.7452993988990784, -0.03930583968758583, -0.00040415700641460717, -0.0033724596723914146, -0.0031304187141358852, -0.13320374488830566, -3.344653606414795, -0.48793351650238037, -0.00328132975846529, -0.04209430143237114, -0.15114471316337585, -0.0009369035833515227, -8.4638240878121e-06, -0.0001494772732257843, -1.806231141090393, -1.1920922133867862e-06, -1.0728830375228426e-06, -5.125986263010418e-06, -3.0397906812140718e-05, -0.20689380168914795], "finish_reason": "stop"}], "metrics": {"energy": 858.7299509639734, "energy_per_token": 3.6541700041020144, "time": 21.2195, "time_per_token": 0.09029574468085107}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(\"Directory not found.\")\n    files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not files:\n        raise ValueError(\"No CSV files found in directory.\")\n    table = Texttable()\n    table.add_row([\"File\", \"Rows\", \"Columns\"])\n    table.set_cols_align([\"l\", \"r\", \"r\"])\n    files.sort()\n    for filename in files:\n        try:\n            df = pd.read_csv(filename)\n            table.add_row([os.path.basename(filename), df.shape[0], df.shape[1]])\n        except pandas.errors.EmptyDataError:\n            raise\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", ".", "\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " directory", ".", "\"", ")", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "add", "_", "row", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -1.6366844177246094, -0.00017557987303007394, -0.0005801424849778414, -0.0011676882859319448, -1.9073468138230965e-06, -5.125986263010418e-06, -0.0025952726136893034, -0.02071285992860794, -0.005431774538010359, -0.01695823110640049, -0.0035666918847709894, -7.045020902296528e-05, -1.0371154530730564e-05, -0.06452594697475433, -1.2727023363113403, -0.9476894736289978, -0.6227692365646362, -0.003905290039256215, -1.7231605052947998, -0.06551989167928696, -0.0005545270396396518, -0.0014897212386131287, -1.2157422304153442, -1.7491533756256104, -0.019690638408064842, -0.4485359191894531, -3.766942609217949e-05, -0.0015769677702337503, -0.003016566624864936, -0.2946057915687561, -7.152555099310121e-07, -9.894321920000948e-06, -3.4570634852570947e-06, -0.0008755664457567036, -0.00035089056473225355, -0.0007403731578961015, -4.529942543740617e-06, -4.768370445162873e-07, -0.0007545484695583582, -1.070243000984192, -0.011918523348867893, -0.006943738553673029, -0.001389015233144164, -0.016807962208986282, -0.02177579514682293, -0.051198989152908325, -0.08258307725191116, -0.11907336860895157, -0.003810527501627803, -0.0008182753226719797, -0.0016450457042083144, -0.0007509748684242368, -0.001608150894753635, -0.0020982648711651564, -2.3841855067985307e-07, -0.007338236086070538, -0.030421454459428787, -0.019999518990516663, -0.02491714246571064, -9.405170567333698e-05, -0.0015529250958934426, -0.03924554958939552, -0.1133081465959549, -1.6519479751586914, -0.03368864953517914, -0.0007726544863544405, -0.00012313561455812305, -8.11782301752828e-05, -0.2805130183696747, -1.325913906097412, -0.010862741619348526, -0.006157001480460167, -1.311301275563892e-06, -0.023221686482429504, -0.008916915394365788, -0.0018972031539306045, -0.03774276375770569, -0.001437702914699912, -2.3655426502227783, -1.311301275563892e-06, -1.7551883459091187, -1.3187512159347534, -0.004541914910078049, -0.0020387833938002586, -0.0017774987500160933, -0.00010156115604331717, -0.004639100283384323, -0.0005422552349045873, -5.817244164063595e-05, -0.00014375607133843005, -0.0010995777556672692, -0.00011157367407577112, -1.3947389561508317e-05, -0.0016145778354257345, -0.005655360408127308, -0.008976344019174576, -1.5227329730987549, -0.004826917313039303, -0.13307613134384155, -4.768370445162873e-07, -0.2059241384267807, -4.172316494077677e-06, -0.2397276610136032, -0.12065624445676804, -0.00015484087634831667, -0.06432005763053894, -1.823885577323381e-05, -0.0009333306807093322, -0.004918144084513187, -0.09726786613464355, -3.576272320060525e-06, -0.00011634149996098131, -0.0008505540899932384, -0.002605973742902279, -1.7881377516459906e-06, -0.0009053422254510224, -0.012133714742958546, -0.031028250232338905, -2.1151320934295654, -0.5670598745346069, -0.00027366707217879593, -0.02920536696910858, -0.06192178651690483, -0.04217670485377312, -0.051156289875507355, -2.4795565605163574, -0.0004413345886860043, -0.003941506613045931, -0.0010095505276694894, -0.0012378181563690305, -0.003079555230215192, -0.10460077971220016, -8.606540359323844e-05, -0.0005339150666259229, -0.00097977789118886, -0.1327078938484192, -0.0014354411978274584, -0.0008179179858416319, -1.9907753085135482e-05, -0.0013500871136784554, -1.8358061424805783e-05, -4.279521817807108e-05, -8.439661905867979e-05, -0.017051871865987778, -0.0868789553642273, -0.0036266762763261795, -0.272773414850235, -0.6927998065948486, -0.0010561132803559303, -2.52720492426306e-05, -4.768370445162873e-07, -0.0027608871459960938, -0.01328568160533905, -0.1292010098695755, -2.145764938177308e-06, -1.8715683836489916e-05, -4.768370445162873e-07, -0.022119594737887383, 0.0, -1.4185804502631072e-05, -0.0031483627390116453, -0.0010848119854927063, -0.006800246424973011, -0.13903012871742249, -0.00017581824795342982, -0.0024165494833141565, -7.271502545336261e-05, -0.000402250443585217, -7.1403817855753e-05, -0.0012957995058968663, -0.011733682826161385, -1.2636104656849056e-05, -3.7788631743751466e-05, -0.00011383838864276186, -0.00022396916756406426, -0.0019848900847136974, -0.00026675479602999985, -0.0024523441679775715, -0.009599241428077221, -0.0011531615164130926, -0.9046082496643066, -1.490105023549404e-05, -0.0021569100208580494, -3.4570634852570947e-06, -6.341733387671411e-05, -9.536738616588991e-07, -1.4781842764932662e-05, -0.42657768726348877, -0.002211150946095586, -0.002783236326649785, -0.082631915807724, -0.4031372666358948, -0.13170687854290009, -0.029338039457798004, -0.08832556009292603, -0.0011555430246517062, -1.847726889536716e-05, -0.0001652104256208986, -0.37049129605293274, -0.012961424887180328, -0.31954604387283325], "finish_reason": "stop"}], "metrics": {"energy": 767.8057476692204, "energy_per_token": 3.7092065104793255, "time": 17.65976, "time_per_token": 0.08531285024154589}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory {data_dir} does not exist.\")\n    csv_files = glob.glob(f\"{data_dir}/*.csv\")\n    if not csv_files:\n        raise ValueError(f\"There are no CSV files in {data_dir}\")\n    csv_files.sort()\n    csv_data = []\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file, engine='c')\n            row_count = df.shape[0]\n            col_count = df.shape[1]\n            csv_data.append((os.path.basename(csv_file), row_count, col_count))\n        except pd.errors.EmptyDataError as e:\n            raise e\n    table = Texttable()\n    table.header([\"File\", \"Rows\", \"Columns\"])\n    for data in csv_data:\n        table.add_row(data)\n    return table.draw", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "data", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "/*", ".", "csv", "\"", ")", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "There", " are", " no", " CS", "V", " files", " in", " {", "data", "_", "dir", "}\"", ")", "\n", "    ", "csv", "_", "files", ".", "sort", "()", "\n", "    ", "csv", "_", "data", " =", " []", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ",", " engine", "='", "c", "')", "\n", "            ", "row", "_", "count", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "col", "_", "count", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "csv", "_", "data", ".", "append", "((", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " row", "_", "count", ",", " col", "_", "count", "))", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "            ", "raise", " e", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "for", " data", " in", " c", "sv", "_", "data", ":", "\n", "        ", "table", ".", "add", "_", "row", "(", "data", ")", "\n", "    ", "return", " table", ".", "draw"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -1.0948567390441895, -0.722522497177124, -0.9025886654853821, -0.0008897398365661502, -3.576272320060525e-06, -2.0265558760002023e-06, -0.0012206730898469687, -0.017894258722662926, -0.00030989613151177764, -0.0025202438700944185, -0.15890812873840332, -0.016227543354034424, -0.00018451895448379219, -0.0005304598016664386, -1.4912441968917847, -0.4571428894996643, -0.0016127924900501966, -0.03279636800289154, -0.002647468587383628, -0.46192747354507446, -3.0040289857424796e-05, -0.00201534666121006, -0.0009804924484342337, -2.72483229637146, -0.08696649223566055, -0.0002033503697020933, -0.0015767297009006143, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.0456298291683197, -0.3476002514362335, -0.0021567910443991423, -0.0009254701435565948, -0.0001461399078834802, -0.009862622246146202, -0.020149189978837967, -0.050431929528713226, -0.03970736637711525, -0.11893600225448608, -0.001293775625526905, 0.0, -2.145764938177308e-06, -2.3841855067985307e-07, -0.00045849301386624575, -0.0011027929140254855, -0.0008422164828516543, -0.0008671099785715342, -0.0018101035384461284, -5.960462772236497e-07, -0.0006840273272246122, -0.0878680869936943, -0.0002588890492916107, -0.7895758152008057, -0.0020816102623939514, -0.00034028460504487157, -0.008380956947803497, -2.2053474822314456e-05, -0.00022182388056535274, -0.0014222278259694576, -1.3442070484161377, -0.00043466180795803666, -3.6954811548639555e-06, -3.3378546504536644e-06, -1.651605486869812, -0.00017295771976932883, -0.0002338612830499187, -0.38890963792800903, -0.9617370963096619, -0.0003364712174516171, -0.02579847164452076, -0.31691625714302063, -0.0001559135998832062, -0.036745283752679825, -0.03586665168404579, -0.3257998824119568, -3.4442028999328613, -0.005475879181176424, -1.9130444526672363, -0.0848250463604927, -0.4299156367778778, -0.011513220146298409, -0.048040635883808136, -0.09501267224550247, -0.9824022650718689, -0.0009460740839131176, -0.2842029631137848, -0.011110227555036545, -0.001354015665128827, -0.002787515986710787, -1.9073468138230965e-06, -3.576278118089249e-07, -1.311301275563892e-06, -0.0027469778433442116, -0.00037877538125030696, -0.0033721032086759806, -0.08617684990167618, -0.00011216964776394889, -0.0007849234389141202, -0.0015261442167684436, -0.1971956342458725, -0.0021207479294389486, -0.0012762743281200528, -1.3589766240329482e-05, -0.0005964645533822477, -1.0728830375228426e-06, -3.85038583772257e-05, -6.663577369181439e-05, -0.01402874756604433, -1.5497195136049413e-06, -1.1086402082582936e-05, -2.09580397605896, -2.8077642917633057, -0.23897802829742432, -0.2833900451660156, -0.22502386569976807, -0.04742179438471794, -0.3794546127319336, -2.999664306640625, -0.09180919080972672, -0.08461398631334305, -0.06172018498182297, -0.7886309027671814, -0.0019154074834659696, -0.00953737087547779, -0.00017236177518498152, -0.0004413345886860043, -7.152301259338856e-05, -0.012788663618266582, -0.0009286858257837594, -0.872239351272583, -9.536288416711614e-05, -0.00011944057769142091, -0.0001045410826918669, -0.015131215564906597, -1.0609570381348021e-05, -0.0005003153928555548, -0.0003067976504098624, -9.131014667218551e-05, -2.407998726994265e-05, -0.0009790633339434862, -0.20421427488327026, -0.11372168362140656, -6.556489552167477e-06, -0.001081477734260261, -0.001312824198976159, -0.0016337393317371607, -0.8186845779418945, -0.2929929494857788, -3.814689989667386e-06, -3.790783375734463e-05, -4.768370445162873e-07, -0.01589978113770485, -1.1920928244535389e-07, -1.966933996300213e-05, -0.0020961235277354717, -3.2186455882765586e-06, -3.6000557884108275e-05, -0.0007980260998010635, -0.008831962011754513, -0.03430567681789398, -5.960462772236497e-07, -1.1920928244535389e-07, -0.0006571040721610188, -0.004211248364299536, -2.9802276912960224e-06, -1.6689286894688848e-06, -0.004014885518699884, -0.003956230357289314, -0.013598191551864147, -0.0007756323902867734, -0.9570140838623047, -8.940656698541716e-06, -0.001257224939763546, -2.0265558760002023e-06, -0.00016759421851020306, -9.536738616588991e-07, -8.106198947643861e-06, -0.8700751662254333, -0.055755555629730225, -0.0004651656490750611, -0.0025835013948380947, -0.0034448110964149237, -0.20722176134586334, -0.954996645450592, -0.0446382500231266, -0.1483340561389923, -0.5230416059494019, -0.011517344042658806, -0.0026041902601718903, -1.4305104514278355e-06, -0.057029660791158676, -0.006832451093941927, -0.0009148702956736088, -0.09831906110048294, -0.005858275108039379, -0.5983185172080994, -0.7881544828414917, -0.003393844934180379, -0.001262344536371529, -0.0005441615357995033, -8.320462075062096e-05, -0.006782130803912878, -0.0006658005877397954, -4.076874756719917e-05, -7.211902266135439e-05, -0.0011169631034135818, -0.00013398226292338222, -2.9682672902708873e-05, -0.0003046525234822184, -0.0005214046686887741, -0.0010962436208501458, -1.0734164714813232, -1.1385045051574707, -0.029645688831806183, -0.0017463208641856909, -4.768370445162873e-07, -2.3841855067985307e-07, -6.437280717364047e-06, -0.0014297273010015488, -0.00018654513405635953, -0.003874653484672308, -0.02809513360261917, -0.000325388420606032, -2.109982233378105e-05, -2.9802276912960224e-06, -0.005380434915423393, -0.03875507786870003, -0.08997318148612976, -0.0028876056894659996, -0.0006448334897868335, -0.014806734398007393, -0.135405033826828, -0.042256131768226624, -0.0015482831513509154, -1.645074735279195e-05], "finish_reason": "length"}], "metrics": {"energy": 917.1068862953186, "energy_per_token": 3.5824487745910885, "time": 22.059559, "time_per_token": 0.08617015234375}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' does not exist.\")\n\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    csv_files.sort()\n\n    table = Texttable()\n    table.header([\"File\", \"Rows\", \"Columns\"])\n    table.set_cols_align([\"l\", \"r\", \"r\"])\n    table.set_deco(Texttable.HEADER | Texttable.HLINES)\n    for file in csv_files:\n        try:\n            df = pd.read_csv(file)\n            num_rows = len(df)\n            num_cols = len(df.columns)\n            table.add_row([os.path.basename(file), num_rows, num_cols])\n        except pandas.errors.EmptyDataError", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", ".", "sort", "()", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "table", ".", "set", "_", "dec", "o", "(", "Text", "table", ".", "HEAD", "ER", " |", " Text", "table", ".", "HL", "IN", "ES", ")", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "num", "_", "rows", " =", " len", "(", "df", ")", "\n", "            ", "num", "_", "cols", " =", " len", "(", "df", ".", "columns", ")", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " num", "_", "rows", ",", " num", "_", "cols", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -0.41229113936424255, -0.0002584123576525599, -0.0015589953400194645, -0.24497635662555695, -0.010700350627303123, -0.00013457823661156, -0.0006329201860353351, -0.2085290253162384, -0.0002616301644593477, -0.45588287711143494, -0.0009248746791854501, -0.04628153517842293, -0.0029126862064003944, -0.5016381144523621, -1.7046782886609435e-05, -0.0013736584223806858, -0.000961913785431534, -0.07119129598140717, -3.576278118089249e-07, -2.50339189733495e-06, -1.7881377516459906e-06, -0.00042274597217328846, -0.00018976318824570626, -0.00038223114097490907, -6.079655122448457e-06, -1.5497195136049413e-06, -0.00019643761334009469, -0.4454782009124756, -0.012737112119793892, -0.00082923355512321, -0.0005881248507648706, -0.004275942221283913, -0.006983159575611353, -0.26484090089797974, -0.07058128714561462, -0.07558835297822952, -0.0006526962388306856, 0.0, -4.768370445162873e-07, -8.344646857949556e-07, -0.00035958975786343217, -0.000993116176687181, -0.0004975749761797488, -0.000899982638657093, -0.0015976772410795093, -1.1920928244535389e-07, -0.003358677960932255, -0.03046504780650139, -0.0005174727994017303, -0.023987552151083946, -0.007215867284685373, -3.4689302992774174e-05, -0.0003033416287507862, -0.014156161807477474, -0.00028546550311148167, -0.16892391443252563, -0.03294782713055611, -2.658331868587993e-05, -0.0003303935518488288, -3.099436753473128e-06, -2.861018856492592e-06, -0.0024471119977533817, -0.062427010387182236, -0.0005162813467904925, -5.829164365422912e-05, -8.248942322097719e-05, -0.034238748252391815, -0.00026913834153674543, -1.2315797805786133, -0.00023135847004596144, -0.025926487520337105, -0.4025484025478363, -0.0001935771433636546, -0.048856645822525024, -0.10294247418642044, -0.32979539036750793, -0.00010024998482549563, -0.43282562494277954, -0.010207237675786018, -0.002353756921365857, -7.152555099310121e-07, -0.030467823147773743, -0.0038067272398620844, -0.009964249096810818, -0.025106770917773247, -0.0015291199088096619, -0.3373083770275116, -1.5632675886154175, -0.019295021891593933, -0.0012292455649003386, -0.0010683787986636162, -7.652943895664066e-05, -0.0027088159695267677, -0.0004700509598478675, -5.1377883210079744e-05, -0.00010144196130568162, -0.0008895016508176923, -0.0001102625101339072, -1.0013530300057027e-05, -0.00027783826226368546, -0.0011039836099371314, -0.3026718199253082, -0.4294862151145935, -0.0010215784423053265, -0.10145462304353714, -1.7881377516459906e-06, -0.16924896836280823, -1.7881377516459906e-06, -0.7145380973815918, -0.09799681603908539, -9.131014667218551e-05, -0.10501492768526077, -3.790783375734463e-05, -0.0006211258587427437, -0.002745907986536622, -0.13781142234802246, -3.099436753473128e-06, -0.00010513706365600228, -0.0007335832342505455, -0.0028241295367479324, -1.311301275563892e-06, -0.001013361383229494, -0.013629943132400513, -0.6443408727645874, -0.1701047122478485, -0.000691770575940609, -0.06323014199733734, -2.622600959512056e-06, -0.7811850309371948, -0.0017826156690716743, -0.00023827097902540118, -0.0030175175052136183, 0.0, -3.540453326422721e-05, -0.02692030929028988, -5.9960475482512265e-05, -0.15921998023986816, -0.011240489780902863, 0.0, -1.0728830375228426e-06, -1.6600056886672974, -0.003798295510932803, -0.0001652104256208986, -0.09227965027093887, -0.01127738505601883, -2.8130626678466797, -0.596028745174408, -0.5010227560997009, -0.2472274899482727, -0.003776681376621127, -3.3378546504536644e-06, -5.960462772236497e-07, -4.768370445162873e-07, -0.0023234295658767223, -0.0001431601122021675, -0.0036253698635846376, -0.0919174998998642, -5.745722592109814e-05, -0.00022003613412380219, -0.0006765222642570734, -0.126034215092659, -0.0007216709782369435, -0.0009352362249046564, -1.3708974620385561e-05, -0.0009601273923180997, -1.680836794548668e-05, -2.777537883957848e-05, -4.2676016164477915e-05, -0.01551557146012783, -0.10551976412534714, -0.0034969625994563103, -0.13780133426189423, -1.7922818660736084, -5.972207145532593e-05, -0.00806681253015995, -0.23255112767219543, -1.2323532104492188, -1.4662635294371285e-05, -9.846202738117427e-05, -0.33252379298210144, -0.00446513295173645, -0.0005701346672140062, -0.003048655577003956, -8.344646857949556e-07, -0.1321403533220291, -8.77341881277971e-05, -0.051073603332042694, -6.12716976320371e-05, -0.0020615055691450834, -1.8715683836489916e-05, -0.001105650793761015, -0.0005255748401395977, -0.0006654431927017868, -0.0944751724600792, -0.05266372114419937, -0.0002967870968859643, -2.038458114839159e-05, -3.576278118089249e-07, -0.03905479982495308, -0.0006584145012311637, -0.14045517146587372, -7.152555099310121e-07, -4.6491513785440475e-06, -1.1920928244535389e-07, -0.009998711757361889, -7.152555099310121e-07, -5.722029527532868e-06, -0.00031454383861273527, -0.00038926175329834223, -0.004828697070479393, -0.008374928496778011, -3.576278118089249e-07, -2.3841574147809297e-05, -0.0006100462633185089, -0.0007339406292885542, -1.1920928244535389e-07, -0.00010084597306558862, -0.00046719127567484975, -0.0012822272256016731, -0.006828543730080128, -0.00021836756786797196, -0.8916689157485962, -1.728519782773219e-05, -0.0022958368062973022, -2.3841830625315197e-06, -2.610649426060263e-05, -1.0728830375228426e-06, -8.106198947643861e-06], "finish_reason": "length"}], "metrics": {"energy": 900.5276474914546, "energy_per_token": 3.5176861230134944, "time": 22.065496, "time_per_token": 0.08619334375}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' not found.\")\n\n    files = glob.glob(os.path.join(data_dir, '*.csv'))\n\n    if not files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    table = Texttable()\n    table.set_cols_align(['l', 'r', 'r'])\n    table.set_cols_valign(['m', 'm', 'm'])\n    table.header(['File', 'Rows', 'Columns'])\n\n    for file_path in sorted(files):\n        try:\n            df = pd.read_csv(file_path)\n            num_rows = df.shape[0]\n            num_columns = df.shape[1]\n            table.add_row([os.path.basename(file_path), num_rows, num_columns])\n        except pandas.errors.EmptyDataError as e:\n            print(f\"Error", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "val", "ign", "(['", "m", "'", ",", " '", "m", "'", ",", " '", "m", "'])", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "for", " file", "_", "path", " in", " sorted", "(", "files", "):", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "path", ")", "\n", "            ", "num", "_", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "num", "_", "columns", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", ",", " num", "_", "rows", ",", " num", "_", "columns", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "Error"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -1.6366844177246094, -0.00017557987303007394, -0.0005801424849778414, -0.0011676882859319448, -1.9073468138230965e-06, -5.125986263010418e-06, -0.0025952726136893034, -0.02071285992860794, -0.005431774538010359, -0.01695823110640049, -0.0035666918847709894, -7.045020902296528e-05, -1.0371154530730564e-05, -0.06452594697475433, -0.37590137124061584, -0.060412321239709854, -0.703432559967041, -0.7009936571121216, -0.00031013446277938783, -0.0009733468177728355, -4.768360213347478e-06, -3.576272320060525e-06, -0.002484332537278533, -0.6541728973388672, -0.0002675890573300421, -0.29045337438583374, -0.03126143664121628, -0.0001394651480950415, -0.0007830176036804914, -0.2435874342918396, -0.00027044929447583854, -2.4513986110687256, -0.019860457628965378, -0.4200420677661896, -3.4689302992774174e-05, -0.0013653251808136702, -0.0010459910845384002, -0.24036604166030884, -3.576278118089249e-07, -3.3378546504536644e-06, -1.0728830375228426e-06, -0.000436925794929266, -0.0002101439022226259, -0.000568228424526751, -2.264974000354414e-06, -2.3841855067985307e-07, -0.0003355178632773459, -0.4374507963657379, -0.01669718138873577, -0.0032174033112823963, -0.0010642108973115683, -0.012990725226700306, -0.016321254894137383, -1.754896879196167, -0.0001656871900195256, -0.021276094019412994, -0.1432296633720398, -0.0029235025867819786, -0.0008317348547279835, -0.0011074369540438056, -0.0006392342620529234, -0.0019271865021437407, -0.0019606193527579308, 0.0, -0.006936872377991676, -0.05880245566368103, -0.0008099374244920909, -0.0077829682268202305, -0.015600547194480896, -4.017272294731811e-05, -0.00039081089198589325, -0.005823194514960051, -0.0005770448478870094, -0.21154750883579254, -0.0749446302652359, -4.4225667807040736e-05, -0.0005333193112164736, -2.861018856492592e-06, -3.6954811548639555e-06, -0.002656028838828206, -0.09359200298786163, -0.0008286379743367434, -7.509902934543788e-05, -0.00010418349120300263, -0.019450411200523376, -0.0003668589051812887, -1.2747139930725098, -0.01785421185195446, -0.005504095461219549, -1.4305104514278355e-06, -0.022117145359516144, -0.004612995311617851, -0.026046356186270714, -0.04062441363930702, -0.0016946729738265276, -1.393032193183899, -2.407998726994265e-05, -0.46023139357566833, -0.00048315772437490523, -0.35234442353248596, -0.2809130549430847, -0.4139135181903839, -0.00016878610767889768, -0.00034457468427717686, -0.01862618513405323, -0.05571620538830757, -0.0006324436399154365, -8.630380034446716e-05, -0.0016387379728257656, -0.0027999980375170708, -0.004603858571499586, -0.027447469532489777, -0.03897707164287567, -0.030969657003879547, -0.0011955503141507506, -0.4670161306858063, -2.3841830625315197e-06, -0.47215455770492554, -1.1920928244535389e-07, -2.9956412315368652, -0.0004366874636616558, -0.0006791430641897023, -0.2992648482322693, -0.0004592079494614154, -7.354942499659956e-05, -0.0016677769599482417, -0.012302350252866745, -0.00012563870404846966, -2.5629668016335927e-05, -0.0005231918767094612, -0.00034374051028862596, -0.0006160030607134104, -0.0012236495967954397, -0.09432309865951538, -0.04551205784082413, -0.0007091629668138921, -0.6315208077430725, -0.3298545181751251, -0.0006503135664388537, -0.0014481781981885433, -0.00015043080202303827, -0.003344777040183544, -0.000590865034610033, -4.625213477993384e-05, -0.0001006075763143599, -0.0009728704462759197, -0.0001234931987710297, -0.0003003622987307608, -0.002200088929384947, -0.6024293899536133, -0.00021610308613162488, -0.2187846451997757, -0.29012832045555115, -2.488983631134033, -0.21516723930835724, -0.000392598332837224, -0.25816401839256287, -0.00023576818057335913, -0.002186647616326809, -0.04814481735229492, -0.0034854395780712366, -0.0075578466057777405, -0.30248111486434937, -9.107174992095679e-05, -0.00032884435495361686, -0.000988114275969565, -0.2352060079574585, -0.0009098681039176881, -0.0008724696817807853, -8.583032467868179e-06, -0.0010399178136140108, -8.702239938429557e-06, -2.539125671319198e-05, -5.1973900554003194e-05, -0.0044624037109315395, -5.531158240046352e-05, -3.099436753473128e-06, -0.1765429526567459, -0.004254457075148821, -0.17816458642482758, -2.141967296600342, -4.8874615458771586e-05, -0.014166269451379776, -0.22125062346458435, -0.3938315510749817, -0.00038413776201196015, -0.001001571537926793, -5.507317473529838e-05, -0.00017689094238448888, -1.585470999998506e-05, -0.004837001673877239, -0.00035529976594261825, -0.0010939810890704393, -1.1920922133867862e-06, -2.1981871128082275, -0.00011514954530866817, -0.006360051687806845, -3.3378546504536644e-06, -0.00010501786891836673, -9.583967766957358e-05, -4.994744449504651e-05, -1.2516897186287679e-05, -0.00034874555421993136, -0.164810910820961, -0.4499207139015198, -0.0025058556348085403, -0.00018880968855228275, -1.0728830375228426e-06, -0.04630156606435776, -0.0024141711182892323, -0.043738462030887604, -8.344646857949556e-07, -4.0531076592742465e-06, -4.768370445162873e-07, -0.011240254156291485, -1.1920928244535389e-07, -6.6756979322235566e-06, -0.0006885541952215135, -3.2782016205601394e-05, 0.0, -0.0003511289251036942, -0.004908179398626089, -0.01908990368247032, -4.768370445162873e-07, -0.0002978596603497863, -0.0005137792322784662, -0.005095234606415033, -3.576278118089249e-07, -1.4066597032069694e-05, -0.0004931663861498237, -0.0010673070792108774, -0.024914119392633438, -0.0006338732782751322, -0.8952282071113586, -2.634490556374658e-05, -0.001958120847120881, -2.0265558760002023e-06, -6.651657167822123e-05, -1.1920922133867862e-06, -7.510157047363464e-06, -1.0499587059020996, -0.05961860716342926, -0.0007256020326167345, -0.0022940528579056263, -0.0026323688216507435, -3.069347620010376, -0.003699840744957328, -0.05304240062832832, -0.012326370924711227, -0.6960131525993347], "finish_reason": "length"}], "metrics": {"energy": 954.2549367103577, "energy_per_token": 3.7275583465248348, "time": 22.059916, "time_per_token": 0.086171546875}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"The directory '{data_dir}' does not exist.\")\n\n    # Get the list of CSV files in the directory\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    if not csv_files:\n        raise ValueError(f\"There are no CSV files in directory '{data_dir}'.\")\n\n    # Initialize the table\n    table = Texttable()\n    table.header(['File', 'Rows', 'Columns'])\n    table.set_cols_dtype(['t', 'i', 'i'])\n\n    # Process each CSV file and add to the table\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file)\n            rows, columns = df.shape\n            table.add_row([os.path.basename(csv_file), rows, columns])\n        except pandas.errors.EmptyDataError", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " CS", "V", " files", " in", " the", " directory", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "There", " are", " no", " CS", "V", " files", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "\n", "    ", "#", " Process", " each", " CS", "V", " file", " and", " add", " to", " the", " table", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "            ", "rows", ",", " columns", " =", " df", ".", "shape", "\n", "            ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " rows", ",", " columns", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error"], "logprobs": [-1.68333899974823, -0.6197478771209717, -0.08166000247001648, -0.12191270291805267, -0.8767383694648743, -0.02191248908638954, -0.07003604620695114, -0.0007668177131563425, -0.005321385804563761, -0.007091234438121319, -0.001849489752203226, -6.198863957251888e-06, -0.00045658653834834695, -6.949660019017756e-05, -0.10975849628448486, -0.00020394629973452538, -0.0003053675754927099, -5.960462772236497e-07, -1.311301275563892e-06, -0.006141836289316416, -0.0005266471416689456, -0.0023217645939439535, -0.007264508865773678, -0.0020284331403672695, -4.172238186583854e-05, -3.576272320060525e-06, -0.02676897682249546, -0.2748839259147644, -0.024690262973308563, -1.1617666482925415, -0.49184882640838623, -0.6154102683067322, -0.00012778419477399439, -0.0009971652179956436, -7.986990567587782e-06, -8.344646857949556e-07, -0.0019032713025808334, -0.01382607314735651, -0.00012134769349358976, -0.0010649253381416202, -0.07149765640497208, -0.012565608136355877, -0.0001991788885788992, -0.0002227773511549458, -0.032961439341306686, -0.00047255316167138517, -0.009221462532877922, -1.2569433450698853, -1.0696481466293335, -0.9766541123390198, -7.128461584215984e-05, -0.20447519421577454, -8.332382276421413e-05, -0.009662525728344917, -0.30444878339767456, -0.004236770328134298, -0.11838451772928238, -0.10762842744588852, -0.00012361239350866526, -0.1660260558128357, -0.00015627116954419762, -0.01547589898109436, -0.0010363452602177858, -0.14223654568195343, -1.9311717551317997e-05, -0.0008384049870073795, -0.0005865760613232851, -0.052650488913059235, -3.576278118089249e-07, -1.4305104514278355e-06, -9.536738616588991e-07, -0.0002864189154934138, -8.368142152903602e-05, -0.00027044929447583854, -2.622600959512056e-06, 0.0, -0.00013791563105769455, -1.0298120975494385, -0.0033205393701791763, -0.0009666775586083531, -0.0002779574424494058, -0.00018821375851985067, -0.0027315232437103987, -0.0015125750796869397, -2.052327871322632, -0.4086732864379883, -0.07905994355678558, -0.0003620922507252544, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00027783826226368546, -0.002640334889292717, -0.000447530735982582, -0.00706673227250576, -0.0007408496458083391, -1.1920928244535389e-07, -0.00044848397374153137, -0.04957466199994087, -0.00011979816190432757, -1.1090270280838013, -0.0016210046596825123, -0.00015925093612167984, -0.0023123687133193016, -3.576272320060525e-06, -0.00013195598148740828, -0.0006185048841871321, -2.8011982440948486, -0.08653376251459122, -0.00011622230522334576, -0.002657574601471424, -3.2186455882765586e-06, -1.3470558769768104e-05, -0.004612995311617851, -0.0842900350689888, -0.0028169972356408834, -9.131014667218551e-05, -8.05822346592322e-05, -0.03642831742763519, -0.0006560318870469928, -0.09844320267438889, -1.380265474319458, -0.3710913360118866, -0.4024790823459625, -0.25577670335769653, -0.000445385929197073, -0.0993804931640625, -0.004126724321395159, -0.0011120808776468039, -3.576278118089249e-07, -0.020483272150158882, -0.0023965705186128616, -0.03237681835889816, -0.03228344768285751, -0.00108624086715281, -0.35188186168670654, -1.3122936487197876, -0.0010743328602984548, -0.0016038662288337946, -0.00012003655137959868, -0.007616763934493065, -0.0009005781612358987, -0.0001433984871255234, -0.00011169286881340668, -0.0014804366510361433, -9.417090768693015e-05, -0.0008573431987315416, -0.0060426644049584866, -0.44802311062812805, -0.05740252509713173, -0.0005901502445340157, -0.052050791680812836, -3.576272320060525e-06, -0.07909078150987625, -3.2186455882765586e-06, -0.6623407602310181, -5.090107151772827e-05, -0.01212382223457098, -0.004880539141595364, -0.00520979892462492, -0.0003713871701620519, -0.03777720406651497, -0.006758331321179867, -5.054346183896996e-05, -7.176141662057489e-05, -0.0013906818348914385, -0.0005746620590798557, -0.001016576774418354, -0.07659367471933365, -1.1269069910049438, -0.0005849081207998097, -0.055566463619470596, -1.3456674814224243, -0.19709061086177826, -0.07192663103342056, -3.814689989667386e-06, -0.00080195686314255, -2.0544657707214355, -0.2228609323501587, -1.238126277923584, -0.02353937365114689, -0.0007173825288191438, -0.0042196763679385185, -0.0008734225411899388, -0.025952622294425964, -0.8992322087287903, -7.581423415103927e-05, -0.03602765128016472, -0.005769149400293827, -0.0009308296139352024, -0.6286335587501526, -0.00011181206355104223, -1.1920922133867862e-06, -2.169585604860913e-05, -0.00047350639943033457, -0.00029976642690598965, -0.006891884841024876, -0.16306447982788086, -4.60137271147687e-05, -0.0010311054065823555, -0.0012524626217782497, -0.19317412376403809, -0.0008699684985913336, -0.0011539950501173735, -1.2516897186287679e-05, -0.0007403731578961015, -2.2291887944447808e-05, -3.58813522325363e-05, -7.450303382938728e-05, -0.012663664296269417, -1.0728830375228426e-06, -1.4066597032069694e-05, -0.13931089639663696, -0.028861794620752335, -0.14968648552894592, -1.9566024541854858, -0.8817554712295532, -2.12117338180542, -0.0003184764937032014, -0.0015095992712303996, -2.8490614567999728e-05, -0.0007294139941222966, -0.006849381607025862, -0.11741866916418076, -0.15404243767261505, -0.0024272524751722813, -3.671578815556131e-05, -1.9073468138230965e-06, -0.040737494826316833, -0.0019538376946002245, -0.04499034956097603, -1.6689286894688848e-06, -7.986990567587782e-06, -1.1920928244535389e-07, -0.013239567168056965, 0.0, -7.510157047363464e-06, -0.0022475477308034897, -6.9141146923357155e-06, -5.602820692729438e-06, -0.0006152882124297321, -0.0037329767365008593, -0.008628231473267078, -0.0002991705550812185, -0.0004300146538298577, -0.0011815002653747797, -0.005303361918777227, -0.019900308921933174, -0.004711122717708349, -1.0159286260604858, -1.6927575416048057e-05, -0.002892241580411792, -2.264974000354414e-06, -5.9602869441732764e-05, -1.0728830375228426e-06, -1.0609570381348021e-05], "finish_reason": "length"}], "metrics": {"energy": 899.6689838485709, "energy_per_token": 3.51433196815848, "time": 22.261694, "time_per_token": 0.0869597421875}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' not found.\")\n\n    csv_files = sorted(glob.glob(os.path.join(data_dir, '*.csv')))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    # Initialize the table\n    table = Texttable()\n    table.set_deco(Texttable.HEADER | Texttable.VLINES)\n    table.set_cols_dtype(['t', 'i', 'i'])  # Set the columns to accept string, integer, and integer values\n    table.set_cols_align(['l', 'r', 'r'])  # Set the alignment for each column\n    table.header(['File', 'Rows', 'Columns'])\n\n    # Add each CSV file's information to the table\n    for csv_file in csv_files:\n        try:\n            df = pd.read_csv(csv_file", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", ")", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "dec", "o", "(", "Text", "table", ".", "HEAD", "ER", " |", " Text", "table", ".", "V", "LIN", "ES", ")", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "  ", "#", " Set", " the", " columns", " to", " accept", " string", ",", " integer", ",", " and", " integer", " values", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '", "r", "'", ",", " '", "r", "'])", "  ", "#", " Set", " the", " alignment", " for", " each", " column", "\n", "    ", "table", ".", "header", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "#", " Add", " each", " CS", "V", " file", "'", "s", " information", " to", " the", " table", "\n", "    ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -1.6366844177246094, -0.00017557987303007394, -0.0005801424849778414, -0.0011676882859319448, -1.9073468138230965e-06, -5.125986263010418e-06, -0.0025952726136893034, -0.02071285992860794, -0.005431774538010359, -0.01695823110640049, -0.0035666918847709894, -7.045020902296528e-05, -1.0371154530730564e-05, -0.06452594697475433, -0.37590137124061584, -0.060412321239709854, -0.703432559967041, -0.7009936571121216, -0.00031013446277938783, -0.0009733468177728355, -4.768360213347478e-06, -3.576272320060525e-06, -0.002484332537278533, -0.6541728973388672, -0.0002675890573300421, -0.29045337438583374, -0.03126143664121628, -0.0001394651480950415, -0.0007830176036804914, -0.2435874342918396, -0.00027044929447583854, -0.49667149782180786, -0.0010025242809206247, -0.05104675889015198, -0.0022601555101573467, -0.989233672618866, -0.015355109237134457, -0.007104964926838875, -2.539125671319198e-05, -0.0007279845303855836, -0.0010975534096360207, -0.08074422180652618, -2.3841855067985307e-07, -2.50339189733495e-06, -2.264974000354414e-06, -0.00029309268575161695, -0.0002008474839385599, -0.0006493605324067175, -2.861018856492592e-06, -7.152555099310121e-07, -0.00030727434204891324, -0.2570783793926239, -0.011373210698366165, -0.0006884350441396236, -0.00041392818093299866, -0.01189885102212429, -0.031338732689619064, -0.009773616679012775, -0.3974491357803345, -0.011139818467199802, -0.09010685980319977, -0.0005278385942801833, 0.0, -3.576278118089249e-07, -4.768370445162873e-07, -0.00021765247220173478, -0.0008206575294025242, -0.0005206898204050958, -0.001191978226415813, -0.0018341400427743793, 0.0, -0.005162954796105623, -0.04925594851374626, -0.00038985759601928294, -0.0075178565457463264, -0.008067049086093903, -4.3748852476710454e-05, -0.0004146431456319988, -0.005969671066850424, -0.0004345426568761468, -0.24457785487174988, -0.04705372080206871, -3.3378044463461265e-05, -0.0005022218101657927, -1.7881377516459906e-06, -6.556489552167477e-06, -0.0027533976826816797, -0.0662640929222107, -0.0005508335889317095, -6.723177648382261e-05, -5.6980417866725475e-05, -0.022842029109597206, -0.00022968991834204644, -2.480069160461426, -0.9558885097503662, -1.0278728008270264, -0.5873146653175354, -0.27301016449928284, -0.0006011109799146652, -0.14643573760986328, -0.0037810755893588066, -0.000876757490914315, -2.3841855067985307e-07, -0.034053266048431396, -0.002309633418917656, -0.0381624773144722, -0.07013840228319168, -0.0021398996468633413, -0.9598588347434998, -1.2159273865108844e-05, -0.8770918250083923, -0.0014978153631091118, -0.0018534163245931268, -0.0035956748761236668, 0.0, -9.035655966727063e-05, -0.06071740388870239, -0.00016020445036701858, -0.47177568078041077, -0.005153941456228495, 0.0, -4.0531076592742465e-06, -0.5620633363723755, -0.0005407063290476799, -1.811964830267243e-05, -0.13484808802604675, -0.019144754856824875, -0.03202648460865021, -0.02197476476430893, -0.0004589696181938052, -0.14279590547084808, -2.3841830625315197e-06, -0.15010598301887512, -3.635817120084539e-05, -0.35282838344573975, -6.735097849741578e-05, -0.012948950752615929, -0.007464494090527296, -0.02661913074553013, -0.0006044468027539551, -0.03288288787007332, -0.02083207108080387, -0.0002450642641633749, -5.1973900554003194e-05, -0.002897233935073018, -0.0009573881980031729, -0.004579651169478893, -1.4695830345153809, -1.8715683836489916e-05, -1.9080650806427002, -0.5754071474075317, -2.5574135780334473, -0.7720546722412109, -3.8434369564056396, -2.4874608516693115, -0.12505973875522614, -0.1668328046798706, -0.06486530601978302, -0.1088063046336174, -0.013166626915335655, -1.3041636943817139, -0.09171260893344879, -0.053782835602760315, -0.010932901874184608, -0.0005333193112164736, -0.24180465936660767, -4.768370445162873e-07, -0.015956800431013107, -3.576278118089249e-07, -0.0029025827534496784, -0.15430492162704468, -0.05796954780817032, -8.761498611420393e-05, -5.0424259825376794e-05, -0.0017272805562242866, -0.025121301412582397, -0.00010668662434909493, -5.829164365422912e-05, -0.0009058186551555991, -0.0017354916781187057, -0.0015805383445695043, -0.06032343953847885, -4.172316494077677e-06, -0.31641095876693726, -0.2574608027935028, -0.2795422673225403, -1.3729151487350464, -0.1817840188741684, -0.001674322527833283, -0.05695905536413193, -0.11615527421236038, -0.010296794585883617, -0.0002903516869992018, -0.6143049001693726, -0.38865938782691956, -0.0005421360838226974, -0.0015148365637287498, -4.351044481154531e-05, -0.0032322565093636513, -0.001135776867158711, -9.643566590966657e-05, -4.124556289752945e-05, -0.00033122775494121015, -0.00016330339713022113, -0.00015722469834145159, -0.4440656304359436, -0.07226548343896866, -0.00027164106722921133, -0.8214567303657532, -1.5547348260879517, -2.4326374530792236, -0.33418452739715576, -1.3351351299206726e-05, -0.008244173601269722, -1.8103740215301514, -3.099393507000059e-05, -0.6710336804389954, -0.03873604163527489, -0.0006221981020644307, -0.0010567086283117533, -0.006467245984822512, -0.0008376903715543449, -0.014126778580248356, -0.9672011137008667, -0.0001528146385680884, -0.06139814481139183, -0.007923362776637077, -0.0012253165477886796, -0.0440654382109642, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.0011436357162892818, -0.0002090712368953973, -0.0042586117051541805, -0.13487881422042847, -5.817244164063595e-05, -0.0013044904917478561, -0.0007818264421075583, -0.16860118508338928, -0.0012711548479273915, -0.0009396428358741105, -1.2874520507466514e-05, -0.0011083895806223154, -1.4424220353248529e-05, -2.407998726994265e-05, -3.3854863431770355e-05, -0.009823786094784737, -7.152555099310121e-07, -1.0847986231965479e-05], "finish_reason": "length"}], "metrics": {"energy": 924.9806168594367, "energy_per_token": 3.6132055346071748, "time": 22.066545, "time_per_token": 0.08619744140625}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory '{data_dir}' not found.\")\n\n    csv_files = glob.glob(f'{data_dir}/*.csv')\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'.\")\n\n    table = Texttable()\n    table.add_rows([['File', 'Rows', 'Columns']] +\n                   [[file_name, pd.read_csv(file_name).shape[0], pd.read_csv(file_name).shape[1]]\n                    for file_name in sorted(csv_files)])\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "data", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "f", "'{", "data", "_", "dir", "}", "/*", ".", "csv", "')", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "add", "_", "rows", "([", "['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", "]", " +", "\n", "                ", "   ", "[[", "file", "_", "name", ",", " pd", ".", "read", "_", "csv", "(", "file", "_", "name", ")", ".", "shape", "[", "0", "]", ",", " pd", ".", "read", "_", "csv", "(", "file", "_", "name", ")", ".", "shape", "[", "1", "]]", "\n", "                ", "    ", "for", " file", "_", "name", " in", " sorted", "(", "csv", "_", "files", ")]", ")", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "if"], "logprobs": [-0.4308117628097534, -0.04038836061954498, -0.003631902625784278, -3.2186455882765586e-06, -0.0012153151910752058, -1.1444026313256472e-05, -0.2165222465991974, -0.0005615564878098667, -0.0009916870621964335, -1.311301275563892e-06, -5.8412379075889476e-06, -0.00745798647403717, -0.013524572364985943, -0.005882451310753822, -0.013564557768404484, -0.0026200036518275738, -9.548207890475169e-05, -8.22540732769994e-06, -0.04962945356965065, -0.20825697481632233, -0.05548538267612457, -0.5989212989807129, -0.7675741910934448, -0.00026592056383378804, -0.0008612737292423844, -3.576272320060525e-06, -2.0265558760002023e-06, -0.001942058908753097, -1.115782380104065, -0.0002696150622796267, -0.2741978168487549, -0.026908008381724358, -0.00012468514614738524, -0.0007458527106791735, -0.23188060522079468, -0.0002294515579706058, -0.5290319323539734, -0.0008076743106357753, -0.035203978419303894, -0.002278947737067938, -0.6675761938095093, -1.6927575416048057e-05, -0.0013528252020478249, -0.0008095800876617432, -3.053783416748047, -1.5943183898925781, -0.0023913378827273846, -1.7881377516459906e-06, -1.7881377516459906e-06, -0.026934349909424782, -0.2814512848854065, -0.0019177870126441121, -0.000608854868914932, -0.01748434081673622, -0.012182824313640594, -0.27672240138053894, -0.07570992410182953, -0.06650827825069427, -0.0005187834613025188, 0.0, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0003438596613705158, -0.0009856133256107569, -0.00045694399159401655, -0.000947503256611526, -0.0011545903980731964, -1.1920928244535389e-07, -0.005681556649506092, -0.025454657152295113, -0.0022073446307331324, -0.00731669832020998, -0.007754106540232897, -2.6940935640595853e-05, -0.00039843725971877575, -0.005238852929323912, -0.0004430027911439538, -0.2788276672363281, -0.0322558619081974, -4.1126360883936286e-05, -0.0003583981015253812, -3.3378546504536644e-06, -4.529942543740617e-06, -0.004597569350153208, -0.06878442317247391, -0.0005839549703523517, -6.305972783593461e-05, -5.721882189391181e-05, -0.03422296792268753, -0.00022766382608097047, -1.0822802782058716, -0.01649235002696514, -0.00382869690656662, -8.344646857949556e-07, -0.027551498264074326, -0.007105438504368067, -0.01066933199763298, -0.030744608491659164, -0.002204370917752385, -2.282618522644043, -1.0728830375228426e-06, -0.1326051652431488, -0.07484596967697144, -0.12875723838806152, -0.0022165034897625446, -0.0017893984913825989, -0.0002060916303889826, -0.01384018175303936, -0.00046659549116156995, -8.153582894010469e-05, -0.0001811817055568099, -0.0013898485340178013, -8.749579137656838e-05, -0.0009970461251214147, -0.8451961874961853, -0.08413519710302353, -0.42250409722328186, -0.013843238353729248, -0.047118544578552246, -0.873378336429596, -1.3100943565368652, -2.0712921619415283, -0.21493928134441376, -0.04730252921581268, -0.8776856064796448, -0.0005739472107961774, -0.041747696697711945, -1.9073468138230965e-06, -0.00011157367407577112, -0.0002833203470800072, -0.020577285438776016, -0.050989892333745956, -0.013347674161195755, -0.03938159719109535, -0.002405846491456032, -0.001447583083063364, -0.0011687598889693618, -0.003977959044277668, -0.0006984416977502406, -0.004688935354351997, -0.09100518375635147, -3.099393507000059e-05, -0.0001538873475510627, -2.3841855067985307e-07, -9.775113539944869e-06, -4.9470632802695036e-05, -0.0007247682078741491, -1.597391747054644e-05, -4.291525328881107e-06, -0.00045277358731254935, -9.881961887003854e-05, -0.0002766464895103127, -0.0002899941464420408, -0.0006225554971024394, -0.011005179956555367, -0.7775883674621582, -0.0008753282018005848, -0.020464586094021797, -0.0011338717304170132, -0.001851393491961062, -0.00012957210128661245, -3.325883881188929e-05, -0.003905290039256215, -0.055193815380334854, -0.0009243983076885343, -0.01912873238325119, -1.5497195136049413e-06, -3.814689989667386e-06, -0.07496022433042526, -0.21363556385040283, -0.0029478687793016434, -0.6287270784378052, -0.3037802577018738, -0.06965374201536179, -0.0014249657979235053, -0.0013161577517166734, -0.00012039413559250534, -0.23923031985759735, -0.004594246856868267, -1.9263719320297241], "finish_reason": "stop"}], "metrics": {"energy": 676.5217303733822, "energy_per_token": 3.758454057629901, "time": 15.566658, "time_per_token": 0.08648143333333333}}
