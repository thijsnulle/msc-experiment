{"outputs": [{"text": "files = glob.glob(os.path.join(data_dir, '**', '*.csv'), recursive=True)\n    if not files:\n        raise ValueError(\"No CSV files found in the specified directory.\")\n    return pd.concat([pd.read_csv(f, skiprows=1, index_col=0) for f in files]).to_string(\n        index=False, header=False, colalign=('left', 'center', 'right'), numalign='right',\n        colwidth=max([len(f.split(os.sep)[-1]) for f in files]) + 4)", "tokens": ["files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "**", "'", ",", " '", "*", ".", "csv", "')", ",", " recursive", "=", "True", ")", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "    ", "return", " pd", ".", "concat", "([", "pd", ".", "read", "_", "csv", "(", "f", ",", " ski", "pro", "ws", "=", "1", ",", " index", "_", "col", "=", "0", ")", " for", " f", " in", " files", "])", ".", "to", "_", "string", "(", "\n", "        ", "index", "=", "False", ",", " header", "=", "False", ",", " col", "align", "=", "('", "left", "'", ",", " '", "center", "'", ",", " '", "right", "')", ",", " num", "align", "='", "right", "'", ",", "\n", "        ", "col", "width", "=", "max", "([", "len", "(", "f", ".", "split", "(", "os", ".", "sep", ")", "[-", "1", "])", " for", " f", " in", " files", "])", " +", " ", "4", ")", "\n", "\n", "def"], "logprobs": [-2.47737979888916, -0.13609850406646729, -0.3353041410446167, -0.000568228424526751, -0.00826746504753828, -0.03970610722899437, -0.447221040725708, -3.6954811548639555e-06, -0.00044431351125240326, -0.002303448738530278, -0.0031230507884174585, -0.0017685738857835531, -0.010041199624538422, -3.218599158572033e-05, -2.407998726994265e-05, -0.005783727392554283, -0.29748299717903137, -2.745967149734497, -1.0390920639038086, -0.013354144059121609, -0.0267487820237875, -0.013816079124808311, -0.020787237212061882, -0.005957465618848801, -1.0439451932907104, -0.001392824575304985, -0.013797267340123653, -0.008672785945236683, -0.006319776643067598, -0.0010338444262742996, -0.010514223016798496, -0.2713337242603302, -0.5865951180458069, -0.6275924444198608, -0.04374564811587334, -0.011582509614527225, -0.020877251401543617, -0.0012413900112733245, -0.040796320885419846, -0.197530597448349, -8.821448318485636e-06, -0.8116906881332397, -0.3727623522281647, -0.22768919169902802, -0.13076291978359222, -0.0018305702833458781, -0.0066756801679730415, -0.09207364171743393, -0.1494266837835312, -0.41277116537094116, -0.1320321410894394, -0.01435700710862875, -0.1970445066690445, -0.012192481197416782, -0.00021741411183029413, -0.005407705903053284, -0.9179404973983765, -4.549939155578613, -2.933835029602051, -0.007931404747068882, -0.6760822534561157, -0.06684540212154388, -0.12147889286279678, -0.0003262225945945829, -0.006769106257706881, -7.533743337262422e-05, -0.0005315321614034474, -0.0019384894985705614, -0.931018590927124, -0.8236457705497742, -4.044436454772949, -0.00013755806139670312, -0.016830820590257645, -0.026038341224193573, -0.9484902620315552, -0.6353479623794556, -1.2766847610473633, -5.781483559985645e-05, -0.0017265664646402001, -0.034316275268793106, -0.7247189283370972, -0.2796434760093689, -0.15890100598335266, -0.0006171943969093263, -0.0006462631281465292, -0.01923573575913906, -1.1077203750610352, -0.3164076507091522, -1.8302128314971924, -3.814624506048858e-05, -0.30339324474334717, -0.2987176477909088, -2.717615842819214, -0.06269744038581848, -0.10532698035240173, -0.038751065731048584, -0.23034782707691193, -0.10674984008073807, -0.5385938882827759, -0.10123950988054276, -0.09183855354785919, -0.2594946026802063, -1.784639835357666, -0.7504783272743225, -0.6913081407546997, -0.19428236782550812, -0.5294194221496582, -0.0065798768773674965, -0.00040463366894982755, -0.059762801975011826, -2.072208881378174, -0.08456677943468094, -0.00021550717065110803, -0.0053854151628911495, -0.08191551268100739, -0.37261176109313965, -0.10581879317760468, -1.6810479164123535, -0.03186506778001785, -0.1935802847146988, -0.14896655082702637, -0.6702932119369507, -0.022855661809444427, -0.5205869674682617, -0.02966640517115593, -3.0316171646118164, -0.07223143428564072, -1.5570480823516846, -1.6766321659088135, -0.8382589817047119, -0.09825056046247482, -0.025170590728521347, -1.278425931930542, -0.7744537591934204, -0.18647900223731995, -1.4273508787155151, -0.5586274266242981, -7.045020902296528e-05, -0.3238740861415863, -0.02355043590068817, -0.0032431883737444878, -0.04780905693769455, -0.6064891219139099, -0.1538269966840744, -0.00032181330607272685, -0.0001823735801735893, -0.008806202560663223, -0.34670624136924744, -0.784136176109314, -0.13537338376045227, -1.7169708013534546, -0.7940946817398071, -0.1438908874988556, -0.022048698738217354, -0.07924552261829376], "finish_reason": "stop"}], "metrics": {"energy": 179.285934217453, "energy_per_token": 1.1566834465642128, "time": 6.7239594, "time_per_token": 0.04338038322580645}}
{"outputs": [{"text": "# Check if data_dir exists\n    if not os.path.exists(data_dir):\n        raise FileNotFoundError('Directory not found.')\n\n    # Create an empty list to store the file paths\n    file_paths = []\n\n    # Iterate through the files in the specified directory\n    for file in glob.glob(f'{data_dir}*.csv'):\n        # If it's an actual file, append it to the list\n        if os.path.isfile(file):\n            file_paths.append(file)\n\n    # If there are no files, raise a ValueError\n    if not file_paths:\n        raise ValueError('No files found.')\n\n    # Initialize the table object\n    table = Texttable()\n\n    # Iterate through the files\n    for file_path in file_paths:\n        # If it's not an empty file, process it\n        if os.stat(file_path).st_size != 0:\n            # Read the contents of the file\n            with open(file_path, 'r') as f:\n                try:\n", "tokens": ["#", " Check", " if", " data", "_", "dir", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Directory", " not", " found", ".", "')", "\n", "\n", "    ", "#", " Create", " an", " empty", " list", " to", " store", " the", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " specified", " directory", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "'{", "data", "_", "dir", "}", "*", ".", "csv", "')", ":", "\n", "        ", "#", " If", " it", "'", "s", " an", " actual", " file", ",", " append", " it", " to", " the", " list", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", ")", "\n", "\n", "    ", "#", " If", " there", " are", " no", " files", ",", " raise", " a", " Value", "Error", "\n", "    ", "if", " not", " file", "_", "paths", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " files", " found", ".", "')", "\n", "\n", "    ", "#", " Initialize", " the", " table", " object", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "#", " If", " it", "'", "s", " not", " an", " empty", " file", ",", " process", " it", "\n", "        ", "if", " os", ".", "stat", "(", "file", "_", "path", ")", ".", "st", "_", "size", " ", "!", "=", " ", "0", ":", "\n", "            ", "#", " Read", " the", " contents", " of", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "try", ":", "\n"], "logprobs": [-1.7954072952270508, -1.7338662147521973, -0.28163281083106995, -1.320792317390442, -0.18612270057201385, -0.0029133993666619062, -0.30809512734413147, -0.28156983852386475, -0.0015255491016432643, -0.10174700617790222, -0.0603279285132885, -0.0036707420367747545, -7.629365427419543e-06, -0.00022897482267580926, -0.003100709058344364, -0.20822018384933472, -0.0004832768754567951, -0.002644139574840665, -1.4305104514278355e-06, -3.6954811548639555e-06, -0.004964050371199846, -0.003943762741982937, -0.0007234578370116651, -0.03725511580705643, -0.00775647209957242, -4.1126360883936286e-05, -3.242440288886428e-05, -2.005906105041504, -1.4275176525115967, -0.6558055281639099, -0.006765080615878105, -1.4877103567123413, -0.15223048627376556, -0.0009673921740613878, -0.2545161247253418, -0.001604580320417881, -0.15711303055286407, -1.9181363582611084, -2.0548365116119385, -0.11696678400039673, -1.1400983333587646, -0.17277780175209045, -0.1312812715768814, -1.3476499319076538, -1.4075273275375366, -1.0871859788894653, -0.19577240943908691, -0.0005776405450887978, -0.4066041111946106, -0.024024678394198418, -0.12256928533315659, -0.009953980334103107, -0.016172414645552635, -0.0002668739762157202, -0.032108452171087265, -0.00045110538485459983, -0.02289201319217682, -1.1616344451904297, -0.0018731682794168591, -0.4601587951183319, -1.5820536613464355, -0.47401154041290283, -0.05720958113670349, -0.2503529191017151, -1.340032696723938, -0.07926886528730392, -0.1626574695110321, -0.00043108707177452743, -0.016220975667238235, -0.7482096552848816, -0.7982043027877808, -0.3955990672111511, -1.07287787614041e-05, -0.04590814560651779, -0.014639578759670258, -2.3505852222442627, -0.49417659640312195, -0.018971888348460197, -2.682172998902388e-05, -1.7165990357170813e-05, -0.03739223629236221, -0.4254475235939026, -0.1694469153881073, -0.01246871892362833, -0.04100538790225983, -0.0002946419408544898, -0.0078191626816988, -0.02968630939722061, -0.5652065277099609, -2.254711866378784, -3.1687185764312744, -0.9089274406433105, -0.00039641151670366526, -2.8250889778137207, -2.2642874717712402, -0.39440232515335083, -0.6226516366004944, -1.332515001296997, -0.6782673597335815, -0.017797064036130905, -0.15249407291412354, -0.31662195920944214, -0.09501072764396667, -0.000528076896443963, -0.14035499095916748, -0.03333462402224541, -1.585470999998506e-05, -0.00029952809563837945, -0.0012938946019858122, -0.01666036807000637, -1.2636104656849056e-05, -0.00016497205069754273, -0.0010251511121168733, -0.011525239795446396, -0.0015963680343702435, -0.0006815256201662123, -0.010570135898888111, -0.0004295380203984678, -0.0012527006911113858, -0.0011622109450399876, -0.000259723310591653, -0.0010904086520895362, -0.019901009276509285, -0.0022313715890049934, -0.0006417360855266452, -0.18787135183811188, -0.034583818167448044, -0.09987005591392517, -0.732987642288208, -0.5905776023864746, -0.02806001342833042, -0.01421763002872467, -0.4043210744857788, -0.5091661214828491, -0.03895070031285286, -1.0478363037109375, -0.02939441427588463, -0.0049789962358772755, -0.04408848285675049, -0.0002648479712661356, -0.001642665360122919, -0.2737728953361511, -0.00485633872449398, -1.1324817933200393e-05, -1.2040065485052764e-05, -0.0004320403386373073, -0.0008866431307978928, -0.00042060110718011856, -0.0034490879625082016, -0.005549856927245855, -2.0265558760002023e-06, -0.04493746906518936, -0.10927556455135345, -1.1627287864685059, -0.0527450330555439, -0.5009244680404663, -0.010087225586175919, -0.0002563863235991448, -0.010980773717164993, -0.0012836558744311333, -0.09784765541553497, -1.7536219358444214, -1.33669114112854, -0.6303769946098328, -2.6613361835479736, -0.6289975643157959, -0.00035291642416268587, -0.16500237584114075, -0.012704155407845974, -0.007019265089184046, -0.00010322991875000298, -0.24924056231975555, -0.0010969580616801977, -0.13651229441165924, -0.0002516191452741623, -0.08983632922172546, -1.060265064239502, -0.0022419574670493603, -0.14005057513713837, -0.2640581429004669, -1.2990765571594238, -0.9332791566848755, -0.0005957497633062303, -0.031714022159576416, -0.11415781080722809, -1.2537660598754883, -0.08832239359617233, -0.0005128260818310082, -0.014170031063258648, -2.861018856492592e-06, -4.291525328881107e-06, -0.00031287543242797256, -0.0005850272136740386, -0.0323343463242054, -0.28087344765663147, -3.662238597869873, -1.1824116706848145, -0.1820782870054245, -0.010596911422908306, -2.205213785171509, -0.7221100926399231, -1.098304271697998, -0.5770158767700195, -0.10621914267539978, -3.0724589824676514, -0.08235716074705124, -0.27629294991493225, -0.004081848077476025, -1.1251764297485352, -0.4899826943874359, -0.002241243841126561, -1.0274771451950073, -0.0032819239422678947, -0.0011506610317155719, -0.005532074254006147, -0.00019047829846385866, -0.02297496609389782, -0.002056390279904008, -5.721882189391181e-05, -0.00023707917716819793, -0.0012393658980727196, -1.2785868644714355, -9.536738616588991e-07, -2.9802276912960224e-06, -0.0018818541429936886, -0.0021408514585345984, -0.00168503331951797, -0.013861344195902348, -0.026103263720870018, -0.639634370803833, -0.8168025016784668, -0.13113103806972504, -2.0910611152648926, -0.1412968784570694, -0.008331069722771645, -0.11414047330617905, -0.7876284122467041, -0.0006302992696873844, -0.9575299024581909, -0.007252674084156752, -0.00014935807848814875, -0.0006591292913071811, -0.000982159748673439, -1.1205610462639015e-05, -0.15553992986679077, -0.06725742667913437, -0.016159512102603912, -0.04892442002892494, -0.0009435730753466487, -0.5747430324554443, -0.017145974561572075, -0.0011194637045264244, -0.0013066334649920464, -2.1277809143066406, -3.611976353568025e-05, -0.0025148927234113216], "finish_reason": "length"}], "metrics": {"energy": 291.3164970169067, "energy_per_token": 1.1379550664722917, "time": 11.34305, "time_per_token": 0.0443087890625}}
{"outputs": [{"text": "try:\n        files = glob.glob(os.path.join(data_dir, '*.csv'))\n        if len(files) == 0:\n            raise ValueError('No CSV files found in the specified directory')\n    except FileNotFoundError:\n        raise FileNotFoundError(\n            'The specified directory does not exist') from None\n\n    table = Texttable(max_width=0, padding=0)\n    table.add_rows([['File', 'Rows', 'Columns']] + [(os.path.basename(file), None, None) for file in files])\n    for file in files:\n        try:\n            df = pd.read_csv(file)\n        except pd.errors.EmptyDataError:\n            table.set_val(file, None, None)\n        else:\n            table.set_val(file, df.shape[0], df.shape[1])\n    return table.draw()", "tokens": ["try", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "        ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "            ", "raise", " Value", "Error", "('", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\n", "            ", "'", "The", " specified", " directory", " does", " not", " exist", "')", " from", " None", "\n", "\n", "    ", "table", " =", " Text", "table", "(", "max", "_", "width", "=", "0", ",", " padding", "=", "0", ")", "\n", "    ", "table", ".", "add", "_", "rows", "([", "['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", "]", " +", " [(", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " None", ",", " None", ")", " for", " file", " in", " files", "])", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "table", ".", "set", "_", "val", "(", "file", ",", " None", ",", " None", ")", "\n", "        ", "else", ":", "\n", "            ", "table", ".", "set", "_", "val", "(", "file", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "])", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -1.4297178983688354, -0.1208362728357315, -0.3141998052597046, -0.00021407696476671845, -0.00900954194366932, -0.023311715573072433, -0.4591057598590851, -4.6491513785440475e-06, -0.0006395916570909321, -0.0014033003244549036, -0.0035059908404946327, -0.0019030333496630192, -0.014524562284350395, -1.2040065485052764e-05, -3.45700973412022e-05, -0.005954266060143709, -0.2881607711315155, -0.08510766178369522, -0.07649870961904526, -0.007029918488115072, -0.012863396666944027, -0.013202980160713196, -1.0158946514129639, -0.7224954962730408, -0.7805772423744202, -0.0002348147245356813, -0.0021422787103801966, -0.005406638607382774, -0.15695184469223022, -0.0002579356369096786, -0.0005540504935197532, -0.004381580278277397, -0.030243588611483574, -0.0009550062823109329, -0.04153146594762802, -0.07912173122167587, -1.7523612768854946e-05, -0.8303437232971191, -0.2802194356918335, -0.1288357377052307, -0.0022839431185275316, -0.010592310689389706, -0.10396397858858109, -0.23317304253578186, -0.42198219895362854, -0.11731605231761932, -0.011976477690041065, -1.5918335914611816, -0.003321014577522874, -0.4515681564807892, -0.0015163839561864734, -0.11786356568336487, -2.8490614567999728e-05, -1.7881377516459906e-06, -0.14685268700122833, -0.009646822698414326, -0.0006277974462136626, -0.1125117689371109, -0.0777565985918045, -6.878139538457617e-05, -0.00011955977242905647, -0.8700059056282043, -2.7265048027038574, -0.004851711913943291, -0.7672556638717651, -0.4884374737739563, -0.04028737545013428, -0.025672880932688713, -0.04068702086806297, -0.00030322244856506586, -0.0009741804678924382, -0.37743714451789856, -2.1590566635131836, -0.006330082193017006, -0.009495806880295277, -0.4409986436367035, -0.0005017452058382332, -1.4524002075195312, -0.02064559981226921, -0.032058462500572205, -0.00022492263815365732, -2.031822681427002, -0.6829872131347656, -0.019323084503412247, -0.14296744763851166, -0.06883027404546738, -1.0730490684509277, -1.7816590070724487, -2.1253104209899902, -0.1157175749540329, -0.8102689981460571, -0.2840259373188019, -0.040498606860637665, -0.13054941594600677, -0.4498257637023926, -0.007908224128186703, -1.420790672302246, -0.0020410437136888504, -0.40015751123428345, -0.3808564245700836, -0.34835749864578247, -0.04727967455983162, -0.051860205829143524, -0.0028426735661923885, -0.01718616858124733, -0.03310733661055565, -0.004261223133653402, -5.864924969500862e-05, -0.0020642417948693037, -0.0144223403185606, -0.009442904032766819, -0.9152716994285583, -0.19638490676879883, -3.421783924102783, -1.8282954692840576, -7.724463648628443e-05, -0.0007445423980243504, -0.0006784282741136849, -0.16479645669460297, -9.536738616588991e-07, -0.0020663831382989883, -1.273646354675293, -0.1946311742067337, -0.05293499678373337, -3.43186092376709, -0.0017243054462596774, -0.015084833838045597, -0.012096498161554337, -0.2647842764854431, -0.0032100360840559006, -0.0014357983600348234, -0.0641983225941658, -0.035870447754859924, -0.012351215817034245, -0.288033127784729, -2.019822597503662, -0.3572242259979248, -0.14576765894889832, -0.02376674860715866, -0.002372309798374772, -0.0020049961749464273, -0.004472135100513697, -0.444129079580307, -3.135155202471651e-05, -0.001611483283340931, -0.0005557184922508895, -0.6684808731079102, -0.007784388028085232, -0.013037674129009247, -2.9444261599564925e-05, -0.003153829136863351, -5.769562994828448e-05, -0.000589792791288346, -0.00013541258522309363, -0.015692908316850662, -0.49388158321380615, -0.008074498735368252, -0.996910810470581, -0.0010084786918014288, -0.17933043837547302, -1.168244216387393e-05, -0.0002244459028588608, -0.00024291902082040906, -0.00043466180795803666, -0.0022272085770964622, -5.590759246842936e-05, -0.053057435899972916, -0.0223239753395319, -0.0010477773612365127, -1.3247957229614258, -0.0011478032683953643, -2.6249353885650635, -0.0001512651506345719, -1.0693649053573608, -0.07588706910610199, -0.9899791479110718, -0.27171534299850464, -1.7377991676330566, -0.03173607960343361, -0.21343585848808289, -0.12654787302017212, -0.03953550010919571, -0.2909664213657379, -0.10066879540681839, -2.3007127310847864e-05, -0.0002992897352669388, -0.0006342306733131409, -0.3224954605102539, -0.00013410145766101778, -0.013837830163538456, -7.164221460698172e-05, -0.015990471467375755, -0.001825810642912984, -0.07213439047336578, -0.0006227937992662191, -0.9920888543128967, -0.0011039836099371314, -0.06127896532416344, -0.018822157755494118, -0.0009184433147311211, -0.0020302177872508764, -0.0032850131392478943, -0.017082812264561653, -2.3603161025675945e-05, -0.0018378286622464657, -0.0015911312075331807, -0.00033742457162588835, -0.011767496354877949, -0.0011956692906096578, -0.39706429839134216, -0.07569114118814468, -0.1738380491733551, -0.009885993786156178, -0.013388137333095074, -0.17174695432186127, -0.393239825963974, -0.009554019197821617, -0.1541871279478073], "finish_reason": "stop"}], "metrics": {"energy": 253.1196430511475, "energy_per_token": 1.1401785723024662, "time": 9.880035, "time_per_token": 0.04450466216216216}}
{"outputs": [{"text": "text_table = Texttable()\n\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n\n    if csv_files:\n        header = [\"File\", \"Rows\", \"Columns\"]\n        data = []\n        for file in csv_files:\n            try:\n                df = pd.read_csv(file)\n                rows, columns = df.shape\n                data.append([file, rows, columns])\n            except (FileNotFoundError, ValueError, pd.errors.EmptyDataError) as e:\n                print(e)\n    else:\n        raise FileNotFoundError(\"The specified directory does not exist or no CSV files are found.\")\n\n    text_table.add_rows(data)\n    return text_table.draw_grid(padding=1, border_color='')", "tokens": ["text", "_", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "\n", "    ", "if", " c", "sv", "_", "files", ":", "\n", "        ", "header", " =", " [", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "]", "\n", "        ", "data", " =", " []", "\n", "        ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "            ", "try", ":", "\n", "                ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "                ", "rows", ",", " columns", " =", " df", ".", "shape", "\n", "                ", "data", ".", "append", "([", "file", ",", " rows", ",", " columns", "])", "\n", "            ", "except", " (", "File", "NotFound", "Error", ",", " Value", "Error", ",", " pd", ".", "errors", ".", "Empty", "Data", "Error", ")", " as", " e", ":", "\n", "                ", "print", "(", "e", ")", "\n", "    ", "else", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " no", " CS", "V", " files", " are", " found", ".", "\"", ")", "\n", "\n", "    ", "text", "_", "table", ".", "add", "_", "rows", "(", "data", ")", "\n", "    ", "return", " text", "_", "table", ".", "draw", "_", "grid", "(", "padding", "=", "1", ",", " border", "_", "color", "='", "')", "\n", "\n", "def"], "logprobs": [-4.718804359436035, -1.1538453102111816, -0.11923210322856903, -0.03141867741942406, -0.036113202571868896, -0.00037102968781255186, -0.20082546770572662, -0.029065612703561783, -1.8410251140594482, -0.0004012971476186067, -2.131751775741577, -0.006310181226581335, -0.08922112733125687, -0.036007873713970184, -0.4872114658355713, -0.0007166677969507873, -0.01166452094912529, -0.032284948974847794, -0.3572850227355957, -2.861018856492592e-06, -0.000445385929197073, -0.001754293916746974, -0.0024730355944484472, -0.0019425348145887256, -0.013110506348311901, -4.184158387943171e-05, -1.764281842042692e-05, -0.005057754926383495, -1.5275053977966309, -0.059474390000104904, -0.01641601137816906, -0.005303835961967707, -0.009588024578988552, -0.005297195632010698, -0.016941118985414505, -0.881913423538208, -0.00010680581908673048, -0.19187839329242706, -2.459750175476074, -1.4781842764932662e-05, -2.3841830625315197e-06, -1.1086402082582936e-05, -0.2165122628211975, -0.02303088642656803, -0.01654241792857647, -3.418276786804199, -0.2662573456764221, -0.45882001519203186, -0.0425121933221817, -0.03528372943401337, -0.051056500524282455, -0.0017598869744688272, -0.015174190513789654, -0.02208181470632553, -0.0011046981671825051, -0.0003381395654287189, -0.001262939884327352, -0.01062038354575634, -0.0005284343496896327, -0.005301701836287975, -0.0059228623285889626, -0.0791526809334755, -1.7105183601379395, -0.1028214767575264, -0.15565656125545502, -0.0026814716402441263, -0.7186741232872009, -0.14102599024772644, -0.4341764748096466, -0.621786892414093, -0.06735049188137054, -3.957670196541585e-05, -1.4305104514278355e-06, -6.318072337307967e-06, -0.0010253892978653312, -0.0022087718825787306, -0.008172641508281231, -0.2597391903400421, -8.010543388081715e-05, -0.0032749136444181204, -0.0009790633339434862, -0.457030713558197, -0.012416091747581959, -0.009110664948821068, -1.3112935448589269e-05, -0.0034147545229643583, -2.753696753643453e-05, -0.0004020121123176068, -6.222531374078244e-05, -0.01124779786914587, -0.49504485726356506, -0.005943363532423973, -0.175016850233078, -1.5120774507522583, -1.0760512351989746, -0.2565235495567322, -0.0016020808834582567, -0.03156688064336777, -0.0001358893496217206, -0.002871796488761902, -0.012094142846763134, -0.06743183732032776, -0.20205189287662506, -0.03514539822936058, -0.0026129886973649263, -0.03758846968412399, -0.42079290747642517, -0.07745567709207535, -0.03980062156915665, -0.00040284625720232725, -0.0011542332358658314, -0.0010274137603119016, -0.000998951611109078, -0.10042375326156616, -0.0032314248383045197, -2.9053590297698975, -1.3440449237823486, -8.737658936297521e-05, -1.5020257706055418e-05, -0.0075366683304309845, -0.39178478717803955, -2.288792165927589e-05, -0.2445412576198578, -0.6140496730804443, -0.0001380348257953301, -0.00012361239350866526, -9.63164638960734e-05, -0.00037091050762683153, -0.0006940339808352292, -7.510157047363464e-06, -1.1651182174682617, -0.0008015995263122022, -0.25829264521598816, -0.00011991735664196312, -0.00716095045208931, -0.0010284854797646403, -0.30772730708122253, -0.00731385825201869, -1.3626796007156372, -0.0397222600877285, -0.007825195789337158, -2.2859084606170654, -0.023484647274017334, -6.425174069590867e-05, -0.005706685595214367, -0.0011712603736668825, -0.9941790699958801, -0.9071477651596069, -0.00016032364510465413, -6.460934673668817e-05, -0.18393756449222565, -0.37525495886802673, -2.8619580268859863, -0.3302668035030365, -0.04127195104956627, -0.06130374222993851, -0.0005896736984141171, -0.017271235585212708, -2.2345807552337646, -3.784794807434082, -0.15747594833374023, -0.0016331442166119814, -0.027429142966866493, -0.8473250269889832, -0.5678378343582153, -0.42116793990135193, -0.022107934579253197, -0.0013187768636271358, -0.0045502218417823315, -0.07780170440673828, -0.0023074925411492586, -0.12745919823646545, -0.001115891383960843, -8.67805938469246e-05, -0.0013169910525903106, -0.10921058803796768, -0.001921713468618691, -0.013186509720981121, -0.012554424814879894, -0.035531457513570786, -0.8293379545211792, -0.002796788467094302, -0.23540131747722626, -1.2533323764801025, -0.10880191624164581, -1.6093124941107817e-05, -4.303362584323622e-05, -0.005230552051216364, -0.019362488761544228, -2.6715245246887207, -2.889498710632324, -0.8869142532348633, -2.9487600326538086, -0.1343204230070114, -0.18597978353500366, -1.1515640020370483, -1.1543686389923096, -1.275321364402771, -1.189549446105957, -0.8955923914909363, -1.432074785232544, -0.3607037365436554, -0.011240961961448193, -0.12621769309043884], "finish_reason": "stop"}], "metrics": {"energy": 223.24273088645924, "energy_per_token": 1.0943271121885256, "time": 9.041479, "time_per_token": 0.044320975490196084}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(data_dir)\n    if not os.path.isdir(data_dir):\n        raise FileNotFoundError(data_dir)\n\n    files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not files:\n        raise ValueError('No CSV files found in ' + data_dir)\n    data_list = []\n    for f in files:\n        try:\n            df = pd.read_csv(f, index_col=0)\n            data_list.append([f, df.shape[0], df.shape[1]])\n        except pandas.errors.EmptyDataError:\n            continue\n\n    result = Texttable()\n    result.add_rows(data_list, header=['File', 'Rows', 'Columns'])\n    result_str = str(result)\n    return result_str", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "data", "_", "dir", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "data", "_", "dir", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " CS", "V", " files", " found", " in", " '", " +", " data", "_", "dir", ")", "\n", "    ", "data", "_", "list", " =", " []", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "f", ",", " index", "_", "col", "=", "0", ")", "\n", "            ", "data", "_", "list", ".", "append", "([", "f", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "continue", "\n", "\n", "    ", "result", " =", " Text", "table", "()", "\n", "    ", "result", ".", "add", "_", "rows", "(", "data", "_", "list", ",", " header", "=['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "result", "_", "str", " =", " str", "(", "result", ")", "\n", "    ", "return", " result", "_", "str", "\n", "\n", "def"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -0.34346961975097656, -2.462655782699585, -0.00035255891270935535, -0.0007496645557694137, -0.514136552810669, -0.005875577684491873, -0.7387692332267761, -2.4805281162261963, -0.38165441155433655, -0.518237292766571, -0.0025914679281413555, -0.7449842095375061, -0.02752598561346531, -0.03417861461639404, -0.022074002772569656, -0.00039843725971877575, -0.005199007224291563, -2.658331868587993e-05, -9.417489309271332e-06, -0.008160935714840889, -0.005635564215481281, -0.0008864049450494349, -0.06183292716741562, -0.6245476007461548, -0.012475311756134033, -2.5510462364763953e-05, -0.07411986589431763, -0.11339755356311798, -0.000557267339900136, -0.0011755467858165503, -0.01641671545803547, -0.005487379152327776, -0.7811689376831055, -0.0003703146940097213, -1.5220797061920166, -0.14737634360790253, -0.28028959035873413, -0.00015901254664640874, -0.010616491548717022, -0.02465537190437317, -0.30021119117736816, -1.3708974620385561e-05, -0.0002203936892328784, -0.0002774807217065245, -0.0017249004449695349, -0.0011539950501173735, -0.014445957727730274, -9.083335316972807e-05, -5.722029527532868e-06, -0.004953849129378796, -0.3404950201511383, -0.08188124001026154, -0.06613422185182571, -0.010873000137507915, -0.0101409200578928, -0.00877181626856327, -0.23693381249904633, -0.21419960260391235, -0.6454193592071533, -0.03471428528428078, -0.00656921835616231, -0.00976275559514761, -0.0005962263094261289, -0.015432232990860939, -0.06636694818735123, -1.6093124941107817e-05, -0.5663210153579712, -0.23024488985538483, -0.1678127944469452, -0.004326626192778349, -0.012418210506439209, -0.1149948462843895, -0.24270828068256378, -1.9711906909942627, -0.0874401107430458, -0.048776835203170776, -0.00013731967192143202, -4.935142715112306e-05, -0.05598902329802513, -0.0011148196645081043, -1.8184353113174438, -3.3026371002197266, -1.3869643211364746, -2.4394168853759766, -0.019033530727028847, -0.26401612162590027, -0.010828189551830292, -0.24523143470287323, -0.167293980717659, -1.5893452167510986, -0.18444910645484924, -0.020019149407744408, -0.0009467886411584914, -0.0028968772385269403, -0.004964524880051613, -0.24138642847537994, -0.00012683063687290996, -0.003424139926210046, -0.0006656814948655665, -0.862565815448761, -0.012843272648751736, -0.013786332681775093, -2.3483953555114567e-05, -0.005122038535773754, -6.854299135738984e-05, -0.0003499372396618128, -0.00013624693383462727, -0.007148759439587593, -1.1034438610076904, -1.0377981662750244, -0.00025102324434556067, -0.0026409293059259653, -0.0370577834546566, -1.1757924556732178, -0.2639407515525818, -0.019083822146058083, -0.5606021285057068, -0.5558767318725586, -0.10019612312316895, -0.008552944287657738, -0.006525872740894556, -0.006605812348425388, -0.658852219581604, -0.17726288735866547, -0.050956130027770996, -0.9949007630348206, -0.00020954797219019383, -0.16430753469467163, -0.008332133293151855, -0.0016621834365651011, -0.0012010273057967424, -0.000776347063947469, -0.010394365526735783, -8.583032467868179e-06, -0.00264711189083755, -0.0003516055876389146, -0.0003307510633021593, -0.008091880939900875, -0.0005912224878557026, -0.004787055309861898, -0.02584935538470745, -0.003697465406730771, -3.031873941421509, -0.00017689094238448888, -0.0001902399235405028, -6.186770770000294e-05, -0.00018356545479036868, -0.0015213831793516874, -2.396077979938127e-05, -0.07638893276453018, -0.031040385365486145, -0.001790707348845899, -1.9763206243515015, -0.012226750142872334, -0.8027827739715576, -0.001883400953374803, -3.5807127952575684, -0.16169564425945282, -0.5963584780693054, -0.0002817710628733039, -0.12636888027191162, -0.03368104249238968, -0.010753422044217587, -0.10750070959329605, -0.0015149556566029787, -0.7752184271812439, -0.00160624657291919, -0.13240301609039307, -0.16662272810935974, -0.04538288339972496, -0.00018189683032687753, -7.688703772146255e-05, -2.099954843521118, -0.2795577645301819, -2.556074380874634, -0.03564603999257088, -0.08287981897592545, -0.0007225048611871898, -0.01393435150384903, -0.06399092078208923, -0.0011936451774090528, -6.198863957251888e-06, -0.0021585754584521055, -0.02684743143618107, -0.008749954402446747, -0.0017396567855030298, -0.24273398518562317, -2.2456767559051514, -0.9331920146942139, -0.4662092626094818, -0.0015307862777262926, -1.4718291759490967, -0.0012536532012745738, -0.0006323245470412076, -0.21427416801452637, -0.04264768213033676, -0.28981727361679077, -0.2626565098762512, -0.024928538128733635, -0.003389805555343628, -9.059865078597795e-06, -0.4590335786342621, -0.013438479043543339, -0.15086908638477325], "finish_reason": "stop"}], "metrics": {"energy": 239.13885308647144, "energy_per_token": 1.0772020409300516, "time": 9.857711, "time_per_token": 0.044404103603603605}}
{"outputs": [{"text": "try:\n        files = glob.glob(f'{data_dir}*.csv')\n    except FileNotFoundError:\n        raise FileNotFoundError('The directory specified does not exist.')\n    if len(files) == 0:\n        raise ValueError(f'There are no CSV files in the directory: {data_dir}')\n    table = Texttable()\n    headers = [\"File\", \"Rows\", \"Columns\"]\n    table.add_rows([headers])\n    for file in files:\n        df = pd.read_csv(file, encoding='utf-8')\n        table.add_row([file, df.shape[0], df.shape[1]])\n    return str(table.draw())", "tokens": ["try", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "data", "_", "dir", "}", "*", ".", "csv", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " directory", " specified", " does", " not", " exist", ".", "')", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "There", " are", " no", " CS", "V", " files", " in", " the", " directory", ":", " {", "data", "_", "dir", "}", "')", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "headers", " =", " [", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "]", "\n", "    ", "table", ".", "add", "_", "rows", "([", "headers", "])", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " encoding", "='", "utf", "-", "8", "')", "\n", "        ", "table", ".", "add", "_", "row", "([", "file", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "    ", "return", " str", "(", "table", ".", "draw", "())", "\n", "\n", "def"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -1.4297178983688354, -0.1208362728357315, -0.3141998052597046, -0.00021407696476671845, -0.00900954194366932, -0.023311715573072433, -1.870866060256958, -1.180559754371643, -0.03302118554711342, -6.580135959666222e-05, -8.010543388081715e-05, -0.0946228876709938, -0.8378676176071167, -0.12087937444448471, -0.009468529373407364, -0.03507714718580246, -0.026185834780335426, -0.7480572462081909, -0.0018502036109566689, -0.15404529869556427, -3.981510963058099e-05, -1.311301275563892e-06, -0.32131990790367126, -0.013988779857754707, -0.0007622911944054067, -0.5838993191719055, -0.02954222448170185, -0.00010513706365600228, -0.00014935807848814875, -1.4800833463668823, -1.3415132761001587, -1.772742748260498, -1.2511584758758545, -0.23675790429115295, -0.001940988120622933, -0.009017220698297024, -0.42909130454063416, -0.11506178975105286, -0.0759984478354454, -0.4877045154571533, -0.5668037533760071, -0.8636149764060974, -0.00024077377747744322, -0.0010995777556672692, -0.001474246964789927, -0.12480933964252472, -0.0002426806604489684, -0.00023147765023168176, -0.0018042728770524263, -0.016415424644947052, -0.0005758534534834325, -0.019992390647530556, -0.011565069667994976, -2.2053474822314456e-05, -2.858590841293335, -0.9864689111709595, -0.17152485251426697, -1.2528024911880493, -0.02909919247031212, -0.018702823668718338, -0.09460922330617905, -0.0017000283114612103, -0.003603158053010702, -0.09685028344392776, -0.19226354360580444, -0.6311992406845093, -1.449120044708252, -0.0320260226726532, -0.032961901277303696, -0.00020180096908006817, -0.0006107610533945262, -0.013814550824463367, -0.2038199007511139, -0.0015041239093989134, -0.5658941268920898, -1.4761459827423096, -0.032440755516290665, -0.04266013205051422, -0.00024244230007752776, -0.2632008194923401, -0.007587187457829714, -0.021660780534148216, -2.492882490158081, -0.015595969744026661, -2.6627590656280518, -0.33363375067710876, -0.033659256994724274, -0.07684075832366943, -0.001557924086228013, -0.06406628340482712, -0.031155366450548172, -0.001640999224036932, -0.00048268112004734576, -0.006034725345671177, -0.012457534670829773, -0.000869253883138299, -0.005843105260282755, -0.00581003911793232, -0.006036384031176567, -0.19947898387908936, -0.0012512720422819257, -0.39624401926994324, -0.0005036516231484711, -0.0791965126991272, -0.28054264187812805, -0.0319443941116333, -0.8435894250869751, -0.013335558585822582, -0.11073113232851028, -0.24983343482017517, -0.4383552670478821, -0.344778448343277, -0.05854322388768196, -0.0014607959892600775, -0.002955713542178273, -0.0018239067867398262, -2.7112960815429688, -0.015041856095194817, -0.029685035347938538, -9.011816291604191e-05, -0.006122997961938381, -0.00010144196130568162, -0.0005385617259889841, -0.00011407678539399058, -0.015122761018574238, -1.0914891958236694, -3.2642159461975098, -0.16655400395393372, -0.1966385692358017, -0.09138953685760498, -0.005788587033748627, -0.49325647950172424, -0.017246395349502563, -0.003763617714866996, -1.801161766052246, -0.027865147218108177, -0.0035397273022681475, -1.3351351299206726e-05, -0.5282253623008728, -0.036785271018743515, -0.5668850541114807, -0.09874942898750305, -0.8100196719169617, -0.00036971885128878057, -0.08848749846220016, -0.000757645582780242, -0.0005756151513196528, -0.0007217901293188334, -0.0010320581495761871, -0.013693795539438725, -1.1444026313256472e-05, -0.003836772171780467, -0.0004403813509270549, -0.00015400654228869826, -0.005401421803981066, -0.0007184546557255089, -0.003698059357702732, -0.07743295282125473, -0.14145967364311218, -1.268293023109436, -0.00023469554434996098, -0.000801837770268321, -0.8635579943656921, -0.009686019271612167, -0.020744385197758675, -0.2149961143732071, -0.01158816646784544, -0.10778512805700302], "finish_reason": "stop"}], "metrics": {"energy": 182.4734184198379, "energy_per_token": 1.060891967557197, "time": 7.5809093, "time_per_token": 0.044075054069767444}}
{"outputs": [{"text": "summary_table = Texttable()\n    summary_table.set_cols_align([\"l\", \"r\", \"r\"])\n    summary_table.set_cols_dtype([\"t\", \"i\", \"i\"])\n    summary_table.set_cols_width([15, 4, 4])\n    summary_table.add_row([\"File\", \"Rows\", \"Columns\"])\n    files = glob.glob(os.path.join(data_dir, \"**/*.csv\"), recursive=True)\n    if files:\n        for file in files:\n            try:\n                df = pd.read_csv(file)\n                if df.empty:\n                    raise ValueError\n            except ValueError:\n                summary_table.add_row([os.path.basename(file), 0, 0])\n            else:\n                summary_table.add_row([os.path.basename(file), df.shape[0], df.shape[1]])\n        return summary_table.draw()\n    else:\n        raise", "tokens": ["summary", "_", "table", " =", " Text", "table", "()", "\n", "    ", "summary", "_", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "summary", "_", "table", ".", "set", "_", "cols", "_", "d", "type", "([", "\"", "t", "\"", ",", " \"", "i", "\"", ",", " \"", "i", "\"", "])", "\n", "    ", "summary", "_", "table", ".", "set", "_", "cols", "_", "width", "([", "1", "5", ",", " ", "4", ",", " ", "4", "])", "\n", "    ", "summary", "_", "table", ".", "add", "_", "row", "([", "\"", "File", "\"", ",", " \"", "Rows", "\"", ",", " \"", "Columns", "\"", "])", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "**", "/*", ".", "csv", "\"", ")", ",", " recursive", "=", "True", ")", "\n", "    ", "if", " files", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "try", ":", "\n", "                ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "                ", "if", " df", ".", "empty", ":", "\n", "                ", "    ", "raise", " Value", "Error", "\n", "            ", "except", " Value", "Error", ":", "\n", "                ", "summary", "_", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " ", "0", ",", " ", "0", "])", "\n", "            ", "else", ":", "\n", "                ", "summary", "_", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "        ", "return", " summary", "_", "table", ".", "draw", "()", "\n", "    ", "else", ":", "\n", "        ", "raise"], "logprobs": [-3.294182777404785, -0.42673587799072266, -0.22712920606136322, -0.07392668724060059, -0.7699300050735474, -0.0004850641416851431, -0.13385234773159027, -0.026191409677267075, -0.15821117162704468, -0.70088791847229, -0.005622406490147114, -0.04381182789802551, -0.0042986138723790646, -0.5059272050857544, -0.0014092524070292711, -0.14099782705307007, -0.00038961926475167274, -0.14618219435214996, -1.0256545543670654, -0.003145510796457529, -0.6670910120010376, -0.0009463122696615756, -0.004844950046390295, -0.04788246750831604, -0.28490501642227173, -8.022463589441031e-05, -0.010035180486738682, -0.003841403406113386, -0.5512758493423462, -0.0002892790944315493, -0.020179565995931625, -0.030847487971186638, -0.013967620208859444, -0.05704868957400322, -0.0009178477921523154, -0.005025018937885761, -0.00028880240279249847, -0.4687424302101135, -1.0132738680113107e-05, -0.010988791473209858, -0.0002817710628733039, -0.2672649025917053, -0.033062245696783066, -0.3607509434223175, -0.013989956118166447, -0.18571697175502777, -0.00015424491721205413, -0.002130621112883091, -0.02542571909725666, -0.08389735966920853, -0.00018654513405635953, -0.007913783192634583, -0.005469358526170254, -0.018084635958075523, -0.0019882211927324533, -0.0040281834080815315, -0.009375118650496006, -0.028008200228214264, -0.06398141384124756, -0.00015031162183731794, -0.003007533960044384, -0.00020740265608765185, -0.6843395829200745, -0.014468399807810783, -0.09746892005205154, -0.000179036331246607, -0.4220733344554901, -0.0329597070813179, -0.8073581457138062, -1.0395203828811646, -0.0036340404767543077, -0.037271883338689804, -2.319715976715088, -0.006310418248176575, -0.003364499658346176, -0.21886087954044342, -0.004697596654295921, -0.003886172082275152, -0.12573181092739105, -0.07231160998344421, -0.00024589852546341717, -0.006325462367385626, -0.0006824786541983485, -0.29774025082588196, -0.00018130090029444546, -0.6544098258018494, -0.13154584169387817, -0.03778913989663124, -0.11750887334346771, -0.08774961531162262, -0.0011822147062048316, -0.02246292680501938, -0.048800792545080185, -0.005238615907728672, -0.00029845553217455745, -0.003040098585188389, -0.03744345158338547, -0.0007994554471224546, -0.0030870423652231693, -0.004936174489557743, -0.6106131672859192, -2.0020084381103516, -0.19562223553657532, -0.5836130976676941, -0.0005057962844148278, -0.0223957858979702, -0.026156801730394363, -0.4754784405231476, -3.933898824470816e-06, -0.0007949291029945016, -0.0031163957901299, -0.004117107950150967, -0.0015456646215170622, -0.012760416604578495, -5.1973900554003194e-05, -2.1576648578047752e-05, -0.0033811326138675213, -0.5978646278381348, -2.8521039485931396, -0.21121343970298767, -0.0197917390614748, -0.013587490655481815, -0.009623445570468903, -0.25387054681777954, -0.0007681279676035047, -0.012430808506906033, -0.005746748298406601, -0.005857445299625397, -0.0012693690368905663, -0.0066194310784339905, -0.10970038920640945, -1.02166748046875, -2.941105365753174, -0.23023788630962372, -0.030459150671958923, -0.003321608528494835, -0.16744977235794067, -0.4262203872203827, -0.2633405327796936, -0.07868018746376038, -0.0010108605492860079, -0.001896846224553883, -0.001790707348845899, -0.25743886828422546, -0.0001062098381225951, -0.003952549304813147, -0.0005523824947886169, -0.7147123217582703, -0.012749353423714638, -0.011763843707740307, -2.1457441107486375e-05, -0.0028788098134100437, -6.675497570540756e-05, -0.00040391870425082743, -5.94836674281396e-05, -0.013464707881212234, -0.5762757658958435, -0.0068992250598967075, -0.24380391836166382, -2.739370346069336, -0.9027230143547058, -0.027259675785899162, -0.08778052031993866, -0.01324121467769146, -0.03703756630420685, -0.00012635385792236775, -0.0006348263123072684, -0.12853115797042847, -1.030161738395691, -0.00016830935783218592, -2.1541762351989746, -1.64229416847229, -0.0016093410085886717, -0.7126608490943909, -4.589452510117553e-05, -0.1437993049621582, -0.0421232171356678, -0.0006735440110787749, -0.4513256549835205, -0.00037281715776771307, -0.0029786527156829834, -0.0005081792478449643, -0.007208411116153002, -5.2927523938706145e-05, -0.0015983913326635957, -0.043764933943748474, -1.122455358505249, -1.4305012882687151e-05, -0.00026174934464506805, -0.0007784912013448775, -0.15245282649993896, -4.768370445162873e-07, -0.00010942813969450071, -0.008146392181515694, -0.017167536541819572, -0.025925906375050545, -1.2629055976867676, -0.03215809166431427, -0.0016314780805259943, -0.18193180859088898, -0.0031691587064415216, -0.002054010983556509, -0.0031452730763703585, -0.24877804517745972, -0.18593257665634155, -2.729855441430118e-05, -0.0006449526408687234, -0.0004748170613311231, -0.242397740483284, -0.0007331067463383079, -0.0007103541865944862, -0.00013374387344811112, -0.0006983225466683507, -4.637133679352701e-05, -0.0002416080387774855, -0.07951904088258743, -0.03864658623933792, -0.0002884448622353375, -1.3232143828645349e-05, -7.390703103737906e-05, -0.0011995985405519605, -4.672895011026412e-05, -2.8967437174287625e-05, -0.0008298290777020156, -0.0006105228094384074, -0.0002991705550812185, -0.447102814912796, -0.0002460177056491375, -0.040819551795721054, -0.0006025406182743609, -0.0005828827270306647, -0.00035315475543029606, -0.00045944625162519515, -0.010049578733742237, -1.3947389561508317e-05, -0.0018106985371559858, -0.0003046525234822184, -0.00035172473872080445, -0.003910040017217398, -0.000395815703086555, -0.0006965356878936291, -0.8602337837219238, -0.055179715156555176, -0.6486824154853821, -0.0006525770877487957, -0.00029023250681348145, -0.0025184601545333862, -0.03244006261229515, -0.11472108215093613, -0.012265021912753582, -0.015894852578639984, -0.1275487095117569, -3.480850500636734e-05, -0.004282470792531967, -0.0005594118847511709, -0.05500191077589989], "finish_reason": "length"}], "metrics": {"energy": 307.127545276642, "energy_per_token": 1.199716973736883, "time": 11.767489, "time_per_token": 0.04596675390625}}
{"outputs": [{"text": "files = glob.glob(os.path.join(data_dir, '*.csv'))\n    table = Texttable()\n\n    if not files:\n        raise FileNotFoundError(\"No CSV files found in the specified directory.\")\n\n    try:\n        for file in files:\n            df = pd.read_csv(file)\n            try:\n                df = df.iloc[:0]\n                table.add_row([os.path.basename(file), df.shape[0], df.shape[1]])\n            except:\n                table.add_row([os.path.basename(file), None, None])\n\n    except pd.errors.EmptyDataError:\n        raise FileNotFoundError(\"Empty file encountered\")\n\n    return str(table)", "tokens": ["files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "try", ":", "\n", "                ", "df", " =", " df", ".", "il", "oc", "[:", "0", "]", "\n", "                ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " df", ".", "shape", "[", "0", "]", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "            ", "except", ":", "\n", "                ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " None", ",", " None", "])", "\n", "\n", "    ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Empty", " file", " encountered", "\"", ")", "\n", "\n", "    ", "return", " str", "(", "table", ")", "\n", "\n", "def"], "logprobs": [-2.47737979888916, -0.13609850406646729, -0.3353041410446167, -0.000568228424526751, -0.00826746504753828, -0.03970610722899437, -0.447221040725708, -3.6954811548639555e-06, -0.00044431351125240326, -0.002303448738530278, -0.0031230507884174585, -0.0017685738857835531, -0.010041199624538422, -3.218599158572033e-05, -2.407998726994265e-05, -0.005783727392554283, -0.29748299717903137, -0.08286774903535843, -0.06331014633178711, -0.009663351811468601, -0.012876813299953938, -0.013677685521543026, -0.2423427253961563, -3.1725518703460693, -0.026591969653964043, -0.09447039663791656, -0.0001879753835964948, -0.2848094403743744, -0.010404394008219242, -1.616489291191101, -0.00019500737835187465, -0.46850115060806274, -0.6426336169242859, -0.07094603031873703, -0.010797764174640179, -0.020792024210095406, -0.0013610394671559334, -0.08523520082235336, -1.57309091091156, -9.846202738117427e-05, -4.1126360883936286e-05, -0.6164827942848206, -0.6498581767082214, -0.5985590219497681, -0.3113522231578827, -0.0028867737855762243, -0.011813796125352383, -0.08466754853725433, -0.12119369953870773, -0.4191039502620697, -0.10420719534158707, -0.013014964759349823, -0.1835251897573471, -0.01496340986341238, -0.00024244230007752776, -0.005127256736159325, -0.10020981729030609, -0.00042500998824834824, -2.7779181003570557, -0.0003120412293355912, -0.008460157550871372, -0.006031999830156565, -0.2592447102069855, -0.4028174579143524, -0.359369158744812, -0.04784917086362839, -0.0008323303773067892, -0.004941749852150679, -0.006292649079114199, -0.810764491558075, -0.008284134790301323, -0.015156225301325321, -1.728519782773219e-05, -0.0038682410959154367, -5.781483559985645e-05, -0.0003289635351393372, -6.496695277746767e-05, -0.0038009081035852432, -0.5294132828712463, -0.012114047072827816, -0.12042302638292313, -3.224778175354004, -0.0002967870968859643, -0.014714760705828667, -0.0010854073334485292, -2.0109572410583496, -1.9700044393539429, -0.12625309824943542, -0.017066990956664085, -2.8325304985046387, -0.0002919009421020746, -0.6533089280128479, -1.0130194425582886, -0.43116533756256104, -0.21998438239097595, -0.9939227104187012, -1.5612515211105347, -0.00725693441927433, -0.006578219123184681, -0.009473842568695545, -0.08768245577812195, -0.13534194231033325, -1.016749620437622, -5.722029527532868e-06, -0.0002932118659373373, -0.001764765940606594, -0.09270479530096054, -4.768370445162873e-07, -0.00013004888023715466, -0.007212198339402676, -0.03197672218084335, -0.009524972178041935, -1.9324119091033936, -0.011916402727365494, -0.2976635694503784, -0.006305087357759476, -0.0025191735476255417, -0.007004467770457268, -0.0014517493546009064, -0.011925237253308296, -2.9801878554280847e-05, -0.004646931774914265, -0.0006403064471669495, -0.0007188120507635176, -0.005660575814545155, -0.0010088359704241157, -0.006514858454465866, -0.0459311418235302, -0.004254219587892294, -2.481368064880371, -0.02945263870060444, -0.0008386432309634984, -0.628084659576416, -0.0017020514933392406, -0.007190421223640442, -4.434487345861271e-05, -0.00727255642414093, -0.02605680748820305, -0.017624201253056526, -0.00024184639914892614, -4.339123915997334e-05, -0.00012408917245920748, -0.0008896207436919212, -4.029192859889008e-05, -3.325883881188929e-05, -0.0005519058904610574, -0.013647817075252533, -0.0020648366771638393, -2.4773592948913574, -0.005171137861907482, -0.016856491565704346, -0.008176898583769798, -0.0024492524098604918, -1.5022304058074951, -0.37122201919555664, -0.008600929751992226, -1.6457384824752808, -2.407998726994265e-05, -0.0003526780928950757, -0.0002294515579706058, -0.0009372609201818705, -0.001799156074412167, -3.1709168979432434e-05, -0.25233036279678345, -0.01610485091805458, -0.004427511245012283, -1.0919864177703857, -2.1558074951171875, -0.0014937683008611202, -0.00015698630886618048, -0.05086731165647507, -0.1414671242237091, -0.4517901837825775, -2.433882236480713, -0.755678117275238, -2.6527464389801025, -0.012377355247735977, -0.011273376643657684, -0.12093007564544678, -0.0017878514481708407, -0.18308444321155548, -1.918236494064331, -0.000601349223870784, -0.001022769371047616, -0.46156108379364014, -0.2499300092458725, -0.008354831486940384, -0.13212719559669495], "finish_reason": "stop"}], "metrics": {"energy": 200.00798151683816, "energy_per_token": 1.0638722421108413, "time": 8.208352, "time_per_token": 0.04366144680851063}}
{"outputs": [{"text": "# Check if the specified directory exists.\n    if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} doesn't exist.\")\n    # Check if there are any CSV files in the specified directory.\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if len(csv_files) == 0:\n        raise ValueError(\"No CSV files found.\")\n\n    # Open each CSV file and generate a summary table.\n    tables = []\n    for f in csv_files:\n        try:\n            table = Texttable()\n            df = pd.read_csv(f)\n            table.add_rows(df.to_numpy())\n            tables.append(table)\n        except pd.errors.EmptyDataError:\n            continue\n    # Create a table and concatenate the summary tables.\n    table = Texttable()\n    table.add_rows(zip(csv_files, [len(df) for df in df]))\n    for t in tables:\n        ", "tokens": ["#", " Check", " if", " the", " specified", " directory", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " doesn", "'", "t", " exist", ".", "\"", ")", "\n", "    ", "#", " Check", " if", " there", " are", " any", " CS", "V", " files", " in", " the", " specified", " directory", ".", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " len", "(", "csv", "_", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Open", " each", " CS", "V", " file", " and", " generate", " a", " summary", " table", ".", "\n", "    ", "tables", " =", " []", "\n", "    ", "for", " f", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "table", " =", " Text", "table", "()", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "f", ")", "\n", "            ", "table", ".", "add", "_", "rows", "(", "df", ".", "to", "_", "numpy", "())", "\n", "            ", "tables", ".", "append", "(", "table", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "continue", "\n", "    ", "#", " Create", " a", " table", " and", " concaten", "ate", " the", " summary", " tables", ".", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "add", "_", "rows", "(", "zip", "(", "csv", "_", "files", ",", " [", "len", "(", "df", ")", " for", " df", " in", " df", "]))", "\n", "    ", "for", " t", " in", " tables", ":", "\n", "        "], "logprobs": [-1.7954072952270508, -1.7338662147521973, -0.28163281083106995, -0.61475670337677, -1.1479582786560059, -0.11045566946268082, -0.013624534010887146, -2.1989803314208984, -0.0660499706864357, -0.002989706117659807, -0.11963240802288055, -0.05689137428998947, -0.004047536291182041, -7.748573807475623e-06, -0.00021300431399140507, -0.0025013370905071497, -1.3956084251403809, -0.0005373702733777463, -0.000325388420606032, -0.002452106447890401, -1.4185804502631072e-05, -4.0531076592742465e-06, -0.002359703416004777, -0.003132795449346304, -0.0009703694959171116, -0.04355507344007492, -0.007382019888609648, -3.766942609217949e-05, -2.586808113846928e-05, -0.18523143231868744, -0.592655599117279, -0.13772344589233398, -0.8830986022949219, -0.680091917514801, -0.0020157035905867815, -6.639736966462806e-05, -0.0012541294563561678, -0.01283985935151577, -3.2973177433013916, -0.004797495435923338, -6.6756979322235566e-06, -0.03083442524075508, -0.4396733343601227, -0.07132384181022644, -0.000270091783022508, -0.004046942573040724, -1.7499114274978638, -0.33659133315086365, -1.9599313735961914, -0.1620548814535141, -0.2560569941997528, -0.049740616232156754, -0.5772877931594849, -0.20733018219470978, -0.001601009746082127, -0.0028606229461729527, -0.0795387476682663, -0.005454301368445158, -0.4926872253417969, -0.004152841866016388, -0.05081541836261749, -0.009770074859261513, -0.002102547325193882, -0.7017408013343811, -0.002665064763277769, -0.03376425802707672, -0.010379028506577015, -0.15914209187030792, -6.0794889577664435e-05, -0.003802452003583312, -0.015552074648439884, -0.25695744156837463, -2.8967437174287625e-05, -3.6000557884108275e-05, -0.001987745286896825, -0.0007201223634183407, -0.0010030006524175406, -0.007406751159578562, -4.410646579344757e-05, -6.437280717364047e-06, -0.0008663953049108386, -0.3504757583141327, -0.050977542996406555, -0.007708446122705936, -0.0036574392579495907, -0.006991564761847258, -0.0034323371946811676, -0.014720281586050987, -0.020946713164448738, -1.309009075164795, -9.095255518332124e-05, -0.00036173476837575436, -4.768370445162873e-07, -4.768360213347478e-06, -0.0003588747640606016, -0.08185674995183945, -0.00016950124700088054, -5.8530047681415454e-05, -0.0017141900025308132, -0.0030050380155444145, -0.0005171154043637216, -0.01331520825624466, -0.023147374391555786, -8.22540732769994e-06, -0.15606814622879028, -1.2293224334716797, -0.4426487386226654, -0.08635641634464264, -0.0011804286623373628, -0.00845944881439209, -0.11400369554758072, -2.3221960067749023, -0.012118522077798843, -0.00017414960893802345, -0.0021230080164968967, -1.0365787744522095, -0.001396872103214264, -0.36432671546936035, -2.6029915809631348, -0.9291385412216187, -0.16569864749908447, -1.823885577323381e-05, -0.001061352901160717, -0.41832447052001953, -3.382524013519287, -0.2613217830657959, -0.8576706647872925, -0.14875462651252747, -0.258149117231369, -0.007124495226889849, -0.0032926176209002733, -2.559366226196289, -0.02941443957388401, -0.06930843740701675, -0.019957100972533226, -0.04954448714852333, -0.05851488932967186, -2.438746929168701, -0.5246875286102295, -0.049614254385232925, -2.0265558760002023e-06, -8.344646857949556e-07, -3.2186455882765586e-06, -0.00039569655200466514, -0.0018800693796947598, -0.0023369877599179745, -0.1986227035522461, -3.540453326422721e-05, -0.0015013862866908312, -0.0005029367166571319, -1.6301023960113525, -0.038939233869314194, -0.31977179646492004, -0.0004638549580704421, -0.45829081535339355, -0.010538758710026741, -0.009558860212564468, -0.6017352938652039, -0.004707326181232929, -0.007876054383814335, -0.00012885693286079913, -0.0024894457310438156, -2.13382354559144e-05, -0.0004374024283606559, -4.708655978902243e-05, -0.0035710867960006, -0.4071902334690094, -0.009768540039658546, -0.02846735529601574, -0.46886834502220154, -0.003969766199588776, -0.17740166187286377, -0.0018565100617706776, -0.024931909516453743, -0.44054877758026123, -0.12536874413490295, -0.0039910199120640755, -0.658245325088501, -2.0265558760002023e-06, -0.10225424915552139, -0.9914939403533936, -0.01590353436768055, -0.04367786645889282, -0.36663883924484253, -0.0013568728463724256, -0.00046754872892051935, -0.04353350028395653, -0.020754311233758926, -0.1516498476266861, -0.0010886224918067455, -0.03911877050995827, -0.01669495366513729, -0.28483831882476807, -1.2397689715726301e-05, -0.00014900050882715732, -0.00010764019680209458, -0.0003779412363655865, -0.0014173472300171852, -1.1444026313256472e-05, -0.09354369342327118, -0.034022849053144455, -0.0010384886991232634, -2.0466222763061523, -0.03337613120675087, -1.4584529399871826, -1.0936779975891113, -2.960446357727051, -0.4471908509731293, -2.8511061668395996, -3.1522302627563477, -2.7163729667663574, -0.003631546162068844, -0.8326312303543091, -0.6627436280250549, -0.11453474313020706, -0.6341575980186462, -0.0021764179691672325, -0.0015520919114351273, -0.39264264702796936, -0.039787791669368744, -0.02605518139898777, -0.0025503274518996477, -0.020973213016986847, -0.002084584441035986, -0.012844214215874672, -0.49932318925857544, -0.003933669533580542, -0.9458895921707153, -0.00013267113536130637, -0.02233155444264412, -0.43002474308013916, -3.2561862468719482, -0.9380187392234802, -0.3575908839702606, -6.603976362384856e-05, -0.0003196682082489133, -0.012761593796312809, -0.31030887365341187, -0.3086683750152588, -0.0010483728256076574, -2.1764636039733887, -0.4487749934196472, -0.003230711678043008, -0.0227122213691473, -0.0012375799706205726, -1.25166654586792, -2.3660976886749268, -0.01676763780415058, -0.23627083003520966, -0.8965110778808594, -0.9123414158821106, -0.1021365076303482, -0.009681297466158867, -0.013015082105994225, -0.0074292332865297794, -0.000647692708298564], "finish_reason": "length"}], "metrics": {"energy": 263.18192321586605, "energy_per_token": 1.0280543875619768, "time": 11.36545, "time_per_token": 0.0443962890625}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(\"No such file or directory.\")\n\n    all_files = [os.path.basename(x) for x in glob.glob(f\"{data_dir}*.csv\")]\n    all_files = [x for x in all_files if not x.startswith(\"test\")]\n\n    if not all_files:\n        raise ValueError(\"No CSV files in the specified directory.\")\n\n    rows_list = []\n    for filename in all_files:\n        csv_filename = os.path.join(data_dir, filename)\n\n        try:\n            data = pd.read_csv(csv_filename)\n            rows = len(data)\n            columns = len(data.columns)\n        except pd.errors.EmptyDataError:\n            rows = 0\n            columns = 0\n        rows_list.append((filename, rows, columns))\n\n    texttable = Texttable(\"\")\n    texttable.set_cols_align([\"l\", \"r", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "No", " such", " file", " or", " directory", ".", "\"", ")", "\n", "\n", "    ", "all", "_", "files", " =", " [", "os", ".", "path", ".", "bas", "ename", "(", "x", ")", " for", " x", " in", " glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "*", ".", "csv", "\"", ")]", "\n", "    ", "all", "_", "files", " =", " [", "x", " for", " x", " in", " all", "_", "files", " if", " not", " x", ".", "start", "sw", "ith", "(", "\"", "test", "\"", ")]", "\n", "\n", "    ", "if", " not", " all", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "rows", "_", "list", " =", " []", "\n", "    ", "for", " filename", " in", " all", "_", "files", ":", "\n", "        ", "csv", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "try", ":", "\n", "            ", "data", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "filename", ")", "\n", "            ", "rows", " =", " len", "(", "data", ")", "\n", "            ", "columns", " =", " len", "(", "data", ".", "columns", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "rows", " =", " ", "0", "\n", "            ", "columns", " =", " ", "0", "\n", "        ", "rows", "_", "list", ".", "append", "((", "filename", ",", " rows", ",", " columns", "))", "\n", "\n", "    ", "text", "table", " =", " Text", "table", "(", "\"", "\"", ")", "\n", "    ", "text", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -1.1495530605316162, -0.0059465630911290646, -0.0016124354442581534, -0.0036882013082504272, -3.504691630951129e-05, -7.510157047363464e-06, -0.006078921724110842, -0.026538802310824394, -0.0017199022695422173, -0.040286000818014145, -0.013991836458444595, -8.201262971851975e-05, -8.093983342405409e-05, -0.3789600431919098, -1.1390230655670166, -2.9256958961486816, -0.27115875482559204, -1.2022829055786133, -0.02680286578834057, -0.00881081074476242, -2.0344061851501465, -0.20010297000408173, -0.009048409759998322, -0.00874439999461174, -0.5950318574905396, -0.00048685140791349113, -3.7629966735839844, -0.018698377534747124, -0.5769674777984619, -0.06800457090139389, -3.015507698059082, -1.359885811805725, -2.455681169521995e-05, -0.002270027529448271, -0.0007588367443531752, -2.2374014854431152, -9.536738616588991e-07, -0.005147774238139391, -1.7296335697174072, -0.008771343156695366, -0.05646728351712227, -0.0006827168981544673, -0.0009226117981597781, -0.0899510607123375, -4.541770613286644e-05, -0.032918531447649, -0.06429781764745712, -1.7514445781707764, -0.38863739371299744, -0.005338697694242001, -0.011955157853662968, -9.691245941212401e-05, -9.65590606938349e-06, -0.06940820813179016, -0.4551716148853302, -0.1761602908372879, -0.02720828540623188, -0.017833132296800613, -0.03583766892552376, -0.0128819914534688, -0.3636242151260376, -2.141796588897705, -0.0008828318095766008, -0.1734827160835266, -0.813359260559082, -0.702560305595398, -0.536884069442749, -0.5565385222434998, -0.005105434451252222, -0.00032443503732793033, -0.03936394676566124, -2.7179348762729205e-05, -4.8993817472364753e-05, -0.012447762303054333, -1.4150937795639038, -0.21153756976127625, -0.03630738705396652, -0.3507733643054962, -2.3364747903542593e-05, 0.0, -0.6451213359832764, -0.018340876325964928, -2.9227492809295654, -0.5220282077789307, -0.07897137850522995, -0.049962110817432404, -0.7520273923873901, -0.00010239553375868127, -0.2225484699010849, -0.7003583312034607, -0.0396309457719326, -0.00037472377880476415, -5.960446742392378e-06, -0.0034569285344332457, -0.008322793990373611, -0.000743708573281765, -0.017411476001143456, -0.022037504240870476, -2.2172682292875834e-05, -0.031010683625936508, -0.11003746837377548, -0.2562384009361267, -0.7080199122428894, -0.004654881544411182, -0.04348408058285713, -2.384763240814209, -0.7070639133453369, -0.34928029775619507, -0.016046078875660896, -0.060206711292266846, -0.011807669885456562, -0.00047541281674057245, -0.0015168600948527455, -0.021164873614907265, -0.0004752936656586826, -3.5903501510620117, -2.2590792179107666, -2.285062789916992, -0.08226032555103302, -0.171061709523201, -0.008091053925454617, -0.35101911425590515, -0.28523534536361694, -2.1770477294921875, -0.005976188462227583, -0.055232733488082886, -1.9430925021879375e-05, -4.1126360883936286e-05, -0.0007197650265879929, -0.0035643160808831453, -0.011273613199591637, -2.9018054008483887, -0.08831213414669037, -3.35678768157959, -0.0051012830808758736, -0.4470069110393524, -1.7881377516459906e-06, -0.00019059749320149422, -0.005879251752048731, -0.011425421573221684, -0.0010315817780792713, -0.00858816597610712, -9.417489309271332e-06, -1.156323378381785e-05, -0.006014463026076555, -0.019201939925551414, -0.0007139279623515904, -0.003267427906394005, -2.444974660873413, -0.0009392855572514236, -0.2061191350221634, -0.00013326710904948413, -0.0037918826565146446, -0.0019378946162760258, -1.9532341957092285, -0.27042651176452637, -0.038927651941776276, -4.351044481154531e-05, -0.0025387934874743223, -0.0001284993631998077, -0.00038246947224251926, -9.643566590966657e-05, -0.009929666295647621, -6.437280717364047e-06, -1.7881233361549675e-05, -0.3640083372592926, -0.022836903110146523, -1.1741406917572021, -0.2668895125389099, -0.5698851943016052, -0.29854512214660645, -0.00023445718397852033, -0.010605285875499249, -0.4044032692909241, -0.016380829736590385, -0.027764860540628433, -0.793560802936554, -0.0010084786918014288, -0.014675408601760864, -0.0003358753747306764, -0.02076762169599533, -0.0013192531187087297, -0.031656622886657715, -0.0035493490286171436, -0.0026453284081071615, -1.5164563655853271, -0.004439142532646656, -0.26515433192253113, -2.062299427052494e-05, -0.00023588736075907946, -0.00011193125828867778, -0.00034767304896377027, -0.0023639847058802843, -2.372236667724792e-05, -0.05088135972619057, -0.03260934725403786, -0.0018043918535113335, -1.0556833744049072, -0.06336229294538498, -0.33947619795799255, -0.012546772137284279, -0.0036225190851837397, -0.013967973180115223, -0.009113853797316551, -0.0003586364327929914, -0.015236652456223965, -0.005437465384602547, -0.0004717191040981561, -1.9268805980682373, -0.83999103307724, -0.0012421043356880546, -0.0021108745131641626, -0.0049795894883573055, -0.001474485034123063, -1.1394293308258057, -0.17449095845222473, -0.0066876402124762535, -0.01860044337809086, -0.0005532164941541851, -0.0003408804477658123, -0.0047836145386099815, -0.0016121974913403392, -0.1907254010438919, -0.0038168213795870543, -3.886631488800049, -1.8424789905548096, -0.05939261242747307, -0.0028173536993563175, -0.00013052565918769687, -1.104179859161377, -2.482375144958496, -1.8320118188858032, -0.3938329815864563, -0.030034225434064865, -0.07019785791635513, -0.15289263427257538, -0.0014560346025973558, -0.0007831366965547204, -0.6424072980880737, -0.0020427091512829065, -0.08792868256568909, -0.00021884430316276848, -0.2872055470943451, -0.38788071274757385, -0.002183317206799984, -0.7392439842224121, -0.0009584600338712335, -0.008816245943307877, -0.018136147409677505, -0.20514316856861115], "finish_reason": "length"}], "metrics": {"energy": 289.6524631013872, "energy_per_token": 1.1314549339897937, "time": 11.35399, "time_per_token": 0.0443515234375}}
{"outputs": [{"text": "table = Texttable()\n\n    files_in_dir = glob.glob(f\"{data_dir}*.csv\")\n    if len(files_in_dir) == 0:\n        raise ValueError(\"There are no CSV files in the specified directory.\")\n\n    for filename in files_in_dir:\n        try:\n            df = pd.read_csv(filename)\n        except pd.errors.EmptyDataError:\n            raise ValueError(f\"An empty CSV file was encountered: {filename}\")\n        except Exception as e:\n            raise ValueError(f\"An unexpected error occurred while processing {filename}: {e}\")\n\n        filename = os.path.basename(filename)\n        rows = len(df)\n        columns = len(df.columns)\n        table.add_row([filename, rows, columns])\n\n    return table.draw()", "tokens": ["table", " =", " Text", "table", "()", "\n", "\n", "    ", "files", "_", "in", "_", "dir", " =", " glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "*", ".", "csv", "\"", ")", "\n", "    ", "if", " len", "(", "files", "_", "in", "_", "dir", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " are", " no", " CS", "V", " files", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "for", " filename", " in", " files", "_", "in", "_", "dir", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "An", " empty", " CS", "V", " file", " was", " encountered", ":", " {", "filename", "}\"", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "An", " unexpected", " error", " occurred", " while", " processing", " {", "filename", "}:", " {", "e", "}\"", ")", "\n", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "filename", ")", "\n", "        ", "rows", " =", " len", "(", "df", ")", "\n", "        ", "columns", " =", " len", "(", "df", ".", "columns", ")", "\n", "        ", "table", ".", "add", "_", "row", "([", "filename", ",", " rows", ",", " columns", "])", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.9469118118286133, -0.04707077890634537, -0.06101095303893089, -0.00013791563105769455, -0.1821276694536209, -0.02250593714416027, -1.6656279563903809, -0.0004430027911439538, -2.2506067752838135, -1.8885544538497925, -2.754934787750244, -0.00963029358536005, -0.39897340536117554, -0.023661624640226364, -0.529395580291748, -0.0005479741375893354, -0.008503420278429985, -0.02995428629219532, -1.36680006980896, -0.378376841545105, -0.005655478686094284, -0.018634025007486343, -1.2159273865108844e-05, -2.8132995794294402e-05, -0.06325475871562958, -0.668829619884491, -0.1997765749692917, -0.010519885458052158, -0.019467247650027275, -0.01574419066309929, -0.029674388468265533, -0.5703403353691101, -0.3329779803752899, -0.8103390336036682, -0.000259723310591653, -0.0008393579046241939, -5.781483559985645e-05, -1.4066597032069694e-05, -2.145764938177308e-06, -2.264974000354414e-06, -0.0035543381236493587, -0.17051884531974792, -0.0004940004437230527, -0.0005633435794152319, -0.0057679638266563416, -0.022570274770259857, -0.0020929116290062666, -0.06967698037624359, -0.1961318552494049, -1.0013530300057027e-05, -0.1826028972864151, -0.3626905083656311, -1.7573418617248535, -0.059106677770614624, -0.015308503061532974, -0.1291266232728958, -0.0025769618805497885, -0.0053037176840007305, -0.07638230919837952, -0.24009135365486145, -0.11618945002555847, -0.014474157243967056, -0.22780993580818176, -0.014821181073784828, -0.0002646096108946949, -0.003097737906500697, -0.1852293461561203, -0.0003844952443614602, -0.5914219617843628, -2.1612792015075684, -0.006253437604755163, -0.07266230881214142, -7.86750388215296e-05, -2.4318398573086597e-05, -7.867782187531702e-06, -2.145764938177308e-06, -0.0010484919184818864, -0.005381857976317406, -0.010111181996762753, -0.2407313734292984, -6.961580220377073e-05, -0.0033059250563383102, -0.001280679483897984, -0.6950809359550476, -0.011053048074245453, -0.012002509087324142, -1.490105023549404e-05, -0.002420355100184679, -1.7881233361549675e-05, -0.00023588736075907946, -5.5549986427649856e-05, -0.012931416742503643, -0.5535078644752502, -0.010408877395093441, -0.6024001836776733, -0.0005495230434462428, -0.3051890432834625, -0.00013159839727450162, -0.00037543877260759473, -0.0002162222663173452, -0.000542493537068367, -0.003569661406800151, -5.471556869451888e-05, -0.10642354935407639, -0.02584703080356121, -0.000662822334561497, -0.8009436726570129, -0.16079430282115936, -3.576272320060525e-06, -0.00883597880601883, -0.28967854380607605, -0.01502858567982912, -1.1872888803482056, -0.010927006602287292, -0.10230182111263275, -9.035655966727063e-05, -0.0012235306203365326, -0.40595486760139465, -0.22448256611824036, -0.19465628266334534, -0.034635063260793686, -0.013386255130171776, -0.2545110583305359, -0.0007103541865944862, -0.004851949401199818, -0.386694997549057, -1.4896454811096191, -1.1978473663330078, -0.08184631168842316, -0.08770757168531418, -0.00037067217635922134, -0.013062736950814724, -0.0007516896002925932, -0.708732008934021, -0.2828986644744873, -6.186770770000294e-05, -0.0017565549351274967, -0.04896346852183342, -0.002559007378295064, -0.3298487663269043, -1.3933393955230713, -0.047042232006788254, -0.07243380695581436, -0.6864214539527893, -0.9746044874191284, -0.5253261923789978, -0.000936189026106149, -0.09963992238044739, -0.011001878418028355, -0.3148200511932373, -0.04458489641547203, -0.000518664310220629, -0.0024465173482894897, -1.0517851114273071, -0.0050844415090978146, -4.0943403244018555, -0.41646453738212585, -0.22971107065677643, -4.172316494077677e-06, -0.00037496211007237434, -0.004880894906818867, -0.13710199296474457, -2.3841855067985307e-07, -5.030505417380482e-05, -0.0022285168524831533, -0.002540576970204711, -0.0479915514588356, -0.08063864707946777, -0.9296254515647888, -0.4558286964893341, -0.4265124201774597, -0.00019774865359067917, -0.00217760750092566, -0.3888205289840698, -0.008911599405109882, -0.0018963703187182546, -0.5398213267326355, -0.0004021312633994967, -0.04162009060382843, -0.00019572250312194228, -0.003942219074815512, -0.0005477358354255557, -0.015019543468952179, -0.0049464949406683445, -0.0036446116864681244, -0.3907507359981537, -0.34199193120002747, -0.0076287128031253815, -0.002441760618239641, -0.0011756658786907792, -0.025712383911013603, -0.025859344750642776, -0.0241992324590683, -0.006827004719525576, -0.019711561501026154, -0.0003518439189065248, -0.0010996968485414982, -0.0011473270133137703, -0.0018774517811834812, -0.10928806662559509, -0.002408938482403755, -0.17781059443950653, -0.24266628921031952, -0.0064056552946567535, -0.056159887462854385, -0.2937439978122711, -0.38585180044174194, -0.008355304598808289, -0.14797839522361755], "finish_reason": "stop"}], "metrics": {"energy": 235.87047613906867, "energy_per_token": 1.1285668714787975, "time": 9.251557, "time_per_token": 0.044265822966507176}}
{"outputs": [{"text": "if not os.path.isdir(data_dir):\n        raise FileNotFoundError(f\"{data_dir} is not a valid directory.\")\n    csv_files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    if not csv_files:\n        raise ValueError(f\"No CSV files found in {data_dir}.\")\n    table = Texttable()\n    for file in csv_files:\n        try:\n            df = pd.read_csv(file, dtype=str, index_col=False, header=0, na_values=['NA'], skip_blank_lines=True)\n        except pd.errors.EmptyDataError as e:\n            print(f\"{file} is an empty file\")\n        else:\n            df_info = f'|   {file}  | {len(df)}   | {df.shape[1]}   |'\n            table.add_row(df_info)\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "data", "_", "dir", "}", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " {", "data", "_", "dir", "}", ".", "\"", ")", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " dtype", "=", "str", ",", " index", "_", "col", "=", "False", ",", " header", "=", "0", ",", " na", "_", "values", "=['", "NA", "']", ",", " skip", "_", "blank", "_", "lines", "=", "True", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "{", "file", "}", " is", " an", " empty", " file", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "df", "_", "info", " =", " f", "'", "|", "   ", "{", "file", "}", "  ", "|", " {", "len", "(", "df", ")}", "   ", "|", " {", "df", ".", "shape", "[", "1", "]}", "   ", "|", "'", "\n", "            ", "table", ".", "add", "_", "row", "(", "df", "_", "info", ")", "\n", "    ", "return", " table", ".", "draw", "()"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -1.1495530605316162, -0.0059465630911290646, -0.0016124354442581534, -0.0036882013082504272, -3.504691630951129e-05, -7.510157047363464e-06, -0.006078921724110842, -0.026538802310824394, -0.0017199022695422173, -0.040286000818014145, -0.013991836458444595, -8.201262971851975e-05, -8.093983342405409e-05, -0.3789600431919098, -0.617504358291626, -0.2716760039329529, -0.9232691526412964, -0.007537260185927153, -0.0001294529065489769, -0.0004065402317792177, -0.03318587318062782, -0.48289141058921814, -0.04994691535830498, -0.07049264013767242, -0.5153443813323975, -0.151357963681221, -0.7279732823371887, -0.08208299428224564, -0.0003594706067815423, -0.0052275871858000755, -1.0579938888549805, -1.0915591716766357, -0.007214210461825132, -0.06330444663763046, -0.016825076192617416, -0.21716198325157166, -0.00011455356434453279, -0.006372370757162571, -0.014647097326815128, -0.22679972648620605, -6.437094270950183e-05, -7.426462980220094e-05, -0.0022658645175397396, -0.0008790204883553088, -0.0010187203297391534, -0.0064257909543812275, -5.113947918289341e-05, -2.6225699912174605e-05, -0.0015053142560645938, -0.8220690488815308, -0.060708653181791306, -0.01045995857566595, -0.00464289728552103, -0.008150649257004261, -0.0036992470268160105, -0.008911599405109882, -0.05622052028775215, -0.08173602819442749, -0.4058646261692047, -0.013142391107976437, -5.364403477869928e-06, -5.960462772236497e-07, -3.099436753473128e-06, -0.0020870824810117483, -0.008083485998213291, -0.00037269797758199275, -0.01397620141506195, -0.026527194306254387, -9.894321920000948e-06, -0.00998301524668932, -0.6190676093101501, -0.003249961184337735, -0.366552472114563, -0.14208050072193146, -0.001023007556796074, -0.009594282135367393, -0.08400499075651169, -0.016768692061305046, -0.0679754987359047, -0.004952781833708286, -7.915183232398704e-05, -0.00028772983932867646, -0.14847783744335175, -0.05321885645389557, -0.0077219316735863686, -0.00024041623692028224, -0.0018103414913639426, -0.4036872386932373, -0.8126167058944702, -0.020138442516326904, -0.020586978644132614, -0.0002119316632160917, -0.258116215467453, -0.006059845443814993, -0.014774080365896225, -2.542372941970825, -0.6577337980270386, -0.6994197964668274, -0.08179325610399246, -7.152555099310121e-07, -1.1920922133867862e-06, -5.364403477869928e-06, -0.000788258679676801, -0.0023593467194586992, -0.0014144902816042304, -0.2528555989265442, -4.5060096454108134e-05, -0.0030753957107663155, -0.0004637358069885522, -0.4233051538467407, -0.007018436212092638, -0.006794444750994444, -1.1205610462639015e-05, -0.0026463984977453947, -1.6569954823353328e-05, -0.00020728347590193152, -3.528532761265524e-05, -0.0071549140848219395, -1.1669094562530518, -3.3919355869293213, -0.26694419980049133, -0.1460593193769455, -1.0541696548461914, -1.281270146369934, -0.00021562635083682835, -0.003049249993637204, -0.016552384942770004, -0.6346316337585449, -1.6526223421096802, -1.542858362197876, -0.004264902789145708, -0.6816545128822327, -1.203684687614441, -1.8617433309555054, -4.875540980719961e-05, -0.23477041721343994, -2.357889175415039, -1.566546082496643, -1.401970386505127, -0.0024474686942994595, -1.7695664167404175, -0.23541629314422607, -0.20179608464241028, -0.00019941726350225508, -0.0022149572614580393, -0.0006422125734388828, -0.17968270182609558, -0.25922372937202454, -0.015811780467629433, -0.6863077282905579, -0.0018675759201869369, -0.19751611351966858, -1.0013530300057027e-05, -0.00012587709352374077, -0.0001436368766007945, -0.00043108707177452743, -0.00208934280090034, -2.5987286790041253e-05, -2.2481465339660645, -0.1897457391023636, -0.0009684640099294484, -0.013151685707271099, -0.001105293515138328, -0.4361855983734131, -0.01257467269897461, -0.24589437246322632, -0.018490446731448174, -1.142218828201294, -0.19391852617263794, -0.392360121011734, -0.5748043656349182, -1.2309203147888184, -0.008558972738683224, -0.8106293082237244, -3.294504404067993, -0.02831336110830307, -0.006018610205501318, -1.2406787872314453, -0.8365265130996704, -8.785339014139026e-05, -0.0016217187512665987, -0.003411784302443266, -3.0858500003814697, -0.9632114768028259, -1.1508984565734863, -0.0065565467812120914, -1.1387875080108643, -2.860767364501953, -1.8244953155517578, -2.701838493347168, -0.0741373598575592, -0.43206551671028137, -0.25140148401260376, -3.0389668941497803, -0.27280235290527344, -0.3677843511104584, -0.6451286673545837, -0.00015615197480656207, -0.0014063954586163163, -0.7276074886322021, -0.7165842056274414, -0.004585702903568745, -0.10020830482244492, -1.6271041631698608, -0.0007032066932879388, -0.15758450329303741, -0.018185080960392952, -0.03518257290124893, -0.16167941689491272, -0.9017108678817749, -0.6821174621582031, -0.029926981776952744, -0.02171560563147068, -0.014102918095886707, -0.15661859512329102, -0.0014662717003375292, -0.0058724964037537575, -6.806619057897478e-05, -0.02701302245259285, -0.12563098967075348, -0.021293599158525467, -0.0017525089206174016, -1.9788545614574105e-05, -0.5819898843765259, -0.0037133803125470877, -0.1454567313194275, -0.2340734601020813, -0.27200210094451904, -0.003169633913785219, -0.032079361379146576, -0.17603494226932526], "finish_reason": "stop"}], "metrics": {"energy": 292.1287353725431, "energy_per_token": 1.2326106977744433, "time": 10.513985, "time_per_token": 0.044362805907172995}}
{"outputs": [{"text": "try:\n        files = sorted(glob.glob(os.path.join(data_dir, \"*.csv\")))\n        if len(files) == 0:\n            raise ValueError\n        summary = pd.DataFrame()\n        for file in files:\n            df = pd.read_csv(file, sep=\",\", encoding=\"utf-8\")\n            summary = summary.append(pd.DataFrame([\n                [file, len(df.index), len(df.columns)]\n            ], index=[file]))\n        return str(summary)\n    except FileNotFoundError:\n        raise FileNotFoundError(\"File not found\")\n    except ValueError:\n        raise ValueError(\"No files found\")\n    except pd.errors.EmptyDataError:\n        raise ValueError(\"Empty file found\")", "tokens": ["try", ":", "\n", "        ", "files", " =", " sorted", "(", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", ")))", "\n", "        ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "            ", "raise", " Value", "Error", "\n", "        ", "summary", " =", " pd", ".", "DataFrame", "()", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " sep", "=", "\"", ",", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", "\n", "            ", "summary", " =", " summary", ".", "append", "(", "pd", ".", "DataFrame", "([", "\n", "                ", "[", "file", ",", " len", "(", "df", ".", "index", ")", ",", " len", "(", "df", ".", "columns", ")]", "\n", "            ", "]", ",", " index", "=[", "file", "]))", "\n", "        ", "return", " str", "(", "summary", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", "\"", ")", "\n", "    ", "except", " Value", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " files", " found", "\"", ")", "\n", "    ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Empty", " file", " found", "\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -1.4297178983688354, -0.1208362728357315, -2.107912540435791, -0.05297886207699776, -0.0786404088139534, -0.00022027450904715806, -0.021790724247694016, -0.040748368948698044, -0.4139285087585449, -3.4570634852570947e-06, -0.00034231049357913435, -0.0022223317064344883, -0.0011835244949907064, -0.001647544908337295, -0.0157866682857275, -1.9788545614574105e-05, -3.361645576660521e-05, -0.005416716914623976, -1.607075572013855, -0.06587196886539459, -0.06599417328834534, -0.008357786573469639, -0.005528636276721954, -0.2615325450897217, -0.026021616533398628, -1.3098783493041992, -0.6031126379966736, -0.7138007283210754, -0.00016675988445058465, -0.0010122895473614335, -0.00613768957555294, -0.13440734148025513, -0.0003123987407889217, -0.0005575056420639157, -0.003452176693826914, -0.02443622797727585, -0.0011148196645081043, -0.037922974675893784, -0.10405884683132172, -1.764281842042692e-05, -2.166099786758423, -0.9644321203231812, -3.4596707820892334, -0.7185590863227844, -2.811248540878296, -0.0003813969960901886, -0.22474606335163116, -2.015976905822754, -0.01414264552295208, -0.07217254489660263, -0.10314636677503586, -0.44241371750831604, -0.1804896593093872, -0.0029167274478822947, -0.0010324153117835522, -0.001786899520084262, -0.0030223901849240065, -2.2052106857299805, -0.016316914930939674, -0.015061113983392715, -0.0005776405450887978, -0.008702803403139114, -3.7431014789035544e-05, -0.000753357307985425, -0.00014125302550382912, -0.005514765623956919, -1.0346732139587402, -2.4756858348846436, -0.42885592579841614, -0.4199930429458618, -0.31662777066230774, -0.00311211752705276, -0.5747911334037781, -1.7548867464065552, -0.39057669043540955, -0.005223792511969805, -0.3111734688282013, -0.12628377974033356, -0.0029893494211137295, -0.15588976442813873, -0.401103675365448, -0.015887461602687836, -0.008836451917886734, -0.5686025023460388, -0.12083880603313446, -0.21509552001953125, -0.001774761825799942, -0.007494311314076185, -0.6830989718437195, -1.4047889709472656, -0.0012646066024899483, -0.20229847729206085, -1.2822469472885132, -3.000758171081543, -0.005397153086960316, -0.38740071654319763, -1.0173741579055786, -0.05885415896773338, -0.49487125873565674, -0.00017176583060063422, -0.002565666101872921, -0.41722428798675537, -0.026630274951457977, -0.007679582107812166, -0.0010457528987899423, -0.017442403361201286, -0.00018785618885885924, -0.0033298067282885313, -0.005968011915683746, -0.009048409759998322, -0.5478397607803345, -0.082089364528656, -0.04796802997589111, -0.9266542792320251, -0.0004151197790633887, -0.8437361121177673, -0.20885539054870605, -0.8898206949234009, -0.4904537796974182, -0.007397639565169811, -0.24983391165733337, -0.8172368407249451, -0.8024478554725647, -0.0029302777256816626, -0.39598801732063293, -0.3725334107875824, -0.03415707126259804, -0.15663011372089386, -0.0018911350052803755, -0.3952396810054779, -8.034383063204587e-05, -1.5497195136049413e-06, -0.3287802040576935, -0.00272486568428576, -0.0007038023322820663, -0.2404002547264099, -0.10507910698652267, -0.0002236116270069033, -0.0001380348257953301, -0.3603440523147583, -0.773727536201477, -2.147160053253174, -0.4183063507080078, -0.020744502544403076, -0.7761801481246948, -0.015288544818758965, -0.009961297735571861, -0.06614738702774048, -0.003358677960932255, -0.32074737548828125, -5.364403477869928e-06, -0.013549034483730793, -0.01020464114844799, -0.0003518439189065248, -0.09605401009321213, -0.007617474067956209, -3.540453326422721e-05, -0.03497907519340515, -0.032349929213523865, -0.09257179498672485, -1.2825264930725098, -0.17673048377037048, -0.29144594073295593, -0.06606727093458176, -0.09085921943187714, -0.14187343418598175, -0.012883167713880539, -0.26528289914131165, -1.883488948806189e-05, -0.00011991735664196312, -0.0003026265767402947, -0.00043644916149787605, -0.0017803546506911516, -5.745722592109814e-05, -0.05232200771570206, -0.014729443937540054, -0.0007688426994718611, -0.060251835733652115, -0.8218489289283752, -0.0002681849291548133, -0.051230136305093765, -0.021539218723773956, -0.48357850313186646, -0.4553288221359253, -1.7645407915115356, -0.04704666882753372, -2.181558132171631, -6.318072337307967e-06, -2.50339189733495e-06, -0.00042381841922178864, -0.00013100242358632386, -0.1188565120100975], "finish_reason": "stop"}], "metrics": {"energy": 211.45462733936287, "energy_per_token": 1.0788501394865453, "time": 8.627174, "time_per_token": 0.04401619387755102}}
{"outputs": [{"text": "def print_table(file_list, table):\n        for i in file_list:\n            table.add_row(i, data[i].shape[0], data[i].shape[1])\n        return table.draw()\n\n    data = {}\n    for file in glob.glob(f\"{data_dir}/*.csv\"):\n        try:\n            data[file] = pd.read_csv(file)\n        except ValueError:\n            print(f\"Empty file: {file}\")\n\n    if not data:\n        raise ValueError(\"No CSV files found in the specified directory.\")\n    return print_table(data.keys(), Texttable())", "tokens": ["def", " print", "_", "table", "(", "file", "_", "list", ",", " table", "):", "\n", "        ", "for", " i", " in", " file", "_", "list", ":", "\n", "            ", "table", ".", "add", "_", "row", "(", "i", ",", " data", "[", "i", "]", ".", "shape", "[", "0", "]", ",", " data", "[", "i", "]", ".", "shape", "[", "1", "])", "\n", "        ", "return", " table", ".", "draw", "()", "\n", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "/*", ".", "csv", "\"", "):", "\n", "        ", "try", ":", "\n", "            ", "data", "[", "file", "]", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "        ", "except", " Value", "Error", ":", "\n", "            ", "print", "(", "f", "\"", "Empty", " file", ":", " {", "file", "}\"", ")", "\n", "\n", "    ", "if", " not", " data", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "    ", "return", " print", "_", "table", "(", "data", ".", "keys", "()", ",", " Text", "table", "())", "\n", "\n", "def"], "logprobs": [-4.324610710144043, -3.555105447769165, -0.06631775200366974, -1.2759191989898682, -0.15599685907363892, -2.2688651084899902, -0.18501468002796173, -1.3156650066375732, -1.448257565498352, -2.0817604064941406, -0.37981948256492615, -0.013660164549946785, -0.016997141763567924, -2.0402565002441406, -1.5719538927078247, -0.43869826197624207, -1.9253301620483398, -0.0004065402317792177, -0.0019556223414838314, -0.02403073012828827, -0.00987135712057352, -0.004691664129495621, -1.6390808820724487, -0.025101305916905403, -0.3924005627632141, -0.04562641307711601, -0.05108119174838066, -0.9205994009971619, -0.34888577461242676, -1.4950584173202515, -2.5047340393066406, -0.777539849281311, -0.1287972778081894, -1.990671992301941, -0.042075444012880325, -0.5623940825462341, -0.021843677386641502, -0.010208063758909702, -0.002893905621021986, -0.0025789830833673477, -0.027646241709589958, -0.00035208225017413497, -0.0002076410164590925, -0.002428798470646143, -6.079655122448457e-06, -0.003672404680401087, -0.0019664489664137363, -0.0010022860951721668, -0.008014307357370853, -0.004682884085923433, -0.26009657979011536, -1.1237423419952393, -0.2661871910095215, -0.09058160334825516, -0.009566416963934898, -0.03172707185149193, -0.0308124627918005, -0.15349259972572327, -0.0006877202540636063, -2.0068953037261963, -0.07246119529008865, -0.3198729157447815, -0.025553666055202484, -0.1723324954509735, -0.8245319724082947, -0.7357670068740845, -0.32955336570739746, -0.3132939040660858, -8.082063141046092e-05, -0.047855306416749954, -0.03621299937367439, -1.7611799240112305, -0.5961700677871704, -0.006254266947507858, -0.026741353794932365, -4.4225667807040736e-05, -2.884823152271565e-05, -0.054507821798324585, -1.2223987579345703, -0.10443294793367386, -0.009005406871438026, -0.031343698501586914, -0.014561100862920284, -0.015822691842913628, -0.007269242778420448, -0.3993993401527405, -0.0005984899471513927, -0.004922888707369566, -0.0014640099834650755, -0.21560204029083252, -0.03926033526659012, -0.9401853680610657, -0.06877774745225906, -0.0005436849314719439, -0.01827661693096161, -5.924526340095326e-05, -0.007538561709225178, -6.472854875028133e-05, -0.0004477690381463617, -0.00028951745480298996, -0.020568177103996277, -0.37335243821144104, -0.013292387127876282, -0.04734175652265549, -0.0034104774240404367, -2.043156862258911, -0.00011431517486926168, -0.3213459551334381, -0.04152895137667656, -0.003561584046110511, -1.333884835243225, -0.08052372187376022, -0.1668979823589325, -0.17203675210475922, -2.6836116313934326, -1.0969127416610718, -0.9879555702209473, -0.03421686217188835, -0.09115613996982574, -0.13303397595882416, -0.00897965207695961, -0.006510357838124037, -2.3728785514831543, -0.017911119386553764, -0.5377646088600159, -0.875457763671875, -0.05801994726061821, -0.016913222149014473, -0.026497822254896164, -0.00230202148668468, -0.07407979667186737, -0.1964651197195053, -1.4662635294371285e-05, -0.12477387487888336, -0.18833042681217194, -0.13698744773864746, -0.3025262951850891, -0.004339089151471853, -0.024280447512865067, -0.1661258041858673, -0.3882822096347809, -0.41653379797935486, -0.17134076356887817, -0.01451974455267191, -0.23731684684753418, -0.011602306738495827, -0.0003551805857568979, -0.0017227584030479193, -1.9399302005767822, -1.5969659090042114, -0.005174695514142513, -0.0008848565630614758, -2.586808113846928e-05, -0.03675355762243271, -0.30019626021385193, -0.7299594879150391, -0.006502896081656218, -0.0016145778354257345, -0.0005930095794610679, -0.019409842789173126, -0.00014399446081370115, -0.19077298045158386, -0.1803494244813919, -0.012703566811978817, -0.13352403044700623], "finish_reason": "stop"}], "metrics": {"energy": 195.70333241558072, "energy_per_token": 1.186080802518671, "time": 7.3598714, "time_per_token": 0.04460528121212121}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(f\"Directory {data_dir} doesn't exist\")\n    if os.listdir(data_dir) == []:\n        raise ValueError(\"No CSV files found in {data_dir}\")\n\n    rows = []\n    for filename in sorted(glob.glob(f\"{data_dir}/*.csv\")):\n        try:\n            df = pd.read_csv(filename)\n        except pd.errors.EmptyDataError as e:\n            print(e)\n        if df.empty:\n            continue\n        rows.append([filename, len(df), len(df.columns)])\n    table = Texttable()\n    table.set_cols_align([\"l\", \"r\", \"r\"])\n    table.set_cols_dtype(['t', 'i', 'i'])\n    table.set_cols_width([22, 4, 4])\n    table.add_rows(rows)\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "data", "_", "dir", "}", " doesn", "'", "t", " exist", "\"", ")", "\n", "    ", "if", " os", ".", "list", "dir", "(", "data", "_", "dir", ")", " ==", " []", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "rows", " =", " []", "\n", "    ", "for", " filename", " in", " sorted", "(", "glob", ".", "glob", "(", "f", "\"", "{", "data", "_", "dir", "}", "/*", ".", "csv", "\"", "))", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "        ", "if", " df", ".", "empty", ":", "\n", "            ", "continue", "\n", "        ", "rows", ".", "append", "([", "filename", ",", " len", "(", "df", ")", ",", " len", "(", "df", ".", "columns", ")]", ")", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "([", "\"", "l", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "    ", "table", ".", "set", "_", "cols", "_", "width", "([", "2", "2", ",", " ", "4", ",", " ", "4", "])", "\n", "    ", "table", ".", "add", "_", "rows", "(", "rows", ")", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -0.34346961975097656, -0.6206567883491516, -0.24714341759681702, -1.0329344272613525, -0.49376654624938965, -0.00244770641438663, -7.903263758635148e-05, -0.0012301980750635266, -0.014309766702353954, -3.033656358718872, -0.004763682838529348, -8.22540732769994e-06, -0.05086991563439369, -1.051159381866455, -0.0004742213059216738, -0.00629063555970788, -0.7724985480308533, -2.61594295501709, -2.6789255142211914, -4.017272294731811e-05, -0.46768322587013245, -1.3112935448589269e-05, -0.0024040627758949995, -0.0038481722585856915, -3.766942609217949e-05, -1.0490362910786644e-05, -0.09177090972661972, -0.0236939899623394, -0.016766231507062912, -0.0078166788443923, -0.009516824968159199, -0.0010115751065313816, -0.020925233140587807, -0.055062614381313324, -1.2874520507466514e-05, -0.11132609844207764, -1.08896005153656, -0.5271483063697815, -0.5584149956703186, -0.009390825405716896, -0.06781788915395737, -0.5257275700569153, -0.3711691200733185, -2.3124289512634277, -0.9705227613449097, -0.013631707057356834, -0.0010171722387894988, -0.31174036860466003, -0.018009239807724953, -0.004016310442239046, -0.8586261868476868, -0.0007435894221998751, -4.115943908691406, -0.3319929540157318, -0.13404887914657593, -0.023568132892251015, -0.24492046236991882, -0.446860134601593, -1.7966409921646118, -0.004834035411477089, -1.8131864070892334, -0.008638040162622929, -0.10386502742767334, -9.881961887003854e-05, -0.038434963673353195, -0.011574143543839455, -1.613582968711853, -0.2714158594608307, -0.00450690696015954, -0.008168148808181286, -1.9430925021879375e-05, -7.390948667307384e-06, -0.047382570803165436, -0.6311318278312683, -0.050232645124197006, -0.008887850679457188, -0.014680929481983185, -0.23287634551525116, -0.0016304069431498647, -0.02188275009393692, -0.010277798399329185, -0.36730509996414185, -0.00013863079948350787, -0.005083136726170778, -0.0016626594588160515, -0.5279470086097717, -0.013659223914146423, -0.008531787432730198, -1.549708758830093e-05, -0.004030320327728987, -2.3364747903542593e-05, -0.00019822540343739092, -0.00012134769349358976, -0.013483290560543537, -0.48929640650749207, -0.009067429229617119, -0.7928216457366943, -0.001856866991147399, -0.3754520118236542, -2.825220326485578e-05, -0.0003682888636831194, -0.0003215749457012862, -0.0005945583689026535, -0.005084204487502575, -8.535020606359467e-05, -2.1156015396118164, -0.3205734193325043, -0.0024040627758949995, -0.013616536743938923, -0.0014630577061325312, -0.49840468168258667, -0.02757306955754757, -1.7512922286987305, -0.08600983768701553, -0.013272859156131744, -1.3816380500793457, -3.6856560707092285, -0.9030631184577942, -0.23169122636318207, -0.1821906566619873, -0.04972689226269722, -0.06386119872331619, -0.003173436503857374, -0.6221250891685486, -0.013649463653564453, -0.08906389027833939, -0.41067999601364136, -0.022158073261380196, -0.005104485433548689, -0.3721674382686615, -0.361005961894989, -0.057749032974243164, -0.4701654613018036, -9.07141511561349e-05, -0.0014300844632089138, -1.031191110610962, -0.0006934384000487626, -0.08232861757278442, -0.00014256415306590497, -0.004575734958052635, -0.000613143783994019, -0.016898570582270622, -0.010692448355257511, -0.0007173825288191438, -0.004443889483809471, -0.5270289182662964, -0.8710756897926331, -0.005970856174826622, -0.005231381859630346, -0.00018880968855228275, -0.6446596384048462, -0.012381946668028831, -0.006035080645233393, -0.03897729888558388, -0.0007640779949724674, -0.904780387878418, -0.0008515069494023919, -0.11434326320886612, -5.709961988031864e-05, -0.2545020878314972, -1.037017822265625, -0.002897114958614111, -0.6222420334815979, -0.0011447074357420206, -0.007209239527583122, -0.035884708166122437, -0.2715921401977539, -6.758938252460212e-05, -0.006471983622759581, -0.0037423591129481792, -0.24810464680194855, -0.0003936707798857242, -0.013211450539529324, -0.018798526376485825, -0.0048963166773319244, -0.0200052447617054, -0.0003499372396618128, -0.4223945438861847, -1.2397689715726301e-05, -0.03477173671126366, -0.00010227633902104571, -0.0922994315624237, -0.03182338550686836, -1.4979243278503418, -0.11262116581201553, -0.009196422062814236, -0.002293814904987812, -0.0647117868065834, -0.05292889103293419, -0.008076745085418224, -7.354942499659956e-05, -0.010972402058541775, -0.010522008873522282, -0.008466067723929882, -0.01053687185049057, -0.014357946813106537, -0.04409167543053627, -0.0004942387458868325, -1.222164511680603, -2.825220326485578e-05, -0.12813438475131989, -9.16677454370074e-05, -0.30555570125579834, -0.029325883835554123, -0.9509236216545105, -3.4968700408935547, -0.006061504129320383, -0.03731254115700722, -2.4170703887939453, -0.003112711710855365, -0.004456706810742617, -0.1345420926809311, -0.0027416283264756203, -0.0046449145302176476, -0.027592899277806282, -0.04227430000901222, -0.000890097115188837, -0.13108576834201813, -6.318072337307967e-06, -0.053749848157167435, -0.017537757754325867, -0.006395823787897825, -0.027090413495898247, -0.0016107691917568445, -2.1114983558654785, -0.0010751663940027356, -0.18302637338638306, -0.2654436230659485, -0.0032526941504329443, -0.020752325654029846, -0.5786166787147522, -0.3074071407318115, -0.009345239959657192, -0.17101258039474487], "finish_reason": "stop"}], "metrics": {"energy": 284.1846157884595, "energy_per_token": 1.1277167293192838, "time": 11.32945, "time_per_token": 0.04495813492063492}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError\n\n    files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if len(files) == 0:\n        raise ValueError(\"No CSV files found in the specified directory.\")\n\n    table = Texttable(max_width=0)\n    table.set_cols_dtype('t')\n    table.add_row(['File', 'Rows', 'Columns'])\n    for file in files:\n        try:\n            df = pd.read_csv(file, header=None)\n            rows, columns = df.shape\n            table.add_row([file, rows, columns])\n        except pd.errors.EmptyDataError:\n            print(f\"{file} is empty!\")\n            continue\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "table", " =", " Text", "table", "(", "max", "_", "width", "=", "0", ")", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "('", "t", "')", "\n", "    ", "table", ".", "add", "_", "row", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " header", "=", "None", ")", "\n", "            ", "rows", ",", " columns", " =", " df", ".", "shape", "\n", "            ", "table", ".", "add", "_", "row", "([", "file", ",", " rows", ",", " columns", "])", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "print", "(", "f", "\"", "{", "file", "}", " is", " empty", "!", "\"", ")", "\n", "            ", "continue", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -2.293262481689453, -0.6227529048919678, -0.0003665013937279582, -1.4936258792877197, -0.12982550263404846, -0.22363027930259705, -0.0001419681793777272, -0.008039850741624832, -0.016201036050915718, -0.39272594451904297, -0.00030870441696606576, -0.0001070442158379592, -0.002513109240680933, -0.0018043918535113335, -0.001210671616718173, -0.011490829288959503, -3.194758028257638e-05, -1.6212332411669195e-05, -0.003341212635859847, -0.283368855714798, -0.07130075246095657, -0.06790298968553543, -0.009438298642635345, -0.012904939241707325, -0.009138070046901703, -0.33286792039871216, -0.14738313853740692, -0.9630957245826721, -0.00012134769349358976, -0.000590865034610033, -0.0014816269977018237, -0.12367376685142517, -0.00017891713650897145, -0.00017033556650858372, -0.0017448929138481617, -0.007303799036890268, -0.0005856229108758271, -0.013497992418706417, -0.012308355420827866, -1.811964830267243e-05, -2.3460609912872314, -0.31338444352149963, -0.21088148653507233, -0.12816889584064484, -0.002206274075433612, -0.007727018091827631, -0.09691379964351654, -0.22796665132045746, -0.4762466251850128, -0.1518031805753708, -0.010923469439148903, -0.2688140571117401, -0.00468217208981514, -0.00039319414645433426, -0.0028594343457370996, -0.03269553557038307, -0.00026556302327662706, -1.0974373817443848, -0.014956598170101643, -0.02953423745930195, -0.00021562635083682835, -1.5998718738555908, -0.5218569040298462, -0.008539234288036823, -0.12859980762004852, -0.07492859661579132, -0.8818156719207764, -0.15119104087352753, -0.04577537253499031, -0.09546548873186111, -0.23728065192699432, -0.0033883799333125353, -0.438793420791626, -0.0005769256968051195, -0.23938992619514465, -0.00027855331427417696, -2.0368404388427734, -0.1311686784029007, -3.0386948585510254, -0.614509105682373, -0.2701069116592407, -0.1286759078502655, -0.09168531000614166, -0.07293142378330231, -0.0008615119731985033, -1.2919986248016357, -3.611976353568025e-05, -1.4744782447814941, -0.16540376842021942, -0.06630659848451614, -0.06151619181036949, -0.0007490689749829471, -0.021104764193296432, -0.040843814611434937, -0.0023067789152264595, -9.357491217087954e-05, -0.0022332745138555765, -0.019233280792832375, -0.012505097314715385, -0.0034442171454429626, -0.959612250328064, -0.20600543916225433, -0.4307672679424286, -0.591253399848938, -0.09713417291641235, -0.0005631053354591131, -0.0010588521836325526, -0.0034575224854052067, -0.30769944190979004, -2.932505594799295e-05, -0.0022454068530350924, -0.0005165196489542723, -0.46375638246536255, -0.006895318161696196, -0.00678260438144207, -2.0503786799963564e-05, -0.0013135385233908892, -3.540453326422721e-05, -0.00021324267436284572, -4.5536911784438416e-05, -0.003602326614782214, -0.7489539384841919, -1.6511479616165161, -0.013266036286950111, -0.5451589822769165, -0.6033135056495667, -0.019316302612423897, -0.29194459319114685, -1.3312712907791138, -0.6918428540229797, -0.6949620246887207, -0.0016030330443754792, -0.07308534532785416, -0.00027783826226368546, -0.0046023158356547356, -0.009812453761696815, -0.08467236906290054, -0.11039482057094574, -0.0009018882992677391, -0.003485914785414934, -8.583032467868179e-06, -0.0009070096421055496, -0.008924831636250019, -0.6774860620498657, -0.08614776283502579, -0.05782070755958557, -0.0005994430393911898, -0.002117179101333022, -0.001167807262390852, -0.0007869484252296388, -0.025172684341669083, -0.002370882546529174, -0.2000007927417755, -6.9141146923357155e-06, -0.00010823617776622996, -9.953480184776708e-05, -0.0003228858404327184, -0.0013767535565420985, -2.3841574147809297e-05, -0.04384685680270195, -0.036088019609451294, -0.0008172033121809363, -1.5139291286468506, -0.09206472337245941, -0.23748081922531128, -0.0878024622797966, -1.8162868022918701, -0.02551148273050785, -0.14797931909561157, -0.39669933915138245, -0.29919731616973877, -2.2329864501953125, -0.1447100043296814, -0.004793461877852678, -0.013686858117580414, -1.3268907070159912, -0.5265753865242004, -0.009427198208868504, -0.747582197189331, -0.13728198409080505, -0.2909266948699951, -0.003613610751926899, -0.028888894245028496, -0.05913780629634857, -0.3342791795730591, -0.010555862449109554, -0.12293051928281784], "finish_reason": "stop"}], "metrics": {"energy": 261.54337911891946, "energy_per_token": 1.2758213615557046, "time": 9.0400715, "time_per_token": 0.04409790975609756}}
{"outputs": [{"text": "csv_files = glob.glob(f'{data_dir}*.csv')\n    if not csv_files:\n        raise ValueError('No CSV files found in the directory.')\n\n    # Open a new table and set its attributes\n    tb = Texttable()\n    tb.set_cols_align([\"c\", \"r\", \"r\"])\n    tb.set_cols_dtype([\"t\", \"i\", \"i\"])\n    tb.set_cols_width([10, 10, 10])\n\n    # Add rows to the table\n    for file in csv_files:\n        file_name = file.split('/')[-1]\n        try:\n            df = pd.read_csv(file)\n            rows, columns = df.shape\n            tb.add_row([file_name, rows, columns])\n        except pandas.errors.EmptyDataError:\n            tb.add_row([file_name, 'Empty', 'Empty'])\n    return tb.draw()", "tokens": ["csv", "_", "files", " =", " glob", ".", "glob", "(", "f", "'{", "data", "_", "dir", "}", "*", ".", "csv", "')", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " CS", "V", " files", " found", " in", " the", " directory", ".", "')", "\n", "\n", "    ", "#", " Open", " a", " new", " table", " and", " set", " its", " attributes", "\n", "    ", "tb", " =", " Text", "table", "()", "\n", "    ", "tb", ".", "set", "_", "cols", "_", "align", "([", "\"", "c", "\"", ",", " \"", "r", "\"", ",", " \"", "r", "\"", "])", "\n", "    ", "tb", ".", "set", "_", "cols", "_", "d", "type", "([", "\"", "t", "\"", ",", " \"", "i", "\"", ",", " \"", "i", "\"", "])", "\n", "    ", "tb", ".", "set", "_", "cols", "_", "width", "([", "1", "0", ",", " ", "1", "0", ",", " ", "1", "0", "])", "\n", "\n", "    ", "#", " Add", " rows", " to", " the", " table", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "file", "_", "name", " =", " file", ".", "split", "('/", "')", "[-", "1", "]", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ")", "\n", "            ", "rows", ",", " columns", " =", " df", ".", "shape", "\n", "            ", "tb", ".", "add", "_", "row", "([", "file", "_", "name", ",", " rows", ",", " columns", "])", "\n", "        ", "except", " pandas", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "tb", ".", "add", "_", "row", "([", "file", "_", "name", ",", " '", "Empty", "'", ",", " '", "Empty", "'])", "\n", "    ", "return", " t", "b", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.822585105895996, -0.012268790043890476, -0.10000187903642654, -0.031884122639894485, -0.526063084602356, -0.0005894353962503374, -0.011853850446641445, -0.03356139361858368, -2.012582540512085, -0.8648486137390137, -0.03760913759469986, -4.95898348162882e-05, -5.030505417380482e-05, -0.09778138995170593, -0.5098422765731812, -0.030854076147079468, -0.006434793118387461, -0.04706907272338867, -0.028482766821980476, -0.27980679273605347, -0.32367125153541565, -0.5902740359306335, -0.05092157796025276, -1.1801649634435307e-05, -1.0728830375228426e-06, -7.510157047363464e-06, -0.006627839058637619, -0.019098909571766853, -0.00112160702701658, -0.05081915855407715, -0.16496102511882782, -6.318072337307967e-06, -0.5800054669380188, -0.3833852708339691, -0.11189565807580948, -0.0015279296785593033, -0.010110946372151375, -0.09461648762226105, -0.34795066714286804, -0.22220087051391602, -2.759138345718384, -0.4110075831413269, -0.018687965348362923, -0.002212459221482277, -0.6171684265136719, -0.000454799213912338, -2.853952407836914, -3.640493154525757, -3.016545295715332, -2.8461685180664062, -1.157043695449829, -1.6014775037765503, -1.6874024868011475, -1.438370704650879, -4.161535263061523, -0.2302025705575943, -0.0012635351158678532, -2.890191078186035, -0.016396427527070045, -0.002927900291979313, -5.2569914259947836e-05, -0.39441877603530884, -0.006700784433633089, -0.07249101996421814, -0.09584487229585648, -0.001019792165607214, -0.009361537173390388, -0.002127766376361251, -0.24929937720298767, -0.00012468514614738524, -0.30971091985702515, -2.4087884426116943, -0.010944693349301815, -1.5490754842758179, -0.00021300431399140507, -0.017541270703077316, -0.059198927134275436, -0.7994857430458069, -0.00011920218821614981, -0.06508726626634598, -0.004585109651088715, -0.5718110203742981, -0.00047779586748220026, -0.02270977385342121, -0.051568713039159775, -0.11478155851364136, -0.060792792588472366, -0.0006542449118569493, -0.026120685040950775, -2.372236667724792e-05, -0.03626738116145134, -0.0001255195093108341, -0.18352608382701874, -0.04369989037513733, -0.6759412288665771, -0.030349640175700188, -0.21180479228496552, -0.0003271759778726846, -0.0028746493626385927, -0.09146318584680557, -0.06290489435195923, -0.0002493547508493066, -0.006745543330907822, -0.0062585314735770226, -0.012996961362659931, -0.0012981806648895144, -0.004036732017993927, -0.02508433349430561, -0.2899790108203888, -0.12603063881397247, -0.002292625606060028, -0.10961823910474777, -0.0036767993588000536, -0.20259329676628113, -6.913899414939806e-05, -0.1943800300359726, -0.02413034439086914, -0.43827489018440247, -0.9948201775550842, -0.006062333472073078, -0.03178643062710762, -1.533158302307129, -0.08023441582918167, -0.012422095984220505, -0.003018468152731657, -0.05576547607779503, -0.017312712967395782, -0.004437718074768782, -0.011587576940655708, -0.6705871820449829, -0.0006183857913129032, -0.3031500577926636, -1.229344129562378, -1.4472427368164062, -0.13354165852069855, -0.015720486640930176, -0.008231760002672672, -0.44943490624427795, -0.0012363893911242485, -0.17265604436397552, -0.7736313343048096, -0.600616455078125, -0.09593206644058228, -4.172316494077677e-06, -5.960462772236497e-07, -5.483612312673358e-06, -0.0009777533123269677, -0.0019596675410866737, -0.008351758122444153, -3.4537084102630615, -0.12534750998020172, -0.3813673257827759, -0.07404880225658417, -1.8606854677200317, -0.11216998845338821, -0.3210371136665344, -0.4618692696094513, -0.0025309454649686813, -0.016332512721419334, -0.0005144941387698054, -0.006601075176149607, -0.20493759214878082, -0.051852282136678696, -0.8789480924606323, -6.174850568640977e-05, -0.007284390740096569, -0.0010942192748188972, -0.41329503059387207, -0.006170270964503288, -0.011166342534124851, -1.3828182090946939e-05, -0.00236160634085536, -1.8954096958623268e-05, -0.00039426659350283444, -0.0001134808044298552, -0.011648496612906456, -0.34588727355003357, -0.011630703695118427, -0.6840596199035645, -0.6764598488807678, -1.268343448638916, -0.544935405254364, -0.0016609933227300644, -0.07103940844535828, -0.00014697425649501383, -0.006148234009742737, -0.015713326632976532, -0.4639480710029602, -0.16058599948883057, -0.0018148632952943444, -0.0029895871412009, -1.2040065485052764e-05, -0.029392099007964134, -0.026976820081472397, -0.032030873000621796, -0.005356839392334223, -5.722029527532868e-06, -0.013590076938271523, -0.04771222546696663, -0.0005308172549121082, -0.0008920027757994831, -0.0017071687616407871, -0.001689436612650752, -0.03368346393108368, -0.008063146844506264, -2.980957508087158, -0.00015686711412854493, -0.00014029949670657516, -5.090107151772827e-05, -0.00018285033002030104, -0.001320324488915503, -3.671578815556131e-05, -0.043147891759872437, -0.05792364850640297, -0.0012712739408016205, -1.1221778392791748, -0.0005998004344291985, -0.02117094211280346, -2.2172682292875834e-05, -0.005783846136182547, -0.12485121190547943, -0.08896126598119736, -0.02930261567234993, -4.0531076592742465e-06, -0.011120838113129139, -1.6865882873535156, -2.05605411529541, -0.6397983431816101, -0.00032669928623363376, -0.10020280629396439, -0.05899239704012871, -0.0035530314780771732, -0.0034113090950995684, -2.636249542236328, -0.2892597019672394, -0.18628914654254913, -0.00011252723925281316, -0.006961377803236246, -0.02125520445406437, -0.16305261850357056, -0.14248499274253845, -0.015789367258548737, -0.14271436631679535], "finish_reason": "stop"}], "metrics": {"energy": 280.03965261268604, "energy_per_token": 1.152426553961671, "time": 11.1141, "time_per_token": 0.04573703703703704}}
{"outputs": [{"text": "os.makedirs(data_dir, exist_ok=True)\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n\n    if not csv_files:\n        raise ValueError(\"No CSV files found in the specified directory.\")\n\n    for file in csv_files:\n        try:\n            # Create a DataFrame from the file using pd.read_csv\n            df = pd.read_csv(file, error_bad_lines=False)\n        except pd.errors.EmptyDataError:\n            # If the file is empty, raise an error\n            raise ValueError(f\"An empty CSV file was encountered: {file}\")\n\n    # Create a Texttable object to store the table\n    table = Texttable()\n\n    # Add the header row to the table\n    table.add_rows([['File', 'Rows', 'Columns']])\n\n    # Iterate over each CSV file\n    for file in csv_files:\n        try:\n            # Open the CSV file\n            with open(file, '", "tokens": ["os", ".", "m", "aked", "irs", "(", "data", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Create", " a", " Data", "Frame", " from", " the", " file", " using", " pd", ".", "read", "_", "csv", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " error", "_", "bad", "_", "lines", "=", "False", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "#", " If", " the", " file", " is", " empty", ",", " raise", " an", " error", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "An", " empty", " CS", "V", " file", " was", " encountered", ":", " {", "file", "}\"", ")", "\n", "\n", "    ", "#", " Create", " a", " Text", "table", " object", " to", " store", " the", " table", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "\n", "    ", "#", " Add", " the", " header", " row", " to", " the", " table", "\n", "    ", "table", ".", "add", "_", "rows", "([", "['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", "])", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " CS", "V", " file", "\n", "    ", "for", " file", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " Open", " the", " CS", "V", " file", "\n", "            ", "with", " open", "(", "file", ",", " '"], "logprobs": [-4.30434513092041, -0.007724297232925892, -0.5190173387527466, -0.00011955977242905647, -0.0009764432325027883, -0.270785391330719, -0.18369543552398682, -4.494089080253616e-05, -2.992108420585282e-05, -0.019245559349656105, -0.02086452580988407, -1.1920928244535389e-07, -5.590759246842936e-05, -0.0037354708183556795, -0.0016211237525567412, -0.002006661845371127, -0.06660497933626175, -0.2834910452365875, -1.7352217435836792, -0.011331840418279171, -0.07460469752550125, -0.018262337893247604, -0.2935729920864105, -0.00014852374442853034, -0.006249646656215191, -0.02384776622056961, -0.46071678400039673, -0.001141968765296042, -0.00033361115492880344, -0.003542459337040782, -0.0015281677478924394, -0.0021578615996986628, -0.010447925888001919, -2.932505594799295e-05, -1.680836794548668e-05, -0.0018156962469220161, -0.30456826090812683, -0.06698109209537506, -0.020254099741578102, -0.004815172404050827, -0.011204301379621029, -0.009258195757865906, -1.4718378782272339, -0.000102037942269817, -0.18106146156787872, -0.4552615284919739, -0.028014807030558586, -8.702239938429557e-06, -7.152555099310121e-07, -3.814689989667386e-06, -0.005093811079859734, -0.009136534295976162, -0.0007898071780800819, -0.05641241371631622, -0.1147223636507988, -5.722029527532868e-06, -0.880815327167511, -0.37226882576942444, -0.2677534520626068, -0.06176378205418587, -0.0009856133256107569, -0.003854466136544943, -0.05563107877969742, -0.10363215953111649, -0.33813363313674927, -0.1304943859577179, -0.016533154994249344, -0.12122537940740585, -0.012427511624991894, -0.00011896379146492109, -0.0033522620797157288, -0.07242948561906815, -0.00035589560866355896, -2.2391934394836426, -0.7663004398345947, -0.7417964935302734, -0.02993670105934143, -4.6491513785440475e-06, -3.6954811548639555e-06, -2.062299427052494e-05, -0.001209838199429214, -0.004731530323624611, -0.007565063424408436, -0.5228742361068726, -5.090107151772827e-05, -0.003524403553456068, -0.0012625826057046652, -3.120814800262451, -3.601193904876709, -0.3889640271663666, -2.6166374683380127, -0.0159072894603014, -0.34256404638290405, -0.0977776050567627, -3.0186374187469482, -1.336683750152588, -3.1147501468658447, -0.08959362655878067, -0.015888985246419907, -0.0006300609675236046, -0.001978822285309434, -0.8557970523834229, -0.000617551791947335, -0.12224937975406647, -0.0048123253509402275, -0.001511027687229216, -0.0007154765771701932, -0.0022172171156853437, -2.3841855067985307e-07, -6.19869097135961e-05, -2.3245540432981215e-05, -0.0033968149218708277, -1.7817339897155762, -1.977257490158081, -0.00022957073815632612, -0.03581570088863373, -2.264974000354414e-06, -0.051351651549339294, -0.0008147019543685019, -0.013153214938938618, -0.3788166344165802, -0.04766073822975159, -0.4784391224384308, -0.003997787833213806, -0.13393399119377136, -1.5735502529423684e-05, -0.0004210777406115085, -0.0001382732152706012, -0.0008188708452507854, -0.002431414555758238, -3.862306402879767e-05, -0.1268448829650879, -0.1132676973938942, -0.001763456966727972, -0.9035340547561646, -0.5760432481765747, -1.059037446975708, -0.12947146594524384, -0.10563100129365921, -0.018558669835329056, -0.046399787068367004, -0.5606086850166321, -0.4289744794368744, -0.48446887731552124, -0.2260952889919281, -0.00030858523678034544, -0.12819206714630127, -0.30266618728637695, -1.680836794548668e-05, -0.024602800607681274, -0.2505056858062744, -0.029183020815253258, -3.277787923812866, -0.011043498292565346, -0.1743854135274887, -3.40932747349143e-05, -0.001128513365983963, -0.2895994782447815, -0.38736897706985474, -0.11918479949235916, -0.016973232850432396, -0.022727835923433304, -0.11558929830789566, -0.0009652484441176057, -0.006252727005630732, -0.8182321190834045, -1.4239048957824707, -0.49405521154403687, -1.3030726909637451, -0.1989845484495163, -0.39071565866470337, -0.3386715054512024, -0.37817293405532837, -1.0388822555541992, -1.2270948886871338, -0.02434118092060089, -0.6431468725204468, -0.8262205719947815, -0.0008578196284361184, -0.24932660162448883, -0.004154385533183813, -0.0025000290479511023, -6.4490144723095e-05, -0.4876936078071594, -0.0014157997211441398, -0.2280280590057373, -0.00017486473370809108, -0.15228545665740967, -0.8715969324111938, -0.6934008002281189, -0.8865243196487427, -0.3915698230266571, -0.5719950199127197, -0.0016708712792024016, -0.06431324034929276, -0.08552197366952896, -0.0002791491860989481, -0.5573891401290894, -0.0015424508601427078, -0.03190109506249428, -0.00039617318543605506, -1.5770633220672607, -0.10153152048587799, -0.43668487668037415, -0.014558280818164349, -0.042457353323698044, -0.0004583738627843559, -0.01190014649182558, -0.024697009474039078, -0.0022514727897942066, -4.6132929128361866e-05, -0.0013050857232883573, -0.006530728656798601, -0.003032373497262597, -0.31619009375572205, -0.0025213139597326517, -0.020336920395493507, -0.0001787979417713359, -0.43271318078041077, -0.5333616137504578, -0.0006194579764269292, -0.5548105239868164, -1.1770551204681396, -0.9775503873825073, -1.811964830267243e-05, -0.0006536492728628218, -1.131533145904541, -0.0006023023161105812, -0.007334922440350056, -0.09917064756155014, -0.021509116515517235, -0.030338885262608528, -9.059865078597795e-06, -1.311301275563892e-06, -1.5497195136049413e-06, -0.00016556799528189003, -0.00020668754586949944, -0.014366877265274525, -1.1042430400848389, -6.198863957251888e-06, -0.0010798105504363775, -0.0009813260985538363, -0.08527625352144241, -3.6189322471618652, -0.032763026654720306, -0.8803043961524963, -1.9907753085135482e-05, -0.0010793342953547835, -2.2194223403930664, -0.000254241080256179, -0.16815945506095886, -0.022128107026219368, -0.0001399419124936685, -0.0006957017467357218, -0.1618867963552475, -0.0970267504453659], "finish_reason": "length"}], "metrics": {"energy": 277.6808444738388, "energy_per_token": 1.0846907987259329, "time": 11.356204, "time_per_token": 0.044360171875}}
{"outputs": [{"text": "try:\n        # Get all CSV files in the specified directory\n        csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n        if not csv_files:\n            raise ValueError('No CSV files found in the specified directory.')\n\n        # Loop through CSV files and generate table\n        table = Texttable(max_width=90)\n        table.add_row(['File', 'Rows', 'Columns'])\n        for filename in csv_files:\n            try:\n                df = pd.read_csv(filename, index_col=False, header=0, skipfooter=1)\n            except ValueError as e:\n                if str(e).startswith(\"'empty'\"):\n                    raise ValueError(f\"EmptyDataError: File {filename} does not have rows.\")\n                else:\n                    raise\n            table.add_row([filename, len(df.index), len(df.columns)])\n\n        return table.draw()\n\n    except FileNotFoundError:\n        raise FileNotFoundError(f", "tokens": ["try", ":", "\n", "        ", "#", " Get", " all", " CS", "V", " files", " in", " the", " specified", " directory", "\n", "        ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "        ", "if", " not", " c", "sv", "_", "files", ":", "\n", "            ", "raise", " Value", "Error", "('", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "')", "\n", "\n", "        ", "#", " Loop", " through", " CS", "V", " files", " and", " generate", " table", "\n", "        ", "table", " =", " Text", "table", "(", "max", "_", "width", "=", "9", "0", ")", "\n", "        ", "table", ".", "add", "_", "row", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "        ", "for", " filename", " in", " c", "sv", "_", "files", ":", "\n", "            ", "try", ":", "\n", "                ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ",", " index", "_", "col", "=", "False", ",", " header", "=", "0", ",", " skip", "footer", "=", "1", ")", "\n", "            ", "except", " Value", "Error", " as", " e", ":", "\n", "                ", "if", " str", "(", "e", ")", ".", "start", "sw", "ith", "(", "\"", "'", "empty", "'", "\"", "):", "\n", "                ", "    ", "raise", " Value", "Error", "(", "f", "\"", "Empty", "Data", "Error", ":", " File", " {", "filename", "}", " does", " not", " have", " rows", ".", "\"", ")", "\n", "                ", "else", ":", "\n", "                ", "    ", "raise", "\n", "            ", "table", ".", "add", "_", "row", "([", "filename", ",", " len", "(", "df", ".", "index", ")", ",", " len", "(", "df", ".", "columns", ")]", ")", "\n", "\n", "        ", "return", " table", ".", "draw", "()", "\n", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -2.2323226928710938, -2.934727907180786, -1.0294287204742432, -0.4211842119693756, -0.0012296028435230255, -0.01758508011698723, -0.281630277633667, -0.13735567033290863, -0.4633522033691406, -0.05320744216442108, -0.17949552834033966, -0.0008023141999728978, -0.40868523716926575, -0.002723557874560356, -0.01118355430662632, -0.002408343832939863, -0.15577419102191925, -0.000102037942269817, -0.005238260142505169, -0.010039075277745724, -0.22388198971748352, -2.9802276912960224e-06, -0.00013445904187392443, -0.002253019018098712, -0.0009357126546092331, -0.0010971962474286556, -0.012381946668028831, -1.168244216387393e-05, -1.9788545614574105e-05, -0.0033192322589457035, -0.3167456388473511, -0.0649021714925766, -0.005994081497192383, -0.001958953682333231, -0.006883834023028612, -0.0026931229513138533, -1.068197250366211, -0.49519941210746765, -0.48614078760147095, -0.00839514285326004, -3.099436753473128e-06, -3.576278118089249e-07, -4.768360213347478e-06, -0.0022934582084417343, -0.028822878375649452, -0.000573351513594389, -0.046826232224702835, -0.06286201626062393, -5.602820692729438e-06, -0.8887060284614563, -0.19612275063991547, -0.02850860357284546, -0.0005745429079979658, -0.001898868940770626, -0.04732402041554451, -0.12534204125404358, -0.20384809374809265, -0.09656284749507904, -0.006458718329668045, -0.26902449131011963, -0.007126743905246258, -0.002974611707031727, -0.5690617561340332, -0.023834845051169395, -0.21336902678012848, -4.157766342163086, -0.16487723588943481, -1.7903435230255127, -0.00020180096908006817, -0.0007827793597243726, -0.2529793679714203, -1.739837884902954, -1.6146562099456787, -1.160662055015564, -0.0009734659106470644, -0.3318827152252197, -0.027699580416083336, -0.025666607543826103, -0.00023338454775512218, -1.6769139766693115, -0.7103795409202576, -0.0240952018648386, -0.11113613843917847, -0.06756945699453354, -3.1150951385498047, -0.7009521722793579, -0.24974550306797028, -0.03676573559641838, -0.016720393672585487, -0.20502285659313202, -0.004861558321863413, -1.3158193826675415, -0.0016934829764068127, -1.5374255180358887, -0.0641140267252922, -0.04620926082134247, -0.08101271092891693, -0.0012644876260310411, -0.015315077267587185, -0.03517187014222145, -0.001500672078691423, -8.153582894010469e-05, -0.0015126940561458468, -0.014574142172932625, -0.00992494449019432, -0.007741212844848633, -0.10291924327611923, -0.03818875551223755, -2.1252636909484863, -0.004894537385553122, -0.1349508911371231, -2.3483953555114567e-05, -1.1920922133867862e-06, -2.7418097943154862e-06, -0.00022802136663813144, -0.0011207734933122993, -0.004088615067303181, -0.3702927529811859, -2.098061486321967e-05, -0.002769803162664175, -0.0003040566807612777, -0.6012808680534363, -0.004226324148476124, -0.008444790728390217, -1.3828182090946939e-05, -0.0011994794476777315, -1.4066597032069694e-05, -0.00023707917716819793, -4.172238186583854e-05, -0.004276298452168703, -1.1256465911865234, -0.9164688587188721, -0.00010799778101500124, -0.002047110814601183, -0.03245829790830612, -0.5238274335861206, -1.5827720165252686, -0.9495506286621094, -0.011560945771634579, -0.5734543800354004, -1.4497872591018677, -2.385194778442383, -3.0824131965637207, -0.042219217866659164, -1.4680243730545044, -0.6075063347816467, -0.06381970643997192, -1.5500901937484741, -0.003491260576993227, -3.177468776702881, -0.00010084597306558862, -0.8425153493881226, -0.13167208433151245, -0.0009609610424377024, -0.01712394505739212, -0.0008643704932183027, -0.9504414200782776, -1.2173672914505005, -0.0004539651272352785, -0.003925001714378595, -0.008855239488184452, -0.807147204875946, -0.45896926522254944, -4.291525328881107e-06, -1.1920928244535389e-07, -1.6785513162612915, -0.027286473661661148, -2.871185302734375, -1.944869041442871, -1.515026330947876, -0.1004716232419014, -0.03270072862505913, -0.051764559000730515, -0.00018010901112575084, -0.0005546461907215416, -0.7397817373275757, -0.5979925990104675, -9.179073458653875e-06, -0.31957635283470154, -0.21640877425670624, -0.5094279646873474, -0.5262342095375061, -1.812371015548706, -0.008118605241179466, -0.9645838737487793, -1.8480048179626465, -0.6709950566291809, -0.030512919649481773, -0.15506115555763245, -3.2955739498138428, -0.0018882793374359608, -0.8233394026756287, -2.8012614250183105, -1.0242869853973389, -0.05556454882025719, -0.0017744047800078988, -0.01102463435381651, -0.14804264903068542, -0.1980968415737152, -2.396077979938127e-05, -0.018965456634759903, -7.331102824537084e-05, -0.00011443436960689723, -0.09033320099115372, -1.4828391075134277, -0.10295290499925613, -1.0142673254013062, -0.009966609068214893, -0.0012430568458512425, -5.722029527532868e-06, -0.0017314456636086106, -0.016745716333389282, -0.11201673746109009, -0.04503228887915611, -0.5947147607803345, -7.652943895664066e-05, -0.0011016021016985178, -0.9846302270889282, -0.03202798590064049, -0.023394867777824402, -0.003761004889383912, -0.021499667316675186, -9.500529267825186e-05, -0.003118891501799226, -0.0026209547650069, -0.006363723427057266, -0.0029690254013985395, -0.0015981532633304596, -0.0010854073334485292, -0.4576689302921295, -0.11468643695116043, -0.19417762756347656, -0.2886665165424347, -0.0018340209499001503, -0.013140390627086163, -0.05828684940934181, -0.024775974452495575, -0.4919464886188507, -0.008815182372927666, -0.013060853816568851, -0.18856719136238098, -4.017272294731811e-05, -2.0265558760002023e-06, -0.7578797936439514, -0.0019964303355664015, -0.00035041390219703317, -0.19993159174919128, -0.06234491616487503, -0.00010048838157672435, -5.9126061387360096e-05, -0.18196460604667664, -0.31092244386672974], "finish_reason": "length"}], "metrics": {"energy": 308.5164221487046, "energy_per_token": 1.2051422740183773, "time": 12.176131, "time_per_token": 0.04756301171875}}
{"outputs": [{"text": "try:\n        csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    except FileNotFoundError:\n        raise FileNotFoundError\n    if not csv_files:\n        raise ValueError\n\n    df = pd.DataFrame(columns=['File', 'Rows', 'Columns'])\n    for f in csv_files:\n        try:\n            df.loc = df.loc + 1\n            df.loc['File'] = os.path.basename(f)\n            df.loc['Rows'] = pd.read_csv(f).shape[0]\n            df.loc['Columns'] = pd.read_csv(f).shape[1]\n        except ValueError:\n            df.loc['File'] = os.path.basename(f) + ' (empty)'\n            df.loc['Rows'] = 0\n            df.loc['Columns'] = 0\n\n    output = Texttable()\n    output.add_rows(df.to_numpy())\n    output.set_cols_dtype(['t', 'i', 'i", "tokens": ["try", ":", "\n", "        ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " f", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", ".", "loc", " =", " df", ".", "loc", " +", " ", "1", "\n", "            ", "df", ".", "loc", "['", "File", "']", " =", " os", ".", "path", ".", "bas", "ename", "(", "f", ")", "\n", "            ", "df", ".", "loc", "['", "Rows", "']", " =", " pd", ".", "read", "_", "csv", "(", "f", ")", ".", "shape", "[", "0", "]", "\n", "            ", "df", ".", "loc", "['", "Columns", "']", " =", " pd", ".", "read", "_", "csv", "(", "f", ")", ".", "shape", "[", "1", "]", "\n", "        ", "except", " Value", "Error", ":", "\n", "            ", "df", ".", "loc", "['", "File", "']", " =", " os", ".", "path", ".", "bas", "ename", "(", "f", ")", " +", " '", " (", "empty", ")'", "\n", "            ", "df", ".", "loc", "['", "Rows", "']", " =", " ", "0", "\n", "            ", "df", ".", "loc", "['", "Columns", "']", " =", " ", "0", "\n", "\n", "    ", "output", " =", " Text", "table", "()", "\n", "    ", "output", ".", "add", "_", "rows", "(", "df", ".", "to", "_", "numpy", "())", "\n", "    ", "output", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -2.3397140502929688, -0.01148929726332426, -0.04911930859088898, -0.014737079851329327, -0.35658642649650574, -0.00024279984063468874, -0.00935303419828415, -0.017439357936382294, -0.34815332293510437, -2.622600959512056e-06, -0.00044347942457534373, -0.0018452061340212822, -0.0023340145125985146, -0.0018869704799726605, -0.018489627167582512, -9.775113539944869e-06, -2.0503786799963564e-05, -0.0035602774005383253, -0.2532621920108795, -0.06917573511600494, -0.014869689010083675, -0.0037216939963400364, -0.011134631000459194, -0.012676259502768517, -0.5600482821464539, -0.0018208129331469536, -0.14328627288341522, -4.5060096454108134e-05, -1.5497195136049413e-06, -0.2204127013683319, -0.009851998649537563, -0.0007391819381155074, -0.6508980989456177, -0.04128888249397278, -8.928377064876258e-05, -0.00011860620725201443, -2.5373754501342773, -0.3825348913669586, -0.5539584159851074, -0.5334154367446899, -0.025903603062033653, -1.1324817933200393e-05, -1.7881377516459906e-06, -6.794906312279636e-06, -0.0028046341612935066, -0.009168427437543869, -0.0006407829932868481, -0.010127231478691101, -0.0161175187677145, -1.3232143828645349e-05, -0.1369829773902893, -0.9241889715194702, -0.000582525331992656, -4.263195991516113, -0.8676210045814514, -0.6257494688034058, -0.00022098960471339524, -0.6668688058853149, -0.9294456839561462, -0.21293161809444427, -0.11237594485282898, -0.09672193974256516, -0.04387960210442543, -0.00010406429646536708, -0.01835784688591957, -0.02901778742671013, -0.001210552523843944, -1.2516897186287679e-05, -0.0014782940270379186, -0.009231384843587875, -0.06996335089206696, -0.005798068828880787, -0.2917362451553345, -0.18053165078163147, -2.1209945678710938, -0.3071961998939514, -0.03802695497870445, -1.680836794548668e-05, -1.311301275563892e-06, -2.3841830625315197e-06, -0.0008185135084204376, -0.002514655003324151, -0.003356539411470294, -0.12360455840826035, -5.328513361746445e-05, -0.0014263942139223218, -0.000614216027315706, -0.22073538601398468, -1.0946321487426758, -0.06367363035678864, -1.3746109008789062, -0.889123797416687, -0.00944018829613924, -0.25710880756378174, -0.18093423545360565, -0.4867614805698395, -0.0058884951286017895, -0.16724123060703278, -0.06937550753355026, -0.4091651141643524, -0.3186279833316803, -0.2688518762588501, -0.6834953427314758, -0.13204425573349, -0.0836838036775589, -0.0807327851653099, -1.630007028579712, -0.0012204349040985107, -0.0005710878176614642, -0.004617266822606325, -0.12215981632471085, -5.960462772236497e-07, -0.0006848612101748586, -0.01188577525317669, -0.011194516904652119, -0.08703041821718216, -0.017109882086515427, -0.10395979136228561, -0.01983720250427723, -0.00520896865054965, -0.053568512201309204, -0.04728911444544792, -0.007902784273028374, -0.14185388386249542, -0.7719988226890564, -0.0006202919175848365, -0.42499232292175293, -7.223821739898995e-05, -0.003301291260868311, -0.0002315968304174021, -0.035670310258865356, -0.5348526835441589, -0.002343410160392523, -0.15820853412151337, -0.00315644359216094, -0.0017997510731220245, -0.0010798105504363775, -0.010030105710029602, -0.0006227937992662191, -0.002846715273335576, -0.0015338810626417398, -0.0003618539194576442, -0.0018065337790176272, -0.0009602464851923287, -4.362964682513848e-05, -0.000976919662207365, -0.014749178662896156, -9.7508447652217e-05, -0.00045944625162519515, -3.099436753473128e-06, -0.00012599628826137632, -2.002696055569686e-05, -0.0018116504652425647, -0.0106009216979146, -0.0001770101225702092, -0.0023613683879375458, -0.00225623045116663, -0.0010569468140602112, -0.00013696208770852536, -0.0012903229799121618, -0.14288219809532166, -0.008539943024516106, -1.2665603160858154, -0.00013660451804753393, -0.14997875690460205, -0.053351547569036484, -0.003446711925789714, -1.1161315441131592, -0.10184542089700699, -0.18021175265312195, -1.3528800010681152, -0.12214989960193634, -0.008754917420446873, -0.027792686596512794, -0.1766982078552246, -0.000278195773717016, -0.00027891082572750747, -0.00022480344341602176, -0.003676324151456356, -6.806619057897478e-05, -0.0002996472467202693, -0.002705843886360526, -0.008040678687393665, -2.3315303325653076, -0.31777137517929077, -1.2172261476516724, -0.9347888827323914, -0.5649884939193726, -0.005178609397262335, -0.049368515610694885, -0.021983861923217773, -0.002397997537627816, -0.0016611122991889715, -0.009123777039349079, -0.0084481006488204, -0.000433112756581977, -0.011748645454645157, -0.32001107931137085, -0.014513283036649227, -0.0035782139748334885, -0.002393359551206231, -0.0007789676310494542, -0.0005119920242577791, -0.00013910756388213485, -0.0005882440018467605, -0.0006596058374270797, -6.246371776796877e-05, -0.00019524575327523053, -0.0040738931857049465, -0.0035878352355211973, -0.0030618475284427404, -0.9537144899368286, -0.014248069375753403, -4.218634605407715, -0.15990951657295227, -0.38474053144454956, -0.00033361115492880344, -0.4102112352848053, -0.05580775439739227, -0.01351622212678194, -0.09315419942140579, -0.0012020989088341594, -0.7269242405891418, -0.0033820830285549164, -0.08119583874940872, -0.03697070851922035, -0.02747182361781597, -0.008418075740337372, -1.575574278831482, -6.198863957251888e-06, -0.04109680652618408, -1.3015626668930054, -0.003604345954954624, -0.3022727370262146, -1.1062555313110352, -0.2460351288318634, -0.03197718411684036, -0.00016640232934150845, -0.1786154806613922, -3.135155202471651e-05, -1.014423131942749, -0.044663675129413605, -0.35463154315948486, -0.2872150242328644, -0.18929708003997803, -0.00378380692563951, -0.06732819974422455, -0.3496839702129364, -0.024036431685090065, -2.610649426060263e-05, -0.006244908086955547, -0.023185579106211662], "finish_reason": "length"}], "metrics": {"energy": 291.3894680347443, "energy_per_token": 1.13824010951072, "time": 11.528528, "time_per_token": 0.0450333125}}
{"outputs": [{"text": "data_dir = data_dir.rstrip('/')\n\n    try:\n        csv_files = glob.glob(data_dir + '/*.csv')\n    except FileNotFoundError:\n        raise FileNotFoundError(f\"The directory '{data_dir}' does not exist\")\n\n    if len(csv_files) == 0:\n        raise ValueError(f\"No CSV files found in directory '{data_dir}'\")\n\n    tables = [pd.read_csv(file, index_col=False, header=0) for file in csv_files]\n    table = Texttable(max_width=None)\n    rows = []\n\n    for idx, table in enumerate(tables):\n        if table.empty:\n            raise pandas.errors.EmptyDataError(f\"The {idx+1}th CSV file is empty\")\n\n        file_name = os.path.basename(csv_files[idx])\n        rows.append((file_name, table.shape[0], table.shape[1]))\n\n    table.set_cols_align(['l', '", "tokens": ["data", "_", "dir", " =", " data", "_", "dir", ".", "r", "strip", "('/", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "data", "_", "dir", " +", " '", "/*", ".", "csv", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "data", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "csv", "_", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " directory", " '", "{", "data", "_", "dir", "}'", "\"", ")", "\n", "\n", "    ", "tables", " =", " [", "pd", ".", "read", "_", "csv", "(", "file", ",", " index", "_", "col", "=", "False", ",", " header", "=", "0", ")", " for", " file", " in", " c", "sv", "_", "files", "]", "\n", "    ", "table", " =", " Text", "table", "(", "max", "_", "width", "=", "None", ")", "\n", "    ", "rows", " =", " []", "\n", "\n", "    ", "for", " idx", ",", " table", " in", " enumerate", "(", "tables", "):", "\n", "        ", "if", " table", ".", "empty", ":", "\n", "            ", "raise", " pandas", ".", "errors", ".", "Empty", "Data", "Error", "(", "f", "\"", "The", " {", "idx", "+", "1", "}", "th", " CS", "V", " file", " is", " empty", "\"", ")", "\n", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "files", "[", "idx", "])", "\n", "        ", "rows", ".", "append", "((", "file", "_", "name", ",", " table", ".", "shape", "[", "0", "]", ",", " table", ".", "shape", "[", "1", "]))", "\n", "\n", "    ", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'", ",", " '"], "logprobs": [-3.4974279403686523, -0.17635078728199005, -0.5143863558769226, -0.11418067663908005, -1.4418444633483887, -9.798523387871683e-05, -0.002279899315908551, -0.7905308604240417, -0.7197192907333374, -0.002847547410055995, -0.3924655318260193, -0.012857277877628803, -0.3954480290412903, -1.6015625, -0.00044252615771256387, -2.1424903869628906, -0.0005777596961706877, -0.0071874624118208885, -0.00858863815665245, -1.847901701927185, -0.004491004627197981, -0.045103512704372406, -0.014210931025445461, -0.34078526496887207, -0.0002044230350293219, -0.010968275368213654, -0.010989616625010967, -1.8363523483276367, -0.0001294529065489769, -8.237022848334163e-05, -0.04214173182845116, -0.3545953333377838, -0.22008521854877472, -0.018105007708072662, -0.00395266804844141, -0.04086212441325188, -0.013631471432745457, -0.6060311198234558, -0.00134080124553293, -0.21736085414886475, -6.842378934379667e-05, -1.4305104514278355e-06, -0.22798116505146027, -0.013798443600535393, -0.0013440155889838934, -0.6826799511909485, -0.027460457757115364, -9.083335316972807e-05, -0.00013219437096267939, -0.3972287178039551, -0.5214611291885376, -0.3530927002429962, -1.9934518337249756, -1.1908929347991943, -0.9118313789367676, -0.0012530578533187509, -0.0028131932485848665, -8.809178689261898e-05, -0.0004936429904773831, -0.004463115707039833, -0.1977999210357666, -0.0005677518784068525, -0.003522621700540185, -2.2456367015838623, -0.0003033416287507862, -0.0030567371286451817, -0.3810062110424042, -0.00012420836719684303, -0.14342322945594788, -1.1148028373718262, -0.00011514954530866817, -0.0008211340173147619, -8.344646857949556e-07, -1.2040065485052764e-05, -0.0008381668012589216, -0.0935882031917572, -0.00018559163436293602, -9.63164638960734e-05, -0.0015998195158317685, -0.005792379844933748, -0.0005349873681552708, -0.025111420080065727, -0.013616536743938923, -1.0609570381348021e-05, -0.1132342740893364, -0.7334302663803101, -0.017038395628333092, -0.21654000878334045, -0.09774560481309891, -0.0008973624208010733, -0.00409122696146369, -0.07883113622665405, -0.014176495373249054, -2.5794503688812256, -0.2763110101222992, -0.0005876483046449721, -0.0032593482173979282, -7.188061863416806e-05, -0.00028975578607060015, -0.0053400020115077496, -0.04519979655742645, -0.0001426833332516253, -0.0011973362416028976, -0.01205433439463377, -0.000456109904916957, -4.1148223876953125, -0.038975466042757034, -1.933184027671814, -1.356833815574646, -0.000596107158344239, -0.021983394399285316, -1.549708758830093e-05, -0.001085883704945445, -0.0016550427535548806, -0.8523404002189636, -1.1472119092941284, -1.5502049922943115, -0.0001445904199499637, -0.0012809175532311201, -0.024811094626784325, -0.6842305660247803, -1.2448105812072754, -0.8816474676132202, -0.015154581516981125, -0.9221173524856567, -0.45894432067871094, -0.10580356419086456, -0.00029762129997834563, -0.0007979070069268346, -0.018422335386276245, -8.106198947643861e-06, -3.576272320060525e-06, -3.6954811548639555e-06, -0.03487708047032356, -0.008800412528216839, -0.9977344870567322, -2.332195281982422, -0.29066500067710876, -0.16969634592533112, -0.0004914983292110264, -0.8565424680709839, -0.6528280973434448, -0.025653012096881866, -0.1732492744922638, -0.09341232478618622, -2.0908708572387695, -0.14712674915790558, -0.04697933793067932, -0.5260019302368164, -2.807945489883423, -0.09074633568525314, -0.538038432598114, -0.005417190957814455, -0.5112865567207336, -0.00012289722508285195, -0.15357613563537598, -2.7030892372131348, -0.023743465542793274, -0.9790748357772827, -0.13963939249515533, -0.0007134514744393528, -0.0007068996201269329, -0.0013196102809160948, -0.0812927782535553, -0.0022999995853751898, -0.010000364854931831, -2.539193630218506, -1.0415557622909546, -0.00622370233759284, -0.03928085416555405, -0.009394249878823757, -0.0316607803106308, -0.0007616956136189401, -0.3275715708732605, -1.275385856628418, -0.0008632985409349203, -0.00033861625706776977, -5.7338023907504976e-05, -0.00022075122979003936, -0.003690695622935891, -8.332382276421413e-05, -0.08565350621938705, -0.23535270988941193, -0.09943941980600357, -3.2523975372314453, -3.76851487159729, -0.12326295673847198, -0.7538577318191528, -0.0009188005933538079, -0.05681749805808067, -0.5744688510894775, -0.7478119134902954, -0.00010597144137136638, -0.014650738798081875, -0.39176708459854126, -0.014291551895439625, -0.23855486512184143, -0.001369729870930314, -0.004937479272484779, -0.7026241421699524, -0.0029337245505303144, -2.3372750282287598, -0.10876353085041046, -0.2430989295244217, -0.061461709439754486, -0.18412479758262634, -3.2186455882765586e-06, -0.0002805792901199311, -0.0007176207727752626, -0.0869831070303917, -2.3841855067985307e-07, -9.178694017464295e-05, -0.03824245184659958, -1.6689286894688848e-06, -3.7788631743751466e-05, -0.0003875934926327318, -0.0004975749761797488, -0.017713095992803574, -0.051643095910549164, -0.07586529850959778, -0.3579238951206207, -0.018598688766360283, -0.004400926176458597, -2.4583053588867188, -0.08319677412509918, -7.092700980138034e-05, -1.7165990357170813e-05, -0.004422408062964678, -1.0960524082183838, -0.0019831054378300905, -0.07072902470827103, -0.003545072628185153, -0.001653733546845615, -0.0006772369961254299, -0.0004898302140645683, -0.005108518060296774, -1.0847986231965479e-05, -0.0020532971248030663, -0.0011481605470180511, -0.00017236177518498152, -0.02721826173365116, -0.0018538922304287553, -0.0581982247531414, -0.005321385804563761, -0.21874038875102997, -0.002421425189822912, -2.2959277629852295, -0.00032145579461939633, -0.08318536728620529, -0.0002675890573300421, -0.45822831988334656, -0.11801262944936752, -0.5910761952400208, -0.018492436036467552, -0.0005210472736507654, -0.04476911947131157], "finish_reason": "length"}], "metrics": {"energy": 279.5871543884278, "energy_per_token": 1.092137321829796, "time": 11.548216, "time_per_token": 0.04511021875}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"Directory {} not found!\".format(data_dir))\n\n    try:\n        csv_files = [file for file in glob.glob(data_dir + '*.csv')]\n    except FileNotFoundError:\n        raise FileNotFoundError(\"Directory {} not found!\".format(data_dir))\n\n    if not csv_files:\n        raise ValueError(\"No CSV files in directory {}\".format(data_dir))\n\n    table = Texttable()\n    table.set_precision(6)\n    headers = ['File', 'Rows', 'Columns']\n    table.add_rows([headers] + [get_file_info(file) for file in csv_files])\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " {}", " not", " found", "!", "\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "\n", "    ", "try", ":", "\n", "        ", "csv", "_", "files", " =", " [", "file", " for", " file", " in", " glob", ".", "glob", "(", "data", "_", "dir", " +", " '", "*", ".", "csv", "')", "]", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " {}", " not", " found", "!", "\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " in", " directory", " {", "}\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "precision", "(", "6", ")", "\n", "    ", "headers", " =", " ['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", "\n", "    ", "table", ".", "add", "_", "rows", "([", "headers", "]", " +", " [", "get", "_", "file", "_", "info", "(", "file", ")", " for", " file", " in", " c", "sv", "_", "files", "])", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -0.34346961975097656, -1.0537011623382568, -1.022749662399292, -2.4483487606048584, -1.1058521270751953, -0.009159568697214127, -2.1123046875, -0.05280168727040291, -0.004141207784414291, -0.0015334049239754677, -0.0003149013500660658, -0.0069288220256567, -0.00010358751023886725, -0.0007495454628951848, -0.0028571756556630135, -0.0008956949459388852, -0.5533976554870605, -0.00037043384509161115, -3.6962809562683105, -0.0008436457719653845, -0.008539116010069847, -0.00867006741464138, -1.2984602451324463, -0.011153257451951504, -0.056005705147981644, -0.013194392435252666, -2.5381455421447754, -1.62740159034729, -0.1723960041999817, -0.0016656348016113043, -0.0019182630348950624, -0.09633790701627731, -4.184158387943171e-05, -0.023111263290047646, -0.0266428105533123, -2.1103756427764893, -7.331102824537084e-05, -1.5616295058862306e-05, -0.131614089012146, -0.45941972732543945, -0.1854126751422882, -0.04945848882198334, -0.007607891224324703, -0.03888683393597603, -0.20891894400119781, -0.012213796377182007, -0.5490586757659912, -0.002170232590287924, -1.1481331586837769, -0.0025844527408480644, -7.319182623177767e-05, -0.3169582784175873, -0.04269063100218773, -0.0015074567636474967, -0.2325958013534546, -0.14201699197292328, -0.0003860443539451808, -0.0001006075763143599, -0.049464162439107895, -0.05246115103363991, -0.7792457342147827, -0.03755242004990578, -0.15120159089565277, -0.0068867942318320274, -0.020344512537121773, -0.009019347839057446, -0.0016519484343007207, -0.0008759237825870514, -0.00040975757292471826, -0.008929558098316193, -0.00022432672267314047, -0.0012477001873776317, -0.006480511277914047, -0.011713064275681973, -0.5317701697349548, -0.0003638797497842461, -0.3742624521255493, -0.6538514494895935, -0.0470254011452198, -1.0132738680113107e-05, -2.145764938177308e-06, -3.933898824470816e-06, -0.004221219569444656, -0.011379338800907135, -0.0006623458466492593, -0.016682058572769165, -0.03872067481279373, -9.298280929215252e-06, -0.06797449290752411, -0.019564863294363022, -0.14945511519908905, -0.12735603749752045, -0.0030270253773778677, -0.01729654334485531, -2.311195135116577, -1.100637435913086, -1.199159026145935, -0.01019909605383873, -0.0023073735646903515, -0.0016052944120019674, -0.00028939827461726964, -0.008285317569971085, -0.00011789103882620111, -6.139089964563027e-05, -0.002454365836456418, -0.0006011109799146652, -0.042114533483982086, -0.0006329201860353351, -1.637967586517334, -0.026027655228972435, -0.0283847413957119, -0.000179036331246607, -0.2804481089115143, -0.009001154452562332, -0.23485882580280304, -0.3302910625934601, -0.008354831486940384, -0.2281542718410492, -0.0012650828575715423, -2.6535580158233643, -0.009899921715259552, -3.3456780910491943, -0.003627388970926404, -0.03994094580411911, -0.22897227108478546, -2.9901816844940186, -0.02051468938589096, -0.40750008821487427, -0.07501275837421417, -0.03525979444384575, -0.000598251644987613, -0.029001113027334213, -0.04094154015183449, -0.0012003129813820124, -7.259582343976945e-05, -0.004378375597298145, -0.020617341622710228, -0.005137456580996513, -0.004512365907430649, -0.04309217259287834, -0.3873733580112457, -0.0031411137897521257, -0.17564889788627625, -2.5152843591058627e-05, -0.2697886526584625, -0.2541802227497101, -0.05541997030377388, -1.2778759002685547, -0.2668149471282959, -1.0120458602905273, -2.796112060546875, -0.008713439106941223, -1.2099242210388184, -0.022903548553586006, -0.49894803762435913, -0.024323031306266785, -0.28753241896629333, -0.12455319613218307, -0.021120404824614525, -0.0006262486567720771, -0.0003904534096363932, -0.0461403913795948, -2.7418097943154862e-06, -2.861018856492592e-06, -5.245195097813848e-06, -0.04298221319913864, -0.0030377216171473265, -0.7287717461585999, -0.1535521000623703, -0.41199809312820435, -0.002466971054673195, -0.022284921258687973, -0.09542962163686752, -0.04602256789803505, -0.00844502728432417, -0.04844208061695099], "finish_reason": "stop"}], "metrics": {"energy": 244.2378974838258, "energy_per_token": 1.2589582344527104, "time": 8.627233, "time_per_token": 0.04447027319587629}}
{"outputs": [{"text": "os.makedirs('./tmp/', exist_ok=True)\n    csv_files = []\n    for file_name in glob.glob(f'{data_dir}*.csv'):\n        try:\n            df = pd.read_csv(file_name)\n        except pd.errors.EmptyDataError:\n            print('EmptyDataError')\n        except:\n            print(f'Something went wrong processing file {file_name}...')\n        else:\n            csv_files.append(file_name)\n            df = df.reset_index(drop=True)\n            t = Texttable()\n            data = [['File', 'Rows', 'Columns']]\n            rows = df.shape[0]\n            cols = df.shape[1]\n            data.append([file_name, rows, cols])\n            t.add_rows(data)\n            with open(f'tmp/{file_name}.csv', 'w') as outfile:\n                print(t.draw())\n                print(outfile.name, '->', 'csv')\n\n", "tokens": ["os", ".", "m", "aked", "irs", "('", ".", "/", "tmp", "/'", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "csv", "_", "files", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "f", "'{", "data", "_", "dir", "}", "*", ".", "csv", "')", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "name", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "print", "('", "Empty", "Data", "Error", "')", "\n", "        ", "except", ":", "\n", "            ", "print", "(", "f", "'", "Something", " went", " wrong", " processing", " file", " {", "file", "_", "name", "}", ".", ".", ".", "')", "\n", "        ", "else", ":", "\n", "            ", "csv", "_", "files", ".", "append", "(", "file", "_", "name", ")", "\n", "            ", "df", " =", " df", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n", "            ", "t", " =", " Text", "table", "()", "\n", "            ", "data", " =", " [", "['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", "]", "\n", "            ", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "cols", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "data", ".", "append", "([", "file", "_", "name", ",", " rows", ",", " col", "s", "])", "\n", "            ", "t", ".", "add", "_", "rows", "(", "data", ")", "\n", "            ", "with", " open", "(", "f", "'", "tmp", "/{", "file", "_", "name", "}", ".", "csv", "'", ",", " '", "w", "')", " as", " out", "file", ":", "\n", "                ", "print", "(", "t", ".", "draw", "())", "\n", "                ", "print", "(", "out", "file", ".", "name", ",", " '", "->", "'", ",", " '", "csv", "')", "\n", "\n"], "logprobs": [-4.30434513092041, -0.007724297232925892, -0.5190173387527466, -0.00011955977242905647, -0.0009764432325027883, -1.4417486190795898, -0.26434773206710815, -0.05582083389163017, -2.5506696701049805, -1.5707786083221436, -0.0016236230731010437, -0.02535412833094597, -2.3841855067985307e-07, -8.391981828026474e-05, -0.007269005756825209, -0.0020785173401236534, -0.0015411416534334421, -0.03687385842204094, -0.23173651099205017, -2.278536796569824, -0.019470755010843277, -0.13758787512779236, -0.04629143700003624, -2.6989665031433105, -0.010407579131424427, -0.13118404150009155, -0.5693327784538269, -1.0878299474716187, -1.4179978370666504, -0.3358299136161804, -0.012677201069891453, -0.3313259184360504, -4.362964682513848e-05, -0.06496807932853699, -0.0953003391623497, -1.161245584487915, -0.9745324850082397, -0.017051756381988525, -4.8993817472364753e-05, -2.95634672511369e-05, -0.0903586894273758, -0.513726532459259, -0.09417186677455902, -0.0136369988322258, -0.05582128465175629, -0.001880188356153667, -0.017607685178518295, -0.00405311631038785, -0.5612595081329346, -0.0001858300092862919, -0.0027419847901910543, -0.000987876090221107, -1.1381351947784424, -0.014937573112547398, -0.016265779733657837, -5.280832192511298e-05, -0.004003249574452639, -5.638440416078083e-05, -0.00026472879108041525, -0.00023541064001619816, -0.020292064175009727, -0.0004440752090886235, -0.0003502947511151433, -0.39333757758140564, -0.008596084080636501, -0.9079815149307251, -0.0022895331494510174, -0.4770975410938263, -0.00014220656885299832, -0.0002723561483435333, -0.00034683887497521937, -0.0004401430196594447, -0.004734852351248264, -6.305972783593461e-05, -0.06592732667922974, -0.02365952916443348, -0.00136461085639894, -1.0986855030059814, -1.5184688568115234, -1.3450459241867065, -2.1571602821350098, -0.015806851908564568, -1.6268621683120728, -0.005291266832500696, -1.0728955268859863, -0.9677108526229858, -2.0095551013946533, -0.008045527152717113, -0.0014174662064760923, -0.4742639660835266, -0.7541851997375488, -0.29623493552207947, -0.22033657133579254, -3.598458766937256, -0.519558846950531, -0.015664391219615936, -2.4501867294311523, -1.5386474132537842, -0.47853508591651917, -0.010550790466368198, -4.851700214203447e-05, -0.0003738896339200437, -0.043981824070215225, -1.8343058824539185, -2.858086585998535, -0.06915170699357986, -0.2661963403224945, -0.0010417040903121233, -0.18495741486549377, -0.04447520896792412, -9.48860906646587e-05, -0.0040635643526911736, -0.0027440059930086136, -0.23337261378765106, -0.00025996167096309364, -0.0060585420578718185, -0.010346230119466782, -0.002936339471489191, -0.6123664975166321, -0.3083074390888214, -0.00016878610767889768, -0.0002641328901518136, -0.09122186154127121, -0.0022341071162372828, -2.1133017539978027, -1.9548972845077515, -1.7802115678787231, -0.5301643013954163, -0.05086810514330864, -3.033045768737793, -5.125868119648658e-05, -0.00012051333033014089, -0.7844884395599365, -0.03310699388384819, -0.004644202534109354, -0.016001148149371147, -0.012061400339007378, -0.020220572128891945, -0.14981529116630554, -4.339766979217529, -0.1285361796617508, -0.029378555715084076, -0.00019667598826345056, -0.2856779098510742, -0.005595378577709198, -0.01351210568100214, -2.6516613960266113, -0.053754933178424835, -0.8918746709823608, -0.49711892008781433, -0.061371348798274994, -0.16649295389652252, -0.0020063049159944057, -0.09389287978410721, -0.034018125385046005, -0.003640335751697421, -0.0003149013500660658, -0.0036193120758980513, -0.02410288155078888, -0.020976247265934944, -0.22036756575107574, -0.2231595665216446, -0.015802158042788506, -3.112516164779663, -0.23927122354507446, -0.6137848496437073, -0.006612562574446201, -0.43697547912597656, -0.06696626543998718, -0.006861458066850901, -0.005981876514852047, -0.043789807707071304, -0.000814582861494273, -0.5620822906494141, -0.0006379238329827785, -0.021039282903075218, -7.128461584215984e-05, -0.0018341400427743793, -0.0008323303773067892, -0.0004401430196594447, -0.00018523407925385982, -0.0024807651061564684, -0.0151642095297575, -0.5981131792068481, -0.07406607270240784, -0.01019992120563984, -0.019146624952554703, -0.33928295969963074, -0.00010215714428341016, -5.3165931603871286e-05, -0.14300495386123657, -0.06950239837169647, -0.0012053137179464102, -0.004565529990941286, -1.5497195136049413e-06, -0.0018141493201255798, -0.0010832638945430517, -0.011171411722898483, -0.13989728689193726, -0.0024757706560194492, -0.09709793329238892, -6.913899414939806e-05, -0.0015923213213682175, -0.0010852882405743003, -0.0022163845133036375, -0.010155906900763512, -0.0017876134952530265, -0.07866068929433823, -1.416844367980957, -0.0031230507884174585, -0.6447052359580994, -0.10944579541683197, -0.05719246715307236, -2.2900876998901367, -0.4903824031352997, -0.1653522402048111, -3.2543604902457446e-05, -0.00013767725613433868, -0.7740034461021423, -0.017452126368880272, -1.6294052600860596, -0.26415014266967773, -0.0012297218199819326, -0.08259405195713043, -0.05938171595335007, -0.11007964611053467, -0.0033654500730335712, -3.137892484664917, -1.4082509279251099, -0.0014669859083369374, -0.005957465618848801, -0.0016608743462711573, -1.9057495594024658, -0.021941877901554108, -0.07672715932130814, -0.011459599249064922, -0.01756657287478447, -1.1424378156661987, -0.03228136897087097, -0.3897489607334137, -1.9485981464385986, -0.09220334142446518, -1.7650936841964722, -0.000798859924543649, -0.14023366570472717, -0.36522844433784485, -1.1355100870132446, -1.8324916362762451, -5.254769802093506, -0.2722063362598419, -0.0023667202331125736, -1.69419527053833, -3.708578109741211, -0.9411405920982361, -0.013774574734270573, -0.887018084526062], "finish_reason": "length"}], "metrics": {"energy": 314.3047127685549, "energy_per_token": 1.2277527842521676, "time": 12.185253, "time_per_token": 0.04759864453125}}
{"outputs": [{"text": "data_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    data_files = [os.path.splitext(f)[0] for f in data_files]\n    if not data_files:\n        raise FileNotFoundError('No CSV files found in the specified directory.')\n\n    table = Texttable()\n    table.add_rows([\n        ['File', 'Rows', 'Columns'],\n    ])\n\n    for f in data_files:\n        try:\n            df = pd.read_csv(f, header=None)\n        except pd.errors.EmptyDataError:\n            continue\n        if len(df.columns) == 0:\n            continue\n\n        if 'Columns' not in df.columns:\n            continue\n\n        table.add_rows([\n            [f, len(df), len(df.columns)],\n        ])\n\n    return table.draw()", "tokens": ["data", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "data", "_", "files", " =", " [", "os", ".", "path", ".", "spl", "ite", "xt", "(", "f", ")[", "0", "]", " for", " f", " in", " data", "_", "files", "]", "\n", "    ", "if", " not", " data", "_", "files", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "')", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "add", "_", "rows", "([", "\n", "        ", "['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "']", ",", "\n", "    ", "])", "\n", "\n", "    ", "for", " f", " in", " data", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "f", ",", " header", "=", "None", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "continue", "\n", "        ", "if", " len", "(", "df", ".", "columns", ")", " ==", " ", "0", ":", "\n", "            ", "continue", "\n", "\n", "        ", "if", " '", "Columns", "'", " not", " in", " df", ".", "columns", ":", "\n", "            ", "continue", "\n", "\n", "        ", "table", ".", "add", "_", "rows", "([", "\n", "            ", "[", "f", ",", " len", "(", "df", ")", ",", " len", "(", "df", ".", "columns", ")]", ",", "\n", "        ", "])", "\n", "\n", "    ", "return", " table", ".", "draw", "()", "\n", "\n", "def"], "logprobs": [-3.4974279403686523, -0.17635078728199005, -1.2970974445343018, -0.041294027119874954, -0.4391232132911682, -0.0004693360242526978, -0.008677395060658455, -0.038143888115882874, -0.3156008720397949, -3.4570634852570947e-06, -0.0003638797497842461, -0.0017057405784726143, -0.002242314163595438, -0.00270715169608593, -0.012305882759392262, -8.165503095369786e-05, -3.4689302992774174e-05, -0.003952193073928356, -0.29895856976509094, -0.06390033662319183, -0.03259330987930298, -0.007773623801767826, -0.012389717623591423, -0.014384973794221878, -0.27181917428970337, -2.958188056945801, -0.03607284277677536, -0.07651946693658829, -1.1010651588439941, -0.5993250608444214, -0.8372233510017395, -0.000129691296024248, -0.0012672259472310543, -0.003128873882815242, -1.9815056324005127, -6.007967749610543e-05, -4.768370445162873e-07, -0.0014227039646357298, -1.9572770595550537, -0.14072063565254211, -0.002085417043417692, -0.006675324868410826, -0.048629797995090485, -0.0002914242504630238, -0.00025233422638848424, -0.01239960826933384, -3.0636318115284666e-05, -7.426462980220094e-05, -0.18108969926834106, -0.04803518205881119, -0.34999433159828186, -0.5308730006217957, -0.5704182386398315, -0.039610207080841064, -1.5020257706055418e-05, -0.0010089550632983446, -0.007651426829397678, -0.02529938332736492, -0.001341872732155025, -0.059354305267333984, -2.571934700012207, -0.00010883215873036534, -5.9960475482512265e-05, -1.0413684844970703, -0.49395808577537537, -0.4020433723926544, -0.002889507682994008, -0.0193471722304821, -0.10427593439817429, -0.1914616972208023, -0.462654709815979, -0.17964136600494385, -0.013675098307430744, -0.29194176197052, -0.032888077199459076, -0.002044136868789792, -0.6809898018836975, -0.00042632073746062815, -1.1767204999923706, -0.014871216379106045, -0.03156491741538048, -0.00019238528329879045, -0.19680503010749817, -0.006712980568408966, -0.08287477493286133, -0.370323121547699, -0.008085140958428383, -1.2422157526016235, -0.005259842611849308, -0.19937145709991455, -0.3823554813861847, -1.5214836597442627, -0.009977467358112335, -0.12380659580230713, -0.03195086121559143, -0.05993560701608658, -0.0012867513578385115, -0.014254415407776833, -0.0235642921179533, -0.003399547655135393, -0.000125281119835563, -0.0011973362416028976, -0.005568468943238258, -0.009546108543872833, -0.09454642981290817, -0.007021869067102671, -2.254967212677002, -0.14294864237308502, -0.006159608252346516, -0.6291013956069946, -0.00018809456378221512, -0.14044688642024994, -1.5236444473266602, -0.36088505387306213, -0.04273689165711403, -1.6569954823353328e-05, -0.0003488647344056517, -0.0006593675934709609, -0.001446868758648634, -0.0027712297160178423, -0.21512503921985626, -4.660974445869215e-05, -0.0022024677600711584, -0.0004772001120727509, -0.4067215919494629, -0.008353176526725292, -0.018338067457079887, -3.0397906812140718e-05, -0.0038239466957747936, -7.86750388215296e-05, -0.00046302087139338255, -0.0068497369065880775, -0.2111096829175949, -2.0915513038635254, -1.9009373188018799, -0.03076576255261898, -0.5707279443740845, -0.5430440902709961, -0.025500908493995667, -0.910888671875, -0.0008468617452308536, -0.26187267899513245, -4.0411134250462055e-05, -0.00027164106722921133, -0.0002090712368953973, -0.00037746457383036613, -0.002792033366858959, -2.777537883957848e-05, -0.07016796618700027, -0.02623751014471054, -0.0009142747730948031, -1.1160469055175781, -0.022479012608528137, -0.40108075737953186, -3.172928810119629, -1.3755244016647339, -0.0004406196530908346, -0.011105629615485668, -0.15054365992546082, -0.426135778427124, -0.03758801147341728, -0.48639872670173645, -0.008742273785173893, -0.28002122044563293, -0.10173365473747253, -0.055039823055267334, -0.0005347490659914911, -0.13134348392486572, -0.005446713417768478, -1.7923871278762817, -0.00021944021864328533, -3.4681034088134766, -3.061734676361084, -4.334743499755859, -0.03334961086511612, -0.8238331079483032, -5.6980417866725475e-05, -1.4495346546173096, -0.06395960599184036, -0.10751131176948547, -0.24709899723529816, -0.015350413508713245, -0.0007889734115451574, -3.2009992599487305, -0.0026825417298823595, -0.46798691153526306, -0.00012981049076188356, -1.0351471900939941, -0.00458048190921545, -0.002388721564784646, -1.7881233361549675e-05, -2.8304128646850586, -0.03677699714899063, -0.47223415970802307, -0.003099282970651984, -0.0349673330783844, -0.14725865423679352, -0.045659784227609634, -0.2634377181529999, -0.00014768941036891192, -0.003570611821487546, -0.48347294330596924, -0.0016036281595006585, -0.22664161026477814, -0.00048029806930571795, -0.006295610684901476, -0.007641253061592579, -0.012942713685333729, -0.04586077854037285, -0.4203867018222809, -0.0026472308672964573, -0.013164980337023735, -0.002707508159801364, -0.00022766382608097047, -0.11487646400928497, -0.004912924487143755, -0.1077321469783783, -0.2560504674911499, -0.006404115352779627, -0.04149189963936806, -0.113554947078228, -0.2399829477071762, -0.00845353864133358, -0.12379511445760727], "finish_reason": "stop"}], "metrics": {"energy": 252.20777373027795, "energy_per_token": 1.1259275612958837, "time": 10.093544, "time_per_token": 0.04506046428571429}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError(\"Directory not found.\")\n    try:\n        file_list = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    except:\n        raise FileNotFoundError(\"File not found.\")\n    if len(file_list) == 0:\n        raise ValueError(\"No CSV files found.\")\n    files = []\n    for file_name in file_list:\n        try:\n            df = pd.read_csv(file_name)\n            file_dict = {'name': os.path.basename(file_name), 'rows': len(df), 'cols': len(df.columns)}\n            files.append(file_dict)\n        except pd.errors.EmptyDataError:\n            raise ValueError(\"Empty data.\")\n    if len(files) == 0:\n        raise ValueError(\"No CSV files found.\")\n    summary_table = Texttable()\n    summary_table.set_cols_align(['l'", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "except", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", ".", "\"", ")", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", ".", "\"", ")", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "name", ")", "\n", "            ", "file", "_", "dict", " =", " {'", "name", "':", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "name", ")", ",", " '", "rows", "':", " len", "(", "df", ")", ",", " '", "cols", "':", " len", "(", "df", ".", "columns", ")}", "\n", "            ", "files", ".", "append", "(", "file", "_", "dict", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Empty", " data", ".", "\"", ")", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", ".", "\"", ")", "\n", "    ", "summary", "_", "table", " =", " Text", "table", "()", "\n", "    ", "summary", "_", "table", ".", "set", "_", "cols", "_", "align", "(['", "l", "'"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -0.34346961975097656, -1.0537011623382568, -1.022749662399292, -0.8110158443450928, -0.011077924631536007, -1.2402944564819336, -0.08580461144447327, -0.001760719926096499, -0.006523622665554285, -0.8479670286178589, -3.7390060424804688, -0.0006011109799146652, -0.007442604284733534, -0.00833118800073862, -2.8425023555755615, -0.03355620801448822, -0.6626051664352417, -0.010594906285405159, -0.278496652841568, -0.00010263393050990999, -0.008103232830762863, -0.013754821382462978, -0.324557900428772, -7.986990567587782e-06, -8.296622399939224e-05, -0.0016288596671074629, -0.0014106809394434094, -0.0017744047800078988, -0.010298210196197033, -4.494089080253616e-05, -9.417489309271332e-06, -0.003603752003982663, -0.8464412689208984, -0.07176753133535385, -0.03772887587547302, -0.0074732499197125435, -0.008273139595985413, -0.0035213150549679995, -0.013054147362709045, -0.7057602405548096, -0.0011587579501792789, -1.961370825767517, -0.017495937645435333, -0.0011736417654901743, -0.16070112586021423, -1.160461664199829, -0.001602675998583436, -9.059495641849935e-05, -0.05508517846465111, -0.05707390978932381, -2.4683914184570312, -0.23192985355854034, -0.011597475036978722, -0.1540660411119461, -0.030497541651129723, -0.0007818264421075583, -0.002342220861464739, -0.1815703958272934, -0.35194993019104004, -0.6520770192146301, -0.00022373080719262362, -0.0013374679256230593, -1.3947389561508317e-05, -2.2053474822314456e-05, -0.0026886051055043936, -0.15770791471004486, -0.0008918836829252541, -0.00020740265608765185, -0.003948630765080452, -0.0066176545806229115, -0.001327943871729076, -0.018588976934552193, -0.05301232635974884, -2.3603161025675945e-05, -0.012029835022985935, -0.01742822863161564, -0.1182212084531784, -0.3530591130256653, -0.0035064660478383303, -0.019182411953806877, -0.10783831775188446, -0.5245769023895264, -0.0034448110964149237, -0.00036483307485468686, -0.0012657972984015942, -0.17990519106388092, -4.079556465148926, -0.297631174325943, -0.35224199295043945, -0.010464205406606197, -0.02174290083348751, -0.34974807500839233, -0.39848726987838745, -1.3833377361297607, -0.39903882145881653, -0.002569114323705435, -0.017005814239382744, -4.410734163684538e-06, -0.0001433984871255234, -0.0007641970878466964, -0.0028885568026453257, -0.002068524481728673, -0.17071373760700226, -0.00013660451804753393, -0.002006661845371127, -0.0008401916129514575, -0.65018630027771, -0.014623836614191532, -0.01105729304254055, -3.361645576660521e-05, -0.003702691290527582, -3.194758028257638e-05, -0.0003044141922146082, -0.00011264643399044871, -0.005701588466763496, -0.0002571013756096363, -0.00027771908207796514, -0.43126580119132996, -0.01053864136338234, -0.7081395387649536, -2.827099323272705, -0.47299718856811523, -3.2278480529785156, -0.004515926353633404, -1.3867762088775635, -2.6258158683776855, -0.007902665995061398, -1.0471845865249634, -2.264974000354414e-06, -0.0003311085747554898, -0.0035015956964343786, -0.12266039848327637, -3.576278118089249e-07, -0.0001408954558428377, -0.012781013734638691, -3.683499380713329e-05, -0.0008864049450494349, -0.009465577080845833, -0.019293269142508507, -0.5391026139259338, -0.12808583676815033, -0.0028048718813806772, -0.3715987801551819, -6.913899414939806e-05, -0.0018115314887836576, -0.38445860147476196, -0.000766102981287986, -0.03861849009990692, -1.1529861688613892, -0.0003398079425096512, -0.0816924124956131, -0.00026306029758416116, -0.007764989044517279, -0.002638075966387987, -0.010000836104154587, -0.017380664125084877, -0.0020803017541766167, -0.0939730778336525, -0.05372883379459381, -0.0026049036532640457, -0.0005418977816589177, -0.0021649987902492285, -0.006194321438670158, -4.887569048150908e-06, -0.0013344916515052319, -0.0013252056669443846, -0.0013091336004436016, -0.03126559779047966, -0.0032063524704426527, -0.989463746547699, -2.098061486321967e-05, -0.00016115797916427255, -0.00012051333033014089, -0.0007751559023745358, -0.00205163168720901, -3.93382906622719e-05, -0.07958872616291046, -0.02487051486968994, -0.001629335805773735, -1.3867156505584717, -0.6303866505622864, -4.5060096454108134e-05, -0.03139464557170868, -0.3785719871520996, -0.5057306289672852, -2.409428119659424, -2.2197909355163574, -0.0987195149064064, -0.0024391443002969027, -0.00704968674108386, -0.20976297557353973, -2.7846245765686035, -0.20159392058849335, -0.0002623452164698392, -0.02256363071501255, -0.003939012996852398, -0.14570726454257965, -0.0014650813536718488, -0.1609659343957901, -0.0024757706560194492, -0.00596374599263072, -0.0011884062550961971, -0.04924358054995537, -0.052956026047468185, -4.577531944960356e-05, -0.009145275689661503, -0.001168402610346675, -0.49485212564468384, -0.5362367033958435, -0.0021845067385584116, -0.016990695148706436, -0.07174001634120941, -0.017856553196907043, -0.001661945367231965, -0.0003670972364488989, -0.0013902055798098445, -0.1390511840581894, -3.8535170555114746, -0.6768081784248352, -0.17940925061702728, -0.009948196820914745, -0.1796308010816574, -0.0007251255447044969, -0.17502155900001526, -0.005799727980047464, -0.004072349984198809, -0.13293659687042236, -0.0005192600074224174, -0.007498925551772118, -0.0004383556661196053, -0.7891228795051575, -0.0007084482349455357, -0.11262393742799759, -8.415821503149346e-05, -0.1261916309595108, -0.6602027416229248, -0.5116789937019348, -0.03240809589624405], "finish_reason": "length"}], "metrics": {"energy": 311.62482880210865, "energy_per_token": 1.217284487508237, "time": 11.359896, "time_per_token": 0.04437459375}}
{"outputs": [{"text": "try:\n        # Create a Texttable object\n        table = Texttable()\n\n        # Collect all CSV files in a directory\n        files = glob.glob(os.path.join(data_dir, '*.csv'))\n        if not files:\n            raise ValueError(\"No CSV files found in the specified directory.\")\n\n        # Iterate over each file and read its contents\n        for file in files:\n            try:\n                data = pd.read_csv(file, error_bad_lines=False)\n                table.add_row([os.path.basename(file), len(data), len(data.columns)])\n            except pd.errors.EmptyDataError:\n                print(f\"Empty file encountered: {file}\")\n                continue\n        return table.draw()\n    except FileNotFoundError as e:\n        raise e\n    except ValueError as e:\n        raise e\n    except pd.errors.EmptyDataError as e:\n        raise e", "tokens": ["try", ":", "\n", "        ", "#", " Create", " a", " Text", "table", " object", "\n", "        ", "table", " =", " Text", "table", "()", "\n", "\n", "        ", "#", " Collect", " all", " CS", "V", " files", " in", " a", " directory", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "        ", "if", " not", " files", ":", "\n", "            ", "raise", " Value", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory", ".", "\"", ")", "\n", "\n", "        ", "#", " Iter", "ate", " over", " each", " file", " and", " read", " its", " contents", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "try", ":", "\n", "                ", "data", " =", " pd", ".", "read", "_", "csv", "(", "file", ",", " error", "_", "bad", "_", "lines", "=", "False", ")", "\n", "                ", "table", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ",", " len", "(", "data", ")", ",", " len", "(", "data", ".", "columns", ")]", ")", "\n", "            ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "                ", "print", "(", "f", "\"", "Empty", " file", " encountered", ":", " {", "file", "}\"", ")", "\n", "                ", "continue", "\n", "        ", "return", " table", ".", "draw", "()", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "raise", " e", "\n", "    ", "except", " Value", "Error", " as", " e", ":", "\n", "        ", "raise", " e", "\n", "    ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", " as", " e", ":", "\n", "        ", "raise", " e"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -2.2323226928710938, -2.205968141555786, -0.5062039494514465, -1.2745888233184814, -0.6599090695381165, -0.2534714937210083, -1.1146844625473022, -0.0007267932523973286, -0.44291892647743225, -0.004785513039678335, -0.0035881916992366314, -0.00011443436960689723, -0.3972522020339966, -0.0014511541230604053, -0.35060814023017883, -0.0018695986364036798, -0.1308053880929947, -4.583807468414307, -0.30902236700057983, -0.4729282557964325, -0.0009390473715029657, -0.015938028693199158, -0.2743169665336609, -2.5292999744415283, -0.9842851161956787, -0.202803835272789, -0.0010980297811329365, -1.4578226804733276, -0.041909124702215195, -0.18463456630706787, -0.00017093151109293103, -0.007804377935826778, -0.01683410257101059, -0.4242709279060364, -2.9802276912960224e-06, -0.00020251607929822057, -0.002524643437936902, -0.0011242267210036516, -0.00158791767898947, -0.013592193834483624, -2.8609820219571702e-05, -1.5616295058862306e-05, -0.0033648558892309666, -0.2592813968658447, -0.07591193169355392, -0.0162817295640707, -0.0052642300724983215, -0.0068037984892725945, -0.004778038710355759, -1.5105617046356201, -0.642225980758667, -0.9132835865020752, -0.023588160052895546, -0.004280571360141039, -0.022863933816552162, -0.0011988840997219086, -0.07790713012218475, -0.07312025129795074, -5.722029527532868e-06, -0.6333200931549072, -0.32799234986305237, -0.18254637718200684, -0.05571293830871582, -0.0006475735572166741, -0.0032056395430117846, -0.07179127633571625, -0.13924753665924072, -0.30914682149887085, -0.2046109288930893, -0.010398022830486298, -0.20238018035888672, -0.007166513241827488, -9.250213042832911e-05, -0.002533561550080776, -0.08723058551549911, -0.0011295850854367018, -0.23137857019901276, -0.7897604703903198, -0.002821395406499505, -0.5313298106193542, -0.9132341146469116, -0.5782355666160583, -0.750694990158081, -2.5758376121520996, -0.3211059272289276, -0.3614181578159332, -0.17823760211467743, -0.0007730118231847882, -0.09980446100234985, -0.3578527867794037, -0.5416696667671204, -0.01599915325641632, -0.0004897110629826784, -0.0007285801111720502, -0.0066576809622347355, -0.21636700630187988, -8.106198947643861e-06, -0.0009248746791854501, -0.0006089740199968219, -2.5675625801086426, -0.05689002573490143, -0.0408589206635952, -1.537788011773955e-05, -0.0009135602158494294, -4.875540980719961e-05, -0.00021026308240834624, -3.349725011503324e-05, -0.003916452173143625, -0.6759929060935974, -2.8267645835876465, -0.00014029949670657516, -0.08984515815973282, -9.894321920000948e-06, -0.06467378884553909, -0.001262463629245758, -0.01700487732887268, -0.3523339331150055, -0.07812677323818207, -0.946707546710968, -1.7435413599014282, -0.01294236071407795, -0.0040831537917256355, -0.0006947487709112465, -0.1399475634098053, -0.05784669518470764, -1.095842957496643, -1.6689286894688848e-06, -7.247662142617628e-05, -0.0006473353132605553, -0.07540307939052582, -4.768370445162873e-07, -3.194758028257638e-05, -0.001321038813330233, -0.00740710599347949, -0.00582592049613595, -0.35195639729499817, -5.2927523938706145e-05, -0.0019443194614723325, -0.571326732635498, -0.000587767455726862, -0.06222932040691376, -0.00012957210128661245, -0.01625264249742031, -0.0008747326792217791, -0.009853060357272625, -0.0025660227984189987, -0.0002980979916173965, -0.011225519701838493, -0.12033456563949585, -0.007421305403113365, -0.2865397334098816, -6.437280717364047e-06, -0.0002643712505232543, -0.00011717586312443018, -0.0004002247005701065, -0.0009470268851146102, -1.3112935448589269e-05, -0.04425785690546036, -0.03877652436494827, -0.0008164886385202408, -0.9491720795631409, -0.06628885865211487, -0.26986363530158997, -0.04244181513786316, -1.4665299654006958, -1.4586505889892578, -2.1409621238708496, -0.110945925116539, -0.010420438833534718, -0.12868063151836395, -0.12144774943590164, -0.000927256653085351, -0.008750072680413723, -0.4677101969718933, -0.919082522392273, -0.02506166324019432, -2.2149617671966553, -0.4088019132614136, -0.14765551686286926, -0.0021773697808384895, -0.02586073987185955, -0.15347377955913544, -0.04694362357258797, -0.550764799118042, -0.003572868648916483, -0.23575593531131744, -5.61460001335945e-05, -1.7881377516459906e-06, -0.9699978828430176, -0.17705190181732178, -0.0006469779182225466, -0.0010207447921857238, -0.0005235493299551308, -1.0357049703598022, -1.8570225238800049, -0.08131509274244308, -0.782325804233551, -0.022658614441752434, -0.5534541010856628, -5.483612312673358e-06, -0.020657628774642944, -0.01730380766093731, -0.0019246878800913692, -0.001578276976943016, -0.00041654970846138895, -0.1197933703660965, -0.06840097159147263, -0.2779728174209595, -1.6489163637161255, -0.11558982729911804, -1.0131237506866455, -2.407998726994265e-05, -0.0016808680957183242, -5.972207145532593e-05, -0.0008501967531628907, -0.001644331612624228, -3.0278701160568744e-05, -0.03842440992593765, -0.0035048029385507107, -0.0004887578543275595, -0.0037944952491670847, -0.0006680640508420765, -0.14536777138710022, -0.011745111085474491], "finish_reason": "stop"}], "metrics": {"energy": 291.10619021701797, "energy_per_token": 1.2767815360395525, "time": 10.101291, "time_per_token": 0.044303907894736844}}
{"outputs": [{"text": "if not os.path.exists(data_dir):\n        raise FileNotFoundError('The specified directory does not exist.')\n\n    csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise ValueError('There are no CSV files in the specified directory.')\n\n    table = Texttable()\n    table.set_cols_dtype(['t', 'i', 'i'])\n    table.add_row(['File', 'Rows', 'Columns'])\n\n    for file_path in csv_files:\n        try:\n            df = pd.read_csv(file_path)\n        except pd.errors.EmptyDataError:\n            continue\n        try:\n            rows = df.shape[0]\n            cols = df.shape[1]\n            table.add_row([file_path, rows, cols])\n        except ValueError:\n            continue\n\n    return table.draw()", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "data", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " specified", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " Value", "Error", "('", "There", " are", " no", " CS", "V", " files", " in", " the", " specified", " directory", ".", "')", "\n", "\n", "    ", "table", " =", " Text", "table", "()", "\n", "    ", "table", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "    ", "table", ".", "add", "_", "row", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "    ", "for", " file", "_", "path", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "path", ")", "\n", "        ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "            ", "continue", "\n", "        ", "try", ":", "\n", "            ", "rows", " =", " df", ".", "shape", "[", "0", "]", "\n", "            ", "cols", " =", " df", ".", "shape", "[", "1", "]", "\n", "            ", "table", ".", "add", "_", "row", "([", "file", "_", "path", ",", " rows", ",", " col", "s", "])", "\n", "        ", "except", " Value", "Error", ":", "\n", "            ", "continue", "\n", "\n", "    ", "return", " table", ".", "draw", "()"], "logprobs": [-2.35213565826416, -0.12615643441677094, -0.018574699759483337, -2.1219027985353023e-05, -0.0008222059695981443, -0.008271721191704273, -0.3819081485271454, -0.0037036414723843336, -0.005101046059280634, -3.564294092939235e-05, -6.556489552167477e-06, -0.011322646401822567, -0.026918334886431694, -0.001711214892566204, -0.04317643493413925, -0.013181333430111408, -9.035655966727063e-05, -3.93382906622719e-05, -1.7449207305908203, -1.5478390455245972, -0.42137399315834045, -0.07546775043010712, -0.0675070583820343, -0.0007375142886303365, -0.0031478875316679478, -0.39760664105415344, -0.0369662269949913, -0.0014686522772535682, -0.5620479583740234, -0.0003079893649555743, -1.0943560600280762, -0.0067558446899056435, -0.04838109016418457, -0.01699690707027912, -0.25221142172813416, -0.00011514954530866817, -0.006409682333469391, -0.028267240151762962, -0.24526511132717133, -0.00015376816736534238, -7.903263758635148e-05, -0.002393359551206231, -0.0008463853155262768, -0.0015689932042732835, -0.006858616601675749, -4.672895011026412e-05, -9.417489309271332e-06, -0.001312705222517252, -0.09615525603294373, -0.05973955616354942, -0.01281691063195467, -0.003295112634077668, -0.010331718251109123, -0.007291018031537533, -0.4921068549156189, -0.07970255613327026, -0.4546138644218445, -0.014373340643942356, -5.125986263010418e-06, -4.768370445162873e-07, -2.9802276912960224e-06, -0.001701218425296247, -0.008483798243105412, -0.00038342276820912957, -0.011129207909107208, -0.01711081899702549, -7.867782187531702e-06, -0.05260999873280525, -0.6431297659873962, -0.0017408467829227448, -0.003118534805253148, -0.007630014326423407, -0.00028772983932867646, -0.0004234609368722886, -0.025730160996317863, -0.013401899486780167, -0.006726953200995922, -0.001862459466792643, -0.009861559607088566, -0.0027948864735662937, -0.000734297966118902, -0.0381079725921154, -0.00024875884992070496, -0.9132976531982422, -0.021175144240260124, -0.017332512885332108, -0.00013791563105769455, -0.3148689568042755, -0.008593602105975151, -0.1758916825056076, -0.43387123942375183, -0.007561041042208672, -0.3245113790035248, -0.0011748324614018202, -0.23263898491859436, -0.00025996167096309364, -2.3373937606811523, -0.14519809186458588, -0.10748422890901566, -0.03379560634493828, -0.13938431441783905, -0.007324271835386753, -0.07135336846113205, -0.14181280136108398, -0.019283797591924667, -0.00015722469834145159, -0.01192771177738905, -0.06080838292837143, -0.006842277944087982, -0.04892861843109131, -0.03624369576573372, -0.04796723648905754, -0.000982397934421897, -1.184629201889038, -1.4185804502631072e-05, -2.1912879943847656, -0.056727729737758636, -0.0468023456633091, -0.07569080591201782, -0.000337305391440168, -0.012067290022969246, -0.036423832178115845, -0.001167092937976122, -6.651657167822123e-05, -0.0017650038935244083, -0.02011016756296158, -0.004196409601718187, -0.0033276681788265705, -0.49064284563064575, -6.05564855504781e-05, -0.07149199396371841, -0.5621787309646606, -0.5807854533195496, -1.2945951223373413, -0.0014544870937243104, -0.1091143935918808, -2.9802276912960224e-06, -2.3841855067985307e-07, -2.50339189733495e-06, -0.0002138386043952778, -0.0009055804111994803, -0.0038409284316003323, -0.14452360570430756, -2.729855441430118e-05, -0.001957169035449624, -0.0006484074983745813, -0.4550977349281311, -0.006464877165853977, -0.007318118121474981, -1.2159273865108844e-05, -0.002441046992316842, -2.0861407392658293e-05, -0.0003268184664193541, -4.589452510117553e-05, -0.0026695826090872288, -8.320462075062096e-05, -4.6132929128361866e-05, -0.49420249462127686, -0.0046726795844733715, -0.7652021050453186, -0.0007559779332950711, -0.10442639887332916, -2.5033637939486653e-05, -0.00020859450160060078, -0.0002361257211305201, -0.0002978596603497863, -0.0032157397363334894, -3.433168603805825e-05, -0.06962616741657257, -0.026284771040081978, -0.0008095800876617432, -1.6191017627716064, -0.02118203043937683, -0.6638919115066528, -2.9866504669189453, -0.00028165188268758357, -0.0028620492666959763, -0.0009397619287483394, -1.0556039810180664, -0.4499659240245819, -0.9239105582237244, -0.00047886825632303953, -0.26296266913414, -0.0005246216314844787, -0.000271521887043491, -0.00013934595335740596, -0.015023889020085335, -0.23447400331497192, -0.8415327072143555, -0.00020668754586949944, -0.0049486299976706505, -1.764281842042692e-05, -0.0005312938592396677, -0.00033098942367359996, -0.00021336186910048127, -2.3603161025675945e-05, -0.0003400462737772614, -1.2238929271697998, -0.23382750153541565, -0.002087796339765191, -0.0010826685465872288, -3.3378546504536644e-06, -0.0004676678800024092, -0.01767796091735363, -0.6987313032150269, -9.929640509653836e-05, -0.0001479277852922678, -0.0638788640499115, -0.005520456004887819, -0.00022492263815365732, -0.0007177399238571525, -5.960462772236497e-07, -0.0008430502493865788, -0.000538680877070874, -0.013598780147731304, -0.011489768512547016, -1.7763434648513794, -2.0146166207268834e-05, -0.15007099509239197, -0.042582910507917404, -0.001803796854801476, -1.038053274154663, -0.008032754994928837, -0.30542105436325073, -0.0023382960353046656, -0.15457633137702942, -0.2636294364929199, -0.0033766180276870728, -0.03532423451542854, -0.2391640543937683], "finish_reason": "stop"}], "metrics": {"energy": 267.78844583797445, "energy_per_token": 1.164297590599889, "time": 10.722387, "time_per_token": 0.04661907391304348}}
{"outputs": [{"text": "files = glob.glob(os.path.join(data_dir, \"*.csv\"))\n    if len(files) == 0:\n        raise FileNotFoundError(f\"No CSV files found in {data_dir}\")\n\n    try:\n        data = []\n        for file in files:\n            with open(file) as file_stream:\n                rows = pd.read_csv(file_stream, skip_empty_lines=True)\n                file_info = [os.path.basename(file)] + [len(rows), len(rows.columns)]\n                data.append(file_info)\n        return _print_table(data)\n    except pd.errors.EmptyDataError:\n        raise ValueError(f\"Empty data found in {file}.\")", "tokens": ["files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "No", " CS", "V", " files", " found", " in", " {", "data", "_", "dir", "}\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "data", " =", " []", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "with", " open", "(", "file", ")", " as", " file", "_", "stream", ":", "\n", "                ", "rows", " =", " pd", ".", "read", "_", "csv", "(", "file", "_", "stream", ",", " skip", "_", "empty", "_", "lines", "=", "True", ")", "\n", "                ", "file", "_", "info", " =", " [", "os", ".", "path", ".", "bas", "ename", "(", "file", ")]", " +", " [", "len", "(", "rows", ")", ",", " len", "(", "rows", ".", "columns", ")]", "\n", "                ", "data", ".", "append", "(", "file", "_", "info", ")", "\n", "        ", "return", " _", "print", "_", "table", "(", "data", ")", "\n", "    ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Empty", " data", " found", " in", " {", "file", "}", ".", "\"", ")", "\n", "\n", "def"], "logprobs": [-2.47737979888916, -0.13609850406646729, -0.3353041410446167, -0.000568228424526751, -0.00826746504753828, -0.03970610722899437, -0.447221040725708, -3.6954811548639555e-06, -0.00044431351125240326, -0.002303448738530278, -0.0031230507884174585, -0.0017685738857835531, -0.010041199624538422, -3.218599158572033e-05, -2.407998726994265e-05, -0.005783727392554283, -1.508002758026123, -0.07178140431642532, -0.045810673385858536, -0.00859454832971096, -0.0064447419717907906, -0.006013159640133381, -0.016932092607021332, -0.23028987646102905, -0.3859301805496216, -0.655156672000885, -0.0002687808300834149, -0.0018120075110346079, -0.0034248526208102703, -0.11631616204977036, -0.0003469580551609397, -0.0004020121123176068, -0.005371068138629198, -0.02448066510260105, -0.001893633627332747, -0.08335527032613754, -1.8272178173065186, -8.642300235806033e-05, -5.280832192511298e-05, -0.22293142974376678, -1.4127451181411743, -0.0591542087495327, -0.5937587022781372, -0.4016932249069214, -0.003152522025629878, -0.01745130680501461, -0.10919466614723206, -0.029600901529192924, -0.3379170894622803, -0.007916976697742939, -9.476689592702314e-05, -0.0004462200158741325, -0.7007324695587158, -0.00025650550378486514, -0.007504131644964218, -0.5925617218017578, -0.0005330810672603548, -3.4366893768310547, -0.0008386432309634984, -0.008428123779594898, -0.006672009360045195, -3.366307258605957, -0.31909066438674927, -0.919198751449585, -0.018197840079665184, -0.07224618643522263, -0.11114552617073059, -0.49665769934654236, -0.29947003722190857, -0.013545271009206772, -0.0003773453936446458, -0.003856603754684329, -0.003034512745216489, -2.2569167613983154, -0.21053646504878998, -0.0004922132357023656, -0.002216027583926916, -1.9279358386993408, -0.0003116837178822607, -3.184542655944824, -0.6784882545471191, -4.249474048614502, -0.001099935034289956, -0.006451019551604986, -0.0020745915826410055, -2.3816137313842773, -0.16025009751319885, -0.7908183932304382, -9.214453893946484e-05, -0.004166375380009413, -0.0015403084689751267, -0.004312501288950443, -0.000125281119835563, -0.18705351650714874, -0.0196944959461689, -5.23315102327615e-05, -0.18590980768203735, -3.20611572265625, -0.3695555627346039, -3.137037992477417, -0.06339026242494583, -0.032904110848903656, -0.002236961852759123, -0.2944730520248413, -0.5348898768424988, -0.1878046691417694, -0.3727927505970001, -3.3851819038391113, -0.04620015248656273, -2.506519317626953, -0.01013265922665596, -0.861760675907135, -1.714687466621399, -3.814689989667386e-06, -0.0008625839254818857, -0.00012313561455812305, -0.0863240510225296, -9.536738616588991e-07, -5.6622808187967166e-05, -0.004230835009366274, -2.828566789627075, -0.961979329586029, -0.5606805682182312, -0.4756132960319519, -0.00015221867943182588, -0.003035701345652342, -2.1222479343414307, -0.021845661103725433, -0.04874527081847191, -0.0005214046686887741, -0.02374509535729885, -0.012874577194452286, -0.01712089776992798, -0.009362482465803623, -0.005431774538010359, -0.2100888341665268, -0.04662623256444931, -0.008727147243916988, -0.0032493670005351305, -0.0075876605696976185, -0.00890309177339077, -0.00019429226813372225, -3.1709168979432434e-05, -0.0006840273272246122, -0.0023966894950717688, -0.7029339075088501, -1.8491929769515991, -2.4605464935302734, -1.8908476829528809, -0.05979379639029503, -0.6293211579322815, -0.08668724447488785, -0.08783358335494995, -0.10526378452777863, -0.005943363532423973, -0.16931599378585815, -0.0030940540600568056, -0.8522804379463196, -2.4199192921514623e-05, -0.0001370812824461609, -0.0003800861886702478, -0.0007097586058080196, -0.0013487775577232242, -2.396077979938127e-05, -0.2692098617553711, -0.02203657105565071, -0.0010976725025102496, -0.22396337985992432, -0.7928543090820312, -4.160317621426657e-05, -0.0351811908185482, -0.4876798987388611, -0.01954779587686062, -0.6041887998580933, -1.78047776222229, -1.1502894163131714, -0.1546379178762436, -0.29073211550712585, -0.4926527738571167, -1.6318347454071045, -0.5084245204925537, -0.5428397059440613, -0.0183180533349514, -0.021397221833467484, -0.08266506344079971, -0.03613412752747536], "finish_reason": "stop"}], "metrics": {"energy": 198.51584319591515, "energy_per_token": 1.0672894795479309, "time": 8.211262, "time_per_token": 0.04414656989247311}}
{"outputs": [{"text": "try:\n        csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n        if csv_files:\n            df_list = []\n            for csv_file in csv_files:\n                try:\n                    df = pd.read_csv(csv_file)\n                    df_list.append(df)\n                except pd.errors.EmptyDataError:\n                    pass\n            df_list.sort(key=lambda df: df.index.size)\n\n            text = Texttable()\n            text.set_cols_align(['c', 'r', 'c'])\n            text.set_cols_dtype(['t', 'i', 'i'])\n            text.add_row(['File', 'Rows', 'Columns'])\n\n            for df in df_list:\n                text.add_row([os.path.basename(csv_file), df.index.size, df.shape[1]])\n\n            return text.draw()\n        else:\n            raise ValueError('No CSV files found in the specified directory", "tokens": ["try", ":", "\n", "        ", "csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "        ", "if", " c", "sv", "_", "files", ":", "\n", "            ", "df", "_", "list", " =", " []", "\n", "            ", "for", " c", "sv", "_", "file", " in", " c", "sv", "_", "files", ":", "\n", "                ", "try", ":", "\n", "                ", "    ", "df", " =", " pd", ".", "read", "_", "csv", "(", "csv", "_", "file", ")", "\n", "                ", "    ", "df", "_", "list", ".", "append", "(", "df", ")", "\n", "                ", "except", " pd", ".", "errors", ".", "Empty", "Data", "Error", ":", "\n", "                ", "    ", "pass", "\n", "            ", "df", "_", "list", ".", "sort", "(", "key", "=", "lambda", " df", ":", " df", ".", "index", ".", "size", ")", "\n", "\n", "            ", "text", " =", " Text", "table", "()", "\n", "            ", "text", ".", "set", "_", "cols", "_", "align", "(['", "c", "'", ",", " '", "r", "'", ",", " '", "c", "'])", "\n", "            ", "text", ".", "set", "_", "cols", "_", "d", "type", "(['", "t", "'", ",", " '", "i", "'", ",", " '", "i", "'])", "\n", "            ", "text", ".", "add", "_", "row", "(['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "\n", "            ", "for", " df", " in", " df", "_", "list", ":", "\n", "                ", "text", ".", "add", "_", "row", "([", "os", ".", "path", ".", "bas", "ename", "(", "csv", "_", "file", ")", ",", " df", ".", "index", ".", "size", ",", " df", ".", "shape", "[", "1", "]]", ")", "\n", "\n", "            ", "return", " text", ".", "draw", "()", "\n", "        ", "else", ":", "\n", "            ", "raise", " Value", "Error", "('", "No", " CS", "V", " files", " found", " in", " the", " specified", " directory"], "logprobs": [-2.164614677429199, -0.0014213945250958204, -0.012524404563009739, -0.012103329412639141, -2.3397140502929688, -0.01148929726332426, -0.04911930859088898, -0.014737079851329327, -0.35658642649650574, -0.00024279984063468874, -0.00935303419828415, -0.017439357936382294, -0.34815332293510437, -2.622600959512056e-06, -0.00044347942457534373, -0.0018452061340212822, -0.0023340145125985146, -0.0018869704799726605, -0.018489627167582512, -9.775113539944869e-06, -2.0503786799963564e-05, -0.0035602774005383253, -0.2532621920108795, -0.06917573511600494, -0.014869689010083675, -0.0037216939963400364, -0.011134631000459194, -0.012676259502768517, -0.9931861758232117, -0.5602638721466064, -2.2066824436187744, -1.8000440832111053e-05, -3.814689989667386e-06, -2.8609820219571702e-05, -0.11802587658166885, -0.04001230373978615, -0.010820052586495876, -2.922516107559204, -0.6475285887718201, -0.12431667000055313, -0.016580408439040184, -0.3932156264781952, -0.00885653868317604, -0.0540040023624897, -0.07140953093767166, -1.667948842048645, -0.002499315422028303, -0.04690153896808624, -0.017028316855430603, -0.006974517833441496, -0.036251168698072433, -0.0012180536286905408, -9.298280929215252e-06, -6.437280717364047e-06, -0.00038652101648040116, -0.002764810109511018, -0.0016778928693383932, -0.32716289162635803, -5.61460001335945e-05, -0.0036973466631025076, -0.00016020445036701858, -0.00020847532141488045, -0.07866035401821136, -0.48813268542289734, -0.016339197754859924, -2.396077979938127e-05, -0.0027523275930434465, -9.775113539944869e-06, -0.00030250742565840483, -8.427741704508662e-05, -0.006822860799729824, -7.748573807475623e-06, -0.0002213471452705562, -0.3935639262199402, -0.009565118700265884, -0.0018305702833458781, -0.3107741177082062, -0.24321100115776062, -0.023783627897500992, -0.009564646519720554, -0.0015392372151836753, -0.0014142522122710943, -0.7804789543151855, -0.053903475403785706, -0.02675214782357216, -0.0016822961624711752, -0.01181697752326727, -0.10313808172941208, -0.2857419550418854, -3.3378546504536644e-06, -0.0002562671434134245, -0.0002461368858348578, -0.00039033422945067286, -0.0022999995853751898, -3.242440288886428e-05, -0.06105177849531174, -0.029730282723903656, -0.0004068977141287178, -0.0003589939442463219, -1.3576929569244385, -0.02557806670665741, -0.2662885785102844, -2.1153197288513184, -0.28420859575271606, -0.35943982005119324, -0.8056339621543884, -0.017072968184947968, -0.21640300750732422, -0.012540297582745552, -0.005216558463871479, -0.06589975953102112, -1.0598738193511963, -0.0035560012329369783, -1.287197470664978, -0.05397508665919304, -1.1778407096862793, -0.15675956010818481, -1.4139418601989746, -0.3184421956539154, -0.03104269690811634, -1.9369179010391235, -0.0184575617313385, -3.621941089630127, -0.7177284359931946, -0.03732011839747429, -0.0005757343024015427, -0.08849699050188065, -0.0038064897526055574, -0.03058229386806488, -0.3420392572879791, -0.006048114970326424, -0.27317100763320923, -0.0012525817146524787, -0.1574838012456894, -7.211902266135439e-05, -0.10106658190488815, -0.36517274379730225, -1.5629494190216064, -0.01046396978199482, -0.0009153467253781855, -0.03210313990712166, -1.3321031332015991, -0.019365880638360977, -0.00016378014697693288, -0.0016124354442581534, -0.8511881232261658, -0.036353252828121185, -0.012874812819063663, -0.009049354121088982, -0.08654305338859558, -0.0015118608716875315, -0.3522050976753235, -9.179073458653875e-06, -0.06358426064252853, -8.153582894010469e-05, -0.1237851083278656, -0.07219261676073074, -0.047207243740558624, -0.3359973132610321, -0.017885593697428703, -0.00030620177858509123, -0.07914750277996063, -0.06724371761083603, -0.0061413622461259365, -6.0794889577664435e-05, -0.004308347124606371, -0.24989481270313263, -0.0047406661324203014, -0.004242230672389269, -0.06057749688625336, -0.14444467425346375, -0.0024945589248090982, -0.7149242758750916, -3.635817120084539e-05, -1.2528804540634155, -0.09778549522161484, -0.06723714619874954, -0.04368414357304573, -0.0009364272118546069, -0.019816983491182327, -0.05657261982560158, -0.002714403672143817, -8.225102646974847e-05, -0.00388177833519876, -0.03855437412858009, -0.006059963721781969, -0.0012353177880868316, -1.8406991958618164, -0.00028606137493625283, -0.07480394095182419, -0.12215717881917953, -0.0068058110773563385, -0.0011431594612076879, -1.1086402082582936e-05, -5.364403477869928e-06, -0.0006096888100728393, -0.0005109196645207703, -0.0015190026024356484, -0.5292994976043701, -0.0018265245016664267, -0.005889324937015772, -1.1205610462639015e-05, -0.004114971030503511, -0.045979760587215424, -1.011478066444397, -4.172316494077677e-06, -0.0002658013836480677, -0.0007488307310268283, -0.07099277526140213, -7.152555099310121e-07, -0.00028355870745144784, -0.31957489252090454, -7.724463648628443e-05, -0.007301432080566883, -0.031634796410799026, -0.023459846153855324, -0.15406328439712524, -0.0009663202799856663, -0.14440733194351196, -9.417090768693015e-05, -0.0016986002447083592, -0.0013073477894067764, -0.14902499318122864, -6.09140915912576e-05, -0.32977333664894104, -0.010690443217754364, -0.04828386381268501, -0.0044080475345253944, -0.0006199345225468278, -0.0007560970261693001, -0.4007349908351898, -0.020955119282007217, -0.1625310331583023, -0.12141480296850204, -0.0010550415609031916, -0.02825634554028511, -0.01935582421720028, -0.012900232337415218, -0.1816825270652771, -0.027542220428586006, -4.8397800128441304e-05, -0.0028305486775934696, -0.0012491289526224136, -0.12434972822666168, -0.44941750168800354, -1.1086402082582936e-05, -0.6247923970222473, -0.3159608542919159, -0.10928967595100403, -0.0019050560658797622, -0.015214227139949799, -0.11419981718063354, -0.14952830970287323, -0.4180319309234619, -0.10968489944934845, -0.013312149792909622], "finish_reason": "length"}], "metrics": {"energy": 286.3439723968507, "energy_per_token": 1.118531142175198, "time": 11.350997, "time_per_token": 0.04433983203125}}
{"outputs": [{"text": "csv_files = glob.glob(os.path.join(data_dir, '*.csv'))\n    if not csv_files:\n        raise FileNotFoundError(\"No CSV files found in {}\".format(data_dir))\n    files = pd.DataFrame(columns=['File', 'Rows', 'Columns'])\n    for filename in csv_files:\n        try:\n            # print(filename)\n            df = pd.read_csv(filename, sep=\",\")\n            files = files.append({'File': filename, 'Rows': len(df), 'Columns': len(df.columns)}, ignore_index=True)\n            # print(files)\n        except ValueError as e:\n            print(e)\n            print(\"Encountered empty data during processing of {}\".format(filename))\n            raise ValueError(\"Empty data\")\n    return files.sort_values('Rows').to_string(index=False)", "tokens": ["csv", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "data", "_", "dir", ",", " '", "*", ".", "csv", "'))", "\n", "    ", "if", " not", " c", "sv", "_", "files", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "No", " CS", "V", " files", " found", " in", " {", "}\"", ".", "format", "(", "data", "_", "dir", "))", "\n", "    ", "files", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "File", "'", ",", " '", "Rows", "'", ",", " '", "Columns", "'])", "\n", "    ", "for", " filename", " in", " c", "sv", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "#", " print", "(", "filename", ")", "\n", "            ", "df", " =", " pd", ".", "read", "_", "csv", "(", "filename", ",", " sep", "=", "\"", ",", "\"", ")", "\n", "            ", "files", " =", " files", ".", "append", "({", "'", "File", "':", " filename", ",", " '", "Rows", "':", " len", "(", "df", ")", ",", " '", "Columns", "':", " len", "(", "df", ".", "columns", ")}", ",", " ignore", "_", "index", "=", "True", ")", "\n", "            ", "#", " print", "(", "files", ")", "\n", "        ", "except", " Value", "Error", " as", " e", ":", "\n", "            ", "print", "(", "e", ")", "\n", "            ", "print", "(", "\"", "Enc", "ount", "ered", " empty", " data", " during", " processing", " of", " {", "}\"", ".", "format", "(", "filename", "))", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Empty", " data", "\"", ")", "\n", "    ", "return", " files", ".", "sort", "_", "values", "('", "Rows", "')", ".", "to", "_", "string", "(", "index", "=", "False", ")", "\n", "\n", "def"], "logprobs": [-2.822585105895996, -0.012268790043890476, -0.10000187903642654, -0.031884122639894485, -0.526063084602356, -0.0005894353962503374, -0.011853850446641445, -0.03356139361858368, -0.29312485456466675, -3.6954811548639555e-06, -0.0003736513026524335, -0.0024380742106586695, -0.002525594551116228, -0.0027385372668504715, -0.013067914173007011, -3.8265450712060556e-05, -3.0517112463712692e-05, -0.0041245874017477036, -0.28897497057914734, -0.06748677790164948, -0.01672414503991604, -0.002742817159742117, -0.011549632996320724, -0.015042677521705627, -0.2863861918449402, -0.3120325207710266, -0.5405151844024658, -0.027799643576145172, -8.583032467868179e-06, -9.536738616588991e-07, -6.794906312279636e-06, -0.0052625699900090694, -0.016851216554641724, -0.0011323237558826804, -0.048899900168180466, -2.1759109497070312, -0.00013159839727450162, -5.245071224635467e-05, -0.6457279920578003, -0.7355592846870422, -0.358902245759964, -0.11858168244361877, -0.0011865011183544993, -0.009098261594772339, -0.0676269456744194, -0.10509155690670013, -2.316883087158203, -0.11856654286384583, -0.0035508933942764997, -0.0016977671766653657, -0.0007892115972936153, -0.017636030912399292, -4.470248313737102e-05, -0.0001736728590913117, -0.001799156074412167, -0.002964152256026864, -0.8186690211296082, -3.7361373901367188, -0.49427855014801025, -2.8313169479370117, -0.000408327643526718, -0.528633177280426, -0.4353182017803192, -0.5600813031196594, -0.15292353928089142, -0.18320812284946442, -0.05537756532430649, -0.00013910756388213485, -0.03265884518623352, -0.03614597022533417, -0.001558043179102242, -5.018585216021165e-05, -0.002502407180145383, -0.01989610120654106, -0.1340193748474121, -0.005055620335042477, -0.10909483581781387, -0.2000095695257187, -2.188812017440796, -0.003604820929467678, -0.05472216755151749, -1.7881377516459906e-06, -2.0265558760002023e-06, -4.410734163684538e-06, -0.0007588367443531752, -0.0021955687552690506, -0.0021506056655198336, -0.1519288420677185, -9.619726915843785e-05, -0.0026966894511133432, -0.0006144542712718248, -3.7508602142333984, -2.972226858139038, -0.20751899480819702, -0.8201169371604919, -0.04068828001618385, -0.027956267818808556, -0.0030893003568053246, -1.1083533763885498, -0.016742432489991188, -0.007712231483310461, -6.3774932641536e-05, -0.004555562045425177, -4.684815212385729e-05, -0.0010124086402356625, -0.00014578233822248876, -0.014355244114995003, -0.8393034338951111, -2.2273240089416504, -0.6033771634101868, -0.816804826259613, -0.33098137378692627, -0.00334596517495811, -0.7989187836647034, -0.017909012734889984, -0.3373853862285614, -0.9966144561767578, -0.8688185811042786, -0.08101150393486023, -0.0005909841856919229, -0.004860846791416407, -0.5053139328956604, -0.15544860064983368, -0.005029526073485613, -0.006766027770936489, -0.12760213017463684, -0.01646854728460312, -0.12036701291799545, -0.004167206585407257, -0.001585775287821889, -0.4023391604423523, -5.936446541454643e-05, -0.0031237637158483267, -0.45875951647758484, -0.0010768335778266191, -0.023627396672964096, -0.0009118927991949022, -0.0009080815361812711, -0.13279996812343597, -0.0002917817619163543, -0.004809596575796604, -0.004603146575391293, -0.016833633184432983, -0.03442800045013428, -0.00036864637513644993, -0.2662668526172638, -2.145764938177308e-06, -0.0005125877796672285, -0.0027531597297638655, -0.0016721803694963455, -0.01883958838880062, -0.0037298889365047216, -2.359086513519287, -0.44205576181411743, -0.3109745979309082, -0.04137935861945152, -0.2549731433391571, -0.09221073240041733, -0.0037539980839937925, -0.08708144724369049, -0.011830407194793224, -2.0946292877197266, -0.00011550712952157483, -0.6667037010192871, -0.3890908658504486, -0.0037472285330295563, -0.015555713325738907, -0.00287239090539515, -0.48323240876197815, -0.08946457505226135, -1.2900948524475098, -0.08934738487005234, -0.00870729424059391, -0.5839371085166931, -1.4285175800323486, -0.1791968196630478, -0.28876906633377075, -2.898344039916992, -0.003346321638673544, -0.0057798163034021854, -1.1072306632995605, -1.9548404216766357, -3.7374463081359863, -1.4262717962265015, -0.8666628003120422, -0.8492038249969482, -0.07808366417884827, -0.003369727171957493, -0.003571680746972561, -0.00046921687317080796, -0.019698353484272957, -0.009160513989627361, -0.0009310677996836603, -1.045422077178955, -1.7793811559677124, -1.1124160289764404, -2.396077979938127e-05, -0.20165549218654633, -0.24053457379341125, -1.1477769613265991, -0.4115108847618103, -3.338653087615967, -0.01852426491677761, -0.015037275850772858, -0.4914100468158722, -0.8847481608390808, -0.4495895206928253, -0.08878152072429657, -1.478280782699585, -0.0009391664643771946, -0.028863530606031418, -1.8253779411315918, -0.8765738606452942, -0.40792223811149597, -0.09657302498817444, -0.3161979019641876, -8.344646857949556e-07, -0.02834661863744259, -0.4162548780441284, -0.06636036932468414, -0.0037279885727912188, -0.0022643182892352343, -0.41156214475631714, -0.03629451245069504, -0.06007840856909752, -0.1140216737985611], "finish_reason": "stop"}], "metrics": {"energy": 249.986681473732, "energy_per_token": 1.1061357587333274, "time": 10.101867, "time_per_token": 0.04469852654867257}}
