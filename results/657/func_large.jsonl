{"outputs": [{"text": "# Clean the text\n    clean_text = []\n    for text in texts:\n        # Remove all non-alphanumeric characters except space\n        text = re.sub(ALPHANUMERIC, ' ', text.lower())\n        # Remove stop words if provided\n        if stopwords is not None:\n            text = ' '.join([word for word in text.split() if word not in stopwords])\n        clean_text.append(text)\n    # Train the Word2Vec model\n    model = Word2Vec(clean_text)\n    return model", "tokens": ["#", " Clean", " the", " text", "\n", "    ", "clean", "_", "text", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " all", " non", "-", "al", "phan", "umeric", " characters", " except", " space", "\n", "        ", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", "\n", "        ", "#", " Remove", " stop", " words", " if", " provided", "\n", "        ", "if", " stop", "words", " is", " not", " None", ":", "\n", "            ", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "])", "\n", "        ", "clean", "_", "text", ".", "append", "(", "text", ")", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "clean", "_", "text", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9218580722808838, -1.4132602214813232, -0.8041837811470032, -2.108715057373047, -0.9096472859382629, -0.005277629941701889, -2.2323317527770996, -0.023780833929777145, -0.01594952680170536, -1.3562265634536743, -0.4311510920524597, -0.0019469369435682893, -0.010927123948931694, -0.11743445694446564, -0.20400092005729675, -0.001444249995984137, -0.006003324408084154, -0.0008931938209570944, -0.0004430027911439538, -0.010557985864579678, -1.8306329250335693, -0.3523452579975128, -1.1406373977661133, -0.013838300481438637, -0.003851378569379449, -0.006615523248910904, -3.6000557884108275e-05, -0.0003296785580459982, -0.015606298111379147, -0.06404458731412888, -0.02293582074344158, -0.18586595356464386, -0.0018484188476577401, -0.5731793642044067, -0.02933734469115734, -0.5371463298797607, -0.00021908267808612436, -0.0009024838218465447, -0.0815858468413353, -0.19876587390899658, -5.722029527532868e-06, -1.9550132492440753e-05, -2.753696753643453e-05, -3.4570634852570947e-06, -5.8412379075889476e-06, -0.0006417360855266452, -0.1456955224275589, -6.937739817658439e-05, -0.0003756771038752049, -0.011666877195239067, -1.4886221885681152, -0.020215431228280067, -0.022387858480215073, -0.12423866242170334, -0.03296651318669319, -0.2270280420780182, -0.44753435254096985, -0.08898569643497467, -0.48389559984207153, -2.5798559188842773, -0.9012629389762878, -0.8070381879806519, -0.0005914607318118215, -0.034642547369003296, -0.0014325842494145036, -8.83301836438477e-05, -0.9171767234802246, -0.01617722399532795, -2.9682672902708873e-05, -0.003703997703269124, -9.77468371274881e-05, -0.0013944911770522594, -0.1839475780725479, -0.013178862631320953, -0.6546759605407715, -1.0490362910786644e-05, -0.00020037073409184813, -5.090107151772827e-05, -0.135633647441864, -0.1484067142009735, -0.0013549680588766932, -2.8490614567999728e-05, -1.2516897186287679e-05, -0.006921245250850916, -0.0013434203574433923, -0.0004368066438473761, -0.009077942930161953, -0.0023679095320403576, -0.0023670769296586514, -0.0016200524987652898, -3.1470757676288486e-05, -0.004875912796705961, -6.878139538457617e-05, -0.003257922362536192, -0.0004862556525040418, -0.008976934477686882, -0.5125598311424255, -9.179073458653875e-06, -2.1934269170742482e-05, -0.003659577341750264, -0.009689207188785076, -0.009828626178205013, -0.003346678102388978, -0.02532077021896839, -0.0001299296854995191, -0.7868545651435852, -0.038129545748233795, -0.23189392685890198, -0.18750566244125366, -0.2306995987892151, -0.0001280225842492655, -0.000336590368533507, -0.0007688426994718611, -0.08072750270366669, -0.0016471878625452518, -0.09790818393230438, -0.0003738896339200437, -0.002628326416015625, -3.933898824470816e-06, -0.000188332938705571, -0.002734733046963811, -0.02776196226477623, -1.549708758830093e-05, -4.5298504119273275e-05, -0.5632641315460205, -0.0013109194114804268, -0.039902571588754654, -0.06631005555391312, -0.0009939497103914618, -1.6185848712921143, -3.731181277544238e-05, -7.152531907195225e-06, -4.291525328881107e-06, -6.9141146923357155e-06, -0.11836905777454376], "finish_reason": "stop"}], "metrics": {"energy": 487.42199905777005, "energy_per_token": 3.610533326353852, "time": 11.369448, "time_per_token": 0.08421813333333333}}
{"outputs": [{"text": "# Download nltk data if stopwords are not provided\n    if stopwords is None:\n        nltk.download('stopwords')\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    # Clean texts and remove stopwords\n    cleaned_texts = [[word for word in ALPHANUMERIC.sub(' ', text).lower().split() if word not in stopwords]\n                     for text in texts]\n\n    # Train Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n\n    return model", "tokens": ["#", " Download", " n", "lt", "k", " data", " if", " stop", "words", " are", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "nl", "tk", ".", "download", "('", "stop", "words", "')", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Clean", " texts", " and", " remove", " stop", "words", "\n", "    ", "cleaned", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", "\n", "                ", "     ", "for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Train", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.9218580722808838, -3.507370710372925, -1.6601320505142212, -0.0011263700434938073, -6.8662193370983e-05, -2.884451389312744, -0.26081717014312744, -1.4084088802337646, -0.02010362595319748, -0.33007264137268066, -0.0009679876384325325, -0.242575004696846, -0.01245094183832407, -0.0019004157511517406, -0.05406555160880089, -0.3462978005409241, -4.362964682513848e-05, -0.0030529340729117393, -0.0016092220321297646, -0.002339842263609171, -0.00013386306818574667, -0.004879471380263567, -0.30396491289138794, -7.152555099310121e-07, -0.0006007535266689956, -0.00471586873754859, -0.0199787188321352, -0.0018970841774716973, -8.821448318485636e-06, -0.010188947431743145, -0.0015115038258954883, -0.07374244183301926, -0.13289736211299896, -0.0020474677439779043, -0.0019288521725684404, -0.5468676090240479, -3.576272320060525e-06, -2.3841855067985307e-07, -1.9788545614574105e-05, -0.0001679517881711945, -1.7881377516459906e-06, -6.305972783593461e-05, -5.4238757002167404e-05, -1.9430925021879375e-05, -0.002653650939464569, -3.814689989667386e-06, -0.0591510646045208, -0.0012647256953641772, -1.0728830375228426e-06, -3.0636318115284666e-05, -0.003047229489311576, -0.3907356560230255, -0.0012984187342226505, -0.05799373611807823, -0.26827272772789, -1.8353314399719238, -1.3352103233337402, -0.17422570288181305, -0.004879115615040064, -0.7244139909744263, -0.0140122901648283, -0.0006491222884505987, -0.3541835844516754, -0.007197522558271885, -0.019014932215213776, -0.010766158811748028, -0.00042822727118618786, -2.7646961212158203, -0.10850410163402557, -0.16036780178546906, -0.0003293210465926677, -0.0001722425949992612, -0.039627280086278915, -5.960462772236497e-07, -2.002696055569686e-05, -5.960446742392378e-06, 0.0, -2.622600959512056e-06, -0.0006694936309941113, -0.00017569905321579427, -0.011022865772247314, -0.07980062812566757, -0.00011622230522334576, -0.16665814816951752, -0.39613115787506104, -0.00822655763477087, -0.2616332173347473, -0.00040046300273388624, -0.001705383649095893, -0.01369708776473999, -0.0046497792936861515, -0.04964987188577652, -0.011321350000798702, -0.007454909849911928, -0.00014220656885299832, -0.015471437945961952, -1.3112935448589269e-05, -0.010557514615356922, -1.0438172817230225, -0.005587554536759853, -0.05147428438067436, -0.0003947432560380548, -0.00020251607929822057, -6.425174069590867e-05, -0.0006687788409180939, -0.008821917697787285, -0.0004683827864937484, -0.037380870431661606, -0.0006130246329121292, -0.010037186555564404, -0.1511078178882599, -0.2553738057613373, -6.16293036728166e-05, -0.0002112165529979393, -0.029905231669545174, -0.1939280480146408, -0.000714523543138057, -0.13345862925052643, -0.0005391574813984334, -0.001434488920494914, -1.9073468138230965e-06, -0.00027700403006747365, -0.0005911033367738128, -0.01247590035200119, -5.245195097813848e-06, -3.9457496313843876e-05, -3.302042750874534e-05, -0.11279753595590591, -0.3114781379699707, -5.960462772236497e-07, -2.3841830625315197e-06, -0.0013523490633815527, -0.019928472116589546, -0.11505647748708725, -0.007533355616033077, -0.31469789147377014, -0.0006537684239447117, -0.1148926168680191, -0.0006864098832011223, -0.4213973879814148, -0.036572907119989395, -1.4443485736846924], "finish_reason": "stop"}], "metrics": {"energy": 491.40413557815543, "energy_per_token": 3.460592504071517, "time": 11.961673, "time_per_token": 0.0842371338028169}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n    texts = [re.sub(ALPHANUMERIC, ' ', t).lower().strip() for t in texts]\n    texts = [t.split() for t in texts]\n    texts = [t for t in texts if t]\n    texts = [[word for word in t if word not in stopwords] for t in texts]\n    model = Word2Vec(texts, min_count=1)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " t", ")", ".", "lower", "()", ".", "strip", "()", " for", " t", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "t", ".", "split", "()", " for", " t", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "t", " for", " t", " in", " texts", " if", " t", "]", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " t", " if", " word", " not", " in", " stop", "words", "]", " for", " t", " in", " texts", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -0.40690895915031433, -1.6569954823353328e-05, -5.960462772236497e-07, -7.962863310240209e-05, -6.90197994117625e-05, -1.0728830375228426e-06, -0.00017450717859901488, -0.00044050050200894475, -1.8358061424805783e-05, -0.009739971719682217, -8.940656698541716e-06, -0.1951821893453598, -0.0014297273010015488, -7.152555099310121e-07, -5.98412734689191e-05, -0.01660667173564434, -0.38039007782936096, -1.9248522520065308, -0.027060246095061302, -0.06415315717458725, -0.17863482236862183, -1.5133436918258667, -0.00014768941036891192, -0.0023761154152452946, -0.029714660719037056, -0.03983636200428009, -3.3378546504536644e-06, -3.6954811548639555e-06, -2.50339189733495e-06, -5.960462772236497e-07, -2.7418097943154862e-06, -0.00044955636258237064, -0.08127486705780029, -7.629103492945433e-05, -0.0003197873884346336, -1.610888957977295, -0.399956077337265, -0.3239188492298126, -0.12948884069919586, -0.00034540885826572776, -0.6150785684585571, -2.103830099105835, -0.005003312602639198, -0.7596644163131714, -0.0004889961564913392, -0.00011932138295378536, -0.0012892514932900667, -0.009200556203722954, -0.03917436674237251, -0.007835840806365013, -0.7619103193283081, -0.009071209467947483, -0.017597027122974396, -0.9623558521270752, -0.2570585608482361, -0.39613115787506104, -0.004498481284826994, -0.05628835782408714, -0.010006973519921303, -0.00010191874753218144, -3.2305197237292305e-05, -0.000390215078368783, -0.04590074345469475, -0.010044857859611511, -0.007481532637029886, -0.14822572469711304, -0.0006291079334914684, -0.007357051596045494, -1.4662206172943115, -0.23852284252643585, -0.01837657392024994, -0.006081173196434975, -0.000985136954113841, -0.00868767686188221, -0.0003777029050979763, -0.5231842994689941, -0.030410699546337128, -0.06297854334115982, -0.029059823602437973, -0.36614397168159485, -0.0014872215688228607, -0.005616360809653997, -0.2216695100069046, -1.2129980325698853, -0.004263003822416067, -0.00012396997772157192, -4.625213477993384e-05, -0.2546611428260803, -0.0007377525325864553, -0.0076534380204975605, -0.013529511168599129, -2.3603161025675945e-05, -0.007066140417009592, -4.911301948595792e-05, -0.007973626255989075, -0.003210273804143071, -3.71926071238704e-05, -2.2291887944447808e-05, -0.00011967896716669202, -0.003607671707868576, -0.003032492473721504, -0.04003188759088516, -0.33995455503463745, -0.0008241117466241121, -0.004538948182016611, -3.3378546504536644e-06, -3.2186455882765586e-06, -0.0016288596671074629, -0.05026087537407875, -6.747018051100895e-05, -0.4077831208705902, -0.29370665550231934, -8.344646857949556e-07, -4.291525328881107e-06, -0.0028839209116995335, -0.026176543906331062, -0.08481453359127045, -0.00815951731055975, -0.013140861876308918, -0.018628058955073357, -0.0004886387032456696, -0.4543730616569519, -0.045553404837846756, -1.1668874025344849], "finish_reason": "stop"}], "metrics": {"energy": 493.83397125625623, "energy_per_token": 3.658029416713009, "time": 11.552085, "time_per_token": 0.085571}}
{"outputs": [{"text": "# If stopwords are not provided, use nltk's stopwords\n    if not stopwords:\n        stopwords = nltk.corpus.stopwords.words()\n\n    # Clean and preprocess the text\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = ALPHANUMERIC.sub(' ', text.lower()).split()\n        cleaned_text = [word for word in cleaned_text if word not in stopwords]\n        cleaned_texts.append(cleaned_text)\n\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n\n    return model", "tokens": ["#", " If", " stop", "words", " are", " not", " provided", ",", " use", " n", "lt", "k", "'", "s", " stop", "words", "\n", "    ", "if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "()", "\n", "\n", "    ", "#", " Clean", " and", " pre", "process", " the", " text", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", ".", "split", "()", "\n", "        ", "cleaned", "_", "text", " =", " [", "word", " for", " word", " in", " cleaned", "_", "text", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.9218580722808838, -2.911127805709839, -0.11909093707799911, -0.030913254246115685, -0.532462477684021, -0.002811647718772292, -0.011138993315398693, -0.011705170385539532, -0.14819642901420593, -0.07175255566835403, -0.00040546778473071754, -0.004032101482152939, -0.03799516335129738, -0.000416907190810889, -0.03426593542098999, -0.005666265729814768, -0.08449677377939224, -0.0019091013818979263, -0.011869165115058422, -1.6659780740737915, -0.0013241341803222895, -9.536697689327411e-06, -0.005020511336624622, -0.0005778788472525775, -0.003479856299236417, -0.25818124413490295, -0.002441998338326812, -0.0034581166692078114, -0.24478468298912048, -1.3828182090946939e-05, -3.576272320060525e-06, -4.362964682513848e-05, -5.8887653722194955e-05, -1.0728830375228426e-06, -0.00015198028995655477, -0.00021801002731081098, -4.2914423829643056e-05, -0.005733591504395008, -5.125986263010418e-06, -1.9918652772903442, -0.004533252213150263, -0.17861586809158325, -0.0014000862138345838, -0.07369039952754974, -0.2778749465942383, -0.8035969734191895, -0.41488534212112427, -0.0457749180495739, -0.331234335899353, -2.363399028778076, -0.1453959196805954, -0.0011082704877480865, -0.49456050992012024, -0.025114210322499275, -0.014079409651458263, -0.41385188698768616, -0.0006715188501402736, -0.8159817457199097, -0.0005706112715415657, -0.003014783840626478, -0.0031695151701569557, -0.02344144694507122, -0.0003424296446610242, -0.0018444921588525176, -0.00015054999676067382, -0.0001248043408850208, -0.0019743014127016068, -1.3204174041748047, -0.03779614344239235, -0.004140258301049471, -0.026414813473820686, -0.5199629664421082, -1.9073468138230965e-06, 0.0, -7.152555099310121e-07, -2.3841855067985307e-07, -4.768360213347478e-06, -5.3165931603871286e-05, -5.006777428206988e-06, -0.034086331725120544, -0.036262206733226776, -0.00012730741582345217, -0.014720751903951168, -0.6092135310173035, -0.01581764593720436, -0.00589027302339673, -0.8972828388214111, -0.38444197177886963, -0.06125541776418686, -0.05143420025706291, -0.0008922410197556019, -0.14378784596920013, -0.0001618731184862554, -0.0008300673216581345, -0.3780483901500702, -0.01270003616809845, -0.0452209897339344, -0.0021431115455925465, -2.1576648578047752e-05, -1.2874520507466514e-05, -0.0004798214649781585, -1.7881377516459906e-06, -7.748573807475623e-06, -0.000503770774230361, -0.017305096611380577, -0.02247609756886959, -1.3470558769768104e-05, -0.009733360260725021, -1.6689160474925302e-05, -0.10175346583127975, -0.006142073310911655, -0.0015501875896006823, -0.010603870265185833, -1.4305104514278355e-06, -0.00018809456378221512, -0.020200245082378387, -0.00025388356880284846, -0.00022682955022901297, -0.017275337129831314, -0.0008996253600344062, -8.344646857949556e-07, -5.960462772236497e-07, -0.00030751267331652343, -0.0001294529065489769, -0.02052917145192623, -0.0009601273923180997, -0.019009435549378395, -0.08671227842569351, -0.17872834205627441, -0.04723339527845383, -9.178694017464295e-05, -0.00024244230007752776, -0.0005690624238923192, -0.151611328125, -0.000551310193259269, -0.15055257081985474, -0.0003455280384514481, -0.0013090145075693727, -8.344646857949556e-07, -0.0001787979417713359, -0.00051771110156551, -0.01061000395566225, -3.4570634852570947e-06, -4.887569048150908e-06, -0.0002609150833450258, -0.23976284265518188, -0.3582767844200134, -5.960462772236497e-07, -2.622600959512056e-06, -0.0042596799321472645, -0.031469736248254776, -0.17876224219799042, -0.00965709425508976, -0.33848899602890015, -0.0005882440018467605, -0.1456289440393448, -0.0009396428358741105, -0.3076172471046448, -0.03585894778370857, -1.6385524272918701], "finish_reason": "stop"}], "metrics": {"energy": 604.2091118125912, "energy_per_token": 3.776306948828695, "time": 14.481567, "time_per_token": 0.09050979375}}
{"outputs": [{"text": "# Clean and preprocess the texts\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = ALPHANUMERIC.sub(' ', text).lower()\n        cleaned_text = ' '.join([word for word in cleaned_text.split() if word not in stopwords])\n        cleaned_texts.append(cleaned_text)\n\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts)\n    return model", "tokens": ["#", " Clean", " and", " pre", "process", " the", " texts", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", "\n", "        ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " cleaned", "_", "text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "])", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ")", "\n", "    ", "return", " model", "\n", "\n", "#"], "logprobs": [-0.9218580722808838, -1.4132602214813232, -1.1937978267669678, -0.5790459513664246, -0.07010962069034576, -0.35570183396339417, -0.18928849697113037, -0.04033615067601204, -0.00543047022074461, -1.0909665822982788, -0.012369230389595032, -0.00935303419828415, -0.014240077696740627, -0.000610999355558306, -0.3631371557712555, -0.0011260127648711205, -0.00945010781288147, -0.1443813294172287, -0.025742242112755775, -0.0005194983095861971, -0.0023575627710670233, -0.00028010259848088026, -0.0002585315378382802, -0.003753522876650095, -1.7175012826919556, -0.03623346611857414, -0.00380850862711668, -0.05668402835726738, -0.47820496559143066, -1.9073468138230965e-06, -2.0265558760002023e-06, -1.823885577323381e-05, 0.0, -5.364403477869928e-06, -7.998623186722398e-05, -4.0531076592742465e-06, -0.02699759043753147, -0.05229847505688667, -0.000188332938705571, -0.014084463939070702, -0.583143413066864, -0.4185049831867218, -0.04357835277915001, -6.41325386823155e-05, -0.2742704749107361, -0.0025278539396822453, -1.2429243326187134, -0.0002131234941771254, -0.04328044131398201, -0.2303033173084259, -0.6453566551208496, -8.332382276421413e-05, -0.0001958416833076626, -0.00013207517622504383, -0.5268872380256653, -0.12075492739677429, -0.002833995968103409, -2.1219027985353023e-05, -5.590759246842936e-05, -0.05246465653181076, -1.3351351299206726e-05, -5.006777428206988e-06, -0.0012301980750635266, -0.0002693767019081861, -0.02025994099676609, -0.026344336569309235, -0.07566782087087631, -0.01738370954990387, -4.31528314948082e-05, -0.3797471523284912, -0.00030286493711173534, -0.01462172158062458, -0.007809227332472801, -0.0010320581495761871, -0.002724390011280775, -1.9073468138230965e-06, -3.731181277544238e-05, -0.007617000490427017, -0.0003999863693024963, -0.00010144196130568162, -0.0028229409363120794, -0.0038283406756818295, -3.814689989667386e-06, -5.125986263010418e-06, -0.004559596534818411, -0.00013016807497479022, -0.0977787971496582, -0.0017546509625390172, -0.014119373634457588, -0.4595446288585663, -0.0959334746003151, -0.04071895405650139, -7.235741941258311e-05, -5.352353764465079e-05, -0.00046623803791590035, -0.10810273885726929, -0.0009491706150583923, -0.14651831984519958, -0.0004128557338844985, -0.00200130813755095, -2.7418097943154862e-06, -0.00013982271775603294, -0.0016987192211672664, -0.042154762893915176, -1.490105023549404e-05, -0.00012790338951162994, -0.00014304091746453196, -1.151700735092163, -0.0021295505575835705, -1.1911208629608154, -0.022680990397930145, -0.0010546842822805047, -0.33111295104026794, -0.042564403265714645, -1.3917967081069946], "finish_reason": "stop"}], "metrics": {"energy": 434.8901175107957, "energy_per_token": 3.7816531957460495, "time": 10.272321, "time_per_token": 0.08932453043478261}}
{"outputs": [{"text": "# Clean the texts\n    clean_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters except space and lowercase\n        clean_text = ALPHANUMERIC.sub(' ', text).lower()\n        # Remove stopwords\n        if stopwords is not None:\n            clean_text = [word for word in clean_text.split() if word not in stopwords]\n        else:\n            clean_text = clean_text.split()\n        # Add the clean text to the list\n        clean_texts.append(clean_text)\n    # Train the model\n    model = Word2Vec(clean_texts, size=100, window=5, min_count=1, workers=4)\n    return model", "tokens": ["#", " Clean", " the", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " except", " space", " and", " lower", "case", "\n", "        ", "clean", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", "\n", "        ", "#", " Remove", " stop", "words", "\n", "        ", "if", " stop", "words", " is", " not", " None", ":", "\n", "            ", "clean", "_", "text", " =", " [", "word", " for", " word", " in", " clean", "_", "text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "else", ":", "\n", "            ", "clean", "_", "text", " =", " clean", "_", "text", ".", "split", "()", "\n", "        ", "#", " Add", " the", " clean", " text", " to", " the", " list", "\n", "        ", "clean", "_", "text", "s", ".", "append", "(", "clean", "_", "text", ")", "\n", "    ", "#", " Train", " the", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "clean", "_", "text", "s", ",", " size", "=", "1", "0", "0", ",", " window", "=", "5", ",", " min", "_", "count", "=", "1", ",", " workers", "=", "4", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9218580722808838, -1.4132602214813232, -0.8041837811470032, -0.20635803043842316, -0.5717036724090576, -0.004622606560587883, -2.187849521636963, -0.010094188153743744, -0.00846441276371479, -0.019438954070210457, -0.0010600429959595203, -0.22231923043727875, -0.0009341643890365958, -0.008985559456050396, -0.08443805575370789, -0.03203953057527542, -0.0004544417606666684, -0.0027721805963665247, -0.0003405229654163122, -0.0002882065309677273, -0.005002482328563929, -1.0956165790557861, -0.21288546919822693, -0.4015793800354004, -0.002399781486019492, -0.005723516456782818, -3.0874729418428615e-05, -0.000393432448618114, -0.00607264181599021, -0.14301621913909912, -0.03473132476210594, -2.8819046020507812, -0.16615034639835358, -0.0599639005959034, -0.3107728064060211, -0.0008742563077248633, -0.9355669021606445, -0.007553114090114832, -0.005145520903170109, -0.006222991272807121, -0.4115915298461914, -1.311301275563892e-06, -3.3378546504536644e-06, -3.302042750874534e-05, -2.3841855067985307e-07, -9.179073458653875e-06, -9.48860906646587e-05, -6.794906312279636e-06, -0.024767601862549782, -0.049423545598983765, -0.00010930894495686516, -0.012535235844552517, -0.25499874353408813, -0.03028036653995514, -0.015980616211891174, -3.45700973412022e-05, -0.022223131731152534, -0.10785854607820511, -0.19527524709701538, -0.3398454189300537, -0.022034822031855583, -0.966428816318512, -0.36022239923477173, -0.0006431656656786799, -0.04330327361822128, -0.023262567818164825, -4.994744449504651e-05, -0.7781906127929688, -0.22156454622745514, -2.6940935640595853e-05, -0.0038069647271186113, -0.00012575789878610522, -0.0015481640584766865, -0.24032507836818695, -3.373566141817719e-05, -0.017076365649700165, -0.00813054759055376, -1.741340160369873, -0.04418931156396866, -0.0017874945187941194, -1.811964830267243e-05, -1.6331539882230572e-05, -0.021665679290890694, -1.8715683836489916e-05, -2.109982233378105e-05, -0.016090186312794685, -0.00016819016309455037, -0.003578570205718279, -0.004078048747032881, -0.002528210636228323, -0.0026802828069776297, -3.433168603805825e-05, -0.006061030086129904, -3.8742269680369645e-05, -0.003931769635528326, -7.974783511599526e-05, -0.026528354734182358, -2.484020948410034, -0.00011359999916749075, -0.002668155822902918, -0.0017302555497735739, -0.24172808229923248, -2.1815061700181104e-05, -0.00021371940965764225, -0.0008830699953250587, -2.275529384613037, -2.407998726994265e-05, -5.0424259825376794e-05, -0.016640320420265198, -0.0007359656738117337, -0.0014290130930021405, -0.007921470329165459, -0.05382056534290314, -0.9709066152572632, -0.7994236946105957, -0.4310970902442932, -0.7057556509971619, -0.029037242755293846, -0.008572682738304138, -0.0024491334334015846, -0.01575627736747265, -0.14429980516433716, -0.0005800233921036124, -0.002793697640299797, -1.6689286894688848e-06, -3.2186455882765586e-06, -0.0005069877952337265, -0.0015637562610208988, -0.00016926287207752466, -0.01789741963148117, -0.002986140549182892, -1.0728830375228426e-06, -3.933898824470816e-06, -0.0006517431465908885, -7.629103492945433e-05, -0.5493103861808777, -0.008609320968389511, -0.14562854170799255, -0.05341607704758644, -2.6433699131011963, -0.22810406982898712, -0.001622551935724914, -0.038405708968639374, -0.00034171465085819364, -0.0016889605903998017, -2.7418097943154862e-06, -6.794906312279636e-06, -0.0009178477921523154, -0.011431432329118252, -6.437280717364047e-06, -1.8954096958623268e-05, -0.00017188502533826977, -0.23615731298923492, -1.7511215209960938, -0.0016142207896336913, -0.0517033189535141, -0.011202532798051834, -0.007271136157214642, -0.03960699960589409, -0.024832025170326233, -5.4238757002167404e-05, -0.0045639872550964355, -0.0009188005933538079, -0.004116514697670937, -9.536738616588991e-07, -1.5497195136049413e-06, -0.00012218205665703863, -0.01026717945933342, -0.03762819617986679, -0.005336800590157509, -0.006207589991390705, -0.01619657874107361, -0.032145969569683075, -0.007605998311191797, -0.0316559299826622, -0.1424744427204132, -0.0006650857976637781, -1.1061053276062012, -2.6225699912174605e-05, -1.3708974620385561e-05, -4.887569048150908e-06, -1.597391747054644e-05, -0.09116353839635849], "finish_reason": "stop"}], "metrics": {"energy": 647.14415058136, "energy_per_token": 3.5363068337779238, "time": 15.552031, "time_per_token": 0.08498377595628415}}
{"outputs": [{"text": "if stopwords is None:\n        nltk.download('stopwords')\n        stopwords = nltk.corpus.stopwords.words('english')\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    tokens = [word.split() for word in cleaned_texts]\n    token_words = [[word for word in words if word not in stopwords] for words in tokens]\n    model = Word2Vec(sentences=token_words)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "nl", "tk", ".", "download", "('", "stop", "words", "')", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "tokens", " =", " [", "word", ".", "split", "()", " for", " word", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "token", "_", "words", " =", " [[", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", " for", " words", " in", " tokens", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "sent", "ences", "=", "token", "_", "words", ")", "\n", "    ", "return", " model", "\n", "\n", "print"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -2.9798550605773926, -7.068861305015162e-05, -0.002173206303268671, -0.0038349907845258713, -0.06523335725069046, -0.0016782497987151146, -2.3007127310847864e-05, -0.021590201184153557, -0.028754424303770065, -0.008939482271671295, -0.042113274335861206, -0.005258538294583559, -0.0032745571807026863, -0.7420263886451721, -2.884823152271565e-05, -3.576278118089249e-07, -3.290122185717337e-05, -0.00020287363440729678, -3.576278118089249e-07, -7.688703772146255e-05, -0.0001209901092806831, -2.074220174108632e-05, -0.004764394834637642, -5.125986263010418e-06, -0.0882144570350647, -0.0013660395052284002, -9.536738616588991e-07, -4.625213477993384e-05, -0.012847156263887882, -0.5603446960449219, -0.8905282616615295, -0.044422075152397156, -0.03848692774772644, -0.027922069653868675, -0.0007614573696628213, -0.30364739894866943, -0.32835474610328674, -2.861018856492592e-06, -9.179073458653875e-06, -2.0265558760002023e-06, -7.152555099310121e-07, -1.311301275563892e-06, -0.0001245659514097497, -5.8412379075889476e-06, -0.03125011548399925, -0.022830843925476074, -0.00018439977429807186, -0.30899760127067566, -0.9252286553382874, -0.009398619644343853, -0.011413047090172768, -0.40430381894111633, -0.00011908298620255664, -6.735097849741578e-05, -0.0009681067313067615, -0.003579401643946767, -0.023499086499214172, -0.005129984579980373, -1.7383183240890503, -0.015838298946619034, -0.8352852463722229, -1.101611852645874, -2.4226574897766113, -1.374704122543335, -0.0159525778144598, -0.013295445591211319, -0.9128849506378174, -0.0009371418273076415, -0.012309649959206581, -6.615896563744172e-05, -0.00045313104055821896, -0.00017855956684798002, -0.037260860204696655, -0.011397489346563816, -0.018766704946756363, -4.3568034172058105, -0.40762680768966675, -2.7976431846618652, -0.017851751297712326, -0.6790505051612854, -0.2833544909954071, -0.002915301127359271, -0.0001998939987970516, -0.00015686711412854493, -0.8597133755683899, -0.010860500857234001, -0.018209662288427353, -0.029397770762443542, -0.00017510310863144696, -0.01643078774213791, -0.000196556793525815, -0.02521255612373352, -0.034458521753549576, -0.0014800796052441, -0.0001292145170737058, -0.0010551605373620987, -0.008123335428535938, -0.006305561400949955, -0.06026429310441017, -0.3158494234085083, -0.006834345404058695, -0.006604154594242573, -6.556489552167477e-06, -5.364403477869928e-06, -0.0020625763572752476, -2.9286115169525146, -4.470248313737102e-05, -0.0059261806309223175, -0.008469732478260994, -9.07141511561349e-05, -6.460934673668817e-05, -2.7180941104888916, -0.0071042547933757305, -0.03690476343035698, -0.02820523828268051, -0.002039734972640872, -0.3352982699871063, -0.057063665241003036, -3.7278599739074707], "finish_reason": "stop"}], "metrics": {"energy": 447.44693262863154, "energy_per_token": 3.5232041939262326, "time": 11.127827, "time_per_token": 0.08762068503937008}}
{"outputs": [{"text": "# Use nltk stopwords by default if no stopwords are provided\n    if not stopwords:\n        stopwords = nltk.corpus.stopwords.words('english')\n    # Remove non-alphanumeric characters and lowercase texts\n    texts = [ALPHANUMERIC.sub(' ', t.lower()).split() for t in texts]\n    # Remove stopwords\n    cleaned_texts = [[w for w in t if w not in stopwords] for t in texts]\n    # Train a Word2Vec model on the cleaned texts\n    model = Word2Vec(cleaned_texts, size=100, window=5, min_count=1, workers=4)\n    return model", "tokens": ["#", " Use", " n", "lt", "k", " stop", "words", " by", " default", " if", " no", " stop", "words", " are", " provided", "\n", "    ", "if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " lower", "case", " texts", "\n", "    ", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ".", "lower", "())", ".", "split", "()", " for", " t", " in", " texts", "]", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "cleaned", "_", "text", "s", " =", " [[", "w", " for", " w", " in", " t", " if", " w", " not", " in", " stop", "words", "]", " for", " t", " in", " texts", "]", "\n", "    ", "#", " Train", " a", " Word", "2", "Vec", " model", " on", " the", " cleaned", " texts", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " size", "=", "1", "0", "0", ",", " window", "=", "5", ",", " min", "_", "count", "=", "1", ",", " workers", "=", "4", ")", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.9218580722808838, -3.3698794841766357, -0.21415774524211884, -0.0003197873884346336, -7.188061863416806e-05, -2.251429796218872, -0.014927472919225693, -2.4588727951049805, -0.00030286493711173534, -0.8039577007293701, -0.6584638953208923, -0.10880159586668015, -0.035428486764431, -0.26229628920555115, -0.0185512974858284, -0.02860916405916214, -0.0025395068805664778, -0.026708392426371574, -1.4897054433822632, -0.0013369916705414653, -2.706014311115723e-05, -0.0023323495406657457, -0.0006699701189063489, -0.003180447733029723, -0.21304087340831757, -0.0021258629858493805, -0.0034070322290062904, -0.2347709834575653, -1.0490362910786644e-05, -2.0265558760002023e-06, -7.128461584215984e-05, -3.302042750874534e-05, -7.152555099310121e-07, -8.582700684200972e-05, -0.00020621081057470292, -1.3828182090946939e-05, -0.004851474892348051, -7.986990567587782e-06, -0.147420272231102, -0.0012181727215647697, -4.768370445162873e-07, -5.9960475482512265e-05, -0.002398948883637786, -1.9092592000961304, -0.155709907412529, -2.8256072998046875, -0.4054487347602844, -0.0030108618084341288, -0.010108113288879395, -7.855583680793643e-05, -0.0003962923656217754, -0.006380899343639612, -1.752340316772461, -0.30636799335479736, -0.054358236491680145, -2.499262809753418, -0.061166051775217056, -0.0011549476766958833, -1.399148941040039, -0.01648273505270481, -0.03745642676949501, -0.03430752083659172, -0.5196800827980042, -6.198863957251888e-06, -3.576278118089249e-07, -8.344646857949556e-07, -1.1920928244535389e-07, -9.536738616588991e-07, -5.793403761344962e-05, -4.6491513785440475e-06, -0.017720943316817284, -0.020984185859560966, -0.00018165845540352166, -1.0480074882507324, -2.0932157039642334, -0.01593439094722271, -0.0055557843297719955, -2.090186834335327, -1.013753890991211, -0.009410547092556953, -0.007156689185649157, -0.0002004899288294837, -7.271502545336261e-05, -0.0006737822550348938, -0.004879353102296591, -0.001573873101733625, -0.022969957441091537, -0.05364963784813881, -0.07261907309293747, -0.007630369160324335, -0.43697285652160645, -0.9290014505386353, -0.0005303407087922096, -2.278794765472412, -0.02686147205531597, -0.013454710133373737, -0.021403172984719276, -0.00034671969478949904, -0.20577868819236755, -0.60185706615448, -0.0011749514378607273, -0.00010394509445177391, -5.3165931603871286e-05, -0.1490067094564438, -0.000873065204359591, -0.009611756540834904, -0.005290674045681953, -3.0040289857424796e-05, -0.0024513930547982454, -1.168244216387393e-05, -0.02144937962293625, -0.002292982302606106, -3.71926071238704e-05, -3.707340147229843e-05, -0.00014518637908622622, -0.004250777419656515, -0.00026675479602999985, -0.0373205803334713, -0.054841794073581696, -0.17427627742290497, -3.2673912048339844, -0.04460940882563591, -0.00015507926582358778, -0.0001411338453181088, -0.0005714452126994729, -1.3901078701019287, -0.08196789771318436, -0.01098725851625204, -0.021185647696256638, -0.01805770955979824, -0.0009245174005627632, -0.1551743745803833, -0.00046039948938414454, -0.0019758481066673994, -4.0531076592742465e-06, -6.341733387671411e-05, -0.001016457681544125, -0.029846802353858948, -1.0967194612021558e-05, -5.0424259825376794e-05, -5.566918844124302e-05, -0.2991470396518707, -1.2704405784606934, -0.0018762619001790881, -0.0877036452293396, -0.020272089168429375, -0.011397724971175194, -0.0993388295173645, -0.07887189835309982, -6.353653589030728e-05, -0.009049354121088982, -0.0012966329231858253, -0.013458591885864735, -4.768370445162873e-07, -1.1920922133867862e-06, -0.0001934579631779343, -0.017037341371178627, -0.04447030648589134, -0.011774683371186256, -0.010776183567941189, -0.013847588561475277, -0.029557153582572937, -0.0034935176372528076, -0.05992179736495018, -0.08296507596969604, -0.0007614573696628213, -0.49712514877319336, -0.05159531906247139, -1.3626646995544434], "finish_reason": "stop"}], "metrics": {"energy": 638.0917501401901, "energy_per_token": 3.7756908292318943, "time": 14.90373, "time_per_token": 0.08818775147928994}}
{"outputs": [{"text": "# Use nltk's stopwords if stopwords argument is not provided\n    if stopwords is None:\n        stopwords = set(nltk.corpus.stopwords.words('english'))\n    else:\n        stopwords = set(stopwords)\n    # Clean the text and tokenize each word\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = re.sub(ALPHANUMERIC, ' ', text.lower())\n        words = nltk.word_tokenize(cleaned_text)\n        cleaned_texts.append(words)\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n    return model", "tokens": ["#", " Use", " n", "lt", "k", "'", "s", " stop", "words", " if", " stop", "words", " argument", " is", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " set", "(", "nl", "tk", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "else", ":", "\n", "        ", "stop", "words", " =", " set", "(", "stop", "words", ")", "\n", "    ", "#", " Clean", " the", " text", " and", " token", "ize", " each", " word", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", "\n", "        ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "cleaned", "_", "text", ")", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "words", ")", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.9218580722808838, -3.3698794841766357, -0.21415774524211884, -0.0003197873884346336, -7.188061863416806e-05, -0.3225739598274231, -0.0001811817055568099, -0.0892438068985939, -0.013918833807110786, -0.308989554643631, -1.650981068611145, -0.011266186833381653, -1.3254468441009521, -0.02573852613568306, -0.038659434765577316, -0.0037889136001467705, -0.04347015917301178, -0.0028177103959023952, -0.026302073150873184, -0.2244219034910202, -1.7523612768854946e-05, -0.0026299909222871065, -0.0008133916999213398, -0.0005011494504287839, -0.0001497156627010554, -0.0031418269500136375, -0.15315338969230652, -0.0012527006911113858, -0.002904128050431609, -1.3196425437927246, -0.000895933189895004, -0.06046057492494583, -0.0002618685248307884, -6.09140915912576e-05, -1.680836794548668e-05, -1.1920922133867862e-06, -0.0001289761275984347, -0.0001426833332516253, -4.768360213347478e-06, -0.0005427317810244858, -6.9141146923357155e-06, -0.1575293242931366, -0.00052998325554654, -2.3841855067985307e-07, -0.001729065552353859, -0.002125387080013752, -1.3066654205322266, -2.086015224456787, -9.583967766957358e-05, -0.0014602008741348982, -0.00604657456278801, -0.1876908391714096, -0.0003219324571546167, -0.0014027050929144025, -0.004512603394687176, -0.006976412143558264, -0.00308870617300272, -0.00011145447206217796, -0.009402044117450714, -0.00819002278149128, -1.2729318141937256, -0.11281254887580872, -0.5012457370758057, -1.1313210725784302, -2.1798107624053955, -1.5211811065673828, -2.172761917114258, -0.0032338013406842947, -3.2983551025390625, -1.7863144874572754, -0.19258461892604828, -0.001708239782601595, -0.9494506120681763, -0.03626427426934242, -0.13297761976718903, -0.34398823976516724, -0.0017651228699833155, -0.5795781016349792, -0.0016794399125501513, -0.0026995427906513214, -0.00891478918492794, -0.03815456107258797, -0.0004011779965367168, -0.007222731597721577, -0.00018809456378221512, -0.0001864259538706392, -0.002264199312776327, -0.7801380157470703, -0.029926519840955734, -0.008221355266869068, -0.05909409373998642, -1.579368233680725, -0.0001573438785271719, -0.0007708676857873797, -0.03994426876306534, -0.15358901023864746, -2.7418097943154862e-06, -2.50339189733495e-06, -1.7881377516459906e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0002889215829782188, -0.06256285309791565, -7.223821739898995e-05, -0.00018380382971372455, -0.016167020425200462, -0.288022518157959, -0.016309291124343872, -0.011808730661869049, -0.6984754204750061, -0.0012538912706077099, -1.2147573232650757, -0.005511090159416199, -1.2334840297698975, -7.83174327807501e-05, -1.1920928244535389e-07, -1.1086402082582936e-05, -0.029733754694461823, -0.0014531777705997229, -0.0001161031104857102, 0.0, -0.00019095504831057042, -0.001404609763994813, -6.9141146923357155e-06, -8.344646857949556e-07, -0.005361582152545452, -0.0022954801097512245, -0.003398121800273657, -1.002907395362854, -0.00015805903240107, -0.19640547037124634, -0.23550136387348175, -0.0015687552513554692, -0.00912814773619175, -1.542186975479126, -0.1271117776632309, -0.0002602000313345343, -0.00043930893298238516, -0.07132861763238907, -0.020785368978977203, -0.636584460735321, -0.23509114980697632, -0.05540091171860695, -0.00010001159535022452, -0.00018690270371735096, -0.0006411403883248568, -0.34092023968696594, -0.0011598295532166958, -0.06763819605112076, -0.00046206763363443315, -0.001510551548562944, -1.9073468138230965e-06, -0.00012909532233607024, -0.0008958140970207751, -0.03120979107916355, -5.483612312673358e-06, -1.7762025890988298e-05, -0.00014888131408952177, -0.1696871966123581, -0.22329574823379517, -1.1920922133867862e-06, -3.814689989667386e-06, -0.0057287318632006645, -0.026263173669576645, -0.16208873689174652, -0.007106503937393427, -0.04458455368876457, -0.08904044330120087, -0.0008538890979252756, -0.37455880641937256, -0.06900174170732498, -1.7709369659423828], "finish_reason": "stop"}], "metrics": {"energy": 620.0933949890139, "energy_per_token": 3.605194156912871, "time": 14.9154415, "time_per_token": 0.08671768313953489}}
{"outputs": [{"text": "# Convert stopwords to lowercase\n    if stopwords is None:\n        stopwords = set(map(lambda w: w.lower(), nltk.corpus.stopwords.words()))\n\n    # Clean and tokenize each text\n    cleaned_texts = []\n    for text in texts:\n        # Lowercase the text\n        text = text.lower()\n\n        # Remove non-alphanumeric characters except space\n        text = ALPHANUMERIC.sub(' ', text)\n\n        # Tokenize the text into words\n        words = text.split()\n\n        # Remove stop words\n        words = [word for word in words if word not in stopwords]\n\n        # Append the cleaned and tokenized text to the list\n        cleaned_texts.append(words)\n\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n\n    return model", "tokens": ["#", " Convert", " stop", "words", " to", " lower", "case", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " set", "(", "map", "(", "lambda", " w", ":", " w", ".", "lower", "()", ",", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "()))", "\n", "\n", "    ", "#", " Clean", " and", " token", "ize", " each", " text", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Lower", "case", " the", " text", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " except", " space", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", "\n", "\n", "        ", "#", " Token", "ize", " the", " text", " into", " words", "\n", "        ", "words", " =", " text", ".", "split", "()", "\n", "\n", "        ", "#", " Remove", " stop", " words", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", "\n", "\n", "        ", "#", " App", "end", " the", " cleaned", " and", " token", "ized", " text", " to", " the", " list", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "words", ")", "\n", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.9218580722808838, -3.6274001598358154, -2.204425811767578, -0.07792477309703827, -0.16281601786613464, -1.9443256855010986, -0.08887139707803726, -0.4194950759410858, -0.002687059575691819, -0.1813192367553711, -0.09410882741212845, -5.6265202147187665e-05, -0.45944011211395264, -0.5092162489891052, -0.0008216104470193386, -0.0012757980730384588, -0.00547291524708271, -0.07883069664239883, -0.0019396792631596327, -0.006784853991121054, -0.49233266711235046, -0.28229084610939026, -1.6824214458465576, -0.00014399446081370115, -1.9232383966445923, -1.890779972076416, -0.01357608288526535, -0.01929081231355667, -0.000196556793525815, -0.006531320512294769, -0.0001823735801735893, -0.003838315838947892, -0.0863339975476265, -1.2516897186287679e-05, -1.311301275563892e-06, -2.4199192921514623e-05, -2.0861407392658293e-05, 0.0, -8.34461570775602e-06, -0.00019238528329879045, -1.4543427823809907e-05, -0.00025078488397412, -1.2397689715726301e-05, -1.2309694290161133, -0.010048517026007175, -0.8313131332397461, -0.0025474736467003822, -0.1812831461429596, -0.6267043948173523, -1.0679086446762085, -1.1190624237060547, -0.001557686016894877, -2.2744545936584473, -0.13892939686775208, -0.21897734701633453, -0.0009413101943209767, -1.3976632356643677, -0.07398780435323715, -0.13236908614635468, -0.04363906756043434, -0.00149555376265198, -0.13131242990493774, -0.0006032554083503783, -0.004383716732263565, -0.008949997834861279, -0.0666980966925621, -0.001167211914435029, -0.010038367472589016, -0.0002592465898487717, -0.00021669900161214173, -0.0027009693440049887, -0.9247402548789978, -3.270280122756958, -0.07720830291509628, -2.782008647918701, -0.019711093977093697, -0.29152458906173706, -0.0006524579366669059, -0.2588472366333008, -0.01767515018582344, -0.06535329669713974, -0.00013279033009894192, -0.002800949150696397, -5.2569914259947836e-05, -0.004114021547138691, -0.7966086864471436, -0.0008281615446321666, -0.0028190179727971554, -0.11570493876934052, -0.5454521775245667, -0.004727258812636137, -0.007917094975709915, -5.090107151772827e-05, -0.00024863966973498464, -0.007285337429493666, -0.17335914075374603, -0.09912800788879395, -0.04235154762864113, -0.0006653240998275578, -0.09802805632352829, -0.0016596842324361205, -0.6470972895622253, -1.311301275563892e-06, 0.0, -9.536738616588991e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -5.23315102327615e-05, -9.417489309271332e-06, -0.11661951243877411, -0.04296222701668739, -0.00010322991875000298, -0.002165950369089842, -0.0011881680693477392, -0.0388878658413887, -0.018498169258236885, -0.00027843413408845663, -0.020947763696312904, -0.95865398645401, -0.000742279109545052, -0.19992923736572266, -0.05903554707765579, -1.6111464500427246, -0.21936923265457153, -0.11024504154920578, -0.00014959646796341985, -0.1404082477092743, -0.001549473381601274, -1.0369861125946045, -2.8371408916427754e-05, -0.009550359100103378, -0.008743219077587128, -0.0024115548003464937, -0.017599720507860184, -0.00031609306461177766, -0.006219437345862389, -0.05692831426858902, -0.017133202403783798, -0.8006492853164673, -0.39688315987586975, -0.00024339574156329036, -0.37142711877822876, -0.011710943654179573, -0.012570788152515888, -0.36655405163764954, -0.0022762122098356485, -1.3232143828645349e-05, -5.602820692729438e-06, -0.00011419598013162613, -0.0005112771177664399, -0.011331957764923573, -0.022481227293610573, -8.106198947643861e-06, -0.0005584587925113738, -1.3351351299206726e-05, -0.02924947626888752, -0.00044431351125240326, -0.02923373132944107, -0.00015567521040793508, -0.35150614380836487, -1.1467664241790771, -4.1960789531003684e-05, -0.10478812456130981, -0.06704653054475784, -0.3330249786376953, -0.02508770488202572, -0.00011836781777674332, -0.18264201283454895, -0.01885526441037655, -0.03580649942159653, -0.09366701543331146, -0.5148715376853943, -0.0001045410826918669, -0.013539273291826248, -8.344646857949556e-07, -2.2172682292875834e-05, -2.47952248173533e-05, -0.00027247529942542315, -8.976056415122002e-05, -0.006439175456762314, -0.0019831054378300905, -0.00011765264935093, -8.618460560683161e-05, -0.010683367028832436, -0.0030702855437994003, -0.020229917019605637, -0.13743442296981812, -0.3635166585445404, -0.030044058337807655, -0.00011467275908216834, -9.953480184776708e-05, -0.0005383234238252044, -0.4163545072078705, -0.0012498432770371437, -0.08364586532115936, -0.00037067217635922134, -0.001687889569438994, -1.5497195136049413e-06, -7.557583012385294e-05, -0.00039033422945067286, -0.0089979637414217, -2.622600959512056e-06, -1.9311717551317997e-05, -2.455681169521995e-05, -0.19277212023735046, -0.3324892520904541, -5.960462772236497e-07, -3.3378546504536644e-06, -0.004324252251535654, -0.032071277499198914, -0.22003929316997528, -0.013130860403180122, -0.06812818348407745, -0.0005403488758020103, -0.33834946155548096, -0.0011592342052608728, -0.45803725719451904, -0.033110104501247406, -1.3643763065338135], "finish_reason": "stop"}], "metrics": {"energy": 758.7396028223027, "energy_per_token": 3.464564396448871, "time": 18.502848, "time_per_token": 0.0844878904109589}}
{"outputs": [{"text": "texts = [clean_text(t, stopwords) for t in texts]\n    word_vectors = Word2Vec(texts)\n    return word_vectors", "tokens": ["text", "s", " =", " [", "clean", "_", "text", "(", "t", ",", " stop", "words", ")", " for", " t", " in", " texts", "]", "\n", "    ", "word", "_", "vectors", " =", " Word", "2", "Vec", "(", "text", "s", ")", "\n", "    ", "return", " word", "_", "vectors", "\n", "\n", "def"], "logprobs": [-3.3996403217315674, -0.03816775605082512, -0.13032382726669312, -0.11536626517772675, -2.901045560836792, -0.1880173534154892, -0.05785322189331055, -0.01667514070868492, -1.8126720190048218, -0.4058852791786194, -0.07164492458105087, -0.004666391294449568, -0.2835977077484131, -0.041400060057640076, -0.00035601475974544883, -0.00018654513405635953, -0.0017603629967197776, -0.02752923220396042, -0.025021785870194435, -0.026873426511883736, -3.4258899688720703, -0.43346554040908813, -0.1392975151538849, -0.002606805879622698, -0.19746151566505432, -0.0011393491877242923, -2.52720492426306e-05, -0.008521031588315964, -0.0761166587471962, -0.0009827552130445838, -0.5338049530982971, -0.01570558175444603, -0.02576141245663166, -0.0165446475148201, -0.0032058770302683115, -7.259582343976945e-05, -4.005352093372494e-05, -0.010062678717076778, -0.01505289413034916, -0.06153322756290436], "finish_reason": "stop"}], "metrics": {"energy": 111.80528221893312, "energy_per_token": 2.795132055473328, "time": 3.1677895, "time_per_token": 0.0791947375}}
{"outputs": [{"text": "texts = [ALPHANUMERIC.sub(' ', text).lower() for text in texts]\n    if not stopwords:\n        stopwords = nltk.corpus.stopwords.words('english')\n    texts = [[word for word in text.split() if word not in stopwords] for text in texts]\n    model = Word2Vec(texts)\n    return model", "tokens": ["text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "    ", "if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", " for", " text", " in", " texts", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3996403217315674, -0.03816775605082512, -0.13032382726669312, -0.11536626517772675, -0.744103193283081, -1.07287787614041e-05, -1.2040065485052764e-05, -4.768360213347478e-06, -2.50339189733495e-06, -9.298280929215252e-06, -0.000286657246761024, -1.3232143828645349e-05, -0.046851713210344315, -0.01975492388010025, -0.000300958170555532, -0.4779601991176605, -0.3217950165271759, -0.258510947227478, -0.054718781262636185, -0.0001573438785271719, -0.22471864521503448, -0.00029237763374112546, -9.202533692587167e-05, -0.0020525832660496235, -0.010010632686316967, -0.08198174089193344, -0.11639702320098877, -0.12699294090270996, -1.2725070714950562, -0.002970451721921563, -3.0517112463712692e-05, -0.003126378171145916, -0.00595521368086338, -0.004612402059137821, -0.17408597469329834, -0.002050679875537753, -0.0021208669058978558, -0.19175352156162262, -2.825220326485578e-05, -1.7762025890988298e-05, -9.202533692587167e-05, -7.855583680793643e-05, -3.2186455882765586e-06, -0.00010752100206445903, -0.0004469349514693022, -1.1920858014491387e-05, -0.014601632952690125, -9.179073458653875e-06, -0.2423776239156723, -0.0014419882791116834, -1.5497195136049413e-06, -8.237022848334163e-05, -0.010360034182667732, -0.05936846137046814, -0.4083061218261719, -0.00928772334009409, -0.010591721162199974, -0.4049588143825531, -0.02187330275774002, -0.002720348071306944, -0.000263894529780373, -2.6940935640595853e-05, -0.17174434661865234, -0.006486907135695219, -0.001527096494100988, -0.017237022519111633, -0.004719784017652273, -0.004761784803122282, -0.006497329566627741, -8.713819261174649e-05, -0.005869296845048666, -1.9192511899746023e-05, -0.008499992080032825, -0.04077732190489769, -0.00038556772051379085, -0.0002217047003796324, -0.00023112009512260556, -0.0045904493890702724, -0.0019664489664137363, -0.07479032874107361, -0.1131410226225853, -0.000658057106193155, -0.003795088967308402, -3.3378546504536644e-06, -3.4570634852570947e-06, -0.001595296896994114, -0.01603892259299755, -0.0001851148990681395, -1.3914048671722412, -0.0029538117814809084, -0.01603880524635315, -0.015393612906336784, -0.000830901088193059, -1.3910927772521973, -1.6331539882230572e-05, -8.821448318485636e-06, -6.794906312279636e-06, -9.894321920000948e-06, -0.08944876492023468], "finish_reason": "stop"}], "metrics": {"energy": 355.6696762485505, "energy_per_token": 3.592622992409601, "time": 9.023363, "time_per_token": 0.0911450808080808}}
{"outputs": [{"text": "if not stopwords:\n        stopwords = set(nltk.corpus.stopwords.words())\n\n    cleaned_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters and lowercase\n        cleaned_text = ALPHANUMERIC.sub(' ', text).lower()\n\n        # Tokenize\n        words = nltk.word_tokenize(cleaned_text)\n\n        # Remove stopwords\n        filtered_words = [word for word in words if word not in stopwords]\n\n        # Add to the list of cleaned texts\n        cleaned_texts.append(filtered_words)\n\n    # Train Word2Vec on the cleaned texts\n    model = Word2Vec(cleaned_texts)\n\n    return model", "tokens": ["if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " set", "(", "nl", "tk", ".", "cor", "pus", ".", "stop", "words", ".", "words", "())", "\n", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " lower", "case", "\n", "        ", "cleaned", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", "\n", "\n", "        ", "#", " Token", "ize", "\n", "        ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "cleaned", "_", "text", ")", "\n", "\n", "        ", "#", " Remove", " stop", "words", "\n", "        ", "filtered", "_", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", "\n", "\n", "        ", "#", " Add", " to", " the", " list", " of", " cleaned", " texts", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "filtered", "_", "words", ")", "\n", "\n", "    ", "#", " Train", " Word", "2", "Vec", " on", " the", " cleaned", " texts", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.8812296390533447, -1.3283451795578003, -0.033378779888153076, -4.625213477993384e-05, -0.0036442552227526903, -0.004977810196578503, -0.007818453013896942, -0.31694597005844116, -0.0032709925435483456, -0.00499631417915225, -1.7221341133117676, -0.0009996660519391298, -0.07818090915679932, -0.0004997196956537664, -4.3748852476710454e-05, -1.9192511899746023e-05, -2.3841855067985307e-07, -0.0001408954558428377, -0.0002308817347511649, -7.748573807475623e-06, -0.0014136569807305932, -1.0490362910786644e-05, -2.627398729324341, -0.011775154620409012, -0.8563530445098877, -0.004396653734147549, -0.8537442684173584, -0.04100962355732918, -0.053186189383268356, -0.03030245564877987, -0.0008985534077510238, -0.37594515085220337, -0.0033521433360874653, -0.02357209287583828, -0.01275629736483097, -0.027263272553682327, -0.00041559641249477863, -0.003720743814483285, -0.00021789084712509066, -0.0005314130103215575, -0.002862405963242054, -1.6052759885787964, -0.42212024331092834, -0.3397173583507538, -0.002053178148344159, -0.004606706090271473, -3.0636318115284666e-05, -0.0002549561613705009, -0.006397837307304144, -2.1836371421813965, -0.14343883097171783, -0.029651591554284096, -0.2489718347787857, -0.0006727101281285286, -0.21717849373817444, -0.06850884109735489, -0.007640424650162458, -0.004114377778023481, -0.2344035655260086, -1.0728830375228426e-06, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -1.7881377516459906e-06, -5.98412734689191e-05, -4.410734163684538e-06, -0.03199796751141548, -0.07982968538999557, -6.949660019017756e-05, -0.01776263490319252, -0.5848485827445984, -0.01372660230845213, -0.02065202221274376, -2.372236667724792e-05, -0.02310776896774769, -1.3727995157241821, -0.0004984090337529778, -0.011876704171299934, -1.2927758693695068, -0.004598162602633238, -2.887451648712158, -0.0004303721070755273, -1.064595341682434, -0.0011697123991325498, -0.6559890508651733, -9.011816291604191e-05, 0.0, -9.179073458653875e-06, -0.031420063227415085, -0.0032645761966705322, -4.9232225137529895e-05, -7.152555099310121e-07, -0.0001760566228767857, -0.0021381154656410217, -4.172316494077677e-06, -3.814689989667386e-06, -0.00414738105610013, -0.00039760314393788576, -0.07299569994211197, -0.0003064401389565319, -0.0022578956559300423, -0.02593020349740982, -0.001447225920855999, -0.906171977519989, -0.12173497676849365, -0.00027771908207796514, -0.7412611246109009, -0.0033432324416935444, -0.011134395375847816, -6.997340824455023e-05, -0.003339668270200491, -0.046187061816453934, -0.0009979988681152463, -5.006777428206988e-06, -5.006777428206988e-06, -8.749579137656838e-05, -0.0004166688595432788, -0.002707746112719178, -0.020127693191170692, -7.986990567587782e-06, -0.0006773561472073197, -4.6491513785440475e-06, -0.04903021082282066, -0.0004690977220889181, -0.04718722775578499, -0.00018988236843142658, -0.7428553700447083, -1.4982883930206299, -0.34681427478790283, -1.2305808067321777, -0.8209846019744873, -0.04725204408168793, -0.03468400239944458, -0.03355862572789192, -0.005138405133038759, -7.807903602952138e-05, -0.0019668058957904577, -1.6689286894688848e-06, -1.5020257706055418e-05, -0.0010489681735634804, -0.0003594706067815423, -0.00303914793767035, -0.23606054484844208, -0.031821999698877335, -1.9073468138230965e-06, -9.178694017464295e-05, -6.878139538457617e-05, -0.00011443436960689723, -0.010180569253861904, -0.003144441172480583, -0.08496225625276566, -0.11438239365816116, -0.7513045072555542, -8.880697714630514e-05, -0.000243634101934731, -2.7476115226745605, -0.147511824965477, -0.02415536344051361, -0.07772482931613922, -0.008781032636761665, -0.000685576000250876, -0.12531448900699615, -0.00036566724884323776, -0.0016586130950599909, -7.152555099310121e-07, -0.00011550712952157483, -0.00019667598826345056, -0.005352926440536976, -5.483612312673358e-06, -1.7404405298293568e-05, -0.00018046658078674227, -2.5747604370117188, -0.0020754244178533554, -0.15493854880332947, -0.000617551791947335, -0.07254401594400406, -0.000880449719261378, -0.3354794681072235, -0.03225655481219292, -1.3432338237762451], "finish_reason": "stop"}], "metrics": {"energy": 662.4993033428188, "energy_per_token": 3.6805516852378823, "time": 15.339443, "time_per_token": 0.08521912777777778}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n    # Clean the texts by removing non-alphanumeric characters and stop words\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = ALPHANUMERIC.sub(' ', text.lower())\n        words = nltk.word_tokenize(cleaned_text)\n        words = [word for word in words if word not in stopwords]\n        cleaned_text = ' '.join(words)\n        cleaned_texts.append(cleaned_text)\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "#", " Clean", " the", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " stop", " words", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", "\n", "        ", "words", " =", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "cleaned", "_", "text", ")", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "(", "words", ")", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "cleaned", "_", "text", ")", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -0.40690895915031433, -1.6569954823353328e-05, -5.960462772236497e-07, -7.962863310240209e-05, -6.90197994117625e-05, -1.0728830375228426e-06, -0.00017450717859901488, -0.00044050050200894475, -1.8358061424805783e-05, -0.009739971719682217, -8.940656698541716e-06, -0.1951821893453598, -0.0014297273010015488, -7.152555099310121e-07, -5.98412734689191e-05, -0.01660667173564434, -0.38039007782936096, -2.1189346313476562, -0.5051369071006775, -0.7822781205177307, -0.22666119039058685, -1.0980448722839355, -0.015387509018182755, -0.5108403563499451, -0.004130286164581776, -0.007830636575818062, -4.3748852476710454e-05, -0.0010482537327334285, -0.006519122049212456, -1.0296852588653564, -0.9053919315338135, -0.5232253670692444, -0.1278935819864273, -0.002637481316924095, -0.279898077249527, -0.011548219248652458, -0.01416027545928955, -0.008737901225686073, -0.00039057256071828306, -0.9499768018722534, -0.0007090438157320023, -0.002053892007097602, -0.00610202644020319, -0.018180515617132187, -0.00030596344731748104, -0.002056271303445101, -0.00018165845540352166, -0.0001776060671545565, -0.002198899397626519, -1.0616803169250488, -0.017095234245061874, -0.019044991582632065, -0.08432630449533463, -0.7812415957450867, -2.0265558760002023e-06, -9.536738616588991e-07, -3.576278118089249e-07, -1.1920928244535389e-07, -2.3841830625315197e-06, -3.480850500636734e-05, -6.318072337307967e-06, -0.022466307505965233, -0.04376527667045593, -0.0001137191939051263, -0.012352275662124157, -0.47248733043670654, -0.014269692823290825, -0.003113662591204047, -0.7482470273971558, -0.001302228425629437, -0.9629382491111755, -0.0033075883984565735, -0.8291314244270325, -3.242440288886428e-05, -5.8412379075889476e-06, -1.764281842042692e-05, -0.009244140237569809, -0.0010744519531726837, -6.0794889577664435e-05, 0.0, -0.0001392267586197704, -0.0014080620603635907, -4.410734163684538e-06, -2.9802276912960224e-06, -0.004626404028385878, -0.0027402015402913094, -0.00128020322881639, -1.56654953956604, -0.04871257394552231, -0.0018825681181624532, -0.17078247666358948, -0.001208766596391797, -1.1324817933200393e-05, -6.318072337307967e-06, -0.00010013079008786008, -0.0007040405762381852, -0.019661417230963707, -0.02296879142522812, -1.1324817933200393e-05, -0.004080779384821653, -2.884823152271565e-05, -0.05633331835269928, -0.0058869547210633755, -0.0012285312404856086, -0.011707997880876064, -7.748573807475623e-06, -0.00019274283840786666, -1.2153620719909668, -0.011022394523024559, -2.4914430468925275e-05, -0.00018976318824570626, -0.00014602071314584464, -0.0004058252670802176, -0.0005305789527483284, -0.00011395759065635502, -0.004453146830201149, -0.00040391870425082743, -0.005343559198081493, -5.960462772236497e-07, -3.576272320060525e-06, -0.0006474544061347842, -0.00010644822759786621, -0.00012742661056108773, -0.0008469808381050825, -0.00044204952428117394, -2.622600959512056e-06, -1.9073468138230965e-06, -0.0018490137299522758, -0.00026425207033753395, -0.23656059801578522, -0.024651534855365753, -0.11906469613313675, -0.14278608560562134, -0.0508420467376709, -0.000125281119835563, -0.00010275312524754554, -0.000641974329482764, -0.43539732694625854, -0.0011644733604043722, -0.09616456925868988, -0.00039152585668489337, -0.0013303249143064022, -2.622600959512056e-06, -0.0001586549769854173, -0.0010214593494310975, -0.013237097300589085, -6.794906312279636e-06, -6.0437283536884934e-05, -0.00010859376925509423, -1.2640737295150757, -0.001921713468618691, -0.023889552801847458, -0.023003391921520233, -0.0008388814167119563, -1.4991847276687622, -2.8729025871143676e-05, -4.172316494077677e-06, -6.794906312279636e-06, -7.510157047363464e-06, -0.07367710769176483], "finish_reason": "stop"}], "metrics": {"energy": 599.1263800888062, "energy_per_token": 3.503663041455007, "time": 14.298224, "time_per_token": 0.08361534502923976}}
{"outputs": [{"text": "# If no stopwords are provided, use nltk's stopwords\n    if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    # Clean and preprocess the texts\n    cleaned_texts = []\n    for text in texts:\n        # Remove all non-alphanumeric characters except space\n        text = re.sub(ALPHANUMERIC, ' ', text)\n        # Lowercase and remove stop words\n        text = ' '.join([word for word in text.lower().split() if word not in stopwords])\n        cleaned_texts.append(text)\n\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n\n    return model", "tokens": ["#", " If", " no", " stop", "words", " are", " provided", ",", " use", " n", "lt", "k", "'", "s", " stop", "words", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Clean", " and", " pre", "process", " the", " texts", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " all", " non", "-", "al", "phan", "umeric", " characters", " except", " space", "\n", "        ", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", "\n", "        ", "#", " Lower", "case", " and", " remove", " stop", " words", "\n", "        ", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "lower", "()", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "])", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "text", ")", "\n", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.9218580722808838, -2.911127805709839, -2.3338184356689453, -0.006183777004480362, -0.05285743251442909, -0.17729514837265015, -0.045558758080005646, -0.008669713512063026, -0.1423279494047165, -0.1075439602136612, -0.00047946401173248887, -0.003374716965481639, -0.025712616741657257, -0.0002903516869992018, -0.03718448057770729, -0.0075667197816073895, -0.12274053692817688, -0.00195609824731946, -0.01643911376595497, -0.23972128331661224, -2.2053474822314456e-05, -0.003054716857150197, -0.0010276519460603595, -0.00047994061606004834, -0.00011967896716669202, -0.003173793200403452, -0.17562319338321686, -0.0010588521836325526, -0.0034263969864696264, -0.3134506642818451, -1.6689160474925302e-05, -1.3470558769768104e-05, -4.60137271147687e-05, -4.136476854910143e-05, -1.4305104514278355e-06, -0.0001512651506345719, -0.00018487652414478362, -2.002696055569686e-05, -0.004992044065147638, -6.437280717364047e-06, -0.15496611595153809, -0.0010667116148397326, -8.344646857949556e-07, -5.23315102327615e-05, -0.0038435410242527723, -0.20604977011680603, -0.0009766814764589071, -0.058354996144771576, -0.30687612295150757, -1.0228105783462524, -0.4415760040283203, -0.053601957857608795, -0.2488386482000351, -0.15169738233089447, -0.06010523810982704, -0.0007372760446742177, -0.49932071566581726, -0.00979274045675993, -0.010259745642542839, -0.012830091640353203, -0.0003564914222806692, -0.7094013690948486, -0.0003351603518240154, -0.0024097710847854614, -0.0021212236024439335, -0.02162928320467472, -0.0003110878460574895, -0.0013233008794486523, -0.0001003691868390888, -0.00014554394874721766, -0.001415918697603047, -0.6412680149078369, -0.13041026890277863, -1.3244494199752808, -0.0034306738525629044, -0.0011923355050384998, -0.0038742972537875175, -1.2159273865108844e-05, -6.770858453819528e-05, -0.002241124864667654, -0.024733642116189003, -0.01926637440919876, -0.18751129508018494, -0.0005091324565000832, -1.4122487306594849, -0.01728295162320137, -0.9327652454376221, -7.033323527139146e-06, -0.00021872512297704816, -0.02948516234755516, -0.07909651100635529, -2.3841830625315197e-06, -1.6689286894688848e-06, -8.344646857949556e-07, -2.145764938177308e-06, -3.3378546504536644e-06, -0.00027843413408845663, -0.08584224432706833, -2.5510462364763953e-05, -9.023735765367746e-05, -0.004396416246891022, -0.34780383110046387, -0.18194830417633057, -0.04364854097366333, -0.02587200701236725, -0.2503258287906647, -0.01904674619436264, -0.85013747215271, -0.6856845617294312, -0.06257897615432739, -0.4851504862308502, -0.011567072942852974, -0.00023409964342135936, -0.5375523567199707, -0.02914782240986824, -0.8900749087333679, -3.814689989667386e-06, -0.00018451895448379219, -1.9550132492440753e-05, -0.20702940225601196, -0.037432312965393066, -0.035527776926755905, -1.2636104656849056e-05, -3.814624506048858e-05, -0.039396610110998154, -0.0004551566671580076, -0.2915526330471039, -1.0847986231965479e-05, -0.00029762129997834563, -0.0011363723315298557, -0.01348999422043562, -0.004509042948484421, -0.0009925207123160362, -0.0063102999702095985, -5.066266385256313e-05, -0.015353817492723465, -6.318072337307967e-06, -0.005488445982336998, -0.00019071667338721454, -0.003320063930004835, -0.10462000221014023, -1.0728830375228426e-06, -8.821448318485636e-06, -0.00012814177898690104, -3.6238969187252223e-05, -5.972207145532593e-05, -0.005683334544301033, -0.0024414039216935635, -0.010072591714560986, -5.185469490243122e-05, -0.009899095632135868, -0.0008942657150328159, -0.017776571214199066, -0.32045331597328186, -0.16215017437934875, -0.02344680391252041, -4.3987260141875595e-05, -3.85038583772257e-05, -0.00036590558011084795, -0.29820162057876587, -0.00047600860125385225, -0.07011984288692474, -0.000285584683297202, -0.0012023370945826173, -1.4305104514278355e-06, -0.00011419598013162613, -0.0020913651678711176, -0.022847855463624, -5.483612312673358e-06, -7.83174327807501e-05, -3.85038583772257e-05, -0.44568198919296265, -0.33824464678764343, -8.344646857949556e-07, -2.7418097943154862e-06, -0.0019080305937677622, -0.016244668513536453, -0.11587492376565933, -0.014226914383471012, -0.3217701315879822, -0.0006201728247106075, -0.10878277570009232, -0.000773488252889365, -0.4934302866458893, -0.05948876962065697, -1.472960352897644], "finish_reason": "stop"}], "metrics": {"energy": 661.0884176101683, "energy_per_token": 3.5542388043557436, "time": 15.77539, "time_per_token": 0.0848139247311828}}
{"outputs": [{"text": "if not stopwords:\n        stopwords = set(stopwords.words('english'))\n    cleaned_texts = []\n    for text in texts:\n        text = ALPHANUMERIC.sub(' ', text)\n        text = text.lower()\n        cleaned_texts.append([w for w in nltk.word_tokenize(text) if w not in stopwords])\n    model = Word2Vec(cleaned_texts)\n    return model", "tokens": ["if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " set", "(", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "([", "w", " for", " w", " in", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", " if", " w", " not", " in", " stop", "words", "])", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -1.3283451795578003, -0.033378779888153076, -4.625213477993384e-05, -0.0036442552227526903, -0.004977810196578503, -0.007818453013896942, -0.31694597005844116, -0.0032709925435483456, -0.00499631417915225, -1.7221341133117676, -0.0009996660519391298, -2.611769199371338, -0.0036379601806402206, -0.741182267665863, -0.0010962436208501458, -0.06719612330198288, -0.0005849081207998097, -5.9960475482512265e-05, -0.020321033895015717, -0.032646384090185165, -0.49097785353660583, -1.063145399093628, -0.05082618445158005, -0.0402674525976181, -0.04196571186184883, -0.0011437548091635108, -0.6954938173294067, -0.0025362963788211346, -0.013408368453383446, -0.029841827228665352, -0.028113098815083504, -0.000259365770034492, -0.005428691860288382, -0.0002862997353076935, -0.00045015214709565043, -0.003185557434335351, -1.2635754346847534, -0.013714607805013657, -0.29600468277931213, -3.2186455882765586e-06, -1.3947389561508317e-05, -2.539125671319198e-05, -1.0728830375228426e-06, -9.179073458653875e-06, -0.00012957210128661245, -9.179073458653875e-06, -0.02698146179318428, -0.056163158267736435, -0.000302030734019354, -0.020261108875274658, -0.1765410602092743, -1.1636481285095215, -0.00077622797107324, -0.5906397700309753, -0.010503724217414856, -0.11519502103328705, -0.00010764019680209458, -0.022845057770609856, -5.066266385256313e-05, -0.11409048736095428, -0.0023445994593203068, -0.9297420382499695, -0.00935598649084568, -0.04640672728419304, -0.24884487688541412, -0.0009597701136954129, -0.0006525770877487957, -0.44570380449295044, -1.5186598300933838, -0.0063692908734083176, -0.0001287377526750788, -8.713819261174649e-05, -1.301111102104187, -2.253030106658116e-05, -0.0001736728590913117, -5.721882189391181e-05, -0.08027171343564987, -0.0351693369448185, -0.00013541258522309363, -2.3841855067985307e-07, -0.0003233625029679388, -0.015112075954675674, -0.005985194351524115, -0.021948060020804405, -0.06329840421676636, -0.04280279576778412, -9.524368942948058e-05, -0.001557686016894877, -0.00011169286881340668, -0.033154506236314774, -0.0011893587652593851, -0.0914454534649849, -0.16942529380321503, -0.0014329414116218686, -0.003288934240117669, -2.9802276912960224e-06, -6.794906312279636e-06, -0.0013135385233908892, -0.016263552010059357, -2.2411095415009186e-05, -6.735097849741578e-05, -0.0002643712505232543, -0.9879854917526245, -0.003993513528257608, -0.01428802590817213, -0.01682836003601551, -0.0012037658598273993, -1.5318576097488403, -3.0397906812140718e-05, -9.536697689327411e-06, -5.245195097813848e-06, -1.3112935448589269e-05, -0.07812996953725815], "finish_reason": "stop"}], "metrics": {"energy": 414.909152944565, "energy_per_token": 3.6395539731979385, "time": 9.881841, "time_per_token": 0.08668281578947368}}
{"outputs": [{"text": "# Get default stopwords if not provided\n    if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    # Clean and remove stop words\n    cleaned_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters except space\n        text = ALPHANUMERIC.sub(' ', text.lower())\n        # Split into words and remove stop words\n        words = [word for word in text.split() if word not in stopwords]\n        cleaned_texts.append(words)\n\n    # Train Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n\n    return model", "tokens": ["#", " Get", " default", " stop", "words", " if", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Clean", " and", " remove", " stop", " words", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " except", " space", "\n", "        ", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", "\n", "        ", "#", " Split", " into", " words", " and", " remove", " stop", " words", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "words", ")", "\n", "\n", "    ", "#", " Train", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "#"], "logprobs": [-0.9218580722808838, -4.206503868103027, -3.160067558288574, -0.05122005566954613, -0.08676474541425705, -0.16519621014595032, -0.5276457071304321, -0.01212087832391262, -0.02920154482126236, -0.0024812407791614532, -0.02067887969315052, -0.32683005928993225, -3.9457496313843876e-05, -0.0030791987664997578, -0.0006905793561600149, -0.0004732680681627244, -0.0003499372396618128, -0.0025038341991603374, -0.11942941695451736, -0.0009257083875127137, -0.002700850600376725, -0.3138211667537689, -2.1219027985353023e-05, -3.814689989667386e-06, -4.160317621426657e-05, -8.642300235806033e-05, -7.152555099310121e-07, -0.00010299152199877426, -0.00032455421751365066, -1.0371154530730564e-05, -0.003933788277208805, -8.34461570775602e-06, -0.15917472541332245, -0.0008646087371744215, -8.344646857949556e-07, -5.61460001335945e-05, -0.004126961808651686, -0.3462625741958618, -0.0012817509705200791, -0.05680972710251808, -0.39229273796081543, -0.7490770220756531, -2.6859354972839355, -0.004952425602823496, -1.322109341621399, -0.1830597221851349, -0.0009068905492313206, -0.3843909204006195, -0.031139535829424858, -0.06761981546878815, -0.02537562884390354, -0.0004925706889480352, -0.5293739438056946, -0.0010118131758645177, -0.0014938872773200274, -0.003070404287427664, -0.024837490171194077, -0.00025412190007045865, -0.0018042728770524263, -0.00013302871957421303, -0.00012611546844709665, -0.0012919898144900799, -1.048473834991455, -0.3492635488510132, -0.15399900078773499, -0.0028597908094525337, -0.004941512830555439, -2.0861407392658293e-05, -0.0002172949316445738, -0.007650243584066629, -0.40288472175598145, -0.04205692559480667, -0.14157019555568695, -0.0009635811438784003, -1.6769206523895264, -0.019782155752182007, -0.47301778197288513, -1.0728830375228426e-06, -7.426462980220094e-05, -7.152555099310121e-07, 0.0, -3.6954811548639555e-06, -5.2689116273541003e-05, -6.079655122448457e-06, -0.038262300193309784, -0.02497539483010769, -6.687417771900073e-05, -0.014187542721629143, -1.1979877948760986, -0.01883678138256073, -0.003941387869417667, -0.185629740357399, -0.13367953896522522, -0.11086942255496979, -1.8405344486236572, -0.5475483536720276, -0.11136342585086823, -0.7124353051185608, -0.06959869712591171, -0.0025988395791500807, -0.1488078385591507, -0.009330476634204388, -0.0003280101518612355, -0.14484749734401703, -0.0016236230731010437, -0.023282716050744057, -0.026830602437257767, -0.0025880197063088417, -1.7046782886609435e-05, -1.0847986231965479e-05, -0.024008268490433693, -4.303362584323622e-05, -0.0006708040600642562, -0.006721979938447475, -0.0008381668012589216, -0.0035766696091741323, -0.018088500946760178, -1.2516897186287679e-05, -0.005629400257021189, -6.556489552167477e-06, -0.016235167160630226, -0.0002422039397060871, -0.0027434115763753653, -0.4350004196166992, -6.556489552167477e-06, -2.5152843591058627e-05, -0.00017212340026162565, -0.0001102625101339072, -8.380061626667157e-05, -0.018341343849897385, -0.0008191090892069042, -5.578839045483619e-05, -0.0002766464895103127, -0.016132298856973648, -0.0010189585154876113, -0.014932287856936455, -0.08411886543035507, -0.32854771614074707, -7.509902934543788e-05, -8.67805938469246e-05, -0.03821101412177086, -0.17119954526424408, -0.0007989790174178779, -0.08386731892824173, -0.000311802898067981, -0.001303061842918396, -1.5497195136049413e-06, -0.00023684080224484205, -0.00029559535323642194, -0.00312816072255373, -2.861018856492592e-06, -2.2172682292875834e-05, -2.3364747903542593e-05, -0.12852171063423157, -0.36616143584251404, -7.152555099310121e-07, -2.145764938177308e-06, -0.0019904817454516888, -0.016307415440678596, -0.1091628149151802, -0.013378609903156757, -0.43246862292289734, -0.0008006466086953878, -0.10577643662691116, -0.0007082099909894168, -0.4887547194957733, -0.0466916523873806, -1.307374358177185], "finish_reason": "stop"}], "metrics": {"energy": 603.6604323348995, "energy_per_token": 3.5932168591363065, "time": 14.082958, "time_per_token": 0.08382713095238095}}
{"outputs": [{"text": "if not stopwords:\n        stopwords = nltk.corpus.stopwords.words('english')\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    word_lists = [[word for word in text.split() if word not in stopwords] for text in cleaned_texts]\n    model = Word2Vec(word_lists, min_count=1)\n    return model", "tokens": ["if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "word", "_", "lists", " =", " [[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "word", "_", "lists", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -1.3283451795578003, -0.033378779888153076, -4.625213477993384e-05, -0.0036442552227526903, -0.004977810196578503, -0.007818453013896942, -0.31694597005844116, -0.0032709925435483456, -0.00499631417915225, -0.22793248295783997, -1.9311717551317997e-05, -7.986990567587782e-06, -6.878139538457617e-05, -3.397406908334233e-05, -5.960462772236497e-07, -0.0001147919538198039, -0.0004239375703036785, -2.682172998902388e-05, -0.011012489907443523, -7.033323527139146e-06, -0.21486380696296692, -0.001354015665128827, -1.0728830375228426e-06, -8.248942322097719e-05, -0.015045378357172012, -0.39485108852386475, -0.808246910572052, -0.06669263541698456, -0.05580629035830498, -0.03564293310046196, -0.0010112178279086947, -0.4028477370738983, -0.2833552062511444, -3.814689989667386e-06, -1.0967194612021558e-05, -2.145764938177308e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -0.0001323135511483997, -6.437280717364047e-06, -0.02511734887957573, -0.015690796077251434, -0.0002493547508493066, -0.2870052456855774, -1.124733328819275, -0.007839743979275227, -0.007625873666256666, -0.31735146045684814, -0.0001501924270996824, -8.046303264563903e-05, -0.0009289240115322173, -0.005987090524286032, -0.021518100053071976, -0.006893423851579428, -3.0324723720550537, -0.07226692140102386, -0.5522545576095581, -0.0012262690579518676, -2.2513082027435303, -0.00928819552063942, -0.002934675430878997, -0.0001662831346038729, -5.447716102935374e-05, -0.11873868852853775, -0.0013367536012083292, -0.0013240152038633823, -0.03611837700009346, -0.005396679043769836, -0.0058928802609443665, -0.0115409130230546, -0.00010585224663373083, -0.008881705813109875, -4.2914423829643056e-05, -0.009928249754011631, -0.04390880838036537, -0.0005334384622983634, -0.0001389883691444993, -0.0011092231143265963, -1.0371154530730564e-05, -0.00023398046323563904, -0.00022623363474849612, -0.001090289675630629, -0.0027291453443467617, -0.05215919390320778, -0.2670081853866577, -0.0008488865569233894, -0.0035873602610081434, -3.814689989667386e-06, -5.722029527532868e-06, -0.000990257947705686, -0.011844662018120289, -2.682172998902388e-05, -2.1934269170742482e-05, -0.7022542953491211, -0.31021377444267273, -1.1920922133867862e-06, -5.483612312673358e-06, -0.006799654569476843, -0.029654599726200104, -0.1315782368183136, -0.020202113315463066, -0.020317062735557556, -0.017530962824821472, -0.0006980843027122319, -1.23946213722229, -3.4689302992774174e-05, -5.960446742392378e-06, -3.933898824470816e-06, -1.1801649634435307e-05, -0.08632678538560867], "finish_reason": "stop"}], "metrics": {"energy": 409.9657611408232, "energy_per_token": 3.6933852355029115, "time": 9.246336, "time_per_token": 0.08330032432432431}}
{"outputs": [{"text": "# Load the stop words if not provided\n    if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    # Clean each text, lower case, remove stop words, and tokenize\n    preprocessed_texts = [\n        [word for word in ALPHANUMERIC.sub(' ', t.lower()).split() if word not in stopwords]\n        for t in texts\n    ]\n    # Train the model and return it\n    return Word2Vec(preprocessed_texts, size=100)", "tokens": ["#", " Load", " the", " stop", " words", " if", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Clean", " each", " text", ",", " lower", " case", ",", " remove", " stop", " words", ",", " and", " token", "ize", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "\n", "        ", "[", "word", " for", " word", " in", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " t", ".", "lower", "())", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "for", " t", " in", " texts", "\n", "    ", "]", "\n", "    ", "#", " Train", " the", " model", " and", " return", " it", "\n", "    ", "return", " Word", "2", "Vec", "(", "pre", "processed", "_", "text", "s", ",", " size", "=", "1", "0", "0", ")"], "logprobs": [-0.9218580722808838, -2.157515287399292, -2.407914876937866, -0.37978214025497437, -2.3056252002716064, -0.5257947444915771, -0.08572638034820557, -0.006948947440832853, -0.0434451624751091, -0.0024791003670543432, -0.014413527213037014, -0.48043957352638245, -5.495397272170521e-05, -0.005101046059280634, -0.0012163867941126227, -0.00037746457383036613, -0.0001879753835964948, -0.003163335844874382, -0.18105410039424896, -0.003036889713257551, -0.0036089783534407616, -0.37020909786224365, -1.4424220353248529e-05, -5.960462772236497e-07, -4.7205765440594405e-05, -7.56950321374461e-05, -4.768370445162873e-07, -0.00019762947340495884, -0.0004207202873658389, -2.5152843591058627e-05, -0.00735066132619977, -8.106198947643861e-06, -0.13687892258167267, -0.0008331642020493746, -3.576278118089249e-07, -6.186770770000294e-05, -0.005875696428120136, -0.22931694984436035, -0.0014142522122710943, -0.03804611787199974, -0.38271433115005493, -3.2385447025299072, -0.12217120826244354, -2.305448532104492, -0.6699022054672241, -3.050426721572876, -0.7435373067855835, -0.7552492618560791, -0.0994865819811821, -0.25570499897003174, -0.6449864506721497, -0.057401061058044434, -1.416043758392334, -0.002501455834135413, -0.4419946074485779, -0.0003914067056030035, -3.6461682319641113, -0.08979208767414093, -0.20517124235630035, -0.482336163520813, -0.16071492433547974, -0.000874851830303669, -1.9122633934020996, -1.6330854892730713, -0.023327205330133438, -0.7604199051856995, -0.13512097299098969, -0.060986168682575226, -0.0004292996891308576, -0.00032240914879366755, -0.31264016032218933, -5.960462772236497e-07, -9.536738616588991e-07, -1.2755313036905136e-05, -4.768370445162873e-07, -1.0728830375228426e-06, -0.0009970461251214147, -3.2543604902457446e-05, -0.03764874488115311, -0.04692621901631355, -0.00013910756388213485, -2.9370973110198975, -1.8733052015304565, -0.03315819799900055, -0.0016113643068820238, -0.005608418490737677, -0.03182950243353844, -0.011682077310979366, -0.08977334201335907, -0.022366875782608986, -0.0068613397888839245, -0.00030310326837934554, -0.007630605716258287, -0.0001784403866622597, -0.028349747881293297, -0.11117773503065109, -0.008430605754256248, -0.002186766592785716, -0.005446357652544975, -0.0005006728461012244, -0.0013727060286328197, -0.21980412304401398, -0.03203456476330757, -0.00015984688070602715, -0.00034648136352188885, -2.322397232055664, -0.4431709051132202, -0.4346156418323517, -0.3259398937225342, -1.7501037120819092, -3.0493459701538086, -0.021786293014883995, -0.21418477594852448, -0.007410064339637756, -0.002420355100184679, -1.1405060291290283, -0.0035671668592840433, -2.1457441107486375e-05, -1.3828182090946939e-05, -0.0035211960785090923, -0.06176422908902168, -0.0004568248405121267, -4.660974445869215e-05, -2.4676019165781327e-05, -0.0003693613689392805, -1.1719698905944824, -1.4864786863327026, -0.006356971804052591, -0.2667042911052704, -0.14309793710708618, -0.04248465970158577, -2.1237173080444336], "finish_reason": "stop"}], "metrics": {"energy": 487.3162370452881, "energy_per_token": 3.691789674585516, "time": 11.145965, "time_per_token": 0.08443912878787879}}
{"outputs": [{"text": "# Import the nltk library if stopwords are not provided\n    if stopwords is None:\n        stopwords = set(nltk.corpus.stopwords.words('english'))\n\n    # Clean and preprocess the texts\n    clean_texts = [re.sub(ALPHANUMERIC, ' ', text.lower()).strip() for text in texts]\n    preprocessed_texts = [text for text in clean_texts if text]\n    # Train the Word2Vec model using the cleaned and preprocessed texts\n    model = Word2Vec(preprocessed_texts, min_count=1)\n\n    return model", "tokens": ["#", " Import", " the", " n", "lt", "k", " library", " if", " stop", "words", " are", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " set", "(", "nl", "tk", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "\n", "    ", "#", " Clean", " and", " pre", "process", " the", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "text", " for", " text", " in", " clean", "_", "text", "s", " if", " text", "]", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", " using", " the", " cleaned", " and", " pre", "processed", " texts", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "pre", "processed", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.9218580722808838, -3.353876829147339, -1.5244487524032593, -3.464275598526001, -0.0013461584458127618, -0.00103586888872087, -1.0389173030853271, -0.46209749579429626, -0.1793014407157898, -0.024887260049581528, -0.1407920867204666, -0.0013679441763088107, -0.0035147815942764282, -0.06514289230108261, -0.00439950218424201, -0.04749330133199692, -0.14692741632461548, -2.777537883957848e-05, -0.001508170971646905, -0.0011244647903367877, -0.001680391957052052, -0.0002217047003796324, -0.004131948109716177, -1.0573217868804932, -0.0009864469757303596, -0.0027703975792974234, -0.8461290597915649, -0.0013935388997197151, -0.1024775430560112, -0.00047636605449952185, -8.332382276421413e-05, -4.672895011026412e-05, -1.4305104514278355e-06, -0.00013600854435935616, -0.0001902399235405028, -7.033323527139146e-06, -0.0008486483711749315, -1.1444026313256472e-05, -0.10723506659269333, -0.0006812873762100935, -1.6689286894688848e-06, -0.0016540905926376581, -0.005048622377216816, -0.4188179075717926, -0.003198272082954645, -0.04154118895530701, -0.4563794434070587, -1.246815800666809, -0.5331547856330872, -0.05419892072677612, -0.13006794452667236, -0.25070488452911377, -0.11308417469263077, -0.0008632985409349203, -2.5272815227508545, -0.0035036150366067886, -0.018983585759997368, -0.010190363973379135, -0.0004638549580704421, -1.6472034454345703, -1.970818042755127, -0.00042691652197390795, -0.001208409434184432, -0.04656603932380676, -0.11114691197872162, -4.887569048150908e-06, -2.861018856492592e-06, -3.2186455882765586e-06, -4.768370445162873e-07, -1.0728830375228426e-06, -0.00025686301523819566, -0.07087784260511398, -4.994744449504651e-05, -0.00029213930247351527, -0.15771707892417908, -0.30905336141586304, -0.008705994114279747, -0.017913462594151497, -0.49198731780052185, -2.0508620738983154, -0.002508233767002821, -0.3745177388191223, -0.00016437610611319542, -9.63164638960734e-05, -0.0007277462864294648, -0.005376878194510937, -0.006171692628413439, -0.12366007268428802, -0.40598759055137634, -0.0035336690489202738, -0.0032333259005099535, -0.0024925374891608953, -0.0030193000566214323, -0.00011252723925281316, -0.9947769641876221, -2.2485766410827637, -0.3114580512046814, -0.014806264080107212, -0.0003081085451412946, -0.0681186094880104, -2.50339189733495e-06, -2.4437606043647975e-05, -1.0847986231965479e-05, -0.012143254280090332, -0.10087304562330246, -0.24895435571670532, -0.07964399456977844, -0.44138219952583313, -4.041878700256348, -1.3236197233200073, -0.09424997866153717, -0.03393619880080223, -8.40390202938579e-05, -0.00012659224739763886, -0.0005812147865071893, -2.3919949531555176, -0.10872642695903778, -2.6750853061676025, -0.03146684914827347, -0.0028805925976485014, -0.00018344627460464835, -0.00906081311404705, -0.030055047944188118, -0.005886717699468136, -0.12910786271095276, -0.0008132726070471108, -0.003340618684887886, -4.291525328881107e-06, -7.86750388215296e-05, -0.008108317852020264, -0.03857284039258957, -0.00024399164249189198, -3.8742269680369645e-05, -7.676783570786938e-05, -9.16677454370074e-05, -0.3903656303882599, -0.30104178190231323, -1.311301275563892e-06, -4.0531076592742465e-06, -0.005259249359369278, -0.036668866872787476, -0.1907193958759308, -0.008706584572792053, -1.114927887916565, -0.003720743814483285, -0.23705777525901794, -0.0016592082101851702, -0.40323594212532043, -0.043531790375709534, -1.3771862983703613], "finish_reason": "stop"}], "metrics": {"energy": 571.8449137496947, "energy_per_token": 3.8122994249979647, "time": 13.447851, "time_per_token": 0.08965234}}
{"outputs": [{"text": "# Set stopwords from nltk if not provided\n    if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n    # Preprocess the texts\n    clean_texts = []\n    for text in texts:\n        # Remove non-alphanumeric characters except space\n        clean_text = re.sub(ALPHANUMERIC, ' ', text)\n        # Lowercase\n        clean_text = clean_text.lower()\n        # Tokenize and remove stop words\n        clean_tokens = [token for token in clean_text.split() if token not in stopwords]\n        clean_texts.append(' '.join(clean_tokens))\n    # Train Word2Vec model\n    model = Word2Vec(clean_texts, min_count=1)\n    return model", "tokens": ["#", " Set", " stop", "words", " from", " n", "lt", "k", " if", " not", " provided", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "#", " Pre", "process", " the", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " except", " space", "\n", "        ", "clean", "_", "text", " =", " re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", "\n", "        ", "#", " Lower", "case", "\n", "        ", "clean", "_", "text", " =", " clean", "_", "text", ".", "lower", "()", "\n", "        ", "#", " Token", "ize", " and", " remove", " stop", " words", "\n", "        ", "clean", "_", "tokens", " =", " [", "token", " for", " token", " in", " clean", "_", "text", ".", "split", "()", " if", " token", " not", " in", " stop", "words", "]", "\n", "        ", "clean", "_", "text", "s", ".", "append", "('", " '", ".", "join", "(", "clean", "_", "tokens", "))", "\n", "    ", "#", " Train", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "clean", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.9218580722808838, -4.234347343444824, -0.8276453018188477, -0.05819620192050934, -3.2176265716552734, -0.11436038464307785, -0.0014763895887881517, -0.00023636408150196075, -0.17395566403865814, -0.07675729691982269, -0.02724076807498932, -0.07073790580034256, -0.002378731733188033, -0.016925295814871788, -0.25610193610191345, -2.002696055569686e-05, -0.0067908926866948605, -0.0006736631621606648, -0.0006718761869706213, -0.0001892864383989945, -0.003058044472709298, -0.15330208837985992, -0.000952386180870235, -0.0029403807129710913, -0.2779518663883209, -1.8596476365928538e-05, -9.536738616588991e-07, -5.8530047681415454e-05, -5.829164365422912e-05, -1.1920922133867862e-06, -0.00015627116954419762, -0.0002526917669456452, -1.6331539882230572e-05, -0.007617828901857138, -8.34461570775602e-06, -0.1439516842365265, -0.0010013333521783352, -5.960462772236497e-07, -6.16293036728166e-05, -0.004754547495394945, -1.1753442287445068, -0.056608669459819794, -2.824751138687134, -0.0824265405535698, -0.8213109374046326, -0.25090914964675903, -0.1952696591615677, -0.0018198610050603747, -3.0153074264526367, -0.013887913897633553, -0.025943677872419357, -0.01292788702994585, -0.0010887415846809745, -0.625666618347168, -0.0013666347367689013, -0.0022808508947491646, -0.0063730813562870026, -0.05147971957921982, -0.00039104922325350344, -0.0019973821472376585, -0.00017915551143232733, -0.00022980909852776676, -0.0019076736643910408, -0.773127555847168, -0.22276553511619568, -0.22434884309768677, -0.0019342063460499048, -0.007414915598928928, -3.111314072157256e-05, -0.00037222131504677236, -0.006149182096123695, -0.32936909794807434, -0.04286561161279678, -0.15682905912399292, -0.0011356578906998038, -0.6697903871536255, -0.007964283227920532, -0.004280927591025829, -0.004359385464340448, -1.0856283903121948, -1.4066597032069694e-05, -0.000559292733669281, -0.06110100820660591, -0.10954345017671585, -4.529942543740617e-06, -8.344646857949556e-07, -2.3841830625315197e-06, -1.1920928244535389e-07, -2.9802276912960224e-06, -0.00023946279543451965, -0.07356846332550049, -4.088794958079234e-05, -0.00011550712952157483, -0.012613166123628616, -0.6301414966583252, -0.30149829387664795, -0.003316618502140045, -0.010223403573036194, -0.27586644887924194, -0.03495893254876137, -1.4304885864257812, -0.0002840353990904987, -0.011417289264500141, -3.0278701160568744e-05, -0.00011383838864276186, -0.001408419106155634, -0.0009803733555600047, -5.483612312673358e-06, -5.006664650863968e-05, -4.95898348162882e-05, -0.0003965306677855551, -1.6093124941107817e-05, -0.001493173069320619, -0.001035987981595099, -0.0033193512354046106, -1.512747049331665, -0.0044511291198432446, -2.2503228187561035, -0.07616294175386429, -0.001081834896467626, -0.6089238524436951, -0.00493439519777894, -0.00039033422945067286, -1.5951894521713257, -0.00013612773909699172, -1.6385283470153809, -0.0001559135998832062, -0.04353213310241699, -0.739233136177063, -0.0019091013818979263, -3.93382906622719e-05, -2.3007127310847864e-05, -0.061398930847644806, -6.794906312279636e-06, -7.867782187531702e-06, -0.0003383779258001596, -0.0015031717484816909, -0.010134783573448658, -0.005641491152346134, -0.0034601360093802214, -0.027431346476078033, -2.6464111215318553e-05, -0.0012179345358163118, -4.291525328881107e-06, -0.015256141312420368, -0.00013958434283267707, -0.0021782023832201958, -0.9977096319198608, -1.4662635294371285e-05, -0.0005834784242324531, -0.06229216232895851, -0.00020466140995267779, -0.0002656822034623474, -1.6411197185516357, -0.0003601856005843729, -7.331102824537084e-05, -5.376194530981593e-05, -0.00012218205665703863, -6.365573790390044e-05, -5.8412379075889476e-06, -0.0006139777251519263, -0.0002892790944315493, -0.0020354522857815027, -0.06383401900529861, -0.01647605188190937, -0.0839499682188034, -1.9880809783935547, -8.940297266235575e-05, -0.00011801023356383666, -0.12763738632202148, -0.13104256987571716, -0.0012028133496642113, -0.09300387650728226, -0.0004040378553327173, -0.0016175531782209873, -1.6689286894688848e-06, -7.295342220459133e-05, -0.0014267513761296868, -0.024376897141337395, -1.811964830267243e-05, -0.0007240534760057926, -0.00024232311989180744, -0.3706873059272766, -0.4584950804710388, -7.152555099310121e-07, -2.9802276912960224e-06, -0.0017145470483228564, -0.02688085287809372, -0.13997605443000793, -0.00887733418494463, -0.04009946063160896, -0.10166226327419281, -0.0006748544401489198, -0.21488803625106812, -0.04744226112961769, -1.6494659185409546], "finish_reason": "stop"}], "metrics": {"energy": 680.9677930335993, "energy_per_token": 3.474325474661221, "time": 16.587097, "time_per_token": 0.08462804591836735}}
{"outputs": [{"text": "texts = [re.sub(ALPHANUMERIC, ' ', text.lower()) for text in texts]\n    texts = [[word for word in text.split() if word not in (stopwords if stopwords else nltk.corpus.stopwords.words('english'))] for text in texts]\n    model = Word2Vec(texts, min_count=1)\n    return model", "tokens": ["text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " (", "stop", "words", " if", " stop", "words", " else", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "]", " for", " text", " in", " texts", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "#"], "logprobs": [-3.3996403217315674, -0.03816775605082512, -0.13032382726669312, -0.11536626517772675, -1.1564300060272217, -0.00025054652360267937, -0.004191542509943247, -0.04521813988685608, -0.06776241213083267, -1.3232143828645349e-05, -2.372236667724792e-05, -5.602820692729438e-06, -4.768370445162873e-07, -5.125986263010418e-06, -0.001705383649095893, -0.12898768484592438, -0.00013815402053296566, -0.0006070678355172276, -0.3760538399219513, -1.4037553071975708, -0.019023120403289795, -0.012670609168708324, -0.369911789894104, -0.0002898749662563205, -0.0001995364436879754, -0.0013936578761786222, -0.0074394093826413155, -0.06586192548274994, -0.14020994305610657, -2.9403607845306396, -0.01759163849055767, -0.017558373510837555, -0.7824344038963318, -0.057184021919965744, -0.008804075419902802, -0.0019397982396185398, -0.0001573438785271719, -0.0800052210688591, -0.007723824121057987, -0.0007441850611940026, -0.046575482934713364, -0.02841799706220627, -0.2203657478094101, -0.010476474650204182, -5.23315102327615e-05, -0.8782123327255249, -0.016315624117851257, -0.0004096384218428284, -0.5308393836021423, -0.00573216937482357, -0.000303818320389837, -0.06589295715093613, -0.04643256217241287, -9.179073458653875e-06, -0.0004642124113161117, -0.00016675988445058465, -5.6265202147187665e-05, 0.0, -8.356221951544285e-05, -0.0003010773507412523, -7.10462118149735e-05, -0.004423595033586025, -4.172316494077677e-06, -0.31234443187713623, -0.002278472064062953, -5.722029527532868e-06, -0.0012415089877322316, -0.0073912497609853745, -0.3116016685962677, -0.0016795588890090585, -0.0002498314715921879, -0.0007129749283194542, -0.0045465431176126, -0.005644573364406824, -0.06412319093942642, -0.37588760256767273, -0.0009332115878351033, -0.0061484710313379765, -4.0531076592742465e-06, -4.410734163684538e-06, -0.0024209495168179274, -0.02307538501918316, -0.00013326710904948413, -0.34025445580482483, -0.2180107980966568, -1.7881377516459906e-06, -6.437280717364047e-06, -0.012214384973049164, -0.01850682869553566, -0.0601055771112442, -0.012963660061359406, -0.028533628210425377, -0.0173176322132349, -0.0009471459779888391, -0.525909423828125, -0.05713324621319771, -1.4536006450653076], "finish_reason": "stop"}], "metrics": {"energy": 332.8031321563721, "energy_per_token": 3.430960125323424, "time": 8.198969, "time_per_token": 0.08452545360824743}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = set(nltk.corpus.stopwords.words('english'))\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text).lower() for text in texts]\n    filtered_texts = [[word for word in nltk.word_tokenize(text) if word not in stopwords] for text in cleaned_texts]\n    model = Word2Vec(filtered_texts, size=100, window=5, min_count=1, workers=4)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " set", "(", "nl", "tk", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "    ", "filtered", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " n", "lt", "k", ".", "word", "_", "token", "ize", "(", "text", ")", " if", " word", " not", " in", " stop", "words", "]", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "filtered", "_", "text", "s", ",", " size", "=", "1", "0", "0", ",", " window", "=", "5", ",", " min", "_", "count", "=", "1", ",", " workers", "=", "4", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -1.1952695846557617, -0.0010172913316637278, -0.1680932641029358, -0.0005043664714321494, -5.149708886165172e-05, -2.658331868587993e-05, -3.576278118089249e-07, -0.00015805903240107, -0.00035577642847783864, -6.556489552167477e-06, -0.0010231266496703029, -8.34461570775602e-06, -0.17117592692375183, -0.0008423355757258832, -5.960462772236497e-07, -0.002534037223085761, -0.02322879061102867, -0.49496397376060486, -1.160110592842102, -0.040780872106552124, -0.040725819766521454, -0.03157531097531319, -0.0009348789462819695, -0.6977959871292114, -0.23667313158512115, -3.2186455882765586e-06, -1.7881377516459906e-06, -2.622600959512056e-06, -4.768370445162873e-07, -2.145764938177308e-06, -0.00012766500003635883, -4.6491513785440475e-06, -0.029577523469924927, -0.011229291558265686, -0.0002712835557758808, -0.28198444843292236, -0.42137610912323, -0.1105939969420433, -0.04072193056344986, -0.00025567124248482287, -0.5656814575195312, -0.000339569611242041, -6.19869097135961e-05, -0.0017234723782166839, -0.007095613982528448, -0.03405142202973366, -0.007179059088230133, -3.8218202590942383, -0.0009329734020866454, -0.09151986986398697, -0.004268226679414511, -0.0002944036095868796, -0.7385707497596741, -0.008656713180243969, -0.002273238729685545, -8.177422569133341e-05, -7.879423355916515e-05, -1.9719573259353638, -0.00021836756786797196, -6.949660019017756e-05, -5.113947918289341e-05, -0.009054434485733509, -0.00985070038586855, -7.354942499659956e-05, 0.0, -0.0004172646440565586, -0.05579851195216179, -0.008624567650258541, -0.03457460552453995, -0.022589154541492462, -0.015230194665491581, -0.00011884459672728553, -0.0011042217956855893, -2.539125671319198e-05, -0.015921369194984436, -0.14935636520385742, -0.0006683023530058563, -0.00038556772051379085, -0.020252931863069534, -8.702239938429557e-06, -3.373566141817719e-05, -0.0003367095487192273, -0.0008537700050510466, -0.0007180972606875002, -0.02133619412779808, -0.19834323227405548, -0.0007537146448157728, -0.0033410938922315836, -2.50339189733495e-06, -3.099436753473128e-06, -0.0014033003244549036, -0.058487456291913986, -1.5735502529423684e-05, -0.00020823694649152458, -0.00013219437096267939, -0.2416691929101944, -1.6539713144302368, -0.00212848000228405, -0.0728762298822403, -0.013387314043939114, -0.006142191588878632, -0.06687027215957642, -0.035559531301259995, -9.011816291604191e-05, -0.002416787436231971, -0.0007428746903315187, -0.003622994292527437, -3.576278118089249e-07, -1.4305104514278355e-06, -0.00011288482346571982, -0.018942996859550476, -0.034341152757406235, -0.007348057813942432, -0.005417190957814455, -0.016107430681586266, -0.05775218456983566, -0.017667653039097786, -0.015097398310899734, -0.012392425909638405, -0.0004487222759053111, -1.5180739164352417, -1.8358061424805783e-05, -5.125986263010418e-06, -5.245195097813848e-06, -7.390948667307384e-06, -0.08734048902988434], "finish_reason": "stop"}], "metrics": {"energy": 484.17410708236685, "energy_per_token": 3.5341175699442835, "time": 11.568304, "time_per_token": 0.08444017518248174}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    cleaned_texts = [re.sub(ALPHANUMERIC, ' ', text.lower()) for text in texts]\n    processed_texts = [\n        ' '.join(\n            [\n                word for word in text.split()\n                if word not in stopwords\n            ]\n        ) for text in cleaned_texts\n    ]\n    model = Word2Vec(processed_texts, min_count=1)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "processed", "_", "text", "s", " =", " [", "\n", "        ", "'", " '", ".", "join", "(", "\n", "            ", "[", "\n", "                ", "word", " for", " word", " in", " text", ".", "split", "()", "\n", "                ", "if", " word", " not", " in", " stop", "words", "\n", "            ", "]", "\n", "        ", ")", " for", " text", " in", " cleaned", "_", "text", "s", "\n", "    ", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "processed", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -0.40690895915031433, -1.6569954823353328e-05, -5.960462772236497e-07, -7.962863310240209e-05, -6.90197994117625e-05, -1.0728830375228426e-06, -0.00017450717859901488, -0.00044050050200894475, -1.8358061424805783e-05, -0.009739971719682217, -8.940656698541716e-06, -0.1951821893453598, -0.0014297273010015488, -7.152555099310121e-07, -5.98412734689191e-05, -0.01660667173564434, -1.163345217704773, -0.0037087483797222376, -0.7560765743255615, -0.023997677490115166, -0.05007811263203621, -0.031385406851768494, -0.0006637753685936332, -0.6515089869499207, -1.938312292098999, -0.00037353215157054365, -0.0027015639934688807, -0.04170139133930206, -0.14195358753204346, -3.6954811548639555e-06, -3.099436753473128e-06, -2.3841830625315197e-06, -7.152555099310121e-07, -1.9073468138230965e-06, -0.0003103728231508285, -0.08465057611465454, -6.0437283536884934e-05, -0.00040928093949332833, -0.23098795115947723, -0.4985930919647217, -0.012236288748681545, -0.010004259645938873, -0.34024664759635925, -0.00015984688070602715, -0.00011240804451517761, -0.0009914488764479756, -0.005520100239664316, -0.021680260077118874, -0.10147055983543396, -4.155060768127441, -0.0025993152521550655, -0.007118103560060263, -0.002281088614836335, -0.00015209948469419032, -0.4984307587146759, -2.3930346965789795, -0.017599252983927727, -0.4805547893047333, -6.508615479106084e-05, -0.00017867876158561558, -0.00015686711412854493, -1.9834119081497192, -2.4548377990722656, -0.0038725160993635654, -0.21969513595104218, -1.8577075004577637, -0.0010810013627633452, -0.042356688529253006, -0.37465527653694153, -0.001209600013680756, -0.001969780307263136, -0.11642450839281082, -0.009007297456264496, -0.0035776200238615274, -0.08732181042432785, -0.6952514052391052, -0.0015718498034402728, -0.004156641196459532, -0.04473617672920227, -0.019109902903437614, -4.9470632802695036e-05, -0.04135728254914284, -0.00013076403411105275, -0.16752025485038757, -0.0372961163520813, -0.013895673677325249, -0.001167807262390852, -0.002449490362778306, -3.313963316031732e-05, -0.6308751702308655, -0.002416311763226986, -0.0004158347437623888, -0.0011141052236780524, -5.722029527532868e-06, -5.8412379075889476e-06, -0.0002224197960458696, -0.03200489282608032, -0.006270259618759155, -0.0005146132898516953, -0.0006973695708438754, -0.5800145268440247, -0.45536693930625916, -0.0018034399254247546, -0.004231428727507591, -3.3378546504536644e-06, -2.861018856492592e-06, -0.0021802245173603296, -0.4025880992412567, -8.22540732769994e-06, -0.00012170527770649642, -6.19869097135961e-05, -0.6741741299629211, -0.2737571895122528, -1.5497195136049413e-06, -6.198863957251888e-06, -0.004351432900875807, -0.032894305884838104, -0.10423093289136887, -0.00918862596154213, -0.1331378072500229, -0.016950612887740135, -0.0009264229447580874, -0.5295023918151855, -0.04415406659245491, -1.2154985666275024], "finish_reason": "stop"}], "metrics": {"energy": 465.96983477306355, "energy_per_token": 3.4262487850960555, "time": 11.35551, "time_per_token": 0.08349639705882353}}
{"outputs": [{"text": "# If stopwords are not provided, use nltk's stopwords\n    if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    # Clean the texts by removing non-alphanumeric characters and stopwords, and lowercasing\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = ' '.join([ALPHANUMERIC.sub(' ', w.lower()).strip() for w in text.split()])\n        cleaned_text = ' '.join([w for w in cleaned_text.split() if w not in stopwords])\n        cleaned_texts.append(cleaned_text)\n\n    # Train the Word2Vec model\n    model = Word2Vec(cleaned_texts, min_count=1)\n    return model", "tokens": ["#", " If", " stop", "words", " are", " not", " provided", ",", " use", " n", "lt", "k", "'", "s", " stop", "words", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "#", " Clean", " the", " texts", " by", " removing", " non", "-", "al", "phan", "umeric", " characters", " and", " stop", "words", ",", " and", " lower", "c", "asing", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "([", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " w", ".", "lower", "())", ".", "strip", "()", " for", " w", " in", " text", ".", "split", "()", "])", "\n", "        ", "cleaned", "_", "text", " =", " '", " '", ".", "join", "([", "w", " for", " w", " in", " cleaned", "_", "text", ".", "split", "()", " if", " w", " not", " in", " stop", "words", "])", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Train", " the", " Word", "2", "Vec", " model", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.9218580722808838, -2.911127805709839, -0.11909093707799911, -0.030913254246115685, -0.532462477684021, -0.002811647718772292, -0.011138993315398693, -0.011705170385539532, -0.14819642901420593, -0.07175255566835403, -0.00040546778473071754, -0.004032101482152939, -0.03799516335129738, -0.000416907190810889, -0.03426593542098999, -0.005666265729814768, -0.08449677377939224, -0.0019091013818979263, -0.011869165115058422, -0.21017897129058838, -2.0503786799963564e-05, -0.0030343940015882254, -0.0010453957365825772, -0.0004198861715849489, -0.00028081765049137175, -0.0033684202935546637, -0.14288488030433655, -0.0010986251290887594, -0.002623451640829444, -0.29343974590301514, -1.1920858014491387e-05, -1.1086402082582936e-05, -3.9457496313843876e-05, -4.95898348162882e-05, -2.0265558760002023e-06, -0.00016425691137555987, -0.00018714107864070684, -3.0397906812140718e-05, -0.004428698215633631, -6.198863957251888e-06, -0.13241523504257202, -0.001068736077286303, -7.152555099310121e-07, -3.671578815556131e-05, -0.004204719327390194, -0.23056462407112122, -0.0009006972541101277, -0.06373045593500137, -0.32757139205932617, -0.8237013816833496, -0.11154705286026001, -0.45705458521842957, -0.008085614070296288, -0.4009897708892822, -0.0009029601933434606, -0.0038577911909669638, -2.5987286790041253e-05, -0.0002734287118073553, -0.0022807319182902575, -0.9494104385375977, -0.5409544706344604, -1.128064513206482, -2.402820110321045, -0.35032686591148376, -0.07405190169811249, -0.18895983695983887, -0.02729865349829197, -0.34649407863616943, -0.0008100565755739808, -0.24275587499141693, -0.005121682770550251, -0.012813026085495949, -0.008347028866410255, -0.0003400462737772614, -0.3924671411514282, -0.0005875291535630822, -0.0014135378878563643, -0.002543787471950054, -0.01975889690220356, -0.00032693761750124395, -0.0017050266033038497, -0.00010477947944309562, -0.0001530530134914443, -0.0015174552099779248, -0.9710568785667419, -0.011750413104891777, -0.049373164772987366, -0.051516856998205185, -1.2954654693603516, -5.578839045483619e-05, -0.0003401654539629817, -8.225102646974847e-05, -0.13453270494937897, -1.5726706981658936, -2.622600959512056e-06, -1.0728830375228426e-06, -1.4305104514278355e-06, -2.145764938177308e-06, -2.3841830625315197e-06, -0.00010966652916977182, -9.536697689327411e-06, -0.0048055630177259445, -0.4246634542942047, -0.0001854724541772157, -2.9166946411132812, -1.3302156925201416, -0.02815714105963707, -0.007462482899427414, -2.5083580017089844, -0.02337600104510784, -0.0060376874171197414, -0.08884609490633011, -0.00012766500003635883, -0.00017391123401466757, -0.03431224450469017, -0.005173628218472004, -0.01508201565593481, -0.04410159960389137, -1.7217763662338257, -0.0743083581328392, -0.0011305375955998898, -0.21579872071743011, -0.00018523407925385982, -0.029903264716267586, -0.21985675394535065, -0.024833770468831062, -2.13382354559144e-05, -9.691245941212401e-05, -1.3470558769768104e-05, -0.009895672090351582, -0.09858309477567673, -0.005194263532757759, -5.769562994828448e-05, -1.6093124941107817e-05, -0.004323421511799097, -9.65590606938349e-06, -1.311301275563892e-06, -0.0009790633339434862, -0.0004557524516712874, -0.003477005288004875, -0.0009302341495640576, -0.004432258661836386, -0.025102585554122925, -1.5616295058862306e-05, -0.014462760649621487, -2.169585604860913e-05, -0.037395913153886795, -0.005131051875650883, -0.0015650654677301645, -0.033466748893260956, -3.3378546504536644e-06, -3.242440288886428e-05, -0.02803764119744301, -0.00040749352774582803, -0.00010525626566959545, -0.004727021791040897, -0.001976324012503028, -7.390948667307384e-06, -2.622600959512056e-06, -0.01087123155593872, -0.0002456601650919765, -0.010916275903582573, -0.001279012649320066, -0.010579807683825493, -0.24921482801437378, -0.21548576653003693, -0.030387572944164276, -5.4596363042946905e-05, -6.41325386823155e-05, -0.0005198557628318667, -0.7409549951553345, -0.0010203876299783587, -0.11253669857978821, -0.0004606377915479243, -0.001412466517649591, -2.264974000354414e-06, -8.737658936297521e-05, -0.005081120412796736, -0.042063213884830475, -8.34461570775602e-06, -3.40932747349143e-05, -9.357491217087954e-05, -0.5757014751434326, -0.5817855000495911, -1.1920922133867862e-06, -5.8412379075889476e-06, -0.003237247234210372, -0.028971930965781212, -0.1434992402791977, -0.012403846718370914, -1.1538828611373901, -0.034046582877635956, -0.0009259465732611716, -0.3833804726600647, -0.040930554270744324, -1.6066480875015259], "finish_reason": "stop"}], "metrics": {"energy": 720.0197283382417, "energy_per_token": 3.6735700425420497, "time": 16.594446, "time_per_token": 0.08466554081632653}}
{"outputs": [{"text": "if not stopwords:\n        stopwords = nltk.corpus.stopwords.words('english')\n    cleaned_texts = [ALPHANUMERIC.sub(' ', text.lower()) for text in texts]\n    tokenized_texts = [nltk.word_tokenize(text) for text in cleaned_texts]\n    filtered_texts = [[word for word in tokens if word not in stopwords] for tokens in tokenized_texts]\n    model = Word2Vec(filtered_texts, min_count=1)\n    return model", "tokens": ["if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ".", "lower", "())", " for", " text", " in", " texts", "]", "\n", "    ", "token", "ized", "_", "text", "s", " =", " [", "nl", "tk", ".", "word", "_", "token", "ize", "(", "text", ")", " for", " text", " in", " cleaned", "_", "text", "s", "]", "\n", "    ", "filtered", "_", "text", "s", " =", " [[", "word", " for", " word", " in", " tokens", " if", " word", " not", " in", " stop", "words", "]", " for", " tokens", " in", " token", "ized", "_", "text", "s", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "filtered", "_", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "if"], "logprobs": [-0.8812296390533447, -1.3283451795578003, -0.033378779888153076, -4.625213477993384e-05, -0.0036442552227526903, -0.004977810196578503, -0.007818453013896942, -0.31694597005844116, -0.0032709925435483456, -0.00499631417915225, -0.22793248295783997, -1.9311717551317997e-05, -7.986990567587782e-06, -6.878139538457617e-05, -3.397406908334233e-05, -5.960462772236497e-07, -0.0001147919538198039, -0.0004239375703036785, -2.682172998902388e-05, -0.011012489907443523, -7.033323527139146e-06, -0.21486380696296692, -0.001354015665128827, -1.0728830375228426e-06, -8.248942322097719e-05, -0.015045378357172012, -0.39485108852386475, -0.808246910572052, -0.06669263541698456, -0.05580629035830498, -0.03564293310046196, -0.0010112178279086947, -0.4028477370738983, -0.2833552062511444, -3.814689989667386e-06, -1.0967194612021558e-05, -2.145764938177308e-06, -2.3841855067985307e-07, -2.3841830625315197e-06, -0.0001323135511483997, -6.437280717364047e-06, -0.02511734887957573, -0.015690796077251434, -0.0002493547508493066, -0.2870052456855774, -1.124733328819275, -0.007839743979275227, -0.007625873666256666, -0.31735146045684814, -0.0001501924270996824, -8.046303264563903e-05, -0.0009289240115322173, -0.005987090524286032, -0.021518100053071976, -0.006893423851579428, -1.2273385524749756, -0.008764726109802723, -0.008068113587796688, -0.02729262039065361, -0.0029576150700449944, -0.00040046300273388624, -0.10233991593122482, -0.38534659147262573, -0.0001858300092862919, -1.8358061424805783e-05, -0.04620368033647537, -0.003252575406804681, -0.00010632903286023065, -2.3841855067985307e-07, -0.0007393010891973972, -0.03919259458780289, -0.0097969900816679, -0.0016680150292813778, -6.103329360485077e-05, -1.597391747054644e-05, -0.0007883778307586908, -2.9802276912960224e-06, -4.6491513785440475e-06, -7.402622577501461e-05, -0.0012205539969727397, -0.001715261023491621, -0.0087282108142972, -0.515867292881012, -0.00020776021119672805, -0.12222786247730255, -0.0017606009496375918, -0.00020323118951637298, -0.049357734620571136, -0.013864636421203613, -0.001259844284504652, -4.4225667807040736e-05, -4.589452510117553e-05, -0.8299167156219482, -0.001980012049898505, -0.008369372226297855, -0.007756235543638468, -2.4318398573086597e-05, -0.008223483338952065, -6.818538531661034e-05, -0.03253157436847687, -0.022683436051011086, -0.0005072260973975062, -0.00011455356434453279, -0.001387943746522069, -2.3841855067985307e-07, -5.8412379075889476e-06, -1.1920922133867862e-06, -3.933898824470816e-06, -0.00036042393185198307, -0.0007641970878466964, -0.02834939956665039, -0.24734441936016083, -0.0011305375955998898, -0.002739607123658061, -3.4570634852570947e-06, -2.622600959512056e-06, -0.0011372057488188148, -0.034299224615097046, -1.6569954823353328e-05, -6.687417771900073e-05, -8.177422569133341e-05, -0.10381291061639786, -0.2645563781261444, -5.960462772236497e-07, -3.2186455882765586e-06, -0.003986745607107878, -0.03825966268777847, -0.11800002306699753, -0.017216986045241356, -0.01848670095205307, -0.012861749157309532, -0.00045134371612221, -0.37074655294418335, -0.06046663597226143, -1.5243628025054932], "finish_reason": "stop"}], "metrics": {"energy": 461.1033135356902, "energy_per_token": 3.4155801002643718, "time": 11.355881, "time_per_token": 0.08411763703703704}}
{"outputs": [{"text": "texts = [re.sub(ALPHANUMERIC, ' ', text).lower() for text in texts]\n\n    if stopwords is None:\n        nltk.download('stopwords')\n        stopwords = nltk.corpus.stopwords.words('english')\n\n    texts = [[word for word in text.split() if word not in stopwords] for text in texts]\n\n    model = Word2Vec(texts, min_count=1)\n    return model", "tokens": ["text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "if", " stop", "words", " is", " None", ":", "\n", "        ", "nl", "tk", ".", "download", "('", "stop", "words", "')", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", "]", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3996403217315674, -0.03816775605082512, -0.13032382726669312, -0.11536626517772675, -1.1564300060272217, -0.00025054652360267937, -0.004191542509943247, -0.04521813988685608, -0.06776241213083267, -1.3232143828645349e-05, -2.372236667724792e-05, -5.602820692729438e-06, -4.768370445162873e-07, -5.125986263010418e-06, -0.001705383649095893, -0.12898768484592438, -0.00013815402053296566, -0.0006070678355172276, -0.3760538399219513, -0.2853929102420807, -0.5922108292579651, -0.10109621286392212, -0.0002865380665753037, -0.20235350728034973, -0.0003307510633021593, -0.00013565097469836473, -0.0019723977893590927, -0.006800482980906963, -0.051680341362953186, -2.1118056774139404, -0.0015728019643574953, -0.1893499493598938, -0.3008940815925598, -4.6967357775429264e-05, -0.030570846050977707, -0.02529694326221943, -0.0007697956170886755, -0.002342934487387538, -0.0033154303673654795, -2.0563604831695557, -8.451581379631534e-05, -0.003317806636914611, -0.003916214685887098, -0.01554409321397543, -0.0010517071932554245, -1.5258672647178173e-05, -0.031083259731531143, -0.02020316570997238, -0.004649542272090912, -0.051326852291822433, -0.00415854062885046, -0.002622500527650118, -0.4992806315422058, -2.0265373677830212e-05, -9.536738616588991e-07, -2.038458114839159e-05, -0.00012838016846217215, -4.768370445162873e-07, -3.8742269680369645e-05, -8.928377064876258e-05, -1.549708758830093e-05, -0.0032500799279659986, -5.602820692729438e-06, -0.11993823945522308, -0.0019369428046047688, -9.536738616588991e-07, -4.649054244509898e-05, -0.010575443506240845, -0.09203167259693146, -0.001970613142475486, -1.2315189838409424, -0.015648195520043373, -0.020879819989204407, -0.2934262454509735, -0.023976147174835205, -0.0027041793800890446, -0.00019536493346095085, -3.135155202471651e-05, -0.13544563949108124, -0.005918833427131176, -0.0015311434399336576, -0.02546778880059719, -0.006426856853067875, -0.00335618294775486, -0.00954622682183981, -5.9126061387360096e-05, -0.013390136882662773, -3.71926071238704e-05, -0.011244026012718678, -0.03883340209722519, -0.0005346299149096012, -0.00014745102089364082, -0.00016139635408762842, -0.003341331612318754, -0.0017924923449754715, -0.5176536440849304, -0.0003225283289793879, -0.2055450826883316, -0.0005837167263962328, -0.0028586022090166807, -2.145764938177308e-06, -3.933898824470816e-06, -0.0012411518255248666, -0.01426934078335762, -0.00019631843315437436, -0.18064998090267181, -0.2087976336479187, -8.344646857949556e-07, -3.3378546504536644e-06, -0.004874845035374165, -0.020503943786025047, -0.1027272492647171, -0.011388414539396763, -0.6957497596740723, -0.024538477882742882, -0.0006121906917542219, -1.4123766422271729, -9.894321920000948e-06, -6.6756979322235566e-06, -9.536697689327411e-06, -1.1205610462639015e-05, -0.08879569917917252], "finish_reason": "stop"}], "metrics": {"energy": 454.3027119979856, "energy_per_token": 3.723792721294964, "time": 10.112027, "time_per_token": 0.08288546721311475}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = nltk.corpus.stopwords.words()\n    cleaned_texts = []\n    for text in texts:\n        cleaned_text = ALPHANUMERIC.sub(' ', text).lower().split()\n        filtered_text = [word for word in cleaned_text if word not in stopwords]\n        cleaned_texts.append(filtered_text)\n    model = Word2Vec(cleaned_texts)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "()", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "cleaned", "_", "text", " =", " AL", "PH", "AN", "UM", "ER", "IC", ".", "sub", "('", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", "\n", "        ", "filtered", "_", "text", " =", " [", "word", " for", " word", " in", " cleaned", "_", "text", " if", " word", " not", " in", " stop", "words", "]", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "filtered", "_", "text", ")", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "cleaned", "_", "text", "s", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -0.40690895915031433, -1.6569954823353328e-05, -5.960462772236497e-07, -7.962863310240209e-05, -6.90197994117625e-05, -1.0728830375228426e-06, -0.00017450717859901488, -0.00044050050200894475, -1.8358061424805783e-05, -0.009739971719682217, -8.940656698541716e-06, -1.9152826070785522, -0.015436810441315174, -0.41418007016181946, -0.9263631701469421, -0.058522310107946396, -0.05481854826211929, -0.03505988046526909, -0.0008456706418655813, -1.1614322662353516, -0.001884352881461382, -0.01021054107695818, -0.018532924354076385, -0.03796280175447464, -0.00035232058144174516, -0.003603752003982663, -0.00027938754647038877, -0.0005432083853520453, -0.0031087901443243027, -0.6533780097961426, -0.03127102926373482, -0.00957562681287527, -0.09033548831939697, -0.7475680708885193, -1.6689286894688848e-06, -8.344646857949556e-07, -1.1920922133867862e-06, -2.3841855067985307e-07, -1.5497195136049413e-06, -6.103329360485077e-05, -3.6954811548639555e-06, -0.029584120959043503, -0.0397605262696743, -0.00024470672360621393, -0.0116370664909482, -0.37575507164001465, -0.26716625690460205, -0.039763160049915314, -0.0002196785935666412, -1.3527964353561401, -0.18177039921283722, -0.05978795513510704, -0.02107161656022072, -0.0009511952521279454, -2.6054348945617676, -0.010083685629069805, -0.03636716306209564, -0.002722963457927108, -0.06708476692438126, -0.059882499277591705, -0.0015062665333971381, -3.45700973412022e-05, -2.0265373677830212e-05, -0.0003678122302517295, -4.887569048150908e-06, -4.482168878894299e-05, -0.0010186012368649244, -0.009265990927815437, -0.012693562544882298, -2.8013790142722428e-05, -0.007157518062740564, -1.2993727978027891e-05, -0.04842084273695946, -0.0029377657920122147, -0.0008996253600344062, -0.027169421315193176, -3.576272320060525e-06, -3.2543604902457446e-05, -0.0013431822881102562, -0.0005609607324004173, -0.0014947204617783427, -0.13184377551078796, -0.011112350039184093, -5.006777428206988e-06, -2.1815061700181104e-05, -0.0003275334893260151, -0.00029297350556589663, -0.1221548542380333, -0.22782891988754272, -0.0011301804333925247, -0.0029632013756781816, -2.264974000354414e-06, -4.6491513785440475e-06, -0.000954649003688246, -0.005092743784189224, -7.510157047363464e-06, -2.7656173188006505e-05, -0.00016592556494288146, -0.955963671207428, -0.002097788965329528, -0.01236616913229227, -0.014793814159929752, -0.0012428186601027846, -1.463470697402954, -2.610649426060263e-05, -6.198863957251888e-06, -4.410734163684538e-06, -1.1801649634435307e-05, -0.08309036493301392], "finish_reason": "stop"}], "metrics": {"energy": 410.22838912391654, "energy_per_token": 3.418569909365971, "time": 9.878921, "time_per_token": 0.08232434166666666}}
{"outputs": [{"text": "if stopwords is None:\n        stopwords = set(nltk.corpus.stopwords.words('english'))\n    texts = [re.sub(ALPHANUMERIC, ' ', text).lower().split() for text in texts]\n    texts = [[word for word in text if word not in stopwords] for text in texts]\n    model = Word2Vec(texts, min_count=1)\n    return model", "tokens": ["if", " stop", "words", " is", " None", ":", "\n", "        ", "stop", "words", " =", " set", "(", "nl", "tk", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "'))", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ")", ".", "lower", "()", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [[", "word", " for", " word", " in", " text", " if", " word", " not", " in", " stop", "words", "]", " for", " text", " in", " texts", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8812296390533447, -0.3157414495944977, -4.5298504119273275e-05, -0.008688976988196373, -0.009972628206014633, -0.0008791395812295377, -0.0028297165408730507, -0.006440123077481985, -0.13084638118743896, -0.0035118116065859795, -0.004627353046089411, -1.1952695846557617, -0.0010172913316637278, -0.1680932641029358, -0.0005043664714321494, -5.149708886165172e-05, -2.658331868587993e-05, -3.576278118089249e-07, -0.00015805903240107, -0.00035577642847783864, -6.556489552167477e-06, -0.0010231266496703029, -8.34461570775602e-06, -0.17117592692375183, -0.0008423355757258832, -5.960462772236497e-07, -0.002534037223085761, -0.02322879061102867, -0.49496397376060486, -1.8582555055618286, -0.02229529805481434, -0.05388291925191879, -0.4349450170993805, -1.4778406620025635, -0.0002087136817863211, -0.0023752828128635883, -0.034372713416814804, -0.049166180193424225, -4.291525328881107e-06, -6.437280717364047e-06, -3.4570634852570947e-06, -4.768370445162873e-07, -1.311301275563892e-06, -0.00036840804386883974, -0.06872677803039551, -6.317892984952778e-05, -0.0005060345865786076, -0.3810180127620697, -0.6767846345901489, -0.23897135257720947, -0.09135200083255768, -0.00040415700641460717, -0.6374046206474304, -0.09021861851215363, -0.007029090076684952, -0.03284677863121033, -0.00045658653834834695, -0.0002184867626056075, -0.0011398254428058863, -0.008953896351158619, -0.02293570525944233, -0.006545295473188162, -0.36515969038009644, -0.0010240792762488127, -0.015375887043774128, -0.056789565831422806, -0.03489423543214798, -0.0030757521744817495, -5.6503606174374e-05, -5.411955135059543e-05, -0.0823129191994667, -0.000552263343706727, -0.008401526138186455, -0.008658013306558132, -3.313963316031732e-05, -0.0011943596182391047, -4.23184028477408e-05, -0.04595232009887695, -0.0033549948129802942, -0.00023552982020191848, -5.400034933700226e-05, -0.0001829695247579366, -0.003393250983208418, -0.0036108787171542645, -0.029515603557229042, -0.19028694927692413, -0.0007306052139028907, -0.003219304606318474, -2.861018856492592e-06, -6.318072337307967e-06, -0.0014951966004446149, -0.037102583795785904, -0.00015567521040793508, -0.2477891743183136, -0.47386443614959717, -1.0728830375228426e-06, -5.245195097813848e-06, -0.00554191367700696, -0.03373982384800911, -0.12337487190961838, -0.009257723577320576, -0.01355856005102396, -0.01725846342742443, -0.0006404255982488394, -1.2457735538482666, -2.2649508537142538e-05, -1.1086402082582936e-05, -4.0531076592742465e-06, -9.775113539944869e-06, -0.08788228034973145], "finish_reason": "stop"}], "metrics": {"energy": 374.65062145900737, "energy_per_token": 3.4059147405364305, "time": 9.035523, "time_per_token": 0.08214111818181817}}
{"outputs": [{"text": "if not stopwords:\n        stopwords = nltk.corpus.stopwords.words('english')\n    texts = [re.sub(ALPHANUMERIC, ' ', text.lower()).split() for text in texts]\n    texts = [word for text in texts for word in text if word not in stopwords]\n    model = Word2Vec(texts, min_count=1)\n    return model", "tokens": ["if", " not", " stop", "words", ":", "\n", "        ", "stop", "words", " =", " n", "lt", "k", ".", "cor", "pus", ".", "stop", "words", ".", "words", "('", "eng", "lish", "')", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "AL", "PH", "AN", "UM", "ER", "IC", ",", " '", " '", ",", " text", ".", "lower", "())", ".", "split", "()", " for", " text", " in", " texts", "]", "\n", "    ", "text", "s", " =", " [", "word", " for", " text", " in", " texts", " for", " word", " in", " text", " if", " word", " not", " in", " stop", "words", "]", "\n", "    ", "model", " =", " Word", "2", "Vec", "(", "text", "s", ",", " min", "_", "count", "=", "1", ")", "\n", "    ", "return", " model", "\n", "\n", "def"], "logprobs": [-0.8812296390533447, -1.3283451795578003, -0.033378779888153076, -4.625213477993384e-05, -0.0036442552227526903, -0.004977810196578503, -0.007818453013896942, -0.31694597005844116, -0.0032709925435483456, -0.00499631417915225, -0.22793248295783997, -1.9311717551317997e-05, -7.986990567587782e-06, -6.878139538457617e-05, -3.397406908334233e-05, -5.960462772236497e-07, -0.0001147919538198039, -0.0004239375703036785, -2.682172998902388e-05, -0.011012489907443523, -7.033323527139146e-06, -0.21486380696296692, -0.001354015665128827, -1.0728830375228426e-06, -8.248942322097719e-05, -0.015045378357172012, -0.39485108852386475, -1.9067842960357666, -0.040475599467754364, -0.07724294811487198, -0.20798860490322113, -1.6226224899291992, -0.0001699779968475923, -0.0021755853667855263, -0.022819774225354195, -0.026700150221586227, -4.768360213347478e-06, -7.033323527139146e-06, -2.264974000354414e-06, -4.768370445162873e-07, -2.264974000354414e-06, -0.0005903884884901345, -0.08972964435815811, -7.1403817855753e-05, -0.0005088941543363035, -0.30454257130622864, -0.9233431816101074, -0.012736288830637932, -0.008523395285010338, -0.8143133521080017, -0.0928686335682869, -0.01623024046421051, -0.024467986077070236, -0.0004469349514693022, -0.00016652150952722877, -0.0009342834819108248, -0.009563702158629894, -0.020431414246559143, -0.009584246203303337, -0.3337705135345459, -0.0012043612077832222, -0.015173133462667465, -1.9511425495147705, -2.135551691055298, -0.0928739607334137, -0.19688229262828827, -0.0008031480247154832, -0.00023707917716819793, -0.0062996381893754005, -0.00014280252798926085, -0.00010513706365600228, -0.00163433444686234, -0.00803452916443348, -0.017987461760640144, -0.01492453645914793, -7.152301259338856e-05, -0.004830476362258196, -1.8358061424805783e-05, -0.11229955404996872, -0.00850436557084322, -0.016327235847711563, -0.32894665002822876, -0.0006286313873715699, -0.006095983553677797, -6.794906312279636e-06, -4.6491513785440475e-06, -0.006418092176318169, -0.00778237683698535, -8.809178689261898e-05, -0.6596512794494629, -0.3769773840904236, -1.4305104514278355e-06, -6.9141146923357155e-06, -0.0066162338480353355, -0.028900591656565666, -0.08783303946256638, -0.008299386128783226, -0.01569114811718464, -0.013435774482786655, -0.0006621075444854796, -0.44795212149620056, -0.04684454947710037, -1.3380008935928345], "finish_reason": "stop"}], "metrics": {"energy": 370.2289818553926, "energy_per_token": 3.5944561345183748, "time": 8.636913, "time_per_token": 0.08385352427184466}}
