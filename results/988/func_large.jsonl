{"outputs": [{"text": "if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Validate the directory path\n    directory = Path(dir_path)\n    if not directory.is_dir():\n        raise FileNotFoundError(\"Directory does not exist or is not a directory.\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Define the conditions\n    conditions = {\n        \"is_file\": lambda item: item.is_file(),\n        \"is_dir\": lambda item: item.is_dir(),\n        \"has_special_chars\": lambda item: bool(re.search(r'[^a-zA-Z0-9_]', item.stem)),\n        \"has_numbers\": lambda item: bool(re.search(r'\\d', item.name)),\n    }\n\n    # Check if all provided predicates are valid\n    valid_predicates = [pred for pred in predicates if pred in conditions]\n    if not valid_predicates:\n        raise ValueError(\"No valid predicates provided", "tokens": ["if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Valid", "ate", " the", " directory", " path", "\n", "    ", "directory", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Define", " the", " conditions", "\n", "    ", "conditions", " =", " {", "\n", "        ", "\"", "is", "_", "file", "\":", " lambda", " item", ":", " item", ".", "is", "_", "file", "()", ",", "\n", "        ", "\"", "is", "_", "dir", "\":", " lambda", " item", ":", " item", ".", "is", "_", "dir", "()", ",", "\n", "        ", "\"", "has", "_", "special", "_", "chars", "\":", " lambda", " item", ":", " bool", "(", "re", ".", "search", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", "]", "'", ",", " item", ".", "stem", "))", ",", "\n", "        ", "\"", "has", "_", "numbers", "\":", " lambda", " item", ":", " bool", "(", "re", ".", "search", "(", "r", "'\\", "d", "'", ",", " item", ".", "name", "))", ",", "\n", "    ", "}", "\n", "\n", "    ", "#", " Check", " if", " all", " provided", " pred", "icates", " are", " valid", "\n", "    ", "valid", "_", "pred", "icates", " =", " [", "pred", " for", " pred", " in", " pred", "icates", " if", " pred", " in", " conditions", "]", "\n", "    ", "if", " not", " valid", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -1.6493465900421143, -0.0005675135762430727, -0.04876355081796646, -0.03108510747551918, -0.0006522196927107871, -0.013676157221198082, -0.0007351318490691483, -7.152555099310121e-07, -0.06775595247745514, -0.02013540454208851, -0.6409753561019897, -0.09496736526489258, -0.023708773776888847, -8.570780482841656e-05, -0.16908982396125793, -0.5773783922195435, -0.07695820927619934, -0.0004190520558040589, -0.0027726562693715096, -0.19235077500343323, -0.00029940891545265913, -1.7641617059707642, -2.54087495803833, -0.2218145877122879, -1.1493993997573853, -0.6403144598007202, -0.44201362133026123, -0.18329764902591705, -0.0006130246329121292, -2.13020396232605, -0.246740460395813, -0.016009358689188957, -0.00062851223628968, -0.0013190149329602718, -7.748573807475623e-06, 0.0, -0.0005578630371019244, -0.016719689592719078, -0.02958030067384243, -0.005021579097956419, -0.00898591335862875, -0.021361514925956726, -0.0006839081761427224, -0.2591005563735962, -1.4066597032069694e-05, -0.0007220283732749522, -0.01848049834370613, -0.0014444880653172731, -0.00011157367407577112, -0.005642083939164877, -0.013637116178870201, -2.4914430468925275e-05, -1.0728830375228426e-06, -0.0010202685371041298, -0.7834334969520569, -0.41779276728630066, -0.33171382546424866, -9.285972191719338e-05, -0.00019762947340495884, -0.1038154885172844, -0.022438915446400642, -0.0016959820641204715, -0.009892367757856846, -0.0200252253562212, -0.045491669327020645, -0.0005175919504836202, -0.00014149141497910023, -0.0004855407460127026, -0.009672796353697777, -0.0003885467885993421, -0.47338828444480896, -0.599936842918396, -0.02284587360918522, -0.40129420161247253, -7.486063259420916e-05, -0.21205294132232666, -0.00012694983161054552, -0.6015250086784363, -0.01499758381396532, -0.04691063612699509, -0.12335769832134247, -0.00018892886873800308, -0.02445635199546814, -0.0015988674713298678, -0.0019080305937677622, -0.0013888961402699351, -0.00023231192608363926, -0.005449677351862192, -0.03357776254415512, -0.00013982271775603294, -0.3621940612792969, -1.688388705253601, -0.7691929340362549, -1.0219266414642334, -1.097583293914795, -0.0005775213940069079, -0.25499993562698364, -0.020047424361109734, -0.033428240567445755, -0.0013010379625484347, -0.004070450086146593, -1.483609914779663, -0.006830083206295967, -0.0002460177056491375, -0.0023846779949963093, -0.0069833965972065926, -0.07760647684335709, -1.0090851783752441, -0.02866407297551632, -0.16790108382701874, -0.0019452712731435895, -0.04007621109485626, -0.00015031162183731794, -0.0001062098381225951, -0.00884141493588686, -0.00424804724752903, -0.024559997022151947, -0.0002798642381094396, -0.0011267272057011724, -0.0008784249657765031, -5.722029527532868e-06, -0.0009726322605274618, -5.7338023907504976e-05, -0.0002619877050165087, -0.0002549561613705009, -0.00011669908417388797, -0.001581966644152999, -0.00010442188795423135, -1.680836794548668e-05, -1.1920928244535389e-07, -0.0025364153552800417, -0.0001411338453181088, -0.00015841660206206143, -0.0009366653976030648, -0.0012982996413484216, -0.003692002035677433, -0.0016746795736253262, -5.245195097813848e-06, -0.020074181258678436, -3.6000557884108275e-05, -0.00016819016309455037, -5.543078441405669e-05, -0.012579145841300488, -0.002799284877255559, -0.0011750705307349563, -0.36342597007751465, -0.0004690977220889181, -0.1055070012807846, -0.00015031162183731794, -0.015710627660155296, -0.012851275503635406, -0.028608005493879318, -1.314007043838501, -0.005363479256629944, -0.6739494800567627, -0.12104679644107819, -2.861018856492592e-06, -4.172316494077677e-06, -0.0022460015024989843, -3.576278118089249e-07, -0.00018952481332235038, -0.035290174186229706, -1.585470999998506e-05, -3.528532761265524e-05, -0.009819891303777695, -0.25715571641921997, -0.0002559096028562635, -7.223821739898995e-05, -0.1437728852033615, -0.002674457151442766, -0.35402712225914, -0.014261583797633648, -0.009806315414607525, -0.06457255035638809, -0.0005544078885577619, -0.005314745474606752, -0.0007406114018522203, -4.529942543740617e-06, -0.0010661162668839097, -3.45700973412022e-05, -5.674201020156033e-05, -0.00014029949670657516, -6.663577369181439e-05, -0.1909543126821518, -8.05822346592322e-05, -0.0024969372898340225, -7.748573807475623e-06, -0.002641167026013136, -0.0007151191821321845, -4.577531944960356e-05, -0.012659545056521893, -2.2649508537142538e-05, -0.038059890270233154, -8.583032467868179e-06, -0.0007435894221998751, -0.00038938093348406255, -1.9797157049179077, -0.0009606037638150156, -0.9680582284927368, -0.005645521450787783, -0.012222275137901306, -2.610649426060263e-05, -0.0006482883472926915, -0.02561013773083687, -0.00021324267436284572, -0.2672836184501648, -1.7527923583984375, -0.7158988118171692, -0.7772809267044067, -0.7601388692855835, -0.03670069947838783, -3.5523738915799186e-05, -0.041432999074459076, -0.03902316093444824, -0.21715497970581055, -5.745722592109814e-05, -0.6735302209854126, -0.006939713377505541, -0.034145552664995193, -0.00397974019870162, -0.0007552632014267147, -0.2612660825252533, -0.1614087074995041, -0.24687673151493073, -6.09140915912576e-05, -4.9232225137529895e-05, -0.004710054956376553, -7.152555099310121e-07, -0.0005552418879233301, -0.002893430180847645, -0.000514017534442246, -0.0002889215829782188, -0.05503350496292114, -0.0004814896092284471, -0.32721444964408875, -0.03429438918828964, -0.013995598070323467, -0.0004781533498317003, -3.576278118089249e-07, -2.3841855067985307e-07, -4.529942543740617e-06, -0.00020096666412428021, -0.0010727847693488002, -6.580135959666222e-05, -0.0026096594519913197, -0.001122916815802455, -4.768370445162873e-07, -0.0009177286992780864, -0.03157196193933487, -0.055725228041410446, -0.0008831891464069486, -0.0034868652001023293, -1.966933996300213e-05, -0.04681485891342163], "finish_reason": "length"}], "metrics": {"energy": 917.9379216918948, "energy_per_token": 3.585695006608964, "time": 21.864958, "time_per_token": 0.0854099921875}}
{"outputs": [{"text": "if not os.path.exists(dir_path) or not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"The specified directory does not exist or is not a directory: {dir_path}\")\n\n    if not predicates:\n        raise ValueError(\"At least one predicate must be provided\")\n\n    # Ensure each predicate is unique\n    predicates = list(set(predicates))\n\n    results = {}\n\n    for item in os.listdir(dir_path):\n        result = {}\n\n        # Check each predicate\n        if \"is_file\" in predicates:\n            result[\"is_file\"] = os.path.isfile(os.path.join(dir_path, item))\n\n        if \"is_dir\" in predicates:\n            result[\"is_dir\"] = os.path.isdir(os.path.join(dir_path, item))\n\n        if \"has_special_chars\" in predicates:\n            result[\"has_special_chars\"] = bool(re.search(r\"[^a-z", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ":", " {", "dir", "_", "path", "}\"", ")", "\n", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " predicate", " must", " be", " provided", "\"", ")", "\n", "\n", "    ", "#", " Ensure", " each", " predicate", " is", " unique", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "results", " =", " {}", "\n", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "result", " =", " {}", "\n", "\n", "        ", "#", " Check", " each", " predicate", "\n", "        ", "if", " \"", "is", "_", "file", "\"", " in", " pred", "icates", ":", "\n", "            ", "result", "[", "\"", "is", "_", "file", "\"", "]", " =", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "\n", "        ", "if", " \"", "is", "_", "dir", "\"", " in", " pred", "icates", ":", "\n", "            ", "result", "[", "\"", "is", "_", "dir", "\"", "]", " =", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "\n", "        ", "if", " \"", "has", "_", "special", "_", "chars", "\"", " in", " pred", "icates", ":", "\n", "            ", "result", "[", "\"", "has", "_", "special", "_", "chars", "\"", "]", " =", " bool", "(", "re", ".", "search", "(", "r", "\"", "[", "^", "a", "-", "z"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.6358801126480103, -0.0004609952447935939, -0.002633201191201806, -6.151010165922344e-05, -7.152555099310121e-07, -1.3358274698257446, -0.013526570983231068, -0.007194326724857092, -0.0022879871539771557, -2.2172682292875834e-05, -0.00011073929636040702, -1.7046782886609435e-05, -9.179073458653875e-06, -3.564294092939235e-05, -0.00013159839727450162, -0.0002898749662563205, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001043133088387549, -0.006729913409799337, -0.0006915323319844902, -0.008151358924806118, -0.03008200041949749, -1.8715683836489916e-05, -2.861018856492592e-06, -0.028076356276869774, -0.4356479048728943, -0.050174031406641006, -1.3864569664001465, -0.7639296650886536, -0.19877387583255768, -0.7872516512870789, -0.00044919890933670104, -0.0009634620510041714, -0.09551510959863663, -0.009806787595152855, -0.0017121669370681047, -0.003806845983490348, -0.006425080355256796, -0.09196871519088745, -0.016025079414248466, -0.0017650038935244083, -4.887569048150908e-06, -4.768360213347478e-06, -0.011724610812962055, -0.00016616393986623734, -0.00028975578607060015, -0.06835298985242844, -0.00038532938924618065, -1.4353103637695312, -0.05800442025065422, -0.22183597087860107, -7.080780778778717e-05, -0.07142063230276108, -0.008326103910803795, -0.00018726025882642716, -0.005383636336773634, -0.0002847504511009902, 0.0, -0.00805971771478653, -0.021209456026554108, -1.0257768630981445, -0.0010684978915378451, -0.002887486945837736, -0.19716979563236237, -0.48132845759391785, -0.00027569307712838054, -0.07445012032985687, -1.654494285583496, -0.00011729506513802335, -0.0007879013428464532, -0.016939008608460426, -0.00024780540843494236, -1.4595136642456055, -3.6273245811462402, -2.4512670040130615, -0.08717399835586548, -0.04611227288842201, -0.6951410174369812, -0.32101625204086304, -0.0002559096028562635, -0.585964560508728, -0.006281158421188593, -0.02803717739880085, -0.12870243191719055, -0.00017510310863144696, -0.010622978210449219, -0.0037282262928783894, -0.0028596720658242702, -0.0001528146385680884, -0.0002002515539061278, -0.007642672397196293, -0.03631773218512535, -0.0001951265730895102, -2.3559930324554443, -0.010442971251904964, -0.026380330324172974, -0.010501246899366379, -1.206559181213379, -0.00011038171214750037, -0.29019832611083984, -0.20360228419303894, -0.043798934668302536, -0.017156990244984627, -1.2278481335670222e-05, -0.014720517210662365, 0.0, -0.00011038171214750037, -0.0024147657677531242, -1.7881377516459906e-06, -2.9802276912960224e-06, -0.00015484087634831667, -0.0022361292503774166, -0.009571731090545654, -2.855714797973633, -0.07407326251268387, -0.059945713728666306, -0.0118780005723238, -0.8075868487358093, -0.0002195594133809209, -1.399937391281128, -0.9638252258300781, -0.9235817193984985, -0.19247852265834808, -0.7099171876907349, -0.0029860215727239847, -0.9453672766685486, -1.0339199304580688, -0.0028109345585107803, -3.349725011503324e-05, -0.003484726883471012, -1.585470999998506e-05, -6.16293036728166e-05, -0.00017593742813915014, -5.602820692729438e-06, -0.006898633204400539, -0.001408419106155634, -0.0001419681793777272, -0.01092181820422411, -0.021866537630558014, -5.721882189391181e-05, -3.1709168979432434e-05, -2.1457441107486375e-05, -1.4662635294371285e-05, -5.483612312673358e-06, -7.497983460780233e-05, -6.079655122448457e-06, -0.021301768720149994, -2.7418097943154862e-06, -2.8490614567999728e-05, -8.940656698541716e-06, -0.00015793983766343445, -5.23315102327615e-05, -0.00010549465514486656, -0.011884951032698154, -4.768370445162873e-07, -2.6464111215318553e-05, -2.264974000354414e-06, -0.00012599628826137632, -1.3828182090946939e-05, -0.0002812943421304226, -2.622600959512056e-06, 0.0, -1.7046782886609435e-05, -0.00019834458362311125, -0.00013350549852475524, -0.006967533379793167, -0.7062734961509705, -0.00021669900161214173, -0.008115885779261589, -0.0002445875434204936, -0.0005184260080568492, -2.145764938177308e-06, -0.0003597089380491525, -2.9802276912960224e-06, -2.8490614567999728e-05, -5.125986263010418e-06, -8.940656698541716e-06, -0.0024504417087882757, -3.862306402879767e-05, -4.053033626405522e-05, -0.0012886562617495656, -0.0004210777406115085, -5.602820692729438e-06, -5.006777428206988e-06, -2.145764938177308e-06, -3.635817120084539e-05, -1.4305104514278355e-06, -9.775113539944869e-06, -2.9802276912960224e-06, -0.0010257464600726962, -2.3841830625315197e-06, -1.728519782773219e-05, -3.6954811548639555e-06, -5.590759246842936e-05, -0.00029583368450403214, -4.6132929128361866e-05, -0.00019524575327523053, -8.344646857949556e-07, -2.622600959512056e-06, -3.099436753473128e-06, -6.6756979322235566e-06, -2.9802276912960224e-06, -1.2159273865108844e-05, -9.536738616588991e-07, 0.0, -1.966933996300213e-05, -4.684815212385729e-05, -2.47952248173533e-05, -0.0001938155182870105, -0.00041797960875555873, -0.00015138434537220746, -0.06810969859361649, -0.0017604819731786847, -0.0007183355046436191, -2.3841830625315197e-06, -0.021294882521033287, -9.059865078597795e-06, -4.31528314948082e-05, -3.266281055402942e-05, -4.053033626405522e-05, -8.821448318485636e-06, -7.271740287251305e-06, -0.03891916945576668, -0.00026294111739844084, -0.0003939091111533344, -0.6806551218032837, -0.0016280265990644693, -0.001983700320124626, -0.00011181206355104223, -2.3841830625315197e-06, -2.8371408916427754e-05, -7.867782187531702e-06, -2.47952248173533e-05, -4.887569048150908e-06, -0.00012432756193447858, -0.001260677701793611, -0.19793078303337097, -0.0004210777406115085, -0.05747590959072113, -2.5033637939486653e-05, -0.011462780646979809, -0.01583055406808853, -0.01893516071140766, -0.4064553380012512, -0.05799081176519394, -0.41275978088378906, -0.17286504805088043, -1.7881377516459906e-06, -5.960446742392378e-06], "finish_reason": "length"}], "metrics": {"energy": 877.6104781761168, "energy_per_token": 3.428165930375456, "time": 21.6458, "time_per_token": 0.08455390625}}
{"outputs": [{"text": "# Check if the directory path is valid\n    if not Path(dir_path).is_dir():\n        raise ValueError(\"Invalid directory path\")\n\n    # Deduplicate predicates\n    predicates = set(predicates)\n\n    # Check if at least one valid predicate is provided\n    if not predicates:\n        raise ValueError(\"At least one valid predicate is required\")\n\n    result = {}\n    for item in os.listdir(dir_path):\n        item_path = os.path.join(dir_path, item)\n        item_name, item_ext = os.path.splitext(item)\n\n        # Initialize dictionary with 'name' and 'path' keys\n        item_result = {\n            'name': item,\n            'path': item_path\n        }\n\n        # Check if the item is a file\n        if \"is_file\" in predicates:\n            item_result[\"is_file\"] = os.path.isfile(item_path)\n\n        # Check if the item is a directory\n        if \"is_dir\" in predicates", "tokens": ["#", " Check", " if", " the", " directory", " path", " is", " valid", "\n", "    ", "if", " not", " Path", "(", "dir", "_", "path", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Invalid", " directory", " path", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "\n", "    ", "#", " Check", " if", " at", " least", " one", " valid", " predicate", " is", " provided", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " valid", " predicate", " is", " required", "\"", ")", "\n", "\n", "    ", "result", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "        ", "item", "_", "name", ",", " item", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "item", ")", "\n", "\n", "        ", "#", " Initialize", " dictionary", " with", " '", "name", "'", " and", " '", "path", "'", " keys", "\n", "        ", "item", "_", "result", " =", " {", "\n", "            ", "'", "name", "':", " item", ",", "\n", "            ", "'", "path", "':", " item", "_", "path", "\n", "        ", "}", "\n", "\n", "        ", "#", " Check", " if", " the", " item", " is", " a", " file", "\n", "        ", "if", " \"", "is", "_", "file", "\"", " in", " pred", "icates", ":", "\n", "            ", "item", "_", "result", "[", "\"", "is", "_", "file", "\"", "]", " =", " os", ".", "path", ".", "is", "file", "(", "item", "_", "path", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " item", " is", " a", " directory", "\n", "        ", "if", " \"", "is", "_", "dir", "\"", " in", " pred", "icates"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -0.8809680342674255, -0.414806991815567, -2.2823994159698486, -0.5769625902175903, -0.1499096006155014, -0.41873282194137573, -0.0011088658357039094, -0.6587344408035278, -0.01690290868282318, -1.1098321676254272, -0.00557000981643796, -0.0013010379625484347, -5.4834770708112046e-05, -4.768370445162873e-07, -0.0014734136639162898, -0.0008688965463079512, -0.11533577740192413, -3.099393507000059e-05, -0.0020042823161929846, -0.007255514618009329, -0.002174158114939928, -0.0005164004978723824, -0.016075054183602333, -2.6690163612365723, -8.34461570775602e-06, -0.06417272239923477, -0.7523149251937866, -0.8798055052757263, -0.042821526527404785, -0.07232669740915298, -1.0575815439224243, -0.0031925681978464127, -0.002277163788676262, -0.04950534552335739, -0.0005448763840831816, -0.12240296602249146, -1.2236863374710083, -0.040037039667367935, -0.5139384269714355, -0.00016318420239258558, -0.26070860028266907, -0.0001919085334520787, -0.29857906699180603, -0.010031876154243946, -0.029437126591801643, -2.417423725128174, -0.0015043619787320495, -0.005201497580856085, -0.0024559118319302797, -0.0008235162240453064, -0.0023836076725274324, -0.11938001215457916, -0.00013815402053296566, -0.10351726412773132, -0.3293553590774536, -0.06424505263566971, -1.784764051437378, -0.0006613928126171231, -0.006399969570338726, -0.17070871591567993, -0.02397218905389309, -0.08017653971910477, -0.061194755136966705, -0.014901869930326939, -0.00011455356434453279, -0.17050497233867645, -0.11862805485725403, -0.427640825510025, -1.2278481335670222e-05, -0.06870140135288239, -0.0004724340105894953, -8.606540359323844e-05, -0.0024951535742729902, -0.000922849983908236, -3.576278118089249e-07, -0.003305568592622876, -0.01778476871550083, -0.8192617297172546, -0.0005368936690501869, -0.0014773417497053742, -0.288070946931839, -0.0046457452699542046, -1.2350993156433105, -0.013279564678668976, -0.22752664983272552, -7.950943836476654e-05, -9.083335316972807e-05, -0.0024475876707583666, -0.00017414960893802345, -2.0374488830566406, -0.05318562686443329, -0.03100583143532276, -0.022430522367358208, -0.6857569813728333, -0.2632708251476288, -0.13811516761779785, -0.023442843928933144, -0.01728283427655697, -1.0490362910786644e-05, -0.06104123592376709, -1.1920928244535389e-07, -0.00017581824795342982, -0.003137667663395405, -5.960446742392378e-06, 0.0, -0.00014351768186315894, -0.005862422753125429, -0.00718107121065259, -0.7114381790161133, -0.01839330978691578, -1.0507316589355469, -0.0008428120636381209, -0.140010267496109, -2.861018856492592e-06, -0.00016115797916427255, -3.4570634852570947e-06, -0.0008112476789392531, -4.0649541915627196e-05, -0.0010231266496703029, -1.1920922133867862e-06, 0.0, -8.046303264563903e-05, -0.0006304183625616133, -0.00021741411183029413, -0.010670275427401066, -0.28057029843330383, -0.4416311979293823, -0.009546934626996517, -0.9891532063484192, -0.3614523708820343, -0.25457286834716797, -1.0013530300057027e-05, -0.10258889943361282, -0.00033825874561443925, -0.0004687402688432485, -1.0609570381348021e-05, -8.821448318485636e-06, -3.576278118089249e-07, -1.4662635294371285e-05, 0.0, -1.0728830375228426e-06, -0.0001461399078834802, -0.18968401849269867, -0.0014772227732464671, -0.067714624106884, -0.460204154253006, -0.0003798478574026376, -1.1487975120544434, -1.6715104579925537, -2.589684247970581, -1.4263149499893188, -3.5114827156066895, -3.1284775733947754, -0.003855297341942787, -0.5669332146644592, -0.4478839635848999, -1.407817006111145, -0.006191241089254618, -0.35153424739837646, -0.19965620338916779, -0.00027533553657121956, -0.4195442795753479, -0.00031573555315844715, -0.7109370827674866, -0.0022077015601098537, -1.3628896474838257, -0.029192745685577393, -0.007660890929400921, -0.30375924706459045, -0.04153935983777046, -0.0019071977585554123, -0.019983042031526566, -0.6547482013702393, -0.014563685283064842, -0.003649600315839052, -0.0013504442758858204, -0.008958149701356888, -0.0005174727994017303, -0.03689591586589813, -0.00034362133010290563, -4.5060096454108134e-05, -0.3539188504219055, -0.00416601961478591, -8.940656698541716e-06, -0.00022420754248742014, -0.01708773337304592, -0.00048029806930571795, -0.37518754601478577, -0.5989474654197693, -1.7598637342453003, -0.20731177926063538, -0.06801559031009674, -0.021141648292541504, -0.0030755146872252226, -0.04652154818177223, -0.3356587886810303, -0.00011801023356383666, -0.09064409881830215, -2.309661865234375, -0.00041559641249477863, -7.319182623177767e-05, -0.00034290633630007505, -5.6503606174374e-05, -4.8874615458771586e-05, -5.686121585313231e-05, -1.6689286894688848e-06, -0.024112308397889137, -0.00026639728457666934, -0.0004558716027531773, -0.07527892291545868, -9.894321920000948e-06, -0.001727637485601008, -0.26136109232902527, -6.913899414939806e-05, -0.00015496007108595222, -0.00023576818057335913, -6.365573790390044e-05, -1.7762025890988298e-05, -0.00025829317746683955, -1.7404405298293568e-05, -0.005537764634937048, -2.2172682292875834e-05, -6.437280717364047e-06, -2.002696055569686e-05, -1.5020257706055418e-05, -0.0002563863235991448, -4.327203714638017e-05, -0.0017648849170655012, -0.002927543828263879, -0.00013910756388213485, -2.706014311115723e-05, -0.0021975908894091845, -0.018419174477458, -0.001177690108306706, -0.0018867325270548463, -0.0003060825983993709, -0.00010656742961145937, -0.0003505330823827535, -0.0002834395272657275, -0.00024184639914892614, -0.0002719986077863723, -0.0019832244142889977, -0.0011335145682096481, -2.2291887944447808e-05, -0.0004285847535356879, -0.004965710919350386, -1.966933996300213e-05, -3.099436753473128e-06, -0.0005326044629327953, -2.9802276912960224e-06, -2.8609820219571702e-05, -4.410734163684538e-06, -5.900685573578812e-05], "finish_reason": "length"}], "metrics": {"energy": 901.9071689243311, "energy_per_token": 3.5230748786106685, "time": 21.645954, "time_per_token": 0.0845545078125}}
{"outputs": [{"text": "if not predicates:\n        raise ValueError(\"No valid predicates provided\")\n\n    # Check if the directory exists and is a directory\n    dir_path_obj = Path(dir_path)\n    if not dir_path_obj.exists():\n        raise FileNotFoundError(\"The specified directory does not exist\")\n    if not dir_path_obj.is_dir():\n        raise FileNotFoundError(\"The specified path is not a directory\")\n\n    # Define a dictionary of predicate functions\n    predicates_func_map = {\n        \"is_file\": lambda item: item.is_file(),\n        \"is_dir\": lambda item: item.is_dir(),\n        \"has_special_chars\": lambda item: bool(re.search(r\"[^A-Za-z0-9_]\", item.stem)),\n        \"has_numbers\": lambda item: bool(re.search(r\"\\d\", item.stem)),\n    }\n\n    # Validate the provided predicates\n    valid_predicates = [predicate for predicate in predicates if predicate in", "tokens": ["if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "dir", "_", "path", "_", "obj", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", "_", "obj", ".", "exists", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " dir", "_", "path", "_", "obj", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " path", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " Define", " a", " dictionary", " of", " predicate", " functions", "\n", "    ", "pred", "icates", "_", "func", "_", "map", " =", " {", "\n", "        ", "\"", "is", "_", "file", "\":", " lambda", " item", ":", " item", ".", "is", "_", "file", "()", ",", "\n", "        ", "\"", "is", "_", "dir", "\":", " lambda", " item", ":", " item", ".", "is", "_", "dir", "()", ",", "\n", "        ", "\"", "has", "_", "special", "_", "chars", "\":", " lambda", " item", ":", " bool", "(", "re", ".", "search", "(", "r", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "_", "]\"", ",", " item", ".", "stem", "))", ",", "\n", "        ", "\"", "has", "_", "numbers", "\":", " lambda", " item", ":", " bool", "(", "re", ".", "search", "(", "r", "\"", "\\", "d", "\"", ",", " item", ".", "stem", "))", ",", "\n", "    ", "}", "\n", "\n", "    ", "#", " Valid", "ate", " the", " provided", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " [", "pred", "icate", " for", " predicate", " in", " pred", "icates", " if", " predicate", " in"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -1.6493465900421143, -0.0005675135762430727, -0.04876355081796646, -0.03108510747551918, -0.0006522196927107871, -0.013676157221198082, -0.0007351318490691483, -7.152555099310121e-07, -0.06775595247745514, -0.02013540454208851, -0.6409753561019897, -0.09496736526489258, -0.023708773776888847, -8.570780482841656e-05, -0.16908982396125793, -0.9212924242019653, -0.0001652104256208986, -0.002385629341006279, -0.23655270040035248, -0.0002531684876885265, -1.878890872001648, -1.9532006978988647, -0.3642809987068176, -0.30962082743644714, -0.47283822298049927, -0.19700534641742706, -0.5837407112121582, -0.04920760542154312, -0.11134327203035355, -0.10119501501321793, -0.05062618479132652, -0.0003216941258870065, -1.1980431079864502, -0.007407934404909611, -0.01571004092693329, -1.4057419300079346, -0.07043764740228653, -0.002394667826592922, -0.000797192333266139, -0.00041500062798149884, -0.00154971145093441, -4.887569048150908e-06, 0.0, -0.0006878394051454961, -0.013311326503753662, -0.03978114575147629, -0.007527676410973072, -0.008661204017698765, -0.07429773360490799, -4.887569048150908e-06, -4.768370445162873e-07, -0.0012679402716457844, -8.106198947643861e-06, -0.0005125877796672285, -0.9706968665122986, -1.8336951732635498, -0.0017056216020137072, -0.0002181292074965313, -0.003954211715608835, -0.00775008462369442, -6.115249561844394e-05, -2.0265558760002023e-06, -0.0014499637763947248, -1.5273786783218384, -2.135103464126587, -0.18684972822666168, -0.03368161991238594, -0.015411456115543842, -9.190614218823612e-05, -0.0003057250869460404, -0.20735518634319305, -0.0004700509598478675, -0.0001525762490928173, -0.06264436990022659, -0.08680704236030579, -0.0021289559081196785, -0.014746359549462795, -1.7404405298293568e-05, -9.536738616588991e-07, -0.0003849719068966806, -2.777537883957848e-05, -4.7205765440594405e-05, -4.792098479811102e-05, -3.3378546504536644e-06, -0.00017557987303007394, -0.00017176583060063422, -0.0009411911014467478, -3.671578815556131e-05, -0.00047505536349490285, -0.173992320895195, -6.472854875028133e-05, -7.152555099310121e-07, -0.00015805903240107, -0.03914421796798706, -0.023404182866215706, -0.2030496597290039, -0.16821739077568054, -0.0052552176639437675, -0.0003519630990922451, -0.0006191005813889205, -0.0015368566382676363, -0.002877145539969206, -3.349725011503324e-05, -0.00022384998737834394, -0.011421886272728443, -0.00043561504571698606, -0.5806361436843872, -2.1088011264801025, -1.6758737564086914, -0.3106437623500824, -1.0586771965026855, -2.705970048904419, -0.15256202220916748, -0.2178175300359726, -0.0006703275139443576, -0.17032773792743683, -1.9366267919540405, -0.013355790637433529, -1.3677321672439575, -2.525221347808838, -1.6550261974334717, -0.011537730693817139, -0.01373071689158678, -0.001095886342227459, -0.004884928464889526, -0.8021801710128784, -0.005645166151225567, -0.00021419614495243877, -0.0020649556536227465, -0.0009591746493242681, -0.053697653114795685, -1.1433241367340088, -0.07578032463788986, -0.25141194462776184, -0.0018005840247496963, -0.02849678508937359, -0.00036066226311959326, -0.0001599660754436627, -0.016136404126882553, -0.006347376853227615, -0.04200754687190056, -0.0002828436263371259, -0.0019143365789204836, -0.0005788319394923747, -6.437280717364047e-06, -0.0008878341759555042, -4.994744449504651e-05, -0.00021169328829273582, -0.00015579440514557064, -0.00012289722508285195, -0.001213171985000372, -0.00010477947944309562, -1.966933996300213e-05, -2.3841855067985307e-07, -0.0005528590409085155, -0.00031144535751082003, -0.0002002515539061278, -0.0008311392739415169, -0.0012446045875549316, -0.0023814670275896788, -0.002309514442458749, -6.079655122448457e-06, -0.02638811059296131, -6.687417771900073e-05, -0.00020787939138244838, -0.00011550712952157483, -0.010100561194121838, -0.005293282680213451, -0.001803796854801476, -0.2092287391424179, -0.0005258131423033774, -0.12130489200353622, -0.00015615197480656207, -0.01096214447170496, -0.01699186861515045, -0.05848633125424385, -0.31718912720680237, -0.0855773463845253, -0.5675021409988403, -1.7499808073043823, -3.4570634852570947e-06, -0.0011530425399541855, -0.0004987664869986475, -3.576278118089249e-07, -3.3378546504536644e-06, -0.01808943599462509, -3.802703940891661e-05, -9.417489309271332e-06, -0.016909589990973473, -0.2183205634355545, -6.007967749610543e-05, -0.1305050551891327, -0.005777446087449789, -0.5018382668495178, -0.008038313128054142, -0.007599254604429007, -0.059457093477249146, -0.0005484507419168949, -0.008285199292004108, -0.0011976935202255845, -8.34461570775602e-06, -0.0011698314920067787, -3.2543604902457446e-05, -8.77341881277971e-05, -0.00013136000779923052, -4.23184028477408e-05, -0.09678222239017487, -4.756337511935271e-05, -0.00553598627448082, -1.2755313036905136e-05, -0.0037978205364197493, -7.581423415103927e-05, -0.0001072826053132303, -0.012269614264369011, -0.057527005672454834, -1.0847986231965479e-05, -0.00962226465344429, -4.291525328881107e-06, -0.000444551813416183, -0.0006773561472073197, -0.12955409288406372, -0.00020859450160060078, -0.2869541645050049, -0.003777750302106142, -0.014777487143874168, -2.276871418871451e-05, -0.0004950728034600616, -0.023035777732729912, -7.998623186722398e-05, -0.12946423888206482, -2.68339204788208, -0.005805535241961479, -0.7878713607788086, -1.1114306449890137, -0.021442728117108345, -1.3112935448589269e-05, -0.5119871497154236, -0.00018809456378221512, -0.14134977757930756, -0.05234870687127113, -0.00402343412861228, -0.0064848936162889, -0.009573619812726974, -0.3309091031551361, -0.5343309044837952, -1.899470567703247, -0.006646549329161644, -1.8000440832111053e-05, -8.546940807718784e-05, -0.5054387450218201, -1.0967194612021558e-05, -0.012189301662147045, -0.003213481977581978, -0.0030366519931703806], "finish_reason": "length"}], "metrics": {"energy": 911.2055618343355, "energy_per_token": 3.559396725915373, "time": 21.652988, "time_per_token": 0.084581984375}}
{"outputs": [{"text": "if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"Directory '{dir_path}' does not exist or is not a directory.\")\n\n    predicates = set(predicates)\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    results = {}\n    for item in os.listdir(dir_path):\n        item_result = {}\n        for predicate in predicates:\n            if predicate == 'is_file':\n                item_result['is_file'] = os.path.isfile(os.path.join(dir_path, item))\n            elif predicate == 'is_dir':\n                item_result['is_dir'] = os.path.isdir(os.path.join(dir_path, item))\n            elif predicate == 'has_special_chars':\n                item_result['has_special_chars'] = bool(re.search('[^a-zA-Z0-9_]', Path(item).stem))\n            elif predicate == 'has_numbers':\n                item_result", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "dir", "_", "path", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "result", " =", " {}", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "item", "_", "result", "['", "is", "_", "file", "']", " =", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "            ", "elif", " predicate", " ==", " '", "is", "_", "dir", "':", "\n", "                ", "item", "_", "result", "['", "is", "_", "dir", "']", " =", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "            ", "elif", " predicate", " ==", " '", "has", "_", "special", "_", "chars", "':", "\n", "                ", "item", "_", "result", "['", "has", "_", "special", "_", "chars", "']", " =", " bool", "(", "re", ".", "search", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", "]", "'", ",", " Path", "(", "item", ")", ".", "stem", "))", "\n", "            ", "elif", " predicate", " ==", " '", "has", "_", "numbers", "':", "\n", "                ", "item", "_", "result"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.7547804117202759, -0.001002047909423709, -0.0003262225945945829, -0.0032431883737444878, -4.470248313737102e-05, -3.576278118089249e-07, -0.0235914196819067, -0.019509684294462204, -0.0006622266955673695, -0.011505677364766598, -0.060988299548625946, -2.169585604860913e-05, -4.410734163684538e-06, -0.04982250556349754, -0.5376468300819397, -0.09874694794416428, -0.911279022693634, -0.8455686569213867, -0.00048792376765049994, -0.003441841108724475, -1.2874520507466514e-05, -9.536697689327411e-06, -0.0035813022404909134, -0.2078777402639389, -0.00033301531220786273, -0.0008486483711749315, -0.14727604389190674, -0.008592183701694012, -0.0008332832949236035, -0.002012848388403654, -0.012247240170836449, -0.20037931203842163, -0.0019320646533742547, -0.0002047805901383981, -0.002138948068022728, -0.16549105942249298, -0.0003687655262183398, -1.515236258506775, -0.05393148958683014, -0.0816226527094841, -0.9282436370849609, -0.01417343970388174, -0.028377557173371315, -0.0017157370457425714, -0.0032467530108988285, -0.2508610188961029, -0.2353495955467224, -0.27342259883880615, -0.1014079824090004, -0.04881305247545242, -3.4927710657939315e-05, -0.006476010661572218, -0.008257061243057251, -0.0001554368354845792, -0.0036371287424117327, -0.0003014348621945828, 0.0, -0.026155641302466393, -0.01935395412147045, -0.6669414639472961, -0.05959311127662659, -0.01870715245604515, -1.8000440832111053e-05, -0.08991739898920059, -0.10468742251396179, -0.07996626198291779, -0.00018094333063345402, -0.0008708022069185972, -0.020060745999217033, -0.00023648326168768108, -1.2805471420288086, -0.010193550027906895, -0.047076690942049026, -0.006455757189542055, -0.328203409910202, -0.1761467009782791, -0.1687627136707306, -0.04346821829676628, -0.014497539028525352, -3.564294092939235e-05, -0.03625772148370743, 0.0, -0.00011443436960689723, -0.0017218063585460186, -1.5497195136049413e-06, -1.5497195136049413e-06, -0.0001734344696160406, -0.0037876071874052286, -0.003045090241357684, -0.3683907091617584, -0.02498830109834671, -2.6124913692474365, -0.00097977789118886, -0.06225598230957985, -0.007664203178137541, -0.21683113276958466, -0.43284550309181213, -0.04402847960591316, -0.0037073232233524323, -0.0075352489948272705, -7.152531907195225e-06, -0.00014673586701974273, -0.0010010951664298773, -0.0019545515533536673, -0.15941199660301208, -0.02541886270046234, -0.01901809126138687, -0.4556558430194855, -0.003408457851037383, -8.05822346592322e-05, -0.0028028511442244053, -0.010895994491875172, -0.0025708978064358234, -0.0001829695247579366, -0.02961166575551033, -5.5549986427649856e-05, -0.0007677706307731569, -0.5324307680130005, -3.2305197237292305e-05, -1.2636104656849056e-05, -9.298280929215252e-06, -3.45700973412022e-05, -0.00011598391574807465, -0.05554063990712166, -5.006777428206988e-06, -2.6225699912174605e-05, -7.271740287251305e-06, -0.00023016665363684297, -0.00018821375851985067, -0.0006803343421779573, -0.02313840575516224, -1.6689286894688848e-06, -4.5536911784438416e-05, -5.125986263010418e-06, -9.619726915843785e-05, -3.6477376852417365e-05, -0.0005199749139137566, -7.748573807475623e-06, -2.3841855067985307e-07, -3.433168603805825e-05, -0.0008931938209570944, -0.00012766500003635883, -0.00721290847286582, -0.013755997642874718, -0.009169609285891056, -3.3854863431770355e-05, -0.00016735584358684719, -0.00025102324434556067, -0.0007154765771701932, -6.318072337307967e-06, -0.00037674958002753556, -0.0001674750237725675, -0.00026472879108041525, -5.638440416078083e-05, -0.0015256681945174932, -3.933898824470816e-06, -2.145764938177308e-06, -0.00031859567388892174, -1.1801649634435307e-05, -3.6954811548639555e-06, -2.539125671319198e-05, -7.033323527139146e-06, -2.2291887944447808e-05, -0.0008466235012747347, -6.6756979322235566e-06, -9.119095193454996e-05, -2.0265373677830212e-05, -4.184158387943171e-05, -0.00037091050762683153, -8.475421054754406e-05, -0.00035684893373399973, -4.172316494077677e-06, -5.7338023907504976e-05, -7.986990567587782e-06, -1.4066597032069694e-05, -7.152531907195225e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, 0.0, -9.298280929215252e-06, -7.676783570786938e-05, -5.173549288883805e-05, -0.0004994813934899867, -0.0012217445764690638, -0.0017789267003536224, -0.00019572250312194228, -0.0006353028584271669, -0.0006587718962691724, -0.0009541726321913302, -4.410734163684538e-06, -0.015849797055125237, -1.2397689715726301e-05, -0.00012194366718176752, -0.002475176239386201, -0.00038723601028323174, -0.0004997196956537664, -0.13960444927215576, -0.002226851647719741, -0.19934391975402832, -0.00321597745642066, -0.00011574551899684593, -7.986990567587782e-06, -0.00013410145766101778, -4.2437604861333966e-05, -2.3245540432981215e-05, -7.343022298300639e-05, -0.0011962646385654807, -0.28432729840278625, -0.0006250573205761611, -0.022901684045791626, -5.8530047681415454e-05, -0.03240959718823433, -2.7903125286102295, -0.0966557115316391, -0.2826230227947235, -0.27400830388069153, -2.861018856492592e-06, -5.8412379075889476e-06, -0.0034506323281675577, -3.576278118089249e-07, -0.00023827097902540118, -0.014145583845674992, -1.7046782886609435e-05, -8.463501580990851e-05, -0.0069470531307160854, -0.5977080464363098, -0.00037865620106458664, -9.60780744208023e-05, -0.6619755625724792, -0.0011812621960416436, -0.0072693610563874245, -0.017469346523284912, -2.7894584491150454e-05, -0.01799273118376732, -0.009244376793503761, -0.030809804797172546, -0.001959905494004488, -0.0014831743901595473, -3.194758028257638e-05, -9.238292841473594e-05, -0.0002903516869992018, -0.0003883084573317319, -6.318072337307967e-06, -0.00042965717148035765, -0.0001674750237725675, -0.0002294515579706058, -0.00010513706365600228, -0.004555562045425177, -2.9802276912960224e-06, -0.00016246906307060272], "finish_reason": "length"}], "metrics": {"energy": 868.7881585674284, "energy_per_token": 3.393703744404017, "time": 21.653458, "time_per_token": 0.0845838203125}}
{"outputs": [{"text": "# Raise an error if no valid predicates are provided\n    if not any(\n        predicate in ['is_file', 'is_dir', 'has_special_chars', 'has_numbers'] for predicate in predicates\n    ):\n        raise ValueError('At least one valid predicate should be provided.')\n\n    # Raise an error if the specified directory does not exist or is not a directory\n    if not Path(dir_path).is_dir():\n        raise FileNotFoundError('Specified directory does not exist or is not a directory.')\n\n    # Evaluate each item in the directory against specified conditions\n    results = {}\n    for item in os.listdir(dir_path):\n        item_results = {}\n        for predicate in set(predicates):  # deduplicate predicates\n            if predicate == 'is_file':\n                item_results['is_file'] = Path(os.path.join(dir_path, item)).is_file()\n            elif predicate == 'is_dir':\n                item_results['is_dir'] = Path(os.path.join(dir_path,", "tokens": ["#", " Ra", "ise", " an", " error", " if", " no", " valid", " pred", "icates", " are", " provided", "\n", "    ", "if", " not", " any", "(", "\n", "        ", "pred", "icate", " in", " ['", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "']", " for", " predicate", " in", " pred", "icates", "\n", "    ", "):", "\n", "        ", "raise", " Value", "Error", "('", "At", " least", " one", " valid", " predicate", " should", " be", " provided", ".", "')", "\n", "\n", "    ", "#", " Ra", "ise", " an", " error", " if", " the", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "\n", "    ", "if", " not", " Path", "(", "dir", "_", "path", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Spec", "ified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "')", "\n", "\n", "    ", "#", " E", "valuate", " each", " item", " in", " the", " directory", " against", " specified", " conditions", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "results", " =", " {}", "\n", "        ", "for", " predicate", " in", " set", "(", "pred", "icates", "):", "  ", "#", " ded", "uplicate", " pred", "icates", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "item", "_", "results", "['", "is", "_", "file", "']", " =", " Path", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", ".", "is", "_", "file", "()", "\n", "            ", "elif", " predicate", " ==", " '", "is", "_", "dir", "':", "\n", "                ", "item", "_", "results", "['", "is", "_", "dir", "']", " =", " Path", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ","], "logprobs": [-1.0251017808914185, -3.234591484069824, -0.14767536520957947, -1.0351063013076782, -0.17106351256370544, -0.017554156482219696, -0.17819690704345703, -0.09349125623703003, -0.03801983967423439, -0.00010489867418073118, -0.08931238949298859, -0.043630052357912064, -0.15277907252311707, -0.001141849672421813, -0.27363771200180054, -0.05865823104977608, -1.1502490043640137, -0.06602352857589722, -2.291663646697998, -0.050174370408058167, -0.43811798095703125, -0.6098744869232178, -0.24440646171569824, -1.518617868423462, -0.004726309794932604, -0.0001161031104857102, -0.0052462052553892136, -9.536288416711614e-05, -8.093983342405409e-05, -0.002772775012999773, -0.001783448620699346, -2.3841830625315197e-06, -0.00039915222441777587, -0.0003079893649555743, -6.353653589030728e-05, -0.0027853762730956078, -0.0008312584250234067, -7.748573807475623e-06, -0.014558046124875546, -4.3748852476710454e-05, -0.0002361257211305201, -0.0009834696538746357, -8.713819261174649e-05, -0.0013328249333426356, -7.557583012385294e-05, -8.702239938429557e-06, -0.00032264748006127775, -0.004926091525703669, -2.2391409873962402, -0.004123637918382883, -0.002326997695490718, -0.028592480346560478, -0.0002961912250611931, -0.05202736705541611, -0.002840296132490039, -0.000819347333163023, -0.0029145879670977592, -0.0006347072194330394, -0.007262141909450293, -0.0007312007946893573, -5.245195097813848e-06, -1.3316924571990967, -0.47179093956947327, -0.001620647613890469, -0.008751136250793934, -0.024375850334763527, -0.008848385885357857, -2.508768320083618, -0.0021735632326453924, -0.06840498000383377, -0.825054407119751, -0.06657709926366806, -0.0011947167804464698, -0.06652668118476868, -0.0004769618099089712, -0.2851361334323883, -1.020460844039917, -0.0016639686655253172, -0.05737033113837242, -0.002835422521457076, -0.001841636374592781, -0.07294727116823196, -0.5693653225898743, -0.11817820370197296, -0.1256425529718399, -0.00012694983161054552, -0.0005189026123844087, -0.0404035858809948, -0.0013891342096030712, -0.002422971185296774, -0.0016678959364071488, -0.0033912311773747206, -0.023959852755069733, -0.00028236693469807506, -0.5335769653320312, -0.011326182633638382, -0.8026193976402283, -0.0030676708556711674, -0.0013458014000207186, -5.8887653722194955e-05, -9.536738616588991e-07, -0.0007296522380784154, -0.0009416675311513245, -0.21763639152050018, -3.433168603805825e-05, -0.0004409771354403347, -0.006488683633506298, -0.002431533532217145, -0.00014351768186315894, -0.006375924218446016, -0.008273257873952389, -0.00010883215873036534, -4.6491513785440475e-06, -0.4044663608074188, -2.521724224090576, -0.0013448490062728524, -0.21997347474098206, -0.03246014192700386, -0.00011002412065863609, -0.0003780603874474764, -0.017911002039909363, -0.004270244389772415, -0.00030155404238030314, -0.0012579393805935979, -0.0018799504032358527, -0.0935157909989357, -0.0007889734115451574, -0.00030620177858509123, -0.008668886497616768, -0.00032884435495361686, -0.3706185221672058, -3.2717111110687256, -0.09623982012271881, -0.4963735044002533, -0.1663721352815628, -0.17652855813503265, -0.009301187470555305, -0.25468072295188904, -0.5554595589637756, -1.304225206375122, -0.13721464574337006, -0.20964418351650238, -0.0018105795606970787, -1.0239934921264648, -0.011588755063712597, -0.030665073543787003, -0.008290637284517288, -0.054428234696388245, -0.07967448234558105, -0.13632965087890625, -0.03744586557149887, -0.018470901995897293, -7.986990567587782e-06, -0.09362967312335968, -1.1920928244535389e-07, -0.00016509123088326305, -0.0019584777764976025, -7.629365427419543e-06, -4.768370445162873e-07, -0.00031871485407464206, -0.00433362927287817, -0.004428104963153601, -0.7850202322006226, -0.018334204331040382, -1.2104898691177368, -0.0005689432728104293, -0.07167832553386688, -0.02124832011759281, -0.16981233656406403, -0.3757183849811554, -0.013770107179880142, -0.0011466125724837184, -0.39686304330825806, -0.00045813556062057614, -0.003992326091974974, -0.0001573438785271719, -0.0003215749457012862, -1.6767455339431763, -2.1815061700181104e-05, -1.5249557495117188, -0.02608572691679001, -0.12075883895158768, -6.544376083184034e-05, -0.05037899315357208, -0.0029998086392879486, -0.17543046176433563, -0.020904336124658585, -0.01807878352701664, -0.004737936891615391, -0.0012051946250721812, -1.5020257706055418e-05, -0.0011876918142661452, -0.01413747388869524, -0.005065227393060923, -0.00010918975021922961, -0.06238120421767235, -4.124556289752945e-05, -0.0005063920398242772, -1.043825626373291, -4.124556289752945e-05, -2.5033637939486653e-05, -2.1457441107486375e-05, -3.838465272565372e-05, -6.05564855504781e-05, -1.555896282196045, -0.0018055817345157266, -1.5986521244049072, -4.851700214203447e-05, -4.386805812828243e-05, -1.537788011773955e-05, -0.00018261195509694517, -0.0001515035255579278, -0.0008530553313903511, -7.390948667307384e-06, -9.65590606938349e-06, -5.8410845667822286e-05, -0.00047791501856409013, -0.00039843725971877575, -4.434487345861271e-05, -4.732496745418757e-05, -2.0265558760002023e-06, -7.223821739898995e-05, -5.98412734689191e-05, -0.011482462286949158, -0.01003270223736763, -0.02316892333328724, -4.8636207793606445e-05, -3.957670196541585e-05, -8.11782301752828e-05, -0.00034505134681239724, -6.6756979322235566e-06, -4.51792984677013e-05, -7.235741941258311e-05, -0.00015233787416946143, -2.276871418871451e-05, -0.0006702084210701287, -2.861018856492592e-06, -7.152555099310121e-07, -0.00030620177858509123, -8.583032467868179e-06, -3.2186455882765586e-06, -1.7762025890988298e-05, -4.768360213347478e-06, -1.6569954823353328e-05, -0.006042545661330223, -5.590759246842936e-05, -0.00045277358731254935, -1.5497195136049413e-06, -1.7881377516459906e-06, -9.536738616588991e-07, -1.7046782886609435e-05, -1.07287787614041e-05, -2.5987286790041253e-05, -2.622600959512056e-06, 0.0, -3.564294092939235e-05], "finish_reason": "length"}], "metrics": {"energy": 857.606811613083, "energy_per_token": 3.3500266078636054, "time": 21.62987, "time_per_token": 0.0844916796875}}
{"outputs": [{"text": "# Raise error if no valid predicates are provided\n    valid_predicates = ['is_file', 'is_dir', 'has_special_chars', 'has_numbers']\n    if not any(pred in valid_predicates for pred in predicates):\n        raise ValueError(\"At least one valid predicate must be provided.\")\n\n    # Raise error if the given directory does not exist or is not a directory\n    dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(\"The specified directory does not exist or is not a directory.\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    results = {}\n    for item in os.listdir(dir_path):\n        item_name, item_ext = os.path.splitext(os.path.basename(item))\n        results[item_name] = {}\n\n        if 'is_file' in predicates:\n            results[item_name]['is_file'] = os.path.isfile(os.", "tokens": ["#", " Ra", "ise", " error", " if", " no", " valid", " pred", "icates", " are", " provided", "\n", "    ", "valid", "_", "pred", "icates", " =", " ['", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "']", "\n", "    ", "if", " not", " any", "(", "pred", " in", " valid", "_", "pred", "icates", " for", " pred", " in", " pred", "icates", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " valid", " predicate", " must", " be", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Ra", "ise", " error", " if", " the", " given", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "\n", "    ", "dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "name", ",", " item", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "item", "))", "\n", "        ", "results", "[", "item", "_", "name", "]", " =", " {}", "\n", "\n", "        ", "if", " '", "is", "_", "file", "'", " in", " pred", "icates", ":", "\n", "            ", "results", "[", "item", "_", "name", "]['", "is", "_", "file", "']", " =", " os", ".", "path", ".", "is", "file", "(", "os", "."], "logprobs": [-1.0251017808914185, -3.234591484069824, -0.14767536520957947, -1.9834610223770142, -0.03614309802651405, -0.19636423885822296, -0.1436893492937088, -0.044970862567424774, -0.00030083899036981165, -0.39305245876312256, -0.09742674231529236, -0.11276111006736755, -0.0011436357162892818, -1.808727741241455, -0.022114114835858345, -0.04651836305856705, -0.03640969470143318, -0.0074616544879972935, -1.3432385921478271, -0.003963948227465153, -0.0002643712505232543, -0.005272175185382366, -0.0002636561985127628, -0.0001227780303452164, -0.003108552424237132, -0.002069357316941023, -3.4570634852570947e-06, -0.0004353767435532063, -0.00036566724884323776, -0.00011765264935093, -0.03624070808291435, -0.0023280680179595947, -8.34461570775602e-06, -0.014412704855203629, -0.00010895135346800089, -0.0004814896092284471, -0.0009278521756641567, -0.00010597144137136638, -0.005338816437870264, -0.00025281094713136554, -5.8412379075889476e-06, -0.0005428509321063757, -0.004749564453959465, -0.005272412206977606, -0.034877195954322815, -1.6373686790466309, -0.0722389742732048, -0.3774789869785309, -0.04056168347597122, -0.31045761704444885, -0.808405339717865, -0.012611047364771366, -2.0146166207268834e-05, -1.4305104514278355e-06, -9.894321920000948e-06, -0.00038223114097490907, -0.00013279033009894192, -1.4662635294371285e-05, -0.004848983604460955, -1.9311717551317997e-05, -0.0005415403284132481, -0.0023925271816551685, -0.001117201172746718, -0.011081933043897152, -0.0009126074146479368, -3.4570634852570947e-06, -0.13102208077907562, -0.13098390400409698, -0.6228716373443604, -0.0017897554207593203, -0.005776616279035807, -0.01324368454515934, -0.01461103092879057, -0.21268494427204132, -0.0005220004240982234, -0.06664267182350159, -0.28858229517936707, -0.16715601086616516, -0.0013917532050982118, -0.0007494263118132949, -0.053463198244571686, -0.0005023409612476826, -0.21525731682777405, -0.602552592754364, -0.0011139861308038235, -0.03737489879131317, -0.0022505212109535933, -0.6613238453865051, -2.9349524974823, -0.5571878552436829, -0.36575183272361755, -0.0003190723655279726, -0.0014816269977018237, -0.12503595650196075, -0.005436161067336798, -0.005552227608859539, -0.00652954401448369, -0.006205339450389147, -0.015342195518314838, -0.00029690624796785414, -0.888332188129425, -0.011347045190632343, -0.012560075148940086, -0.1256306767463684, -0.03330960124731064, -0.0006426891195587814, -0.0011288706446066499, -5.364403477869928e-06, 0.0, -0.0006967739318497479, -0.03566490486264229, -0.0021044507157057524, -0.0040070489048957825, -0.016842542216181755, -0.05709744244813919, -9.298280929215252e-06, -2.3841855067985307e-07, -0.001764765940606594, -0.6614939570426941, -1.966933996300213e-05, -0.0004686211177613586, -0.007586596067994833, -0.001639213995076716, -0.00030989613151177764, -0.00812499038875103, -0.015615921467542648, -4.6967357775429264e-05, -2.861018856492592e-06, -0.002292506629601121, -0.5373397469520569, -0.5670889616012573, -0.31089353561401367, -0.047963712364435196, -0.021907242015004158, -3.981510963058099e-05, -0.0001787979417713359, -0.026141123846173286, -0.0014807938132435083, -0.00045193947153165936, -0.0007232195930555463, -0.0019149314612150192, -0.02407844364643097, -0.0009166568052023649, -0.0002802217786666006, -0.0002544794406276196, -0.010099262930452824, -0.0005231918767094612, -0.3959653079509735, -0.6301166415214539, -0.032594576478004456, -0.247629314661026, -0.00016366096679121256, -0.24607352912425995, -0.00016199229867197573, -0.10820641368627548, -0.0018679328495636582, -0.01007577870041132, -0.04554486274719238, -9.846202738117427e-05, -0.02235591784119606, -0.000387831823900342, -0.0009944260818883777, -0.00033456450910307467, -0.0002637753786984831, -0.005067480728030205, -0.022374803200364113, -0.00014649749209638685, -1.7132954597473145, -0.011612911708652973, -0.026778841391205788, -0.04576535150408745, -0.27920788526535034, -0.15986715257167816, -0.1281714141368866, -0.01364887598901987, -0.0331871397793293, -1.4781842764932662e-05, -0.08054615557193756, -7.152555099310121e-07, -0.00019131260341964662, -0.0014848408754915, -2.7417760065873154e-05, 0.0, -0.0008868813747540116, -0.004612045828253031, -0.006662062369287014, -0.574420154094696, -0.019604841247200966, -2.223111867904663, -0.4223649203777313, -0.4033903181552887, -4.470248313737102e-05, -0.06709881126880646, -0.0005018643569201231, -0.0019248068565502763, -1.585470999998506e-05, -1.4305104514278355e-06, -1.5497195136049413e-06, -6.9141146923357155e-06, 0.0, 0.0, -0.0006293461774475873, -2.9577815532684326, -1.0609570381348021e-05, -0.0001308832288486883, -4.768370445162873e-07, -0.0651167556643486, -1.1920922133867862e-06, -1.823885577323381e-05, -0.0015119798481464386, -0.0014544870937243104, -0.10200680047273636, -0.23824520409107208, -2.1906485557556152, -0.01505488995462656, -0.004943647887557745, -1.9447511434555054, -0.0010546842822805047, -0.026603344827890396, -0.00013064485392533243, -0.08895549178123474, -0.021968351677060127, -0.7161583304405212, -0.0015382850542664528, -2.5800747871398926, -0.06419217586517334, -0.0024081061128526926, -8.34461570775602e-06, -0.010525429621338844, -1.1205610462639015e-05, -0.0002451834443490952, -0.00019167017308063805, -1.6689286894688848e-06, -0.018841460347175598, -0.0018467529444023967, -0.00029762129997834563, -0.02560386247932911, -0.00012110930401831865, -4.446407547220588e-05, -0.011200765147805214, -3.0874729418428615e-05, -0.0022116266191005707, -5.185469490243122e-05, -3.2543604902457446e-05, -3.45700973412022e-05, -6.961580220377073e-05, -0.00012242044613230973, -0.05307495966553688, -1.2397689715726301e-05, -5.4238757002167404e-05, -7.748573807475623e-06, -4.660974445869215e-05, -0.00015376816736534238, -0.0008033862104639411, -0.05696018040180206, -4.124556289752945e-05], "finish_reason": "length"}], "metrics": {"energy": 885.2728218383786, "energy_per_token": 3.4580969603061664, "time": 21.643244, "time_per_token": 0.084543921875}}
{"outputs": [{"text": "if not predicates:\n        raise ValueError(\"At least one predicate must be specified.\")\n\n    # Check if the specified directory exists and is a directory\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"Directory '{dir_path}' does not exist or is not a directory.\")\n\n    predicates = list(set(predicates))\n\n    # Dictionary to store results\n    results = {}\n    for entry in os.scandir(dir_path):\n        results[entry.name] = {}\n        for predicate in predicates:\n            if predicate == 'is_file':\n                results[entry.name]['is_file'] = entry.is_file()\n            elif predicate == 'is_dir':\n                results[entry.name]['is_dir'] = entry.is_dir()\n            elif predicate == 'has_special_chars':\n                results[entry.name]['has_special_chars'] = bool(re.search(r'[^\\w\\.]', entry.name.split('.')[0]))\n            elif predicate == 'has", "tokens": ["if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " predicate", " must", " be", " specified", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " specified", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "dir", "_", "path", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Dictionary", " to", " store", " results", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " entry", " in", " os", ".", "sc", "and", "ir", "(", "dir", "_", "path", "):", "\n", "        ", "results", "[", "entry", ".", "name", "]", " =", " {}", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "results", "[", "entry", ".", "name", "]['", "is", "_", "file", "']", " =", " entry", ".", "is", "_", "file", "()", "\n", "            ", "elif", " predicate", " ==", " '", "is", "_", "dir", "':", "\n", "                ", "results", "[", "entry", ".", "name", "]['", "is", "_", "dir", "']", " =", " entry", ".", "is", "_", "dir", "()", "\n", "            ", "elif", " predicate", " ==", " '", "has", "_", "special", "_", "chars", "':", "\n", "                ", "results", "[", "entry", ".", "name", "]['", "has", "_", "special", "_", "chars", "']", " =", " bool", "(", "re", ".", "search", "(", "r", "'", "[", "^\\", "w", "\\", ".", "]", "'", ",", " entry", ".", "name", ".", "split", "('", ".", "')", "[", "0", "]))", "\n", "            ", "elif", " predicate", " ==", " '", "has"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -1.6493465900421143, -0.0005675135762430727, -0.04876355081796646, -0.03108510747551918, -0.0006522196927107871, -0.013676157221198082, -0.0007351318490691483, -7.152555099310121e-07, -0.06775595247745514, -0.02013540454208851, -1.1799806356430054, -0.002742817159742117, -0.009603964164853096, -0.20039403438568115, -0.4705396294593811, -0.000615407363511622, -2.3969523906707764, -0.3623580038547516, -0.0060169510543346405, -0.00019429226813372225, -0.0020204621832817793, -0.230060413479805, -0.0002217047003796324, -1.8110567331314087, -1.9912868738174438, -0.37730610370635986, -0.41733697056770325, -2.0040433406829834, -0.34380871057510376, -0.06156954541802406, -0.25282448530197144, -0.014149227179586887, -0.05019047111272812, -0.028843609616160393, -0.07143405824899673, -0.00036423723213374615, -0.8000375628471375, -0.00814249087125063, -0.5142982006072998, -3.516612196108326e-05, -0.004780529998242855, -1.0490362910786644e-05, -0.4143170714378357, -0.0002628219372127205, -5.781483559985645e-05, -0.0045008547604084015, -5.364274329622276e-05, -9.536738616588991e-07, -0.003841403406113386, -0.0008569859201088548, -0.00015198028995655477, -0.005211103241890669, -0.008371618576347828, -2.0146166207268834e-05, -1.1920922133867862e-06, -0.0008839037618599832, -0.6952859163284302, -0.004957882221788168, -0.7429599165916443, -0.62517249584198, -7.724463648628443e-05, -0.002676597097888589, -1.8715683836489916e-05, -3.3378546504536644e-06, -0.0009514334378764033, -0.1339179277420044, -6.711257447022945e-05, -0.0003256267518736422, -0.11114765703678131, -0.0024840945843607187, -0.0002101439022226259, -0.000502817565575242, -0.0076699997298419476, -0.015097515657544136, -0.0007637205999344587, -0.0002040654799202457, -0.0007116645574569702, -0.006658746860921383, -0.0004049911512993276, -2.883768081665039, -0.10607742518186569, -0.1474660485982895, -0.4511239528656006, -0.0008810452418401837, -0.05184900015592575, -0.006332451477646828, -0.0047616660594940186, -0.0013380631571635604, -0.0008733034483157098, -1.09706449508667, -0.4873336851596832, -0.00015341058315243572, -1.0011076927185059, -2.6131198406219482, -0.07293585687875748, -0.20709413290023804, -1.6857800483703613, -0.18742787837982178, -9.369411418447271e-05, -0.320822536945343, -0.027858886867761612, -0.029170863330364227, -0.0010382506297901273, -2.616936683654785, -0.7873885631561279, -3.097614288330078, -0.06392762809991837, -0.02767082490026951, -3.576272320060525e-06, -0.683647096157074, -5.960462772236497e-07, -3.4570634852570947e-06, -0.00016926287207752466, -0.002075186464935541, -4.410734163684538e-06, -4.0531076592742465e-06, -0.00022957073815632612, -0.0311568696051836, -0.023257791996002197, -3.5979177951812744, -0.012349920347332954, -0.042325038462877274, -0.0017458448419347405, -0.0004207202873658389, -0.004235820844769478, -0.00017426878912374377, -0.16248442232608795, -0.1107727512717247, -0.4832232892513275, -0.3119697868824005, -0.07449150830507278, -0.006058068014681339, -0.0025293997023254633, -2.0265558760002023e-06, -8.5588610090781e-05, -0.002242433140054345, -0.014904570765793324, -0.4160090982913971, -0.04150939732789993, -0.039674028754234314, -0.5240872502326965, -0.004375170916318893, -9.595887240720913e-05, -0.008347620256245136, -0.009382677264511585, -0.006781420204788446, -0.0006331584881991148, -0.037311047315597534, -8.05822346592322e-05, -7.760223525110632e-05, -1.6212332411669195e-05, -0.0001081169830285944, -0.7537949085235596, -6.05564855504781e-05, -4.2437604861333966e-05, -1.823885577323381e-05, -4.684815212385729e-05, -0.00021979777375236154, -0.0112327104434371, -3.302042750874534e-05, -0.0017369197448715568, -2.145764938177308e-06, -0.0002892790944315493, -0.057261478155851364, -0.009653906337916851, -0.013902021571993828, -0.009910190477967262, -6.580135959666222e-05, -8.642300235806033e-05, -0.0004040378553327173, -0.000816012208815664, -8.34461570775602e-06, -0.00022897482267580926, -0.00017712931730784476, -0.00011514954530866817, -6.389413465512916e-05, -0.0014281797921285033, -2.9205850296420977e-05, -1.6689286894688848e-06, -4.529942543740617e-06, -2.622600959512056e-06, -0.0003849719068966806, -8.940656698541716e-06, -4.291525328881107e-06, -0.00011753345461329445, -5.722029527532868e-06, -2.455681169521995e-05, -0.00413135439157486, -1.0251946150674485e-05, -0.00022313489171210676, -1.1920928244535389e-07, -0.0009147512027993798, -0.00019977481861133128, -0.0006068295333534479, -0.001960024470463395, -0.004782784264534712, -0.00039498155820183456, -0.0005694198189303279, -0.0009550062823109329, -0.0015350712928920984, -5.364403477869928e-06, -0.02439841814339161, -1.2040065485052764e-05, -0.00016604475968051702, -0.0023819427005946636, -0.0006965356878936291, -0.0004086851258762181, -0.29156866669654846, -0.00012003655137959868, -0.00013743886665906757, -9.179073458653875e-06, -1.2278481335670222e-05, -0.023287374526262283, -0.00011848701251437888, -1.2636104656849056e-05, -0.00014900050882715732, -8.21318244561553e-05, -6.8662193370983e-05, -9.548207890475169e-05, -0.0037574421148747206, -0.5359588265419006, -0.0005301024066284299, -0.03403540700674057, -8.129743218887597e-05, -0.026568520814180374, -0.03682146593928337, -0.014113026671111584, -0.4849281907081604, -0.004257899709045887, -0.6341835856437683, -0.0026667292695492506, -0.3978249728679657, -0.15813463926315308, -0.5081315636634827, -0.0027390127070248127, -6.735097849741578e-05, -1.5716644525527954, -7.271502545336261e-05, -0.000626367807853967, -0.05724256485700607, -0.021031228825449944, -0.17419445514678955, -0.00015853578224778175, -0.0641154795885086, -0.02058207429945469, -0.00028701478731818497, -0.010009923949837685, -0.02407483570277691, -0.001830451306886971, -0.0012728216825053096, -4.756337511935271e-05, -0.00014697425649501383, -0.0004159538948442787, -0.00041845624218694866], "finish_reason": "length"}], "metrics": {"energy": 875.2209034547797, "energy_per_token": 3.418831654120233, "time": 21.646723, "time_per_token": 0.08455751171875}}
{"outputs": [{"text": "if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"The directory {dir_path} does not exist or is not a directory.\")\n\n    # Deduplicating and validating predicates\n    valid_predicates = ['is_file', 'is_dir', 'has_special_chars', 'has_numbers']\n    predicates = list(set(predicates))\n    predicates = [pred for pred in predicates if pred in valid_predicates]\n\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    result = {}\n    for item in os.listdir(dir_path):\n        item_path = os.path.join(dir_path, item)\n        item_is_file = os.path.isfile(item_path)\n        item_is_dir = os.path.isdir(item_path)\n\n        if 'is_file' in predicates:\n            result.setdefault(item, {})['is_file'] = item_is_file\n\n        if '", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "dir", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "up", "lic", "ating", " and", " valid", "ating", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " ['", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "']", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "    ", "pred", "icates", " =", " [", "pred", " for", " pred", " in", " pred", "icates", " if", " pred", " in", " valid", "_", "pred", "icates", "]", "\n", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "result", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "        ", "item", "_", "is", "_", "file", " =", " os", ".", "path", ".", "is", "file", "(", "item", "_", "path", ")", "\n", "        ", "item", "_", "is", "_", "dir", " =", " os", ".", "path", ".", "is", "dir", "(", "item", "_", "path", ")", "\n", "\n", "        ", "if", " '", "is", "_", "file", "'", " in", " pred", "icates", ":", "\n", "            ", "result", ".", "set", "default", "(", "item", ",", " {", "})", "['", "is", "_", "file", "']", " =", " item", "_", "is", "_", "file", "\n", "\n", "        ", "if", " '"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.7547804117202759, -0.001002047909423709, -0.0003262225945945829, -0.0032431883737444878, -4.470248313737102e-05, -3.576278118089249e-07, -0.0235914196819067, -0.019509684294462204, -0.0006622266955673695, -0.011505677364766598, -0.060988299548625946, -2.169585604860913e-05, -4.410734163684538e-06, -0.04982250556349754, -0.5376468300819397, -0.09874694794416428, -1.3968632221221924, -0.8718788027763367, -1.393315315246582, -0.003816227661445737, -2.253030106658116e-05, -7.510157047363464e-06, -0.028139175847172737, -0.0727679431438446, -0.00032884435495361686, -0.0014147283509373665, -0.12461255490779877, -0.00569613603875041, -0.0009179668850265443, -0.0019851280376315117, -0.01182227861136198, -0.17807969450950623, -0.0037876071874052286, -0.0003766304289456457, -0.0013077049516141415, -0.15840278565883636, -0.0005206898204050958, -1.6251202821731567, -0.9477076530456543, -2.322099447250366, -0.7265611290931702, -0.0007581220706924796, -1.5839390754699707, -1.039664387702942, -0.0017797596519812942, -0.2605949640274048, -0.0004294188693165779, -0.17862245440483093, -0.0006632988806813955, -0.4464537799358368, -0.06972601264715195, -0.030775589868426323, -0.026601023972034454, -0.013613949529826641, -1.743798851966858, -0.0039343819953501225, -0.00017557987303007394, -0.003685944713652134, -0.0006162413046695292, -0.00010489867418073118, -0.002226375974714756, -0.00150079105515033, -8.940656698541716e-06, -0.0011529234470799565, -0.00025602878304198384, -3.433168603805825e-05, -0.00274269818328321, -0.0012840130366384983, -4.6491513785440475e-06, -0.013596897944808006, -5.531158240046352e-05, -0.0003407612966839224, -0.0007297713309526443, -6.05564855504781e-05, -0.0014485353603959084, -0.0004033228906337172, -5.602820692729438e-06, -0.0006389960180968046, -0.003802689490839839, -0.006629970856010914, -0.018870003521442413, -0.4133431315422058, -0.027808107435703278, -0.02738669142127037, -0.3039381802082062, -0.009767123498022556, -0.03172949701547623, -0.00960148498415947, -0.042846083641052246, -0.004994060844182968, -0.012774422764778137, -0.4717648923397064, -0.12539294362068176, -1.0271573066711426, -0.03947614133358002, -0.03826597332954407, -0.018977269530296326, -0.5068199634552002, -0.19650302827358246, -6.544376083184034e-05, -2.062299427052494e-05, -0.0011431594612076879, -2.098061486321967e-05, -0.0007819455349817872, -0.004838899709284306, -0.0018216458847746253, -9.572047565598041e-05, -5.960462772236497e-07, -3.576278118089249e-07, -4.887569048150908e-06, -0.0003457663697190583, -0.0021541742607951164, -0.5770583152770996, -4.8636207793606445e-05, -0.18116261065006256, -0.0840284451842308, -0.007755525875836611, -3.4570634852570947e-06, -0.00022516099852509797, -0.00617809034883976, -0.00015853578224778175, -0.003333252388983965, -0.0002828436263371259, 0.0, -0.0081520676612854, -0.08784067630767822, -0.4746537506580353, -0.0012734169140458107, -0.014559926465153694, -2.5152843591058627e-05, -0.21637968719005585, -0.10626363009214401, -0.3792303502559662, -0.0002681849291548133, -0.0004858981992583722, -0.0034581166692078114, -0.00017796363681554794, -1.5193471908569336, -0.08427830785512924, -0.028693728148937225, -0.010967331938445568, -0.4962339997291565, -0.27902474999427795, -0.1666889190673828, -0.04589584842324257, -0.01882016845047474, -8.702239938429557e-06, -0.03567111864686012, 0.0, -0.00017867876158561558, -0.0015883937012404203, -1.9073468138230965e-06, -1.311301275563892e-06, -0.00016115797916427255, -0.0033987159840762615, -0.00422620540484786, -0.4063088297843933, -0.011484465561807156, -0.20399926602840424, -0.0005099665140733123, -0.09865708649158478, -3.814689989667386e-06, -8.284702198579907e-05, -1.7881377516459906e-06, -0.0008856903295964003, -5.924526340095326e-05, -0.0008111285860650241, -1.0728830375228426e-06, -2.50339189733495e-06, -0.00014482879487331957, -0.0006901028100401163, -0.0002317160106031224, -0.012863867916166782, -0.24161751568317413, -0.23040775954723358, -0.020759915933012962, -1.9997920989990234, -0.010411236435174942, -0.07637247443199158, -0.0009396428358741105, -0.003660408779978752, -6.079655122448457e-06, -1.9073468138230965e-06, -1.0728830375228426e-06, -1.9907753085135482e-05, -0.0005190217634662986, -6.151010165922344e-05, -0.0003962923656217754, -0.0003526780928950757, -3.2186455882765586e-06, -1.811964830267243e-05, -0.024602102115750313, -0.09948032349348068, -0.022233273833990097, -0.0011635207338258624, -0.022226978093385696, -9.929640509653836e-05, -0.006572889629751444, -0.00020716428116429597, -0.007993021048605442, -3.576278118089249e-07, -1.0728830375228426e-06, -1.1920928244535389e-07, -1.597391747054644e-05, -2.8729025871143676e-05, -2.3364747903542593e-05, -3.361645576660521e-05, -0.0008330450509674847, -1.6689160474925302e-05, -1.3112935448589269e-05, -0.0011311330599710345, -0.35195404291152954, -0.00011812942830147222, -3.0356686115264893, -0.3196602761745453, -0.03641727939248085, -7.510157047363464e-06, -0.006149892695248127, -1.5616295058862306e-05, -0.00021979777375236154, -0.0012942517641931772, -1.1920922133867862e-06, -0.022723989561200142, -0.001073856488801539, -0.0003873551613651216, -0.030224503949284554, -1.4956350326538086, -0.0018772137118503451, -3.3378546504536644e-06, -0.010336438193917274, -0.0019442004850134254, -0.006651523057371378, -0.010550436563789845, -1.1801649634435307e-05, -0.037859849631786346, -5.936446541454643e-05, -2.753696753643453e-05, -7.033323527139146e-06, -1.4424220353248529e-05, -4.1483970562694594e-05, -0.0018731682794168591, -3.218599158572033e-05, -2.145764938177308e-06, -7.152555099310121e-07, -0.00014768941036891192, -0.0037258509546518326, -1.243066430091858, -0.0002329078270122409, -0.0022601555101573467, -0.0015401893761008978], "finish_reason": "length"}], "metrics": {"energy": 854.6815908451084, "energy_per_token": 3.3385999642387048, "time": 21.854641, "time_per_token": 0.08536969140625}}
{"outputs": [{"text": "if not os.path.isdir(dir_path):\n        raise FileNotFoundError(\"Directory does not exist or is not a directory\")\n    if not predicates:\n        raise ValueError(\"No valid predicates provided\")\n\n    predicates = list(dict.fromkeys(predicates))\n\n    # Check if all predicates are valid\n    valid_predicates = {\n        \"is_file\",\n        \"is_dir\",\n        \"has_special_chars\",\n        \"has_numbers\",\n    }\n    unknown_predicates = set(predicates) - valid_predicates\n    if unknown_predicates:\n        unknown_predicates_str = \", \".join(unknown_predicates)\n        raise ValueError(f\"Unknown predicates: {unknown_predicates_str}\")\n\n    # Define functions to check for each predicate\n    is_file = lambda x: os.path.isfile(os.path.join(dir_path, x))\n    is_dir = lambda x: os.path.isdir(os.path.join(dir_path,", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "\"", ")", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "pred", "icates", " =", " list", "(", "dict", ".", "from", "keys", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Check", " if", " all", " pred", "icates", " are", " valid", "\n", "    ", "valid", "_", "pred", "icates", " =", " {", "\n", "        ", "\"", "is", "_", "file", "\"", ",", "\n", "        ", "\"", "is", "_", "dir", "\"", ",", "\n", "        ", "\"", "has", "_", "special", "_", "chars", "\"", ",", "\n", "        ", "\"", "has", "_", "numbers", "\"", ",", "\n", "    ", "}", "\n", "    ", "unknown", "_", "pred", "icates", " =", " set", "(", "pred", "icates", ")", " -", " valid", "_", "pred", "icates", "\n", "    ", "if", " unknown", "_", "pred", "icates", ":", "\n", "        ", "unknown", "_", "pred", "icates", "_", "str", " =", " \"", ",", " \"", ".", "join", "(", "unknown", "_", "pred", "icates", ")", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Unknown", " pred", "icates", ":", " {", "unknown", "_", "pred", "icates", "_", "str", "}\"", ")", "\n", "\n", "    ", "#", " Define", " functions", " to", " check", " for", " each", " predicate", "\n", "    ", "is", "_", "file", " =", " lambda", " x", ":", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " x", "))", "\n", "    ", "is", "_", "dir", " =", " lambda", " x", ":", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ","], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.7547804117202759, -0.001002047909423709, -0.0003262225945945829, -0.0032431883737444878, -4.470248313737102e-05, -3.576278118089249e-07, -0.0235914196819067, -0.019509684294462204, -0.0006622266955673695, -0.011505677364766598, -0.060988299548625946, -2.169585604860913e-05, -4.410734163684538e-06, -0.04982250556349754, -0.932490885257721, -1.0899901390075684, -0.400490403175354, -0.00026913834153674543, -0.0006467396160587668, -0.17966248095035553, -0.04352357238531113, -0.0041647134348750114, -0.006310892291367054, -0.017225539311766624, -1.1058183908462524, -0.0006554362480528653, -0.0019691854249686003, -1.6924324035644531, -0.4996754229068756, -0.04845127835869789, -0.14905600249767303, -4.2437604861333966e-05, -0.027988377958536148, -0.006981975864619017, -0.00016473367577418685, -0.003275388851761818, -0.0005740663618780673, 0.0, -0.004564461763948202, -0.007733287289738655, -0.4726497232913971, -0.0928477793931961, -0.024500789120793343, -5.531158240046352e-05, -0.14909811317920685, -0.06490049511194229, -7.83174327807501e-05, -0.0009685831028036773, -0.30138498544692993, -0.00020108585886191577, -2.2594058513641357, -0.09052716195583344, -0.19623345136642456, -0.2943830192089081, -0.002202229807153344, -2.800078868865967, -0.000341476290486753, -2.0265558760002023e-06, -1.1920928244535389e-07, -0.013107682578265667, -0.005578308366239071, -0.0002079985715681687, -0.0027366350404918194, -0.6529507637023926, -0.4843553304672241, -0.0002444683632347733, -2.413789987564087, -2.9137728214263916, -0.7188766598701477, -1.7683793306350708, -0.39891451597213745, -0.0003669780562631786, -0.030624840408563614, -0.18462514877319336, -0.20313362777233124, -0.0012422234285622835, -0.31394162774086, -0.019667262211441994, -0.05037366598844528, -0.00765852490440011, -0.001785828499123454, -2.0435309410095215, -0.04177993908524513, -0.01264753844588995, -0.976340651512146, -0.010667444206774235, -0.00038699767901562154, -0.00492217717692256, -0.8695496916770935, -0.003193043638020754, -0.30308014154434204, -0.0001674750237725675, -0.00010179955279454589, -0.0032252457458525896, -1.1086402082582936e-05, -0.0011392300948500633, -1.537788011773955e-05, -4.470248313737102e-05, -0.00020740265608765185, -0.00026890001026913524, -0.0003999863693024963, -0.002586117247119546, -7.629365427419543e-06, -0.022981839254498482, -0.00010489867418073118, -0.00046135272714309394, -0.00020180096908006817, -6.83045873302035e-05, -0.0007340597221627831, -0.0007771808886900544, -0.0002109781780745834, -0.002315342193469405, -8.106198947643861e-06, -0.003008722560480237, -0.0030519834253937006, -0.2580268085002899, -0.0021192014683037996, -0.1270652711391449, -9.262132516596466e-05, -0.08266868442296982, -0.1463444083929062, -3.5313055515289307, -0.018972590565681458, -0.012289514765143394, -0.010919460095465183, -0.0006590101984329522, -0.09014476835727692, -0.0010768335778266191, -0.0012387705501168966, -2.8967437174287625e-05, -0.00018368464952800423, -0.13682277500629425, -0.001039322349242866, -1.5497195136049413e-06, -1.4305104514278355e-06, -1.5497195136049413e-06, -0.001468176138587296, -0.07562670111656189, -0.009420466609299183, -0.011670648120343685, -4.672895011026412e-05, -9.536738616588991e-07, -0.00011216964776394889, -0.0011261318577453494, -0.0018563910853117704, -0.0002022777043748647, -3.4236559867858887, -0.07445742189884186, -0.20456671714782715, -0.23217400908470154, -0.14253130555152893, -0.0582423135638237, -0.0005391574813984334, -0.04961777105927467, -0.00950891338288784, -0.005561711732298136, -8.880697714630514e-05, -6.878139538457617e-05, -0.004858236759901047, -0.03201032057404518, -0.00028689560713246465, -3.933898824470816e-06, -0.00024351492174901068, -2.1457441107486375e-05, -0.003082169685512781, -0.001591369160450995, -0.3430691659450531, -0.008095074445009232, -1.0728830375228426e-06, -0.00022373080719262362, -0.15006259083747864, -0.003258991753682494, -0.21720506250858307, -0.46918612718582153, -0.00011955977242905647, -0.07875114679336548, -0.004790733102709055, -0.0005676327273249626, -2.3841855067985307e-07, -5.960462772236497e-07, -9.417489309271332e-06, -0.0007406114018522203, -9.536738616588991e-07, -0.01406718511134386, -0.00019226610311307013, -0.0002873722987715155, -0.005354586523026228, -0.00017617580306250602, -1.4095525741577148, -1.2398005723953247, -2.051949977874756, -1.1772717237472534, -0.23047704994678497, -1.1058259010314941, -0.4982738792896271, -0.49282050132751465, -0.04924335330724716, -0.004844712559133768, -2.599510431289673, -0.0014313939027488232, -0.009543037973344326, -0.1813260018825531, -0.14355552196502686, -1.1295392513275146, -0.006824636831879616, -0.43896520137786865, -1.6212332411669195e-05, -0.0001012035645544529, -1.1324817933200393e-05, -0.0006566275842487812, -0.0021385911386460066, -0.0006536492728628218, -0.15539421141147614, -8.106198947643861e-06, -0.0001740304142003879, -5.125986263010418e-06, -0.00017212340026162565, -6.437094270950183e-05, -0.0022291115019470453, -0.00018869050836656243, -5.960446742392378e-06, -0.00013851160474587232, -0.0019288521725684404, -0.003338955342769623, -0.18889380991458893, -0.019427964463829994, -0.004418966360390186, -5.8887653722194955e-05, -0.0010805251076817513, -0.00015925093612167984, -0.003368182573467493, -0.0002286172821186483, -0.00022432672267314047, -0.0108064915984869, -8.344646857949556e-07, -9.131014667218551e-05, -6.9141146923357155e-06, -6.985420623095706e-05, -0.00022539935889653862, -7.4741430580616e-05, -0.0007905219099484384, -1.1920922133867862e-06, -3.6954811548639555e-06, -2.3841855067985307e-07, -1.6569954823353328e-05, -6.794906312279636e-06, -7.152531907195225e-06, -3.2186455882765586e-06, 0.0, -4.95898348162882e-05], "finish_reason": "length"}], "metrics": {"energy": 863.141344254494, "energy_per_token": 3.3716458759941172, "time": 21.626102, "time_per_token": 0.0844769609375}}
{"outputs": [{"text": "dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(\"The directory specified does not exist or is not a directory.\")\n\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Deduplicating predicates\n    unique_predicates = set(predicates)\n\n    # Validating predicates\n    valid_conditions = {\"is_file\", \"is_dir\", \"has_special_chars\", \"has_numbers\"}\n    invalid_conditions = unique_predicates - valid_conditions\n\n    if invalid_conditions:\n        print(\"Warning: Ignoring the following invalid conditions:\", *invalid_conditions)\n\n    # Getting only valid predicates for the rest of the function\n    valid_predicates = unique_predicates.intersection(valid_conditions)\n\n    # Performing evaluation\n    result = {}\n    for item in os.listdir(dir_path):\n        full_path = os.path.join(dir_path, item)\n        item_name, file_", "tokens": ["dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " directory", " specified", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "up", "lic", "ating", " pred", "icates", "\n", "    ", "unique", "_", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "\n", "    ", "#", " Valid", "ating", " pred", "icates", "\n", "    ", "valid", "_", "conditions", " =", " ", "{\"", "is", "_", "file", "\"", ",", " \"", "is", "_", "dir", "\"", ",", " \"", "has", "_", "special", "_", "chars", "\"", ",", " \"", "has", "_", "numbers", "\"}", "\n", "    ", "invalid", "_", "conditions", " =", " unique", "_", "pred", "icates", " -", " valid", "_", "conditions", "\n", "\n", "    ", "if", " invalid", "_", "conditions", ":", "\n", "        ", "print", "(", "\"", "Warning", ":", " Ign", "oring", " the", " following", " invalid", " conditions", ":\"", ",", " *", "invalid", "_", "conditions", ")", "\n", "\n", "    ", "#", " Getting", " only", " valid", " pred", "icates", " for", " the", " rest", " of", " the", " function", "\n", "    ", "valid", "_", "pred", "icates", " =", " unique", "_", "pred", "icates", ".", "inter", "section", "(", "valid", "_", "conditions", ")", "\n", "\n", "    ", "#", " Performing", " evaluation", "\n", "    ", "result", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "        ", "item", "_", "name", ",", " file", "_"], "logprobs": [-3.4967470169067383, -0.024033289402723312, -0.07836092263460159, -0.06354409456253052, -0.06103125214576721, -0.00294263893738389, -0.001680391957052052, -8.583032467868179e-06, -2.3841855067985307e-07, -0.0019882211927324533, -0.06491825729608536, -0.38783296942710876, -0.15375104546546936, -0.019485367462038994, -0.27973848581314087, -4.482168878894299e-05, -2.3841855067985307e-07, -0.0010411086259409785, -0.4476800858974457, -6.067568756407127e-05, -0.0013706822646781802, -0.02305278740823269, -0.009408893994987011, -0.0005119920242577791, -0.012967190705239773, -0.04759083688259125, -3.111314072157256e-05, -6.079655122448457e-06, -0.049518391489982605, -1.1012330055236816, -0.9617489576339722, -2.4611704349517822, -2.7834393978118896, -0.08757521957159042, -0.0005900310934521258, -0.000976919662207365, -0.09991277754306793, -0.007258354686200619, -0.002884277608245611, -0.004651677794754505, -0.010836916044354439, -0.20545627176761627, -0.0029534550849348307, -0.0006323245470412076, -0.0008829509024508297, -0.1156994178891182, -0.0004483648226596415, -1.9004478454589844, -0.041953250765800476, -0.2600242495536804, -4.815939246327616e-05, -0.03737570345401764, -0.009209178388118744, -0.0002669931564014405, -0.009367560036480427, -0.0004631400224752724, 0.0, -0.004290898330509663, -0.0067852092906832695, -0.541604220867157, -0.13552892208099365, -0.03522918373346329, -4.1126360883936286e-05, -0.387320339679718, -0.08310583233833313, -0.094638392329216, -0.00019703354337252676, -0.0009787060553207994, -0.050532009452581406, -0.00027938754647038877, -1.8242909908294678, -0.5211058855056763, -2.787724018096924, -0.6221701502799988, -0.0010064542293548584, -0.46647778153419495, -0.0005243833875283599, -0.3365536332130432, -0.0004188137245364487, -1.5543115139007568, -0.0003147821989841759, -0.005785505287349224, -0.013990425504744053, -0.005194500554352999, -0.6658249497413635, -0.007455146871507168, -0.004809240810573101, -8.761498611420393e-05, -0.0015568528324365616, -0.004038156475871801, -0.20850124955177307, -0.00013255194062367082, -0.7102599740028381, -2.7711594104766846, -0.40158504247665405, -0.32526150345802307, -0.00011777184408856556, -0.16827431321144104, -0.0005335576133802533, -0.37485507130622864, -0.04289907589554787, -2.594625473022461, -0.0028461208567023277, -2.231022834777832, -0.000699156429618597, -0.004849220626056194, -0.0001392267586197704, -0.004585584159940481, -0.004005149472504854, -5.709961988031864e-05, -0.001211624126881361, -0.001209957292303443, -3.576272320060525e-06, -0.00048411093303002417, -0.0003680505615193397, -1.6093124941107817e-05, -0.0013740155845880508, -0.0011557810939848423, -5.960446742392378e-06, -0.013984900899231434, -6.317892984952778e-05, -0.00026675479602999985, -0.00046302087139338255, -1.585470999998506e-05, -0.0011681645410135388, -0.0006572232232429087, -7.033323527139146e-06, -0.0013983005192130804, -0.006930005736649036, -0.0070726508274674416, -0.033973876386880875, -0.7891912460327148, -0.001822478836402297, -2.36784291267395, -0.0024035871028900146, -0.21670953929424286, -1.311301275563892e-06, -2.9802276912960224e-06, -1.5735502529423684e-05, -0.5730207562446594, -0.0002975021197926253, -7.152555099310121e-07, -5.125986263010418e-06, -0.0050402008928358555, -1.9791821241378784, -3.528532761265524e-05, -0.23972682654857635, -0.0236124936491251, -3.2186455882765586e-06, -7.795983401592821e-05, -0.006311365868896246, -0.0017450118903070688, -0.00031585473334416747, -0.3782609701156616, -0.0027980960439890623, -1.879168152809143, -0.9087626934051514, -0.030741602182388306, -1.6645337343215942, -0.01611153595149517, -0.813021183013916, -0.007838561199605465, -0.007646339945495129, -0.12894116342067719, -0.253010094165802, -0.055358730256557465, -0.6578328013420105, -0.006859090179204941, 0.0, -1.4305104514278355e-06, -0.08014760911464691, -0.012579145841300488, -0.5174529552459717, -0.009138897061347961, -0.872234582901001, -3.5579166412353516, -1.6473758220672607, -0.4427412450313568, -0.48265209794044495, -0.00016485285595990717, -2.5997884273529053, -2.76240611076355, -2.840982437133789, -0.001958239823579788, -0.024856677278876305, -0.590173602104187, -0.09202916920185089, -0.00030310326837934554, -1.0023233890533447, -0.011434025131165981, -0.06945168972015381, -0.0027989281807094812, -0.0020763759966939688, -0.29906004667282104, -1.6689286894688848e-06, -3.933898824470816e-06, -1.2874520507466514e-05, -1.26565682888031, -0.03178631514310837, -0.00013565097469836473, -8.761498611420393e-05, -0.0008847374701872468, -4.768370445162873e-07, -0.00037746457383036613, -0.00010871296399272978, -0.0008330450509674847, -0.021431293338537216, -0.00015555603022221476, -1.0318299531936646, -4.339508056640625, -2.5409793853759766, -0.4335857927799225, -0.004919093102216721, -1.451413631439209, -0.053411442786455154, -0.034166865050792694, -0.003102491609752178, -0.2218714952468872, -0.06104583293199539, -0.10965477675199509, -0.021764131262898445, -0.038390565663576126, -7.390948667307384e-06, -0.05041685327887535, 0.0, -0.00012468514614738524, -0.0018023689044639468, -3.40932747349143e-05, -7.152555099310121e-07, -0.0006730675231665373, -0.0032188291661441326, -0.008170276880264282, -2.9172866344451904, -0.0034541962668299675, -0.0499030277132988, -0.0017910643946379423, -0.545610785484314, -5.245195097813848e-06, -0.0002162222663173452, -1.9073468138230965e-06, -0.0005478549865074456, -4.053033626405522e-05, -0.0034341190475970507, -8.344646857949556e-07, -7.033323527139146e-06, -0.0014648432843387127, -0.0003736513026524335, -0.00037067217635922134, -0.007161305285990238, -0.29421061277389526, -0.4764882028102875, -0.03538798540830612, -0.8541743755340576, -0.3736740052700043, -2.5915184020996094, -0.0004372832481749356], "finish_reason": "length"}], "metrics": {"energy": 868.6944891033177, "energy_per_token": 3.3933378480598346, "time": 21.642605, "time_per_token": 0.08454142578125}}
{"outputs": [{"text": "# Deduplicate and check for valid predicates\n    valid_predicates = {'is_file', 'is_dir', 'has_special_chars', 'has_numbers'}\n    predicates = list(set(predicates))\n    if not set(predicates).issubset(valid_predicates):\n        raise ValueError(f\"Invalid predicates provided: {', '.join(set(predicates) - valid_predicates)}\")\n\n    # Ensure the directory exists\n    dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(f\"Directory not found: {dir_path}\")\n\n    results = {}\n    for item in os.listdir(dir_path):\n        full_path = Path(dir_path / item)\n        is_file = full_path.is_file()\n        is_dir = full_path.is_dir()\n\n        item_results = {}\n        for predicate in predicates:\n            if predicate == 'is_file':\n                item_results['is_file'] = is_", "tokens": ["#", " Ded", "uplicate", " and", " check", " for", " valid", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " {'", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "'}", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "    ", "if", " not", " set", "(", "pred", "icates", ")", ".", "iss", "ub", "set", "(", "valid", "_", "pred", "icates", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Invalid", " pred", "icates", " provided", ":", " {'", ",", " '", ".", "join", "(", "set", "(", "pred", "icates", ")", " -", " valid", "_", "pred", "icates", ")}", "\"", ")", "\n", "\n", "    ", "#", " Ensure", " the", " directory", " exists", "\n", "    ", "dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "dir", "_", "path", "}\"", ")", "\n", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "full", "_", "path", " =", " Path", "(", "dir", "_", "path", " /", " item", ")", "\n", "        ", "is", "_", "file", " =", " full", "_", "path", ".", "is", "_", "file", "()", "\n", "        ", "is", "_", "dir", " =", " full", "_", "path", ".", "is", "_", "dir", "()", "\n", "\n", "        ", "item", "_", "results", " =", " {}", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "item", "_", "results", "['", "is", "_", "file", "']", " =", " is", "_"], "logprobs": [-1.0251017808914185, -3.2128992080688477, -0.13144779205322266, -1.697098731994629, -1.8669089078903198, -1.2961214780807495, -0.384204626083374, -0.0721651092171669, -0.00010895135346800089, -0.13470369577407837, -0.001057184999808669, -0.7949718236923218, -0.049458377063274384, -0.05097561702132225, -0.04716050624847412, -0.012463538907468319, -1.3884416818618774, -0.005694358143955469, -0.0002127659390680492, -0.005854364018887281, -0.008712612092494965, -0.00012754580529872328, -0.0026676803827285767, -0.0012760362587869167, -4.529942543740617e-06, -0.0003899767471011728, -0.0010024051880463958, -1.490105023549404e-05, -0.005352926440536976, -0.001313776709139347, -4.768360213347478e-06, -0.02437654696404934, -9.548207890475169e-05, -0.0003815161471720785, -0.0006609162664972246, -5.8410845667822286e-05, -0.0042472160421311855, -8.606540359323844e-05, -4.291525328881107e-06, -0.0006473353132605553, -0.003107839496806264, -0.05785670876502991, -0.005832320544868708, -0.2910769283771515, -0.013883211649954319, -0.04642026871442795, -1.3355027437210083, -0.02357989363372326, -0.013152273371815681, -0.004413625691086054, -0.019260060042142868, -0.0029588036704808474, -0.1290929913520813, -0.2657923102378845, -0.06107678636908531, -0.5717478394508362, -0.15886011719703674, -0.809613823890686, -0.00010346830822527409, -0.00027509720530360937, -0.0002733095607254654, -0.0001289761275984347, -0.36108556389808655, -0.17856243252754211, -1.728519782773219e-05, 0.0, -1.7404405298293568e-05, -0.0004858981992583722, -4.768370445162873e-07, -1.1920928244535389e-07, -5.006777428206988e-06, -0.0018080807058140635, -0.0012293646577745676, -0.0004707658663392067, -0.10229073464870453, -0.0014062763657420874, -4.768370445162873e-07, -0.0750657320022583, -0.9970818161964417, -0.22519375383853912, -0.2326551377773285, -0.7237148880958557, -0.00010823617776622996, -1.371824026107788, -0.8156682252883911, -1.8528136014938354, -0.0049464949406683445, -0.019198549911379814, -8.415821503149346e-05, -4.184158387943171e-05, -0.02157258428633213, -0.10569439083337784, -3.7788631743751466e-05, -0.00014923889830242842, -0.0010200303513556719, -0.0055051627568900585, -0.1829507201910019, -0.007969841361045837, -7.271740287251305e-06, -1.2159273865108844e-05, -1.5020257706055418e-05, -0.0015822045970708132, -0.11482035368680954, -0.01449894905090332, -0.0010523025412112474, -0.07523879408836365, -0.00035041390219703317, -0.19090940058231354, -2.6179847717285156, -0.48236528038978577, -0.5005494952201843, -0.1084715873003006, -0.4189893305301666, -9.870042413240299e-05, -0.5165203213691711, -0.006168612278997898, -0.006289806216955185, -0.05793759971857071, -0.05485115945339203, -0.0007608617888763547, -0.0005105622112751007, -3.099436753473128e-06, 0.0, -0.0006778326351195574, -0.02687365747988224, -0.0014459164813160896, -0.0034868652001023293, -0.009515408426523209, -0.04181172326207161, -1.1801649634435307e-05, -1.1920928244535389e-07, -0.000514017534442246, -0.2954949140548706, -1.3947389561508317e-05, -0.00037722624256275594, -0.012692149728536606, -0.0008780676289461553, -9.297892393078655e-05, -0.003966679330915213, -0.016744425520300865, -1.6927575416048057e-05, -1.0728830375228426e-06, -0.008460985496640205, -0.1847820281982422, -0.01351045910269022, -0.18621820211410522, -1.1437044143676758, -0.0003129946126136929, -0.12400449067354202, -0.014886953867971897, -0.029496505856513977, -0.0022546842228621244, -4.446407547220588e-05, -0.02183539606630802, -0.00012373158824630082, -0.00015221867943182588, -0.0050230021588504314, -0.00018952481332235038, -1.0542755126953125, -0.004959661513566971, -0.02296401560306549, -0.019523246213793755, -0.2848705053329468, -0.13591578602790833, -0.1251985877752304, -0.00905407965183258, -0.05387004092335701, -1.2397689715726301e-05, -0.05703495070338249, 0.0, -0.0001382732152706012, -0.00200737570412457, -3.4570634852570947e-06, -1.6689286894688848e-06, -0.0006366133457049727, -0.007067561149597168, -0.002111945068463683, -3.0709402561187744, -0.002856343751773238, -0.031788162887096405, -0.0005771639989688993, -2.1152331829071045, -0.005404622759670019, -0.03397698700428009, -2.264974000354414e-06, -6.079655122448457e-06, -1.0096802711486816, -0.003212531330063939, -0.0006742588011547923, -0.027108512818813324, -0.2288489043712616, -2.3208956718444824, -0.0012680593645200133, -0.07412473857402802, -0.008842477574944496, -0.024007221683859825, -9.536738616588991e-07, -1.1920928244535389e-07, -7.223821739898995e-05, -0.00032300499151460826, -1.5497195136049413e-06, -0.00024327656137757003, -8.21318244561553e-05, -0.03704296797513962, -0.08517783880233765, -0.11130380630493164, -8.77341881277971e-05, -0.008676331490278244, -0.00015507926582358778, -0.024121617898344994, -2.3841830625315197e-06, -4.768370445162873e-07, -3.6954811548639555e-06, -3.373566141817719e-05, 0.0, -0.0002802217786666006, -1.3351351299206726e-05, -0.004042668268084526, -0.7671844363212585, -0.00010954733443213627, -1.0768966674804688, -0.028403282165527344, -1.2797324657440186, -0.0008634176338091493, -0.3782444894313812, -0.013552209362387657, -0.05730200558900833, -0.5108214616775513, -0.024037595838308334, -0.001104817260056734, -0.009617660194635391, -1.1920928244535389e-07, -2.992108420585282e-05, -0.00043418517452664673, -0.00044586253352463245, -0.06465960294008255, -0.004223712719976902, -0.011751591227948666, -0.0354861281812191, -0.003927139099687338, -8.34461570775602e-06, -0.0015329287853091955, -0.008452710695564747, -0.0021128966473042965, -0.00015472168161068112, -0.006914970930665731, -3.6954811548639555e-06, -1.0013530300057027e-05, -0.5310314893722534, -4.076874756719917e-05, -2.753696753643453e-05, -0.00010752100206445903, -2.2649508537142538e-05, -4.6967357775429264e-05, -0.004693443886935711, -1.311301275563892e-06], "finish_reason": "length"}], "metrics": {"energy": 860.4475522956848, "energy_per_token": 3.3611232511550186, "time": 21.636337, "time_per_token": 0.08451694140625}}
{"outputs": [{"text": "# Check that the directory exists and is a directory\n    dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(f\"{dir_path} is not a directory\")\n\n    # Check that at least one predicate is provided\n    if not predicates:\n        raise ValueError(\"No predicates provided\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    results = {}\n\n    # Loop through all items in the directory\n    for item in os.listdir(dir_path):\n        # Initialize the result dict for the item\n        result = {}\n\n        # Check the specified predicates\n        for predicate in predicates:\n            if predicate == 'is_file':\n                result['is_file'] = os.path.isfile(os.path.join(dir_path, item))\n            elif predicate == 'is_dir':\n                result['is_dir'] = os.path.isdir(os.path.join(dir_path, item))\n            elif predicate == 'has_special_chars", "tokens": ["#", " Check", " that", " the", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "dir", "_", "path", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " at", " least", " one", " predicate", " is", " provided", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "results", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " items", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "#", " Initialize", " the", " result", " dict", " for", " the", " item", "\n", "        ", "result", " =", " {}", "\n", "\n", "        ", "#", " Check", " the", " specified", " pred", "icates", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "result", "['", "is", "_", "file", "']", " =", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "            ", "elif", " predicate", " ==", " '", "is", "_", "dir", "':", "\n", "                ", "result", "['", "is", "_", "dir", "']", " =", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "            ", "elif", " predicate", " ==", " '", "has", "_", "special", "_", "chars"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -2.400285005569458, -1.4840129613876343, -0.41535091400146484, -0.21478553116321564, -0.5599778890609741, -0.10793998837471008, -0.2159067988395691, -0.09910403937101364, -0.09820117801427841, -0.00077622797107324, -0.8253313899040222, -0.01371778268367052, -0.019904164597392082, -0.18127866089344025, -0.030718598514795303, -0.00096703483723104, -0.0010876698652282357, -6.794906312279636e-06, 0.0, -0.0013367536012083292, -0.04304809868335724, -0.01989411562681198, -0.01045205444097519, -0.006560218054801226, -0.08713717758655548, -1.5139465176616795e-05, 0.0, -0.0006640136707574129, -0.31061291694641113, -2.1815061700181104e-05, -0.0004657614335883409, -0.0094386525452137, -0.0020888668950647116, -0.00040975757292471826, -0.009886229410767555, -0.029470810666680336, -2.312633478140924e-05, -2.7418097943154862e-06, -0.022925568744540215, -0.5070009231567383, -0.04338283836841583, -2.353426456451416, -0.013235332444310188, -1.4781842764932662e-05, -4.5298504119273275e-05, -0.028865037485957146, -0.14631392061710358, -0.013739418238401413, -0.022384127601981163, -0.6735270023345947, -1.4301382303237915, -0.0002157455455744639, -0.0005311747081577778, -0.036428891122341156, -0.00041559641249477863, -0.10520154982805252, -0.7177599668502808, -0.2335522323846817, -0.5448404550552368, -0.0005601267330348492, -0.0041822828352451324, -1.0636179447174072, -0.07605192065238953, -0.09226573258638382, -0.1415310800075531, -0.0001805857609724626, -0.04237554222345352, -0.06984230130910873, -0.054452281445264816, -5.006777428206988e-06, -0.003481757128611207, -0.0009993088897317648, -9.011816291604191e-05, -0.0015673269517719746, -0.0004909025738015771, 0.0, -0.006519122049212456, -0.024498462677001953, -0.5770846605300903, -0.2981595993041992, -1.7404405298293568e-05, -0.067672960460186, -0.09000423550605774, -5.972207145532593e-05, -9.357491217087954e-05, -0.015554304234683514, -0.0003051292151212692, -0.19230474531650543, -0.7729449272155762, -0.017591403797268867, -0.16065482795238495, -6.854299135738984e-05, -0.15608802437782288, -0.0001793938863556832, -0.1117919459939003, -0.0036123041063547134, -0.015178651548922062, -0.09666620939970016, -0.00012265883560758084, -0.01801052689552307, -0.001468533300794661, -0.002750782296061516, -0.0005657264264300466, -0.0002181292074965313, -0.004095619544386864, -0.01897539757192135, -0.0001382732152706012, -3.100165367126465, -0.008364170789718628, -0.025842268019914627, -0.033735789358615875, -0.9620816707611084, -0.00018523407925385982, -0.7413323521614075, -2.0972414016723633, -0.2784510850906372, -1.4942675828933716, -0.5352873802185059, -0.024455655366182327, -0.01906721480190754, -0.07164470106363297, -0.11887238919734955, -0.0004640932602342218, -0.026411330327391624, -0.09022526443004608, -0.029716281220316887, -0.09578832983970642, -1.8596476365928538e-05, -0.03925999253988266, -8.344646857949556e-07, -0.0001591317413840443, -0.0016345723997801542, -6.6756979322235566e-06, -2.3841830625315197e-06, -0.0011241076281294227, -0.00036113892565481365, -0.05141472443938255, -0.8869311809539795, -1.3739606142044067, -0.7606266140937805, -0.4504116475582123, -3.082737684249878, -0.23707479238510132, -1.0154311656951904, -0.8196239471435547, -0.10787663608789444, -0.0001463782973587513, -0.836216390132904, -0.014543947763741016, -0.46081674098968506, -0.00037377048283815384, -0.22207783162593842, -0.00017927470616996288, -0.08213339745998383, -0.6654217839241028, -2.8505070209503174, -0.9515096545219421, -0.3417838513851166, -2.3841574147809297e-05, -0.6083819270133972, -0.0024540091399103403, -0.4014744460582733, -0.05436399579048157, -0.008007921278476715, -0.0028287656605243683, -4.887569048150908e-06, -2.8967437174287625e-05, -0.00017629499780014157, -0.014495658688247204, -0.3832639455795288, -0.012476960197091103, -0.014779483899474144, -0.936018168926239, -0.0030805058777332306, -0.00012063252506777644, -0.004497057292610407, -0.004895248916000128, -0.005022053606808186, -0.0005349873681552708, -0.06976425647735596, -0.5071442127227783, -8.284702198579907e-05, -3.3378044463461265e-05, -3.099393507000059e-05, -5.495397272170521e-05, -0.00013433984713628888, -0.5062521696090698, -3.4689302992774174e-05, -0.00011681827891152352, -1.2993727978027891e-05, -0.0005266471416689456, -0.0001699779968475923, -0.0007861146004870534, -0.10647488385438919, -7.033323527139146e-06, -0.00012134769349358976, -3.2186455882765586e-06, -6.115249561844394e-05, -5.566918844124302e-05, -0.0017558409599587321, -0.00023636408150196075, -2.861018856492592e-06, -0.00040189296123571694, -0.0014373458689078689, -0.0003129946126136929, -0.0068502104841172695, -0.025954481214284897, -0.008654704317450523, -1.9073304429184645e-05, -9.63164638960734e-05, -0.0003398079425096512, -0.0007954055909067392, -7.629365427419543e-06, -0.00040618274942971766, -7.402622577501461e-05, -6.8662193370983e-05, -0.00011193125828867778, -0.0013228246243670583, -0.00046492734691128135, -1.2874520507466514e-05, -5.8412379075889476e-06, -1.6093124941107817e-05, -4.291525328881107e-06, -3.099393507000059e-05, -0.0016824151389300823, -2.9802276912960224e-06, -7.271740287251305e-06, -4.529942543740617e-06, -0.00010382589971413836, -0.0005933669744990766, -8.153582894010469e-05, -0.0031098597683012486, -1.0728830375228426e-06, -2.145764938177308e-06, -8.344646857949556e-07, -1.3947389561508317e-05, -1.2755313036905136e-05, -0.0001541257370263338, -6.198863957251888e-06, 0.0, -1.7404405298293568e-05, -0.00015198028995655477, -5.280832192511298e-05, -0.00022885564249008894, -0.0015712546883150935, -0.0036194308195263147, -9.703165414975956e-05, -0.0003067976504098624, -0.0007015389273874462, -0.0010987442219629884, -5.006777428206988e-06, -0.02043515257537365, -1.966933996300213e-05, -0.0001081169830285944], "finish_reason": "length"}], "metrics": {"energy": 881.0838187274925, "energy_per_token": 3.4417336669042675, "time": 21.87623, "time_per_token": 0.0854540234375}}
{"outputs": [{"text": "# Check if the directory path is valid\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(\"Directory does not exist or is not a directory.\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Check if there are any valid predicates\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Initialize the result dictionary\n    results = {}\n\n    # Iterate over the items in the directory\n    for item in os.listdir(dir_path):\n        full_path = os.path.join(dir_path, item)\n\n        # Get item name without extension\n        item_name, file_extension = os.path.splitext(item)\n\n        # Initialize the result dictionary for the current item\n        item_result = {}\n\n        # Check each predicate and store the results\n        if 'is_file' in predicates:\n            item_result['is_file'] = os.path.isfile(full_path)\n\n        if 'is_dir'", "tokens": ["#", " Check", " if", " the", " directory", " path", " is", " valid", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " valid", " pred", "icates", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " result", " dictionary", "\n", "    ", "results", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " items", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "\n", "        ", "#", " Get", " item", " name", " without", " extension", "\n", "        ", "item", "_", "name", ",", " file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "item", ")", "\n", "\n", "        ", "#", " Initialize", " the", " result", " dictionary", " for", " the", " current", " item", "\n", "        ", "item", "_", "result", " =", " {}", "\n", "\n", "        ", "#", " Check", " each", " predicate", " and", " store", " the", " results", "\n", "        ", "if", " '", "is", "_", "file", "'", " in", " pred", "icates", ":", "\n", "            ", "item", "_", "result", "['", "is", "_", "file", "']", " =", " os", ".", "path", ".", "is", "file", "(", "full", "_", "path", ")", "\n", "\n", "        ", "if", " '", "is", "_", "dir", "'"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -0.8809680342674255, -0.414806991815567, -2.2823994159698486, -0.5769625902175903, -0.1499096006155014, -0.41873282194137573, -0.0011088658357039094, -0.6587344408035278, -0.01690290868282318, -0.5566819906234741, -3.015949550899677e-05, -0.013414837419986725, -1.2755313036905136e-05, -0.32287919521331787, -0.0015499495202675462, -0.00010966652916977182, -0.004245079588145018, -5.173549288883805e-05, 0.0, -0.012171754613518715, -0.0016562328673899174, -0.00038223114097490907, -0.013911662623286247, -0.04522520303726196, -2.1219027985353023e-05, -2.145764938177308e-06, -0.02985108457505703, -0.7733385562896729, -1.1516315937042236, -0.44084668159484863, -0.0002037079248111695, -0.0005168771021999419, -0.14610762894153595, -0.0402800478041172, -0.004078167490661144, -0.015032813884317875, -0.025142692029476166, -0.4971683621406555, -0.0017000283114612103, -0.0003895000845659524, -0.0004805363714694977, -0.03129933401942253, -0.00034457468427717686, -0.07955724000930786, -0.9118988513946533, -0.03874177485704422, -0.511673629283905, -0.00012754580529872328, -0.2748558521270752, -0.00014923889830242842, -0.2424631267786026, -0.008151949383318424, -0.02717789076268673, -0.08629900962114334, -0.00011288482346571982, -0.022172296419739723, -0.001019553979858756, -0.0021272904705256224, -0.0005995621904730797, -0.00036352223833091557, -0.005491172894835472, -0.037489153444767, -7.939023635117337e-05, -0.07526765018701553, -0.3955211341381073, -0.05009262636303902, -0.5473179221153259, -0.027592550963163376, -0.377467542886734, -0.014177905395627022, -0.01369579415768385, -2.0503786799963564e-05, -0.17880550026893616, -3.7788631743751466e-05, -0.054803088307380676, -0.06693549454212189, -0.4437699019908905, -7.557583012385294e-05, -0.023493729531764984, -0.0004444326623342931, -6.01988795096986e-05, -0.0019464610377326608, -0.00021145492792129517, 0.0, -0.0019005347276106477, -0.008921287022531033, -0.19710342586040497, -0.0034058440942317247, -0.007937910035252571, -2.109982233378105e-05, -0.07650566101074219, -0.040347371250391006, -0.025172218680381775, -0.00010168035078095272, -0.00014911970356479287, -0.0033246977254748344, -0.0002008474839385599, -0.34946101903915405, -1.3089656829833984, -0.6099714636802673, -0.5062130093574524, -0.031734924763441086, -0.0881471112370491, -0.0002553137019276619, -1.6033644676208496, -0.01253841444849968, -0.043396078050136566, -0.0012376990634948015, -0.027934705838561058, -0.0002203936892328784, -0.03105771914124489, -1.028759479522705, -0.0005676327273249626, -0.531212329864502, -0.592881977558136, -0.9545022249221802, -0.010410528630018234, -0.0016708712792024016, -0.04127458110451698, -0.04496721550822258, -0.0002015625941567123, -0.031382862478494644, -0.06471838057041168, -0.036549460142850876, -0.012655307538807392, -8.583032467868179e-06, -0.012599039822816849, -1.1920928244535389e-07, -7.724463648628443e-05, -0.00194110709708184, -1.9073468138230965e-06, 0.0, -0.0001289761275984347, -0.00034624303225427866, -0.026769325137138367, -3.4779977798461914, -0.002206868724897504, -0.024249032139778137, -0.0007289375062100589, -0.010482490994036198, -7.152555099310121e-07, -2.8609820219571702e-05, -8.344646857949556e-07, -0.0003914067056030035, -3.4927710657939315e-05, -0.0016531385481357574, -8.344646857949556e-07, -1.1920928244535389e-07, -8.606540359323844e-05, -0.0003672163875307888, -0.00013159839727450162, -0.01689775101840496, -0.8269763588905334, -0.00032264748006127775, -0.1327507048845291, -2.8425889015197754, -2.8585567474365234, -0.2900538444519043, -0.11114829778671265, -0.3925744593143463, -0.8879960775375366, -0.00027366707217879593, -0.4801734387874603, -0.013523983769118786, -0.115944042801857, -2.0130324363708496, -2.215266227722168, -0.00013457823661156, -0.9572921991348267, -0.0007788485381752253, -0.0022807319182902575, -5.006777428206988e-06, -5.006777428206988e-06, -2.3841855067985307e-07, -0.0001720042055239901, 0.0, -1.1920928244535389e-07, -0.00034231049357913435, -0.11359985172748566, -0.0012182918144389987, -0.01917095109820366, -0.02970123663544655, -0.00040439533768221736, -0.08550402522087097, -1.0695852041244507, -0.1828467696905136, -0.8373198509216309, -1.0343317985534668, -0.04034553840756416, -0.5378647446632385, -0.644536554813385, -0.00751951290294528, -0.00833059661090374, -0.0001787979417713359, -0.9069469571113586, -0.00015269544383045286, -0.9253645539283752, -0.0004786299541592598, -0.04524058476090431, -0.000286657246761024, -0.010484614409506321, -0.0002658013836480677, -0.060213785618543625, -0.4989837110042572, -0.4466201364994049, -0.1586911827325821, -1.0254417657852173, -1.55794358253479, -0.04733743518590927, -1.5041489601135254, -0.347493052482605, -0.0014211564557626843, -1.3888039588928223, -0.4089367985725403, -0.001653733546845615, -4.684815212385729e-05, -0.00428223330527544, -2.3245540432981215e-05, -8.308542601298541e-05, -9.011816291604191e-05, -3.4570634852570947e-06, -0.00622204365208745, -0.0015240018256008625, -0.0002636561985127628, -0.011909570544958115, -2.50339189733495e-06, -7.629103492945433e-05, -0.0013960388023406267, -7.521823135903105e-05, -2.884823152271565e-05, -1.0847986231965479e-05, -5.1377883210079744e-05, -3.302042750874534e-05, -0.005963627714663744, -2.9802276912960224e-06, -1.1205610462639015e-05, -6.6756979322235566e-06, -1.9907753085135482e-05, -0.00012706902634818107, -2.7894584491150454e-05, -0.0016768217319622636, 0.0, 0.0, -4.5060096454108134e-05, -0.011116004548966885, -1.242697834968567, -0.00020752183627337217, -0.004485783167183399, -0.00013934595335740596, -0.0010140759404748678, -4.0531076592742465e-06, -0.0006939148879610002, -1.1086402082582936e-05], "finish_reason": "length"}], "metrics": {"energy": 880.5320631885523, "energy_per_token": 3.4395783718302826, "time": 21.635286, "time_per_token": 0.0845128359375}}
{"outputs": [{"text": "if not predicates:\n        raise ValueError(\"No valid predicates provided\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Validate predicates\n    valid_predicates = {'is_file', 'is_dir', 'has_special_chars', 'has_numbers'}\n    invalid_predicates = set(predicates) - valid_predicates\n\n    if invalid_predicates:\n        print(f\"WARNING: Invalid predicates {invalid_predicates} were ignored.\")\n        predicates = [p for p in predicates if p not in invalid_predicates]\n\n    # Check if directory exists and is a valid directory\n    path = Path(dir_path)\n    if not path.exists() or not path.is_dir():\n        raise FileNotFoundError(f\"Directory '{dir_path}' does not exist or is not a directory.\")\n\n    result = {}\n\n    # Iterate over items in the directory\n    for item in os.listdir(dir_path):\n        item_path = os.path.join", "tokens": ["if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Valid", "ate", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " {'", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "'}", "\n", "    ", "invalid", "_", "pred", "icates", " =", " set", "(", "pred", "icates", ")", " -", " valid", "_", "pred", "icates", "\n", "\n", "    ", "if", " invalid", "_", "pred", "icates", ":", "\n", "        ", "print", "(", "f", "\"", "WARNING", ":", " Invalid", " pred", "icates", " {", "invalid", "_", "pred", "icates", "}", " were", " ignored", ".", "\"", ")", "\n", "        ", "pred", "icates", " =", " [", "p", " for", " p", " in", " pred", "icates", " if", " p", " not", " in", " invalid", "_", "pred", "icates", "]", "\n", "\n", "    ", "#", " Check", " if", " directory", " exists", " and", " is", " a", " valid", " directory", "\n", "    ", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " path", ".", "exists", "()", " or", " not", " path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "dir", "_", "path", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " items", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -1.6493465900421143, -0.0005675135762430727, -0.04876355081796646, -0.03108510747551918, -0.0006522196927107871, -0.013676157221198082, -0.0007351318490691483, -7.152555099310121e-07, -0.06775595247745514, -0.02013540454208851, -0.6409753561019897, -0.09496736526489258, -0.023708773776888847, -8.570780482841656e-05, -0.16908982396125793, -0.9212924242019653, -0.0001652104256208986, -0.002385629341006279, -0.23655270040035248, -0.0002531684876885265, -1.878890872001648, -1.2094568014144897, -0.07350455969572067, -0.3655581772327423, -0.00014411364099942148, -0.22525903582572937, -0.00024244230007752776, -0.37953096628189087, -0.011039018630981445, -0.03403171896934509, -0.06921367347240448, -0.00043299360550008714, -0.0264155101031065, -0.0021877181716263294, -0.006072168238461018, -0.000387831823900342, -0.0003505330823827535, -0.003047704929485917, -0.04410570487380028, -0.00014041867689229548, -0.533129096031189, -2.0418686866760254, -0.10248690098524094, -1.0237380266189575, -0.00015352977789007127, -0.15452025830745697, -0.00048673225683160126, -0.44157615303993225, -0.0305960513651371, -0.042871665209531784, -0.008220409043133259, -0.002147869672626257, -1.25702702999115, -0.0034319807309657335, -8.916457591112703e-05, -0.004340276122093201, -0.0006765222642570734, -5.07818695041351e-05, -0.0017878514481708407, -0.001291394466534257, -2.145764938177308e-06, -0.00048744716332294047, -0.00045110538485459983, -2.1934269170742482e-05, -0.009458845481276512, -0.0018722163513302803, -5.483612312673358e-06, -0.016974756494164467, -3.075552376685664e-05, -0.0003607814433053136, -0.0008317348547279835, -2.884823152271565e-05, -0.0032530506141483784, -0.0003861635341309011, -7.748573807475623e-06, -0.0007169060409069061, -0.003876791102811694, -0.0017655988922342658, -0.03526151925325394, -1.0088930130004883, -0.005740229040384293, -0.001862459466792643, -0.015766603872179985, -0.0006510283565148711, -0.0765422135591507, -0.000491021724883467, -0.0007034449372440577, -0.0005709686665795743, -7.188061863416806e-05, -0.24528712034225464, -0.0005376085755415261, -1.311301275563892e-06, -2.3841855067985307e-07, -5.125986263010418e-06, -0.0011191064259037375, -2.306379795074463, -3.790783375734463e-05, -0.15281866490840912, -0.02544640563428402, -3.7431014789035544e-05, -7.510157047363464e-06, -0.00022384998737834394, -0.006757265888154507, -0.0010380124440416694, -0.00032789100077934563, -0.8296566605567932, -0.0072744498029351234, -0.29037854075431824, -0.05049676075577736, -3.358438491821289, -0.005506347864866257, -1.6744741201400757, -0.09105829894542694, -5.9602869441732764e-05, -1.532206416130066, -0.026752380654215813, -7.152555099310121e-07, -7.152555099310121e-07, -0.0002618685248307884, -0.12218893319368362, -3.557382583618164, -0.11938350647687912, -0.8747098445892334, -0.1838943213224411, -0.005090964958071709, -0.001128632458858192, -0.5934969186782837, -0.09195718914270401, -5.8410845667822286e-05, -0.0020776845049113035, -0.06854402273893356, -1.2155404090881348, -0.00011228884250158444, -5.006777428206988e-06, -1.5497195136049413e-06, -0.0001299296854995191, -8.4638240878121e-06, -2.288792165927589e-05, -0.00022015532886143774, -0.055249541997909546, -5.960462772236497e-07, -4.994744449504651e-05, -1.7881377516459906e-06, -3.576278118089249e-07, -1.4305104514278355e-06, -5.23315102327615e-05, -0.0008870004676282406, -0.01428602822124958, -0.02520906738936901, -0.7248730063438416, -1.2031619548797607, -0.18739160895347595, -1.2266368865966797, -0.15015101432800293, -0.8096828460693359, -0.07305177301168442, -0.17598186433315277, -2.8960916996002197, -0.13409090042114258, -0.043707992881536484, -0.00021669900161214173, -2.720201253890991, -0.07030653953552246, -0.0029338435269892216, -0.0012299600057303905, -0.00255555915646255, -2.634490556374658e-05, 0.0, -0.00033146608620882034, -0.012955070473253727, -0.08889713883399963, -0.004397721495479345, -0.008223365060985088, -0.03224789723753929, -0.0005063920398242772, -1.5273950099945068, -0.35376572608947754, -0.0019010106334462762, -0.0017779747722670436, -0.011432021856307983, -2.7418097943154862e-06, -5.960462772236497e-07, -2.145764938177308e-06, -7.879423355916515e-05, -0.0003097769513260573, -0.0003323002893012017, -0.0001461399078834802, -0.005167698487639427, -0.00699073588475585, -1.7762025890988298e-05, -9.536738616588991e-07, -0.0026027634739875793, -0.3737785816192627, -0.002828646684065461, -0.472960501909256, -0.8453110456466675, -5.900685573578812e-05, -0.06378201395273209, -4.446407547220588e-05, -2.9802276912960224e-06, -0.0007886160165071487, -0.07031998038291931, -6.55629628454335e-05, -0.00041976699139922857, -0.028501883149147034, -0.0022998806089162827, -0.000519617460668087, -0.001994050806388259, -0.34256529808044434, -0.43295010924339294, -0.0007359656738117337, -0.00013660451804753393, -0.0004583738627843559, -0.0032087289728224277, -0.00029595286468975246, -1.5275486707687378, -0.028550194576382637, -0.024699917063117027, -0.013410485349595547, -0.9885959625244141, -0.00018130090029444546, -1.1706193685531616, -0.6128286123275757, -0.0038756034336984158, -0.6916521787643433, -1.0502333641052246, -0.02880944311618805, -0.22317826747894287, -0.06379644572734833, -0.07133549451828003, -0.00034028460504487157, -0.016903962939977646, -0.07265731692314148, -0.02210303768515587, -0.04517495632171631, -1.9550132492440753e-05, -0.05909544229507446, -2.3841855067985307e-07, -0.0003091811086051166, -0.12008393555879593, -6.556489552167477e-06, -1.5497195136049413e-06, -0.00011085849109804258, -0.0005266471416689456, -0.01924450695514679, -0.7395853400230408, -0.010622388683259487, -0.17033256590366364, -0.0005660838796757162, -0.3215014338493347, -8.940656698541716e-06, -0.00012313561455812305, -3.933898824470816e-06, -0.0013634203933179379], "finish_reason": "length"}], "metrics": {"energy": 858.8431455411907, "energy_per_token": 3.354856037270276, "time": 21.654745, "time_per_token": 0.08458884765625}}
{"outputs": [{"text": "dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(\"The specified directory does not exist or is not a directory.\")\n\n    predicates = list(set(predicates))\n    if len(predicates) == 0:\n        raise ValueError(\"No valid predicates were provided.\")\n\n    conditions = {\n        \"is_file\": lambda x: x.is_file(),\n        \"is_dir\": lambda x: x.is_dir(),\n        \"has_special_chars\": lambda x: bool(re.search(r\"[^a-zA-Z0-9_]\", x.stem)),\n        \"has_numbers\": lambda x: bool(re.search(r\"\\d\", x.stem)),\n    }\n\n    result = {}\n    for item in sorted(dir_path.iterdir()):\n        item_name = item.name\n        item_conditions = {}\n\n        for condition in predicates:\n            if condition in conditions:\n                item_conditions[condition] =", "tokens": ["dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "    ", "if", " len", "(", "pred", "icates", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " were", " provided", ".", "\"", ")", "\n", "\n", "    ", "conditions", " =", " {", "\n", "        ", "\"", "is", "_", "file", "\":", " lambda", " x", ":", " x", ".", "is", "_", "file", "()", ",", "\n", "        ", "\"", "is", "_", "dir", "\":", " lambda", " x", ":", " x", ".", "is", "_", "dir", "()", ",", "\n", "        ", "\"", "has", "_", "special", "_", "chars", "\":", " lambda", " x", ":", " bool", "(", "re", ".", "search", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", "]\"", ",", " x", ".", "stem", "))", ",", "\n", "        ", "\"", "has", "_", "numbers", "\":", " lambda", " x", ":", " bool", "(", "re", ".", "search", "(", "r", "\"", "\\", "d", "\"", ",", " x", ".", "stem", "))", ",", "\n", "    ", "}", "\n", "\n", "    ", "result", " =", " {}", "\n", "    ", "for", " item", " in", " sorted", "(", "dir", "_", "path", ".", "iter", "dir", "()", "):", "\n", "        ", "item", "_", "name", " =", " item", ".", "name", "\n", "        ", "item", "_", "conditions", " =", " {}", "\n", "\n", "        ", "for", " condition", " in", " pred", "icates", ":", "\n", "            ", "if", " condition", " in", " conditions", ":", "\n", "                ", "item", "_", "conditions", "[", "condition", "]", " ="], "logprobs": [-3.4967470169067383, -0.024033289402723312, -0.07836092263460159, -0.06354409456253052, -0.06103125214576721, -0.00294263893738389, -0.001680391957052052, -8.583032467868179e-06, -2.3841855067985307e-07, -0.0019882211927324533, -0.06491825729608536, -0.38783296942710876, -0.15375104546546936, -0.019485367462038994, -0.27973848581314087, -4.482168878894299e-05, -2.3841855067985307e-07, -0.0010411086259409785, -0.4476800858974457, -6.067568756407127e-05, -0.0013706822646781802, -0.02305278740823269, -0.009408893994987011, -0.0005119920242577791, -0.012967190705239773, -0.04759083688259125, -3.111314072157256e-05, -6.079655122448457e-06, -0.049518391489982605, -1.1012330055236816, -0.9617489576339722, -0.16358599066734314, -0.12620361149311066, -0.06272923946380615, -0.00019762947340495884, -0.0005584587925113738, -0.04080330207943916, -0.0035124055575579405, -0.001487578614614904, -0.001618624315597117, -0.0018092705868184566, -0.19624745845794678, -0.0019045800436288118, -0.0006787856691516936, -0.0011370867723599076, -0.09979140758514404, -0.00041869457345455885, -1.480980634689331, -0.04298769310116768, -0.0545782595872879, -0.5912762880325317, -0.0023478104267269373, -0.07323038578033447, -0.014589179307222366, -0.011054934933781624, -0.001065401709638536, -0.004032695200294256, -0.4317884147167206, -0.20589996874332428, -0.13471828401088715, -2.1723785400390625, -0.0002426806604489684, -0.005052180495113134, -0.0006517431465908885, -0.00019369633810129017, -0.04003933072090149, -0.00018499570433050394, -0.00038652101648040116, -0.002836730098351836, -0.004472135100513697, -0.00026067672297358513, -0.004465963691473007, -0.000567275274079293, -2.3841855067985307e-07, -0.007746062707155943, -0.007358471397310495, -0.307238906621933, -0.02491900324821472, -0.021806703880429268, -3.71926071238704e-05, -1.8153738975524902, -0.021592650562524796, -0.07507889717817307, -0.04575510323047638, -0.00016532962035853416, -0.0011149387573823333, -0.034251075237989426, -0.0002261144545627758, -2.6003239154815674, -0.17122776806354523, -0.2629847526550293, -0.04204435274004936, -0.012872223742306232, -1.2711122035980225, -0.00801596324890852, -0.0002464944263920188, -0.0035957936197519302, -0.0271015502512455, -0.1303829550743103, -1.0990617275238037, -0.010021254420280457, -0.21262779831886292, -0.006786748301237822, -0.02123863250017166, -0.0002236116270069033, -0.0003840185818262398, -0.011420000344514847, -0.006638733670115471, -0.026072602719068527, -0.0003773453936446458, -0.0013007997767999768, -0.0013169910525903106, -7.867782187531702e-06, -0.0012363893911242485, -8.356221951544285e-05, -0.000532842765096575, -0.00017677174764685333, -7.438383181579411e-05, -0.0021387101151049137, -0.00014494798961095512, -3.0397906812140718e-05, -1.1920928244535389e-07, -0.0025638823863118887, -0.0005561950383707881, -0.00019453064305707812, -0.0005907459417358041, -0.0015212640864774585, -0.0020035686902701855, -0.002400732832029462, -6.9141146923357155e-06, -0.02492888644337654, -8.785339014139026e-05, -0.00020525732543319464, -8.785339014139026e-05, -0.010362865403294563, -0.001328777172602713, -0.000783732277341187, -0.9530647397041321, -0.0010033579310402274, -0.032215576618909836, -0.00015496007108595222, -0.023154130205512047, -0.01784507744014263, -0.06018145754933357, -0.2772996425628662, -0.09207385778427124, -0.52942955493927, -0.14868487417697906, -3.099436753473128e-06, -5.8412379075889476e-06, -0.002373499097302556, -5.960462772236497e-07, -0.0016931259306147695, -0.027389127761125565, -3.015949550899677e-05, -4.684815212385729e-05, -0.010343752801418304, -0.18537306785583496, -0.0002859421947505325, -0.1225767731666565, -0.014774668030440807, -0.40095800161361694, -0.018293706700205803, -0.011709058657288551, -0.04370582476258278, -0.0009261847590096295, -0.00579783134162426, -0.0007871866691857576, -8.106198947643861e-06, -0.0020674539264291525, -3.0278701160568744e-05, -0.00015829740732442588, -0.00023624490131624043, -3.957670196541585e-05, -0.21574454009532928, -6.222531374078244e-05, -0.0020060669630765915, -2.455681169521995e-05, -0.004908535163849592, -0.000120751719805412, -0.00024148885859176517, -0.00934547558426857, -0.12037208676338196, -2.1576648578047752e-05, -0.012283979915082455, -8.4638240878121e-06, -0.0023743314668536186, -0.017283890396356583, -0.17790110409259796, -0.00024589852546341717, -0.33138540387153625, -0.0022858462762087584, -0.007617828901857138, -2.932505594799295e-05, -0.005078985821455717, -0.25744253396987915, -0.0003046525234822184, -2.4106197357177734, -0.03506413847208023, -0.05625995993614197, -0.0020300988107919693, -0.14130568504333496, -0.05866936221718788, -0.3255661129951477, -0.02226720191538334, -2.9381327629089355, -0.006045744754374027, -0.167074516415596, -0.00016807096835691482, -5.960446742392378e-06, -1.2159273865108844e-05, -0.059972431510686874, -5.483612312673358e-06, -0.00030417583184316754, -0.2517431378364563, -0.00875468086451292, -0.0009835887467488647, -0.29389408230781555, -0.02001120336353779, -1.2170209884643555, -0.006462627090513706, -0.013199450448155403, -0.00046302087139338255, -0.041438259184360504, -0.023305309936404228, -0.04139171168208122, -0.6259418725967407, -0.007152901962399483, -1.646126627922058, -0.0032739629969000816, -0.2993418276309967, -0.0009041512385010719, -1.6180692911148071, -0.00017069313616957515, -0.04896029084920883, -2.588677167892456, -0.09590119868516922, -0.07904000580310822, -1.1324817933200393e-05, -9.321732068201527e-05, -0.0009146321099251509, -0.0005657264264300466, -0.07342834770679474, -0.021966485306620598, -0.2521766126155853, -0.0010239601833745837, -0.041843850165605545, -0.0030685027595609426, -0.0001062098381225951, -0.06294284015893936, -8.22540732769994e-06, -0.007128874771296978, -0.0027965507470071316, -0.0005395148764364421, -0.0006420934805646539, -1.07287787614041e-05], "finish_reason": "length"}], "metrics": {"energy": 921.2061500263218, "energy_per_token": 3.5984615235403195, "time": 22.911219, "time_per_token": 0.08949694921875}}
{"outputs": [{"text": "if not os.path.exists(dir_path):\n        raise FileNotFoundError(f\"Directory not found: {dir_path}\")\n    if not os.path.isdir(dir_path):\n        raise ValueError(f\"{dir_path} is not a directory\")\n\n    predicates = set(predicates)\n    if not predicates:\n        raise ValueError(\"No valid predicates provided\")\n\n    results = {}\n    for item in os.listdir(dir_path):\n        item_name = item.split(\".\")[0]  # Remove file extension for validation\n        item_path = os.path.join(dir_path, item)\n\n        item_results = {}\n        for predicate in predicates:\n            if predicate == \"is_file\":\n                item_results[\"is_file\"] = os.path.isfile(item_path)\n            elif predicate == \"is_dir\":\n                item_results[\"is_dir\"] = os.path.isdir(item_path)\n            elif predicate == \"has_special_chars\":\n                ", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "dir", "_", "path", "}\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "dir", "_", "path", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "name", " =", " item", ".", "split", "(", "\"", ".", "\"", ")[", "0", "]", "  ", "#", " Remove", " file", " extension", " for", " validation", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "\n", "        ", "item", "_", "results", " =", " {}", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " \"", "is", "_", "file", "\":", "\n", "                ", "item", "_", "results", "[", "\"", "is", "_", "file", "\"", "]", " =", " os", ".", "path", ".", "is", "file", "(", "item", "_", "path", ")", "\n", "            ", "elif", " predicate", " ==", " \"", "is", "_", "dir", "\":", "\n", "                ", "item", "_", "results", "[", "\"", "is", "_", "dir", "\"", "]", " =", " os", ".", "path", ".", "is", "dir", "(", "item", "_", "path", ")", "\n", "            ", "elif", " predicate", " ==", " \"", "has", "_", "special", "_", "chars", "\":", "\n", "                "], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.6358801126480103, -0.0004609952447935939, -0.002633201191201806, -6.151010165922344e-05, -7.152555099310121e-07, -0.3055311143398285, -0.014856652356684208, -0.0007948100101202726, -0.010104455053806305, -0.01318803895264864, -2.47952248173533e-05, -3.3378546504536644e-06, -0.04132983088493347, -0.25775444507598877, -0.08365606516599655, -0.5054192543029785, -2.532539129257202, -0.006925862282514572, -0.06406985968351364, -0.030923310667276382, -0.0020737587474286556, -2.4318398573086597e-05, -5.483612312673358e-06, -0.013583374209702015, -0.00022098960471339524, -0.0007418026216328144, -0.4042976200580597, -0.048452530056238174, -0.034156035631895065, -0.008024122565984726, -5.125986263010418e-06, -0.0013324677711352706, -1.3470558769768104e-05, -2.6702524337451905e-05, -2.8729025871143676e-05, -5.4596363042946905e-05, -7.724463648628443e-05, -7.867782187531702e-06, -1.0728830375228426e-06, -0.0009419057168997824, -0.0004992430913262069, -4.005352093372494e-05, -0.0006043276516720653, -1.3967459201812744, -9.536697689327411e-06, -0.0010528980055823922, -0.03359459340572357, -0.0008120815036818385, -2.5041584968566895, -0.000990377040579915, -6.437280717364047e-06, -2.145764938177308e-06, -0.005641846917569637, -0.014102800749242306, -0.000648883986286819, -0.001678963890299201, -0.04117894917726517, -0.36583182215690613, -6.711257447022945e-05, -0.001046467456035316, -0.29231977462768555, -0.00037901371251791716, -1.7308915853500366, -0.04331708699464798, -0.07323980331420898, -1.0219697952270508, -0.013970794156193733, -0.019942844286561012, -0.0005448763840831816, -0.0027051304932683706, -0.15466304123401642, -0.18803918361663818, -0.21129007637500763, -0.07618746906518936, -0.03042156994342804, -1.1801649634435307e-05, -0.005386007949709892, -0.007288177963346243, -0.00013636612857226282, -0.003421407425776124, -0.00035124807618558407, 0.0, -0.006006405223160982, -0.03067709505558014, -0.3047855496406555, -0.10720764845609665, -0.022381329908967018, -2.9682672902708873e-05, -0.11186975985765457, -0.18547259271144867, -5.721882189391181e-05, -0.0006854568491689861, -0.0328504703938961, -0.0001250427303602919, -1.6117898225784302, -0.011046327650547028, -0.043589767068624496, -0.005115159787237644, -0.2713930606842041, -0.13356032967567444, -0.27460870146751404, -0.050326623022556305, -0.023222152143716812, -1.3947389561508317e-05, -0.022904014214873314, 0.0, -8.332382276421413e-05, -0.0026915771886706352, -9.536738616588991e-07, -4.768370445162873e-07, -0.00017176583060063422, -0.002940974896773696, -0.002852183301001787, -0.4521603286266327, -0.030165746808052063, -1.8690507411956787, -1.1562155485153198, -1.9903104305267334, -0.20850561559200287, -0.10664665699005127, -0.1945737600326538, -0.009510212577879429, -0.0022872735280543566, -2.8013790142722428e-05, -0.01647159457206726, -0.0025925380177795887, -0.00011622230522334576, -0.6283888816833496, -0.00011562632425921038, -1.1392604112625122, -0.33598989248275757, -0.044396188110113144, -1.309045672416687, -3.188716411590576, -0.07740845531225204, -0.21629883348941803, -0.2958531379699707, -0.0008349508279934525, -0.4418109357357025, -0.0005274811992421746, -0.17756646871566772, -1.823885577323381e-05, -0.00015066919149830937, -4.887569048150908e-06, -0.002093982184305787, -2.169585604860913e-05, -0.0022820401936769485, -5.722029527532868e-06, -1.1920928244535389e-07, -3.4450891689630225e-05, -0.00020704510097857565, -0.0005078217945992947, -0.021160205826163292, -1.0406277179718018, -0.00012265883560758084, -0.8441503643989563, -0.0002978596603497863, -0.6715131998062134, -0.0010153858456760645, -0.07984960824251175, -0.009301423095166683, -0.100120410323143, -0.23641625046730042, -0.05309202894568443, -0.002589327748864889, -0.00802045688033104, -3.814689989667386e-06, -9.297892393078655e-05, -0.0005722792120650411, -0.0015074567636474967, -0.09722904115915298, -0.025907669216394424, -0.02196357026696205, -0.05221395939588547, -0.0039507681503891945, -6.627816765103489e-05, -0.00711573613807559, -0.00564777385443449, -0.001606484642252326, -8.940297266235575e-05, -0.044015590101480484, -4.6491513785440475e-06, -0.00015496007108595222, -0.021217510104179382, -1.2097532749176025, -5.352353764465079e-05, -8.415821503149346e-05, -8.165503095369786e-05, -1.3232143828645349e-05, -2.9205850296420977e-05, -1.2874520507466514e-05, -0.0037594609893858433, -8.106198947643861e-06, -4.768360213347478e-06, -2.264974000354414e-06, -1.2516897186287679e-05, -7.83174327807501e-05, -2.753696753643453e-05, -0.0014386551920324564, -0.0009837078396230936, -0.0004904259694740176, -2.4676019165781327e-05, -0.004119363613426685, -0.01082087866961956, -0.009789198637008667, -0.00019369633810129017, -6.878139538457617e-05, -8.892617915989831e-05, -0.0006854568491689861, -5.006777428206988e-06, -0.0004440752090886235, -0.00026592056383378804, -7.855583680793643e-05, -1.6927575416048057e-05, -0.0013240152038633823, -5.960462772236497e-07, -9.536738616588991e-07, -0.00014649749209638685, -0.0006643710657954216, -1.0490362910786644e-05, -3.3378546504536644e-06, -3.111314072157256e-05, -9.536738616588991e-07, -6.794906312279636e-06, -5.602820692729438e-06, -0.0005021026590839028, -2.9802276912960224e-06, -4.410646579344757e-05, -5.125986263010418e-06, -2.6225699912174605e-05, -9.119095193454996e-05, -2.038458114839159e-05, -0.0004228651523590088, -0.00011550712952157483, -4.351044481154531e-05, -9.775113539944869e-06, -0.0002775999018922448, -0.0010182439582422376, -0.0015182883944362402, -0.0010064542293548584, -0.00045265440712682903, -0.00022492263815365732, -0.000805053801741451, -3.4570634852570947e-06, -0.013720016926527023, -9.894321920000948e-06, -0.00013767725613433868, -0.0013615157222375274, -0.00024053541710600257, -0.0001821352052502334], "finish_reason": "length"}], "metrics": {"energy": 896.079117631912, "energy_per_token": 3.5003090532496564, "time": 21.639608, "time_per_token": 0.08452971875}}
{"outputs": [{"text": "if not os.path.isdir(dir_path):\n        raise FileNotFoundError(\"The specified directory does not exist or is not a directory.\")\n\n    # Deduplicate and validate predicates\n    valid_predicates = set(predicates)\n\n    if len(valid_predicates) == 0:\n        raise ValueError(\"At least one predicate must be provided.\")\n\n    results = {}\n\n    for item in os.listdir(dir_path):\n        item_name = Path(item).stem\n        item_path = os.path.join(dir_path, item)\n\n        # Check whether the item is a file\n        is_file = os.path.isfile(item_path)\n\n        # Check whether the item is a directory\n        is_dir = os.path.isdir(item_path)\n\n        # Check whether the item name contains a character that is not a letter, digit, or underscore, ignoring file extensions\n        has_special_chars = re.search(r\"[^\\w\\.]\", item_name) is not None\n\n        # Check", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " and", " validate", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "\n", "    ", "if", " len", "(", "valid", "_", "pred", "icates", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " predicate", " must", " be", " provided", ".", "\"", ")", "\n", "\n", "    ", "results", " =", " {}", "\n", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "name", " =", " Path", "(", "item", ")", ".", "stem", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", ")", "\n", "\n", "        ", "#", " Check", " whether", " the", " item", " is", " a", " file", "\n", "        ", "is", "_", "file", " =", " os", ".", "path", ".", "is", "file", "(", "item", "_", "path", ")", "\n", "\n", "        ", "#", " Check", " whether", " the", " item", " is", " a", " directory", "\n", "        ", "is", "_", "dir", " =", " os", ".", "path", ".", "is", "dir", "(", "item", "_", "path", ")", "\n", "\n", "        ", "#", " Check", " whether", " the", " item", " name", " contains", " a", " character", " that", " is", " not", " a", " letter", ",", " digit", ",", " or", " unders", "core", ",", " ignoring", " file", " extensions", "\n", "        ", "has", "_", "special", "_", "chars", " =", " re", ".", "search", "(", "r", "\"", "[", "^\\", "w", "\\", ".", "]\"", ",", " item", "_", "name", ")", " is", " not", " None", "\n", "\n", "        ", "#", " Check"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.7547804117202759, -0.001002047909423709, -0.0003262225945945829, -0.0032431883737444878, -4.470248313737102e-05, -3.576278118089249e-07, -0.0235914196819067, -0.019509684294462204, -0.0006622266955673695, -0.011505677364766598, -0.060988299548625946, -2.169585604860913e-05, -4.410734163684538e-06, -0.04982250556349754, -0.932490885257721, -1.3155035972595215, -0.1581648737192154, -0.1685703694820404, -0.06385818123817444, -0.0002431573811918497, -0.00043049128726124763, -0.05038522928953171, -0.0034319807309657335, -0.0012182918144389987, -0.0012719882652163506, -0.0028305486775934696, -0.18683727085590363, -0.002206868724897504, -0.0007725353352725506, -0.001791778369806707, -0.1529601663351059, -0.000503770774230361, -1.6090561151504517, -0.6253463625907898, -0.15607191622257233, -1.276160478591919, -1.0527405738830566, -0.11675731092691422, -0.00018225439998786896, -0.1064843162894249, -0.00042000532266683877, -0.23786082863807678, -0.0493563711643219, -0.02626793459057808, -0.018118353560566902, -0.008657422848045826, -1.3579950332641602, -0.425618976354599, -0.13684844970703125, -0.006865601986646652, -0.003058400936424732, -0.22807511687278748, -2.6166577339172363, -0.0001225396408699453, -0.865100622177124, -2.405035972595215, -0.00028761065914295614, -0.011579328216612339, -3.814689989667386e-06, -8.344646857949556e-07, -8.4638240878121e-06, -0.0002967870968859643, -0.06490463018417358, -0.0004104725376237184, -0.0010124086402356625, -0.001684914343059063, -0.004382173530757427, -0.00031573555315844715, -0.006445571314543486, -0.00041392818093299866, 0.0, -0.005128324497491121, -0.010587356984615326, -1.5153683423995972, -0.0010089550632983446, -0.003983183763921261, -1.1176575422286987, -0.42645296454429626, -0.0006152882124297321, -0.06465647369623184, -0.05697223171591759, -0.012819499708712101, -0.00018165845540352166, -0.0015488782664760947, -0.01337555143982172, -0.00023338454775512218, -2.4620237350463867, -0.0163447093218565, -0.04532603546977043, -0.016141800209879875, -0.5129780769348145, -0.00014077626110520214, -0.23281504213809967, -0.21782135963439941, -0.043424271047115326, -0.015428476966917515, -1.1444026313256472e-05, -0.021113285794854164, 0.0, -0.00013672371278516948, -0.002477435627952218, -1.9073468138230965e-06, -1.0728830375228426e-06, -0.0001573438785271719, -0.004353569354861975, -0.013852526433765888, -0.3535819947719574, -0.013367082923650742, -1.8283495903015137, -0.953545093536377, -1.4138836860656738, -0.0008950994815677404, -0.006365500390529633, -0.002814263105392456, -0.00992636103183031, -0.05966442823410034, -0.6911088824272156, -0.4258398413658142, -0.23276470601558685, -0.0016091029392555356, -1.166951060295105, -0.0007636015070602298, -0.027429258450865746, -7.986990567587782e-06, -9.202533692587167e-05, -4.887569048150908e-06, -0.0017279945313930511, -3.576214658096433e-05, -0.0007284610182978213, -1.0728830375228426e-06, -5.960462772236497e-07, -6.90197994117625e-05, -0.001191501971334219, -0.003939131740480661, -0.008904628455638885, -0.5592033267021179, -0.0002983363519888371, -1.9645373821258545, -1.0200542211532593, -3.1528306007385254, -0.07385782152414322, -0.008936174213886261, -0.00380114559084177, -0.0020252210088074207, -0.03542215749621391, -0.5022792816162109, -0.0002150304353563115, -0.554416835308075, -0.0012285312404856086, -0.001699790358543396, -0.01956614851951599, -0.014491664245724678, -9.536697689327411e-06, -8.583032467868179e-06, -5.245195097813848e-06, -2.8729025871143676e-05, -0.00031668893643654883, -7.271502545336261e-05, -0.000945121340919286, -0.0020165364257991314, -0.00032181330607272685, -2.706014311115723e-05, -0.015342547558248043, -0.3402799069881439, -0.00018106251081917435, -0.07999201864004135, -0.029152339324355125, -0.053189922124147415, -0.0017184742027893662, -0.0015901790466159582, -0.02676607482135296, -0.0005660838796757162, -0.0033429949544370174, -0.0025196492206305265, -8.082063141046092e-05, -0.004920279141515493, -2.4437606043647975e-05, -0.001840565470047295, -0.00012933371181134135, -0.017210541293025017, -1.1920922133867862e-06, -9.536738616588991e-07, -8.344646857949556e-07, -3.85038583772257e-05, -8.165503095369786e-05, -2.0861407392658293e-05, -0.00018845213344320655, -0.0005594118847511709, -0.0001438752660760656, -0.0001250427303602919, -0.006113637704402208, -0.0011713793501257896, -9.786603914108127e-05, -0.11612735688686371, -0.042688120156526566, -0.2601117491722107, -0.011020153760910034, -0.02773900516331196, -0.02625899389386177, -0.026280127465724945, -0.09979400038719177, -0.18083833158016205, -0.02106776461005211, -0.029140759259462357, -0.006334228441119194, -0.011942671611905098, -0.004392143338918686, -0.003362479852512479, -0.01527938712388277, -0.016741495579481125, -0.00427143182605505, -0.0020327160600572824, -3.933898824470816e-06, -0.7682424187660217, -0.3010985851287842, -0.0056007131934165955, -0.007140829227864742, -0.00394993694499135, -0.0014300844632089138, -0.10130457580089569, -2.5510462364763953e-05, -0.004181333351880312, -0.00022825974156148732, -0.0008274468709714711, -0.0011749514378607273, -1.33034348487854, -0.00016258825780823827, -0.02333524078130722, -0.027158284559845924, -0.017703022807836533, -0.971592366695404, -0.0915302038192749, -0.7754358053207397, -0.0005942009738646448, -0.7598010897636414, -0.24452520906925201, -0.24927614629268646, -0.00017021637177094817, -0.0832216739654541, -0.0026301098987460136, -4.482168878894299e-05, -0.037929173558950424, -0.08546965569257736, -0.001293061301112175, -1.1324817933200393e-05, -0.025840293616056442, -0.004684782586991787, -4.911301948595792e-05, -0.00044109628652222455, -0.0010925520909950137], "finish_reason": "length"}], "metrics": {"energy": 864.2870808687209, "energy_per_token": 3.376121409643441, "time": 21.648582, "time_per_token": 0.0845647734375}}
{"outputs": [{"text": "# Check if dir_path exists and is a directory\n    dir_path_obj = Path(dir_path)\n    if not dir_path_obj.is_dir():\n        raise FileNotFoundError(f\"Specified directory path '{dir_path_obj}' does not exist or is not a directory.\")\n\n    # Deduplicate and filter out invalid predicates\n    valid_predicates = []\n    for predicate in set(predicates):\n        if predicate in ('is_file', 'is_dir', 'has_special_chars', 'has_numbers'):\n            valid_predicates.append(predicate)\n    if not valid_predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Create the result dictionary\n    result = {}\n\n    # Check each item in the directory\n    for item in os.scandir(dir_path):\n        item_name = item.name\n        item_info = {}\n        for predicate in valid_predicates:\n            if predicate == 'is_file':\n                item_info['is_file'] = item.is", "tokens": ["#", " Check", " if", " dir", "_", "path", " exists", " and", " is", " a", " directory", "\n", "    ", "dir", "_", "path", "_", "obj", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", "_", "obj", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Spec", "ified", " directory", " path", " '", "{", "dir", "_", "path", "_", "obj", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " and", " filter", " out", " invalid", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " []", "\n", "    ", "for", " predicate", " in", " set", "(", "pred", "icates", "):", "\n", "        ", "if", " predicate", " in", " ('", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "')", ":", "\n", "            ", "valid", "_", "pred", "icates", ".", "append", "(", "pred", "icate", ")", "\n", "    ", "if", " not", " valid", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " result", " dictionary", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Check", " each", " item", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "sc", "and", "ir", "(", "dir", "_", "path", "):", "\n", "        ", "item", "_", "name", " =", " item", ".", "name", "\n", "        ", "item", "_", "info", " =", " {}", "\n", "        ", "for", " predicate", " in", " valid", "_", "pred", "icates", ":", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "item", "_", "info", "['", "is", "_", "file", "']", " =", " item", ".", "is"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -2.4354400634765625, -0.0518282875418663, -0.00071190285962075, -0.80225670337677, -0.07633326947689056, -0.027350271120667458, -0.025973878800868988, -0.023631587624549866, -0.07005349546670914, -0.0007915939204394817, -1.4500094652175903, -0.010678177699446678, -0.016941703855991364, -1.1041004657745361, -0.0839105099439621, -0.004104998894035816, -0.0008466235012747347, -0.00051115796668455, -0.001685152412392199, -4.529942543740617e-06, 0.0, -0.0010482537327334285, -0.021326391026377678, -0.04971815645694733, -0.009479156695306301, -0.009927069768309593, -0.11258580535650253, -2.0146166207268834e-05, -7.152555099310121e-07, -0.001192097319290042, -7.510157047363464e-06, -0.0005077026435174048, -0.7773181200027466, -1.5616295058862306e-05, -0.000364713923772797, -0.014261583797633648, -0.004246979020535946, -0.0003887851198669523, -0.011992968618869781, -0.026391012594103813, -3.4927710657939315e-05, -2.3841830625315197e-06, -0.021655414253473282, -0.4155366122722626, -0.035493262112140656, -3.672421455383301, -0.0010623055277392268, -0.5520917177200317, -3.69635009765625, -0.9931612610816956, -0.00027378625236451626, -0.005843816325068474, -8.535020606359467e-05, -8.940656698541716e-06, -2.7015607357025146, -0.0010247938334941864, -0.1869490146636963, -0.14998778700828552, -0.000745018885936588, -0.0025814801920205355, -0.02436782233417034, -0.003154304577037692, -0.0009700122172944248, -0.0005796659388579428, -0.0035582580603659153, -0.26382312178611755, -0.0033235095907002687, -0.0005987281911075115, -0.0008794969180598855, -0.02214629575610161, -0.00046266341814771295, -0.16538436710834503, -1.4334914684295654, -0.039219874888658524, -1.171072244644165, -2.421654462814331, -1.7112008333206177, -0.051326170563697815, -0.11279817670583725, -6.5205356804654e-05, -0.05537203699350357, -0.00024387246230617166, -0.2740882337093353, -0.012946361675858498, -0.027769962325692177, -0.01787891797721386, -0.010709078051149845, -2.4330263137817383, -0.01912943460047245, -0.00652954401448369, -0.2920379042625427, -0.1643293797969818, -0.01114087924361229, -0.9738077521324158, -0.001025627483613789, -0.0009983561467379332, -5.781483559985645e-05, -0.0016336203552782536, -0.020336570218205452, -0.0011069605825468898, -0.07841592282056808, -0.048022229224443436, -0.16336338222026825, -2.1181254386901855, -0.0031257839873433113, -6.210611172718927e-05, -0.0035365200601518154, -9.48860906646587e-05, -7.390703103737906e-05, -0.0015141224721446633, -0.0017648849170655012, -7.986990567587782e-06, -0.00047946401173248887, -0.0034143980592489243, -6.770858453819528e-05, -0.0012299600057303905, -0.0009678685455583036, -5.125986263010418e-06, -0.013180038891732693, -5.006664650863968e-05, -0.0004618293314706534, -0.0007965967524796724, -4.100715523236431e-05, -0.000662703241687268, -0.0002535260282456875, -5.364403477869928e-06, -0.000520570669323206, -0.002684087259694934, -0.0008122005965560675, -0.0016056514577940106, -0.00026544384309090674, -0.0011141052236780524, -2.622600959512056e-06, -1.1920928244535389e-07, -5.400034933700226e-05, -0.00015793983766343445, -1.8358061424805783e-05, -0.0004477690381463617, -0.00044371772673912346, -4.6491513785440475e-06, -0.0004987664869986475, -0.0003079893649555743, -0.41265225410461426, -0.02209744043648243, -0.046114325523376465, -0.0017713108099997044, -1.311301275563892e-06, -8.344646857949556e-07, -4.124556289752945e-05, -8.928377064876258e-05, -0.011300958693027496, -0.0002818902430590242, -0.0057494742795825005, -0.00026222606538794935, 0.0, -0.03952919691801071, -0.11393807083368301, -0.2470916509628296, -0.0014036574866622686, -0.03368207812309265, -3.71926071238704e-05, -0.1615855097770691, -0.11519172787666321, -0.4919523298740387, -0.00043418517452664673, -0.0009133219718933105, -0.00856157299131155, -0.0002299282787134871, -0.32364770770072937, -2.404362678527832, -1.863267183303833, -0.7347362637519836, -0.08844974637031555, -0.48872801661491394, -0.00016246906307060272, -0.20020514726638794, -0.21550537645816803, -0.049911532551050186, -0.0007724162423983216, -0.3657771646976471, -0.0001399419124936685, -0.06090361624956131, -3.244933843612671, -0.9433093070983887, -0.3117370307445526, -0.09432938694953918, -0.017148787155747414, -0.11103415489196777, -0.14132751524448395, -0.00016962042718660086, -0.02942694164812565, -0.07821177691221237, -0.05018582195043564, -0.03568802773952484, -4.053033626405522e-05, -1.966407060623169, -1.2397689715726301e-05, -1.311301275563892e-06, -0.00015817821258679032, -0.002429868560284376, -7.271740287251305e-06, -1.3708974620385561e-05, -0.30662962794303894, -0.012775599956512451, -0.01309638749808073, -0.3746075928211212, -0.003321371041238308, -0.20726284384727478, -0.014060014858841896, -0.11695469170808792, -2.7894584491150454e-05, -0.000758955895435065, -0.10310937464237213, -0.2715773284435272, -0.16472163796424866, -0.0007917130133137107, -2.777751922607422, -0.0032831120770424604, -0.13437847793102264, -0.053830280900001526, -1.4969724416732788, -0.2307802438735962, -0.011744875460863113, -0.0006741396500729024, -0.0028055852744728327, -3.576278118089249e-07, -1.1920928244535389e-07, -3.576272320060525e-06, -1.0132738680113107e-05, -0.0007950482540763915, -0.0011556621175259352, -0.0677049309015274, -0.0023743314668536186, -0.006825583986938, -0.028352992609143257, -0.0006180283380672336, -6.318072337307967e-06, -0.0008505540899932384, -0.004522097297012806, -0.001593392575159669, -0.00016509123088326305, -0.02769389934837818, -1.7046782886609435e-05, -0.0002134810492862016, -0.38932275772094727, -5.352353764465079e-05, -2.288792165927589e-05, -6.913899414939806e-05, -2.777537883957848e-05, -6.341733387671411e-05, -0.00435095839202404, -0.003230830654501915, -6.0794889577664435e-05], "finish_reason": "length"}], "metrics": {"energy": 863.8590373735433, "energy_per_token": 3.3744493647404035, "time": 21.63777, "time_per_token": 0.0845225390625}}
{"outputs": [{"text": "# Check if directory exists\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(\"The specified directory does not exist or is not a directory\")\n\n    # Check if any valid predicates are provided\n    if not any(predicates):\n        raise ValueError(\"No valid predicates provided\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Define the result dictionary\n    result = {}\n\n    # Define regular expressions for each condition\n    has_special_chars_re = re.compile(r'[^A-Za-z0-9_]+')\n    has_numbers_re = re.compile(r'\\d+')\n\n    # Iterate through each item in the directory\n    for item in os.listdir(dir_path):\n        # Initialize the dictionary for each item\n        item_dict = {'is_file': False, 'is_dir': False, 'has_special_chars': False, 'has_numbers': False}\n\n        # Check if the item is a directory\n        if os.path.is", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " any", " valid", " pred", "icates", " are", " provided", "\n", "    ", "if", " not", " any", "(", "pred", "icates", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Define", " the", " result", " dictionary", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Define", " regular", " expressions", " for", " each", " condition", "\n", "    ", "has", "_", "special", "_", "chars", "_", "re", " =", " re", ".", "compile", "(", "r", "'", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "_", "]+", "')", "\n", "    ", "has", "_", "numbers", "_", "re", " =", " re", ".", "compile", "(", "r", "'\\", "d", "+", "')", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " item", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "#", " Initialize", " the", " dictionary", " for", " each", " item", "\n", "        ", "item", "_", "dict", " =", " {'", "is", "_", "file", "':", " False", ",", " '", "is", "_", "dir", "':", " False", ",", " '", "has", "_", "special", "_", "chars", "':", " False", ",", " '", "has", "_", "numbers", "':", " False", "}", "\n", "\n", "        ", "#", " Check", " if", " the", " item", " is", " a", " directory", "\n", "        ", "if", " os", ".", "path", ".", "is"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -1.9685001373291016, -0.22788511216640472, -0.8204598426818848, -0.0007775382255204022, -0.22283852100372314, -0.012888934463262558, -0.47356879711151123, -2.3245540432981215e-05, -0.004669001325964928, -1.0013530300057027e-05, -0.6979060769081116, -0.0005640584276989102, -0.0001472126314183697, -0.0029218385461717844, -6.341733387671411e-05, -1.1920928244535389e-07, -0.004391312599182129, -0.0012756790965795517, -0.00042441420373506844, -0.009882806800305843, -0.022771067917346954, -2.5629668016335927e-05, -2.9802276912960224e-06, -0.029526367783546448, -1.1777423620224, -1.584336757659912, -0.16515225172042847, -0.049714189022779465, -0.0295682642608881, -0.00015662873920518905, -0.0004596845537889749, -0.09111794084310532, -0.003765280358493328, -0.0013306819600984454, -0.0027277187909930944, -0.002725697821006179, -1.9473552703857422, -0.0010000233305618167, -0.0006008726777508855, -0.03321273997426033, -0.0004003438516519964, -0.07293474674224854, -0.7735630869865417, -0.09936515986919403, -1.3617671728134155, -0.08046410977840424, -0.024167582392692566, -6.603976362384856e-05, -0.20854586362838745, -0.055502749979496, -0.01737937517464161, -0.0001823735801735893, -0.7353325486183167, -0.05016269534826279, -0.8113396763801575, -0.08988557755947113, -0.290484219789505, -0.8897626399993896, -0.0027941730804741383, -0.0032153832726180553, -0.00026723151677288115, -0.00289556966163218, -0.00035613393993116915, 0.0, -0.0034511075355112553, -0.004286269191652536, -0.4105011522769928, -0.009800177067518234, -0.02391061931848526, -5.495397272170521e-05, -0.13823124766349792, -0.07493976503610611, -6.544376083184034e-05, -0.00026294111739844084, -0.014774080365896225, -0.0004240567213855684, -0.1741086095571518, -0.6589214205741882, -0.032479070127010345, -0.14716903865337372, -9.440929716220126e-05, -0.09479313343763351, -0.00022659118985757232, -0.17462971806526184, -0.0063621834851801395, -0.0194656103849411, -0.09496660530567169, -0.00013040646445006132, -0.013216156512498856, -0.001976561965420842, -0.0022960747592151165, -0.0013873485149815679, -0.00029869386344216764, -0.006330082193017006, -0.018315359950065613, -0.00021109737281221896, -0.2173374444246292, -1.5619994401931763, -1.551426887512207, -3.469897747039795, -0.07020197063684464, -0.21312640607357025, -0.0001532914029667154, -0.3291366696357727, -0.18369275331497192, -0.07133005559444427, -0.0013036570744588971, -0.01981791853904724, -0.00026890001026913524, -0.04044468700885773, -1.7755438089370728, -3.0449345111846924, -0.6532765626907349, -0.35622575879096985, -1.608974575996399, -0.5017678141593933, -0.0578865222632885, -0.0012961566681042314, -1.3100178241729736, -0.0004994813934899867, -0.08219148218631744, -0.0014261561445891857, -0.016423281282186508, -0.12104309350252151, -1.4681849479675293, -0.002844575559720397, -0.04615689814090729, -7.152555099310121e-07, -1.6212332411669195e-05, -0.00690739369019866, -0.014619842171669006, -1.4489965438842773, -0.014098568819463253, -0.5136209726333618, -2.745023012161255, -5.722029527532868e-06, -0.0008531744824722409, -0.0005558376433327794, -2.3841855067985307e-07, -5.602820692729438e-06, -0.02704678662121296, -1.1920858014491387e-05, -7.390948667307384e-06, -0.0069115376099944115, -1.3568086624145508, -0.014806969091296196, -0.050028786063194275, -0.016522955149412155, -0.021025275811553, -1.0371154530730564e-05, -0.01301308162510395, -0.006058778613805771, -0.00314895692281425, -0.0007391819381155074, -0.00016652150952722877, -5.960462772236497e-07, -1.6689286894688848e-06, -0.0005511910421773791, -0.00021145492792129517, -0.01993676833808422, -0.00023040501400828362, -0.28748011589050293, -0.00017927470616996288, -0.0021707084961235523, -0.021608984097838402, -0.00014804698002990335, -0.04571900516748428, -0.8943532705307007, -0.0007908792467787862, -0.8716537952423096, -1.6179596185684204, -0.3056824207305908, -0.038289379328489304, -0.016805149614810944, -0.05701051652431488, -0.09235454350709915, -0.00022098960471339524, -0.03638072684407234, -0.07704242318868637, -0.0292720515280962, -0.00870587583631277, -0.0003780603874474764, -0.017315523698925972, -3.576278118089249e-07, -0.00021205084340181202, -0.0010708795161917806, -2.3841830625315197e-06, -3.576278118089249e-07, -0.00019453064305707812, -0.0002882065309677273, -0.04992809146642685, -0.3230999708175659, -1.6838161945343018, -0.2982150912284851, -1.9670662879943848, -0.21604011952877045, -1.1091198921203613, -0.03218325600028038, -0.12449035793542862, -0.00015877417172305286, -0.3497903645038605, -0.0026828984264284372, -0.9391557574272156, -0.0008961713756434619, -3.0669479370117188, -0.25857049226760864, -0.0004220310365781188, -0.025233827531337738, -0.005142200272530317, -0.6316155791282654, -0.0013185387942939997, -0.03999580815434456, -0.0014643670292571187, -3.6954811548639555e-06, -0.00018761781393550336, -2.90866428258596e-05, -0.0005703729693777859, -0.031807102262973785, -0.11776407063007355, -0.0016582560492679477, -5.125986263010418e-06, -0.009432275779545307, -7.784063927829266e-05, -0.00020358874462544918, -5.9960475482512265e-05, -0.013450006023049355, -0.0008499585674144328, -0.005171493627130985, -0.00015221867943182588, -4.172316494077677e-06, -0.00020632999076042324, -3.540453326422721e-05, -0.0007045170641504228, -0.001671347301453352, -0.0012535341084003448, -0.06755730509757996, -0.0004901876673102379, -0.02392970770597458, -0.6875506639480591, -0.6912757754325867, -0.16939771175384521, -0.029744284227490425, -0.008321020752191544, -0.005368933547288179, -2.7452950477600098, -0.6127556562423706, -0.00012694983161054552, -0.1400512009859085, -0.02030211128294468, -1.883488948806189e-05, -2.5987286790041253e-05, -4.768360213347478e-06, -5.8410845667822286e-05], "finish_reason": "length"}], "metrics": {"energy": 867.3118436965933, "energy_per_token": 3.3879368894398176, "time": 21.641375, "time_per_token": 0.08453662109375}}
{"outputs": [{"text": "# Validate arguments\n    if not os.path.exists(dir_path):\n        raise FileNotFoundError(f\"Directory '{dir_path}' not found.\")\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"'{dir_path}' is not a directory.\")\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Evaluate predicates\n    valid_predicates = {\"is_file\", \"is_dir\", \"has_special_chars\", \"has_numbers\"}\n    deduplicated_predicates = list(set(predicates))  # Deduplicate\n    valid_deduplicated_predicates = list(set(deduplicated_predicates) & valid_predicates)  # Only keep valid\n\n    # Validate predicates\n    if not valid_deduplicated_predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Prepare result dictionary\n    results = dict()\n\n    # Evaluate predicates for each directory item\n    for item", "tokens": ["#", " Valid", "ate", " arguments", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "dir", "_", "path", "}'", " not", " found", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "'{", "dir", "_", "path", "}'", " is", " not", " a", " directory", ".", "\"", ")", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " E", "valuate", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " ", "{\"", "is", "_", "file", "\"", ",", " \"", "is", "_", "dir", "\"", ",", " \"", "has", "_", "special", "_", "chars", "\"", ",", " \"", "has", "_", "numbers", "\"}", "\n", "    ", "dedup", "l", "icated", "_", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "  ", "#", " Ded", "uplicate", "\n", "    ", "valid", "_", "dedup", "l", "icated", "_", "pred", "icates", " =", " list", "(", "set", "(", "dedup", "l", "icated", "_", "pred", "icates", ")", " &", " valid", "_", "pred", "icates", ")", "  ", "#", " Only", " keep", " valid", "\n", "\n", "    ", "#", " Valid", "ate", " pred", "icates", "\n", "    ", "if", " not", " valid", "_", "dedup", "l", "icated", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Prepare", " result", " dictionary", "\n", "    ", "results", " =", " dict", "()", "\n", "\n", "    ", "#", " E", "valuate", " pred", "icates", " for", " each", " directory", " item", "\n", "    ", "for", " item"], "logprobs": [-1.0251017808914185, -1.6044033765792847, -0.06499131768941879, -3.3805179595947266, -0.09939926862716675, -0.006418328732252121, -0.20655196905136108, -0.03238501399755478, -0.5823807716369629, -0.00011431517486926168, -0.013447889126837254, -3.969590397900902e-05, -0.4817630648612976, -0.0002857038634829223, -0.0028683494310826063, -5.113947918289341e-05, -7.152555099310121e-07, -0.31972867250442505, -0.004348228219896555, -0.00048387263086624444, -0.006992985028773546, -0.018927907571196556, -2.2172682292875834e-05, -6.198863957251888e-06, -0.029950814321637154, -0.21053126454353333, -0.07750024646520615, -0.46956947445869446, -0.9934337735176086, -0.0003149013500660658, -0.0031781899742782116, -6.270212179515511e-05, -8.344646857949556e-07, -0.0025868306402117014, -2.3157167434692383, -0.00040284625720232725, -0.33710578083992004, -0.022612696513533592, -0.0002658013836480677, -0.001311514643020928, -0.1430230438709259, -0.03851066902279854, -0.025343898683786392, -0.012774540111422539, -1.0967194612021558e-05, -0.0004148814477957785, -8.583032467868179e-06, -2.062299427052494e-05, -3.4927710657939315e-05, -4.172238186583854e-05, -7.295342220459133e-05, -1.3708974620385561e-05, -4.768370445162873e-07, -0.0009893052047118545, -0.0003408804477658123, -4.005352093372494e-05, -0.0003190723655279726, -0.2164284586906433, -5.8412379075889476e-06, -2.861018856492592e-06, -0.00014649749209638685, -0.021650280803442, -0.0001938155182870105, -0.663580596446991, -0.001029200037010014, -8.4638240878121e-06, 0.0, -0.0014255610294640064, -0.014780658297240734, -0.0002474478678777814, -0.0011987651232630014, -0.028746431693434715, -0.013111800886690617, -0.005789416376501322, -3.218599158572033e-05, -0.0002949994814116508, -0.37886080145835876, -0.18650215864181519, -0.03629405051469803, -0.2930154502391815, -3.3854863431770355e-05, -0.08487005531787872, -0.006542571820318699, -0.00013481661153491586, -0.002484213560819626, -0.00037889453233219683, -2.3841855067985307e-07, -0.014840208925306797, -0.03471923619508743, -0.6987784504890442, -0.28364986181259155, -0.02115623652935028, -3.373566141817719e-05, -0.07380666583776474, -0.037517745047807693, -0.03876379504799843, -0.00010752100206445903, -0.00045658653834834695, -0.13046696782112122, -0.0004638549580704421, -0.23088906705379486, -3.8983118534088135, -0.05422195419669151, -1.5811290740966797, -0.0003554189461283386, -0.4075997769832611, -0.0025032395496964455, -2.0365242958068848, -0.07481157034635544, -0.03456366807222366, -0.01807328127324581, -0.00638196524232626, -3.1551175117492676, -0.022430405020713806, -0.0050506386905908585, -0.00021300431399140507, -0.005610196385532618, -0.06804410368204117, -0.00018773700867313892, -0.0023296140134334564, -0.001513170194812119, -2.3841830625315197e-06, -0.0005517867393791676, -0.0009897815762087703, -1.9907753085135482e-05, -0.005596919916570187, -0.0011242267210036516, -6.318072337307967e-06, -0.01656176522374153, -0.00010084597306558862, -0.00011085849109804258, -0.0005174727994017303, -1.168244216387393e-05, -0.002253732644021511, -0.0004661188868340105, -5.006777428206988e-06, -0.0008172033121809363, -0.0029654596000909805, -0.027792802080512047, -0.018316881731152534, -1.7887173891067505, -0.14327004551887512, -0.050945594906806946, -0.030021384358406067, -0.009393777698278427, -0.004321878310292959, -0.0019370617810636759, -1.4392865896224976, -0.00516259903088212, -0.019000662490725517, -0.004835459403693676, -0.041222989559173584, -0.0029005620162934065, -0.04160168021917343, -0.9963507652282715, -3.433168603805825e-05, -0.6558930277824402, -0.014984901063144207, -2.352731466293335, -0.15103524923324585, -1.2978287935256958, -0.39199361205101013, -0.8287653923034668, -0.05116138607263565, -0.001423775334842503, -0.009449399076402187, -0.001840446493588388, -0.0036665848456323147, -0.0011211306555196643, -2.933900833129883, -0.004929057322442532, -0.9121302962303162, -0.018250633031129837, -0.23156650364398956, -5.6980417866725475e-05, -6.186770770000294e-05, -2.4914430468925275e-05, -6.079655122448457e-06, -9.905801562126726e-05, -0.0007662221323698759, -0.026355136185884476, -0.0033974091056734324, -2.622600959512056e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -8.141662692651153e-05, -1.130139946937561, -5.125986263010418e-06, -2.8972654342651367, -0.2382461428642273, -0.022101638838648796, -0.870589554309845, -0.3562684953212738, -9.30981186684221e-05, -0.8565314412117004, -2.9418282508850098, -0.010837034322321415, -0.38822141289711, -0.00015472168161068112, -0.16002187132835388, -0.00011240804451517761, -0.0659419447183609, -0.013065207749605179, -0.007923835888504982, -2.3841830625315197e-06, -0.00013851160474587232, -2.50339189733495e-06, -1.645074735279195e-05, -1.0728830375228426e-06, -9.536738616588991e-07, -3.2186455882765586e-06, -0.0003045333724003285, -0.013672512024641037, -7.152301259338856e-05, -0.00921413954347372, -0.001057423185557127, 0.0, -0.00028975578607060015, -0.28488466143608093, -0.057902611792087555, -0.001980012049898505, -0.03186991810798645, -1.1801649634435307e-05, -0.03161897137761116, -0.007015358656644821, -0.034378934651613235, -0.0003432638186495751, -0.0015190026024356484, -0.0201712716370821, -0.00013004888023715466, -0.431671679019928, -3.3821702003479004, -1.7907054424285889, -0.443972110748291, -0.18320424854755402, -0.00034290633630007505, -1.6822797060012817, -0.03812002018094063, -2.549339771270752, -0.035031795501708984, -0.03667081892490387, -0.1517275869846344, -0.00015245705435518175, -0.057761747390031815, -1.811102032661438, -0.0015048381173983216, -2.435817241668701, -0.0002087136817863211, -0.5143465399742126, -0.055140119045972824, -3.0052523612976074, -0.020590482279658318, -0.05158796161413193, -0.000865680689457804, -0.13193121552467346, -0.2731213867664337], "finish_reason": "length"}], "metrics": {"energy": 874.1202443771358, "energy_per_token": 3.4145322045981867, "time": 21.6396, "time_per_token": 0.0845296875}}
{"outputs": [{"text": "predicates = set(predicates)\n    if len(predicates) == 0:\n        raise ValueError('At least one predicate must be provided.')\n\n    # Ensure the directory exists\n    dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError('Directory not found: {}'.format(dir_path))\n\n    # Define conditions\n    conditions = {\n        'is_file': lambda x: x.is_file(),\n        'is_dir': lambda x: x.is_dir(),\n        'has_special_chars': lambda x: re.search(r'[^\\w\\.]', x.name),\n        'has_numbers': lambda x: re.search(r'\\d', x.name)\n    }\n\n    # Validate predicates\n    valid_predicates = predicates & set(conditions.keys())\n    if not valid_predicates:\n        raise ValueError('At least one valid predicate must be provided.')\n\n    result = {}\n    for item in os.listdir(dir_", "tokens": ["pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "    ", "if", " len", "(", "pred", "icates", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "At", " least", " one", " predicate", " must", " be", " provided", ".", "')", "\n", "\n", "    ", "#", " Ensure", " the", " directory", " exists", "\n", "    ", "dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Directory", " not", " found", ":", " {", "}'", ".", "format", "(", "dir", "_", "path", "))", "\n", "\n", "    ", "#", " Define", " conditions", "\n", "    ", "conditions", " =", " {", "\n", "        ", "'", "is", "_", "file", "':", " lambda", " x", ":", " x", ".", "is", "_", "file", "()", ",", "\n", "        ", "'", "is", "_", "dir", "':", " lambda", " x", ":", " x", ".", "is", "_", "dir", "()", ",", "\n", "        ", "'", "has", "_", "special", "_", "chars", "':", " lambda", " x", ":", " re", ".", "search", "(", "r", "'", "[", "^\\", "w", "\\", ".", "]", "'", ",", " x", ".", "name", ")", ",", "\n", "        ", "'", "has", "_", "numbers", "':", " lambda", " x", ":", " re", ".", "search", "(", "r", "'\\", "d", "'", ",", " x", ".", "name", ")", "\n", "    ", "}", "\n", "\n", "    ", "#", " Valid", "ate", " pred", "icates", "\n", "    ", "valid", "_", "pred", "icates", " =", " pred", "icates", " &", " set", "(", "conditions", ".", "keys", "())", "\n", "    ", "if", " not", " valid", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "('", "At", " least", " one", " valid", " predicate", " must", " be", " provided", ".", "')", "\n", "\n", "    ", "result", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_"], "logprobs": [-2.733527183532715, -0.06965963542461395, -0.11985713988542557, -1.172400951385498, -0.013080974109470844, -0.01389261707663536, -0.003617530455812812, -0.0026148909237235785, -0.22768311202526093, -0.281320720911026, -0.25701266527175903, -2.5987939834594727, -0.00018988236843142658, -0.002891052979975939, -0.0005259322933852673, -0.0004403813509270549, -0.06123209744691849, -0.0002530493075028062, -0.0004848258395213634, -0.0030873988289386034, -0.01815405860543251, -0.000641974329482764, -0.020200712606310844, -0.0014688903465867043, -1.1920928244535389e-07, -1.9211931228637695, -1.632975697517395, -0.0036283391527831554, -0.04394063726067543, -0.2670929729938507, -0.5031565427780151, -0.0019019624451175332, -0.16860289871692657, -0.6363140344619751, -0.01537870429456234, -0.0016751555958762765, -0.3241680860519409, -0.00021395778458099812, -1.8122998476028442, -3.604267120361328, -0.869683563709259, -0.5719001889228821, -0.19306306540966034, -0.8100454807281494, -0.0002951186615973711, -0.6841665506362915, -0.013479880057275295, -0.012138661928474903, -0.14405634999275208, -0.04269668459892273, -0.0009414292871952057, -0.0011872155591845512, -5.483612312673358e-06, 0.0, -0.0010638536186888814, -0.03446140140295029, -0.01077441405504942, -0.007672129198908806, -0.017655590549111366, -0.0577818900346756, -1.3589766240329482e-05, -2.3841855067985307e-07, -0.0009566736407577991, -0.7541683912277222, -1.9430925021879375e-05, -0.0009095107670873404, -0.015823161229491234, -0.0010320581495761871, -0.00019405389321036637, -0.007820463739335537, -0.01304332260042429, -2.47952248173533e-05, -1.7881377516459906e-06, -0.961368203163147, -0.6829406023025513, -1.275399923324585, -0.0010153858456760645, -1.5321483612060547, -0.6965336799621582, -0.04481346160173416, -0.0005317704635672271, -0.00015424491721205413, -0.00022516099852509797, -0.021979430690407753, -0.0018757858779281378, -2.2053474822314456e-05, -0.009018165990710258, -0.0003200257197022438, -0.01185125857591629, -0.00029023250681348145, -0.6293793320655823, -1.4979171752929688, -2.8957879543304443, -1.0823100805282593, -0.0017191881779581308, -0.3541005849838257, -0.029832687228918076, -0.03720572963356972, -0.0027184458449482918, -0.006332096178084612, -0.025769544765353203, -0.004415287170559168, -0.00018368464952800423, -0.001887565478682518, -0.008076272904872894, -0.06323204189538956, -0.8135210871696472, -0.011807669885456562, -0.33521768450737, -0.0058895619586110115, -0.015749001875519753, -0.00016664070426486433, -0.00015579440514557064, -0.005600120406597853, -0.006328186951577663, -0.033590905368328094, -0.0004096384218428284, -0.0008445986895821989, -0.001057184999808669, -1.0251946150674485e-05, -0.0013512775767594576, -9.572047565598041e-05, -0.0008406681008636951, -0.00015615197480656207, -8.260862523457035e-05, -0.0017372767906636, -9.870042413240299e-05, -4.8397800128441304e-05, -2.3841855067985307e-07, -0.00046754872892051935, -0.00034338299883529544, -0.0002632986579556018, -0.0005463061388581991, -0.0020223658066242933, -0.004634591285139322, -0.0033179253805428743, -1.0251946150674485e-05, -0.039708513766527176, -3.6477376852417365e-05, -0.0001599660754436627, -0.00018189683032687753, -0.006451848894357681, -0.0013223483692854643, -0.0006572232232429087, -1.2110822200775146, -0.00011014331539627165, -0.02686924859881401, -0.06689513474702835, -0.017252136021852493, -0.1626642644405365, -0.00687779625877738, -0.6627118587493896, -0.0025814801920205355, -0.2336100935935974, -0.17896659672260284, -0.5448517203330994, -0.0015863704029470682, -8.49926145747304e-05, -0.2110324651002884, -0.00846441276371479, -0.7651807069778442, -0.9557894468307495, -0.7456575036048889, -0.06650560349225998, -0.0006980843027122319, -0.0034051313996315002, -0.0009710840531624854, -1.07287787614041e-05, -0.0022257810924202204, -7.724463648628443e-05, -0.00013469743134919554, -7.974783511599526e-05, -5.602679812000133e-05, -0.1168389841914177, -1.156323378381785e-05, -0.0030171608086675406, -0.001890659099444747, -7.402622577501461e-05, -0.008730574510991573, -9.894321920000948e-06, -0.03174347057938576, -8.583032467868179e-06, -0.0009288049186579883, -0.001046705641783774, -0.002771467436105013, -0.0015456646215170622, -0.6417253613471985, -0.0018485378241166472, -2.1457441107486375e-05, -0.0008976006065495312, -0.07790040969848633, -0.00017236177518498152, -0.18296006321907043, -1.3881490230560303, -0.010972991585731506, -0.34171217679977417, -0.00010716341057559475, -0.19137585163116455, -0.00013171759201213717, -0.25633519887924194, -0.015319538302719593, -0.02781089022755623, -0.010849770158529282, -0.000873065204359591, -1.7240647077560425, -9.965400386136025e-05, -1.1154543161392212, -0.11451432853937149, -0.00024136967840604484, -0.0004180987598374486, -0.04014446586370468, -4.768370445162873e-07, -8.4638240878121e-06, -0.01705867052078247, -0.09271859377622604, -0.21316272020339966, -0.8931896090507507, -0.0075667197816073895, -1.9073468138230965e-06, -8.344646857949556e-07, -1.0371154530730564e-05, -0.0006185048841871321, -0.0016888416139408946, -9.440929716220126e-05, -0.003915977198630571, -0.0014310367405414581, -2.3841855067985307e-07, -0.057951100170612335, -0.20923550426959991, -9.07141511561349e-05, -0.0002914242504630238, -0.008275385946035385, -0.0021636902820318937, -0.022051963955163956, -0.0005297449533827603, -0.0023227159399539232, -0.05241182819008827, -0.20380939543247223, -0.00018594920402392745, -0.011385232210159302, -0.00025602878304198384, -2.3993494510650635, -0.015841113403439522, -0.022299377247691154, -0.010251839645206928, -0.1782037913799286, -0.10212315618991852, -0.23603512346744537, -0.01387486420571804, -0.401996374130249, -2.634490556374658e-05, -0.25714346766471863, -2.3841855067985307e-07, -0.0006578188622370362, -0.0037604111712425947, -0.00011586471373448148], "finish_reason": "length"}], "metrics": {"energy": 891.3435260391233, "energy_per_token": 3.4818106485903253, "time": 21.64649, "time_per_token": 0.0845566015625}}
{"outputs": [{"text": "valid_predicates = ('is_file', 'is_dir', 'has_special_chars', 'has_numbers')\n    predicates = set(predicates)\n    if not predicates:\n        raise ValueError('No predicates provided.')\n    if not all(predicate in valid_predicates for predicate in predicates):\n        raise ValueError('Invalid predicate(s) provided. Supported predicates: {}'.format(\", \".join(valid_predicates)))\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError('Directory {} does not exist or is not a directory.'.format(dir_path))\n    output = dict()\n    for item in os.listdir(dir_path):\n        result = dict()\n        if 'is_file' in predicates:\n            result['is_file'] = os.path.isfile(os.path.join(dir_path, item))\n        if 'is_dir' in predicates:\n            result['is_dir'] = os.path.isdir(os.path.join(dir_path", "tokens": ["valid", "_", "pred", "icates", " =", " ('", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "')", "\n", "    ", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "('", "No", " pred", "icates", " provided", ".", "')", "\n", "    ", "if", " not", " all", "(", "pred", "icate", " in", " valid", "_", "pred", "icates", " for", " predicate", " in", " pred", "icates", "):", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " predicate", "(", "s", ")", " provided", ".", " Sup", "ported", " pred", "icates", ":", " {", "}'", ".", "format", "(", "\"", ",", " \"", ".", "join", "(", "valid", "_", "pred", "icates", ")))", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Directory", " {}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "'", ".", "format", "(", "dir", "_", "path", "))", "\n", "    ", "output", " =", " dict", "()", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "result", " =", " dict", "()", "\n", "        ", "if", " '", "is", "_", "file", "'", " in", " pred", "icates", ":", "\n", "            ", "result", "['", "is", "_", "file", "']", " =", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "        ", "if", " '", "is", "_", "dir", "'", " in", " pred", "icates", ":", "\n", "            ", "result", "['", "is", "_", "dir", "']", " =", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path"], "logprobs": [-2.727055549621582, -0.04413102939724922, -0.10078208148479462, -0.023721812292933464, -0.012061165645718575, -2.69671630859375, -0.004606943577528, -0.00012635385792236775, -0.006243960466235876, -0.00033682872890494764, -0.0002563863235991448, -0.006438464857637882, -0.0013773487880825996, -3.099436753473128e-06, -0.00044109628652222455, -0.00041321321623399854, -8.976056415122002e-05, -0.021088307723402977, -0.0022272085770964622, -7.033323527139146e-06, -0.016486721113324165, -9.822363062994555e-05, -0.000742398202419281, -0.0008628221112303436, -0.0001280225842492655, -0.005015411414206028, -0.00035279724397696555, -7.390948667307384e-06, -0.001652305480092764, -0.006396416109055281, -0.030227743089199066, -0.2566372752189636, -0.8432836532592773, -0.030200446024537086, -0.06076328828930855, -0.759344756603241, -0.020710641518235207, -0.11573413759469986, -0.022860204800963402, -0.003956586588174105, -0.5801344513893127, -0.33208346366882324, -0.39627328515052795, -0.09366734325885773, -0.23290608823299408, -2.729855441430118e-05, -1.2472974061965942, -0.012320130132138729, -0.0010796914575621486, -0.014352894388139248, -0.0008429311565123498, -1.490105023549404e-05, -1.2312712669372559, -0.661756157875061, -1.8779399394989014, -0.00017927470616996288, -0.36944228410720825, -1.0135806798934937, -0.23609104752540588, -0.0018999397289007902, -0.35047128796577454, -0.6303399801254272, -0.18831680715084076, -0.5683448314666748, -0.05780405551195145, -0.5857990384101868, -0.5705369114875793, -0.004124349914491177, -0.0009048658539541066, -2.50339189733495e-06, -1.0728830375228426e-06, -2.0146166207268834e-05, -0.00047469791024923325, -9.583967766957358e-05, -1.3470558769768104e-05, -0.0007360848248936236, -1.2278481335670222e-05, -0.0008170842193067074, -0.0017408467829227448, -0.0005607224884442985, -0.09466919302940369, -0.006158067844808102, -9.417090768693015e-05, -0.7825538516044617, -0.19007956981658936, -0.5106327533721924, -1.3184490203857422, -4.458328112377785e-05, -0.06556276232004166, -0.1713922917842865, -0.028014807030558586, -2.6429853439331055, -0.001191025716252625, -0.24064825475215912, -0.00016902448260225356, -0.3713007867336273, -0.5490002632141113, -0.07961272448301315, -0.016944166272878647, -0.0013569919392466545, -0.8074714541435242, -2.640566349029541, -0.038844410330057144, -0.03284308686852455, -0.00019178935326635838, -0.0006516240537166595, -0.004506432451307774, -0.015155169181525707, -2.992108420585282e-05, -4.279521817807108e-05, -0.00015722469834145159, -0.007958370260894299, -0.002277758438140154, -0.9601771831512451, -1.1073291301727295, -0.03171968087553978, -0.2930237352848053, -3.886147169396281e-05, -0.0028929547406733036, -2.9801878554280847e-05, -1.272498607635498, -0.0005284343496896327, -0.0001401803019689396, -0.0032645761966705322, -5.185469490243122e-05, -1.7881377516459906e-06, -0.011083937250077724, -0.004715512972325087, -0.0007217901293188334, -0.00538458488881588, -0.02405354008078575, -8.225102646974847e-05, -8.22540732769994e-06, -0.20018348097801208, -0.2331721931695938, -2.5055558681488037, -0.14988034963607788, -0.00018165845540352166, -0.0009276139317080379, -0.085520438849926, -0.008536869660019875, -0.0009895433904603124, -0.002677667187526822, -0.008963702246546745, -0.19391576945781708, -0.004805444274097681, -0.0007344171172007918, -0.0002466136065777391, -0.0004256058018654585, -0.004108560271561146, -7.617183291586116e-05, -5.722029527532868e-06, -0.00028046013903804123, -0.0007138088112697005, -1.11367666721344, -3.6597695350646973, -0.35530391335487366, -2.711750030517578, -0.003890090622007847, -0.007811001501977444, -0.02460908144712448, -0.2829993665218353, -0.20318187773227692, -0.04237440228462219, -0.032297875732183456, -1.1801649634435307e-05, -0.025618039071559906, -1.1920928244535389e-07, -0.000278195773717016, -0.0023504269775003195, -8.702239938429557e-06, -2.3841830625315197e-06, -0.00041940953815355897, -0.00815857108682394, -0.0016465928638353944, -2.7129812240600586, -0.0350881963968277, -0.09623093903064728, -0.1803617626428604, -0.005726479925215244, -0.004292916506528854, -1.132062554359436, -0.05307631567120552, -0.0038526849821209908, -1.5139465176616795e-05, -0.018600093200802803, -2.8609820219571702e-05, -0.0001530530134914443, -0.0007512131123803556, -2.7418097943154862e-06, -0.015843460336327553, -0.00472381804138422, -0.0006307758158072829, -0.021050605922937393, -0.007377404719591141, -3.576214658096433e-05, -4.23184028477408e-05, -4.088794958079234e-05, -9.119095193454996e-05, -0.0004627825692296028, -0.04967811703681946, -8.4638240878121e-06, -7.509902934543788e-05, -3.2186455882765586e-06, -0.000482442817883566, -0.0003289635351393372, -0.00458166841417551, -0.027845902368426323, -1.4305104514278355e-06, -0.0001212284987559542, -5.960446742392378e-06, -0.00022718709078617394, -5.876845170860179e-05, -0.0009845414897426963, -5.125986263010418e-06, -7.152555099310121e-07, -6.3774932641536e-05, -0.0015617328463122249, -0.0003914067056030035, -0.01614133082330227, -0.021672911942005157, -0.0021879561245441437, -0.0004593271005433053, -0.0014031813479959965, -4.410734163684538e-06, -0.00013553177996072918, -1.4185804502631072e-05, -0.00018261195509694517, -1.1086402082582936e-05, -2.9802276912960224e-06, -0.0055222343653440475, -0.00024423000286333263, -0.00019202772818971425, -0.0007088055717758834, -7.92710343375802e-05, -1.0847986231965479e-05, -7.629365427419543e-06, -0.00012361239350866526, -1.9550132492440753e-05, -8.487341256113723e-05, -0.001189954113215208, -1.7881377516459906e-06, -0.00016175392374861985, -2.3364747903542593e-05, -5.149708886165172e-05, -0.00046754872892051935, -0.0001787979417713359, -0.0004661188868340105, -1.9073468138230965e-06, -7.510157047363464e-06, -9.536738616588991e-07, -1.2516897186287679e-05, -1.1801649634435307e-05, -2.0265373677830212e-05, -2.3841830625315197e-06, 0.0], "finish_reason": "length"}], "metrics": {"energy": 884.6580933761595, "energy_per_token": 3.455695677250623, "time": 21.654604, "time_per_token": 0.084588296875}}
{"outputs": [{"text": "# Check if there are any valid predicates\n    if not any(predicates):\n        raise ValueError(\"No valid predicates provided\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Check if the directory exists and is a directory\n    if not os.path.exists(dir_path) or not os.path.isdir(dir_path):\n        raise FileNotFoundError(\"Invalid directory path\")\n\n    # Initialize the result dictionary\n    result = {}\n\n    # Iterate through the directory items\n    for item in os.listdir(dir_path):\n        # Check each predicate condition\n        for predicate in predicates:\n            # Get the item name without the extension for some predicates\n            item_name = os.path.splitext(item)[0] if predicate in ['has_special_chars', 'has_numbers'] else item\n\n            if predicate == 'is_file':\n                result[item] = os.path.isfile(os.path.join(dir_path, item))\n            elif predicate == 'is_dir':\n                ", "tokens": ["#", " Check", " if", " there", " are", " any", " valid", " pred", "icates", "\n", "    ", "if", " not", " any", "(", "pred", "icates", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Check", " if", " the", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Invalid", " directory", " path", "\"", ")", "\n", "\n", "    ", "#", " Initialize", " the", " result", " dictionary", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " directory", " items", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "#", " Check", " each", " predicate", " condition", "\n", "        ", "for", " predicate", " in", " pred", "icates", ":", "\n", "            ", "#", " Get", " the", " item", " name", " without", " the", " extension", " for", " some", " pred", "icates", "\n", "            ", "item", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "item", ")[", "0", "]", " if", " predicate", " in", " ['", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "']", " else", " item", "\n", "\n", "            ", "if", " predicate", " ==", " '", "is", "_", "file", "':", "\n", "                ", "result", "[", "item", "]", " =", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " item", "))", "\n", "            ", "elif", " predicate", " ==", " '", "is", "_", "dir", "':", "\n", "                "], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -2.920469284057617, -0.11644540727138519, -0.4475303888320923, -0.04096762835979462, -0.026231704279780388, -5.638440416078083e-05, -0.39832568168640137, -0.0009608419495634735, -0.39913105964660645, -0.024256130680441856, -1.0794771909713745, -0.10946417599916458, -0.32618218660354614, -0.8050866723060608, -0.002723557874560356, -0.004433089401572943, -0.0006312523037195206, -0.010957074351608753, -0.0004601611872203648, 0.0, -0.05083320662379265, -0.027139024809002876, -0.42847561836242676, -0.006148115731775761, -0.02162543311715126, -0.00011848701251437888, -0.17418904602527618, -1.271172046661377, -0.00019739109848160297, -0.0006338732782751322, -0.0408589206635952, -0.0002928543253801763, -0.16317768394947052, -2.11098313331604, -0.03559519350528717, -0.213301420211792, -8.463501580990851e-05, -0.1120772734284401, -0.0002225389762315899, -0.1995026022195816, -0.0063161044381558895, -0.02571621909737587, -0.09081197530031204, -0.0001616347290109843, -0.027026250958442688, -0.0016643255949020386, -0.002736159600317478, -0.0007346553611569107, -0.00037520044133998454, -0.007190065924078226, -0.022951433435082436, -0.0001774868869688362, -0.09731502830982208, -0.43603190779685974, -0.051014244556427, -0.20733784139156342, -0.4304411709308624, -0.11675868928432465, -0.438769668340683, -0.03390900045633316, -0.0813022330403328, -0.07768931984901428, -0.018023639917373657, -0.0001397035230183974, -0.5249048471450806, -0.008345019072294235, -0.3651590943336487, -2.3483953555114567e-05, -0.00407401192933321, -8.821448318485636e-06, -0.6521131992340088, -0.0001284993631998077, -0.0027421037666499615, -0.00011407678539399058, -2.622600959512056e-06, -0.19067201018333435, -0.009993164800107479, -0.0028498058672994375, -0.0012398421531543136, -4.887569048150908e-06, -2.47952248173533e-05, -2.7418097943154862e-06, -4.0531076592742465e-06, -6.639736966462806e-05, -3.0517112463712692e-05, -0.0003326578007545322, -2.884823152271565e-05, -1.1920928244535389e-07, -0.00029023250681348145, -0.0001161031104857102, -0.0001137191939051263, -0.0024818354286253452, -0.005945615470409393, -2.0146166207268834e-05, -1.0728830375228426e-06, -0.0010719512356445193, -0.7346519231796265, -2.218881607055664, -0.0277139600366354, -0.5511053204536438, -0.3239233195781708, -0.0012893705861642957, -0.00012766500003635883, -0.004074961878359318, -0.00029940891545265913, -0.42441707849502563, -1.448148488998413, -0.7437629103660583, -0.4865471422672272, -0.0533587783575058, -0.06519348919391632, -0.00031406714697368443, -0.20320911705493927, -0.07208114862442017, -0.04931994900107384, -0.0008923601126298308, -0.027568429708480835, -0.00010942813969450071, -0.02527625299990177, -0.7841861248016357, -0.000596107158344239, -0.8230515718460083, -0.5838950276374817, -0.6916523575782776, -1.0467685461044312, -0.19356828927993774, -0.00012385078298393637, -0.026418296620249748, -0.07539534568786621, -0.021481115370988846, -0.009115507826209068, -5.722029527532868e-06, -0.01538680400699377, -1.1920928244535389e-07, -0.00014840454969089478, -0.0007232195930555463, -5.125986263010418e-06, -1.1920928244535389e-07, -9.023735765367746e-05, -0.00022849810193292797, -0.02645045705139637, -0.40170222520828247, -1.605517029762268, -1.1637051105499268, -0.23743954300880432, -2.6591107845306396, -0.4972507953643799, -0.002702990546822548, -2.2600488662719727, -0.17048919200897217, -0.005764763802289963, -0.004820392467081547, -1.2397689715726301e-05, -0.00011050090688513592, -0.00020203932945150882, -0.004765818361192942, -0.6441298127174377, -2.920119285583496, -0.05994391441345215, -1.244768738746643, -0.3922385275363922, -0.11759302765130997, -0.7285038828849792, -0.41500869393348694, -1.0024135112762451, -0.793382465839386, -1.1766022443771362, -6.723177648382261e-05, -0.04898412898182869, -0.0001629458274692297, -0.3589983284473419, -0.0010992205934599042, -0.10871391743421555, -0.11107885092496872, -0.12150264531373978, -3.2186455882765586e-06, -3.528532761265524e-05, -1.0609570381348021e-05, -0.000409161759307608, -1.1920928244535389e-07, 0.0, -7.30726242181845e-05, -0.008900020271539688, -0.0008528171456418931, -0.002049609087407589, -3.480850500636734e-05, -1.0633845329284668, -0.10768473148345947, -0.12666352093219757, -0.8121788501739502, -0.0077477190643548965, -8.272782724816352e-05, -0.029579028487205505, -8.95221673999913e-05, -0.0004182179400231689, -0.01243269257247448, -9.500529267825186e-05, -0.006804272066801786, -0.002014156896620989, -1.2993727978027891e-05, -0.0012216256000101566, -0.004577752202749252, -0.00248445151373744, -0.000674616196192801, -0.0004640932602342218, -0.234281525015831, -0.0009832315845414996, -1.689165711402893, -0.012123939581215382, -0.04022577032446861, -0.1186806783080101, -0.0026959760580211878, -2.4676019165781327e-05, -0.005288420710712671, -0.028380222618579865, -0.007070756983011961, -0.0005703729693777859, -0.3915433883666992, -0.17012783885002136, -0.0017080017132684588, -0.02488912083208561, -0.001531976624391973, -1.2265602350234985, -1.7046782886609435e-05, -1.847726889536716e-05, -1.0013530300057027e-05, -0.0005679901223629713, -4.637133679352701e-05, -0.0007425173535011709, -0.026649311184883118, -3.4570634852570947e-06, -6.723177648382261e-05, -6.556489552167477e-06, -7.962863310240209e-05, -6.580135959666222e-05, -0.0005388000281527638, -3.45700973412022e-05, -1.9073468138230965e-06, -5.054346183896996e-05, -0.0007514513563364744, -0.0009895433904603124, -0.009525444358587265, -0.021837029606103897, -0.005870007909834385, -1.8596476365928538e-05, -7.629103492945433e-05, -0.00014625910262111574, -0.0003053675754927099, -5.722029527532868e-06, -0.0004959068610332906, -7.56950321374461e-05, -7.414542778860778e-05, -6.19869097135961e-05], "finish_reason": "length"}], "metrics": {"energy": 872.2636889057165, "energy_per_token": 3.4072800347879553, "time": 21.638464, "time_per_token": 0.08452525}}
{"outputs": [{"text": "# Check if valid predicates are provided\n    supported_predicates = {\"is_file\", \"is_dir\", \"has_special_chars\", \"has_numbers\"}\n    valid_predicates = supported_predicates.intersection(set(predicates))\n    if not valid_predicates:\n        raise ValueError(f\"No valid predicates provided. Supported predicates: {supported_predicates}\")\n\n    # Check if directory exists\n    directory = Path(dir_path)\n    if not directory.is_dir():\n        raise FileNotFoundError(f\"Directory {dir_path} does not exist or is not a directory\")\n\n    results = {}\n    for item in os.listdir(directory):\n        item_name, item_ext = os.path.splitext(item)\n\n        # Check if file or directory\n        item_path = os.path.join(directory, item)\n        is_file = os.path.isfile(item_path)\n        is_dir = os.path.isdir(item_path)\n\n        # Check if special characters are present", "tokens": ["#", " Check", " if", " valid", " pred", "icates", " are", " provided", "\n", "    ", "supported", "_", "pred", "icates", " =", " ", "{\"", "is", "_", "file", "\"", ",", " \"", "is", "_", "dir", "\"", ",", " \"", "has", "_", "special", "_", "chars", "\"", ",", " \"", "has", "_", "numbers", "\"}", "\n", "    ", "valid", "_", "pred", "icates", " =", " supported", "_", "pred", "icates", ".", "inter", "section", "(", "set", "(", "pred", "icates", "))", "\n", "    ", "if", " not", " valid", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "No", " valid", " pred", "icates", " provided", ".", " Sup", "ported", " pred", "icates", ":", " {", "supported", "_", "pred", "icates", "}\"", ")", "\n", "\n", "    ", "#", " Check", " if", " directory", " exists", "\n", "    ", "directory", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "dir", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "results", " =", " {}", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "item", "_", "name", ",", " item", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "item", ")", "\n", "\n", "        ", "#", " Check", " if", " file", " or", " directory", "\n", "        ", "item", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " item", ")", "\n", "        ", "is", "_", "file", " =", " os", ".", "path", ".", "is", "file", "(", "item", "_", "path", ")", "\n", "        ", "is", "_", "dir", " =", " os", ".", "path", ".", "is", "dir", "(", "item", "_", "path", ")", "\n", "\n", "        ", "#", " Check", " if", " special", " characters", " are", " present"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -3.240938186645508, -0.057794827967882156, -0.00011169286881340668, -0.13679751753807068, -0.06682756543159485, -0.11997207254171371, -0.0010985060362145305, -3.052194356918335, -0.005187859293073416, -0.10259073227643967, -0.018359603360295296, -0.0032556646037846804, -2.5554404258728027, -0.0023078492376953363, -0.004325557965785265, -0.00030560590676032007, -0.0034323371946811676, -0.003339311806485057, -0.00012337400403339416, -0.004892283584922552, -0.0009066523634828627, -4.172316494077677e-06, -0.0003446938644628972, -0.0002803409588523209, -1.7165990357170813e-05, -0.009539377875626087, -0.002055557444691658, -7.271740287251305e-06, -0.012029482051730156, -7.056941103655845e-05, -0.0006473353132605553, -0.0004805363714694977, -3.862306402879767e-05, -0.002074948512017727, -0.00023588736075907946, -5.8412379075889476e-06, -0.0007583603146485984, -0.006220266688615084, -0.004306210670620203, -0.05445036292076111, -1.0132771730422974, -0.00808289460837841, -0.0017375147435814142, -0.0066126808524131775, -0.0018874465022236109, -1.7202560901641846, -2.50339189733495e-06, -3.4570634852570947e-06, -1.9430925021879375e-05, -0.033673666417598724, -0.0004146431456319988, -0.000380324519937858, -0.0006821212591603398, -1.1867423057556152, -0.0002615109842736274, -0.000604565953835845, -0.0003588747640606016, -0.0008662762120366096, -0.007845066487789154, -0.1909426897764206, -0.00835093017667532, -0.027162345126271248, -0.0021955687552690506, -3.576278118089249e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.00042989550274796784, -0.004403062630444765, -0.00021872512297704816, -0.009857782162725925, -0.00044050050200894475, 0.0, -0.004571700468659401, -2.5404438972473145, -0.00844219047576189, -0.9566177129745483, -0.005252371542155743, -0.04304410144686699, -6.437094270950183e-05, -0.18920721113681793, -0.0764935165643692, -0.3584810495376587, -0.00036590558011084795, -0.12746350467205048, -0.00017987063620239496, -0.33620157837867737, -0.05222086235880852, -0.12046413868665695, -1.1920922133867862e-06, -1.2636104656849056e-05, -1.4543427823809907e-05, -0.03507910296320915, -0.0001711698860162869, -0.0009133219718933105, -0.01712816208600998, -0.0004359725280664861, -0.11538134515285492, -0.27323368191719055, -0.028529919683933258, -1.2217941284179688, -0.10119199752807617, -0.8995150327682495, -9.059495641849935e-05, -2.6017587184906006, -0.21794331073760986, -0.0115628307685256, -0.00039414744242094457, -0.0016002956544980407, -1.4066597032069694e-05, -1.1920922133867862e-06, -0.00039283663500100374, -0.013291092589497566, -0.002739250659942627, -0.0031041554175317287, -0.008818963542580605, -0.022998498752713203, -0.0003147821989841759, -0.39731550216674805, -1.2397689715726301e-05, -0.0003488647344056517, -0.018353048712015152, -0.0009507188224233687, -8.320462075062096e-05, -0.00361016602255404, -0.0159298162907362, -4.2199197196168825e-05, -8.344646857949556e-07, -0.0007761088781990111, -0.1282355934381485, -0.002699899487197399, -0.1754726767539978, -1.5490286350250244, -0.11589382588863373, -0.00011920218821614981, -0.00013517419574782252, -0.0074411844834685326, -0.11165314167737961, -7.045020902296528e-05, -0.00032491172896698117, -0.0878080353140831, -0.0032400989439338446, -0.00017820201173890382, -0.0012482955353334546, -0.009475850500166416, -1.3802149295806885, -0.0001289761275984347, -0.00037222131504677236, -0.004062376916408539, -0.00023112009512260556, -1.4052889347076416, -0.009832285344600677, -0.028574176132678986, -0.030792811885476112, -0.38930630683898926, -0.20870301127433777, -0.12750306725502014, -0.014956011436879635, -0.06008525937795639, -1.3828182090946939e-05, -0.06409355998039246, -1.1920928244535389e-07, -0.00016604475968051702, -0.6259776949882507, -0.0009214208112098277, -0.0076100206933915615, -0.003957774024456739, -0.7841610908508301, -0.015603363513946533, -1.7453776597976685, -0.624213695526123, -0.44197291135787964, -3.361645576660521e-05, -0.1956760585308075, -0.0005996812833473086, -0.003968341741710901, -5.006777428206988e-06, -1.6689286894688848e-06, -2.3841855067985307e-07, -6.794906312279636e-06, 0.0, 0.0, -0.0004577780782710761, -0.05777592584490776, -0.001960024470463395, -0.20328325033187866, -1.254137396812439, -0.0001472126314183697, -1.146341323852539, -1.0106463432312012, -1.2476224899291992, -2.4004673957824707, -1.0957363843917847, -0.010425510816276073, -0.054470568895339966, -0.00022682955022901297, -1.3170220851898193, -0.0020785173401236534, -0.09023822844028473, -0.00044371772673912346, -0.17533913254737854, -1.2636104656849056e-05, -8.177422569133341e-05, -3.0397906812140718e-05, -0.0005561950383707881, -2.2649508537142538e-05, -0.3586364686489105, -0.0006833125371485949, -0.0005354639724828303, -0.0007759897271171212, -0.0033073509112000465, -0.011783283203840256, -0.2560751736164093, -0.0006785474251955748, -0.024609314277768135, -0.004988367203623056, -0.011792119592428207, -6.6756979322235566e-06, -6.556489552167477e-06, -1.311301275563892e-06, -1.5139465176616795e-05, -0.0002474478678777814, -6.496695277746767e-05, -0.000734297966118902, -0.00037102968781255186, -4.4225667807040736e-05, -3.1470757676288486e-05, -0.0038364159408956766, -0.029540950432419777, -0.009034823626279831, -6.55629628454335e-05, -0.007590381894260645, -6.5205356804654e-05, -0.022328872233629227, -3.6954811548639555e-06, -8.344646857949556e-07, -5.960462772236497e-07, -2.95634672511369e-05, -2.586808113846928e-05, -1.6569954823353328e-05, -0.00012420836719684303, -0.00017391123401466757, -2.6464111215318553e-05, -2.1576648578047752e-05, -0.00035124807618558407, -0.030285801738500595, -7.879423355916515e-05, -0.2907613515853882, -0.32893678545951843, -1.7814347743988037, -1.8304975032806396, -0.1588197499513626, -0.8430639505386353, -0.026908935979008675], "finish_reason": "length"}], "metrics": {"energy": 881.4042493190763, "energy_per_token": 3.4429853489026416, "time": 21.84762, "time_per_token": 0.085342265625}}
{"outputs": [{"text": "if not os.path.exists(dir_path) or not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"The specified directory does not exist or is not a directory.\")\n\n    if not predicates:\n        raise ValueError(\"No predicates provided.\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Initialize a dictionary to hold the results\n    results = {}\n\n    # Define a dictionary that maps predicate names to functions that perform the corresponding checks\n    predicate_functions = {\n        'is_file': lambda name: os.path.isfile(os.path.join(dir_path, name)),\n        'is_dir': lambda name: os.path.isdir(os.path.join(dir_path, name)),\n        'has_special_chars': lambda name: re.search(r'[^A-Za-z0-9_.]', Path(name).stem) is not None,\n        'has_numbers': lambda name: bool(re.search(r'\\d", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Initialize", " a", " dictionary", " to", " hold", " the", " results", "\n", "    ", "results", " =", " {}", "\n", "\n", "    ", "#", " Define", " a", " dictionary", " that", " maps", " predicate", " names", " to", " functions", " that", " perform", " the", " corresponding", " checks", "\n", "    ", "pred", "icate", "_", "functions", " =", " {", "\n", "        ", "'", "is", "_", "file", "':", " lambda", " name", ":", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " name", "))", ",", "\n", "        ", "'", "is", "_", "dir", "':", " lambda", " name", ":", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " name", "))", ",", "\n", "        ", "'", "has", "_", "special", "_", "chars", "':", " lambda", " name", ":", " re", ".", "search", "(", "r", "'", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "_", ".", "]", "'", ",", " Path", "(", "name", ")", ".", "stem", ")", " is", " not", " None", ",", "\n", "        ", "'", "has", "_", "numbers", "':", " lambda", " name", ":", " bool", "(", "re", ".", "search", "(", "r", "'\\", "d"], "logprobs": [-1.2760306596755981, -0.05340138450264931, -0.48489874601364136, -0.0006816447712481022, -0.01510749664157629, -9.119095193454996e-05, -0.6358801126480103, -0.0004609952447935939, -0.002633201191201806, -6.151010165922344e-05, -7.152555099310121e-07, -1.3358274698257446, -0.013526570983231068, -0.007194326724857092, -0.0022879871539771557, -2.2172682292875834e-05, -0.00011073929636040702, -1.7046782886609435e-05, -9.179073458653875e-06, -3.564294092939235e-05, -0.00013159839727450162, -0.0002898749662563205, -1.8715683836489916e-05, -2.3841855067985307e-07, -0.001043133088387549, -0.006729913409799337, -0.0006915323319844902, -0.008151358924806118, -0.03008200041949749, -1.8715683836489916e-05, -2.861018856492592e-06, -0.028076356276869774, -0.4356479048728943, -0.050174031406641006, -1.3864569664001465, -0.7639296650886536, -0.19877387583255768, -0.7872516512870789, -0.00044919890933670104, -0.0009634620510041714, -0.09551510959863663, -0.009806787595152855, -0.0017121669370681047, -0.003806845983490348, -0.006425080355256796, -2.8475420475006104, -0.7157838940620422, -0.016248304396867752, -0.0005225961795076728, -0.11647458374500275, -0.0005956306122243404, -1.2674527168273926, -0.0762084573507309, -0.23731590807437897, -7.545663538621739e-05, -0.09399738907814026, -0.009684602729976177, -0.0004596845537889749, -0.007837023586034775, -0.00046957432641647756, 0.0, -0.011666759848594666, -0.30953824520111084, -0.4681023061275482, -2.6664679050445557, -3.838465272565372e-05, -0.3188408613204956, -0.11035468429327011, -0.1803617626428604, -0.0002060916303889826, -0.00063744728686288, -0.02462315559387207, -0.0002953569928649813, -1.3987408876419067, -0.6001446843147278, -0.08580230921506882, -0.302024781703949, -0.00010752100206445903, -0.23045480251312256, -0.0001958416833076626, -0.5095207691192627, -0.008081711828708649, -0.03949756920337677, -0.08997035026550293, -0.00015758226800244302, -0.017805496230721474, -0.0025191735476255417, -0.0031641677487641573, -0.00016675988445058465, -0.00022706791060045362, -0.0029550003819167614, -0.03602535277605057, -0.00014399446081370115, -0.6239234805107117, -2.1776275634765625, -1.8017504215240479, -0.12709571421146393, -0.17852024734020233, -1.8222438097000122, -0.219180628657341, -0.22093918919563293, -0.14123022556304932, -0.00027855331427417696, -0.20372606813907623, -0.031486138701438904, -0.028954559937119484, -0.000892121868673712, -0.031159641221165657, -0.0002338612830499187, -0.12028837949037552, -1.5353583097457886, -1.1922886371612549, -0.5224319100379944, -3.242997646331787, -0.05538252741098404, -0.35563552379608154, -0.044296860694885254, -0.005595141556113958, -1.3764941692352295, -2.571582555770874, -2.0517587661743164, -0.06331809610128403, -1.7080333232879639, -0.22300849854946136, -0.02234029769897461, -0.000842692912556231, -1.175309658050537, -0.21932892501354218, -0.00022301571152638644, -2.0182807445526123, -0.0014771036803722382, -0.007944177836179733, -0.0005141366855241358, -0.006594443693757057, -0.1619390994310379, -0.002212697174400091, -0.0001754606782924384, -0.0026538888923823833, -0.001604580320417881, -0.10666123032569885, -1.9381541013717651, -0.015385513193905354, -0.1342715471982956, -1.6689160474925302e-05, -0.00016497205069754273, -2.3841830625315197e-06, -0.0012836558744311333, -0.0019102912629023194, -0.012914471328258514, -0.022654419764876366, -1.3708974620385561e-05, -0.00014697425649501383, -8.22540732769994e-06, -0.0003250309091527015, -0.00011312322021694854, -0.0010746901389211416, -0.00011729506513802335, -7.390948667307384e-06, -0.0001062098381225951, -0.0026676803827285767, -0.0004483648226596415, -0.0020166554022580385, -0.031404003500938416, -0.0007493072189390659, -0.0024791003670543432, -0.00041130665340460837, -7.867782187531702e-06, -0.0004602803383022547, -6.496695277746767e-05, -0.00036435641231946647, -0.0005305789527483284, -0.00013219437096267939, -0.004937004763633013, -3.576272320060525e-06, -4.2199197196168825e-05, -2.9802276912960224e-06, -0.00014423283573705703, -0.0002814135223161429, -5.6265202147187665e-05, -0.0001456631434848532, -1.9073468138230965e-06, -3.576278118089249e-07, -3.576278118089249e-07, -0.00010585224663373083, -9.059865078597795e-06, -6.198863957251888e-06, -2.0265558760002023e-06, -1.1920928244535389e-07, -2.4914430468925275e-05, -0.00012540031457319856, -3.9219088648678735e-05, -0.00031919151660986245, -0.0006697318749502301, -0.00100514420773834, -0.0028493304271250963, -0.00156816013623029, -6.9141146923357155e-06, -0.017697518691420555, -2.884823152271565e-05, -0.00010168035078095272, -0.00011300401820335537, -0.005248221103101969, -0.0007674132939428091, -0.0039572990499436855, -1.424731969833374, -0.00018451895448379219, -0.013368964195251465, -0.056388866156339645, -0.0184610728174448, -0.3673919439315796, -0.0076030404306948185, -0.5024293065071106, -1.8136961460113525, -6.794906312279636e-06, -0.0009240409708581865, -0.0005404680268839002, -2.3841855067985307e-07, -9.536697689327411e-06, -0.026571886613965034, -2.1219027985353023e-05, -3.099393507000059e-05, -0.012272205203771591, -1.7514736652374268, -0.5498459339141846, -0.000568228424526751, -0.00023934361524879932, -0.7809929847717285, -0.001167569193057716, -0.023445289582014084, -0.004193085711449385, -1.6093124941107817e-05, -0.02305103838443756, -0.03380413353443146, -0.6579555869102478, -0.0017711918335407972, -2.3603161025675945e-05, -0.0059197815135121346, -0.060749489814043045, -0.000750617531593889, -0.0029924397822469473, -0.0011555430246517062, -1.680836794548668e-05, -0.0008270895341411233, -6.007967749610543e-05, -6.4490144723095e-05, -0.00013445904187392443, -7.998623186722398e-05, -2.2167937755584717, -0.0011307757813483477, -0.012303056195378304, -3.0278701160568744e-05, -0.009538787417113781, -0.002370882546529174, -0.0001573438785271719, -0.007958133704960346, -1.728519782773219e-05], "finish_reason": "length"}], "metrics": {"energy": 871.5117630872724, "energy_per_token": 3.4043428245596576, "time": 21.863659, "time_per_token": 0.08540491796875}}
{"outputs": [{"text": "# Validate that at least one predicate is provided\n    if not predicates:\n        raise ValueError(\"At least one predicate must be provided\")\n\n    # Validate that the specified directory exists and is a directory\n    dir_path = Path(dir_path)\n    if not dir_path.is_dir():\n        raise FileNotFoundError(f\"Directory does not exist or is not a directory: {dir_path}\")\n\n    # Deduplicate predicates\n    predicates = list(set(predicates))\n\n    # Initialize the result dictionary\n    result = {}\n\n    # Define the predicate functions\n    def is_file(item): return item.is_file()\n    def is_dir(item): return item.is_dir()\n    def has_special_chars(item): return bool(re.search(r\"[^a-zA-Z0-9_]+\", item.name.split(\".\")[0]))\n    def has_numbers(item): return bool(re.search(r\"\\d\", item.name))\n\n    # Iterate over each item in the directory\n", "tokens": ["#", " Valid", "ate", " that", " at", " least", " one", " predicate", " is", " provided", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " predicate", " must", " be", " provided", "\"", ")", "\n", "\n", "    ", "#", " Valid", "ate", " that", " the", " specified", " directory", " exists", " and", " is", " a", " directory", "\n", "    ", "dir", "_", "path", " =", " Path", "(", "dir", "_", "path", ")", "\n", "    ", "if", " not", " dir", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ":", " {", "dir", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Initialize", " the", " result", " dictionary", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Define", " the", " predicate", " functions", "\n", "    ", "def", " is", "_", "file", "(", "item", "):", " return", " item", ".", "is", "_", "file", "()", "\n", "    ", "def", " is", "_", "dir", "(", "item", "):", " return", " item", ".", "is", "_", "dir", "()", "\n", "    ", "def", " has", "_", "special", "_", "chars", "(", "item", "):", " return", " bool", "(", "re", ".", "search", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", "]+", "\"", ",", " item", ".", "name", ".", "split", "(", "\"", ".", "\"", ")[", "0", "]))", "\n", "    ", "def", " has", "_", "numbers", "(", "item", "):", " return", " bool", "(", "re", ".", "search", "(", "r", "\"", "\\", "d", "\"", ",", " item", ".", "name", "))", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " item", " in", " the", " directory", "\n"], "logprobs": [-1.0251017808914185, -1.6044033765792847, -0.06499131768941879, -2.957883834838867, -0.8235397338867188, -0.0013181816320866346, -0.01378492172807455, -0.7549347877502441, -0.20166689157485962, -0.16456268727779388, -0.09875720739364624, -0.001029080944135785, -0.026006285101175308, -0.07163770496845245, -0.04429275542497635, -1.883488948806189e-05, -0.010316380299627781, -0.0018938715802505612, -0.0004444326623342931, -0.006737136282026768, -0.000548331590835005, 0.0, -0.06476709246635437, -0.02874724380671978, -0.45215046405792236, -0.000764792668633163, -0.0021341899409890175, -0.09467971324920654, -0.45930013060569763, -0.0002636561985127628, -0.05059490725398064, -1.2778854370117188, -0.00020668754586949944, -0.0005517867393791676, -0.05565362796187401, -0.00035398892941884696, -0.1092991828918457, -0.28747761249542236, -0.0022150760050863028, -0.3189261257648468, -0.2356564849615097, -1.8211464881896973, -0.2382623851299286, -0.0280858613550663, -0.13417209684848785, -0.010709313675761223, -0.046718500554561615, -0.010288535617291927, -0.01035802811384201, -0.0002348147245356813, -0.6659514904022217, -0.0117763327434659, -0.01639900729060173, -0.24628451466560364, -0.05109908804297447, -0.0006998711614869535, -0.0009438112610951066, -2.0265558760002023e-06, 0.0, -0.0013271104544401169, -0.03581075742840767, -0.004603383596986532, -0.003956111613661051, -0.009232329204678535, -0.043659381568431854, -6.437280717364047e-06, -2.3841855067985307e-07, -0.0007566926069557667, -0.5043150186538696, -1.7165990357170813e-05, -0.00042691652197390795, -0.011883772909641266, -0.000691770575940609, -0.00015937011630740017, -0.004897384438663721, -0.015649838373064995, -2.7179348762729205e-05, -1.5497195136049413e-06, -0.0010975534096360207, -0.48751798272132874, -0.006223228294402361, -0.7605275511741638, -1.8645187616348267, -0.00015090756642166525, -0.0006185048841871321, -0.3611871600151062, -0.04329585283994675, -0.004249352961778641, -0.004648237023502588, -0.003473916556686163, -0.021753398701548576, -0.013420365750789642, -0.010365697555243969, -0.00017426878912374377, -3.0278701160568744e-05, -0.021197902038693428, -0.00011383838864276186, -0.00021371940965764225, -0.006089585367590189, -0.0003805628512054682, -0.14647641777992249, -1.1795611381530762, -0.016431139782071114, -0.22630521655082703, -8.40390202938579e-05, -0.22918084263801575, -0.00016485285595990717, -0.1604609191417694, -0.004288049414753914, -0.02075839787721634, -0.0912335067987442, -0.00011121608258690685, -0.012373115867376328, -0.0019276624079793692, -0.0034779557026922703, -0.0002762889489531517, -0.00021443451987579465, -0.005176118575036526, -0.018267838284373283, -0.00013684290752280504, -0.1780794858932495, -1.2409789562225342, -0.754448652267456, -0.6667835116386414, -0.062237948179244995, -0.12759919464588165, -0.0001787979417713359, -0.29436975717544556, -0.055256761610507965, -0.06403329968452454, -0.00043108707177452743, -0.027112573385238647, -0.00017867876158561558, -0.026877371594309807, -2.0743789672851562, -1.0037623643875122, -3.095883369445801, -0.25026002526283264, -0.11618117243051529, -0.007875108160078526, -0.3824101388454437, -0.2248823046684265, -0.0003149013500660658, -0.003094172803685069, -0.021785825490951538, -0.6234191656112671, -0.46253928542137146, -2.8526549339294434, -0.13772758841514587, -0.0008538890979252756, -0.01464838907122612, -9.095255518332124e-05, -0.0001454247540095821, -0.005650144536048174, -0.03559783846139908, -0.23957644402980804, -0.003455265425145626, -0.0010158622171729803, -9.536697689327411e-06, -0.0027941730804741383, -0.00011955977242905647, -0.0001382732152706012, -0.00015793983766343445, -0.0017495339270681143, -0.001313300454057753, -8.654219709569588e-05, -2.002696055569686e-05, -6.318072337307967e-06, -0.0005285535007715225, -7.199982064776123e-05, -0.00040749352774582803, -0.06085347756743431, -0.010332190431654453, -0.0043453797698020935, -8.106198947643861e-06, -0.040032804012298584, -0.00011824862303910777, -0.000785280775744468, -0.0013081812066957355, -0.0027100048027932644, -0.013143450021743774, -0.07114078104496002, -0.14518943428993225, -0.0006829552003182471, -0.010589951649308205, -6.663577369181439e-05, -0.020111337304115295, -0.030875112861394882, -0.0198384877294302, -1.0962440967559814, -0.1282028704881668, -0.524258017539978, -0.22177886962890625, -2.145764938177308e-06, -3.933898824470816e-06, -0.003170228097587824, -3.576278118089249e-07, -0.0002944036095868796, -0.02469770610332489, -2.312633478140924e-05, -0.00010668662434909493, -0.009391652420163155, -2.329960346221924, -0.0042783161625266075, -9.655486064730212e-05, -0.34669849276542664, -0.009273195639252663, -1.0188512802124023, -0.3180476427078247, -0.10485853999853134, -0.4727975130081177, -0.010379972867667675, -0.0005545270396396518, -2.062299427052494e-05, -0.022102104499936104, -0.0005249790847301483, -0.011149131692945957, -0.023510148748755455, -0.0023016647901386023, -0.0018517505377531052, -0.0005712069687433541, -2.7418097943154862e-06, -0.0013897294411435723, -0.00010001159535022452, -0.00016985881666187197, -0.00022075122979003936, -0.002138948068022728, -0.07155103981494904, -5.3165931603871286e-05, -0.0010567086283117533, -7.986990567587782e-06, -0.00806681253015995, -0.00016807096835691482, -0.000683074293192476, -0.02195027470588684, -0.11388573050498962, -4.3987260141875595e-05, -0.26685529947280884, -2.5629668016335927e-05, -0.0011649496154859662, -0.0018029639031738043, -0.0008214913541451097, -1.4848406314849854, -0.002121699508279562, -0.03888304904103279, -0.00036006642039865255, -0.07978037744760513, -3.1703920364379883, -0.00032014489988796413, -0.5399619340896606, -2.533693552017212, -0.39761433005332947, -0.05816538259387016, -0.0009953788248822093, -0.11858665943145752, -0.15494048595428467], "finish_reason": "length"}], "metrics": {"energy": 864.1297065639492, "energy_per_token": 3.3755066662654265, "time": 21.651531, "time_per_token": 0.08457629296875}}
{"outputs": [{"text": "# Check if the directory path is valid\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"The specified directory does not exist or is not a directory: {dir_path}\")\n\n    # Remove duplicates from the predicates list\n    predicates = list(set(predicates))\n\n    # Check if there are no valid predicates\n    if not predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Check for valid predicates and store valid predicates in a dictionary\n    valid_predicates = {}\n    for predicate in predicates:\n        if predicate in [\"is_file\", \"is_dir\", \"has_special_chars\", \"has_numbers\"]:\n            valid_predicates[predicate] = True\n        else:\n            print(f\"Invalid predicate: {predicate}\")\n\n    # Check if there are no valid predicates\n    if not valid_predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    result = {}  # dictionary to store the results\n\n    #", "tokens": ["#", " Check", " if", " the", " directory", " path", " is", " valid", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " specified", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ":", " {", "dir", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Remove", " dup", "licates", " from", " the", " pred", "icates", " list", "\n", "    ", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " no", " valid", " pred", "icates", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " for", " valid", " pred", "icates", " and", " store", " valid", " pred", "icates", " in", " a", " dictionary", "\n", "    ", "valid", "_", "pred", "icates", " =", " {}", "\n", "    ", "for", " predicate", " in", " pred", "icates", ":", "\n", "        ", "if", " predicate", " in", " [", "\"", "is", "_", "file", "\"", ",", " \"", "is", "_", "dir", "\"", ",", " \"", "has", "_", "special", "_", "chars", "\"", ",", " \"", "has", "_", "numbers", "\"", "]:", "\n", "            ", "valid", "_", "pred", "icates", "[", "pred", "icate", "]", " =", " True", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "f", "\"", "Invalid", " predicate", ":", " {", "pred", "icate", "}\"", ")", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " no", " valid", " pred", "icates", "\n", "    ", "if", " not", " valid", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "result", " =", " {}", "  ", "#", " dictionary", " to", " store", " the", " results", "\n", "\n", "    ", "#"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -0.8809680342674255, -0.414806991815567, -2.2823994159698486, -0.5769625902175903, -0.1499096006155014, -0.41873282194137573, -0.0011088658357039094, -0.6587344408035278, -0.01690290868282318, -0.5566819906234741, -3.015949550899677e-05, -0.013414837419986725, -1.2755313036905136e-05, -0.32287919521331787, -0.0015499495202675462, -0.00010966652916977182, -0.004245079588145018, -5.173549288883805e-05, 0.0, -0.012171754613518715, -0.0016562328673899174, -0.00038223114097490907, -0.013911662623286247, -0.04522520303726196, -2.1219027985353023e-05, -2.145764938177308e-06, -0.02985108457505703, -0.6723177433013916, -0.04197417199611664, -1.447465181350708, -0.7514697909355164, -0.26062601804733276, -1.0999867916107178, -0.00035589560866355896, -0.0007624103454872966, -0.07491941750049591, -0.008711311966180801, -0.0015260252403095365, -0.0036912893410772085, -0.0031742684077471495, -0.0926203653216362, -0.02201313152909279, -0.0012687736889347434, -1.5258672647178173e-05, -5.960462772236497e-07, -0.011653327383100986, -0.00017712931730784476, -0.00030763185350224376, -0.02496562898159027, -0.0003840185818262398, -0.058703985065221786, -3.048328399658203, -0.2665939927101135, -0.0004198861715849489, -0.24712590873241425, -0.27750957012176514, -0.804007351398468, -9.154854342341423e-05, -0.26970481872558594, -0.09202416986227036, -0.00020489977032411844, -0.2764967381954193, -0.004998093470931053, -0.03864211589097977, -0.02250337228178978, -7.83174327807501e-05, -0.025833556428551674, -0.0007440659101121128, -0.001329253427684307, -0.0012716311030089855, -0.00017987063620239496, -0.004486020188778639, -0.03243844583630562, -9.63164638960734e-05, -0.05900532007217407, -0.29465925693511963, -0.04204823821783066, -0.6593984365463257, -0.025534259155392647, -2.4549922943115234, -0.008486281149089336, -0.007980367168784142, -1.4662635294371285e-05, -0.24057787656784058, -2.2649508537142538e-05, -0.005402488633990288, -0.05384767800569534, -0.12169898301362991, -0.00015841660206206143, -0.010328179225325584, -0.00030071981018409133, -7.188061863416806e-05, -0.0018787605222314596, -0.00019274283840786666, 0.0, -0.005277985706925392, -0.021408656612038612, -0.12432993948459625, -0.0011071987682953477, -0.010148708708584309, -2.5033637939486653e-05, -0.17352139949798584, -0.36263394355773926, -0.18475694954395294, -0.00011967896716669202, -0.00020287363440729678, -0.003065412864089012, -0.0002374367177253589, -0.3860858380794525, -3.046666145324707, -2.8163557052612305, -0.7853160500526428, -0.27390968799591064, -3.6477376852417365e-05, -1.902540922164917, -3.317185163497925, -2.0054264068603516, -1.089360237121582, -0.0009280903614126146, -0.5587478280067444, -0.2137310653924942, -1.1691149473190308, -0.292972594499588, -0.0005526207387447357, -0.2901940643787384, -0.030713742598891258, -0.03948943316936493, -0.011922881938517094, -0.020240548998117447, -0.9812589883804321, -0.00787345226854086, -0.11510471254587173, -0.3251252770423889, -0.35562291741371155, -0.003264219732955098, -0.005254032090306282, -2.7656173188006505e-05, -6.5205356804654e-05, -0.0006669919239357114, -0.0013227055314928293, -0.12335073947906494, -0.0210639126598835, -0.7657502889633179, -2.1291868686676025, -0.17721396684646606, -0.008125700056552887, -0.000176652567461133, -0.005534919444471598, -6.115249561844394e-05, -0.0004021312633994967, -0.0009058186551555991, -0.0015368566382676363, -5.483612312673358e-06, -0.0005751386051997542, -7.033323527139146e-06, -0.0348462276160717, -0.0007139279623515904, -0.0016402851324528456, -8.821448318485636e-06, -0.01643453910946846, -6.603976362384856e-05, -0.0004103533865418285, -9.047575440490618e-05, -0.0016900317277759314, -0.00046623803791590035, -0.0004067785630468279, -6.6756979322235566e-06, -0.0011619728757068515, -1.8000440832111053e-05, -0.001471271039918065, -0.00119066855404526, -0.00026723151677288115, -0.004726903047412634, -1.1444026313256472e-05, -1.4781842764932662e-05, -5.936446541454643e-05, -0.007044478785246611, -0.000976919662207365, -1.4305104514278355e-06, -0.00048685140791349113, -1.9788545614574105e-05, -0.46086612343788147, -0.012851275503635406, -1.0891780853271484, -0.028072994202375412, -2.276871418871451e-05, -0.00290840701200068, -0.00016115797916427255, -0.19581954181194305, -0.0004948345012962818, -0.012650481425225735, -0.008965947665274143, -0.5210965275764465, -0.008926013484597206, -0.1281379610300064, -0.015492213889956474, -0.00010382589971413836, -4.8874615458771586e-05, -0.46083590388298035, -0.0014519874239340425, -0.07530557364225388, -0.04129356890916824, -0.0006565084331668913, -0.20075710117816925, -2.099062919616699, -0.5749309659004211, -0.2680213749408722, -0.01815979555249214, -0.17192183434963226, -0.008340409025549889, -0.00421267282217741, -8.702239938429557e-06, -0.4129013121128082, -3.71926071238704e-05, -0.0015997005393728614, -0.00788729079067707, -0.0014499637763947248, -8.344646857949556e-07, -1.7881377516459906e-06, -8.34461570775602e-06, -0.001335324952378869, -0.0002094287920044735, -9.238292841473594e-05, -0.005657019559293985, -0.001007287879474461, -1.1920928244535389e-07, -7.319182623177767e-05, -0.012832798063755035, -0.05312718451023102, -0.00043752157944254577, -0.0016882466152310371, -1.3589766240329482e-05, -0.036218978464603424, -0.009565354324877262, -0.005046012811362743, -5.125868119648658e-05, -0.00014602071314584464, -0.001520311925560236, -0.0004704084130935371, -2.540956735610962, -0.09682561457157135, -0.005680015776306391, -2.1875009536743164, -4.017272294731811e-05, -3.9607386589050293, -0.10274478048086166, -0.08952910453081131, -0.3841327130794525, -0.2950844466686249, -0.21997405588626862, -0.2417764812707901, -0.0002517383254598826, -0.26718249917030334], "finish_reason": "length"}], "metrics": {"energy": 872.7777649593355, "energy_per_token": 3.4092881443724043, "time": 22.077253, "time_per_token": 0.08623926953125}}
{"outputs": [{"text": "# Check if directory exists\n    if not os.path.exists(dir_path):\n        raise FileNotFoundError(f\"Directory {dir_path} does not exist.\")\n    # Check if directory is a directory\n    if not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"{dir_path} is not a directory.\")\n\n    # Remove duplicates from the list of predicates\n    unique_predicates = list(set(predicates))\n\n    # Check if there are any valid predicates\n    if not unique_predicates:\n        raise ValueError(\"No valid predicates provided.\")\n\n    # Create a dictionary of valid predicates and their corresponding functions\n    predicate_functions = {\n        'is_file': lambda x: os.path.isfile(x),\n        'is_dir': lambda x: os.path.isdir(x),\n        'has_special_chars': lambda x: not re.match(r'^[a-zA-Z0-9_.]+$', os.path.basename(x)),\n", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "dir", "_", "path", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " Check", " if", " directory", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "dir", "_", "path", "}", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Remove", " dup", "licates", " from", " the", " list", " of", " pred", "icates", "\n", "    ", "unique", "_", "pred", "icates", " =", " list", "(", "set", "(", "pred", "icates", "))", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " valid", " pred", "icates", "\n", "    ", "if", " not", " unique", "_", "pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " valid", " pred", "icates", " provided", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " of", " valid", " pred", "icates", " and", " their", " corresponding", " functions", "\n", "    ", "pred", "icate", "_", "functions", " =", " {", "\n", "        ", "'", "is", "_", "file", "':", " lambda", " x", ":", " os", ".", "path", ".", "is", "file", "(", "x", ")", ",", "\n", "        ", "'", "is", "_", "dir", "':", " lambda", " x", ":", " os", ".", "path", ".", "is", "dir", "(", "x", ")", ",", "\n", "        ", "'", "has", "_", "special", "_", "chars", "':", " lambda", " x", ":", " not", " re", ".", "match", "(", "r", "'^", "[", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "_", ".", "]+", "$'", ",", " os", ".", "path", ".", "bas", "ename", "(", "x", "))", ",", "\n"], "logprobs": [-1.0251017808914185, -1.0398930311203003, -0.4351189434528351, -1.9685001373291016, -0.22788511216640472, -0.8204598426818848, -0.0007775382255204022, -0.22283852100372314, -0.012888934463262558, -0.47356879711151123, -2.3245540432981215e-05, -0.004669001325964928, -1.0013530300057027e-05, -0.6886630654335022, -0.00031394799589179456, -0.003140876302495599, -7.295342220459133e-05, -1.311301275563892e-06, -0.5957900285720825, -0.0015541153261438012, -0.0004676678800024092, -0.006283408962190151, -0.009329532273113728, -1.9073304429184645e-05, -3.099436753473128e-06, -0.02653183788061142, -0.2735145688056946, -0.053976330906152725, -0.17392249405384064, -1.2312965393066406, -0.0030198944732546806, -1.537788011773955e-05, -2.145764938177308e-06, -0.008911953307688236, -0.15510781109333038, -0.00012420836719684303, -0.0010068115079775453, -0.7205209732055664, -0.005636631045490503, -0.00022957073815632612, -0.0004109491710551083, -0.690098762512207, -2.4441006183624268, -0.17605683207511902, -0.024928072467446327, -0.8470563292503357, -0.20905600488185883, -0.5395288467407227, -0.129965677857399, -0.06851106882095337, -8.654219709569588e-05, -0.019291631877422333, -0.021837612614035606, -0.001962879905477166, -2.2411095415009186e-05, -4.768258077092469e-05, -1.156323378381785e-05, -2.5987286790041253e-05, -0.00016783259343355894, -5.113947918289341e-05, -0.00011097769311163574, -1.3112935448589269e-05, -2.3841855067985307e-07, -0.0003295593778602779, -9.190614218823612e-05, -5.447716102935374e-05, -0.0009442876325920224, -0.19832445681095123, -6.294052582234144e-05, -1.7881377516459906e-06, -0.00012635385792236775, -0.016762010753154755, -0.00023231192608363926, -0.29995226860046387, -0.0010870745172724128, -1.549708758830093e-05, -3.576278118089249e-07, -0.0014480592217296362, -0.0017993940273299813, -0.0005718026659451425, -0.0006036128615960479, -0.008002836257219315, -0.01600584015250206, -0.0022429090458899736, -4.160317621426657e-05, -0.00022921319759916514, -0.4620726406574249, -0.0004472924047149718, -0.16086839139461517, -2.896702289581299, -0.22840674221515656, -0.0005392765742726624, -0.4572107195854187, -1.7233922481536865, -0.49568453431129456, -0.12113212794065475, -0.22773979604244232, -0.00017712931730784476, -0.11958079040050507, -0.00042500998824834824, -2.2210371494293213, -0.0006492413813248277, -0.007938974536955357, -0.024142911657691002, -0.005445883143693209, -0.1910351663827896, -9.929640509653836e-05, -0.02326955646276474, -0.0007756323902867734, -0.0012448427733033895, -0.00024125049822032452, -0.0002980979916173965, -0.00462225079536438, -0.26010724902153015, -0.00018737945356406271, -0.0673951804637909, -0.4534538984298706, -0.06762427091598511, -0.8839576840400696, -0.0618983693420887, -0.48826247453689575, -0.03329703211784363, -0.023111263290047646, -4.2914423829643056e-05, -0.22671659290790558, -5.8530047681415454e-05, -0.07853307574987411, -0.1062474474310875, -0.10443197935819626, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00010942813969450071, -0.02503945678472519, -0.0004587313160300255, -0.00011932138295378536, -0.0037146867252886295, -0.0002675890573300421, -4.768370445162873e-07, -0.0021935468539595604, -0.05548109859228134, -0.342017263174057, -0.0031125929672271013, -0.010309536941349506, -2.1576648578047752e-05, -0.10926146060228348, -0.051662568002939224, -0.027340875938534737, -0.00010883215873036534, -0.00016342257731594145, -0.013125801458954811, -0.0002317160106031224, -0.23653604090213776, -2.262007236480713, -0.49963948130607605, -0.23666861653327942, -2.2106916904449463, -0.9380581974983215, -0.20410998165607452, -9.60780744208023e-05, -1.26813805103302, -0.07483270019292831, -0.6189174056053162, -0.3518688380718231, -0.03829454258084297, -0.0009472650708630681, -2.0110511779785156, -0.38724127411842346, -0.0010280092246830463, -0.9152593612670898, -0.004622132051736116, -0.04035813361406326, -0.0017501289257779717, -0.006606641225516796, -0.509286105632782, -0.005305733531713486, -0.0002898749662563205, -0.003978434018790722, -0.0031963707879185677, -0.2054823786020279, -0.6985886693000793, -0.004870693199336529, -0.3127657473087311, -2.4676019165781327e-05, -0.00013255194062367082, -6.556489552167477e-06, -0.0021673778537660837, -0.000957030919380486, -0.006002850364893675, -1.227404236793518, -0.003851378569379449, -0.003317450173199177, -0.047543320804834366, -0.0005330810672603548, -0.0014224658953025937, -0.0009738231892697513, -1.1324817933200393e-05, -0.0007838514284230769, -9.321732068201527e-05, -0.0008837846689857543, -0.0002919009421020746, -0.00012957210128661245, -0.006052617449313402, -6.079655122448457e-06, -0.00012909532233607024, -7.748573807475623e-06, -0.0001726001501083374, -0.0003660247311927378, -0.0002858230145648122, -0.0006059955921955407, -2.002696055569686e-05, -0.000428108120104298, -0.00037102968781255186, -0.0012553200358524919, -0.0033652123529464006, -0.001980844885110855, -8.106198947643861e-06, -0.024774812161922455, -6.675497570540756e-05, -0.00030393750057555735, -0.00018606838420964777, -0.005021223332732916, -0.00230404338799417, -0.0015037668636068702, -2.810253143310547, -0.2974214553833008, -4.470248313737102e-05, -0.059607937932014465, -0.04614494368433952, -0.02742612734436989, -0.1348547488451004, -0.7016217708587646, -0.09224551916122437, -7.390948667307384e-06, -1.7881377516459906e-06, -0.0001525762490928173, -1.311301275563892e-06, -0.0006443570018745959, -0.007423553615808487, -2.7417760065873154e-05, -3.969590397900902e-05, -0.013619829900562763, -0.8500125408172607, -0.9339318871498108, -0.0004866131057497114, -5.006664650863968e-05, -0.8042133450508118, -1.764281842042692e-05, -5.1616290875244886e-05, -2.074220174108632e-05, -1.2957899570465088, -3.6954811548639555e-06, -2.777537883957848e-05, -0.01727873459458351, -0.09685482829809189, -0.026140427216887474, -0.011519701220095158], "finish_reason": "length"}], "metrics": {"energy": 871.6021745586393, "energy_per_token": 3.4046959943696846, "time": 21.64879, "time_per_token": 0.0845655859375}}
{"outputs": [{"text": "valid_predicates = {'is_file', 'is_dir', 'has_special_chars', 'has_numbers'}\n    predicates = [p for p in set(predicates) if p in valid_predicates]\n\n    if not predicates:\n        raise ValueError(\"At least one valid predicate must be provided.\")\n\n    if not os.path.exists(dir_path) or not os.path.isdir(dir_path):\n        raise FileNotFoundError(f\"The directory '{dir_path}' does not exist or is not a directory.\")\n\n    # Deduplicate predicates\n    unique_predicates = set(predicates)\n    result = {}\n\n    # Iterate through items in the directory\n    for item in os.listdir(dir_path):\n        # Initialize an empty dictionary for the item's results\n        item_results = {}\n\n        # Check for each predicate\n        for predicate in unique_predicates:\n            # Extract the filename without extension\n            filename = os.path.splitext(item)[0]\n\n            if predicate == \"is", "tokens": ["valid", "_", "pred", "icates", " =", " {'", "is", "_", "file", "'", ",", " '", "is", "_", "dir", "'", ",", " '", "has", "_", "special", "_", "chars", "'", ",", " '", "has", "_", "numbers", "'}", "\n", "    ", "pred", "icates", " =", " [", "p", " for", " p", " in", " set", "(", "pred", "icates", ")", " if", " p", " in", " valid", "_", "pred", "icates", "]", "\n", "\n", "    ", "if", " not", " pred", "icates", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "At", " least", " one", " valid", " predicate", " must", " be", " provided", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "dir", "_", "path", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " Ded", "uplicate", " pred", "icates", "\n", "    ", "unique", "_", "pred", "icates", " =", " set", "(", "pred", "icates", ")", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " items", " in", " the", " directory", "\n", "    ", "for", " item", " in", " os", ".", "list", "dir", "(", "dir", "_", "path", "):", "\n", "        ", "#", " Initialize", " an", " empty", " dictionary", " for", " the", " item", "'", "s", " results", "\n", "        ", "item", "_", "results", " =", " {}", "\n", "\n", "        ", "#", " Check", " for", " each", " predicate", "\n", "        ", "for", " predicate", " in", " unique", "_", "pred", "icates", ":", "\n", "            ", "#", " Ext", "ract", " the", " filename", " without", " extension", "\n", "            ", "filename", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "item", ")[", "0", "]", "\n", "\n", "            ", "if", " predicate", " ==", " \"", "is"], "logprobs": [-2.727055549621582, -0.04413102939724922, -0.10078208148479462, -0.023721812292933464, -0.012061165645718575, -1.0718860626220703, -0.0030366519931703806, -0.00014959646796341985, -0.004770089406520128, -0.012847156263887882, -0.0002227773511549458, -0.006237089168280363, -0.0010475391754880548, -4.0531076592742465e-06, -0.0004323977918829769, -0.0005821678787469864, -2.753696753643453e-05, -0.007190302945673466, -0.0013685394078493118, -7.390948667307384e-06, -0.019621673971414566, -0.00012063252506777644, -0.0006468587671406567, -0.0007040405762381852, -9.262132516596466e-05, -0.0035640785936266184, -0.0003494605771265924, -6.079655122448457e-06, -0.0010758809512481093, -0.00769271282479167, -0.027836743742227554, -0.1323457956314087, -0.48238635063171387, -0.02042931318283081, -0.04060163348913193, -2.53000545501709, -1.220338225364685, -0.047624822705984116, -8.856858039507642e-05, -1.3828182090946939e-05, -0.22595636546611786, -0.0006152882124297321, -0.0029451351147145033, -1.9192511899746023e-05, -0.0022286358289420605, -0.028144855052232742, -0.0040702130645513535, -0.0036145609337836504, -0.00010418349120300263, -1.311301275563892e-06, -4.768370445162873e-07, -2.1576648578047752e-05, -0.0004285847535356879, -0.02478213794529438, -0.587556779384613, -0.00012385078298393637, -0.05692898854613304, -0.04246455058455467, -0.07386059314012527, -1.0728830375228426e-06, -0.001064806361682713, -0.007904794998466969, -0.00030298411729745567, -0.007119523826986551, -0.0004400238685775548, 0.0, -0.11584976315498352, -0.050181061029434204, -0.6128641963005066, -0.0006805725861340761, -0.0019375376868993044, -0.04779019206762314, -0.007954585365951061, -0.2603360712528229, -0.00038580605178140104, -0.08237428963184357, -0.14525870978832245, -0.07316169142723083, -0.0004567056894302368, -0.0004220310365781188, -0.009033169597387314, -0.0002317160106031224, -0.8277879357337952, -0.005301938857883215, -0.248723566532135, -3.194758028257638e-05, -0.003119960892945528, -2.9205850296420977e-05, -0.6161965131759644, -0.0002002515539061278, -0.002571611199527979, -3.683499380713329e-05, -1.4305104514278355e-06, -0.409787118434906, -0.005521522834897041, -0.0017101438716053963, -0.0012774649076163769, -1.8715683836489916e-05, -3.4927710657939315e-05, -6.079655122448457e-06, -2.264974000354414e-06, -1.7881233361549675e-05, -2.90866428258596e-05, -0.0001255195093108341, -2.9444261599564925e-05, -8.583032467868179e-06, -0.0005227153305895627, -0.0008836655179038644, -0.00014172980445437133, -0.002684206236153841, -0.005319606978446245, -1.8596476365928538e-05, -1.5497195136049413e-06, -0.0012471048394218087, -0.7931793928146362, -0.004966067150235176, -1.4195449352264404, -0.8148295879364014, -0.33814987540245056, -0.00015448330668732524, -0.0014894831692799926, -1.1801649634435307e-05, 0.0, -0.0010378933511674404, -0.031198466196656227, -5.6622808187967166e-05, -0.00035363141796551645, -0.024956559762358665, -0.0026572179049253464, -0.00022909401741344482, -0.0019547895062714815, -0.06820345669984818, -0.010789981111884117, -0.001281036646105349, -0.00036459474358707666, -0.0002899941464420408, -0.004014885518699884, -0.0002464944263920188, -2.8015832901000977, -3.629706621170044, -0.08154376596212387, -1.264909029006958, -0.00014101465058047324, -0.5783074498176575, -0.013491053134202957, -2.0863091945648193, -0.0002087136817863211, -0.003410833887755871, -0.0042149280197918415, -0.0020942201372236013, -0.25963225960731506, -0.008198772557079792, -0.0007956438348628581, -8.904537389753386e-05, -0.00023409964342135936, -0.003454908961430192, -1.6063815355300903, -1.110680341720581, -0.0509912483394146, -0.045953914523124695, -0.003957774024456739, -0.273840069770813, -0.00010930894495686516, -2.1593809127807617, -1.1373671293258667, -0.014973743818700314, -0.9132935404777527, -1.4964756965637207, -0.049650780856609344, -0.12429561465978622, -0.06434934586286545, -0.0853089839220047, -0.00040880427695810795, -0.0314958430826664, -0.09808728098869324, -0.031471122056245804, -0.02336749993264675, -1.1920858014491387e-05, -0.019440239295363426, 0.0, -0.00010299152199877426, -0.0016771787777543068, -3.099436753473128e-06, -2.50339189733495e-06, -0.00025054652360267937, -0.00036435641231946647, -0.009792622178792953, -1.5539860725402832, -1.8234589099884033, -3.279205322265625, -0.01068372093141079, -0.1522204577922821, -0.12403439730405807, -0.5008235573768616, -0.29997894167900085, -0.9582717418670654, -0.00021169328829273582, -0.5868465900421143, -0.0087355375289917, -0.0003152588615193963, -0.2924221158027649, -0.00105015910230577, -0.7689605355262756, -0.0008678245940245688, -0.06406661868095398, -0.00021908267808612436, -0.14131788909435272, -0.0003455280384514481, -0.11340276896953583, -0.497501939535141, -3.5579442977905273, -0.22231227159500122, -0.17955102026462555, -0.4852079451084137, -0.00037555795279331505, -0.2614308297634125, -0.07996076345443726, -0.002271930454298854, -0.02661820314824581, -2.3841855067985307e-07, -2.3841855067985307e-07, -2.50339189733495e-06, -1.7523612768854946e-05, -0.00026067672297358513, -0.005800439044833183, -1.4312421083450317, -3.429753065109253, -0.014967754483222961, -0.7735219597816467, -2.341557025909424, -0.1101984903216362, -0.5607653856277466, -1.2005555629730225, -0.0001778444420779124, -0.21214589476585388, -0.43024954199790955, -1.0547153949737549, -2.264974000354414e-06, -0.00011944057769142091, -1.6689286894688848e-06, -0.01339648850262165, -4.768370445162873e-07, 0.0, -0.00012754580529872328, -0.10357927531003952, -0.0012729407753795385, -6.90197994117625e-05, -5.1973900554003194e-05, -0.016727427020668983, -0.08290363103151321, -0.00023362292267847806, -0.8017175197601318, -0.00807579979300499, -0.003889140672981739, -2.809680461883545, -0.00351204932667315], "finish_reason": "length"}], "metrics": {"energy": 855.9973676700587, "energy_per_token": 3.3437397174611667, "time": 21.640968, "time_per_token": 0.08453503125}}
