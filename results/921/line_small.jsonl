{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.01329638622701168, -0.001572206849232316, -0.0035235718823969364, -0.2957051396369934, -0.05225163698196411, -0.44339826703071594, -0.017226476222276688], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns].values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -2.2927191257476807, -0.028263647109270096, -0.014726038090884686, -0.1502605825662613, -0.009271187707781792, -3.3378546504536644e-06, -0.016302606090903282, -2.1219027985353023e-05, -1.764281842042692e-05, -0.06507498025894165, -0.00014804698002990335, -0.00696102250367403, -0.006208301056176424], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 72.93232857131957, "energy_per_token": 1.5517516717302038, "time": 3.3648386, "time_per_token": 0.07159231063829788}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 35.59653019332885, "energy_per_token": 0.8899132548332214, "time": 2.3090641, "time_per_token": 0.0577266025}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 38.82040863323212, "energy_per_token": 1.0783446842564477, "time": 2.3368833, "time_per_token": 0.06491342500000001}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns].values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -2.2927191257476807, -0.028263647109270096, -0.014726038090884686, -0.1502605825662613, -0.009271187707781792, -3.3378546504536644e-06, -0.016302606090903282, -2.1219027985353023e-05, -1.764281842042692e-05, -0.06507498025894165, -0.00014804698002990335, -0.00696102250367403, -0.006208301056176424], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>from functools import wraps", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "from", " fun", "ct", "ools", " import", " wraps", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.0615808963775635, -3.4953198432922363, -0.039112694561481476, -0.001188525347970426, -0.0002057340752799064, -1.077979564666748, -0.013925181701779366], "finish_reason": "stop"}], "metrics": {"energy": 73.48813413619993, "energy_per_token": 1.2455615955288124, "time": 3.163929, "time_per_token": 0.05362591525423729}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df[columns].copy()", "tokens": [" df", "[", "columns", "]", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -2.488706350326538, -0.03542100638151169, -0.0008316157618537545, -0.030069971457123756, -0.0021644041407853365, -0.03519062697887421, -0.009606561623513699], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.0061791567131876945, -2.7417760065873154e-05, -1.3947389561508317e-05, -0.04251379147171974, -0.0018592467531561852, -4.6132929128361866e-05, -0.0024258254561573267, -0.016156814992427826, -0.05622277408838272, -1.0967194612021558e-05, -0.039851829409599304, -0.0005509527400135994, -0.076820008456707, -0.003679055953398347], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.001001809723675251, -0.0010324153117835522, -2.3841830625315197e-06, -0.5443562865257263], "finish_reason": "stop"}], "metrics": {"energy": 63.18839277648925, "energy_per_token": 1.6202151993971603, "time": 2.1156893, "time_per_token": 0.054248443589743595}}
{"outputs": [{"text": " pd.DataFrame(data=data)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -2.9975106716156006, -0.027210606262087822, -0.29285740852355957, -0.025415142998099327], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 28.518943906784056, "energy_per_token": 0.7504985238627383, "time": 2.1135983, "time_per_token": 0.05562100789473684}}
{"outputs": [{"text": " pd.DataFrame.from_dict(data)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -2.200721263885498, -0.0005678709712810814, -0.0014016337227076292, -0.004034475889056921, -0.0032150268089026213, -0.007085316348820925, -0.30011802911758423, -0.028169311583042145], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns].values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -2.2927191257476807, -0.028263647109270096, -0.014726038090884686, -0.1502605825662613, -0.009271187707781792, -3.3378546504536644e-06, -0.016302606090903282, -2.1219027985353023e-05, -1.764281842042692e-05, -0.06507498025894165, -0.00014804698002990335, -0.00696102250367403, -0.006208301056176424], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 71.88653826141358, "energy_per_token": 1.40953996591007, "time": 2.7577603, "time_per_token": 0.054073731372549026}}
{"outputs": [{"text": " pd.DataFrame.from_dict(data, orient='index')", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ",", " orient", "='", "index", "')", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -2.200721263885498, -0.0005678709712810814, -0.0014016337227076292, -0.004034475889056921, -0.0032150268089026213, -0.007085316348820925, -1.365206241607666, -0.10441490262746811, -0.29577502608299255, -0.18955719470977783, -0.12306471168994904, -0.2326246201992035], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -2.860436201095581, -0.000626367807853967, -0.19111818075180054, -0.004365794360637665], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0010721894213929772, -0.0010202685371041298, -2.622600959512056e-06, -0.48699435591697693], "finish_reason": "stop"}], "metrics": {"energy": 39.23902090835571, "energy_per_token": 0.9342624025798979, "time": 2.3274963, "time_per_token": 0.05541657857142857}}
{"outputs": [{"text": " pd.DataFrame.from_dict(data, orient='index')", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ",", " orient", "='", "index", "')", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -2.200721263885498, -0.0005678709712810814, -0.0014016337227076292, -0.004034475889056921, -0.0032150268089026213, -0.007085316348820925, -1.365206241607666, -0.10441490262746811, -0.29577502608299255, -0.18955719470977783, -0.12306471168994904, -0.2326246201992035], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>#!/usr/bin/env python3", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.386577844619751, -1.1743111610412598, -0.0421597920358181, -0.08119276165962219, -0.00019643761334009469, -0.003477836726233363, -0.0003541081096045673, -0.05678156763315201, -0.003197083715349436, -0.8105828762054443, -0.02081245556473732], "finish_reason": "stop"}], "metrics": {"energy": 66.86940834426879, "energy_per_token": 1.1144901390711466, "time": 3.1654556, "time_per_token": 0.05275759333333333}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 69.38848734283447, "energy_per_token": 1.9274579817454018, "time": 2.1212757, "time_per_token": 0.058924325}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>#!/usr/bin/env python", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.386577844619751, -1.1743111610412598, -0.0421597920358181, -0.08119276165962219, -0.00019643761334009469, -0.003477836726233363, -0.0003541081096045673, -0.05678156763315201, -0.003197083715349436, -0.59220290184021], "finish_reason": "stop"}], "metrics": {"energy": 64.29757068634034, "energy_per_token": 1.2607366801243203, "time": 2.752098, "time_per_token": 0.05396270588235295}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>\"\"\"", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -2.753819704055786, -0.013680507428944111, -0.0010742137674242258, -0.00045563330058939755, -0.1455889642238617], "finish_reason": "stop"}], "metrics": {"energy": 41.709956877708436, "energy_per_token": 0.926887930615743, "time": 2.5417538, "time_per_token": 0.056483417777777774}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>import functools", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "import", " fun", "ct", "ools", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.2760355472564697, -4.531833648681641, -0.021750833839178085, -0.00016175392374861985, -0.03562165051698685], "finish_reason": "stop"}], "metrics": {"energy": 41.60936569404602, "energy_per_token": 0.9045514281314352, "time": 2.541499, "time_per_token": 0.05524997826086957}}
{"outputs": [{"text": " pd.DataFrame.from_dict(data)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -2.200721263885498, -0.0005678709712810814, -0.0014016337227076292, -0.004034475889056921, -0.0032150268089026213, -0.007085316348820925, -0.30011802911758423, -0.028169311583042145], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 30.09616926574707, "energy_per_token": 0.7524042316436768, "time": 2.116855, "time_per_token": 0.05292137500000001}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>import json", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "import", " json", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.2760355472564697, -3.905367851257324, -0.021651096642017365], "finish_reason": "stop"}], "metrics": {"energy": 34.93975342178345, "energy_per_token": 0.794085305040533, "time": 2.329373, "time_per_token": 0.052940295454545455}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 29.72247480583191, "energy_per_token": 0.7430618701457978, "time": 2.1099663, "time_per_token": 0.0527491575}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df[columns].copy()", "tokens": [" df", "[", "columns", "]", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -2.488706350326538, -0.03542100638151169, -0.0008316157618537545, -0.030069971457123756, -0.0021644041407853365, -0.03519062697887421, -0.009606561623513699], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.0061791567131876945, -2.7417760065873154e-05, -1.3947389561508317e-05, -0.04251379147171974, -0.0018592467531561852, -4.6132929128361866e-05, -0.0024258254561573267, -0.016156814992427826, -0.05622277408838272, -1.0967194612021558e-05, -0.039851829409599304, -0.0005509527400135994, -0.076820008456707, -0.003679055953398347], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.001001809723675251, -0.0010324153117835522, -2.3841830625315197e-06, -0.5443562865257263], "finish_reason": "stop"}], "metrics": {"energy": 74.07990692520141, "energy_per_token": 1.722788533144219, "time": 2.3310866, "time_per_token": 0.05421131627906976}}
{"outputs": [{"text": " pd.DataFrame.from_dict(data)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -2.200721263885498, -0.0005678709712810814, -0.0014016337227076292, -0.004034475889056921, -0.0032150268089026213, -0.007085316348820925, -0.30011802911758423, -0.028169311583042145], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06], "finish_reason": "stop"}], "metrics": {"energy": 38.613201899528505, "energy_per_token": 0.9900820999879104, "time": 2.323577, "time_per_token": 0.05957889743589743}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 74.25900343322755, "energy_per_token": 2.062750095367432, "time": 2.1210983, "time_per_token": 0.05891939722222222}}
{"outputs": [{"text": " pd.DataFrame(data, columns=list(columns))", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "list", "(", "columns", "))", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -2.963214874267578, -0.0009857324184849858, -2.0197482109069824, -0.015768833458423615, -0.02180752158164978], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 68.80435202026366, "energy_per_token": 1.6381988576253252, "time": 2.331375, "time_per_token": 0.05550892857142857}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>import pandas as pd", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.2760355472564697, -1.5374126434326172, -0.020380256697535515, -0.001800108002498746, -0.0039008965250104666], "finish_reason": "stop"}], "metrics": {"energy": 44.90242775917053, "energy_per_token": 0.8980485551834105, "time": 2.7541099, "time_per_token": 0.055082198}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 60.18148159027099, "energy_per_token": 1.5045370397567748, "time": 2.1185787, "time_per_token": 0.0529644675}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -2.860436201095581, -0.000626367807853967, -0.19111818075180054, -0.004365794360637665], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>#!/usr/bin/env python", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.0010721894213929772, -0.0010202685371041298, -2.622600959512056e-06, -1.4587026834487915, -2.3841855067985307e-07, -4.768370445162873e-07, -2.6464111215318553e-05, -0.00011252723925281316, -0.056476183235645294, -1.3476758003234863, -1.1750731468200684, -0.04791189730167389, -0.07799391448497772, -0.00025686301523819566, -0.00247077620588243, -0.00040070133400149643, -0.06920677423477173, -0.0035569514147937298, -0.5441635847091675], "finish_reason": "stop"}], "metrics": {"energy": 56.21454669570923, "energy_per_token": 1.060651824447344, "time": 2.7409806, "time_per_token": 0.05171661509433962}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 37.56357607269287, "energy_per_token": 1.043432668685913, "time": 2.1113117, "time_per_token": 0.05864754722222222}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>\"\"\"", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -2.753819704055786, -0.013680507428944111, -0.0010742137674242258, -0.00045563330058939755, -0.1455889642238617], "finish_reason": "stop"}], "metrics": {"energy": 71.68861906433104, "energy_per_token": 1.5930804236518008, "time": 2.5276208, "time_per_token": 0.056169351111111106}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 35.48857778263091, "energy_per_token": 0.9857938272953031, "time": 2.1274185, "time_per_token": 0.059094958333333336}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -1.4591882228851318, -0.09062319248914719, -0.04443438723683357, -0.07133094221353531, -0.01120878104120493, -0.018702823668718338], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>from pandas import Series, DataFrame", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "from", " pandas", " import", " Series", ",", " Data", "Frame", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.0615808963775635, -4.871250629425049, -0.15536819398403168, -1.457702398300171, -0.731547474861145, -0.14254391193389893, -0.0001481661747675389, -0.10787524282932281], "finish_reason": "stop"}], "metrics": {"energy": 53.75608645534515, "energy_per_token": 1.0142657821763235, "time": 2.7489188, "time_per_token": 0.051866392452830194}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns].values.reshape(-1, 1))", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -2.2927191257476807, -0.028263647109270096, -0.014726038090884686, -0.1502605825662613, -0.009271187707781792, -3.3378546504536644e-06, -0.016302606090903282, -2.1219027985353023e-05, -1.764281842042692e-05, -0.06507498025894165, -0.00014804698002990335, -0.00696102250367403, -0.006208301056176424], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -0.5382870435714722], "finish_reason": "stop"}], "metrics": {"energy": 41.53516387557983, "energy_per_token": 0.8837268909697837, "time": 2.5315747, "time_per_token": 0.053863291489361705}}
{"outputs": [{"text": " pd.DataFrame(data=data)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -2.9975106716156006, -0.027210606262087822, -0.29285740852355957, -0.025415142998099327], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy<|endoftext|>import time", "tokens": [" df", "_", "copy", "<", "|", "end", "of", "text", "|>", "import", " time", "\n"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06, -1.2527016401290894, -2.3841855067985307e-07, -4.768370445162873e-07, -3.71926071238704e-05, -9.870042413240299e-05, -0.06927218288183212, -1.2760355472564697, -3.850522994995117, -0.10683469474315643], "finish_reason": "stop"}], "metrics": {"energy": 86.76896712875366, "energy_per_token": 1.8862818941033404, "time": 2.5580564, "time_per_token": 0.05560992173913043}}
{"outputs": [{"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.011904976330697536, -0.0013806821079924703, -0.0036802436225116253, -0.2696433663368225, -0.05084725841879845, -0.43853357434272766, -0.020186107605695724], "finish_reason": "stop"}, {"text": " MinMaxScaler()", "tokens": [" Min", "Max", "Scal", "er", "()", "\n"], "logprobs": [-0.0011232740944251418, -9.07141511561349e-05, -7.962863310240209e-05, -8.821448318485636e-06, -0.028716662898659706, -0.0031144944950938225], "finish_reason": "stop"}, {"text": " df.copy()", "tokens": [" df", ".", "copy", "()", "\n"], "logprobs": [-0.0026976405642926693, -0.10094815492630005, -0.0015475689433515072, -0.02706396020948887, -0.0013956816401332617], "finish_reason": "stop"}, {"text": " scaler.fit_transform(df_copy[columns])", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "df", "_", "copy", "[", "columns", "])", "\n"], "logprobs": [-0.006397008430212736, -2.038458114839159e-05, -1.3828182090946939e-05, -0.04278749227523804, -0.0020093980710953474, -5.745722592109814e-05, -0.0025348695926368237, -0.01634940132498741, -0.06152605637907982, -2.0861407392658293e-05, -0.03781496733427048, -0.0004984090337529778, -0.10877817869186401, -0.004151536151766777], "finish_reason": "stop"}, {"text": " df_copy", "tokens": [" df", "_", "copy"], "logprobs": [-0.0012494861148297787, -0.0010456338059157133, -2.3841830625315197e-06], "finish_reason": "stop"}], "metrics": {"energy": 32.59110558128357, "energy_per_token": 0.9311744451795306, "time": 2.1133926, "time_per_token": 0.06038264571428572}}
