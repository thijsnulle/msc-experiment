{"outputs": [{"text": "json_file_list = []\n\n    # Get all file names from directory\n    for root, dirs, files in os.walk(json_dir_path):\n        for filename in files:\n            if \".json\" in filename:\n                json_file_list.append(os.path.join(root, filename))\n\n    df_list = []\n    for json_file in json_file_list:\n        with open(json_file) as f:\n            data = json.load(f)\n        df_list.append(data['text'])\n    df = pd.DataFrame(df_list)\n    text_column = df[0]\n    text_column = text_column.astype(str)\n    text_column = text_column.str.replace(r'\\W+', ' ')\n    text_column = text_column.str.replace(r'\\d+', '')\n    text_column = text_column.str.split()\n    text_column = text_column.explode()\n    text_column = text_column.apply(lambda x: x.strip())\n", "tokens": ["json", "_", "file", "_", "list", " =", " []", "\n", "\n", "    ", "#", " Get", " all", " file", " names", " from", " directory", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "json", "_", "dir", "_", "path", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "if", " \"", ".", "json", "\"", " in", " filename", ":", "\n", "                ", "json", "_", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", "))", "\n", "\n", "    ", "df", "_", "list", " =", " []", "\n", "    ", "for", " json", "_", "file", " in", " json", "_", "file", "_", "list", ":", "\n", "        ", "with", " open", "(", "json", "_", "file", ")", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "        ", "df", "_", "list", ".", "append", "(", "data", "['", "text", "'])", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "df", "_", "list", ")", "\n", "    ", "text", "_", "column", " =", " df", "[", "0", "]", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "str", ".", "replace", "(", "r", "'\\", "W", "+'", ",", " '", " '", ")", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "str", ".", "replace", "(", "r", "'\\", "d", "+'", ",", " '", "')", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "str", ".", "split", "()", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "expl", "ode", "()", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "apply", "(", "lambda", " x", ":", " x", ".", "strip", "())", "\n"], "logprobs": [-2.829545497894287, -0.035075075924396515, -1.2443923950195312, -0.08075686544179916, -1.616876482963562, -0.006297624669969082, -1.6616488695144653, -0.028860287740826607, -2.2575795650482178, -0.0008878341759555042, -1.3948991298675537, -2.084073781967163, -0.9222524762153625, -3.3970870971679688, -0.7329277396202087, -0.6419723629951477, -2.668269395828247, -0.10711169242858887, -0.0016815820708870888, -0.08429025113582611, -1.832680344581604, -0.008872490376234055, -0.13217994570732117, -0.008855239488184452, -0.0004259632551111281, -0.04991130530834198, -0.0006276782951317728, -0.0008986725588329136, -7.152555099310121e-07, -4.291525328881107e-06, -0.00027640812913887203, -0.005499590653926134, -9.894321920000948e-06, -5.9126061387360096e-05, -9.858122211880982e-05, -5.960462772236497e-07, -0.07072646915912628, -0.004038750194013119, -0.008025778457522392, -0.02283620275557041, -2.1763501167297363, -0.0013778250431641936, -0.00041654970846138895, -0.0007624103454872966, -0.004485426936298609, -0.003718368476256728, -1.6856505870819092, -2.863819122314453, -0.2501428723335266, -0.04869849234819412, -0.00027843413408845663, -0.10253704339265823, -0.012058692052960396, -0.061182644218206406, -0.03938549384474754, -0.002544144168496132, -0.13615280389785767, -0.00067473528906703, -0.009683776646852493, -0.011715891771018505, -0.02211504802107811, -0.00781265739351511, -0.00042906138696707785, -0.00417088670656085, -0.602039635181427, -1.2874520507466514e-05, -0.0018410414922982454, -7.152555099310121e-07, -0.024777136743068695, -0.00010823617776622996, -0.030218258500099182, -0.000196556793525815, -0.025698209181427956, -0.0009650102583691478, -0.0023372257128357887, -0.06458942592144012, -0.005021934863179922, -3.0164949893951416, -1.905509352684021, -0.6231849789619446, -0.016350222751498222, -0.07568925619125366, -0.02460908144712448, -0.6505123972892761, -0.46496352553367615, -0.627982497215271, -0.01454817783087492, -0.20225894451141357, -0.3590136468410492, -0.0020719743333756924, -2.0265558760002023e-06, -2.264974000354414e-06, -8.344646857949556e-07, -2.3841855067985307e-07, -0.0023344901856034994, -0.011715774424374104, -0.048253078013658524, -0.5851876735687256, -0.002184625482186675, -0.0018087946809828281, -0.004762852564454079, -4.3748852476710454e-05, -3.194758028257638e-05, -0.9010446667671204, -0.0002857038634829223, -0.23203080892562866, -0.039521750062704086, -0.010182339698076248, -0.005967774894088507, -0.9112740755081177, -0.06999769806861877, -0.00644817715510726, -4.446407547220588e-05, -0.019404230639338493, -3.802703940891661e-05, -0.0002711643755901605, -0.0061093722470104694, -0.012862102128565311, -1.6546216011047363, -0.2942512035369873, -0.9300596714019775, -0.10299000889062881, -0.0036137294955551624, -0.00036149643710814416, -0.01198896300047636, -1.181931972503662, -2.114109992980957, -0.0036916458047926426, -0.03050968237221241, -0.01168761495500803, -2.1475985050201416, -0.35883763432502747, -0.047503307461738586, -0.0027366350404918194, -6.9141146923357155e-06, -0.25572842359542847, -0.38936105370521545, -0.1983032524585724, -0.0001161031104857102, -7.510157047363464e-06, -1.9135994911193848, -0.027039825916290283, -0.959571123123169, -1.7592723369598389, -0.8648157715797424, -3.350235939025879, -0.08965346217155457, -0.17485983669757843, -0.30739346146583557, -0.5263426303863525, -0.000341476290486753, -0.05552823841571808, -0.44989144802093506, -1.0411301851272583, -0.06605689227581024, -0.40213075280189514, -0.5609544515609741, -0.06745312362909317, -3.2186455882765586e-06, -3.576272320060525e-06, -0.006983041297644377, -2.0660107135772705, 0.0, -0.1842605471611023, -0.013158862479031086, -0.0008173224050551653, -0.11586686223745346, -0.2534199655056, -0.743026614189148, -0.06650024652481079, -0.21122010052204132, -0.12024039030075073, -0.027570517733693123, -9.536738616588991e-07, -1.9311717551317997e-05, -0.013902610167860985, -0.04199943318963051, -0.0001456631434848532, -1.5220837593078613, -0.22061780095100403, -0.20936758816242218, -1.7796118259429932, -0.2368742674589157, -0.09571900218725204, -0.0007074952009133995, -0.11254926770925522, -0.0017766657983884215, -1.2583703994750977, -0.2105468064546585, -0.11000308394432068, -0.22681540250778198, -0.018020479008555412, -0.04322301596403122, -0.023796897381544113, -0.007178348954766989, -5.960462772236497e-07, -5.960462772236497e-07, -0.0008648469229228795, -0.01563047431409359, -6.294052582234144e-05, -1.510044813156128, -0.13641826808452606, -0.020350003615021706, -0.13519148528575897, -0.14722295105457306, -0.065890833735466, -5.4596363042946905e-05, -0.00829087384045124, -0.07869164645671844, -0.017721880227327347, -0.045874327421188354, -0.11723855137825012, -0.008836215361952782, -0.024386553093791008, -0.009998711757361889, -0.004586059134453535, -1.4305104514278355e-06, -2.038458114839159e-05, -0.00067473528906703, -0.04132925719022751, -5.9126061387360096e-05, -0.8462316393852234, -0.07235641032457352, -0.04981808364391327, -0.08535539358854294, -0.6285515427589417, -0.00505455257371068, -0.02434583380818367, -0.011156558059155941, -0.0588437058031559, -1.6689286894688848e-06, -5.924526340095326e-05, -0.00028427375946193933, -0.08089222013950348, -2.50339189733495e-06, -0.027432043105363846, -0.07186084240674973, -0.12448257207870483, -0.4044085144996643, -0.0008456706418655813, -0.010465267114341259, -0.01702597178518772, -0.00346666993573308, -5.960462772236497e-07, -1.1920922133867862e-06, -0.016198337078094482, -2.897632122039795, -0.0009684640099294484, -0.10753186792135239, -0.007943586446344852, -0.008930975571274757, -0.03182419389486313, -0.014084229245781898, -0.6589934229850769, -0.1416412740945816, -0.0070878020487725735], "finish_reason": "length"}], "metrics": {"energy": 1074.3699946994775, "energy_per_token": 4.196757791794834, "time": 28.419115, "time_per_token": 0.11101216796875}}
{"outputs": [{"text": "json_dir = os.fsencode(json_dir_path)\n\n    counter_obj = Counter()\n    for json_file in os.listdir(json_dir):\n        path = os.path.join(json_dir, json_file)\n        if os.path.isfile(path):\n            with open(path, \"rb\") as json_file_obj:\n                json_data = json.load(json_file_obj)\n                text_list = json_data.get(\"text\").split()\n                for word in text_list:\n                    counter_obj.update([word])\n\n    # Use the most common method to get the top n frequent words and their counts\n    most_common = counter_obj.most_common(word_count)\n\n    return most_common", "tokens": ["json", "_", "dir", " =", " os", ".", "fs", "encode", "(", "json", "_", "dir", "_", "path", ")", "\n", "\n", "    ", "counter", "_", "obj", " =", " Counter", "()", "\n", "    ", "for", " json", "_", "file", " in", " os", ".", "list", "dir", "(", "json", "_", "dir", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "json", "_", "dir", ",", " json", "_", "file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "            ", "with", " open", "(", "path", ",", " \"", "rb", "\"", ")", " as", " json", "_", "file", "_", "obj", ":", "\n", "                ", "json", "_", "data", " =", " json", ".", "load", "(", "json", "_", "file", "_", "obj", ")", "\n", "                ", "text", "_", "list", " =", " json", "_", "data", ".", "get", "(", "\"", "text", "\"", ")", ".", "split", "()", "\n", "                ", "for", " word", " in", " text", "_", "list", ":", "\n", "                ", "    ", "counter", "_", "obj", ".", "update", "([", "word", "])", "\n", "\n", "    ", "#", " Use", " the", " most", " common", " method", " to", " get", " the", " top", " n", " frequent", " words", " and", " their", " counts", "\n", "    ", "most", "_", "common", " =", " counter", "_", "obj", ".", "most", "_", "common", "(", "word", "_", "count", ")", "\n", "\n", "    ", "return", " most", "_", "common", "\n", "\n", "def"], "logprobs": [-2.843881845474243, -0.03998080641031265, -3.6064555644989014, -1.2687491178512573, -0.9827176332473755, -7.10462118149735e-05, -1.0517621040344238, -0.006305324379354715, -0.0001740304142003879, -0.003901965217664838, -0.000161038784426637, -5.173549288883805e-05, -0.00022182388056535274, -4.291525328881107e-06, -0.0006680640508420765, -0.04252830147743225, -1.5627105236053467, -0.0008033862104639411, -3.296328544616699, -2.5541532039642334, -1.903716802597046, -0.007159411441534758, -0.00830872543156147, -0.015324468724429607, -0.014660254120826721, -0.7886741161346436, -0.0715329498052597, -1.3048534393310547, -0.01894054003059864, -0.1144866868853569, -0.11211009323596954, -0.024819349870085716, -4.0531076592742465e-06, -0.000532008707523346, 0.0, -2.7417760065873154e-05, -0.0005133026279509068, -2.7418097943154862e-06, -9.524368942948058e-05, -0.012519342824816704, -0.004720970522612333, -0.022109800949692726, -3.013091564178467, -0.1071401834487915, -0.0013862771447747946, -5.8412379075889476e-06, -0.035072311758995056, -1.0728830375228426e-06, -4.303362584323622e-05, -6.544376083184034e-05, -0.0012360322289168835, -2.145764938177308e-06, -0.000380324519937858, -0.09557925164699554, -0.0038785722572356462, -3.3378546504536644e-06, -1.1920922133867862e-06, -0.00010918975021922961, -0.004413388203829527, -0.11504159867763519, -1.4025447368621826, -0.05227313190698624, -5.722029527532868e-06, -0.0001110968878492713, 0.0, -0.0005745429079979658, -0.012323309667408466, -0.0003449321957305074, -0.000878663151524961, -0.11131522059440613, -0.003896028036251664, -0.009968851692974567, -0.3357517719268799, -0.0014424644177779555, -0.0015947017818689346, -0.11716677248477936, -0.1385812610387802, -1.6450870037078857, -1.2665281295776367, -0.0029933906625956297, -0.006980555597692728, -0.00040725519647821784, -1.952255129814148, -0.11063071340322495, -0.8425095081329346, -0.9266753792762756, -0.9318403601646423, -0.0018919678404927254, -0.005041624419391155, -0.0027196346782147884, -1.0135421752929688, -0.002557461615651846, -0.5683799982070923, -0.02991275116801262, -0.01978028565645218, -0.01244246494024992, -0.025993624702095985, -9.643566590966657e-05, -0.0007936188485473394, -1.2040065485052764e-05, -2.0265558760002023e-06, -7.10462118149735e-05, -3.576278118089249e-07, -0.04361886903643608, -0.007625281810760498, -0.2098827213048935, -1.2290582656860352, -0.9068401455879211, -2.743422269821167, -0.013929061591625214, -0.35596340894699097, -7.414542778860778e-05, -9.667406266089529e-05, -1.8379430770874023, -0.0702657550573349, -0.21656766533851624, -0.0026694636326283216, -0.005637697875499725, -0.006186857353895903, -0.4142604470252991, -0.13638539612293243, -0.05951932072639465, -0.4980403482913971, -0.027670709416270256, -0.06669631600379944, -1.9688400030136108, -0.6817591786384583, -0.011554817669093609, -0.0057305097579956055, -2.145764938177308e-06, 0.0, -0.0014761515194550157, -0.002660308964550495, -0.0004744596080854535, -0.002148107625544071, -0.10125782340765, -4.577531944960356e-05, -5.519237674889155e-05, -1.3969759941101074, -0.00016342257731594145, -0.2557920217514038, -0.004125774838030338, -0.030895108357071877, -0.004472016356885433, -0.16412100195884705, -0.003096311818808317, -3.400590181350708, -4.810747146606445, -1.494396686553955, -0.18650710582733154, -1.9715967178344727, -0.6730812191963196, -0.6510142683982849, -0.865104615688324, -0.32921814918518066, -1.146766185760498, -1.6102006435394287, -3.47643780708313, -0.03489791974425316, -1.536221981048584, -0.07974900305271149, -0.05414991080760956, -0.13871969282627106, -0.0023683852050453424, -0.4627555310726166, -0.0019209994934499264, -0.06966285407543182, -1.152724266052246, -0.026109419763088226, -4.184158387943171e-05, -0.0001805857609724626, -2.8371408916427754e-05, -3.6954811548639555e-06, -5.960462772236497e-07, -2.3841855067985307e-07, -0.031910333782434464, -0.04205041006207466, -2.4437606043647975e-05, -2.1934269170742482e-05, -0.0019062458304688334, -0.004624742548912764, -0.520471453666687, -0.0003718638326972723, -0.3798185884952545, -0.024089498445391655, -7.271740287251305e-06, -5.722029527532868e-06, -0.2659902274608612, -0.00813858862966299, -0.5805683732032776], "finish_reason": "stop"}], "metrics": {"energy": 678.7063671474456, "energy_per_token": 3.5721387744602398, "time": 15.975068, "time_per_token": 0.08407930526315789}}
{"outputs": [{"text": "# create a list to store the text content of each JSON file\n    text_list = []\n\n    # loop through all the JSON files in the directory\n    for file_name in os.listdir(json_dir_path):\n        # check if the file is a JSON file\n        if file_name.endswith(\".json\"):\n            # read the JSON file\n            with open(os.path.join(json_dir_path, file_name), \"r\") as f:\n                json_data = json.load(f)\n            # get the text content from the JSON data\n            text = json_data[\"text\"]\n            # add the text content to the list\n            text_list.append(text)\n\n    # concatenate all the text contents into a single string\n    text_concatenated = \" \".join(text_list)\n\n    # split the concatenated text into a list of words\n    # this is done by separating the words at the whitespace characters\n    words = text_concatenated.split()\n\n    # count the occurrence of each word using Counter from collections\n", "tokens": ["#", " create", " a", " list", " to", " store", " the", " text", " content", " of", " each", " JSON", " file", "\n", "    ", "text", "_", "list", " =", " []", "\n", "\n", "    ", "#", " loop", " through", " all", " the", " JSON", " files", " in", " the", " directory", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "json", "_", "dir", "_", "path", "):", "\n", "        ", "#", " check", " if", " the", " file", " is", " a", " JSON", " file", "\n", "        ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "\"", ".", "json", "\"", "):", "\n", "            ", "#", " read", " the", " JSON", " file", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "json", "_", "dir", "_", "path", ",", " file", "_", "name", ")", ",", " \"", "r", "\"", ")", " as", " f", ":", "\n", "                ", "json", "_", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "#", " get", " the", " text", " content", " from", " the", " JSON", " data", "\n", "            ", "text", " =", " json", "_", "data", "[", "\"", "text", "\"", "]", "\n", "            ", "#", " add", " the", " text", " content", " to", " the", " list", "\n", "            ", "text", "_", "list", ".", "append", "(", "text", ")", "\n", "\n", "    ", "#", " concaten", "ate", " all", " the", " text", " contents", " into", " a", " single", " string", "\n", "    ", "text", "_", "concat", "en", "ated", " =", " \"", " \"", ".", "join", "(", "text", "_", "list", ")", "\n", "\n", "    ", "#", " split", " the", " concaten", "ated", " text", " into", " a", " list", " of", " words", "\n", "    ", "#", " this", " is", " done", " by", " separating", " the", " words", " at", " the", " whites", "pace", " characters", "\n", "    ", "words", " =", " text", "_", "concat", "en", "ated", ".", "split", "()", "\n", "\n", "    ", "#", " count", " the", " occurrence", " of", " each", " word", " using", " Counter", " from", " collections", "\n"], "logprobs": [-1.1805613040924072, -3.8351423740386963, -1.5579259395599365, -0.7527563571929932, -0.7428653240203857, -0.2833479344844818, -0.8583874106407166, -0.4970443546772003, -0.6555625200271606, -2.034637212753296, -0.8272925615310669, -0.3753534257411957, -0.0033257671166211367, -0.02082214690744877, -0.0012421043356880546, -0.49498462677001953, -0.31791043281555176, -0.3582371175289154, -0.004754784516990185, -0.005205648019909859, -0.0005005536950193346, -0.572394073009491, -0.0003864018653985113, -0.01088785845786333, -1.0812121629714966, -0.12871311604976654, -0.19888165593147278, -0.4231555759906769, -0.6314538717269897, -0.003471184289082885, -0.0056675695814192295, -0.0020649556536227465, -0.8080422282218933, -0.18620820343494415, -0.0002019201492657885, -0.011763726361095905, -0.4525248408317566, -1.3566268682479858, -0.03404209017753601, -0.0009990707039833069, -0.007042466197162867, -1.585470999998506e-05, -0.000954768096562475, 0.0, -0.0001212284987559542, -0.0015712546883150935, -1.2159273865108844e-05, -6.55629628454335e-05, -8.129743218887597e-05, -1.1920928244535389e-07, -0.0005913416389375925, -0.0012032896047458053, -0.01242292020469904, -2.4407193660736084, -0.38513070344924927, -0.022524002939462662, -0.03526347503066063, -0.03695600479841232, -0.15631338953971863, -0.005904612597078085, -0.023881753906607628, -0.0008998635457828641, -0.04361692816019058, -0.000342191313393414, -0.0025181034579873085, -0.04131278768181801, -3.2186455882765586e-06, 0.0, -0.0010550415609031916, -0.0037049478851258755, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.5141351222991943, -0.00039152585668489337, -0.009087747894227505, -0.0003781795676331967, -4.768360213347478e-06, -0.004081254359334707, -0.0003079893649555743, -0.004045636393129826, -0.06055864691734314, -0.880366325378418, -0.009634071961045265, -0.3109901547431946, -0.08524220436811447, -0.9187358617782593, -0.0002115741081070155, -0.13064105808734894, -0.00018451895448379219, -0.001077786204405129, -0.13563333451747894, -2.9802276912960224e-06, -1.3351351299206726e-05, -5.960462772236497e-07, -6.19869097135961e-05, -2.0861407392658293e-05, -0.00028772983932867646, -6.198863957251888e-06, -2.264974000354414e-06, -1.1444026313256472e-05, -9.536738616588991e-07, -8.725739462533966e-05, -0.0029639145359396935, -2.622600959512056e-06, -7.152555099310121e-07, -0.17869244515895844, -8.010543388081715e-05, -0.6094881892204285, -0.006561757531017065, -0.0007440659101121128, -0.13915760815143585, -9.297892393078655e-05, -0.3422968089580536, -0.009009069763123989, -0.0009217780898325145, -0.0008704449282959104, -2.213487148284912, -0.00043561504571698606, -0.13517357409000397, -0.0006967739318497479, -0.0027751526795327663, -2.9802276912960224e-06, -0.007458104752004147, -1.1205610462639015e-05, -0.000102037942269817, -0.0011972171487286687, -0.003256615251302719, -0.933900773525238, -0.013570908457040787, -2.6140549182891846, -0.006586272269487381, -0.08801623433828354, -0.025286249816417694, -0.08769480139017105, -0.008913962170481682, -0.054996948689222336, -1.5848169326782227, -0.16995365917682648, -0.0029685499612241983, -0.11798211932182312, -0.2274560034275055, -0.008351403288543224, -2.1457441107486375e-05, -2.0265558760002023e-06, -0.42792901396751404, -0.002410484477877617, -0.0034785496536642313, -6.532455881824717e-05, -0.00015817821258679032, -0.01262693852186203, -0.01500298548489809, -0.05594799295067787, -0.4238915741443634, -0.006747201085090637, -0.004003487061709166, -0.35855215787887573, -0.0005443998379632831, -0.0009049849468283355, -0.10042019933462143, -0.025485800579190254, -0.00021002470748499036, -0.004309771116822958, -5.090107151772827e-05, -1.5139465176616795e-05, -0.0012954423436895013, -0.004135153256356716, -0.0007587176514789462, -0.0007672941428609192, -0.005093692801892757, -0.00016330339713022113, -0.022227561101317406, -0.003954092971980572, -0.005338223185390234, -1.4074630737304688, -9.48860906646587e-05, -0.18293483555316925, -0.0059081679210066795, -0.02219654805958271, -1.6029777526855469, -0.07585690170526505, -0.09540599584579468, -0.005352570675313473, -0.02180122211575508, -0.07524078339338303, -0.00011097769311163574, -0.4655645787715912, -0.45100510120391846, -2.610389232635498, -1.4588037729263306, -0.09373030066490173, -0.0027765792328864336, -0.06773189455270767, -0.049406979233026505, -0.0006381620769388974, -3.302042750874534e-05, -0.0022697895765304565, -0.002027838258072734, -0.00040415700641460717, -9.059865078597795e-06, -0.00013016807497479022, -0.0019132657907903194, -0.25799015164375305, -0.0002696150622796267, -0.0009870424401015043, -0.4824090898036957, -0.0030914393719285727, -1.1710166931152344, -0.0001137191939051263, -0.8814109563827515, -0.1384083479642868, -1.1005423069000244, -0.0010344398906454444, -0.0009883524617180228, -0.03049580566585064, -0.11937757581472397, -0.00014161060971673578, -3.114152669906616, -3.6771163940429688, -2.5373940467834473, -1.3598146438598633, -0.27664798498153687, -3.1167032718658447, -0.6063358783721924, -0.810285210609436, -1.0516830682754517, -1.9020662307739258, -1.462817907333374, -0.15106117725372314, -0.6617889404296875, -0.3733755648136139, -0.0016872945707291365, -1.5793132781982422, -0.3932647109031677, -0.010750710032880306, -4.768360213347478e-06, -2.8729025871143676e-05, -1.1920928244535389e-07, -2.3841830625315197e-06, -4.434487345861271e-05, -0.0013078240444883704, -0.004209942650049925, -0.0011394681641831994, -0.01901867613196373, -0.00019810620869975537, -0.001809746609069407, -0.7709060907363892, -0.01086262334138155, -2.1067991256713867, -0.001255677198059857, -0.0019395602867007256, -0.018379148095846176, -1.0406073331832886, -1.3578393459320068, -1.1397151947021484, -0.4903853237628937, -1.0191799402236938], "finish_reason": "length"}], "metrics": {"energy": 866.928488415718, "energy_per_token": 3.3864394078738984, "time": 21.643356, "time_per_token": 0.084544359375}}
{"outputs": [{"text": "df = pd.DataFrame()\n    for file in os.listdir(json_dir_path):\n        if file.endswith(\".json\"):\n            with open(json_dir_path + '/' + file, \"r\", encoding=\"UTF-8\") as f:\n                json_data = json.load(f)\n                df = pd.concat([df, pd.DataFrame.from_records(json_data)])\n    word_counter = Counter()\n    for word in df.text.str.split(expand=True).unstack():\n        word_counter[word] += 1\n    return word_counter.most_common(word_count)\n\nclass TestTaskFunc(unittest.TestCase):\n    def setUp(self):\n        self.fake_data_1 = {\"text\": \"Top visit morning price certainly indicate time. Figure add cold behind customer also.\"}\n        self.fake_data_2 = {\"text\": \"Itself to current listen. Cover add will feeling head. Perform family affect reduce political general.\"}\n\n    def test_task_func(self):\n", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "json", "_", "dir", "_", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "json", "\"", "):", "\n", "            ", "with", " open", "(", "json", "_", "dir", "_", "path", " +", " '/", "'", " +", " file", ",", " \"", "r", "\"", ",", " encoding", "=", "\"", "UTF", "-", "8", "\"", ")", " as", " f", ":", "\n", "                ", "json", "_", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "df", " =", " pd", ".", "concat", "([", "df", ",", " pd", ".", "DataFrame", ".", "from", "_", "records", "(", "json", "_", "data", ")]", ")", "\n", "    ", "word", "_", "counter", " =", " Counter", "()", "\n", "    ", "for", " word", " in", " df", ".", "text", ".", "str", ".", "split", "(", "expand", "=", "True", ")", ".", "un", "stack", "():", "\n", "        ", "word", "_", "counter", "[", "word", "]", " +=", " ", "1", "\n", "    ", "return", " word", "_", "counter", ".", "most", "_", "common", "(", "word", "_", "count", ")", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "    ", "def", " set", "Up", "(", "self", "):", "\n", "        ", "self", ".", "fake", "_", "data", "_", "1", " =", " ", "{\"", "text", "\":", " \"", "Top", " visit", " morning", " price", " certainly", " indicate", " time", ".", " Figure", " add", " cold", " behind", " customer", " also", ".", "\"}", "\n", "        ", "self", ".", "fake", "_", "data", "_", "2", " =", " ", "{\"", "text", "\":", " \"", "I", "tself", " to", " current", " listen", ".", " Cover", " add", " will", " feeling", " head", ".", " Perform", " family", " affect", " reduce", " political", " general", ".", "\"}", "\n", "\n", "    ", "def", " test", "_", "task", "_", "func", "(", "self", "):", "\n"], "logprobs": [-2.9271395206451416, -0.10534307360649109, -0.030225545167922974, -0.00015472168161068112, -0.17827171087265015, -0.33573752641677856, -0.02351527102291584, -0.23084165155887604, -0.47417619824409485, -0.47575071454048157, -0.20035646855831146, -0.02978617139160633, -2.9802276912960224e-06, -0.02851984091103077, 0.0, -0.0002195594133809209, -0.0063294898718595505, -1.8715683836489916e-05, -0.0004067785630468279, -0.00014041867689229548, -1.5497195136049413e-06, -0.0016180293168872595, -0.004342530854046345, -0.011683608405292034, -0.5487824082374573, -0.060474153608083725, -0.0024491334334015846, -0.004223119001835585, -1.537788011773955e-05, 0.0, -0.4984511733055115, -0.0006369707407429814, -0.03238663077354431, -0.0016379047883674502, -1.2874520507466514e-05, -0.0065816533751785755, -0.004781004507094622, -0.0031058192253112793, -0.5106228590011597, -0.0001656871900195256, -0.004122212994843721, -2.8326756954193115, -2.276871418871451e-05, -5.209310256759636e-05, -1.07287787614041e-05, 0.0, -0.2394450157880783, -0.7513357400894165, -0.0026496085338294506, -0.00031263710116036236, -0.02893846295773983, -0.5746167898178101, -1.4333746433258057, -0.01315709762275219, -0.005372609477490187, -1.8726732730865479, -0.019221002236008644, -0.45469480752944946, -0.0019869126845151186, -2.3681800365448, -0.034192901104688644, -9.500529267825186e-05, -0.004367337562143803, -0.020875267684459686, -0.0008239926537498832, -0.7689204216003418, -0.03762635588645935, -0.01870434544980526, -0.0021786780562251806, -2.2335195541381836, -0.016555199399590492, -0.4860597550868988, -0.0048966724425554276, -0.021402472630143166, -4.2676016164477915e-05, -0.06334282457828522, -5.1020273531321436e-05, -0.000717144284863025, -0.027198657393455505, -0.01570722460746765, -0.32569143176078796, -0.4843452572822571, -0.14547611773014069, -1.7134618759155273, -1.4543427823809907e-05, -0.013142391107976437, -0.015750762075185776, -0.046232592314481735, -0.002453771186992526, -0.014663073234260082, -1.6093124941107817e-05, -0.1650756448507309, -1.365707516670227, -7.152555099310121e-07, 0.0, -1.0989891290664673, -0.11876992136240005, -0.017686275765299797, -0.0010548033751547337, -3.576272320060525e-06, -0.47534358501434326, -0.72617506980896, -0.021549485623836517, -0.43598049879074097, -2.147955894470215, -0.026482846587896347, -1.7010154724121094, -0.007869785651564598, -0.011490358039736748, -1.2263352870941162, -0.00535600958392024, -0.010560463182628155, -0.1507265865802765, -3.5124635696411133, -0.20096167922019958, -0.09906020760536194, -1.2419630289077759, -0.080711230635643, -0.04716573655605316, -0.11329133063554764, -5.411955135059543e-05, -0.12012600898742676, -0.22717289626598358, -0.6655000448226929, -0.0037947327364236116, -0.07195458561182022, -0.0005678709712810814, -0.00032145579461939633, -0.7906845211982727, -9.643566590966657e-05, -0.591212809085846, -0.009098497219383717, -0.013422953896224499, -0.06861269474029541, -0.010015353560447693, -0.000896052282769233, -0.12346896529197693, -0.021412741392850876, -0.009562521241605282, -0.002097788965329528, -0.015084833838045597, -1.3112935448589269e-05, -0.0013306819600984454, -0.09339364618062973, -0.9186146855354309, -0.3233097493648529, -5.960446742392378e-06, -2.253030106658116e-05, -0.000727627135347575, -5.245195097813848e-06, -3.766942609217949e-05, -3.266281055402942e-05, -0.02101488597691059, -0.00968956109136343, -2.4676019165781327e-05, -7.319182623177767e-05, -0.060164958238601685, -0.06916972994804382, -0.018417419865727425, -2.857058048248291, -0.8229478597640991, -0.31985414028167725, -0.38194581866264343, -0.17338299751281738, -0.015037627890706062, -6.079655122448457e-06, -0.0001858300092862919, -0.002221499104052782, -0.0005285535007715225, -0.0006666345288977027, -0.24000321328639984, -0.4732535779476166, -1.501707911491394, -0.00013481661153491586, -0.000188332938705571, -0.00012933371181134135, -0.03622840717434883, -0.0012530578533187509, -0.0011700696777552366, -0.30671894550323486, -1.1920922133867862e-06, -0.8593522310256958, -0.00043478095903992653, -0.012570199556648731, -0.024662815034389496, -0.004272143822163343, -0.0019298041006550193, -0.07276073843240738, -2.706014311115723e-05, -0.006503488402813673, -0.0023017835337668657, -0.005207071080803871, -0.0359765961766243, -0.0008697302546352148, -0.0004808938247151673, -0.00032074074260890484, -0.000617551791947335, -0.00010859376925509423, -0.0001401803019689396, -0.003470946568995714, -0.0016896746819838881, -0.000988114275969565, -0.004336833953857422, -0.21760964393615723, -0.004962389823049307, -0.0024507984053343534, -0.0025737513788044453, -0.011213849298655987, -0.001980606932193041, -0.0013293724041432142, -0.0006579380133189261, -1.1920928244535389e-07, -0.0018442542059347034, -1.5497195136049413e-06, -4.2199197196168825e-05, -1.0847986231965479e-05, -0.0008579387213103473, -0.0003810394846368581, -0.0034153484739363194, -1.4305104514278355e-06, -2.276871418871451e-05, -0.00018451895448379219, -0.0016969341086223722, -0.005356127861887217, -0.0002361257211305201, -0.001212219474837184, -0.001388658070936799, -3.0397906812140718e-05, -0.0002302858338225633, -0.009946662932634354, -0.0004864939546678215, -9.381330892210826e-05, -0.00042822727118618786, -0.00038509105797857046, -0.0015607806853950024, -0.0007721779984422028, -0.00021872512297704816, -0.00010442188795423135, -0.004342530854046345, -0.004990502260625362, -0.0007982643437571824, -0.0008180370787158608, -0.0022852513939142227, -0.00019214690837543458, -1.0252553224563599, -0.06118578463792801, -0.008798757568001747, -0.032523613423109055, -0.0018604366341605783, -0.7970506548881531, -0.0019061268540099263, -0.023634962737560272, -0.6038042902946472, -8.844937838148326e-05, -0.0026033578906208277, -0.00033480284037068486], "finish_reason": "length"}], "metrics": {"energy": 890.7752696990977, "energy_per_token": 3.4795908972621006, "time": 22.16854, "time_per_token": 0.086595859375}}
{"outputs": [{"text": "df = pd.DataFrame()\n\n    for root, dirs, files in os.walk(json_dir_path):\n        for file in files:\n            if file.endswith('.json'):\n                json_path = os.path.join(root, file)\n                with open(json_path) as f:\n                    data = json.load(f)\n                    text = data['text']\n                    df = df.append(pd.Series([text], index=['text']), ignore_index=True)\n\n    all_text = ' '.join(df['text'].tolist())\n    all_words = all_text.split(' ')\n\n    counter = Counter(all_words)\n\n    most_common_words = counter.most_common(word_count)\n\n    return most_common_words", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "json", "_", "dir", "_", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "                ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "with", " open", "(", "json", "_", "path", ")", " as", " f", ":", "\n", "                ", "    ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "    ", "text", " =", " data", "['", "text", "']", "\n", "                ", "    ", "df", " =", " df", ".", "append", "(", "pd", ".", "Series", "([", "text", "]", ",", " index", "=['", "text", "'])", ",", " ignore", "_", "index", "=", "True", ")", "\n", "\n", "    ", "all", "_", "text", " =", " '", " '", ".", "join", "(", "df", "['", "text", "']", ".", "tol", "ist", "())", "\n", "    ", "all", "_", "words", " =", " all", "_", "text", ".", "split", "('", " '", ")", "\n", "\n", "    ", "counter", " =", " Counter", "(", "all", "_", "words", ")", "\n", "\n", "    ", "most", "_", "common", "_", "words", " =", " counter", ".", "most", "_", "common", "(", "word", "_", "count", ")", "\n", "\n", "    ", "return", " most", "_", "common", "_", "words", "\n", "\n", "print"], "logprobs": [-2.9271395206451416, -0.10534307360649109, -0.030225545167922974, -0.00015472168161068112, -0.17827171087265015, -0.33573752641677856, -0.02351527102291584, -1.5815649032592773, -0.000854841957334429, -0.35856950283050537, -1.9821341037750244, -0.00833461619913578, -0.18987776339054108, -0.005349013488739729, -0.0005922947311773896, -0.10459595173597336, -0.0005210472736507654, -0.006205220706760883, -3.099436753473128e-06, -8.821448318485636e-06, -0.0003409996279515326, -0.005713086109608412, -1.9550132492440753e-05, -0.00011121608258690685, -0.00010108436981681734, -3.576278118089249e-07, -0.10635966807603836, -0.007940630428493023, -0.021105464547872543, -0.099469855427742, -0.29870110750198364, -0.1010429859161377, -0.003237603697925806, -0.0005154472892172635, -0.0008044582791626453, -0.007877473719418049, -1.1965832710266113, -0.11632603406906128, -0.0039107524789869785, -0.006147404666990042, -5.602820692729438e-06, 0.0, -0.9289630055427551, -0.02483179233968258, -0.0018681708024814725, -1.883488948806189e-05, -0.01120265107601881, -0.005844646133482456, -0.0032421189825981855, -2.387050151824951, -0.008640403859317303, -0.7433884143829346, -0.0025101364590227604, -0.04580669105052948, -1.6689286894688848e-06, -4.2199197196168825e-05, -2.3841830625315197e-06, -0.0015520919114351273, -0.00011884459672728553, -0.06543134897947311, -3.576214658096433e-05, -0.006245618686079979, -5.5549986427649856e-05, -0.0011728082317858934, -0.03198445960879326, -0.5451447367668152, -0.0006778326351195574, -0.00044741155579686165, -0.0008790204883553088, -9.298280929215252e-06, -8.940656698541716e-06, -1.8549797534942627, -0.00025614796322770417, -0.322045236825943, -0.04915313050150871, -0.0011798333143815398, -0.0008488865569233894, -0.0010601620888337493, -0.6692090034484863, -0.021370267495512962, -0.0071945637464523315, -2.1457441107486375e-05, -0.011848196387290955, -1.2040065485052764e-05, -0.00013636612857226282, -0.0059959776699543, -0.009458137676119804, -0.06806838512420654, -0.21862295269966125, -1.5522127151489258, -0.15487779676914215, -0.04092346131801605, -0.4262917637825012, -0.0029074561316519976, -0.0005273620481602848, -0.05306094139814377, -0.06553775817155838, -0.08420609682798386, -0.3899364173412323, -0.2645587623119354, -0.16373638808727264, -9.357491217087954e-05, -0.002553418977186084, -0.7022719979286194, -0.12538988888263702, -3.933898824470816e-06, -0.4331982135772705, -0.8928350210189819, -0.011420942842960358, -0.14102908968925476, -0.0002150304353563115, -0.03017488494515419, -0.5848991274833679, -0.01254818495362997, -0.01775478757917881, -0.0019163592951372266, -0.0549561008810997, -2.3841855067985307e-07, -8.821448318485636e-06, -0.005231619346886873, -0.00025376438861712813, -0.0005471401382237673, -0.006806639954447746, -0.06917040050029755, -0.004247691016644239, -2.982060194015503, -0.01529018860310316, -0.36582255363464355, -0.195424884557724, -0.7782437801361084, -0.03293018043041229, -0.0015717307105660439, -3.218599158572033e-05, -0.015628362074494362, -0.03907681256532669, -0.06595701724290848, -3.933898824470816e-06, -0.5306392908096313, -0.0007072569569572806, -0.3900149464607239, 0.0, -0.00044979469384998083, -0.02072593756020069, -0.21226313710212708, -1.085368037223816, -0.000300600629998371, -0.646680474281311, -0.015843695029616356, -0.13524708151817322, -1.311301275563892e-06, -5.960462772236497e-07, -6.770858453819528e-05, -0.005679660011082888, -1.282933235168457, -0.0005368936690501869, -0.00031990656862035394, -0.008796276524662971, -0.9405300617218018, -0.00037245964631438255, -2.1414694786071777, -0.020632755011320114, -0.001312348060309887, -0.011488826014101505, -0.0052087316289544106, -7.152555099310121e-07, -5.113947918289341e-05, -0.0004316828562878072, -0.019299114122986794, -1.7755818367004395, -0.0003819928097072989, -0.28583449125289917, -0.0030902510043233633, -0.05172199755907059, -0.6598517894744873, -0.09212061017751694, -0.03180375322699547, -0.12241055816411972, -3.0040289857424796e-05, -1.2636104656849056e-05, -3.576278118089249e-07, -7.152555099310121e-07, -0.06773912906646729, -0.012186946347355843, -1.4781842764932662e-05, -2.3603161025675945e-05, -0.0015791100449860096, -0.003641642164438963, -0.16974201798439026, -0.0002992897352669388, -0.058488693088293076, -0.008257179521024227, -2.0265558760002023e-06, -8.106198947643861e-06, -3.2186455882765586e-06, -3.0517112463712692e-05, -0.23433293402194977, -0.006941370666027069, -3.50720477104187], "finish_reason": "stop"}], "metrics": {"energy": 706.7220893421162, "energy_per_token": 3.5693034815258393, "time": 16.824297, "time_per_token": 0.08497119696969697}}
