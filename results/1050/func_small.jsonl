{"outputs": [{"text": "file_paths = []\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    for i, line in enumerate(input_string.splitlines()):\n        if line:\n            file_paths.append(os.path.join(DIRECTORY, hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"))\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "input", "_", "string", ".", "split", "lines", "()", "):", "\n", "        ", "if", " line", ":", "\n", "            ", "file", "_", "paths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "))", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -1.6310847997665405, -0.09055916965007782, -0.009351144544780254, -1.764281842042692e-05, -0.0014215136179700494, -0.0019180249655619264, -1.2293727397918701, -0.002301426837220788, -0.0008136299438774586, -0.002142516663298011, -7.152531907195225e-06, -2.264974000354414e-06, -0.0030114559922367334, -0.02659568376839161, -0.005607588682323694, -0.0468810610473156, -6.031808152329177e-05, -1.1732921600341797, -0.00018654513405635953, -0.0024953915271908045, -0.00042798896902240813, -0.0012748456792905927, -2.4318398573086597e-05, -4.684815212385729e-05, -0.05700286105275154, -0.01044568419456482, -0.641755998134613, -1.3194572925567627, -2.022834062576294, -0.22352875769138336, -0.11967947334051132, -0.002526545897126198, -0.0022165034897625446, -0.007019265089184046, -0.02454906329512596, -0.0007746794726699591, -0.00029380773776210845, -0.00468751136213541, -0.06063326075673103, -0.5016579627990723, -0.032073356211185455, -0.0758102685213089, -0.010630998760461807, -0.0036714544985443354, -0.253399133682251, -0.47901907563209534, -0.5132575631141663, -0.09945064038038254, -0.0009370227344334126, -1.6076515913009644, -0.0960453450679779, -1.9830161333084106, -0.007659825962036848, -0.002483856864273548, -0.011793650686740875, -0.9486163854598999, -6.794698856538162e-05, -0.0015776818618178368, -0.004633641801774502, -0.013982431963086128, -0.000760385300964117, -0.08366604149341583, -3.576278118089249e-07, -6.55629628454335e-05, -0.0014317509485408664, -0.6058234572410583, -0.0002899941464420408, -0.0001227780303452164, -0.005699692294001579, -0.0017046695575118065, -0.00026174934464506805, -5.006777428206988e-06, -0.01668158918619156, -0.06941410154104233, -0.0212379340082407, -0.009678345173597336, -0.3486733138561249, -0.0007350126979872584, -0.0011021974496543407, -0.0003418338019400835, -0.0012730597518384457, -0.0702049732208252, -0.7988476753234863, -0.019480224698781967, -0.02131180465221405, -0.2257707118988037, -0.004337427206337452, -0.45255184173583984, -0.00029940891545265913, -0.0003833036171272397, -0.0001591317413840443, -0.0033839840907603502, -0.0054106698371469975, -1.6427794694900513, -0.2004271149635315, -0.017710870131850243, -0.00014244495832826942, -2.1457441107486375e-05, -0.48782357573509216, -0.022017214447259903, -1.0820858478546143], "finish_reason": "stop"}], "metrics": {"energy": 172.67828456497188, "energy_per_token": 1.598873005231221, "time": 5.450675, "time_per_token": 0.050469212962962966}}
{"outputs": [{"text": "# Create DIRECTORY if it does not exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Calculate the hash for each non-empty line\n    lines = input_string.split(\"\\n\")\n    hashes = []\n    for line in lines:\n        if len(line) > 0:\n            h = hashlib.sha256()\n            h.update(line.encode())\n            hashes.append(h.hexdigest()[:10] + \".txt\")\n\n    # Save the hashes to files\n    file_paths = []\n    for i, hash in enumerate(hashes):\n        path = os.path.join(DIRECTORY, hash)\n        file_paths.append(path)\n        with open(path, \"w\") as file:\n            file.write(lines[i])\n\n    return file_paths", "tokens": ["#", " Create", " DIRECT", "ORY", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Calculate", " the", " hash", " for", " each", " non", "-", "empty", " line", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " len", "(", "line", ")", " >", " ", "0", ":", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "h", ".", "update", "(", "line", ".", "encode", "())", "\n", "            ", "has", "hes", ".", "append", "(", "h", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", ")", "\n", "\n", "    ", "#", " Save", " the", " has", "hes", " to", " files", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " i", ",", " hash", " in", " enumerate", "(", "has", "hes", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "path", ")", "\n", "        ", "with", " open", "(", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "lines", "[", "i", "])", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.524837851524353, -0.9560707211494446, -2.0302658081054688, -0.0011628062929958105, -0.13433344662189484, -0.30008941888809204, -0.8210095763206482, -0.0022763311862945557, -0.08065668493509293, -0.10085569322109222, -0.0013986576814204454, -0.18999597430229187, -0.010596557520329952, -0.0036434237845242023, -1.1205610462639015e-05, -0.000742279109545052, -0.0008455515489913523, -0.22346231341362, -0.0009126074146479368, -0.0029585659503936768, -3.6954811548639555e-06, -9.298280929215252e-06, -0.0007759897271171212, -0.005774127319455147, -0.003913483582437038, -0.030383525416254997, -0.00014757021563127637, -0.31320083141326904, -7.295342220459133e-05, -0.0007487116381525993, -0.00019298121333122253, -0.0008344743982888758, -1.9430925021879375e-05, -0.0003256267518736422, -0.024915747344493866, -0.004587838891893625, -0.09545790404081345, -0.0009255892946384847, -0.33082452416419983, -4.033880233764648, -1.5094798803329468, -1.1363954544067383, -1.7884857654571533, -0.09126973897218704, -0.3663143217563629, -0.0050021265633404255, -0.004182401578873396, -0.011365431360900402, -1.0274089574813843, -0.0013656823430210352, -1.337110161781311, -0.0326651930809021, -0.12709173560142517, -0.00011288482346571982, -0.00010191874753218144, -0.0003797286772169173, -0.1650116741657257, -1.3406176567077637, -0.024326404556632042, -0.0014772227732464671, -0.00020895205670967698, -0.006461916491389275, -0.0036262013018131256, -0.03463863208889961, -0.030094262212514877, -0.9269862771034241, -0.007609192747622728, -0.027230674400925636, -0.3375970125198364, -0.009120115078985691, -0.06384778022766113, -0.024246821179986, -0.25195395946502686, -0.017800576984882355, -0.003020726377144456, -0.002166782971471548, -0.0007064230740070343, -0.0025175088085234165, -0.18691271543502808, -1.8660991191864014, -8.165503095369786e-05, -0.0004969792207702994, -0.5216829180717468, -0.21656976640224457, -0.0005754960584454238, -0.009031515568494797, -0.007649060804396868, -0.05763121694326401, -0.0011062461417168379, -2.398149013519287, -0.5064216256141663, -0.008316409774124622, -0.00019178935326635838, -2.3364747903542593e-05, -0.00466401781886816, -0.0021350225433707237, -8.821098163025454e-05, -2.9802276912960224e-06, -0.6257907748222351, -0.006880874279886484, -0.0010266992030665278, -0.027487944811582565, -0.0003978414461016655, -6.913899414939806e-05, -0.006971084978431463, -0.024356769397854805, -0.01617804542183876, -0.007701585069298744, -0.6153243184089661, -0.024472638964653015, -0.004548441618680954, -0.43654143810272217, -0.0003620922507252544, -0.002943352097645402, -0.00036483307485468686, -0.05651099607348442, -0.15235251188278198, -0.0013386583887040615, -0.022210773080587387, -0.00021109737281221896, -0.005437939893454313, -2.511272668838501, -0.09018409252166748, -0.017101209610700607, -0.019285785034298897, -0.2414608746767044, -0.004254813306033611, -0.17854727804660797, -0.00011550712952157483, -0.00017212340026162565, -7.879423355916515e-05, -0.00035661060246638954, -0.01470877043902874, -0.14228379726409912, -0.004892639350146055, -0.08914829045534134, -0.2993788421154022, -0.40626683831214905, -0.06953531503677368, -0.06313065439462662, -0.08608388900756836, -0.15389128029346466, -0.12559913098812103, -0.0005787128466181457, -0.6987660527229309, -0.04645031318068504, -0.010795052163302898, -0.002098502591252327, -0.08855001628398895, -0.00082923355512321, -0.0031399254221469164, -0.0239458866417408, -0.49155324697494507, -0.278016060590744, -0.4476343095302582, -0.38668185472488403, -0.0005645350320264697, -0.0008380476501770318, -0.019961891695857048, -6.079655122448457e-06, -0.011346101760864258, -0.0011950739426538348, -0.0008104139124043286, -2.0040059089660645, -0.00383653468452394, -0.12435699254274368, -1.5497195136049413e-06, -0.00019441144831944257, -0.010509622283279896, -0.0011834054021164775, -0.00014280252798926085, -0.0028419604059308767, -1.1444026313256472e-05, -9.667406266089529e-05, -0.0007102350937202573, -0.02191109023988247, -0.0009628665866330266, -0.004196528345346451, -0.003971903584897518, -1.2407987117767334, -0.12890207767486572, -0.030822403728961945, -0.0008769956766627729, -0.0003721021639648825, -0.0007384672062471509, -0.006431120913475752, -0.000514851592015475, -0.00425825547426939, -0.0709102675318718, -0.10384342819452286, -0.00023779425828251988, -0.00029202012228779495, -0.002086725551635027, -0.0003333727945573628, -0.23784315586090088, -0.05715576559305191, -0.04342975094914436, -0.05020543560385704, -5.2689116273541003e-05, -1.739396333694458, -0.0038083898834884167, -0.0005673944251611829, -0.0009953788248822093, -0.02684244140982628, -0.00023016665363684297, -0.004039343912154436, -0.0014873405452817678, -0.4445934593677521, -0.00015078838623594493, -0.0001530530134914443, -0.013357319869101048, -0.0020601970609277487, -0.18857726454734802, -0.0010920758359134197, -0.041122205555438995, -0.009147165343165398, -2.884823152271565e-05, -1.764281842042692e-05, -0.7369275093078613, -4.768370445162873e-07, -2.264974000354414e-06, -0.0001147919538198039, -0.0001629458274692297, -0.067345030605793], "finish_reason": "stop"}], "metrics": {"energy": 343.20848648452755, "energy_per_token": 1.532180743234498, "time": 10.826679, "time_per_token": 0.04833338839285715}}
{"outputs": [{"text": "# Create DIRECTORY if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n    # Split input_string into lines\n    lines = input_string.split(\"\\n\")\n\n    # Loop over each line\n    for line in lines:\n        line = line.strip()\n        if line:\n            # Calculate the SHA256 hash of the line and get its first 10 characters\n            hash_value = hashlib.sha256(line.encode()).hexdigest()[:10]\n            # Create a file path for the hash\n            file_path = os.path.join(DIRECTORY, hash_value + \".txt\")\n            file_paths.append(file_path)\n            # Save the hash to the file\n            with open(file_path, \"w\") as f:\n                f.write(hash_value)\n\n    return file_paths", "tokens": ["#", " Create", " DIRECT", "ORY", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "#", " Split", " input", "_", "string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "#", " Loop", " over", " each", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " line", ":", "\n", "            ", "#", " Calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " line", " and", " get", " its", " first", " ", "1", "0", " characters", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "#", " Create", " a", " file", " path", " for", " the", " hash", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "value", " +", " \"", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "#", " Save", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", "_", "value", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-1.524837851524353, -0.9560707211494446, -2.0302658081054688, -0.0011628062929958105, -0.13433344662189484, -0.30008941888809204, -0.5988301634788513, -0.001831522211432457, -1.8954096958623268e-05, -0.08441033959388733, -0.17509400844573975, -0.001832593115977943, -0.16576328873634338, -0.008927549235522747, -0.003680481342598796, -1.1086402082582936e-05, -0.0006124289939180017, -0.0014466306893154979, -0.20545297861099243, -0.0009866851614788175, -0.003476292360574007, -5.245195097813848e-06, -3.2186455882765586e-06, -0.0009351171320304275, -0.0065327417105436325, -0.003924170508980751, -0.02312745526432991, -0.00011884459672728553, -0.3902868926525116, -5.495397272170521e-05, -0.0007001094636507332, -0.00017307691450696439, -0.0006890306831337512, -3.6238969187252223e-05, -0.0001658063702052459, -0.026874935254454613, -0.00485633872449398, -0.1028476133942604, -0.000992997083812952, -1.9720252752304077, -0.020810119807720184, -0.03180375322699547, -0.01671253889799118, -0.028101161122322083, -0.08879449963569641, -0.5560742616653442, -1.4102067947387695, -1.601322889328003, -1.0789498090744019, -0.41521531343460083, -0.010001663118600845, -0.4013842046260834, -0.4198463261127472, -0.5663336515426636, -0.0014531777705997229, -0.07423266023397446, -0.010246530175209045, -0.025721678510308266, -7.950943836476654e-05, -0.00010263393050990999, -0.0002236116270069033, -0.12196757644414902, -1.3568000793457031, -0.028226446360349655, -0.0019478887552395463, -0.00031680811662226915, -0.0038239466957747936, -0.001095648156479001, -0.004727496299892664, -0.6259660720825195, -0.0005274811992421746, -0.3853873014450073, -2.4192495346069336, -1.1583812236785889, -1.4590510129928589, -0.4677843451499939, -0.5833960771560669, -0.0003363520372658968, -0.009397557005286217, -0.4142128527164459, -0.05114677548408508, -0.0005501187406480312, -0.0004292996891308576, -0.00012265883560758084, -0.016889076679944992, -2.720024585723877, -0.07114588469266891, -0.0021983047481626272, -0.00034683887497521937, -0.045818302780389786, -0.003454315010458231, -0.2771261930465698, -0.22228439152240753, -0.1312873363494873, -0.42556414008140564, -0.07936588674783707, -0.3675936162471771, -0.009318548254668713, -0.17201708257198334, -1.2770445346832275, -1.1236732006072998, -0.5333227515220642, -0.0013321106089279056, -0.05045085772871971, -0.00027295202016830444, -0.00010442188795423135, -0.15690946578979492, -0.39697709679603577, -0.04443781077861786, -0.12453993409872055, -2.763430595397949, -2.9571871757507324, -1.658400535583496, -1.2411435842514038, -0.008547035045921803, -0.04015351086854935, -0.010897291824221611, -0.0901651382446289, -0.3593299686908722, -0.0004524161049630493, -0.2583574652671814, -0.0503937304019928, -0.603955864906311, -0.0032058770302683115, -0.010886915028095245, -0.00018892886873800308, -1.5735502529423684e-05, -0.0010920758359134197, -0.0011988840997219086, -1.6927575416048057e-05, -3.576278118089249e-07, -0.011137106455862522, -0.01036251150071621, -0.0030801494140177965, -0.0009615565068088472, -0.411988765001297, -0.009632064960896969, -0.021863272413611412, -0.0003519630990922451, -0.0007002285565249622, -0.07912304997444153, -0.08533470332622528, -0.004988841712474823, -0.0028262692503631115, -0.0005330810672603548, -0.05793636292219162, -0.49855712056159973, -0.784801721572876, -0.7252092361450195, -0.8529239296913147, -0.3370107412338257, -1.4239413738250732, -1.5558186769485474, -0.05456629395484924, -0.21166270971298218, -0.4098561704158783, -0.0007588367443531752, -0.1659538596868515, -0.019659079611301422, -0.04609053209424019, -0.001921713468618691, -0.2909703552722931, -5.245195097813848e-06, -9.536288416711614e-05, -0.005643506534397602, -0.0006356602534651756, -0.00012766500003635883, -0.007799409795552492, -7.867782187531702e-06, -8.129743218887597e-05, -0.00038378025055862963, -1.6020691394805908, -0.0009996660519391298, -1.4424220353248529e-05, -0.039246466010808945, -0.26071566343307495, -0.00045503751607611775, -0.00020644917094614357, -3.886147169396281e-05, -6.603976362384856e-05, -0.0009117737063206732, -0.09280356019735336, -1.1121025085449219, -0.0027939353603869677, -0.004513196647167206, -0.0003082277253270149, -6.246371776796877e-05, -0.00011669908417388797, -0.0010643299901857972, -1.8358061424805783e-05, -5.722029527532868e-06, -0.00014006110723130405, -0.002601098734885454, -0.22644628584384918, -0.1654352843761444, -2.252690553665161, -0.008817072957754135, -0.6759518384933472, -0.07689440995454788, -0.15017522871494293, -0.01534313429147005, -0.1216215118765831, -0.001531619462184608, -0.015001107007265091, -6.41325386823155e-05, -0.00013362467871047556, -0.00029905137489549816, -2.2172682292875834e-05, -0.00014065706636756659, -0.00021109737281221896, -0.1325097382068634, -0.042751628905534744, -0.018948260694742203, -0.03662416338920593, -3.182837463100441e-05, -0.5827618837356567, -0.00823353324085474, -0.00031585473334416747, -0.000801837770268321, -0.014184840023517609, -6.6756979322235566e-06, -0.00154971145093441, -0.00019905969384126365, -0.2604098618030548, -0.0008374521275982261, -2.169585604860913e-05, -0.07967019081115723, -0.000892121868673712, -0.4607444703578949, -0.005045420024544001, -0.018072109669446945, -0.004600417334586382, -2.8609820219571702e-05, -2.884823152271565e-05, -0.642021119594574, -0.01026894897222519, -1.1470160484313965], "finish_reason": "stop"}], "metrics": {"energy": 340.63495700836165, "energy_per_token": 1.4372782996133404, "time": 11.449221, "time_per_token": 0.048308949367088606}}
{"outputs": [{"text": "lines = input_string.splitlines()\n    file_paths = []\n    for i, line in enumerate(lines):\n        line = line.strip()\n        if not line:\n            continue\n        hasher = hashlib.sha256()\n        hasher.update(line.encode())\n        hash_value = hasher.digest()\n        hash_str = hashlib.sha256(hash_value).hexdigest()\n        hash_str = hash_str[:10] + \".txt\"\n        path = os.path.join(DIRECTORY, hash_str)\n        with open(path, \"w+\") as f:\n            f.write(line)\n        file_paths.append(path)\n    return file_paths", "tokens": ["lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "has", "her", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "        ", "has", "her", ".", "update", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "value", " =", " has", "her", ".", "dig", "est", "()", "\n", "        ", "hash", "_", "str", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "hash", "_", "value", ")", ".", "hex", "dig", "est", "()", "\n", "        ", "hash", "_", "str", " =", " hash", "_", "str", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "str", ")", "\n", "        ", "with", " open", "(", "path", ",", " \"", "w", "+", "\"", ")", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "line", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "path", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "#"], "logprobs": [-2.3753437995910645, -0.0471896193921566, -0.2069699913263321, -0.0002115741081070155, -0.00029881304362788796, -0.0016044613439589739, -0.13948677480220795, -0.6101387143135071, -0.014923244714736938, -0.03376321867108345, -0.25762397050857544, -0.8961954712867737, -0.03621288761496544, -0.02678232453763485, -0.01687278412282467, -0.035898853093385696, -0.009636787697672844, -0.46205493807792664, -0.3739854395389557, -1.1645883321762085, -0.2718116343021393, -0.053046807646751404, -0.001595296896994114, -0.0005415403284132481, -0.0014609150821343064, -0.003508960595354438, -0.04040747880935669, -0.0041066608391702175, -0.005062262061983347, -2.3304553031921387, -0.202267125248909, -0.01391824521124363, -0.003003849647939205, -0.08376701176166534, -0.013174626976251602, -0.04084072634577751, -0.019352784380316734, -0.021473998203873634, -1.3571797609329224, -0.012143608182668686, -0.017155583947896957, -0.07954854518175125, -0.0012350797187536955, -0.015341256745159626, -0.029328778386116028, -0.15543973445892334, -3.243980884552002, -0.0381602980196476, -0.0025997909251600504, -0.001943962532095611, -1.728519782773219e-05, -3.0397906812140718e-05, -0.009845388121902943, -0.001384372473694384, -7.426462980220094e-05, -8.583032467868179e-06, -0.07027075439691544, -0.007379771675914526, -0.001953361788764596, -0.054222069680690765, -6.675497570540756e-05, -0.00015615197480656207, -4.827859811484814e-05, -0.007998579181730747, -0.02218838781118393, -0.01190568320453167, -0.0003719830128829926, -0.45501741766929626, -0.00919831171631813, -0.0034898349549621344, -0.8260458707809448, -0.12905065715312958, -0.5900343060493469, -0.0016198145458474755, -0.008742745965719223, -4.2437604861333966e-05, -1.9192511899746023e-05, -1.8377442359924316, -5.722029527532868e-06, -0.00258076679892838, -0.11489729583263397, -0.025265328586101532, -1.354720950126648, -0.0205532293766737, -1.404567003250122, -0.0027625514194369316, -0.678152322769165, -0.12548358738422394, -0.0009146321099251509, -0.293872207403183, -0.019931159913539886, -8.892617915989831e-05, -0.0004804172203876078, -0.0731906071305275, -0.5295750498771667, -0.011456535197794437, -0.00031931069679558277, -0.01602543145418167, -0.014470867812633514, -0.012077772058546543, -0.00033420699764974415, -0.0018296183552592993, -0.034874435514211655, -0.5496023297309875, -0.03417054936289787, -2.328514337539673, -0.011011900380253792, -1.523611307144165, -0.029617220163345337, -0.051749277859926224, -0.03280409798026085, -0.0014104428701102734, -0.08301883935928345, -0.016436299309134483, -0.014018873684108257, -0.01584862358868122, -0.4465946853160858, -0.5040923953056335, -0.0009344025747850537, -0.0007923085941001773, -8.463501580990851e-05, -0.024769578129053116, -0.025257423520088196, -2.055004119873047, -0.019962944090366364, -0.06396933645009995, -6.079655122448457e-06, -0.0005868143052794039, -0.013263918459415436, -0.00323320715688169, -0.0004368066438473761, -0.005961494520306587, -1.1086402082582936e-05, -2.622600959512056e-06, -0.0006291079334914684, -0.007515963166952133, -0.0009508379152975976, -0.00015317220822907984, -0.0006860524881631136, -0.002260274486616254, -0.014237961731851101, -0.7881457805633545, -0.0006860524881631136, -0.00036125810584053397, -0.0014077048981562257, -0.0004568248405121267, -0.19457297027111053, -0.16832388937473297, -2.8095476627349854, -0.01603657566010952, -0.04160694032907486, -0.0008505540899932384, -0.5210866332054138, -0.02378758415579796, -0.002239697612822056, -0.0008405489497818053, -0.03779051825404167, -6.615896563744172e-05, -0.007775161415338516, -0.0021665452513843775, -0.8541224598884583, -0.5121017098426819, -0.0011038646334782243, -0.1729421764612198, -0.013081209734082222, -0.00014518637908622622, -0.0017102628480643034, -0.0016061275964602828, -0.00017307691450696439, -0.0004992430913262069, -0.014672588557004929, -0.0007077334448695183, -0.0008597253472544253, -0.15586334466934204, -0.020670123398303986, -0.005515476688742638, -5.221230458118953e-05, -7.390948667307384e-06, -0.6627054810523987, -0.016195639967918396, -2.363468647003174], "finish_reason": "stop"}], "metrics": {"energy": 262.9580876293182, "energy_per_token": 1.4528071139741336, "time": 8.793741, "time_per_token": 0.048584204419889504}}
{"outputs": [{"text": "# Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n    file_paths = []\n    # Loop through each line and calculate the SHA256 hash of the line, excluding any empty lines\n    for line_no, line in enumerate(input_string.splitlines()):\n        line = line.strip()\n        if line:\n            hash_value = hashlib.sha256(line.encode()).hexdigest()\n            filename = hash_value[:10] + '.txt'\n            filepath = os.path.join(DIRECTORY, filename)\n            with open(filepath, 'w') as f:\n                f.write(hash_value)\n            file_paths.append(filepath)\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "#", " Loop", " through", " each", " line", " and", " calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " line", ",", " excluding", " any", " empty", " lines", "\n", "    ", "for", " line", "_", "no", ",", " line", " in", " enumerate", "(", "input", "_", "string", ".", "split", "lines", "()", "):", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " line", ":", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "filename", " =", " hash", "_", "value", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", "_", "value", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "path", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-1.524837851524353, -0.9560707211494446, -0.7307528853416443, -1.1781020164489746, -0.07027708739042282, -0.03530893102288246, -0.40079566836357117, -0.0006493605324067175, -5.8412379075889476e-06, -0.05627100542187691, -0.07476190477609634, -0.0006353028584271669, -0.1540062576532364, -0.004051335621625185, -0.0017536989180371165, -9.65590606938349e-06, -0.00022218143567442894, -0.0010025242809206247, -0.19952048361301422, -0.0007052318542264402, -0.001570302527397871, -4.6491513785440475e-06, -7.152555099310121e-07, -0.00033778208307921886, -0.0021142051555216312, -0.0020723312627524137, -0.017935708165168762, -0.0001525762490928173, -0.17965082824230194, -5.340433563105762e-05, -0.0006124289939180017, -8.451581379631534e-05, -0.00044919890933670104, -1.764281842042692e-05, -0.0002602000313345343, -0.016001852229237556, -0.0016504012746736407, -2.484351873397827, -1.1995322704315186, -0.01324909646064043, -0.022201096639037132, -0.010265409015119076, -0.019524531438946724, -0.04667970538139343, -0.2653435170650482, -1.0526374578475952, -3.838625907897949, -0.39269253611564636, -0.5215497016906738, -0.3160400092601776, -2.7365970611572266, -2.7779312133789062, -0.35448285937309265, -0.9295198917388916, -0.0016800350276753306, -0.06940042227506638, -0.0003607814433053136, -0.0002503081923350692, -0.19741778075695038, -2.0757288932800293, -1.0230426788330078, -0.24158203601837158, -2.876904249191284, -2.3160171508789062, -3.156188726425171, -0.3151303827762604, -0.021283330395817757, -0.10336752235889435, -0.0021090900991111994, -0.10547910630702972, -0.3098132312297821, -2.149690866470337, -1.3630412817001343, -0.013384255580604076, -0.014024868607521057, -0.015385513193905354, -0.0021584564819931984, -0.005138405133038759, -0.014229970052838326, -0.00040082051418721676, -0.0001551984460093081, -0.0009679876384325325, -0.03428402170538902, -0.2995414435863495, -0.016471242532134056, -0.726709246635437, -0.003507891669869423, -0.0029917266219854355, -2.2310123443603516, -0.289805144071579, -0.007464849390089512, -0.0015866083558648825, -0.1508636623620987, -0.006734886672347784, -0.2212057113647461, -0.008270657621324062, -0.03925047814846039, -0.2115827202796936, -0.038105908781290054, -0.14433221518993378, -0.0011938833631575108, -1.1591300964355469, -0.05488568916916847, -0.7849635481834412, -0.001760838902555406, -0.018901823088526726, -0.0004905451205559075, -1.537788011773955e-05, -0.0012875846587121487, -0.0013583013787865639, -2.5033637939486653e-05, -8.344646857949556e-07, -0.041773080825805664, -0.013914953917264938, -0.001847109873779118, -0.0005855038180015981, -0.4582107365131378, -0.022075051441788673, -0.013575729914009571, -0.0001429217227268964, -0.002308325143530965, -0.019330685958266258, -0.7515793442726135, -0.0075043682008981705, -1.4597506523132324, -0.005417427979409695, -1.433516263961792, -0.09943553060293198, -0.00032050241134129465, -0.07598507404327393, -0.009538551792502403, -0.00502917030826211, -0.018029961735010147, -0.012298110872507095, -0.9089974761009216, -0.00010263393050990999, -0.00035041390219703317, -7.688703772146255e-05, -0.015289719216525555, -0.00608200253918767, -0.2873327136039734, -2.0638225078582764, -0.0006876011611893773, -0.06206408143043518, -1.5497195136049413e-06, -8.511180931236595e-05, -0.01698155328631401, -0.0005714452126994729, -0.0002811751910485327, -0.0008582960581406951, -7.152531907195225e-06, -0.0002598424907773733, -0.00023362292267847806, -0.006658509839326143, -0.00022682955022901297, -0.003975822124630213, -0.01492148358374834, -0.7253276705741882, -0.0002489972102921456, -0.00015722469834145159, -0.00045110538485459983, -0.00010001159535022452, -0.000164018536452204, -0.030958907678723335, -0.14031323790550232, -0.05386371538043022, -0.00017355366435367614, -1.1232126951217651, -0.015122761018574238, -0.0016868184320628643, -0.0006759266252629459, -0.021682361140847206, -1.4662635294371285e-05, -0.0033031923230737448, -0.011733329854905605, -0.7266233563423157, -0.0012385324807837605, -4.7444173105759546e-05, -0.19430318474769592, -0.00367216719314456, -0.11203891038894653, -0.03152934089303017, -0.002750306623056531, -0.0004024887748528272, -0.0003424296446610242, -3.6238969187252223e-05, -0.00023850933939684182, -0.008699494414031506, -0.00010847456724150106, -0.0006106419023126364, -0.003394201397895813, -0.16411735117435455, -0.021517517045140266, -0.00386800360865891, -0.0005510718910954893, -4.768360213347478e-06, -0.7857077717781067, -0.016777953132987022, -0.9363086223602295], "finish_reason": "stop"}], "metrics": {"energy": 281.9780590705872, "energy_per_token": 1.416975171208981, "time": 9.605584, "time_per_token": 0.048269266331658296}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    lines = input_string.split('\\n')\n\n    file_paths = []\n\n    for index, line in enumerate(lines):\n        line = line.strip()\n\n        if line:\n            sha_hash = hashlib.sha256(line.encode()).hexdigest()\n            file_path = os.path.join(DIRECTORY, f\"{sha_hash[0:10]}.txt\")\n            file_paths.append(file_path)\n            with open(file_path, 'w') as file:\n                file.write(sha_hash + \"\\n\")\n\n    return file_paths", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "for", " index", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "\n", "        ", "if", " line", ":", "\n", "            ", "sha", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "sha", "_", "hash", "[", "0", ":", "1", "0", "]}", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "sha", "_", "hash", " +", " \"", "\\", "n", "\"", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.4643263816833496, -0.0002019201492657885, -0.0014515112852677703, -0.00046754872892051935, -0.001965378178283572, -8.583032467868179e-06, -0.00020561488054227084, -0.02302902191877365, -0.010193195194005966, -0.3743290305137634, -0.0005266471416689456, -1.8181579113006592, -0.037410955876111984, -0.13798661530017853, -0.00018535325943958014, -0.0002215855201939121, -0.0008431693422608078, -0.153359055519104, -1.7124407291412354, -0.001508289948105812, -0.00030727434204891324, -0.003984608221799135, -0.029341280460357666, -1.1755553483963013, -0.00013505500101018697, -0.6869791746139526, -0.020580438897013664, -0.02477981150150299, -0.014461232349276543, -0.024767136201262474, -0.0026326067745685577, -1.0261845588684082, -7.998623186722398e-05, -0.056339964270591736, -1.9430503845214844, -0.04719507694244385, -0.06215818598866463, -0.0026022878009825945, -0.0005478549865074456, -0.0005992047372274101, -0.0026742194313555956, -0.034999679774045944, -0.0015463787131011486, -0.013149567879736423, -2.1760096549987793, -0.17273497581481934, -0.008391478098928928, -0.002048300579190254, -0.06143771857023239, -0.021603267639875412, -0.03508969023823738, -0.8579080104827881, -9.60780744208023e-05, -0.02084421180188656, -0.6180835962295532, -0.12414474785327911, -0.06154421344399452, -0.002648895373567939, -2.980367660522461, -1.6161729097366333, -0.5985910892486572, -0.018470901995897293, -0.007466150913387537, -0.0002760506176855415, -2.5152843591058627e-05, -0.0028571756556630135, -0.0019621660467237234, -8.570780482841656e-05, -2.3841830625315197e-06, -0.21318671107292175, -0.013301326893270016, -0.0034626307897269726, -0.0006169561529532075, -0.4017564058303833, -0.13985252380371094, -0.00802755169570446, -0.00019691436318680644, -0.0013468727702274919, -0.03759937733411789, -0.4248991906642914, -0.1766177862882614, -0.39638203382492065, -0.02820141427218914, -0.658004641532898, -0.003215264528989792, -0.30050164461135864, -1.7881377516459906e-06, -0.0002113357331836596, -0.0057427179999649525, -0.001257224939763546, -0.00034648136352188885, -0.0152143444865942, -3.576272320060525e-06, -0.00022742546570952982, -0.00039593485416844487, -0.464758038520813, -0.11562997102737427, -0.0025684009306132793, -0.008283661678433418, -9.059865078597795e-06, -1.6093124941107817e-05, -1.7096980810165405, -0.025504976511001587, -0.00087878224439919, -0.016728483140468597, -0.0025404582265764475, -0.008336152881383896, -0.0015140033792704344, -0.0004253674705978483, -8.761498611420393e-05, -0.0008631794480606914, -0.0017744047800078988, -0.1421186625957489, -0.6494375467300415, -0.02699318155646324, -0.007657105103135109, -0.0013329440262168646, -0.00016985881666187197, -0.0003578022588044405, -0.001459367573261261, -3.325883881188929e-05, -1.490105023549404e-05, -0.00021514961554203182, -0.0014611531514674425, -0.9651952981948853, -0.06299197673797607, -0.0002252801787108183, -0.0002134810492862016, -0.00045753977610729635, -2.074220174108632e-05, -0.00011538793478393927, -0.0007668177131563425, -0.563029944896698, -0.08479416370391846, -0.037680428475141525, -0.00015376816736534238, -0.19738411903381348, -0.010881018824875355, -0.000625176471658051, -0.00046826363541185856, -0.016479333862662315, -0.00013100242358632386, -0.004112477879971266, -0.0035039715003222227, -1.412032127380371, -5.4834770708112046e-05, -4.887569048150908e-06, -2.9379405975341797, -1.5624366998672485, -0.015329986810684204, -0.006431950256228447, -0.003898759139701724, -0.09544078260660172, -0.02446112222969532, -0.13337819278240204, -0.007863516919314861, -0.010314138606190681, -0.0068259392865002155, -6.6756979322235566e-06, -2.5629668016335927e-05, -0.8141853213310242, -0.006484064739197493, -0.9604143500328064], "finish_reason": "stop"}], "metrics": {"energy": 269.75356379127487, "energy_per_token": 1.5070031496719267, "time": 8.547871, "time_per_token": 0.04775346927374302}}
{"outputs": [{"text": "file_paths = []\n    for line in input_string.split(os.linesep):\n        if line.strip():\n            hash_value = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()\n            file_path = os.path.join(DIRECTORY, hash_value[:10] + \".txt\")\n            file_paths.append(file_path)\n            with open(file_path, 'w') as f:\n                f.write(hash_value)\n\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "(", "os", ".", "lines", "ep", "):", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "(", "\"", "utf", "-", "8", "\"", "))", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "value", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", "_", "value", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -2.434816837310791, -0.24102912843227386, -0.020258773118257523, -0.026964519172906876, -0.00025078488397412, -0.0001731960946926847, -0.005341425072401762, -0.07181867957115173, -1.2584245204925537, -2.452807903289795, -4.017272294731811e-05, -0.002076494973152876, -5.722029527532868e-06, -0.03358917310833931, -0.03582478687167168, -0.00757701275870204, -0.28669804334640503, -0.4073754847049713, -0.6090431213378906, -0.02376360446214676, -0.0912376418709755, -0.2667253613471985, -0.0018234307644888759, -1.1486316919326782, -0.11568178981542587, -0.6786430478096008, -0.002577199600636959, -0.019892478361725807, -0.0007665794692002237, -3.93382906622719e-05, -0.0032630315981805325, -0.00205163168720901, -6.985420623095706e-05, -6.318072337307967e-06, -0.03544332832098007, -0.016993390396237373, -0.005196398124098778, -0.039138831198215485, -2.2935261726379395, -0.03324352949857712, -0.03738442808389664, -0.036889366805553436, -0.0002671123365871608, -2.8013790142722428e-05, -0.0019163592951372266, -0.028215553611516953, -0.023726586252450943, -4.172238186583854e-05, -0.006701020989567041, -0.010800948366522789, -0.2664862275123596, -0.011366492137312889, -0.6436387300491333, -0.04947618767619133, -0.7051723003387451, -0.005215016659349203, -0.21587634086608887, -1.4305012882687151e-05, -0.005357550922781229, -0.006644773297011852, -0.0049257357604801655, -0.00037222131504677236, -0.02051784284412861, -4.768360213347478e-06, -3.3378546504536644e-06, -0.0005936052766628563, -0.5062820315361023, -0.027029382064938545, -0.00018308870494365692, -0.2645097076892853, -0.008097557350993156, -0.007833830080926418, -0.09132871776819229, -0.0023689798545092344, -0.10343889892101288, -0.00014172980445437133, -0.0003492222458589822, -6.007967749610543e-05, -0.0002754547167569399, -0.005033914465457201, -0.011758188717067242, -0.761414647102356, -0.016822850331664085, -0.011908981949090958, -0.0034132099244743586, -0.0003682888636831194, -0.0005031750188209116, -0.004387989174574614, -2.539125671319198e-05, -5.352353764465079e-05, -0.0006074252305552363, -0.0016518294578418136, -0.07097223401069641, -0.0923948660492897, -0.0006129055400379002, -0.00030524839530698955, -0.0013391345273703337, -3.576272320060525e-06, -0.00014423283573705703, -0.0009941878961399198, -2.590501070022583, -0.12342091649770737, -0.19150884449481964, -0.0003522014303598553, -1.175434947013855, -0.03979054093360901, -0.003193756565451622, -0.0010618292726576328, -0.014583658427000046, -1.1801649634435307e-05, -0.005508837755769491, -0.0036258448380976915, -1.214402437210083, -0.0012379371328279376, -4.076874756719917e-05, -0.11692541837692261, -0.002306421985849738, -1.4014017581939697, -0.00827042106539011, -0.029331672936677933, -0.009113853797316551, -4.0411134250462055e-05, -2.276871418871451e-05, -0.8167387843132019, -0.007327585481107235, -0.9202021956443787], "finish_reason": "stop"}], "metrics": {"energy": 192.6492964019775, "energy_per_token": 1.4484909503908083, "time": 6.2768683, "time_per_token": 0.047194498496240606}}
{"outputs": [{"text": "# Create the hashed files directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Iterate through each non-empty line in the input string and save its hash to a file\n    hash_list = []\n    for line in input_string.split(\"\\n\"):\n        if line.strip():\n            hash_value = hashlib.sha256(line.encode()).hexdigest()\n            filename = \"{0}.txt\".format(hash_value[0:10])\n            with open(os.path.join(DIRECTORY, filename), \"w\") as file:\n                file.write(hash_value)\n            hash_list.append(os.path.join(DIRECTORY, filename))\n\n    return hash_list", "tokens": ["#", " Create", " the", " has", "hed", " files", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " non", "-", "empty", " line", " in", " the", " input", " string", " and", " save", " its", " hash", " to", " a", " file", "\n", "    ", "hash", "_", "list", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", "):", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "filename", " =", " \"", "{", "0", "}", ".", "txt", "\"", ".", "format", "(", "hash", "_", "value", "[", "0", ":", "1", "0", "])", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "value", ")", "\n", "            ", "hash", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", "))", "\n", "\n", "    ", "return", " hash", "_", "list", "\n", "\n", "#"], "logprobs": [-1.524837851524353, -0.9560707211494446, -0.7307528853416443, -1.925224781036377, -0.05453525111079216, -1.465194582939148, -0.05466912314295769, -0.13563072681427002, -0.03213154152035713, -0.44835975766181946, -0.00048029806930571795, -8.22540732769994e-06, -0.10239716619253159, -0.08564256131649017, -0.0012256737099960446, -0.13160865008831024, -0.004930362105369568, -0.0017172842053696513, -6.556489552167477e-06, -0.00017236177518498152, -0.0005395148764364421, -0.18754470348358154, -0.0011437548091635108, -0.0020625763572752476, -3.6954811548639555e-06, -9.536738616588991e-07, -0.0003491030656732619, -0.0018430643249303102, -0.0022507591638714075, -0.013592546805739403, -0.0002456601650919765, -0.263996422290802, -3.302042750874534e-05, -0.0009458358981646597, -7.724463648628443e-05, -0.0004847066884394735, -1.8954096958623268e-05, -0.0006275591440498829, -0.023155294358730316, -0.0028089135885238647, -0.07980238646268845, -0.0010282472940161824, -0.38562119007110596, -3.556917905807495, -0.010883495211601257, -1.2122567892074585, -0.8324793577194214, -1.1474357843399048, -0.004742682911455631, -0.007276343181729317, -0.004431072156876326, -0.6774590611457825, -0.04511604458093643, -0.06123938411474228, -0.04354788362979889, -1.7758272886276245, -2.3026785850524902, -1.0521152019500732, -0.1223800778388977, -0.36323490738868713, -0.036717358976602554, -0.13825833797454834, -0.08805400133132935, -0.0018913729581981897, -3.4601850509643555, -0.03393976762890816, -1.5200397968292236, -0.004298257641494274, -0.011279977858066559, -0.044092245399951935, -0.0542132593691349, -0.7031659483909607, -0.040006231516599655, -0.0072465199045836926, -0.014752701856195927, -0.00038366109947673976, -0.00011264643399044871, -0.0010093123419210315, -0.06257852911949158, -1.4570870399475098, -0.051006317138671875, -0.001602795091457665, -0.00026043839170597494, -0.004816596396267414, -0.007173851132392883, -0.008508384227752686, -0.003085735021159053, -0.32072073221206665, -0.22849562764167786, -0.7371862530708313, -0.004717173986136913, -0.06374958157539368, -0.47524404525756836, -0.0008997444529086351, -0.5653263926506042, -0.1357918381690979, -1.212137222290039, -0.001542688929475844, -0.019086629152297974, -0.0006115949945524335, -2.1457441107486375e-05, -0.0022578956559300423, -0.0019056509481742978, -5.2689116273541003e-05, -1.6689286894688848e-06, -0.01711820252239704, -0.008044462651014328, -0.0036326153203845024, -0.03859933465719223, -0.27539393305778503, -0.016699057072401047, -0.009812690317630768, -0.00013553177996072918, -0.0003215749457012862, -0.024722246453166008, -0.8770356774330139, -0.009830868802964687, -1.2151905298233032, -0.0036556576378643513, -2.717165470123291, -1.3117125034332275, -0.3112877905368805, -0.07350887358188629, -0.00038235029205679893, -0.002856343751773238, -7.64102369430475e-05, -0.00011050090688513592, -5.6265202147187665e-05, -0.0002544794406276196, -0.01138546783477068, -0.014545592479407787, -5.054346183896996e-05, -1.880803108215332, -0.005710952449589968, -0.0014572249492630363, -0.01776895858347416, -0.005371542181819677, -0.0012322221882641315, -0.008736955933272839, -0.011624930426478386, -2.8587069511413574, -0.0003457663697190583, -0.0009848987683653831, -0.037219513207674026, -9.298280929215252e-06, -0.000286657246761024, -0.003452770644798875, -0.0004188137245364487, -0.00014435203047469258, -0.000966915744356811, -1.7523612768854946e-05, -0.0002109781780745834, -0.00022015532886143774, -0.009654142893850803, -0.0003526780928950757, -0.00012659224739763886, -0.27887970209121704, -0.07958190143108368, -0.043806467205286026, -0.014135828241705894, -9.655486064730212e-05, -0.6098870635032654, -0.01755380444228649, -0.0009064141195267439, -0.0004940004437230527, -0.055459558963775635, -0.0006444760947488248, -0.002824367256835103, -0.0009073669789358974, -0.4379076063632965, -0.0017635759431868792, -0.00015984688070602715, -0.06132874637842178, -0.004801291972398758, -0.2876124382019043, -0.023702720180153847, -3.58813522325363e-05, -0.0002805792901199311, -0.00051771110156551, -0.00015007323236204684, -0.002148583298549056, -0.2458479404449463, -0.0004663571889977902, -5.972207145532593e-05, -0.0008101756684482098, -0.021469447761774063, -0.0005015069036744535, -0.001845919992774725, -9.536697689327411e-06, -0.0001062098381225951, -0.00024577934527769685, -0.003959911409765482, -0.0007519278442487121, -0.002066978020593524, -0.38308045268058777, -0.001527096494100988, -0.03589264303445816, -0.003707560710608959, -3.6954195820726454e-05, -1.3947389561508317e-05, -0.618604838848114, -0.010628757998347282, -1.9793810844421387], "finish_reason": "stop"}], "metrics": {"energy": 316.9249947834016, "energy_per_token": 1.561206870854195, "time": 9.807432, "time_per_token": 0.04831247290640394}}
{"outputs": [{"text": "# Create the 'hashed_files' directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Get the hash of each non-empty line in the input string\n    # and save them to files named with the hash as the file name\n    nonempty_lines = [line.strip() for line in input_string.splitlines() if line.strip()]\n    hashes = []\n    for line in nonempty_lines:\n        hash_object = hashlib.sha256()\n        hash_object.update(line.encode())\n        hash_value = hash_object.hexdigest()[:10] + \".txt\"\n        file_path = os.path.join(DIRECTORY, hash_value)\n        with open(file_path, 'w') as file:\n            file.write(line)\n        hashes.append(file_path)\n\n    return hashes", "tokens": ["#", " Create", " the", " '", "h", "ashed", "_", "files", "'", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Get", " the", " hash", " of", " each", " non", "-", "empty", " line", " in", " the", " input", " string", "\n", "    ", "#", " and", " save", " them", " to", " files", " named", " with", " the", " hash", " as", " the", " file", " name", "\n", "    ", "non", "empty", "_", "lines", " =", " [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "lines", "()", " if", " line", ".", "strip", "()", "]", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "for", " line", " in", " non", "empty", "_", "lines", ":", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "        ", "hash", "_", "object", ".", "update", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "value", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "value", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", ")", "\n", "        ", "has", "hes", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " has", "hes"], "logprobs": [-1.524837851524353, -0.9560707211494446, -0.7307528853416443, -3.3397269248962402, -0.41398704051971436, -0.0021029042545706034, -0.013263095170259476, -0.005015648435801268, -0.015145188197493553, -0.03587205708026886, -0.10272444784641266, -0.019366933032870293, -0.49962759017944336, -0.0004328744253143668, -7.867782187531702e-06, -0.09370739758014679, -0.15331436693668365, -0.0010795724811032414, -0.17295299470424652, -0.004980894271284342, -0.002279066713526845, -8.583032467868179e-06, -0.00012587709352374077, -0.0016631354810670018, -0.22780956327915192, -0.0027060816064476967, -0.0034937553573399782, -4.529942543740617e-06, -8.344646857949556e-07, -0.00039450492477044463, -0.002651748713105917, -0.001960738329216838, -0.022906344383955002, -0.00014447122521232814, -0.21013684570789337, -3.099393507000059e-05, -0.001086002797819674, -0.0001227780303452164, -0.0004772001120727509, -2.5748875486897305e-05, -0.0004768426588270813, -0.027150627225637436, -0.00330259813927114, -0.09737493842840195, -0.00096703483723104, -0.27622565627098083, -3.2386369705200195, -0.8071856498718262, -2.5471978187561035, -0.318126916885376, -0.2486809939146042, -0.22092704474925995, -0.0014586533652618527, -0.003473560092970729, -0.006123827304691076, -1.900579571723938, -0.059901922941207886, -0.11488720029592514, -0.10821475833654404, -0.24416583776474, -0.000993830617517233, -3.364354133605957, -0.9569862484931946, -0.20372295379638672, -2.1967430114746094, -0.4328417181968689, -1.1618483066558838, -2.8913795948028564, -1.3961290121078491, -0.43186816573143005, -1.2223700284957886, -1.5220645666122437, -0.23840028047561646, -1.5700005292892456, -0.13521741330623627, -0.1825094372034073, -0.017207259312272072, -4.035068511962891, -2.6807610988616943, -0.010566596873104572, -0.015896260738372803, -0.015453479252755642, -0.5956669449806213, -0.07796943932771683, -1.147402048110962, -0.06458786129951477, -0.01969519816339016, -0.02963724173605442, -0.0003748429589904845, -0.00027926836628466845, -0.005484059453010559, -0.00019905969384126365, -0.00014590153296012431, -0.00043418517452664673, -0.027761150151491165, -0.5088562369346619, -0.0011463745031505823, -0.02488330565392971, -0.022844942286610603, -0.025141878053545952, -0.000254241080256179, -8.856858039507642e-05, -0.08382237702608109, -0.01565183326601982, -0.10048240423202515, -0.4463087022304535, -0.005528636276721954, -0.017736753448843956, -2.5282342433929443, -0.008085140958428383, -0.084786057472229, -0.03291253000497818, -0.29325759410858154, -0.00433991989120841, -0.001513170194812119, -3.6477376852417365e-05, 0.0, -3.576272320060525e-06, -0.0001677133986959234, -0.0013735393295064569, -0.0017577449325472116, -0.5927031636238098, -0.11323225498199463, -1.752693772315979, -0.00047755756531842053, -0.0005131834768690169, -5.8412379075889476e-06, -8.22540732769994e-06, -0.0035549320746213198, -0.0016011287225410342, -7.211902266135439e-05, -2.3841830625315197e-06, -0.5388206839561462, -0.00319268717430532, -0.0007448997348546982, -0.014200118370354176, -0.00013422065239865333, -0.0013179434463381767, -2.825220326485578e-05, -6.365573790390044e-05, -0.001259606215171516, -0.022439846768975258, -0.007880785502493382, -0.0033684202935546637, -0.3700692355632782, -0.021799588575959206, -0.0015730400336906314, -0.5399543642997742, -0.1019250899553299, -0.49769625067710876, -0.0011591151123866439, -0.004017141181975603, -0.0014061573892831802, -6.115249561844394e-05, -1.2159273865108844e-05, -0.023048710078001022, -2.4676019165781327e-05, -0.0005492847412824631, -0.02477620728313923, -0.6563819050788879, -0.012279977090656757, -0.011715774424374104, -0.006316340994089842, -1.7010828256607056, -0.5763695240020752, -0.0006908176001161337, -0.00027771908207796514, -6.389413465512916e-05, -0.030236070975661278, -0.010858024470508099, -1.1128352880477905, -0.053503766655921936, -0.05475433170795441, -0.0006737822550348938, -0.06799933314323425, -2.861018856492592e-06, -7.343022298300639e-05, -0.0032573281787335873, -0.0006630606367252767, -0.0001560327800689265, -0.001649092067964375, -6.079655122448457e-06, -0.0004338276921771467, -0.00025340684805996716, -0.0068891616538167, -0.0003178806509822607, -5.435795901576057e-05, -0.0006952252588234842, -0.0021083762403577566, -0.007494311314076185, -0.9250569939613342, -0.00012206286191940308, -0.00017045476124621928, -0.0003610197745729238, -5.006777428206988e-06, -1.7881377516459906e-06, -0.0001864259538706392, -1.0496177673339844, -0.04204103723168373, -0.0532640665769577, -0.00016878610767889768, -0.47313475608825684, -0.009143504314124584, -0.0008179179858416319, -0.0008491248008795083, -0.038872044533491135, -0.00022504181833937764, -0.0029506024438887835, -0.004621776286512613, -0.3242063522338867, -0.32743993401527405, -0.0033534502144902945, -0.0770954042673111, -0.013905666768550873, -3.933898824470816e-06, -0.0008428120636381209, -9.095255518332124e-05, -0.000797192333266139, -0.03663967549800873, -0.003419506596401334, -5.960462772236497e-07, -0.0010605193674564362, -0.0015338810626417398, -0.23306049406528473, -0.000614216027315706, -0.0314958430826664, -0.004534913692623377, -2.539125671319198e-05], "finish_reason": "stop"}], "metrics": {"energy": 358.21658154296864, "energy_per_token": 1.5711253576445994, "time": 11.072582, "time_per_token": 0.04856395614035088}}
{"outputs": [{"text": "# Create the directory if it does not exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Split the multi-line string into lines\n    lines = input_string.split('\\n')\n\n    # Create a list to store the file paths\n    file_paths = []\n\n    # Iterate over the non-empty lines\n    for index, line in enumerate(lines):\n        # If the line is not empty, generate a hash using SHA256\n        if line.strip():\n            hash_value = hashlib.sha256(line.encode('utf-8')).hexdigest()[:10]\n            filename = f\"{DIRECTORY}/{hash_value}.txt\"\n\n            # Open the file in write mode\n            with open(filename, 'w') as file:\n                # Write the line to the file\n                file.write(line)\n\n            # Add the file path to the list\n            file_paths.append(filename)\n\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " the", " multi", "-", "line", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Create", " a", " list", " to", " store", " the", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " non", "-", "empty", " lines", "\n", "    ", "for", " index", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "#", " If", " the", " line", " is", " not", " empty", ",", " generate", " a", " hash", " using", " SH", "A", "2", "5", "6", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "filename", " =", " f", "\"", "{", "DI", "RECT", "ORY", "}/{", "hash", "_", "value", "}", ".", "txt", "\"", "\n", "\n", "            ", "#", " Open", " the", " file", " in", " write", " mode", "\n", "            ", "with", " open", "(", "filename", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "#", " Write", " the", " line", " to", " the", " file", "\n", "                ", "file", ".", "write", "(", "line", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "            ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-1.524837851524353, -0.9560707211494446, -0.7307528853416443, -1.1781020164489746, -0.07027708739042282, -0.03530893102288246, -1.1137855052947998, -0.0005324853118509054, -0.05468672886490822, -0.06304670870304108, -0.0006654431927017868, -0.12986989319324493, -0.004627234302461147, -0.0018305702833458781, -9.775113539944869e-06, -0.0002797450579237193, -0.0007128558354452252, -0.26147985458374023, -0.0007634824141860008, -0.001443773857317865, -5.8412379075889476e-06, -9.536738616588991e-07, -0.0003808011533692479, -0.0020872014574706554, -0.0022807319182902575, -0.021349729970097542, -0.00022384998737834394, -0.19904375076293945, -3.9934315282152966e-05, -0.0009266611887142062, -7.676783570786938e-05, -0.0005756151513196528, -1.7762025890988298e-05, -0.0004976941272616386, -0.02169402502477169, -0.0020096360240131617, -0.06246150657534599, -0.0007410878897644579, -0.3532266914844513, -1.1159788370132446, -0.10758678615093231, -2.918705940246582, -0.004290305078029633, -0.0049844528548419476, -0.07942347228527069, -0.08599386364221573, -0.4929617643356323, -0.40079376101493835, -0.0004673104267567396, -0.01542507205158472, -0.005926772952079773, -0.0266287662088871, -8.082063141046092e-05, -7.021180499577895e-05, -0.00011944057769142091, -0.1383194923400879, -1.562445044517517, -0.0006521005416288972, -0.00017271934484597296, -0.001189596951007843, -0.002931585069745779, -0.03837278485298157, -0.00017951308109331876, -0.06690427660942078, -2.1203255653381348, -0.26515495777130127, -0.3116723597049713, -0.3096800446510315, -0.11219534277915955, -0.30339810252189636, -0.5052189826965332, -0.013577612116932869, -0.5582051873207092, -0.0001234931987710297, -0.01992812193930149, -0.0026027634739875793, -0.003797464072704315, -0.009142677299678326, -0.00956086814403534, -0.00020990552729927003, -0.016206664964556694, -9.989239333663136e-05, -0.04831191897392273, -0.9709389805793762, -0.0005194983095861971, -0.3778064250946045, -0.7039404511451721, -2.1130852699279785, -0.005312373861670494, -0.0008806879632174969, -0.0024362902622669935, -0.26898542046546936, -0.0001456631434848532, -0.005922270007431507, -3.154999256134033, -0.020312974229454994, -0.014280857518315315, -0.002233036793768406, -0.0005852655158378184, -0.000691770575940609, -0.005757652223110199, -0.033771976828575134, -0.0006298227235674858, -0.016703160479664803, -1.0178523063659668, -2.1802563667297363, -0.07835408300161362, -0.025104794651269913, -0.005077562294900417, -1.1073129177093506, -0.008344428613781929, -0.17796514928340912, -3.2208056449890137, -0.6717122793197632, -0.33731162548065186, -1.7639381885528564, -0.3586586117744446, -0.00043275527423247695, -0.01136708166450262, -0.00023648326168768108, -1.0013530300057027e-05, -0.8138111233711243, -0.0008934320067055523, -0.01748059317469597, -0.06253843754529953, -0.9394130706787109, -0.002707508159801364, -0.02391306310892105, -0.12762752175331116, -0.0020252210088074207, -0.6912473440170288, -0.04527408257126808, -0.5389540195465088, -0.0010245556477457285, -0.00820551160722971, -0.0002506657037883997, -1.1086402082582936e-05, -0.0005678709712810814, -0.00100192881654948, -1.823885577323381e-05, -4.768370445162873e-07, -0.055926576256752014, -0.013975143432617188, -0.0014788892585784197, -0.03567755967378616, -1.2634460926055908, -0.00965756643563509, -0.00452553853392601, -4.446407547220588e-05, -0.0010091932490468025, -0.010741157457232475, -0.02405633218586445, -5.61460001335945e-05, -0.00700813764706254, -0.01467740535736084, -1.0908886194229126, -0.024089498445391655, -0.017921775579452515, -0.003977959044277668, -0.293478786945343, -0.20473362505435944, -1.6548709869384766, -0.001625646254979074, -0.9962848424911499, -0.25438156723976135, -0.08507153391838074, -0.2858259975910187, -3.0874729418428615e-05, -4.291525328881107e-06, -0.04397406429052353, -0.013230744749307632, -0.0038302408065646887, -2.5152843591058627e-05, -0.006287436932325363, -0.00018630675913300365, -0.00028379703871905804, -5.280832192511298e-05, -0.007866710424423218, -0.8594181537628174, -0.002807368291541934, -0.0519736111164093, -0.8133126497268677, -0.05334092304110527, -0.035827893763780594, -0.7929508686065674, -0.3060450255870819, -0.08570756018161774, -0.698829710483551, -0.00025138078490272164, -0.08869479596614838, -0.00045908879837952554, -0.00011801023356383666, -0.0013488966505974531, -0.0001528146385680884, -0.29565173387527466, -0.04991947114467621, -0.09116364270448685, -0.0002547178009990603, -0.23095238208770752, -0.0043015810661017895, -4.3987260141875595e-05, -0.003953855484724045, -0.4536287188529968, -0.060370124876499176, -0.018490562215447426, -0.5194463729858398, -0.07242371886968613, -0.010133957490324974, -0.0035835590679198503, -0.08848324418067932, -0.0001262346631847322, -0.006657799240201712, -0.00023922442051116377, -0.0019810828380286694, -0.0021967582870274782, -0.0771227702498436, -0.2301507592201233, -0.0005760917556472123, -0.05114677548408508, -0.020347783342003822, -0.02246980369091034, -0.6339576840400696, -0.001531738555058837, -0.08753447979688644, -0.010445212945342064, -0.002179034985601902, -0.002311417367309332, -0.056670285761356354, -0.06250955164432526, -8.272782724816352e-05, -0.0005345107638277113, -0.00010275312524754554, -0.0004017737810499966, -0.0001591317413840443, -4.7205765440594405e-05, -0.00012373158824630082, -0.01485289353877306, -0.0009413101943209767, -0.0008709213580004871, -0.015879716724157333, -0.015009326860308647, -0.2062879055738449, -0.0028383941389620304, -6.556489552167477e-06, -1.3708974620385561e-05, -0.6894779801368713, -0.00970786064863205, -1.0529483556747437], "finish_reason": "stop"}], "metrics": {"energy": 390.0169322452546, "energy_per_token": 1.5726489203437686, "time": 12.955479, "time_per_token": 0.052239834677419356}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    hash_dict = {}\n\n    # Split the input string into lines and remove empty lines\n    lines = input_string.splitlines()\n    lines = [line for line in lines if line.strip() != \"\"]\n\n    for i, line in enumerate(lines, start=1):\n        # Calculate the SHA256 hash for the line\n        hash_value = hashlib.sha256(line.encode()).hexdigest()\n\n        # Create the file path with a '.txt' extension\n        file_path = os.path.join(DIRECTORY, f\"{hash_value[:10]}.txt\")\n\n        # Check if the file already exists\n        if not os.path.exists(file_path):\n            with open(file_path, \"w\") as f:\n                f.write(line)\n\n        # Add the file path to the hash_dict\n        hash_dict[f\"{i}.{hash_value[:10]}", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "hash", "_", "dict", " =", " {}", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", " and", " remove", " empty", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "lines", " =", " [", "line", " for", " line", " in", " lines", " if", " line", ".", "strip", "()", " ", "!", "=", " \"", "\"", "]", "\n", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "lines", ",", " start", "=", "1", "):", "\n", "        ", "#", " Calculate", " the", " SH", "A", "2", "5", "6", " hash", " for", " the", " line", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Create", " the", " file", " path", " with", " a", " '", ".", "txt", "'", " extension", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "hash", "_", "value", "[:", "1", "0", "]}", ".", "txt", "\"", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "line", ")", "\n", "\n", "        ", "#", " Add", " the", " file", " path", " to", " the", " hash", "_", "dict", "\n", "        ", "hash", "_", "dict", "[", "f", "\"", "{", "i", "}", ".", "{", "hash", "_", "value", "[:", "1", "0", "]}"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.9921908378601074, -6.115249561844394e-05, -0.0019121948862448335, -0.0048715234734117985, -1.0967194612021558e-05, -0.00030751267331652343, -0.003631546162068844, -0.007949027232825756, -0.3900836110115051, -0.00047159992391243577, -2.6376333236694336, -0.07666389644145966, -2.4457225799560547, -0.023714128881692886, -0.1292383074760437, -0.03636854141950607, -1.2022119760513306, -0.0002131234941771254, -2.4446523189544678, -1.2589784860610962, -0.5113797783851624, -0.2622129023075104, -0.13966572284698486, -0.23541592061519623, -0.315612256526947, -1.2032032012939453, -0.6306896805763245, -0.1142827570438385, -0.04861469566822052, -0.05295003205537796, -0.0004300146538298577, -0.06827282905578613, -0.011140407994389534, -0.3201945722103119, -0.00010430268594063818, -0.00015496007108595222, -0.00033361115492880344, -0.15989986062049866, -0.5676248669624329, -0.003199222730472684, -0.0012721073580905795, -0.2711673974990845, -0.6244037747383118, -0.027618294581770897, -0.06490429490804672, -0.07895319908857346, -0.32803064584732056, -4.1483970562694594e-05, -2.372236667724792e-05, -0.00033396866638213396, -0.000161038784426637, -0.05071287602186203, -0.803202211856842, -0.0013267532922327518, -0.0005025792634114623, -2.1576035022735596, -1.7881377516459906e-06, -5.602820692729438e-06, -0.35967227816581726, -0.0003091811086051166, -0.0006261295638978481, -0.014982552267611027, -0.027250975370407104, -0.0001578206429257989, -0.6863864064216614, -1.2097020149230957, -0.14623627066612244, -0.01252911426126957, -0.0010664734290912747, -0.00016592556494288146, -0.0003672163875307888, -0.0003667397249955684, -2.2158408164978027, -0.5310877561569214, -0.0029031771700829268, -0.004527912009507418, -0.0001387499796692282, -0.04040118306875229, -0.017751391977071762, -0.693621039390564, -1.2093312740325928, -0.268032044172287, -0.6533216834068298, -0.001392943668179214, -0.05631089583039284, -0.0002286172821186483, -8.272782724816352e-05, -0.06144018471240997, -2.228611469268799, -0.3930916488170624, -0.6250223517417908, -0.22263187170028687, -0.0005099665140733123, -0.6080146431922913, -0.058246247470378876, -0.4623022675514221, -0.0011762612266466022, -0.00874688196927309, -0.00018046658078674227, -8.702239938429557e-06, -0.0007780147134326398, -0.0007948100101202726, -8.106198947643861e-06, 0.0, -0.01705491915345192, -0.012896937318146229, -0.0010255083907395601, -0.010701175779104233, -0.4119094908237457, -0.007643500808626413, -0.014016639441251755, -0.00010394509445177391, -0.0015486401971429586, -0.011959869414567947, -0.2955135405063629, -0.3523506224155426, -0.0003194298769813031, -0.13835415244102478, -1.1350579261779785, -0.9975457787513733, -0.6133601665496826, -0.20554479956626892, -2.227334976196289, -2.6788477897644043, -0.6209730505943298, -0.015222915448248386, -0.0014186566695570946, -0.0002047805901383981, -0.007887172512710094, -0.32868432998657227, -9.48860906646587e-05, -0.24421906471252441, -0.011549515649676323, -0.14232712984085083, -0.0019315887475386262, -0.34059396386146545, -5.125986263010418e-06, -0.00018046658078674227, -0.013251214288175106, -0.000819347333163023, -0.0002954761730507016, -0.020101405680179596, -9.298280929215252e-06, -0.00024196557933464646, -0.0002611534437164664, -0.3096140921115875, -0.054808955639600754, -0.0026263052131980658, -0.010206175968050957, -0.03374304994940758, -0.00021801002731081098, -0.11079185456037521, -0.010714149102568626, -0.003481044201180339, -0.012522638775408268, -0.0008671099785715342, -0.0001486429391661659, -4.994744449504651e-05, -0.00037424711626954377, -0.0007215518853627145, -0.07154837250709534, -0.00018976318824570626, -0.20090776681900024, -2.034388542175293, -0.01041654497385025, -0.06643477082252502, -0.09678340703248978, -0.38769295811653137, -0.0033959834836423397, -0.3987469971179962, -0.00024077377747744322, -0.06464898586273193, -0.9122529029846191, -0.007854647003114223, -2.622600959512056e-06, -2.8371408916427754e-05, -0.00015770144818816334, -0.14029066264629364, -2.109982233378105e-05, -0.0011635207338258624, -1.680836794548668e-05, -3.814689989667386e-06, -0.018062978982925415, -0.0014791273279115558, -0.0033353909384459257, -1.6125388145446777, -0.00022742546570952982, -9.42901024245657e-05, -0.00041106835124082863, -2.3841855067985307e-07, -2.3841855067985307e-07, -8.916457591112703e-05, -0.3940679728984833, -0.03438158333301544, -0.02761899121105671, -0.05580538883805275, -5.352353764465079e-05, -0.7128958106040955, -0.005365139339119196, -0.0027990469243377447, -0.000558220490347594, -0.12317970395088196, -1.585470999998506e-05, -0.0027683766093105078, -0.0006889115320518613, -0.09392370283603668, -0.2866106927394867, -0.014873799867928028, -0.2918368875980377, -0.056030500680208206, -0.42880624532699585, -1.1683158874511719, -0.01624079793691635, -0.4523465931415558, -0.03779798001050949, -0.07341594249010086, -0.026489580050110817, -0.5328958034515381, -0.9058265686035156, -0.003736421000212431, -0.17781826853752136, -0.00020037073409184813, -0.33798494935035706, -6.425174069590867e-05, -0.0005082983989268541, -0.010194611735641956, -2.647592544555664, -0.09246127307415009, -0.5680403113365173, -0.7644819617271423, -0.36060091853141785, -0.15600940585136414, -1.659101963043213, -0.6370732188224792, -0.0030623229686170816, -0.00012957210128661245, -0.3532569110393524, -0.10388651490211487, -0.014867222867906094, -0.031533729285001755], "finish_reason": "length"}], "metrics": {"energy": 362.07354807472245, "energy_per_token": 1.4143497971668846, "time": 12.525004, "time_per_token": 0.048925796875}}
{"outputs": [{"text": "file_paths = []\n    try:\n        if not os.path.exists(DIRECTORY):\n            os.makedirs(DIRECTORY)\n\n        for line in input_string.split(\"\\n\"):\n            line = line.strip()\n\n            if line:\n                md5 = hashlib.sha256()\n                md5.update(line.encode('utf-8'))\n                file_name = './hashed_files/' + hashlib.md5(md5.digest()).hexdigest()[0:10] + \".txt\"\n                with open(file_name, 'a', encoding='utf-8') as file:\n                    file.write(f\"{line}\\n\")\n                file_paths.append(file_name)\n\n    except Exception as e:\n        print(f\"Error: {e}\")\n\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "        ", "for", " line", " in", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", "):", "\n", "            ", "line", " =", " line", ".", "strip", "()", "\n", "\n", "            ", "if", " line", ":", "\n", "                ", "md", "5", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "md", "5", ".", "update", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "                ", "file", "_", "name", " =", " '", ".", "/", "h", "ashed", "_", "files", "/'", " +", " hash", "lib", ".", "md", "5", "(", "md", "5", ".", "dig", "est", "())", ".", "hex", "dig", "est", "()[", "0", ":", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "                ", "with", " open", "(", "file", "_", "name", ",", " '", "a", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "    ", "file", ".", "write", "(", "f", "\"", "{", "line", "}\\", "n", "\"", ")", "\n", "                ", "file", "_", "paths", ".", "append", "(", "file", "_", "name", ")", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " file", "_", "paths"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -3.028748035430908, -0.001029557315632701, -0.007581035606563091, -0.01100411918014288, -1.8342117071151733, -0.055478278547525406, -0.008798167109489441, -1.2993727978027891e-05, -0.0026609033811837435, -0.001447583083063364, -0.3913998603820801, -0.0019900058396160603, -0.0048182569444179535, -6.318072337307967e-06, -1.0728830375228426e-06, -0.0035057533532381058, -0.015110666863620281, -0.003058400936424732, -0.0265726987272501, -0.00021836756786797196, -0.6316732168197632, -0.00021526881027966738, -0.0013605633284896612, -0.0006781900301575661, -0.0019965493120253086, -7.748573807475623e-06, -0.00021789084712509066, -0.021015703678131104, -0.012312358245253563, -2.0208828449249268, -0.05681772157549858, -1.0239049196243286, -0.2981484532356262, -0.034081149846315384, -0.020514104515314102, -0.000226472009671852, -0.00015090756642166525, -0.002637481316924095, -0.06277995556592941, -1.4747318029403687, -0.04421360418200493, -0.0021332381293177605, -0.00034957972820848227, -0.005195923615247011, -0.01393834874033928, -0.010869934223592281, -0.005857919342815876, -2.101287841796875, -0.06930132210254669, -0.009569487534463406, -0.0015040049329400063, -0.09051801264286041, -0.01449377927929163, -0.03792423754930496, -2.099553108215332, -0.0005362979718483984, -0.035368192940950394, -0.5997949838638306, -0.11721755564212799, -0.0767611637711525, -0.0013917532050982118, -3.331969738006592, -0.012573731131851673, -0.898140549659729, -0.0027702786028385162, -0.0001399419124936685, -2.8609820219571702e-05, -0.9671970009803772, -0.008374928496778011, -0.00028784899041056633, -6.556489552167477e-06, -0.7945958375930786, -0.0067601073533296585, -0.009717186912894249, -0.018714172765612602, -4.672895011026412e-05, -0.0019270675256848335, -4.482168878894299e-05, -0.005305733531713486, -0.015637867152690887, -0.011855264194309711, -0.0010344398906454444, -1.1516766548156738, -0.015881359577178955, -0.02185627445578575, -0.000163541772053577, -0.001838185708038509, -0.008346320129930973, -0.060001399368047714, -0.9968986511230469, -0.05807776376605034, -0.994600236415863, -0.010875476524233818, -2.4462761878967285, -0.42908942699432373, -0.47439253330230713, -0.00448910566046834, -0.00014995403762441128, -0.0003002431185450405, -0.00014709345123264939, -0.06601839512586594, -0.04072605073451996, -2.7268941402435303, -0.0018631733255460858, -0.0002636561985127628, -0.30799534916877747, -0.005159040912985802, -0.055709779262542725, -0.8055254220962524, -0.0001551984460093081, -0.00959829706698656, -0.06408998370170593, -2.109982233378105e-05, -0.026987610384821892, -0.011568604968488216, -0.009456956759095192, -0.0025630502495914698, -0.00022373080719262362, -2.220853328704834, -0.025051316246390343, -0.0038854596205055714, -0.03917677327990532, -0.011815916746854782, -0.02005326747894287, -0.040534209460020065, -2.096977949142456, -0.0009651293512433767, -0.0008073169738054276, -0.00025996167096309364, -0.007590381894260645, -0.3095008134841919, -0.6764082312583923, -0.0008535317610949278, -0.0012482955353334546, -0.0017889224691316485, -0.00012158608296886086, -0.00010096516780322418, -0.0014462736435234547, -0.3805062770843506, -1.9062488079071045, -2.562802314758301, -0.002019629580900073, -0.026484588161110878, -0.1455150693655014, -0.0461970791220665, -0.06646467000246048, -0.0006081400788389146, -0.013486583717167377, -0.0011298231547698379, -0.5139353275299072, -0.030268685892224312, -0.002308919792994857, -0.0007514513563364744, -0.003997787833213806, -0.0400124154984951, -0.04800575599074364, -0.010839981958270073, -0.04245324060320854, -2.4166715145111084, -0.23757830262184143, -0.07556801289319992, -0.20733706653118134, -0.15092895925045013, -0.002249212935566902, -0.01409198623150587, -0.004652508534491062, -0.0024730355944484472, -0.15483388304710388, -0.5242601633071899, -0.002619765931740403, -0.0024378362577408552, -0.0013522299705073237, -0.00017832119192462415, -0.0006779517862014472, -0.011715774424374104, -0.03443698212504387, -0.00010048838157672435, -0.0029308719094842672, -0.0011019593803212047, -1.2665321826934814, -0.13612128794193268, -0.017290685325860977, -0.24753643572330475, -0.0596044547855854, -0.2586202025413513, -0.0006490031373687088, -0.005959124304354191, -0.002384559018537402, -0.20115405321121216, -0.027912447229027748, -0.7779497504234314, -0.06841655820608139, -0.718331515789032, -0.9851384162902832, -0.024028053507208824, -0.1371125876903534, -0.0333605632185936, -0.014123957604169846, -0.01265212893486023, -0.4816022515296936, -0.03728095814585686, -0.11523305624723434, -0.007524245418608189, -1.847726889536716e-05, -9.798523387871683e-05], "finish_reason": "stop"}], "metrics": {"energy": 327.2327716007231, "energy_per_token": 1.543550809437373, "time": 10.461579, "time_per_token": 0.04934707075471698}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    lines = input_string.split(\"\\n\")\n    hashed_lines = [hashlib.sha256(line.encode()).hexdigest() for line in lines if line]\n    filenames = [\"./\" + DIRECTORY + \"/\" + hash[:10] + \".txt\" for hash in hashed_lines]\n\n    return filenames", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "    ", "h", "ashed", "_", "lines", " =", " [", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", " for", " line", " in", " lines", " if", " line", "]", "\n", "    ", "fil", "en", "ames", " =", " [", "\"", ".", "/\"", " +", " DIRECT", "ORY", " +", " \"", "/\"", " +", " hash", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", " for", " hash", " in", " has", "hed", "_", "lines", "]", "\n", "\n", "    ", "return", " fil", "en", "ames", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.9921908378601074, -6.115249561844394e-05, -0.0019121948862448335, -0.0048715234734117985, -1.0967194612021558e-05, -0.00030751267331652343, -0.003631546162068844, -0.007949027232825756, -0.3900836110115051, -0.00047159992391243577, -1.8633261919021606, -0.03130129724740982, -0.14934557676315308, -0.00023993951617740095, -0.0002544794406276196, -0.0008563903393223882, -0.15895195305347443, -0.9081746935844421, -0.02512850984930992, -0.0019369428046047688, -0.00027426297310739756, -0.008406964130699635, -0.004252913873642683, -0.026821667328476906, -0.47749021649360657, -3.2222914695739746, -0.03648429363965988, -0.021656347438693047, -0.47057485580444336, -0.01761529967188835, -2.132418632507324, -0.42541006207466125, -0.012125000357627869, -0.0001714082609396428, -0.0029377657920122147, -0.0021470370702445507, -8.689979586051777e-05, -6.198863957251888e-06, -0.05224462226033211, -0.08065272867679596, -0.013674980960786343, -0.06111009418964386, -0.36033308506011963, -0.03285762295126915, -0.017117498442530632, -0.00019798702851403505, -0.0008551992941647768, -0.013237920589745045, -0.1403173804283142, -0.0032870331779122353, -0.00082601752365008, -0.004534438718110323, -0.03334154188632965, -0.19552390277385712, -0.4584302604198456, -0.013712256215512753, -0.6541247963905334, -2.790740966796875, -0.0029685499612241983, -0.00017081231635529548, -0.006705047097057104, -0.11877415329217911, -1.1124860048294067, -0.3292708098888397, -2.331278085708618, -0.11132236570119858, -0.10045135766267776, -4.768370445162873e-07, -0.008254341781139374, -0.14261099696159363, -0.0030367709696292877, -0.009077115915715694, -0.6398704648017883, -0.6297697424888611, -0.03578522056341171, -0.012091198936104774, -0.0068395547568798065, -0.004774360917508602, -0.03185202181339264, -0.0018787605222314596, -0.000782183778937906, -0.0003299168893136084, -0.015873147174715996, -0.0006018257699906826, -0.0004925706889480352, -0.004810901824384928, -3.099436753473128e-06, -2.3364747903542593e-05, -2.13382354559144e-05, -0.00569388410076499, -0.004910551942884922, -0.43164724111557007, -0.00043585337698459625, -1.2432734966278076, -0.13881951570510864, -1.1920928244535389e-07, -2.50339189733495e-06, -1.7576842308044434, -4.768370445162873e-07, -1.7881377516459906e-06, -7.045020902296528e-05, -0.0002217047003796324, -0.06220691651105881], "finish_reason": "stop"}], "metrics": {"energy": 196.08041265106198, "energy_per_token": 1.6477345600929578, "time": 5.650739, "time_per_token": 0.047485201680672266}}
{"outputs": [{"text": "# Create the DIRECTORY if it does not exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Split the multi-line string into lines and process each line\n    lines = input_string.split(\"\\n\")\n    file_paths = []\n    for line in lines:\n        if len(line.strip()) > 0:\n            file_name = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n            file_path = os.path.join(DIRECTORY, file_name)\n            file_paths.append(file_path)\n\n            # Write the hashed line to the file\n            with open(file_path, \"w\") as file:\n                file.write(line + \"\\n\")\n\n    return file_paths", "tokens": ["#", " Create", " the", " DIRECT", "ORY", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " the", " multi", "-", "line", " string", " into", " lines", " and", " process", " each", " line", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " len", "(", "line", ".", "strip", "())", " >", " ", "0", ":", "\n", "            ", "file", "_", "name", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "line", " +", " \"", "\\", "n", "\"", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.524837851524353, -0.9560707211494446, -0.7307528853416443, -0.9338927865028381, -0.001278893556445837, -0.12900444865226746, -0.08959712088108063, -0.7564150094985962, -0.001320681651122868, -0.06665349006652832, -0.12597431242465973, -0.0008142255246639252, -0.1689624786376953, -0.005772942211478949, -0.0028325694147497416, -1.2278481335670222e-05, -0.0005158047424629331, -0.0007857572636567056, -0.23044316470623016, -0.0007234578370116651, -0.0019587157294154167, -5.364403477869928e-06, -1.2040065485052764e-05, -0.0007334641413763165, -0.004153435584157705, -0.003079555230215192, -0.02148449793457985, -0.0001864259538706392, -0.32142770290374756, -6.913899414939806e-05, -0.0006852186052128673, -0.00015007323236204684, -0.0006378046819008887, -3.909988299710676e-05, -0.0004300146538298577, -0.023689448833465576, -0.0039901891723275185, -0.0857599675655365, -0.0008758046315051615, -0.31820419430732727, -1.1014034748077393, -0.17391438782215118, -3.0808820724487305, -0.0059786769561469555, -0.007925255224108696, -0.11990377306938171, -0.11734223365783691, -0.6772722601890564, -1.3779613971710205, -3.239778757095337, -0.12925055623054504, -0.5900108814239502, -0.3052288591861725, -0.002436052542179823, -0.17814503610134125, -0.01166487392038107, -0.041189245879650116, -9.202533692587167e-05, -0.00010764019680209458, -0.00017855956684798002, -0.13771232962608337, -1.5140292644500732, -0.03921586275100708, -0.0015892268856987357, -0.0002051381452474743, -0.006585088092833757, -0.0018086755881085992, -0.013953630812466145, -0.0788298174738884, -0.30989813804626465, -0.005633667577058077, -0.005296365823596716, -0.011025813408195972, -0.009375590831041336, -0.019492264837026596, -0.2339850664138794, -0.03896193578839302, -0.23398317396640778, -0.03905457258224487, -0.0017343016806989908, -0.000598251644987613, -0.0004707658663392067, -0.005389683414250612, -0.8056552410125732, -1.8874070644378662, -7.402622577501461e-05, -0.0005651307292282581, -0.7103408575057983, -0.004551764577627182, -0.02124680206179619, -0.17096073925495148, -0.0002926159941125661, -0.0007932615117169917, -0.0019633558113127947, -0.3962302803993225, -0.0026178634725511074, -3.051234245300293, -0.027861321344971657, -0.6464775204658508, -0.00910227745771408, -0.16440199315547943, -0.0003212174342479557, -4.0411134250462055e-05, -0.0018461579456925392, -0.001804986852221191, -0.00018249277491122484, -2.3841830625315197e-06, -0.01311003603041172, -0.021148767322301865, -0.004762733820825815, -0.1465722769498825, -0.27416518330574036, -0.004804495256394148, -0.00330414273776114, -0.000641974329482764, -0.0017738097812980413, -0.0646912232041359, -0.02462013065814972, -0.004909602925181389, -0.007525073830038309, -0.01828726939857006, -0.03447648882865906, -0.11071811616420746, -0.0002261144545627758, -0.00015209948469419032, -6.723177648382261e-05, -0.01261893380433321, -0.006445571314543486, -0.07506805658340454, -0.009733124636113644, -0.044688981026411057, -0.0006902219611220062, -0.03107655607163906, -9.536738616588991e-07, -5.781483559985645e-05, -0.006116244476288557, -0.0006652049487456679, -5.5549986427649856e-05, -0.0011276798322796822, -9.059865078597795e-06, -3.886147169396281e-05, -0.0002227773511549458, -0.0019814397674053907, -9.298280929215252e-06, -3.814689989667386e-06, -0.00041607304592616856, -0.0021728496067225933, -0.034880995750427246, -0.9138352274894714, -0.03643704950809479, -0.00828590802848339, -0.0008484101272188127, -8.880697714630514e-05, -0.00016592556494288146, -0.0010095505276694894, -6.437280717364047e-06, -0.00013433984713628888, -0.00015007323236204684, -0.0028613361064344645, -1.9252002239227295, -0.05406193807721138, -0.39784544706344604, -1.0302708148956299, -0.06354779005050659, -1.9558892250061035, -0.002460430609062314, -0.17818443477153778, -0.02512909099459648, -0.35627928376197815, -0.053024426102638245, -0.05378136783838272, -0.000713213172275573, -0.021579118445515633, -8.284702198579907e-05, -0.0001250427303602919, -0.0006646093097515404, -1.2278481335670222e-05, -0.0002320735511602834, -0.0001287377526750788, -0.12130742520093918, -0.024851445108652115, -0.02918105199933052, -0.024812372401356697, -2.634490556374658e-05, -0.37372124195098877, -0.005541439633816481, -0.00013958434283267707, -0.0005746620590798557, -0.02429894730448723, -0.00029952809563837945, -0.002423684811219573, -0.00017593742813915014, -0.022392988204956055, -2.536116123199463, -0.006991683039814234, -0.0011481605470180511, -0.00042989550274796784, -0.0019064837833866477, -0.0037276323419064283, -0.013223450630903244, -0.14133548736572266, -0.004034000914543867, -0.0346614308655262, -0.004377307370305061, -1.1801649634435307e-05, -2.8967437174287625e-05, -0.9936169385910034, -4.768370445162873e-07, -1.4305104514278355e-06, -7.080780778778717e-05, -0.0001426833332516253, -0.07393942028284073], "finish_reason": "stop"}], "metrics": {"energy": 304.2400295066836, "energy_per_token": 1.4350944788051112, "time": 10.231598, "time_per_token": 0.04826225471698113}}
{"outputs": [{"text": "hashes = []\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    lines = input_string.split(\"\\n\")\n\n    for line_no, line in enumerate(lines):\n        line = line.strip()\n        if line:\n            sha = hashlib.sha256(line.encode()).hexdigest()\n            file_path = os.path.join(DIRECTORY, sha[:10] + '.txt')\n            with open(file_path, 'w') as f:\n                f.write(f\"line {line_no + 1}:\\n{line}\\n\")\n                hashes.append(file_path)\n\n    return hashes", "tokens": ["has", "hes", " =", " []", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "for", " line", "_", "no", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " line", ":", "\n", "            ", "sha", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " sh", "a", "[:", "1", "0", "]", " +", " '", ".", "txt", "')", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "f", "\"", "line", " {", "line", "_", "no", " +", " ", "1", "}:\\", "n", "{", "line", "}\\", "n", "\"", ")", "\n", "                ", "has", "hes", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " has", "hes", "\n", "\n", "if"], "logprobs": [-3.9618611335754395, -0.13306330144405365, -0.2268686145544052, -0.16565127670764923, -0.04450816288590431, -0.3608933687210083, -1.6506121158599854, -0.12102218717336655, -0.010505493730306625, -1.9073304429184645e-05, -0.0019614521879702806, -0.0019043420907109976, -0.2508904039859772, -0.0019458661554381251, -0.003047229489311576, -7.390948667307384e-06, -1.4305104514278355e-06, -0.0013941340148448944, -0.025710757821798325, -0.006959365215152502, -0.04181503877043724, -0.00015746307326480746, -1.098859429359436, -6.258291978156194e-05, -0.0016762267332524061, -0.0032270282972604036, -1.0371154530730564e-05, -0.00037651124875992537, -0.0035475671757012606, -0.005432248581200838, -0.706031322479248, -0.0006843847222626209, -1.8354531526565552, -0.025066662579774857, -0.07989098876714706, -0.00016044282529037446, -0.00016509123088326305, -0.0007371568935923278, -0.15811744332313538, -1.155738353729248, -0.015045848675072193, -0.001836043898947537, -0.0003234816831536591, -0.0061712185852229595, -0.002170589519664645, -0.025628380477428436, -1.1748461723327637, -0.0001967951684491709, -0.09643825888633728, -0.6966894268989563, -2.6289947032928467, -1.6680669784545898, -0.10501149296760559, -0.03884108364582062, -0.014575904235243797, -0.001907792640849948, -0.0011331572895869613, -0.0025296376552432775, -0.20822298526763916, -0.003142658853903413, -0.013293680734932423, -1.826454520225525, -0.1696680784225464, -0.009959882125258446, -0.0019249258330091834, -0.07409662008285522, -0.016738563776016235, -0.04054897651076317, -0.2855542004108429, -0.027947688475251198, -0.5233932137489319, -0.12097518146038055, -0.15506881475448608, -0.002781572053208947, -2.6641550064086914, -1.1998400688171387, -0.0043088216334581375, -0.00014375607133843005, -1.9788545614574105e-05, -0.00448174774646759, -0.0034145168028771877, -0.0001646144810365513, -2.7418097943154862e-06, -0.4391157627105713, -0.024621061980724335, -0.004128623753786087, -0.0009590555564500391, -0.28782424330711365, -0.3463767170906067, -0.014757165685296059, -0.0002899941464420408, -0.001823549740947783, -0.023406045511364937, -0.4185005724430084, -0.024849118664860725, -1.1072865724563599, -0.061841219663619995, -0.6664978861808777, -0.0030652941204607487, -0.3472428023815155, -2.098061486321967e-05, -0.00019167017308063805, -0.0026362924836575985, -0.0014537728857249022, -0.00032872517476789653, -0.011769498698413372, -4.172316494077677e-06, -0.00010287232726113871, -0.0006791430641897023, -0.7783531546592712, -7.510157047363464e-06, -0.13599538803100586, -0.010034472681581974, -0.009198076091706753, -0.09820031374692917, -0.0026905073318630457, -1.4211851358413696, -0.00019798702851403505, -0.0002547178009990603, -0.00025876989820972085, -0.0018914919346570969, -0.03547393158078194, -0.4324783682823181, -0.0004407388041727245, -0.00025078488397412, -0.0004814896092284471, -7.188061863416806e-05, -3.933898824470816e-06, -0.00036399890086613595, -0.3608800768852234, -0.09204711019992828, -0.04627402499318123, -0.0003313469351269305, -0.5175527334213257, -0.039774615317583084, -0.0013252056669443846, -0.0007921895012259483, -0.031282003968954086, -1.5616295058862306e-05, -0.003570849308744073, -0.008725020103156567, -2.781104564666748, -0.2403823584318161, -2.1197519302368164, -0.14527520537376404, -0.009829806163907051, -0.0007403731578961015, -2.3483953555114567e-05, -0.6623222231864929, -0.005849149543792009, -0.00015805903240107, -0.9285037517547607, -0.04536089673638344, -0.1412864327430725, -0.18255174160003662, -0.41466835141181946, -0.08183412253856659, -0.4729374647140503, -0.012050800956785679, -0.016403697431087494, -1.3280812501907349, -0.06173979863524437, -6.794906312279636e-06, -0.001683486276306212, -8.880697714630514e-05, -0.0003150205302517861, -0.010097256861627102, -7.378782902378589e-05, -1.7881377516459906e-06, -0.0010827876394614577, -0.0013456823071464896, -0.35800039768218994, -0.003291904693469405, -0.011916167102754116, -0.004379325080662966, -3.576214658096433e-05, -0.6499819159507751, -0.005827105604112148, -0.7736752033233643], "finish_reason": "stop"}], "metrics": {"energy": 275.939170349121, "energy_per_token": 1.5415596108889442, "time": 8.777096, "time_per_token": 0.049034055865921786}}
{"outputs": [{"text": "file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        if not line:\n            continue\n        hashed_line = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n        file_path = os.path.join(DIRECTORY, hashed_line)\n        file_paths.append(file_path)\n        with open(file_path, 'w') as f:\n            f.write(line)\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " has", "hed", "_", "line", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "line", ")", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -2.269148349761963, -0.06580254435539246, -0.17572979629039764, -0.00020382710499688983, -0.0002699726028367877, -0.0012266262201592326, -0.1330324113368988, -1.7495462894439697, -0.0021609545219689608, -0.0003299168893136084, -0.0056206281296908855, -0.042706966400146484, -0.39982110261917114, -0.5349587798118591, -0.5424010157585144, -0.07530767470598221, -0.00597417401149869, -0.0036806000862270594, -0.004172904882580042, -0.006035199388861656, -0.29143059253692627, -1.928704023361206, -0.05046253278851509, -1.2919132709503174, -0.12773527204990387, -0.0015237637562677264, -0.014457708224654198, -0.024129996076226234, -0.08320917189121246, -2.331165313720703, -0.5735459923744202, -0.1224740520119667, -0.3529544472694397, -0.015290423296391964, -0.047629594802856445, -0.0041712429374456406, -5.066266385256313e-05, -0.0024949158541858196, -0.002607043832540512, -7.533743337262422e-05, -9.894321920000948e-06, -0.03557736054062843, -0.019032711163163185, -0.011314631439745426, -0.013478468172252178, -0.5160031318664551, -0.1425279974937439, -0.013655343092978, -0.00018916724366135895, -0.01633743941783905, -0.029240794479846954, -1.3102881908416748, -0.027981305494904518, -0.021012084558606148, -0.02069452777504921, -0.8009388446807861, -0.6572225689888, -0.0005057962844148278, -0.0004273931554052979, -0.00015662873920518905, -0.013729188591241837, -0.008508975617587566, -0.5285334587097168, -0.10601706057786942, -0.355268657207489, -0.0029229081701487303, -0.07601899653673172, -5.483612312673358e-06, -0.0006962973857298493, -0.009865809231996536, -0.0027898934204131365, -0.000562271336093545, -0.0033993099350482225, -5.483612312673358e-06, -2.622600959512056e-06, -0.0006161222117953002, -0.00438098656013608, -1.6689286894688848e-06, -1.4305012882687151e-05, -6.794906312279636e-06, -0.0009804924484342337, -0.003237841185182333, -0.011809201911091805, -0.66438227891922, -0.020316245034337044, -0.009544691070914268, -0.002932892646640539, -0.00022802136663813144, -0.0005055579822510481, -0.002961418591439724, -7.974783511599526e-05, -2.038458114839159e-05, -0.0003618539194576442, -0.0016609933227300644, -0.0819241851568222, -0.16103726625442505, -0.000481132126878947, -0.0005695389700122178, -0.0019219514215365052, -4.291525328881107e-06, -0.00044276448898017406, -0.0004951919545419514, -0.681148886680603, -0.06022927537560463, -0.052121177315711975, -0.000816012208815664, -0.8552433252334595, -0.023097751662135124, -0.0021395429503172636, -0.0012249593855813146, -0.020188095048069954, -1.3470558769768104e-05, -0.007619485259056091, -0.005092743784189224, -0.41503363847732544, -0.2774333357810974, -0.0012869894271716475, -0.2256895750761032, -0.02057436667382717, -0.00596813065931201, -2.706014311115723e-05, -3.5523738915799186e-05, -1.263859748840332, -7.152555099310121e-07, -1.9073468138230965e-06, -0.00015269544383045286, -0.00022766382608097047, -0.050481684505939484], "finish_reason": "stop"}], "metrics": {"energy": 201.21485174369806, "energy_per_token": 1.4904803832866522, "time": 6.8663807, "time_per_token": 0.05086207925925926}}
{"outputs": [{"text": "# Create DIRECTORY if it does not exist\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    # Split the input string into lines\n    lines = input_string.split(\"\\n\")\n\n    # Create a list to store file paths\n    file_paths = []\n    # Iterate over lines\n    for index, line in enumerate(lines):\n        # Skip empty lines\n        if not line.strip():\n            continue\n        # Hash the line using SHA256\n        hash_object = hashlib.sha256()\n        hash_object.update(line.encode())\n        hash_value = hash_object.hexdigest()\n\n        # Save the hash to a file\n        filename = DIRECTORY + \"/\" + hash_value[:10] + \".txt\"\n        with open(filename, \"w\") as file:\n            file.write(line + \"\\n\")\n        # Store the file path in the list\n        file_paths.append(filename)\n    return file_paths", "tokens": ["#", " Create", " DIRECT", "ORY", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "#", " Iter", "ate", " over", " lines", "\n", "    ", "for", " index", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "#", " Skip", " empty", " lines", "\n", "        ", "if", " not", " line", ".", "strip", "():", "\n", "            ", "continue", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "        ", "hash", "_", "object", ".", "update", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "value", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Save", " the", " hash", " to", " a", " file", "\n", "        ", "filename", " =", " DIRECT", "ORY", " +", " \"", "/\"", " +", " hash", "_", "value", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "with", " open", "(", "filename", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", " +", " \"", "\\", "n", "\"", ")", "\n", "        ", "#", " Store", " the", " file", " path", " in", " the", " list", "\n", "        ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-1.524837851524353, -0.9560707211494446, -2.0302658081054688, -0.0011628062929958105, -0.13433344662189484, -0.30008941888809204, -0.8210095763206482, -0.0022763311862945557, -0.08065668493509293, -0.10085569322109222, -0.0013986576814204454, -0.18999597430229187, -0.010596557520329952, -0.0036434237845242023, -1.1205610462639015e-05, -0.000742279109545052, -0.0008455515489913523, -0.22346231341362, -0.0009126074146479368, -0.0029585659503936768, -3.6954811548639555e-06, -9.298280929215252e-06, -0.0007759897271171212, -0.005774127319455147, -0.003913483582437038, -0.030383525416254997, -0.00014757021563127637, -1.314482569694519, -2.777537883957848e-05, -0.0004727914638351649, -0.0015331668546423316, -3.671578815556131e-05, -0.00033861625706776977, -0.0033320642542093992, -0.00496132206171751, -2.1495630741119385, -0.6836289167404175, -1.8253010511398315, -1.3548880815505981, -0.3307981491088867, -0.2347623109817505, -0.24596372246742249, -0.4581370949745178, -0.4664495885372162, -0.0016052944120019674, -0.030620330944657326, -0.007782731670886278, -0.035052284598350525, -0.00013553177996072918, -0.00011693747364915907, -0.00019274283840786666, -0.09303787350654602, -1.6539855003356934, -0.02406890131533146, -0.0016613503685221076, -0.0002525725867599249, -0.004227867349982262, -0.0017321596387773752, -0.0069330837577581406, -1.828253149986267, -0.0009662011871114373, -0.14593291282653809, -1.895950436592102, -0.42644891142845154, -0.38762086629867554, -0.3260965049266815, -0.14213664829730988, -1.1675513982772827, -0.032084207981824875, -0.2475530058145523, -0.0004689785710070282, -0.03021559864282608, -0.009786129929125309, -0.005600357428193092, -0.015523787587881088, -0.012608221732079983, -0.0004183370911050588, -1.9024035930633545, -0.2596515715122223, -0.9894213080406189, -0.001940036192536354, -0.4249754846096039, -1.2912918329238892, -0.48321232199668884, -0.0014135378878563643, -0.009010841138660908, -2.103306293487549, -0.02674274705350399, -0.03906534984707832, -0.0015608996618539095, -0.0004567056894302368, -0.0007407305529341102, -0.00028534632292576134, -0.027674302458763123, -0.0016384999034926295, -0.034034255892038345, -0.2558645009994507, -1.3217401504516602, -0.036274392157793045, -0.010112952440977097, -0.03136957809329033, -0.0003691230376716703, -0.0059962146915495396, -0.458795964717865, -0.004124706145375967, -0.7623730301856995, -0.00531415268778801, -0.0011701886542141438, -0.01044898759573698, -0.00098525604698807, -0.005692698527127504, -0.0012480573495849967, -0.270492821931839, -0.05510864406824112, -2.0074081420898438, -0.11133559048175812, -0.13303188979625702, -0.5211950540542603, -0.09109541028738022, -0.0008978387922979891, -0.009467938914895058, -0.0003305127320345491, -1.7165990357170813e-05, -0.304838627576828, -0.0013227055314928293, -0.519967794418335, -0.044124867767095566, -2.3927652835845947, -0.0013108003186061978, -0.0006101653561927378, -2.622600959512056e-06, -9.298280929215252e-06, -0.0011861439561471343, -0.0008329259580932558, -2.407998726994265e-05, -3.576278118089249e-07, -0.43126773834228516, -0.0016277885297313333, -0.0032900036312639713, -0.022978927940130234, -0.0002598424907773733, -0.011861861683428288, -0.00014232576359063387, -5.531158240046352e-05, -0.003951480612158775, -0.010630881413817406, -0.009621556848287582, -0.013945166952908039, -0.30075863003730774, -0.014778191223740578, -0.004488274920731783, -0.21993453800678253, -0.022245166823267937, -0.26938188076019287, -0.001150541938841343, -0.0018089136574417353, -0.0009258274803869426, -9.440929716220126e-05, -1.3351351299206726e-05, -0.012133361771702766, -1.9788545614574105e-05, -0.0006971312686800957, -0.01605241373181343, -0.5247217416763306, -1.5984400510787964, -0.0015807764139026403, -0.03508796542882919, -2.9444804191589355, -0.04566297307610512, -0.19945788383483887, -0.3896142244338989, -0.09432125091552734, -0.11425383388996124, -0.439145028591156, -0.0009070096421055496, -1.264970302581787, -0.004462166223675013, -1.0672286748886108, -1.311301275563892e-06, -0.020702000707387924, -0.3888693153858185, -0.005884466227144003, -0.007235868368297815, -0.05830371752381325, -0.015048549510538578, -0.00014327930693980306, -0.2189050316810608, -0.007647049613296986, -0.004469880368560553, -0.008716156706213951, -0.014863112010061741, -0.05682830885052681, -0.000300958170555532, -0.0003649522550404072, -9.917721035890281e-05, -0.0058606453239917755, -0.03088817372918129, -0.5482929944992065, -0.0001551984460093081, -0.00034481301554478705, -0.002113491529598832, -0.0004096384218428284, -0.18254995346069336, -0.12612321972846985, -0.040015511214733124, -0.030922269448637962, -7.83174327807501e-05, -0.43109408020973206, -0.013408485800027847, -0.00044860312482342124, -0.0011947167804464698, -0.019529324024915695, -0.0011127954348921776, -0.003017755225300789, -0.00047469791024923325, -0.8611779808998108, -1.1217317581176758, -0.01686340756714344, -0.0034077451564371586, -0.001918857917189598, -0.011738159693777561, -0.0043335105292499065, -0.09086728096008301, -0.7087068557739258, -1.3023016452789307, -2.733902931213379, -0.08109361678361893, -0.08619030565023422, -0.015397603623569012, -0.5935202836990356, -0.1691901832818985, -0.14573508501052856, -0.058585721999406815, -0.0005054388311691582, -0.0008541273418813944, -0.0001714082609396428, -0.0016511153662577271, -0.0005560758872888982, -0.00010275312524754554, -0.00025960413040593266, -0.008269356563687325, -0.0017122859135270119, -0.00041654970846138895, -0.791566789150238, -0.19103743135929108, -0.007940866984426975, -1.7165990357170813e-05, -3.397406908334233e-05, -0.7613330483436584, -0.03354375809431076, -1.052332878112793], "finish_reason": "stop"}], "metrics": {"energy": 332.0963025074005, "energy_per_token": 1.3230928386749023, "time": 12.089664, "time_per_token": 0.048165992031872516}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    file_paths = []\n    # Your code goes here\n    return file_paths", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "#", " Your", " code", " goes", " here", "\n", "    ", "return", " file", "_", "paths"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.9921908378601074, -6.115249561844394e-05, -0.0019121948862448335, -0.0048715234734117985, -1.0967194612021558e-05, -0.00030751267331652343, -0.003631546162068844, -0.007949027232825756, -0.3900836110115051, -0.00047159992391243577, -1.2191096544265747, -0.01843181438744068, -0.05077270418405533, -0.019087916240096092, -0.026959877461194992, -0.010528024286031723, -0.5127488374710083, -3.765110492706299, -3.3255386352539062, -0.12392645329236984, -0.6579148769378662, -0.01244835089892149, -0.30673059821128845, -0.440878301858902, -2.6549742221832275, -0.056515954434871674, -0.0006235085893422365, -0.0003698380314745009], "finish_reason": "stop"}], "metrics": {"energy": 52.366107942581166, "energy_per_token": 1.1901388168768448, "time": 1.8864574, "time_per_token": 0.04287403181818182}}
{"outputs": [{"text": "file_paths = []\n    for line in input_string.splitlines():\n        if line:\n            file_paths.append(os.path.join(DIRECTORY,\n                                           hashlib.sha256(line.encode()).hexdigest()[:10] + '.txt'))\n\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ":", "\n", "            ", "file", "_", "paths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", "\n", "                ", "                ", "           ", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " '", ".", "txt", "'))", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -2.434816837310791, -0.24102912843227386, -0.020258773118257523, -0.026964519172906876, -0.00025078488397412, -0.0001731960946926847, -0.005341425072401762, -0.07181867957115173, -0.6537720561027527, -0.02262808009982109, -0.02072523720562458, -0.007842464372515678, -0.25277310609817505, -0.3663167953491211, -0.7107614278793335, -0.16633830964565277, -0.001304609584622085, -1.5905683040618896, -0.06375148147344589, -2.2019381523132324, -0.007835722528398037, -0.0033639054745435715, -0.020159821957349777, -1.2149584293365479, -0.0001380348257953301, -0.0024182144552469254, -0.012617403641343117, -0.00973513163626194, -0.0014459164813160896, -0.06924036890268326, -7.748573807475623e-06, -1.847726889536716e-05, -0.0013779440196231008, -2.0174217224121094, -0.025387832894921303, -0.45223912596702576, -0.19141168892383575, -0.223752960562706, -0.00021526881027966738, -0.0008295908919535577, -0.0063303192146122456, -0.003039028961211443, -0.000286657246761024, -9.417489309271332e-06, -0.01972348242998123, -0.08044221997261047, -0.009822487831115723, -0.02195330709218979, -0.44594165682792664, -0.010570253245532513, -0.004087071865797043, -0.00014304091746453196, -0.005390276201069355, -0.12579981982707977, -0.1940985918045044, -0.018066255375742912, -0.01505641732364893, -0.10758228600025177, -0.013867457397282124, -0.8598219156265259, -0.00033682872890494764, -0.0004892344586551189, -0.03858752176165581, -0.00557878240942955, -1.6528810262680054, -0.14181725680828094, -0.695144772529602, -0.018076792359352112, -0.0003367095487192273, -4.351044481154531e-05, -0.9885700941085815, -2.3841855067985307e-07, -1.5497195136049413e-06, -0.00017736769223120064, -0.0001497156627010554, -0.056720633059740067], "finish_reason": "stop"}], "metrics": {"energy": 131.58236731338502, "energy_per_token": 1.5853297266672894, "time": 3.7701354, "time_per_token": 0.04542331807228916}}
{"outputs": [{"text": "file_paths = []\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    for line in input_string.split(\"\\n\"):\n        if not line:\n            continue\n        file_path = os.path.join(DIRECTORY, hashlib.sha256(line.encode('utf-8')).hexdigest() + \".txt\")\n        with open(file_path, 'w') as file:\n            file.write(line)\n        file_paths.append(file_path)\n\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", "):", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", " +", " \"", ".", "txt", "\"", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -1.6310847997665405, -0.09055916965007782, -0.009351144544780254, -1.764281842042692e-05, -0.0014215136179700494, -0.0019180249655619264, -1.2293727397918701, -0.002301426837220788, -0.0008136299438774586, -0.002142516663298011, -7.152531907195225e-06, -2.264974000354414e-06, -0.0030114559922367334, -0.02659568376839161, -0.005607588682323694, -0.0468810610473156, -6.031808152329177e-05, -0.37085720896720886, -7.950943836476654e-05, -0.0008411445305682719, -0.0037303639110177755, -5.3165931603871286e-05, -4.5536911784438416e-05, -0.0031370734795928, -0.003908971324563026, -0.7561411261558533, -0.0006192197324708104, -1.3442423343658447, -0.3017491400241852, -0.012277503497898579, -0.01946011558175087, -0.0010063351364806294, -0.00020239688456058502, -0.0023467401042580605, -0.06095857545733452, -1.2393178939819336, -0.05094197019934654, -0.0015629230765625834, -0.00026806574896909297, -0.0037621925584971905, -0.010689028538763523, -0.009345239959657192, -0.005830305628478527, -0.2501589357852936, -1.518263816833496, -0.03446439653635025, -1.0980756282806396, -0.06017472222447395, -0.0011553048389032483, -0.011298130266368389, -0.023852305486798286, -0.5151557922363281, -1.9548532962799072, -0.09219496697187424, -0.9338383674621582, -0.008242282085120678, -0.25210869312286377, -1.5616295058862306e-05, -0.0005235493299551308, -0.014552289620041847, -0.0043694740161299706, -0.0002743821241892874, -0.03598269075155258, -8.344646857949556e-07, -4.0411134250462055e-05, -0.000841025379486382, -0.38080599904060364, -0.0003175231395289302, -0.00011038171214750037, -0.005155008751899004, -0.001977275824174285, -0.00024005869636312127, -5.245195097813848e-06, -0.007222376763820648, -0.019556213170289993, -0.017967205494642258, -0.013313443399965763, -1.7344276905059814, -0.02086896263062954, -0.01461784541606903, -0.00012385078298393637, -0.0008186326595023274, -0.0008344743982888758, -0.0013666347367689013, -0.00017832119192462415, -0.0009957361035048962, -0.10400845855474472, -0.7565252184867859, -0.37668222188949585, -0.0003516055876389146, -0.0003293210465926677, -0.0001255195093108341, -0.0010627818992361426, -0.0022814455442130566, -0.021122155711054802, -0.8053651452064514, -0.0007636015070602298, -0.00041547726141288877, -0.0008330450509674847, -4.768360213347478e-06, -1.1324817933200393e-05, -0.0005023409612476826, -1.0347144603729248, -0.0983332172036171, -0.17198505997657776, -0.0021757043432444334, -0.5851806402206421, -0.031997621059417725, -0.0014210374793037772, -0.0009638193296268582, -0.01680714264512062, -0.005300634540617466, -0.007937791757285595, -0.004852660931646824, -0.04074825346469879, -0.2226281464099884, -0.0013560395454987884, -0.09436800330877304, -0.005303598940372467, -0.0009410720085725188, -0.0005886013968847692, -0.0007252446957863867, -7.545663538621739e-05, -0.00019131260341964662, -0.002290009055286646, -0.017188511788845062, -3.4570634852570947e-06, -0.0011523280991241336, -0.004538117442280054, -0.49845364689826965, -0.002281683497130871, -0.013250861316919327, -0.0059104193933308125, -6.198863957251888e-06, -2.8967437174287625e-05], "finish_reason": "stop"}], "metrics": {"energy": 196.3798820362091, "energy_per_token": 1.3829569157479513, "time": 6.477564, "time_per_token": 0.04561664788732395}}
{"outputs": [{"text": "# Check if the directory exists and create it if not\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Get the hash of each non-empty line and save it to a file\n    lines = input_string.splitlines()\n    file_paths = []\n    for i in range(len(lines)):\n        if lines[i].strip():\n            with open(os.path.join(DIRECTORY, hashlib.sha256(lines[i].encode('utf-8')).hexdigest() + \".txt\"), 'w') as file:\n                file.write(lines[i])\n            file_paths.append(os.path.join(DIRECTORY, hashlib.sha256(lines[i].encode('utf-8')).hexdigest() + \".txt\"))\n    return file_paths", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " create", " it", " if", " not", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Get", " the", " hash", " of", " each", " non", "-", "empty", " line", " and", " save", " it", " to", " a", " file", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "lines", "))", ":", "\n", "        ", "if", " lines", "[", "i", "]", ".", "strip", "():", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "lib", ".", "sha", "2", "5", "6", "(", "lines", "[", "i", "]", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", " +", " \"", ".", "txt", "\"", ")", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "lines", "[", "i", "])", "\n", "            ", "file", "_", "paths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "lib", ".", "sha", "2", "5", "6", "(", "lines", "[", "i", "]", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", " +", " \"", ".", "txt", "\"", "))", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.524837851524353, -1.98301100730896, -0.24812398850917816, -0.524287223815918, -2.000532627105713, -0.04958181083202362, -2.5524697303771973, -0.18723542988300323, -0.015286196954548359, -0.011241433210670948, -1.6132090091705322, -0.22515130043029785, -0.0012003129813820124, -0.07505357265472412, -0.005306089296936989, -0.00211658445186913, -9.417489309271332e-06, -0.0004065402317792177, -0.0006883158930577338, -0.14273451268672943, -0.0004948345012962818, -0.001383896335028112, -5.364403477869928e-06, -1.6689286894688848e-06, -0.0010874316794797778, -0.0025052609853446484, -0.0021098037250339985, -0.01679108291864395, -0.00036173476837575436, -0.19098426401615143, -5.245071224635467e-05, -0.0007338214782066643, -0.000120751719805412, -0.0006052807439118624, -6.05564855504781e-05, -0.0003274143091402948, -0.018033239990472794, -0.0025033585261553526, -0.09575182944536209, -0.0009739422821439803, -0.422658234834671, -2.951476573944092, -0.8760389089584351, -2.374098300933838, -0.33512672781944275, -0.32276812195777893, -0.26419371366500854, -0.00242594419978559, -0.00350254587829113, -0.00604053121060133, -1.7563207149505615, -0.1760891228914261, -0.40122491121292114, -0.34696638584136963, -0.060698892921209335, -0.1777319461107254, -0.21420815587043762, -0.0024763653054833412, -2.1349239349365234, -0.028906267136335373, -0.10146733373403549, -0.0001494772732257843, -0.0001394651480950415, -0.0005187834613025188, -0.14694707095623016, -0.5867139101028442, -0.010211603716015816, -0.022007884457707405, -0.03489573299884796, -0.9441676139831543, -0.012219213880598545, -0.020182136446237564, -0.004705190192908049, -0.01760885678231716, -0.00566733255982399, -0.11186464130878448, -0.024214359000325203, -0.8698949813842773, -1.8180540800094604, -0.024787835776805878, -0.00036864637513644993, -0.08514422923326492, -5.972207145532593e-05, -0.00018559163436293602, -0.0023486430291086435, -9.476689592702314e-05, -0.00208850996568799, -0.0022756175603717566, -0.2503753900527954, -0.2061285376548767, -0.00025006983196362853, -5.352353764465079e-05, -0.4421485960483551, -0.2612196207046509, -0.006323567125946283, -0.11458916962146759, -0.30925121903419495, -0.001073975581675768, -2.2360262870788574, -0.001927543431520462, -0.007234093267470598, -0.3708381950855255, -6.508615479106084e-05, -0.0005631053354591131, -0.004556392319500446, -0.000440262199845165, -0.0002450642641633749, -0.004317249171435833, -1.3232143828645349e-05, -0.00017820201173890382, -0.00030179237364791334, -0.9564120173454285, -0.00019941726350225508, -4.362964682513848e-05, -0.009688262827694416, -0.002380396705120802, -0.00032669928623363376, -2.145764938177308e-06, -0.00911810714751482, -0.020093576982617378, -3.313963316031732e-05, -6.747018051100895e-05, -0.009712819010019302, -5.6265202147187665e-05, -0.023964624851942062, -1.7377984523773193, -0.020507097244262695, -0.011088299565017223, -7.962863310240209e-05, -0.0008758046315051615, -0.0003912875254172832, -0.0044381930492818356, -8.391981828026474e-05, -0.0013213959755375981, -0.023413965478539467, -0.10426605492830276, -0.5919586420059204, -0.0002972637885250151, -0.00035363141796551645, -0.00045110538485459983, -0.0025113255251199007, -0.0010006187949329615, -0.6781173348426819, -0.08510152995586395, -0.09392674267292023, -0.000969535845797509, -0.9302382469177246, -0.0034765300806611776, -0.0014544870937243104, -0.0009146321099251509, -0.017359107732772827, -0.024169443175196648, -0.008163537830114365, -0.02247178554534912, -0.1521535962820053, -0.0001656871900195256, -2.4914430468925275e-05, -0.056077051907777786, -0.011655683629214764, -0.28711438179016113, -0.0106733413413167, -0.0021146810613572598, -0.0029049599543213844, -0.0006799769471399486, -7.60526381782256e-05, -0.001940036192536354, -0.03610733896493912, -0.000179036331246607, -6.782778655178845e-05, -0.0001382732152706012, -0.023238925263285637, -0.0008329259580932558, -0.003962523303925991, -5.972207145532593e-05, -5.125868119648658e-05, -0.0006065912893973291, -0.013809730298817158, -3.576272320060525e-06, -3.3378546504536644e-06, -0.00023183519078884274, -6.48477507638745e-05, -4.529942543740617e-06, -1.0013530300057027e-05, -0.00016020445036701858, -0.0022184066474437714, -1.2040065485052764e-05, -3.802703940891661e-05, -0.0001501924270996824, -2.706014311115723e-05, -7.450303382938728e-05, -0.0015510206576436758, -0.00015805903240107, -0.0003303935518488288, -1.5497195136049413e-06, -2.825220326485578e-05, -0.00012861855793744326, -0.0001003691868390888, -0.0001308832288486883, -0.0002824861148837954, -0.0011323237558826804, -0.006601075176149607, -0.008621967397630215, -0.00016056202002801, -3.433168603805825e-05, -3.194758028257638e-05, -0.001593511551618576, -0.003846272360533476, -0.7814279198646545, -0.024033639580011368, -0.007932824082672596, -5.98412734689191e-05, -6.9141146923357155e-06, -0.8989482522010803, -4.768370445162873e-07, -1.6689286894688848e-06, -4.577531944960356e-05, -0.00018285033002030104, -0.09223681688308716], "finish_reason": "stop"}], "metrics": {"energy": 299.8711230392456, "energy_per_token": 1.375555610271769, "time": 10.214072, "time_per_token": 0.046853541284403666}}
{"outputs": [{"text": "os.makedirs(DIRECTORY, exist_ok=True)\n\n    file_paths = []\n\n    # Split input_string into lines using \\n\n    lines = input_string.split(\"\\n\")\n\n    # Hash each non-empty line\n    for line in lines:\n        if line.strip():\n            hash_object = hashlib.sha256(line.encode())\n            file_path = os.path.join(DIRECTORY, hash_object.hexdigest() + \".txt\")\n            file_paths.append(file_path)\n\n            # Write the hash to the file\n            with open(file_path, \"w\") as f:\n                f.write(hash_object.hexdigest())\n\n    return file_paths", "tokens": ["os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " input", "_", "string", " into", " lines", " using", " \\", "n", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "#", " Hash", " each", " non", "-", "empty", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "object", ".", "hex", "dig", "est", "()", " +", " \"", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Write", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", "_", "object", ".", "hex", "dig", "est", "())", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.091442584991455, -0.00046075694262981415, -0.020452555269002914, -0.0001280225842492655, -0.0005509527400135994, -0.0049972631968557835, -0.0069490657187998295, -4.172316494077677e-06, -4.565611743601039e-05, -0.004000043962150812, -0.018149493262171745, -1.1920928244535389e-07, -6.460934673668817e-05, -0.011792119592428207, -0.0017611959483474493, -0.0017047885339707136, -0.06826536357402802, -0.7929064035415649, -0.00047886825632303953, -1.6160342693328857, -0.02697635628283024, -0.08921218663454056, -0.02237783372402191, -0.040404390543699265, -0.011155732907354832, -0.794841468334198, -0.00019894051365554333, -1.9387212991714478, -1.3519777059555054, -1.9749577045440674, -1.5755500793457031, -0.009287958964705467, -0.2541141211986542, -0.35811880230903625, -3.2563493251800537, -1.6113145351409912, -0.009624036028981209, -1.3757455348968506, -0.0004145239945501089, -0.134384423494339, -0.011948561295866966, -0.02212449163198471, -5.6265202147187665e-05, -6.0794889577664435e-05, -0.00027223696815781295, -0.061902739107608795, -0.5757498741149902, -0.020611852407455444, -0.0046617635525763035, -0.00013493580627255142, -0.002845288719981909, -0.0010986251290887594, -0.003333252388983965, -0.06126124784350395, -0.00014900050882715732, -0.36376145482063293, -2.9131178855895996, -0.2711399495601654, -0.19581258296966553, -0.0007177399238571525, -0.0012178155593574047, -0.005141488742083311, -1.5744502544403076, -0.00031895318534225225, -0.021199537441134453, -0.8259369134902954, -0.13667555153369904, -0.0035556447692215443, -0.0006766413571313024, -0.00014625910262111574, -0.0036387916188687086, -0.2895253896713257, -0.23646479845046997, -0.5691359639167786, -0.0032005298417061567, -0.10877486318349838, -0.6058583855628967, -0.0013438966125249863, -0.9664398431777954, -0.060780901461839676, -1.9797371625900269, -0.0007234578370116651, -0.0004681444843299687, -4.172316494077677e-06, -9.536697689327411e-06, -0.0026478252839297056, -0.0011323237558826804, -5.07818695041351e-05, -4.0531076592742465e-06, -1.9530858993530273, -0.011738630943000317, -0.0016338583081960678, -0.08270051330327988, -0.20913618803024292, -0.01483139954507351, -0.005571314133703709, -0.8099687695503235, -0.03146442025899887, -0.591655969619751, -0.0029032959137111902, -0.13994185626506805, -3.099436753473128e-06, -0.00018094333063345402, -0.007465677335858345, -0.0011524471919983625, -0.0003939091111533344, -0.0158016886562109, -9.536738616588991e-07, -0.00010930894495686516, -0.00022682955022901297, -0.4920424222946167, -0.04874027520418167, -0.001086717238649726, -0.00011538793478393927, -0.0011025547282770276, -0.0011132716899737716, -0.0018454440869390965, -0.12506099045276642, -0.8279514908790588, -0.23248064517974854, -0.00029094755882397294, -0.0001711698860162869, -7.056941103655845e-05, -0.0001656871900195256, -0.005672429222613573, -0.05855952575802803, -0.38981160521507263, -0.04726148396730423, -0.024861328303813934, -0.0007943335804156959, -0.00012659224739763886, -0.00021908267808612436, -0.0018763808766379952, -5.006777428206988e-06, -1.0967194612021558e-05, -0.0002618685248307884, -0.002241719514131546, -1.2247563600540161, -0.06556923687458038, -0.6199381351470947, -1.026200294494629, -0.17710661888122559, -0.9263107776641846, -0.09197784960269928, -0.5677100419998169, -0.0836559534072876, -0.06529232859611511, -0.0006898645660839975, -0.016918262466788292, -7.211902266135439e-05, -0.00011443436960689723, -0.0019220703979954123, -2.4199192921514623e-05, -8.34430247778073e-05, -0.00036840804386883974, -0.20282310247421265, -0.04407878592610359, -0.02780393324792385, -0.03689051792025566, -3.58813522325363e-05, -1.2990431785583496, -0.007288769353181124, -0.00047267231275327504, -0.000448841426987201, -0.018158741295337677, -1.3708974620385561e-05, -0.0014786511892452836, -0.00023183519078884274, -0.020050112158060074, -0.0003895000845659524, -0.00014649749209638685, -0.00016068121476564556, -0.0009813260985538363, -0.0011454218765720725, -0.000723576988093555, -0.015001693740487099, -0.0009242791566066444, -0.06023544818162918, -0.005723872222006321, -0.015584702603518963, -0.004231191240251064, -1.585470999998506e-05, -1.4424220353248529e-05, -1.2175971269607544, -2.3841855067985307e-07, -1.1920922133867862e-06, -0.00022742546570952982, -0.0001938155182870105, -0.057823292911052704], "finish_reason": "stop"}], "metrics": {"energy": 272.46418483161926, "energy_per_token": 1.4416094435535411, "time": 8.761, "time_per_token": 0.04635449735449735}}
{"outputs": [{"text": "file_paths = []\n    lines = input_string.splitlines()\n\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    for i in range(0, len(lines)):\n        if not lines[i].isspace():\n            hash_value = hashlib.sha256(lines[i].encode()).hexdigest()\n            with open(f\"{DIRECTORY}/{hash_value[:10]}.txt\", \"w\") as file:\n                file.write(hash_value)\n            file_paths.append(f\"{DIRECTORY}/{hash_value[:10]}.txt\")\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "for", " i", " in", " range", "(", "0", ",", " len", "(", "lines", "))", ":", "\n", "        ", "if", " not", " lines", "[", "i", "]", ".", "iss", "pace", "():", "\n", "            ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "lines", "[", "i", "]", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "with", " open", "(", "f", "\"", "{", "DI", "RECT", "ORY", "}/{", "hash", "_", "value", "[:", "1", "0", "]}", ".", "txt", "\"", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "value", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "f", "\"", "{", "DI", "RECT", "ORY", "}/{", "hash", "_", "value", "[:", "1", "0", "]}", ".", "txt", "\"", ")", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -2.269148349761963, -0.06580254435539246, -0.17572979629039764, -0.00020382710499688983, -0.0002699726028367877, -0.0012266262201592326, -0.1330324113368988, -0.8261587023735046, -0.012310239486396313, -0.029635736718773842, -1.2041730880737305, -0.000573351513594389, -1.249926209449768, -0.09946639835834503, -0.005465446040034294, -9.65590606938349e-06, -0.001053493469953537, -0.0033124599140137434, -0.2556789517402649, -0.0010194348869845271, -0.002284894697368145, -9.417489309271332e-06, -1.0728830375228426e-06, -0.0017124050064012408, -0.009892367757856846, -0.003731076605618, -0.027388663962483406, -0.00016020445036701858, -0.7842545509338379, -4.1960789531003684e-05, -0.0007501410436816514, -0.0029344377107918262, -4.637133679352701e-05, -0.00030012393835932016, -0.0025377231650054455, -0.004482341464608908, -0.0360383465886116, -0.0005373702733777463, -0.09291621297597885, -0.9450832009315491, -1.4940651655197144, -0.03800182044506073, -0.0010620674584060907, -2.5422544479370117, -0.0003761537664104253, -0.03620483726263046, -3.9934315282152966e-05, -0.0008822362869977951, -0.3760716915130615, -0.0004545609117485583, -0.007089340593665838, -0.02044508047401905, -0.45813798904418945, -2.278623580932617, -0.040109653025865555, -0.00043704494601115584, -0.00017105070583056659, -0.1883043646812439, -0.12821178138256073, -1.292973279953003, -5.054346183896996e-05, -0.08188332617282867, -0.03336656093597412, -0.005979388020932674, -1.4108479022979736, -0.14598092436790466, -1.1372977495193481, -0.0032165716402232647, -0.02631205879151821, -0.000624104228336364, -4.708655978902243e-05, -0.002893073484301567, -0.00263569806702435, -0.00011276562872808427, -4.768360213347478e-06, -0.07897336035966873, -0.03164542093873024, -4.684815212385729e-05, -5.090107151772827e-05, -0.0043741026893258095, -7.021180499577895e-05, -0.005381976254284382, -0.2167946696281433, -0.1384720802307129, -0.011761370114982128, -7.295342220459133e-05, -0.0008630603551864624, -0.051154930144548416, -0.23855505883693695, -0.06369131058454514, -2.2008605003356934, -0.0009137984015978873, -0.0057297986932098866, -0.8406171202659607, -0.13685385882854462, -0.08137652277946472, -0.015265299007296562, -1.9073304429184645e-05, -4.768370445162873e-07, -0.05659684166312218, -0.00781360361725092, -0.04714629054069519, -0.0001501924270996824, -0.15393778681755066, -0.010264229029417038, -0.005627266597002745, -0.019627168774604797, -0.002238508081063628, -0.0003082277253270149, -0.0001212284987559542, -0.0005629861843772233, -0.22942328453063965, -0.10948554426431656, -0.1349770426750183, -0.04260724410414696, -0.0004891153075732291, -0.5895043015480042, -0.014759632758796215, -0.0018754289485514164, -0.0007223857101053, -0.015574491582810879, -0.02327980473637581, -0.010085219517350197, -0.00293717160820961, -0.7453845739364624, -0.0014092524070292711, -5.924526340095326e-05, -0.05187876895070076, -0.0029286136850714684, -0.22662915289402008, -0.008156916126608849, -0.0029502459801733494, -0.0031314881052821875, -0.003035701345652342, -0.00020180096908006817, -0.0013997290516272187, -0.030668308958411217, -0.007834776304662228, -0.11369498074054718, -0.0031272100750356913, -5.960462772236497e-07, -5.8887653722194955e-05, -0.0013616346986964345, -0.0010521834483370185, -3.576278118089249e-07, -1.4305104514278355e-06, -0.0004923323867842555, -0.0002693767019081861, -0.00017724849749356508, -0.0013092526933178306, -0.0020053531043231487, -3.7431014789035544e-05, -3.683499380713329e-05, -0.0007799206068739295, -0.006895081140100956, -0.9450389742851257, -0.0184225682169199, -0.008079583756625652, -1.823885577323381e-05, -7.033323527139146e-06, -1.054407000541687, -3.576278118089249e-07, -1.4305104514278355e-06, -0.00010692501382436603, -0.00016819016309455037, -0.0780303031206131], "finish_reason": "stop"}], "metrics": {"energy": 262.04608674430835, "energy_per_token": 1.5147172644179674, "time": 7.9574623, "time_per_token": 0.04599689190751445}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    hashes = {}\n    file_paths = []\n    lines = input_string.split('\\n')\n    for line in lines:\n        line = line.strip()\n        if not line:\n            continue\n        hasher = hashlib.sha256()\n        hasher.update(line.encode())\n        hash_str = hasher.hexdigest()[:10] + '.txt'\n        path = os.path.join(DIRECTORY, hash_str)\n        with open(path, 'w') as f:\n            f.write(hash_str)\n        hashes[path] = hasher.hexdigest()\n    return list(hashes.keys())", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "has", "her", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "        ", "has", "her", ".", "update", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "str", " =", " has", "her", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "str", ")", "\n", "        ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "hash", "_", "str", ")", "\n", "        ", "has", "hes", "[", "path", "]", " =", " has", "her", ".", "hex", "dig", "est", "()", "\n", "    ", "return", " list", "(", "has", "hes", ".", "keys", "())", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.9921908378601074, -6.115249561844394e-05, -0.0019121948862448335, -0.0048715234734117985, -1.0967194612021558e-05, -0.00030751267331652343, -0.003631546162068844, -0.007949027232825756, -1.1451952457427979, -2.4920923709869385, -0.043550051748752594, -0.1500779688358307, -2.4492533206939697, -0.02851926162838936, -0.12861542403697968, -2.091383457183838, -0.03186437860131264, -0.07801277190446854, -0.010197089985013008, -0.012176583521068096, -0.004446619190275669, -0.18497425317764282, -1.1343927383422852, -0.017392965033650398, -0.10416315495967865, -0.00020787939138244838, -0.00014554394874721766, -0.0008328068652190268, -0.13443413376808167, -1.7800086736679077, -0.001423537265509367, -0.000406301929615438, -0.0037836881820112467, -0.02027909830212593, -0.1245390921831131, -0.13929513096809387, -0.5253241658210754, -0.0590684749186039, -0.004208992701023817, -0.002579221036285162, -0.003048774553462863, -0.002880949294194579, -1.5893516540527344, -0.0788373053073883, -0.004043261986225843, -0.0009664393728598952, -0.0619792677462101, -0.026631204411387444, -0.031744394451379776, -0.004913991782814264, -0.012085191905498505, -1.3621833324432373, -0.020540615543723106, -0.035493724048137665, -0.051814932376146317, -0.0008529362385161221, -0.00811493955552578, -0.025600958615541458, -0.026710480451583862, -2.4588990211486816, -0.5338181257247925, -0.0018741200910881162, -0.0014602008741348982, -1.3232143828645349e-05, -2.4199192921514623e-05, -0.008583437651395798, -0.0017100248951464891, -8.618460560683161e-05, -9.775113539944869e-06, -0.08545728772878647, -0.007673903834074736, -0.001099935034289956, -0.05310378596186638, -0.00041500062798149884, -0.00017927470616996288, -5.94836674281396e-05, -0.005694832187145948, -0.018439538776874542, -0.019210243597626686, -0.0007743220776319504, -0.607817530632019, -0.010425747372210026, -0.0018575809663161635, -0.3526390492916107, -0.17650878429412842, -2.021538496017456, -0.00062851223628968, -0.008747000247240067, -0.000228140561375767, -1.0847986231965479e-05, -0.022690778598189354, -9.285972191719338e-05, -0.0012119814055040479, -0.020309003069996834, -0.8936728239059448, -0.02372518926858902, -0.013543388806283474, -0.006061504129320383, -1.905769944190979, -0.6106506586074829, -0.0005273620481602848, -0.00028832571115344763, -0.00018475732940714806, -0.012892465107142925, -0.01497926376760006, -3.137925624847412, -0.015808729454874992, -0.10005602240562439, -1.9073468138230965e-06, -0.0002348147245356813, -0.00419973349198699, -0.0022362482268363237, -0.0008557948167435825, -0.00203557126224041, -7.629365427419543e-06, -0.00011228884250158444, -0.00040368037298321724, -0.018984287977218628, -0.00012814177898690104, -2.2291887944447808e-05, -0.00040737437666393816, -0.002130145439878106, -0.016465146094560623, -1.7187403440475464, -0.0008880723617039621, -0.0003327769518364221, -0.0009825170272961259, -0.00035148640745319426, -0.06854657828807831, -0.11312483996152878, -0.05130612850189209, -0.0006748544401489198, -0.6029220223426819, -0.01975492388010025, -0.0013091336004436016, -0.0007017772295512259, -0.051152437925338745, -2.038458114839159e-05, -0.003768961876630783, -0.008188249543309212, -1.5735961198806763, -0.0009411911014467478, -8.105902816168964e-05, -0.0775214284658432, -0.002514773979783058, -0.4827863574028015, -0.27667999267578125, -0.00015793983766343445, -0.004687748849391937, -1.3595936298370361, -0.00608034385368228, -0.0001062098381225951, -2.7464072704315186, -0.0750136449933052, -0.0727192834019661, -0.11565800756216049, -0.0002739054325502366, -0.0004990047891624272, -0.0011299422476440668, -0.00701133394613862, -2.2082231044769287, -0.5253893733024597, -0.1694464236497879, -0.0004944770480506122, -0.004470473621040583, -1.2159273865108844e-05, -0.06123747676610947, -0.0022368428763002157, -0.00023135847004596144, -1.4242870807647705, -1.1920922133867862e-06, -2.3841830625315197e-06, -0.00010871296399272978, -0.0002653246629051864, -0.11823338270187378], "finish_reason": "stop"}], "metrics": {"energy": 244.24498734283452, "energy_per_token": 1.2787695672399713, "time": 8.787113, "time_per_token": 0.046005827225130885}}
{"outputs": [{"text": "lines = input_string.split(\"\\n\")\n\n    for index, line in enumerate(lines):\n        if line:\n            with open(os.path.join(DIRECTORY,\n                                   hashlib.sha256(line.encode()).hexdigest()[:10] + '.txt'),\n                      \"w\") as file:\n                file.write(line)\n\n    return [os.path.join(DIRECTORY,\n                         hashlib.sha256(line.encode()).hexdigest()[:10] + '.txt') for line in lines if line]", "tokens": ["lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "for", " index", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "if", " line", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", "\n", "                ", "                ", "   ", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " '", ".", "txt", "')", ",", "\n", "                ", "      ", "\"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "line", ")", "\n", "\n", "    ", "return", " [", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", "\n", "                ", "         ", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " '", ".", "txt", "')", " for", " line", " in", " lines", " if", " line", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-2.3753437995910645, -0.0471896193921566, -0.2069699913263321, -0.0002115741081070155, -0.00029881304362788796, -0.0016044613439589739, -0.13948677480220795, -1.2195937633514404, -0.04690017178654671, -0.00248873233795166, -0.0002388668799540028, -0.008075918070971966, -0.004797851666808128, -0.05770920217037201, -1.464072585105896, -0.0005631053354591131, -2.8859517574310303, -1.736328363418579, -0.0894676223397255, -0.11254777759313583, -0.004706969950348139, -0.0010801678290590644, -0.0007750368095003068, -0.0014299653703346848, -0.022844359278678894, -0.006178445648401976, -0.02058931440114975, -0.2602260708808899, -0.5247803330421448, -0.9131035208702087, -0.09080413728952408, -0.0061956243589520454, -2.7023119926452637, -0.024656999856233597, -0.0031459862366318703, -0.6296068429946899, -2.1934269170742482e-05, -0.002449490362778306, -0.0073632048442959785, -0.0023648173082619905, -0.0007706294418312609, -0.013720135204494, -9.65590606938349e-06, -1.2278481335670222e-05, -0.0011021974496543407, -2.5314278602600098, -0.010841633193194866, -0.29782989621162415, -0.21794886887073517, -0.20353439450263977, -0.00014411364099942148, -0.0011363723315298557, -0.012003215961158276, -0.002463760320097208, -0.0002517383254598826, -4.0531076592742465e-06, -0.05113545060157776, -0.122340627014637, -0.00614527240395546, -0.025743521749973297, -0.5362328886985779, -0.009383031167089939, -0.004152960609644651, -0.0001174142598756589, -0.008911953307688236, -0.229063481092453, -0.5321695804595947, -0.02969706989824772, -0.015048784203827381, -0.06366501748561859, -0.01077807042747736, -1.6899689435958862, -0.0005164004978723824, -0.0005677518784068525, -0.0050629740580916405, -0.0026710093952715397, -0.9588594436645508, -0.001453058677725494, -0.04642379656434059, -0.7780001163482666, -0.16071614623069763, -0.24214297533035278, -0.20217597484588623, -0.0020342625211924314, -0.6023451685905457, -0.07738837599754333, -0.003968460485339165, -0.0038903281092643738, -0.06423544138669968, -0.0002735478919930756, -0.016606437042355537, -0.006567560601979494, -0.14520634710788727, -0.14106273651123047, -0.008251858875155449, -0.26145994663238525, -0.0313178189098835, -0.17199721932411194, -0.48636090755462646, -0.44729405641555786, -9.179073458653875e-06, -0.0005274811992421746, -0.00013720047718379647, -0.01879139058291912, -0.0011501847766339779, -0.018932001665234566, -6.437280717364047e-06, -4.911301948595792e-05, -0.0015892268856987357, -1.2980303764343262, -0.0009333306807093322, -0.032318420708179474, -0.010329240933060646, -2.0146166207268834e-05, -7.354942499659956e-05, -0.0003499372396618128, -0.00011467275908216834, -1.9073468138230965e-06, -1.0847986231965479e-05, -0.0006300609675236046, -0.03023410402238369, -0.0018625784432515502, -0.0001230164198204875, -0.0007940953364595771, -0.0007316772826015949, -0.00013648532330989838, -0.0001481661747675389, -0.0009665584657341242, -0.0033356286585330963, -0.0005457103834487498, -0.000402250443585217, -0.0013658013194799423, -0.005988038145005703, -0.0015090041561052203, -0.040590643882751465, -0.00017510310863144696, -2.2291887944447808e-05, -0.017988983541727066, -1.372905969619751, -0.2418983429670334, -0.022148162126541138, -0.0300153698772192, -0.601001501083374, -0.41320356726646423, -1.590204119682312, -2.3841855067985307e-07, -1.311301275563892e-06, -2.634490556374658e-05, -0.00017581824795342982, -0.09985549002885818], "finish_reason": "stop"}], "metrics": {"energy": 191.1037305030823, "energy_per_token": 1.2740248700205485, "time": 6.901206, "time_per_token": 0.04600804}}
{"outputs": [{"text": "file_paths = []\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    # Split the input string into lines\n    lines = input_string.strip().split('\\n')\n\n    # Remove empty lines and create a list of non-empty lines\n    non_empty_lines = [line for line in lines if line.strip()]\n\n    # Hash each non-empty line using SHA256 and save the hashes to a file\n    for i, line in enumerate(non_empty_lines):\n        filename = hashlib.sha256(line.encode()).hexdigest()[:10] + \".txt\"\n        with open(os.path.join(DIRECTORY, filename), \"w\") as file:\n            file.write(line)\n        file_paths.append(os.path.join(DIRECTORY, filename))\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "strip", "()", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Remove", " empty", " lines", " and", " create", " a", " list", " of", " non", "-", "empty", " lines", "\n", "    ", "non", "_", "empty", "_", "lines", " =", " [", "line", " for", " line", " in", " lines", " if", " line", ".", "strip", "()", "]", "\n", "\n", "    ", "#", " Hash", " each", " non", "-", "empty", " line", " using", " SH", "A", "2", "5", "6", " and", " save", " the", " has", "hes", " to", " a", " file", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "non", "_", "empty", "_", "lines", "):", "\n", "        ", "filename", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", "))", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-1.333654761314392, -0.034789007157087326, -0.03343470022082329, -0.01884286478161812, -0.03244629502296448, -0.029129181057214737, -0.4314008355140686, -1.6310847997665405, -0.09055916965007782, -0.009351144544780254, -1.764281842042692e-05, -0.0014215136179700494, -0.0019180249655619264, -0.3470389246940613, -0.0013758012792095542, -0.0033968149218708277, -5.006777428206988e-06, -1.4305104514278355e-06, -0.0013553252210840583, -0.02492005005478859, -0.005991474725306034, -0.04512960463762283, -0.0002687808300834149, -1.0116028785705566, -6.69933797325939e-05, -0.0013817534781992435, -0.004084222484380007, -1.1086402082582936e-05, -0.00011765264935093, -0.002625472843647003, -0.0069833965972065926, -0.6159268617630005, -2.7142486572265625, -2.3562746047973633, -0.5711199641227722, -0.2925269305706024, -0.2048715502023697, -0.25024721026420593, -0.36053016781806946, -0.7103803157806396, -0.0022034193389117718, -0.031002478674054146, -0.006252489984035492, -0.031110184267163277, -0.00019572250312194228, -0.00010764019680209458, -0.00023266946664080024, -2.198585033416748, -0.015126636251807213, -0.00039414744242094457, -0.001400562352500856, -0.5950072407722473, -0.0003779412363655865, -0.0002914242504630238, -0.0020409247372299433, -0.00720486044883728, -0.9486149549484253, -0.0006348263123072684, -0.17537584900856018, -1.5238622426986694, -0.04753195494413376, -0.0042349896393716335, -0.8924024105072021, -3.3765270709991455, -0.8304979801177979, -0.5328729748725891, -0.10530155152082443, -0.7769487500190735, -0.005983653943985701, -0.0007944526732899249, -0.014551701955497265, -0.016404753550887108, -0.0001445904199499637, -0.36055853962898254, -0.023498738184571266, -0.001384134404361248, -0.003114613238722086, -0.0005474975914694369, -0.0021923573222011328, -0.09771587699651718, -0.020783033221960068, -0.27082711458206177, -0.00015507926582358778, -4.351044481154531e-05, -0.00025674383505247533, -0.0008605591137893498, -0.04244741052389145, -0.15224450826644897, -0.0015808953903615475, -0.0003815161471720785, -0.14499208331108093, -0.003584628226235509, -0.0636785551905632, -0.00021240839851088822, -0.2689707577228546, -1.0957821607589722, -0.5024665594100952, -0.03368542343378067, -0.0018431833013892174, -0.00010907054820563644, -0.003324935445562005, -0.648106038570404, -0.03679733723402023, -0.00044764988706447184, -0.009537961333990097, -0.00018451895448379219, -1.0490362910786644e-05, -0.6021340489387512, -0.18794693052768707, -0.14119048416614532, -0.1108858585357666, -0.004507381934672594, -0.1635436862707138, -2.200435161590576, -0.1718534678220749, -0.06422347575426102, -0.0008048156159929931, -0.025520548224449158, -0.7649751901626587, -0.11043260991573334, -0.038098447024822235, -0.0013412775006145239, -0.00010799778101500124, -0.0001941730733960867, -0.001387943746522069, -5.722029527532868e-06, -2.264974000354414e-06, -5.960462772236497e-07, -3.576278118089249e-07, -0.10765401273965836, -0.002393240574747324, -0.004333985038101673, -2.3478872776031494, -0.007947607897222042, -1.0489028692245483, -0.0003738896339200437, -2.1934269170742482e-05, -0.0008721124031580985, -0.0013090145075693727, -5.304672595229931e-05, -1.0728830375228426e-06, -0.0333511084318161, -0.027206197381019592, -0.0023658876307308674, -0.014058956876397133, -0.2840019762516022, -0.003098451066762209, -0.0013674680376425385, -0.00040570611599832773, -0.0017307315720245242, -0.08415744453668594, -0.04373903200030327, -0.009816703386604786, -0.008139298297464848, -0.015352408401668072, -0.020066237077116966, -0.7356916069984436, -0.00016080040950328112, -0.00014506718434859067, -4.6967357775429264e-05, -0.013440361246466637, -0.008982487954199314, -1.4793310165405273, -0.00021169328829273582, -0.0006728292210027575, -0.12500840425491333, -9.894321920000948e-06, -0.00015698630886618048, -0.004605875816196203, -0.00013982271775603294, -0.00025876989820972085, -0.0016248131869360805, -7.271740287251305e-06, -0.0001308832288486883, -0.00018285033002030104, -0.006324159447103739, -0.0002826052950695157, -0.00012754580529872328, -0.5823450088500977, -0.06633314490318298, -0.03649371862411499, -0.016354326158761978, -0.00013362467871047556, -0.6336833238601685, -0.004125537350773811, -0.0005751386051997542, -0.0008681819308549166, -0.018040498718619347, -0.0039854394271969795, -0.0037542355712503195, -0.0030802683904767036, -0.2901548147201538, -0.3002830445766449, -0.0026685125194489956, -0.3939589560031891, -0.024190504103899002, -0.001081715920008719, -0.0024754139594733715, -0.0003077510336879641, -9.452849917579442e-05, -0.0012380562257021666, -0.08282890915870667, -0.0006314906058833003, -3.9934315282152966e-05, -0.0014249657979235053, -0.018071874976158142, -0.0005834784242324531, -0.002009992953389883, -3.576272320060525e-06, -3.123234637314454e-05, -0.00026890001026913524, -0.0026995427906513214, -0.0006964165368117392, -0.001960738329216838, -1.3206043243408203, -0.025481268763542175, -0.0062867263332009315, -1.2636104656849056e-05, -4.887569048150908e-06, -0.5509477257728577, -0.023918883875012398, -1.0184043645858765], "finish_reason": "stop"}], "metrics": {"energy": 339.5979244213105, "energy_per_token": 1.5297203802761734, "time": 10.456998, "time_per_token": 0.047103594594594594}}
{"outputs": [{"text": "os.makedirs(DIRECTORY, exist_ok=True)\n\n    hashes = []\n    file_paths = []\n    input_lines = input_string.splitlines()\n\n    for line in input_lines:\n        if line != \"\":\n            h = hashlib.sha256()\n            h.update(line.encode('utf-8'))\n            hash = h.hexdigest()\n            file_path = os.path.join(DIRECTORY, hash[:10] + \".txt\")\n            hashes.append(file_path)\n            with open(file_path, 'w') as file:\n                file.write(line)\n\n    return hashes", "tokens": ["os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "input", "_", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "\n", "    ", "for", " line", " in", " input", "_", "lines", ":", "\n", "        ", "if", " line", " ", "!", "=", " \"", "\":", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "h", ".", "update", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "hash", " =", " h", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", ")", "\n", "            ", "has", "hes", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "line", ")", "\n", "\n", "    ", "return", " has", "hes", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.091442584991455, -0.00046075694262981415, -0.020452555269002914, -0.0001280225842492655, -0.0005509527400135994, -0.0049972631968557835, -0.0069490657187998295, -4.172316494077677e-06, -4.565611743601039e-05, -0.004000043962150812, -0.018149493262171745, -1.1920928244535389e-07, -6.460934673668817e-05, -0.011792119592428207, -0.0017611959483474493, -0.0017047885339707136, -0.06826536357402802, -0.7929064035415649, -0.00047886825632303953, -1.885746717453003, -0.0909338966012001, -0.1560295969247818, -0.273459792137146, -0.02026262693107128, -0.46367982029914856, -3.3479249477386475, -0.10508812218904495, -0.7870705723762512, -0.022591019049286842, -0.020550541579723358, -0.0029856651090085506, -0.8145483136177063, -3.2186226844787598, -0.00871273037046194, -0.75943523645401, -0.011522175744175911, -0.11044392734766006, -0.0003150205302517861, -0.00026782741770148277, -0.0006239851354621351, -0.1336936205625534, -0.5448936820030212, -0.009753665886819363, -0.013370846398174763, -0.6394945979118347, -0.0001833270798670128, -0.07854211330413818, -0.5708701610565186, -0.08579552918672562, -0.020439356565475464, -6.556489552167477e-06, -1.3232143828645349e-05, -0.0011750705307349563, -0.00151305110193789, -0.008924122899770737, -0.27905920147895813, -0.4380008280277252, -3.077225685119629, -0.00013183678674977273, -1.3828182090946939e-05, -0.26123175024986267, -0.04119061678647995, -0.027477042749524117, -0.005260554142296314, -2.540287494659424, -1.493077278137207, -0.015420729294419289, -0.0004127365828026086, -3.45700973412022e-05, -0.008471150882542133, -0.0023085628636181355, -0.0001003691868390888, -4.6491513785440475e-06, -0.6497865915298462, -0.008210950531065464, -0.007079161237925291, -0.058030858635902405, -0.0011625682236626744, -7.724463648628443e-05, -0.013154038228094578, -0.02079284004867077, -0.022121110931038857, -0.016919786110520363, -1.1711194515228271, -0.01840583235025406, -0.04160408303141594, -0.0003332536434754729, -0.002063527936115861, -0.011707055382430553, -0.03365672007203102, -0.7226751446723938, -1.6054027080535889, -0.014036975800991058, -4.076874756719917e-05, -0.07732989639043808, -0.00038258862332440913, -0.003230711678043008, -0.019989117980003357, -0.37246382236480713, -0.12260377407073975, -1.2387447357177734, -0.12497946619987488, -0.7976593971252441, -0.006674851290881634, -0.3883506953716278, -3.933898824470816e-06, -0.0009213017183355987, -0.005628570448607206, -0.0028439811430871487, -0.0010514690075069666, -0.01235851552337408, -1.9073468138230965e-06, -6.437094270950183e-05, -0.0009912106906995177, -0.5385316610336304, -0.31327584385871887, -0.00638930918648839, -0.007378233131021261, -0.1395249217748642, -0.0037285825237631798, -0.44818609952926636, -0.00021073981770314276, -0.00024816294899210334, -8.380061626667157e-05, -0.00035720644518733025, -0.0029542872216552496, -0.08991707116365433, -0.8311598896980286, -5.507317473529838e-05, -0.004652034025639296, -0.0006581762572750449, -0.007557373493909836, -1.6681123971939087, -0.002169875893741846, -0.0010176486102864146, -0.00224861828610301, -0.0012931802775710821, -0.04602951183915138, -0.6606529951095581, -0.0005907459417358041, -0.0012697261990979314, -0.0013488966505974531, -0.0001928620331455022, -8.225102646974847e-05, -0.00087878224439919, -0.9930179119110107, -0.0866871327161789, -0.10734225064516068, -0.00049650261644274, -1.0557376146316528, -0.011451702564954758, -0.0011612584348767996, -0.0007445423980243504, -0.02031741291284561, -0.000964295701123774, -0.006638852413743734, -0.004415999166667461, -0.608661413192749, -0.2554945945739746, -0.0006748544401489198, -0.9051180481910706, -0.08563129603862762, -0.046542488038539886, -0.18582051992416382, -2.2649508537142538e-05, -0.8998219966888428, -1.0728830375228426e-06, -1.5497195136049413e-06, -0.00011514954530866817, -0.00031919151660986245, -0.059512242674827576], "finish_reason": "stop"}], "metrics": {"energy": 254.25868419837948, "energy_per_token": 1.4868928900490028, "time": 7.9166594, "time_per_token": 0.04629625380116959}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    hashes = []\n    lines = input_string.split('\\n')\n\n    for line in lines:\n        if len(line) > 0:\n            hashes.append(hashlib.sha256(line.encode()).hexdigest())\n\n    for index, hash_str in enumerate(hashes):\n        filename = DIRECTORY + '/' + hash_str[:10] + '.txt'\n\n        with open(filename, 'w') as f:\n            f.write(hash_str)\n\n    return hashes", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " len", "(", "line", ")", " >", " ", "0", ":", "\n", "            ", "has", "hes", ".", "append", "(", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "())", "\n", "\n", "    ", "for", " index", ",", " hash", "_", "str", " in", " enumerate", "(", "has", "hes", "):", "\n", "        ", "filename", " =", " DIRECT", "ORY", " +", " '/", "'", " +", " hash", "_", "str", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "\n", "        ", "with", " open", "(", "filename", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "hash", "_", "str", ")", "\n", "\n", "    ", "return", " has", "hes", "\n", "\n", "if"], "logprobs": [-2.177511692047119, -0.0991140753030777, -0.020625632256269455, -2.706014311115723e-05, -0.0018110554665327072, -0.0012819890398532152, -0.32137811183929443, -0.0022653888445347548, -0.004666865803301334, -7.867782187531702e-06, -9.536738616588991e-07, -0.0024284415412694216, -0.036029260605573654, -0.008027906529605389, -0.03086690604686737, -0.00032217081752605736, -0.9921908378601074, -6.115249561844394e-05, -0.0019121948862448335, -0.0048715234734117985, -1.0967194612021558e-05, -0.00030751267331652343, -0.003631546162068844, -0.007949027232825756, -0.3900836110115051, -0.00047159992391243577, -2.0436277389526367, -0.07834339141845703, -0.16859504580497742, -0.22575539350509644, -0.022946307435631752, -0.3084935247898102, -1.7124431133270264, -0.025875957682728767, -0.13200893998146057, -0.0001958416833076626, -0.00017593742813915014, -0.0006942722829990089, -0.1724289208650589, -1.8565208911895752, -0.000977276940830052, -0.00020525732543319464, -0.003804233390837908, -0.0272452924400568, -0.9977887868881226, -0.00017975145601667464, -0.056158650666475296, -0.5616650581359863, -0.05668312683701515, -0.005270870868116617, -0.0019259967375546694, -0.0016296928515657783, -0.0034444546326994896, -0.25079822540283203, -1.9664208889007568, -0.0001397035230183974, -0.0005667987279593945, -0.5210855603218079, -0.3943871259689331, -0.0005544078885577619, -0.012290457263588905, -0.010463734157383442, -0.037626128643751144, -0.001991552533581853, -1.8796778917312622, -0.6402135491371155, -0.016575835645198822, -0.0014115142403170466, -0.07564052194356918, -0.2825612723827362, -0.00566199840977788, -7.593343616463244e-05, -0.002236486179754138, -0.0021095657721161842, -0.00012396997772157192, -4.410734163684538e-06, -0.026059363037347794, -0.016973350197076797, -0.013750706799328327, -0.01156801637262106, -0.3421681225299835, -0.00021896349790040404, -0.0041673253290355206, -0.0003351603518240154, -0.0019990478176623583, -0.03549130633473396, -0.007440592627972364, -0.23785951733589172, -0.02255803719162941, -1.0662742853164673, -1.1903142929077148, -0.03930148482322693, -0.1665847897529602, -0.5653895139694214, -3.4067625999450684, -0.00039402826223522425, -0.001444369088858366, -0.001110175740905106, -0.008011468686163425, -9.536697689327411e-06, -0.017786173149943352, -0.002368622925132513, -0.002623451640829444, -2.146634101867676, -0.005508363712579012, -0.8244630694389343, -1.0728830375228426e-06, -0.015593388117849827, -1.167724847793579, -0.023814242333173752, -0.0024266578257083893, -0.07259047031402588, -0.03359920158982277, -0.000459565402707085, -0.24401874840259552, -0.011921586468815804, -0.0054781315848231316, -0.006542216520756483, -0.013915777206420898, -0.08002601563930511, -0.0002759314374998212, -0.000636255950666964, -0.00022897482267580926, -0.0028145008254796267, -1.6582248210906982, -0.0010594476480036974, -0.27977073192596436, -0.0006255338666960597, -0.0006372089846991003, -0.002676835050806403, -0.0004593271005433053, -0.055677760392427444, -0.05964050814509392, -0.05138392373919487, -0.0005104430601932108, -1.462397575378418, -0.02472050115466118, -0.0018797124503180385, -0.0010445620864629745, -0.023747889325022697, -3.302042750874534e-05, -0.0063352943398058414, -0.031081410124897957, -0.3872738182544708, -0.0009415484382770956, -9.893881360767409e-05, -0.1333213448524475, -0.003213838441297412, -0.08107823133468628, -0.5004152655601501, -0.016854029148817062, -0.1718095988035202, -2.6464111215318553e-05, -1.2076548337936401, -0.006878151558339596, -0.8640438318252563], "finish_reason": "stop"}], "metrics": {"energy": 234.4699565734864, "energy_per_token": 1.5030125421377334, "time": 7.295646, "time_per_token": 0.046766961538461535}}
{"outputs": [{"text": "lines = input_string.strip().split('\\n')\n    file_paths = []\n\n    for i, line in enumerate(lines):\n        line = line.strip()\n        if len(line) == 0:\n            continue\n        filename = hashlib.sha256(line.encode('utf-8')).hexdigest()[0:10] + '.txt'\n        path = os.path.join(DIRECTORY, filename)\n        with open(path, 'w') as file:\n            file.write(line)\n        file_paths.append(path)\n\n    return file_paths", "tokens": ["lines", " =", " input", "_", "string", ".", "strip", "()", ".", "split", "('", "\\", "n", "')", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " len", "(", "line", ")", " ==", " ", "0", ":", "\n", "            ", "continue", "\n", "        ", "filename", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()[", "0", ":", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "        ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths"], "logprobs": [-2.3753437995910645, -0.0471896193921566, -0.2069699913263321, -0.0002115741081070155, -0.00029881304362788796, -0.0016044613439589739, -2.1219334602355957, -0.04801575466990471, -0.002976037794724107, -0.004305141977965832, -1.0589653253555298, -0.0012898467248305678, -0.0002786724944598973, -0.0037111237179487944, -0.05551132187247276, -0.3410370349884033, -0.692979097366333, -0.038044970482587814, -0.025383764877915382, -0.013168980367481709, -0.033347535878419876, -0.005808616988360882, -0.9479884505271912, -0.0003777029050979763, -0.49429193139076233, -1.1569092273712158, -0.22906289994716644, -0.028694307431578636, -0.002185577293857932, -0.000302030734019354, -0.0010272946674376726, -0.0025724435690790415, -0.02830745093524456, -0.004159252624958754, -0.005136388819664717, -1.6695526838302612, -0.10149490833282471, -0.005445053335279226, -0.00048637480358593166, -0.023841945454478264, -0.0027692087460309267, -0.026108374819159508, -0.19500084221363068, -0.019071074202656746, -2.2878220081329346, -8.594620157964528e-05, -0.0003947432560380548, -0.033103879541158676, -0.9747138619422913, -0.00019631843315437436, -0.00013469743134919554, -0.008656594902276993, -0.045754991471767426, -0.0013833011034876108, -0.013436597771942616, -0.02286871150135994, -0.891112208366394, -2.362940788269043, -0.018102196976542473, -0.45873892307281494, -0.0011748324614018202, -5.566918844124302e-05, -0.002668274799361825, -0.001852583372965455, -0.0001284993631998077, -2.7418097943154862e-06, -0.04978734627366066, -0.04090972989797592, -0.004734614863991737, -0.0004702892620116472, -1.2676761150360107, -0.014117962680757046, -0.01885128766298294, -0.00017391123401466757, -0.001865553087554872, -0.005965168122202158, -0.0040315077640116215, -0.0002553137019276619, -0.02237398736178875, -2.485428810119629, -0.015486697666347027, -0.0020769708789885044, -0.022506870329380035, -0.014938747510313988, -0.029202934354543686, -0.04491934925317764, -0.48771166801452637, -0.0001308832288486883, -0.0003296785580459982, -0.00017021637177094817, -0.0057062110863626, -0.016423633322119713, -1.5458199977874756, -0.009592156857252121, -0.03595302253961563, -4.410734163684538e-06, -0.00047874910524114966, -0.030142035335302353, -0.0025221463292837143, -0.0006411403883248568, -0.0020291469991207123, -1.0609570381348021e-05, -9.536738616588991e-07, -0.0006112375995144248, -0.0048715234734117985, -0.0006070678355172276, -0.0035991196054965258, -0.07278213649988174, -0.8183557987213135, -0.0006324436399154365, -0.00026556302327662706, -0.0012946089264005423, -0.00033861625706776977, -0.03971721976995468, -0.11136438697576523, -0.10243848711252213, -0.0002787916746456176, -1.1035382747650146, -0.01279972679913044, -0.0008336406317539513, -0.0005963454605080187, -0.011824634857475758, -0.002722725737839937, -0.004475220572203398, -0.007417519111186266, -0.08524855971336365, -0.1281152069568634, -0.0007996936910785735, -0.09816919267177582, -0.0068996986374258995, -0.0006332775810733438, -0.0009868042543530464, -0.0010711177019402385, -9.440929716220126e-05, -0.0006877202540636063, -0.015198964625597, -0.00036864637513644993, -0.0017138330731540918, -0.21776938438415527, -0.002660665661096573, -0.019642949104309082, -0.005016004201024771, -1.5258672647178173e-05, -7.510157047363464e-06], "finish_reason": "stop"}], "metrics": {"energy": 199.2101170024871, "energy_per_token": 1.3834035902950492, "time": 6.4859695, "time_per_token": 0.045041454861111115}}
{"outputs": [{"text": "# Create a directory to store the hashed files\n    if not os.path.isdir(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Convert the input string to a list of lines\n    lines = input_string.strip().split('\\n')\n\n    # Get the hashed filenames for each line and write to files\n    file_paths = []\n    for i, line in enumerate(lines):\n        hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n        filename = DIRECTORY + \"/\" + hash[:10] + \".txt\"\n        with open(filename, \"w\") as file:\n            file.write(hash)\n            file_paths.append(filename)\n\n    return file_paths", "tokens": ["#", " Create", " a", " directory", " to", " store", " the", " has", "hed", " files", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Convert", " the", " input", " string", " to", " a", " list", " of", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "strip", "()", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Get", " the", " has", "hed", " fil", "en", "ames", " for", " each", " line", " and", " write", " to", " files", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " i", ",", " line", " in", " enumerate", "(", "lines", "):", "\n", "        ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "        ", "filename", " =", " DIRECT", "ORY", " +", " \"", "/\"", " +", " hash", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "with", " open", "(", "filename", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "hash", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "return", " file", "_", "paths"], "logprobs": [-1.524837851524353, -0.9560707211494446, -1.6949081420898438, -0.6975504755973816, -2.589897632598877, -0.3675054609775543, -0.21850107610225677, -0.11201076954603195, -0.048605725169181824, -0.04876389354467392, -1.1839509010314941, -0.0011975744273513556, -0.16827915608882904, -0.008441480807960033, -0.0025884953793138266, -1.0490362910786644e-05, -0.00031251792097464204, -0.0008378094644285738, -1.5578691959381104, -0.00011801023356383666, -0.0006156456656754017, -0.0012026942567899823, -7.867782187531702e-06, -2.145764938177308e-06, -0.0007252446957863867, -0.004329237621277571, -0.0022637236397713423, -0.044369276612997055, -0.00022480344341602176, -0.7901282906532288, -3.6954195820726454e-05, -0.0011605439940467477, -0.0001481661747675389, -0.0007317964336834848, -6.305972783593461e-05, -0.00023183519078884274, -0.030727731063961983, -0.00446453969925642, -0.06374801695346832, -0.0009266611887142062, -0.3488940894603729, -3.1800405979156494, -0.2747253477573395, -0.3392445147037506, -0.08817046880722046, -0.360064834356308, -0.17407286167144775, -0.10894763469696045, -0.1328737735748291, -0.09484691172838211, -0.18902742862701416, -0.000530936405993998, -0.05861056596040726, -0.011062833480536938, -0.04824773967266083, -0.00010299152199877426, -8.439661905867979e-05, -0.0002337421028641984, -2.062897205352783, -0.011293062008917332, -0.000554288737475872, -0.0016961010405793786, -0.6606907844543457, -0.00034254882484674454, -0.00018189683032687753, -0.002481716452166438, -0.00812439899891615, -0.030348367989063263, -0.00017510310863144696, -0.06776676326990128, -3.4328882694244385, -0.5867166519165039, -1.2733755111694336, -1.2241848707199097, -2.61875057220459, -0.0006306566647253931, -0.0002731903805397451, -2.140807628631592, -0.15480050444602966, -0.38654467463493347, -2.7217791080474854, -2.350250482559204, -2.6418709754943848, -0.9840394854545593, -0.033878348767757416, -0.00029952809563837945, -0.5286741256713867, -0.031065231189131737, -0.023089947178959846, -0.00804978422820568, -0.015935329720377922, -0.002766355639323592, -0.015052659437060356, -0.0254078209400177, -0.5343571901321411, -0.07495558261871338, -0.007517264690250158, -0.001209600013680756, -0.00011991735664196312, -0.0006704466650262475, -0.0007602662080898881, -0.045853715389966965, -0.001278655487112701, -0.0021230080164968967, -3.546672821044922, -2.954286575317383, -0.02141180820763111, -0.000690460205078125, -3.099393507000059e-05, -0.004676357842981815, -0.0021114691626280546, -7.843663479434326e-05, -2.622600959512056e-06, -0.16657772660255432, -0.017559662461280823, -0.003863966092467308, -0.033310871571302414, -1.245169758796692, -0.012096733786165714, -0.008851221762597561, -0.00011073929636040702, -0.00302108284085989, -0.0239877849817276, -0.007807453162968159, -0.0001567479339428246, -0.003567879553884268, -0.03427572548389435, -1.0146498680114746, -0.02134261094033718, -0.556818425655365, -0.002367433626204729, -1.4905116558074951, -2.50339189733495e-06, -0.019012007862329483, -0.8510850667953491, -0.004906044341623783, -0.007766644936054945, -0.03971939533948898, -0.20665639638900757, -0.011510509066283703, -0.006644891574978828, -0.0096208481118083, -0.008357432670891285, -0.12938380241394043, -0.0002890407631639391, -0.0003725788265001029, -7.164221460698172e-05, -0.007262496743351221, -0.07445875555276871, -0.7164179086685181, -0.00024148885859176517, -0.0004353767435532063, -0.002669106936082244, -0.0004592079494614154, -1.0062156915664673, -0.049609147012233734, -0.0367552787065506, -0.06017977371811867, -6.747018051100895e-05, -0.9653099179267883, -0.0033946766052395105, -0.0006105228094384074, -0.0010688550537452102, -0.03755689784884453, -0.00472203828394413, -0.00435155164450407, -0.0017716678557917476, -0.8740345239639282, -0.275315523147583, -0.0028654965572059155, -1.6012275218963623, -0.03375077247619629, -0.07760261744260788, -0.001495434669777751, -0.0013583013787865639, -0.0001932195882545784, -0.0005180685548111796, -0.0126454196870327, -0.0005430892342701554, -0.005022528115659952, -0.32408833503723145, -0.007184858433902264, -0.04171328246593475, -0.004576446954160929, -2.9801878554280847e-05, -1.6093124941107817e-05], "finish_reason": "stop"}], "metrics": {"energy": 267.22591679573054, "energy_per_token": 1.4366984773964007, "time": 8.392616, "time_per_token": 0.045121591397849464}}
