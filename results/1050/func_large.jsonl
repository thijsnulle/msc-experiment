{"outputs": [{"text": "# Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n    # Split the input string into lines and process each non-empty line\n    for line in input_string.split('\\n'):\n        if line.strip() != \"\":\n            # Hash the line using SHA256\n            hashed_value = hashlib.sha256(line.strip().encode('utf-8')).hexdigest()[:10]\n\n            # Create the file path based on the hashed value\n            file_path = os.path.join(DIRECTORY, hashed_value + '.txt')\n\n            # Save the hashed value to the file\n            with open(file_path, 'w') as file:\n                file.write(hashed_value)\n\n            # Add the file path to the list\n            file_paths.append(file_path)\n\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", " and", " process", " each", " non", "-", "empty", " line", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", ":", "\n", "        ", "if", " line", ".", "strip", "()", " ", "!", "=", " \"", "\":", "\n", "            ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "h", "ashed", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "\n", "            ", "#", " Create", " the", " file", " path", " based", " on", " the", " has", "hed", " value", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " has", "hed", "_", "value", " +", " '", ".", "txt", "')", "\n", "\n", "            ", "#", " Save", " the", " has", "hed", " value", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "h", "ashed", "_", "value", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "#"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -0.4572495222091675, -0.026567475870251656, -0.005228179972618818, -0.2439398318529129, -0.0010846928926184773, -3.9219088648678735e-05, -0.0044555203057825565, -0.02317090332508087, -0.001111485529690981, -0.3258815407752991, -0.0013624681159853935, -0.00032848684350028634, -1.5497195136049413e-06, -0.0003522014303598553, -3.528532761265524e-05, -0.07601401954889297, -0.00018666432879399508, -0.0006811682251282036, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00014256415306590497, -0.0013915151357650757, -0.002580172149464488, -0.006020505912601948, -7.033323527139146e-06, -0.16232967376708984, -7.271740287251305e-06, -7.152555099310121e-07, -0.000163541772053577, -0.00014041867689229548, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0026261862367391586, -0.0021347845904529095, -0.037298642098903656, -0.0007457336178049445, -1.5060170888900757, -0.002989706117659807, -0.02130655199289322, -0.0035965063143521547, -0.003588904393836856, -0.10829563438892365, -0.6335458159446716, -3.098778247833252, -0.921086847782135, -0.15658129751682281, -0.1312001496553421, -0.13431572914123535, -0.17060750722885132, -0.0505882203578949, -0.8126389980316162, -0.47989511489868164, -0.17603035271167755, -0.30783921480178833, -0.0004929280839860439, -0.00016616393986623734, -0.0035873602610081434, -0.02731744386255741, -0.0005368936690501869, -0.1320360004901886, -0.05646536871790886, -0.002678499324247241, -0.002604071283712983, -0.00010466027742950246, -1.0728830375228426e-06, -0.00018976318824570626, -0.062052544206380844, -1.5804944038391113, -7.259582343976945e-05, -2.7656173188006505e-05, -4.827859811484814e-05, -0.00011836781777674332, -0.0006571040721610188, -0.0027323553804308176, -0.16430804133415222, -0.20129811763763428, -0.3725033402442932, -0.0018599607283249497, -1.1240191459655762, -0.36967697739601135, -5.960462772236497e-07, -1.311301275563892e-06, -1.235241413116455, -0.0016709902556613088, -0.5298671126365662, -0.0017404898535460234, -0.23078781366348267, -0.6082882881164551, -0.05615819990634918, -0.08646389842033386, -0.09941858798265457, -0.030370572581887245, -0.00014804698002990335, -0.00876531656831503, -7.891343557275832e-05, -1.1444026313256472e-05, -0.4068281054496765, -0.00013136000779923052, -0.9034263491630554, -0.18502290546894073, -0.3302716910839081, -2.914781093597412, -0.0021786780562251806, -0.0017616719705983996, -0.0002954761730507016, -7.271740287251305e-06, -0.0014240134041756392, -0.001498410478234291, -5.769562994828448e-05, -7.152555099310121e-07, -0.0033945576287806034, -0.013922007754445076, -0.0005054388311691582, -0.9471253156661987, -0.0018795934738591313, -6.3774932641536e-05, -0.0008238735608756542, -0.5980536937713623, -0.0057001663371920586, -0.0029582094866782427, -0.0001370812824461609, -0.00043752157944254577, -0.03333370015025139, -0.015956565737724304, -3.576272320060525e-06, -3.576278118089249e-07, -0.002833282807841897, -2.5145537853240967, -0.013321678154170513, -0.0048448313027620316, -0.0008920027757994831, -0.02767372317612171, -1.8819347620010376, -0.0009845414897426963, -0.010024086572229862, -0.7500824928283691, -0.22430425882339478, -0.39626920223236084, -0.3017325699329376, -2.5548906326293945, -0.00021789084712509066, -0.028997870162129402, -1.6407649517059326, -0.0006846229662187397, -0.01358784269541502, -0.22183053195476532, -0.00019262365822214633, -0.13752710819244385, -0.007738018874078989, -0.044342249631881714, -0.0006930810050107539, -0.11908162385225296, -2.0146166207268834e-05, -4.3748852476710454e-05, -7.271740287251305e-06, -0.0006594866863451898, -0.0011026738211512566, -0.009552366100251675, -0.005930683575570583, -2.3841855067985307e-07, -0.00046135272714309394, -1.149661660194397, -1.0609570381348021e-05, -2.7418097943154862e-06, -2.7418097943154862e-06, -0.04192604497075081, -0.4382033050060272, -5.6622808187967166e-05, -0.0002131234941771254, -9.941560711013153e-05, -0.0003592322755139321, -0.6989992260932922, -0.00030298411729745567, -0.06308532506227493, -0.9805375337600708, -0.004473796579986811, -0.32105475664138794, -0.0020567469764500856, -0.02326885610818863, -0.0796707421541214, -0.057927023619413376, -0.004478306509554386, -0.0397987887263298, -0.0001971527235582471, -0.017461849376559258, -8.21318244561553e-05, -0.00015400654228869826, -0.000377583724912256, -2.3841830625315197e-06, -5.960462772236497e-07, -0.0002094287920044735, -0.06314307451248169, -0.023763371631503105, -0.21583667397499084, -5.781483559985645e-05, -0.31719329953193665, -0.007296343334019184, -0.0003415954706724733, -0.00032026408007368445, -0.0025593640748411417, -6.937739817658439e-05, -0.00010334911348763853, -0.0012485336046665907, -0.031320709735155106, -1.311301275563892e-06, -7.510157047363464e-06, -8.344646857949556e-07, -0.07895683497190475, -0.0005858612130396068, -0.02138356864452362, -0.0020552005153149366, -0.5648616552352905, -0.9291221499443054, -0.013302268460392952, -0.0035302243195474148, -0.0015687552513554692, -0.0002810560108628124, -0.0013199674431234598, -0.049180708825588226, -0.6005270481109619, -0.0001931004080688581, -0.0008910499745979905, -7.033323527139146e-06, -1.9907753085135482e-05, -6.639736966462806e-05, -1.883488948806189e-05, -0.000263894529780373, -0.004853491671383381, -1.4185804502631072e-05, -4.768370445162873e-07, -0.0006332775810733438, -0.0001754606782924384, -0.024739224463701248, -0.0008612737292423844, -0.0803973376750946, -0.0013684204313904047, -2.622600959512056e-06, -5.722029527532868e-06, -0.15406358242034912, -0.013959978707134724, -1.0778701305389404], "finish_reason": "stop"}], "metrics": {"energy": 1087.9900521545408, "energy_per_token": 4.458975623584183, "time": 23.808617, "time_per_token": 0.09757629918032787}}
{"outputs": [{"text": "# If directory doesn't exist, create it\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Save the hashes to files\n    file_paths = []\n    for line in input_string.splitlines():\n        if line.strip() != \"\":\n            # Hash each line using SHA256\n            hashed_line = hashlib.sha256(line.strip().encode()).hexdigest()\n\n            # Get the first 10 characters of the hash and add a '.txt' extension\n            filename = hashed_line[:10] + '.txt'\n            file_path = os.path.join(DIRECTORY, filename)\n\n            # Write the hash to the file\n            with open(file_path, 'w') as f:\n                f.write(hashed_line)\n\n            # Add the file path to the list\n            file_paths.append(file_path)\n\n    return file_paths", "tokens": ["#", " If", " directory", " doesn", "'", "t", " exist", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Save", " the", " has", "hes", " to", " files", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "()", " ", "!", "=", " \"", "\":", "\n", "            ", "#", " Hash", " each", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Get", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", " and", " add", " a", " '", ".", "txt", "'", " extension", "\n", "            ", "filename", " =", " has", "hed", "_", "line", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "\n", "            ", "#", " Write", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "h", "ashed", "_", "line", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "print"], "logprobs": [-0.7260650396347046, -3.0279054641723633, -2.2591919898986816, -0.9972426295280457, -0.011514752171933651, -0.00035601475974544883, -0.038490597158670425, -0.11977655440568924, -0.07847940176725388, -0.04138919338583946, -0.12444604188203812, -0.0009551253751851618, -0.08992687612771988, -0.0023403179366141558, -0.0011029120068997145, -2.7417760065873154e-05, -0.0008727079257369041, -3.290122185717337e-05, -0.21769662201404572, -0.00037925204378552735, -0.0010807631770148873, -8.344646857949556e-07, -9.536738616588991e-07, -0.0004836343287024647, -0.003587479004636407, -0.008198299445211887, -0.013303091749548912, -1.3351351299206726e-05, -0.26789161562919617, -3.4570634852570947e-06, -1.2278481335670222e-05, -0.0002213471452705562, -0.0003003622987307608, -1.1920928244535389e-07, -4.768370445162873e-07, -0.004547255113720894, -0.0011481605470180511, -0.07029198110103607, -0.0011344670783728361, -0.5680661201477051, -3.8250482082366943, -2.045454978942871, -0.30286046862602234, -0.07109814882278442, -0.7458246946334839, -1.1617186069488525, -0.224083811044693, -0.0008314966107718647, -0.17308706045150757, -0.00556360837072134, -0.024860398843884468, -0.008061254397034645, -0.015226790681481361, -0.02228608727455139, -0.06856349855661392, -0.12978550791740417, -0.0643942803144455, -0.0028194934129714966, -0.005104366689920425, -0.00017081231635529548, -4.6491513785440475e-06, -0.0027854950167238712, -0.04777996242046356, -0.3569793403148651, -0.01913422904908657, -0.014094572514295578, -0.006754779256880283, -0.16997267305850983, -0.31537148356437683, -0.8192487955093384, -0.005990882404148579, -1.3118877410888672, -0.5148196220397949, -4.768370445162873e-07, -5.364403477869928e-06, -0.2272510677576065, -0.0019682336132973433, -0.4945773780345917, -0.002066145185381174, -1.4768084287643433, -0.6788209676742554, -1.7205226421356201, -0.538804292678833, -0.8682230710983276, -0.05482565611600876, -0.0006150499684736133, -0.021247852593660355, -0.00040820849244482815, -5.3165931603871286e-05, -0.18664252758026123, -0.00019167017308063805, -1.4210622310638428, -0.33413562178611755, -0.26301947236061096, -0.2989911139011383, -0.0029729476664215326, -0.002621905878186226, -0.00033444532891735435, -1.5735502529423684e-05, -0.0015977962175384164, -0.0028654965572059155, -2.276871418871451e-05, -1.311301275563892e-06, -0.0031243578996509314, -0.016831524670124054, -0.0016302878502756357, -0.7676538228988647, -0.0030633925925940275, -7.068861305015162e-05, -0.0008827127167023718, -0.6017646193504333, -0.11440376192331314, -0.01596442610025406, -1.6331539882230572e-05, 0.0, -0.004503465257585049, -0.09388767182826996, -0.6480069160461426, -0.0010021670022979379, -0.0056328377686440945, -2.123377561569214, -0.3227322995662689, -0.08886605501174927, -0.014056959189474583, -0.0037868947256356478, -0.001531738555058837, -0.027786310762166977, -0.031118158251047134, -0.013352966867387295, -0.012308708392083645, -1.5710575580596924, -0.7211970090866089, -2.762700080871582, -0.2976379096508026, -0.003550418186932802, -0.00037674958002753556, -0.0009062950266525149, -0.015003690496087074, -0.052175603806972504, -0.0002113357331836596, -0.4033593237400055, -0.005006633698940277, -0.8011369109153748, -8.4638240878121e-06, -5.471556869451888e-05, -8.22540732769994e-06, -0.015467916615307331, -0.0016581370728090405, -0.0004880429187323898, -0.00544149661436677, -0.008801002986729145, -1.566075325012207, -7.497983460780233e-05, -9.262132516596466e-05, -3.7788631743751466e-05, -0.001572206849232316, -1.3137060403823853, -0.10480175912380219, -0.10955306887626648, -0.012406907975673676, -0.0006541258189827204, -0.04242433235049248, -6.079655122448457e-06, -4.005352093372494e-05, -5.960446742392378e-06, -0.0010045487433671951, -0.0015195977175608277, -0.0042257304303348064, -0.0005745429079979658, -3.576278118089249e-07, -0.00022194306075107306, -0.00037448544753715396, -0.00010513706365600228, -0.0011870964663103223, -0.45793771743774414, -0.0005031750188209116, -0.11933272331953049, -1.141408920288086, -0.058970142155885696, -0.6430694460868835, -0.02585667371749878, -0.3458838164806366, -0.0262634065002203, -0.047176655381917953, -0.0001323135511483997, -0.023391488939523697, -0.0001062098381225951, -0.00024589852546341717, -0.0009311868925578892, -2.622600959512056e-06, -9.536738616588991e-07, -0.00024387246230617166, -0.07549627125263214, -0.03149538114666939, -0.09808122366666794, -0.0001280225842492655, -0.9546971917152405, -0.004814935382455587, -0.0005279577453620732, -0.00029059001826681197, -0.005312729626893997, -4.529942543740617e-06, -0.0002489972102921456, -0.0018779276870191097, -0.030397286638617516, -5.960462772236497e-07, -1.3112935448589269e-05, -3.576278118089249e-07, -0.07008550316095352, -0.0006051616510376334, -0.05408079922199249, -0.002021176042035222, -0.9956130981445312, -0.7952228784561157, -0.2986052334308624, -0.013827484101057053, -0.013847941532731056, -0.0015073377871885896, -0.01493193581700325, -0.029906272888183594, -0.6979889273643494, -0.00023326536756940186, -0.0011266082292422652, -7.152555099310121e-07, -0.0003922408213838935, -0.00016473367577418685, -5.018585216021165e-05, -0.00030012393835932016, -0.006023823749274015, -4.291525328881107e-06, -2.3841855067985307e-07, -0.0007476395112462342, -0.0001991788885788992, -0.029467454180121422, -0.0011399445356801152, -0.1215120404958725, -0.0019584777764976025, -7.271740287251305e-06, -8.702239938429557e-06, -0.17267489433288574, -0.019958971068263054, -3.4349148273468018], "finish_reason": "stop"}], "metrics": {"energy": 1012.6451033840174, "energy_per_token": 4.184483898281064, "time": 22.76622, "time_per_token": 0.09407528925619835}}
{"outputs": [{"text": "# Check if the DIRECTORY exists\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize a list to store the file paths\n    file_paths = []\n\n    # Split the input string into lines\n    lines = input_string.split(\"\\n\")\n\n    # Process each non-empty line\n    for line in lines:\n        if line:  # Check if the line is not empty\n            # Generate the hash using SHA256\n            hashed_line = hashlib.sha256(line.encode('utf-8')).hexdigest()\n\n            # Extract the first 10 characters of the hash\n            filename = hashed_line[:10] + \".txt\"\n\n            # Save the hash to a file in the DIRECTORY\n            file_path = os.path.join(DIRECTORY, filename)\n            with open(file_path, \"w\", encoding='utf-8') as file:\n                file.write(hashed_line)\n\n            # Add the file path to the list", "tokens": ["#", " Check", " if", " the", " DIRECT", "ORY", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " a", " list", " to", " store", " the", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "\n", "    ", "#", " Process", " each", " non", "-", "empty", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ":", "  ", "#", " Check", " if", " the", " line", " is", " not", " empty", "\n", "            ", "#", " Generate", " the", " hash", " using", " SH", "A", "2", "5", "6", "\n", "            ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Ext", "ract", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "filename", " =", " has", "hed", "_", "line", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "\n", "            ", "#", " Save", " the", " hash", " to", " a", " file", " in", " the", " DIRECT", "ORY", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "h", "ashed", "_", "line", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -1.0099897384643555, -0.0004681444843299687, -0.06518545001745224, -1.6947832107543945, -0.0010783816687762737, -0.043277472257614136, -0.00902702659368515, -0.00142020417843014, -1.9430925021879375e-05, -0.001191263902001083, -5.209310256759636e-05, -0.18098874390125275, -0.0001528146385680884, -0.0008424547268077731, -1.1920928244535389e-07, 0.0, -0.0003815161471720785, -0.0013430631952360272, -0.0080014169216156, -0.8204746246337891, -5.245195097813848e-06, -0.17487165331840515, -1.9311717551317997e-05, -6.556489552167477e-06, -0.00018761781393550336, -0.0002643712505232543, 0.0, -2.3841855067985307e-07, -0.0030479426495730877, -0.07981681078672409, -0.032416749745607376, -0.0012051946250721812, -0.3740697503089905, -1.5356110334396362, -1.3728361129760742, -0.07399211823940277, -0.08692015707492828, -0.11009224504232407, -1.397676944732666, -0.11195226013660431, -0.010306941345334053, -0.23091357946395874, -0.00017915551143232733, -0.036912232637405396, -0.0009943069890141487, -0.006771592888981104, -0.003487340407446027, -0.0032902411185204983, -0.0003393312799744308, -0.01711386628448963, -0.00016699827392585576, -0.02025071159005165, -0.839119017124176, -0.028962666168808937, -0.03776629641652107, -0.1511380523443222, -0.12230729311704636, -0.054139748215675354, -0.3098064064979553, -8.284702198579907e-05, -0.07103641331195831, -0.0015287628630176187, -0.005993015132844448, -0.0001006075763143599, -2.264974000354414e-06, -6.186770770000294e-05, -0.2571132481098175, -1.5000492334365845, -0.0012361512053757906, -0.00026425207033753395, -4.911301948595792e-05, -2.0146166207268834e-05, -0.00014602071314584464, -0.0008025524439290166, -0.01104656420648098, -0.00013195598148740828, -0.017010385170578957, -1.1847715377807617, -0.08553444594144821, -0.4871576428413391, -0.0003607814433053136, -8.082063141046092e-05, -0.0006025406182743609, -0.09666307270526886, -6.246371776796877e-05, -0.002601455431431532, -0.007065074983984232, -0.0011268462985754013, -0.0011104138102382421, -0.00011574551899684593, -0.00010048838157672435, -0.0041636452078819275, -0.15272627770900726, -0.11593586206436157, -1.6175247430801392, -0.7059148550033569, -5.006777428206988e-06, -1.309983491897583, -0.019804829731583595, -0.05658749118447304, -0.0008991489303298295, -0.0005476167425513268, -0.2747066915035248, -0.0017802356742322445, -0.016572903841733932, -0.010359090752899647, -0.08687371015548706, -2.693516969680786, -0.4839572608470917, -0.05610083416104317, -0.7887372970581055, -0.068985715508461, -7.1403817855753e-05, -0.015770945698022842, -8.010543388081715e-05, -3.099436753473128e-06, -0.0838746652007103, -0.00011812942830147222, -1.6312775611877441, -0.0868968814611435, -0.5028463006019592, -0.539898157119751, -0.0010040724882856011, -0.0013071097200736403, -0.00020704510097857565, -6.6756979322235566e-06, -0.0011393491877242923, -0.0012342463014647365, -6.365573790390044e-05, -3.576278118089249e-07, -0.0012557962909340858, -0.006891647819429636, -0.0002571013756096363, -0.09249790012836456, -1.8419464826583862, -0.006340861786156893, -0.0014061573892831802, -5.8053239627042785e-05, -0.0015814905054867268, -0.04088512435555458, -0.0087722884491086, -5.722029527532868e-06, -3.576278118089249e-07, -0.0011141052236780524, -0.07373901456594467, -0.28715115785598755, -0.00041654970846138895, -0.0007406114018522203, -0.704212486743927, -0.0046008918434381485, -0.009625924751162529, -0.014847490936517715, -0.008309198543429375, -0.002659357851371169, -0.0008158930577337742, -0.008798403665423393, -0.11724289506673813, -0.0001864259538706392, -0.007173969876021147, -0.49739667773246765, -3.1470757676288486e-05, -1.1676666736602783, -0.022082632407546043, -0.25681036710739136, -4.529942543740617e-06, -1.0967194612021558e-05, -1.7881377516459906e-06, -0.006021453998982906, -0.0005776405450887978, -0.00025722055579535663, -0.0019073167350143194, -0.37048429250717163, -0.4568370282649994, -0.00017271934484597296, -0.00014172980445437133, -7.629365427419543e-06, -0.0056980326771736145, -0.041991546750068665, -0.0001262346631847322, -0.013848411850631237, -2.836345911026001, -0.0034181997179985046, -0.18488478660583496, -0.1846463531255722, -0.2701323628425598, -0.013150508515536785, -2.0964629650115967, -0.018981831148266792, -0.196040540933609, -2.9682672902708873e-05, -0.04063975065946579, -0.0001245659514097497, -0.1289127618074417, -0.029046274721622467, -0.0007552632014267147, -0.0001225396408699453, -0.013374845497310162, -2.622600959512056e-06, -8.702239938429557e-06, -4.172316494077677e-06, -0.0004234609368722886, -8.320462075062096e-05, -0.0017281135078519583, -2.4437606043647975e-05, -7.152555099310121e-07, -8.034383063204587e-05, -0.00012408917245920748, -6.687417771900073e-05, -0.0004655231023207307, -0.0316285565495491, -0.23123961687088013, -6.460934673668817e-05, -6.675497570540756e-05, -0.0004009396652691066, -2.0265558760002023e-06, -1.4305104514278355e-06, -0.00010525626566959545, -0.22113654017448425, -0.009481636807322502, -0.009999420493841171, -1.8869519233703613, -0.003230117727071047, -0.8688501119613647, -0.020791439339518547, -0.011748763732612133, -0.0007951673469506204, -0.0026299909222871065, -2.586808113846928e-05, -0.1112583726644516, -0.0029344377107918262, -0.0008629412623122334, -0.00018130090029444546, -0.002578745363280177, -5.4596363042946905e-05, -0.00023588736075907946, -0.0002464944263920188, -0.07270276546478271, -2.3841855067985307e-07, -3.6954811548639555e-06, -1.1920928244535389e-07, -0.06396866589784622, -0.002389316214248538, -0.02472992241382599, -0.0013710394268855453, -0.03317168727517128, -0.837802529335022, -0.003221086924895644, -0.0016345723997801542, -0.001149351242929697, -0.00014852374442853034, -0.0006610354175791144, -0.007965347729623318], "finish_reason": "length"}], "metrics": {"energy": 1105.1231283683785, "energy_per_token": 4.3168872201889785, "time": 24.41564, "time_per_token": 0.09537359375}}
{"outputs": [{"text": "import os\n    import hashlib\n\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if line.strip():\n            # Calculate SHA256 hash of the line\n            sha256 = hashlib.sha256(line.strip().encode('utf-8'))\n            # Extract first 10 characters of the hash as the file name\n            filename = sha256.hexdigest()[:10]\n            # Create file name with '.txt' extension\n            file_path = os.path.join(DIRECTORY, f\"{filename}.txt\")\n            # Add file path to the list\n            file_paths.append(file_path)\n            # Write the hashed line to the file\n            with open(file_path, \"wb\") as file:\n                file.write(sha256.digest())\n    return file_paths", "tokens": ["import", " os", "\n", "    ", "import", " hash", "lib", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "#", " Calculate", " SH", "A", "2", "5", "6", " hash", " of", " the", " line", "\n", "            ", "sha", "2", "5", "6", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "#", " Ext", "ract", " first", " ", "1", "0", " characters", " of", " the", " hash", " as", " the", " file", " name", "\n", "            ", "filename", " =", " sh", "a", "2", "5", "6", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "#", " Create", " file", " name", " with", " '", ".", "txt", "'", " extension", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "filename", "}", ".", "txt", "\"", ")", "\n", "            ", "#", " Add", " file", " path", " to", " the", " list", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "wb", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "sha", "2", "5", "6", ".", "dig", "est", "())", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-3.3832736015319824, -0.05826525390148163, -0.04442287236452103, -0.01415780745446682, -0.009062585420906544, -0.0013074668822810054, -2.0265558760002023e-06, -0.0005165196489542723, -0.08037764579057693, -0.0034961311612278223, -2.5370376110076904, -0.013033791445195675, -0.04835689812898636, -0.0063735549338161945, -0.005454656668007374, -0.06916928291320801, -1.0515931844711304, -1.4262540340423584, -0.01317027397453785, -0.04856836423277855, -9.929640509653836e-05, -3.397406908334233e-05, -0.00037019551382400095, -0.3517509400844574, -1.399705410003662, -0.014590589329600334, -0.05088555067777634, -0.9173862934112549, -0.3794240355491638, -0.03013000637292862, -0.0024414039216935635, -0.0031230507884174585, -0.0009148702956736088, -0.00205781776458025, -0.004460148513317108, -0.14587800204753876, -0.1809280663728714, -0.6272303462028503, -0.003437920706346631, -0.29089978337287903, -0.26553741097450256, -0.0016057705506682396, -2.3083183765411377, -1.196434497833252, -1.2098784446716309, -5.8530047681415454e-05, -0.017233623191714287, -0.00039176418795250356, -9.298280929215252e-06, -0.03922858461737633, -0.40053391456604004, -0.17717602849006653, -0.11152327805757523, -0.06239834055304527, -0.00038509105797857046, -2.354259490966797, -0.09088698029518127, -9.07141511561349e-05, -6.437280717364047e-06, -1.0984227657318115, -9.059495641849935e-05, -4.6491513785440475e-06, -9.536738616588991e-07, -0.007065193727612495, -0.0005324853118509054, -3.0397906812140718e-05, -2.3841855067985307e-07, -0.12653128802776337, -0.005504095461219549, -0.000563224486541003, -0.635158121585846, -0.0027941730804741383, -2.8490614567999728e-05, -0.0005937243695370853, -0.584734320640564, -0.0024827865418046713, -0.002252305392175913, -7.390703103737906e-05, -0.00032074074260890484, -1.9510974884033203, -0.3045925199985504, -0.7251094579696655, -1.901032567024231, -0.027711641043424606, -1.0235779285430908, -0.010750002227723598, -0.008129247464239597, -0.001774761825799942, -0.04820934310555458, -0.12945449352264404, -0.024635599926114082, -0.019316771999001503, -1.7545738220214844, -0.460208535194397, -1.1751102209091187, -0.013277565129101276, -0.0625198483467102, -0.000337305391440168, -1.646440863609314, -0.010513396933674812, -0.25455957651138306, -8.344646857949556e-07, -8.4638240878121e-06, -4.172316494077677e-06, 0.0, -0.001210671616718173, -0.004138121381402016, -6.389413465512916e-05, 0.0, -0.009847749024629593, -0.002424874110147357, -0.0018730491865426302, -0.0006076634745113552, -0.012207790277898312, -1.2364250421524048, -0.09838054329156876, -0.2731788158416748, -1.4117289781570435, -1.7206299304962158, -2.1384520530700684, -0.2821345925331116, -1.493638515472412, -0.00727539649233222, -0.0005743046058341861, -0.0005142558366060257, -0.0039149085059762, -0.10731612890958786, -0.00018320789968129247, -0.23063598573207855, -0.32810071110725403, -0.13373492658138275, -0.0007755132392048836, -0.06434431672096252, -7.986990567587782e-06, -7.533743337262422e-05, -4.887569048150908e-06, -0.001519954763352871, -0.0021764179691672325, -0.007133963983505964, -9.536738616588991e-07, -5.125986263010418e-06, -0.00033885458833537996, -0.6292929649353027, -0.0845668837428093, -0.00013767725613433868, -0.0005131834768690169, -0.002606805879622698, -1.6331539882230572e-05, -0.00011169286881340668, -2.706014311115723e-05, -0.0003578022588044405, -0.00028713393840007484, -0.08805891871452332, -0.5803744792938232, -2.6180620193481445, -0.15263652801513672, -0.05196931213140488, -0.0008830699953250587, -0.254420667886734, -0.05425029620528221, -0.26519885659217834, -0.00041607304592616856, -0.0017279945313930511, -2.622600959512056e-06, -0.00021920185827184469, -0.00021038226259406656, -0.00043084874050691724, -0.00015662873920518905, -0.004586414899677038, -3.0040289857424796e-05, -5.1616290875244886e-05, -0.0005072260973975062, -0.00035553809721022844, -0.2761498689651489, -0.09745388478040695, -0.7200616002082825, -0.4395199418067932, -2.1905364990234375, -0.03356127813458443, -0.3551182448863983, -0.017831258475780487, -0.05272761732339859, -0.020947063341736794, -0.030177082866430283, -0.0015092422254383564, -0.026034973561763763, -0.00022075122979003936, -0.00023636408150196075, -0.0027308098506182432, -1.2278481335670222e-05, -7.784063927829266e-05, -0.0003156163729727268, -0.8055680990219116, -2.951247453689575, -0.02044566534459591, -0.00035398892941884696, -8.05822346592322e-05, -0.5727937817573547, -0.013982197269797325, -0.0028956886380910873, -0.0007915939204394817, -0.0422591008245945, -0.0003036991402041167, -0.0002503081923350692, -0.0011530425399541855, -0.06881346553564072, -4.494089080253616e-05, -8.702239938429557e-06, -5.483612312673358e-06, -0.0049429358914494514, -0.003221681108698249, -8.344646857949556e-07, -0.0020385454408824444, -0.0011566146276891232, -0.5208701491355896, -0.03771624714136124, -0.0016786068445071578, -1.0251946150674485e-05, -4.672895011026412e-05, -0.16477634012699127, -0.025067010894417763, -1.190055012702942], "finish_reason": "stop"}], "metrics": {"energy": 925.4594982948298, "energy_per_token": 4.16873647880554, "time": 20.8509, "time_per_token": 0.09392297297297297}}
{"outputs": [{"text": "# Check if the DIRECTORY exists, and create it if necessary\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize an empty list to store file paths\n    file_paths = []\n\n    # Iterate over each non-empty line of the input string\n    for line in input_string.splitlines():\n        if not line.strip():  # Skip empty lines\n            continue\n\n        # Hash the line using SHA256\n        hash_object = hashlib.sha256(line.encode())\n        hexdigest = hash_object.hexdigest()\n\n        # Extract the first 10 characters of the hash\n        file_hash = hexdigest[:10]\n\n        # Create the filename with the first 10 characters of the hash\n        filename = file_hash + \".txt\"\n        file_path = os.path.join(DIRECTORY, filename)\n\n        # Write the hash to the file\n        with open(file_path, \"w\") as file:\n            file.write(hexdig", "tokens": ["#", " Check", " if", " the", " DIRECT", "ORY", " exists", ",", " and", " create", " it", " if", " necessary", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " non", "-", "empty", " line", " of", " the", " input", " string", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " not", " line", ".", "strip", "():", "  ", "#", " Skip", " empty", " lines", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "        ", "hex", "dig", "est", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Ext", "ract", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "file", "_", "hash", " =", " hex", "dig", "est", "[:", "1", "0", "]", "\n", "\n", "        ", "#", " Create", " the", " filename", " with", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "filename", " =", " file", "_", "hash", " +", " \"", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "\n", "        ", "#", " Write", " the", " hash", " to", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "hex", "dig"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -1.0099897384643555, -0.0004681444843299687, -0.06518545001745224, -0.6650553345680237, -1.4292211532592773, -0.29885390400886536, -0.03992193192243576, -0.0015393561916425824, -1.1682851314544678, -0.05111540108919144, -0.0009602464851923287, -0.09454534202814102, -0.004976268392056227, -0.001311395550146699, -1.3708974620385561e-05, -0.0007574073388241231, -5.817244164063595e-05, -0.13053664565086365, -0.00015090756642166525, -0.000536655425094068, -2.3841855067985307e-07, 0.0, -0.00028224775451235473, -0.0018511555390432477, -0.0034724909346550703, -0.01662789285182953, -8.821448318485636e-06, -0.1821540892124176, -4.410734163684538e-06, -6.437280717364047e-06, -0.0002181292074965313, -0.00021240839851088822, 0.0, -1.1920928244535389e-07, -0.004173498135060072, -0.0030378405936062336, -0.04709591343998909, -0.0008797351038083434, -0.4426123797893524, -1.5817234516143799, -0.5419377088546753, -0.007555717136710882, -0.0202009454369545, -0.07571368664503098, -0.11059495806694031, -0.4789365231990814, -0.012609517201781273, -0.06934580951929092, -0.0001134808044298552, -0.06028685346245766, -0.0027480479329824448, -0.006982804741710424, -0.003886884544044733, -0.0018650771817192435, -0.0003307510633021593, -0.019412998110055923, -0.0001864259538706392, -0.013985724188387394, -1.026747465133667, -0.000408327643526718, -0.237229585647583, -0.4800591766834259, -0.5043802857398987, -0.00056429672986269, -0.00012492353562265635, -0.003536995267495513, -1.48601496219635, -0.05897059291601181, -0.009203863330185413, -0.14166900515556335, -0.031436119228601456, -0.00013731967192143202, -0.03521249443292618, -0.04083465784788132, -0.0015470929211005569, -0.016610775142908096, -0.00015937011630740017, -8.583032467868179e-06, -0.0007848043460398912, -0.07490426301956177, -0.3358592092990875, -0.0027120260056108236, -0.003227503504604101, -0.009364490397274494, -0.12805436551570892, -2.3160717487335205, -0.003832378191873431, -0.9599652290344238, -0.022275594994425774, -0.01409798115491867, -0.9256857633590698, -1.8954096958623268e-05, -0.5733432769775391, -0.013763287104666233, -0.0011120808776468039, -0.010721815750002861, -0.00011312322021694854, -0.002832331694662571, -0.0009323778795078397, -0.12604261934757233, -0.0006778326351195574, -0.03829178959131241, -0.673090398311615, -0.03108406811952591, -0.05981041491031647, -0.04824262857437134, -0.04130169376730919, -3.158996332786046e-05, -0.00972816627472639, -5.829164365422912e-05, -3.4570634852570947e-06, -0.3241443932056427, -4.446407547220588e-05, -0.7016540169715881, -0.07296500355005264, -0.2529473304748535, -0.00019441144831944257, -8.940297266235575e-05, -8.702239938429557e-06, -2.3841830625315197e-06, -0.0020145138259977102, -0.001191978226415813, -1.585470999998506e-05, -1.1920928244535389e-07, -0.03531215339899063, -0.0056623537093400955, -0.0006193388253450394, -0.9776656627655029, -0.5306668877601624, -0.0037826194893568754, -0.5279163718223572, -1.3603110313415527, -2.6590709686279297, -0.006491644773632288, -0.007964874617755413, -0.000961913785431534, -5.4834770708112046e-05, -9.536738616588991e-07, -3.933898824470816e-06, -0.00015424491721205413, -3.2186455882765586e-06, 0.0, -0.001602795091457665, -0.06250909715890884, -0.09494481235742569, -0.00017105070583056659, -0.0010088359704241157, -1.2246261835098267, -0.0021843877620995045, -0.021223345771431923, -0.012907998636364937, -0.012081541121006012, -0.00311211752705276, -0.0008678245940245688, -0.011468908749520779, -0.09131380915641785, -0.0004487222759053111, -0.10659532994031906, -1.0838311910629272, -2.658331868587993e-05, -2.72329044342041, -0.003853991162031889, -1.3826111555099487, -0.0189652219414711, -0.006741398945450783, -2.0265558760002023e-06, 0.0, -0.014068125747144222, -0.001482341205701232, -0.0005159238935448229, -9.560128091834486e-05, -0.008318892680108547, -0.023294713348150253, -0.00021550717065110803, -0.0024452093057334423, -0.9170975685119629, -0.16035997867584229, -1.8380751609802246, -0.5514417290687561, -0.7084035277366638, -0.8534225821495056, -0.0010601620888337493, -0.0007688426994718611, -8.332382276421413e-05, -0.017878802493214607, -0.16839852929115295, -0.003690933110192418, -0.0019521719077602029, -1.2888000011444092, -0.00012754580529872328, -0.3054214119911194, -0.0014649622607976198, -2.192345142364502, -5.006777428206988e-06, -5.483612312673358e-06, -0.006974517833441496, -0.535509467124939, -0.00040534863364882767, -0.00028463127091526985, -2.13382354559144e-05, -0.00242689554579556, -2.659001111984253, -0.04612138122320175, -0.1407613307237625, -0.0024397389497607946, -0.00030501006403937936, -0.015373539179563522, -1.0490362910786644e-05, -5.4238757002167404e-05, -5.364403477869928e-06, -0.001602675998583436, -0.00013743886665906757, -0.004606231581419706, -5.364403477869928e-06, 0.0, -9.202533692587167e-05, -0.0002598424907773733, -0.00011145447206217796, -0.011743108741939068, -0.09402462095022202, -0.000228140561375767, -0.009040257893502712, -1.0410499572753906, -0.003002304583787918, -0.33192214369773865, -0.028219493106007576, -0.10308463871479034, -0.03467098996043205, -0.05242800712585449, -0.00013267113536130637, -0.012272086925804615, -4.446407547220588e-05, -7.92710343375802e-05, -0.0005229535745456815, -1.0728830375228426e-06, -1.311301275563892e-06, -9.393251093570143e-05, -0.11969047039747238, -0.02097274549305439, -0.010341511107981205, -0.190363809466362, -2.5629668016335927e-05, -0.16788718104362488, -0.006031762808561325, -0.0010929093696177006, -0.0004256058018654585, -0.003173793200403452, -0.00012265883560758084, -0.00017176583060063422, -0.00039593485416844487, -0.1872883141040802, -5.566918844124302e-05], "finish_reason": "length"}], "metrics": {"energy": 1101.4671253871918, "energy_per_token": 4.302605958543718, "time": 24.214354, "time_per_token": 0.0945873203125}}
{"outputs": [{"text": "# Ensure the directory exists\n    os.makedirs(DIRECTORY, exist_ok=True)\n\n    # Remove any empty lines in the input string\n    lines = input_string.splitlines()\n    lines = [line for line in lines if line.strip()]\n\n    # Hash each line using SHA256 and save to file\n    file_paths = []\n    for line in lines:\n        line_hash = hashlib.sha256(line.encode(\"utf-8\")).hexdigest()[:10]\n        file_path = os.path.join(DIRECTORY, f\"{line_hash}.txt\")\n        with open(file_path, \"w\") as file:\n            file.write(line_hash)\n        file_paths.append(file_path)\n\n    return file_paths", "tokens": ["#", " Ensure", " the", " directory", " exists", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " any", " empty", " lines", " in", " the", " input", " string", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "lines", " =", " [", "line", " for", " line", " in", " lines", " if", " line", ".", "strip", "()", "]", "\n", "\n", "    ", "#", " Hash", " each", " line", " using", " SH", "A", "2", "5", "6", " and", " save", " to", " file", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "line", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "(", "\"", "utf", "-", "8", "\"", "))", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "line", "_", "hash", "}", ".", "txt", "\"", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", "_", "hash", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.7260650396347046, -3.1804609298706055, -0.6087276935577393, -0.5895495414733887, -0.08218599110841751, -0.1431334763765335, -0.0009623901569284499, -0.7907072901725769, -7.366862701019272e-05, -0.0005891970940865576, -1.1920928244535389e-07, -3.814689989667386e-06, -0.00010692501382436603, -0.004676120821386576, -2.0265558760002023e-06, 0.0, -0.0008797351038083434, -0.00030501006403937936, -9.536738616588991e-07, -1.311301275563892e-06, -0.0036529258359223604, -0.00022063204960431904, -0.00018487652414478362, -0.005143742077052593, -0.04446198418736458, -0.00031144535751082003, -0.35916849970817566, -3.103576183319092, -2.1036124229431152, -2.2156262397766113, -0.042766131460666656, -2.9633092880249023, -0.03410361334681511, -0.07966094464063644, -0.1851596087217331, -0.07944714277982712, -0.00035398892941884696, -1.036226511001587, -0.029672421514987946, -1.8372803926467896, -0.00029976642690598965, -1.156323378381785e-05, -0.0002479245886206627, -0.21603156626224518, -0.8146052956581116, -0.015419437550008297, -0.010814745910465717, -0.047687336802482605, -0.3592545688152313, -0.0372450090944767, -0.309081107378006, -0.031118042767047882, -0.042811475694179535, -2.098061486321967e-05, -1.2874520507466514e-05, -0.00048423008411191404, -7.366862701019272e-05, -0.015871034935116768, -0.24298197031021118, -0.007772086188197136, -0.00034874555421993136, -0.8027766942977905, -0.07321243733167648, -0.011719073168933392, -0.00021741411183029413, -0.36259621381759644, -0.7646143436431885, -0.12452583014965057, -0.2549356520175934, -0.5846768617630005, -0.015693847090005875, -9.202533692587167e-05, -0.01714128814637661, -0.00011085849109804258, -6.318072337307967e-06, -0.6710724830627441, -0.19857695698738098, -1.671990990638733, -1.408621072769165, -0.027645429596304893, -0.0002734287118073553, -0.10174883902072906, -0.0014751992421224713, -0.006806048098951578, -0.0017102628480643034, -0.009143739938735962, -0.004075318109244108, -0.0282693263143301, -0.013826307840645313, -0.024777835234999657, -0.0014062763657420874, -0.0008829509024508297, -0.0001851148990681395, -8.11782301752828e-05, -0.003005988895893097, -2.6234800815582275, -0.483513742685318, -0.11112707108259201, -0.0038678848650306463, -0.00158791767898947, -0.00013147920253686607, -2.7418097943154862e-06, -0.0009596510208211839, -0.0016696811653673649, -1.5616295058862306e-05, 0.0, -0.00799183826893568, -0.0158961433917284, -0.0010268182959407568, -0.3271876275539398, -1.9755196571350098, -0.0160652007907629, -0.01240467093884945, -0.00814296305179596, -0.00013636612857226282, -7.390948667307384e-06, -0.0015330478781834245, -0.027946878224611282, -0.021038232371211052, -1.847726889536716e-05, 0.0, -0.0036669413093477488, -1.8949464559555054, -0.008843068964779377, -0.0053534009493887424, -0.0007241725688800216, -0.21887506544589996, -0.009263629093766212, -0.3478575646877289, -0.01257255394011736, -0.4407012462615967, -0.00026055757189169526, -0.11363773792982101, -1.549708758830093e-05, -0.0001560327800689265, -8.34461570775602e-06, -0.0005143749876879156, -0.0002012050390476361, -0.006117429118603468, -0.0002712835557758808, -1.1920928244535389e-07, -0.0003343261778354645, -0.40033158659935, -0.006936635356396437, -0.00015221867943182588, -0.00035375059815123677, -2.109982233378105e-05, -3.576278118089249e-07, -0.002512990264222026, -3.313963316031732e-05, -0.00033361115492880344, -1.7881233361549675e-05, -0.0003177614707965404, -0.0008524598088115454, -0.06045328080654144, -0.40013545751571655, -8.964136941358447e-05, -4.732496745418757e-05, -0.0008827127167023718, -2.264974000354414e-06, -3.576278118089249e-07, -0.00013398226292338222, -0.026835476979613304, -0.01737656444311142, -0.01135164126753807, -0.6464395523071289, -4.565611743601039e-05, -0.7423063516616821, -0.009184256196022034, -0.0007415643776766956, -0.0004961451631970704, -0.004254575818777084, -0.0003149013500660658, -0.00034767304896377027, -0.00021681819634977728, -0.04975241422653198, -0.20383399724960327, -5.4834770708112046e-05, -0.02056642435491085, -0.005795342847704887, -0.030909208580851555, -0.0012375799706205726, -2.002696055569686e-05, -0.00020203932945150882, -9.035655966727063e-05, -3.862306402879767e-05, -6.210611172718927e-05, -0.004632218275219202, -5.6980417866725475e-05, -6.723177648382261e-05, -0.0005080600967630744, -0.00032824851223267615, -0.04976193979382515, -0.0006735440110787749, -0.0605696439743042, -0.0024639980401843786, -6.198863957251888e-06, -2.4199192921514623e-05, -0.1853179931640625, -0.017969664186239243, -0.8621206283569336], "finish_reason": "stop"}], "metrics": {"energy": 832.4856973724364, "energy_per_token": 4.141719887425057, "time": 18.978495, "time_per_token": 0.09442037313432836}}
{"outputs": [{"text": "hashes = []\n    # Create directory if not exists\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    for line in input_string.splitlines():\n        line = line.strip()\n\n        if line:\n            # Compute SHA256 hash\n            hash_obj = hashlib.sha256(line.encode('utf-8'))\n            hash_hex = hash_obj.hexdigest()\n\n            # Save hash to a file\n            file_name = hash_hex[:10] + \".txt\"\n            file_path = os.path.join(DIRECTORY, file_name)\n            hashes.append(file_path)\n            with open(file_path, 'w', encoding='utf-8') as file:\n                file.write(hash_hex)\n\n    return hashes", "tokens": ["has", "hes", " =", " []", "\n", "    ", "#", " Create", " directory", " if", " not", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "\n", "        ", "if", " line", ":", "\n", "            ", "#", " Compute", " SH", "A", "2", "5", "6", " hash", "\n", "            ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "hash", "_", "hex", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Save", " hash", " to", " a", " file", "\n", "            ", "file", "_", "name", " =", " hash", "_", "hex", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "            ", "has", "hes", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "hex", ")", "\n", "\n", "    ", "return", " has", "hes", "\n", "\n", "if"], "logprobs": [-3.489345073699951, -0.021392671391367912, -0.13079555332660675, -0.14864809811115265, -0.07843201607465744, -0.2548096179962158, -2.6153719425201416, -0.8873958587646484, -1.4223248958587646, -0.04071483388543129, -2.577549695968628, -0.2817217707633972, -0.03386014327406883, -0.0006145734223537147, -0.25333112478256226, -0.002727124374359846, -0.0008468617452308536, -1.811964830267243e-05, -0.0009485750924795866, -3.6000557884108275e-05, -0.16758497059345245, -0.00020859450160060078, -0.0011403016978874803, -5.960462772236497e-07, -2.3841855067985307e-07, -0.0003779412363655865, -0.00643041031435132, -0.00629383372142911, -0.011324414983391762, -2.109982233378105e-05, -0.3845641016960144, -1.8358061424805783e-05, -3.2186455882765586e-06, -0.00023314618738368154, -0.00034505134681239724, 0.0, -1.1920928244535389e-07, -0.007234921678900719, -0.0006990373367443681, -1.0024340152740479, -0.0010995777556672692, -1.0225435495376587, -0.08470785617828369, -0.003576075891032815, -0.005186199210584164, -0.0002177716523874551, -3.671578815556131e-05, -0.0029286136850714684, -0.07014629244804382, -0.49078214168548584, -0.03221984952688217, -0.018843097612261772, -0.007795861456543207, -2.1974871158599854, -0.024886909872293472, -0.0021378775127232075, -0.000198821333469823, -0.053564783185720444, -0.007529569789767265, -0.05552992969751358, -2.593564748764038, -0.0007167869480326772, -0.6301036477088928, -0.756830632686615, -0.21746894717216492, -0.11917813867330551, -0.0031901916954666376, -0.6293948888778687, -3.118192195892334, -1.4279091358184814, -0.00027783826226368546, -0.0737462118268013, -0.0006173135479912162, -2.4318398573086597e-05, -0.06497880816459656, -0.9618927836418152, -0.00029988560709170997, -0.9398077130317688, -0.13985095918178558, -1.6663854122161865, -0.0003626880934461951, -0.00019488819816615433, -5.364403477869928e-06, -4.6491513785440475e-06, -0.010447690263390541, -0.0015262633096426725, -2.634490556374658e-05, -1.1920928244535389e-07, -0.39173316955566406, -0.011616328731179237, -0.0006741396500729024, -0.013877568766474724, -1.0686025619506836, -0.006674733012914658, -0.001698243198916316, -0.00012599628826137632, -0.000925112864933908, -0.004474746063351631, -0.10692735761404037, -0.3686034679412842, -0.09466593712568283, -1.946264624595642, -0.09981719404459, -0.0027964317705482244, -0.00010263393050990999, -5.960462772236497e-07, -1.7404405298293568e-05, -0.0011724510695785284, -1.2874520507466514e-05, -4.768370445162873e-07, -0.002018558792769909, -0.07270199060440063, -0.35079097747802734, -0.0006195771275088191, -0.041100580245256424, -1.4185677766799927, -0.46678534150123596, -0.1968594789505005, -2.1040501594543457, -0.07593579590320587, -0.25533419847488403, -0.00021026308240834624, -1.0153594017028809, -0.05766464024782181, -0.5053637027740479, -0.0033267175313085318, -0.42362868785858154, -7.92710343375802e-05, -5.9126061387360096e-05, -0.046461693942546844, -0.004476407542824745, -0.0005273620481602848, -0.016698235645890236, -0.11318892985582352, -1.1055243015289307, -0.0005159238935448229, -0.00029905137489549816, -2.5510462364763953e-05, -0.08920913934707642, -0.0044165924191474915, -0.03896227851510048, -0.0008899780223146081, -0.0018484188476577401, -0.000302745756926015, -0.022824086248874664, -1.2755313036905136e-05, -4.684815212385729e-05, -3.814689989667386e-06, -0.0009189196862280369, -0.0001578206429257989, -0.0058389571495354176, -0.00017355366435367614, -1.1920928244535389e-07, -0.00018594920402392745, -0.0007385863573290408, -3.576278118089249e-07, -1.6093124941107817e-05, -9.440929716220126e-05, -0.00033825874561443925, -0.27101802825927734, -1.651854157447815, -2.3007127310847864e-05, -0.0012440093560144305, -0.00011932138295378536, -0.0001971527235582471, -0.005378182046115398, -4.6491513785440475e-06, -0.0003475538978818804, -0.0004609952447935939, -0.00629525538533926, -1.1424587965011597, -0.040185462683439255, -7.807903602952138e-05, -0.0001461399078834802, -0.0009006972541101277, -1.0728830375228426e-06, -2.1934269170742482e-05, -0.0002225389762315899, -1.8155509233474731, -0.05417046323418617, -2.5348761081695557, -0.0003381395654287189, -0.0026605469174683094, -0.16217976808547974, -0.004398433957248926, -0.006483472418040037, -0.0002812943421304226, -0.0023180777207016945, -5.8410845667822286e-05, -0.4899826943874359, -0.012966249138116837, -0.0003022690652869642, -0.00028713393840007484, -0.003494586795568466, -3.8265450712060556e-05, -0.0003734129713848233, -0.001384491566568613, -0.10079673677682877, -7.867782187531702e-06, -0.0042783161625266075, -0.09186149388551712, -0.0009097489528357983, -0.07828585803508759, -0.007455265149474144, -0.02719343639910221, -0.0030005217995494604, -2.3841855067985307e-07, -0.15560850501060486, -0.019090838730335236, -0.8133344054222107], "finish_reason": "stop"}], "metrics": {"energy": 862.1541471385959, "energy_per_token": 4.105495938755219, "time": 19.790728, "time_per_token": 0.0942415619047619}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n    file_paths = []\n    for line in input_string.split(\"\\n\"):\n        if not line:\n            continue\n        hash_object = hashlib.sha256(line.encode(\"utf-8\"))\n        file_name = hash_object.hexdigest()[:10] + \".txt\"\n        file_path = os.path.join(DIRECTORY, file_name)\n        file_paths.append(file_path)\n        with open(file_path, \"w\") as file:\n            file.write(line)\n    return file_paths", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", "):", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "(", "\"", "utf", "-", "8", "\"", "))", "\n", "        ", "file", "_", "name", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "line", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-2.142059803009033, -0.06515629589557648, -0.03001432865858078, -2.109982233378105e-05, -0.0022184066474437714, -7.891343557275832e-05, -0.1306229680776596, -0.00029774048016406596, -0.0009198724874295294, -1.4305104514278355e-06, -3.576278118089249e-07, -0.0009273757459595799, -0.03280802071094513, -0.006971084978431463, -0.03273776173591614, -2.1219027985353023e-05, -1.2128325700759888, -3.6954811548639555e-06, -0.0006328010931611061, -0.0005108005134388804, -4.768370445162873e-07, 0.0, -0.0004632591735571623, -0.01679530180990696, -1.354871153831482, -0.9294611215591431, -0.017031129449605942, -0.0418870635330677, -0.007676624692976475, -0.022581811994314194, -0.008495028130710125, -0.07544763386249542, -0.1970481276512146, -0.11652837693691254, -0.0034848456270992756, -0.013515163213014603, -0.0002627027570270002, -1.3828182090946939e-05, -0.003690695622935891, -0.061838530004024506, -2.299616575241089, -0.005791313014924526, -0.0006466205231845379, -5.519237674889155e-05, -1.6569954823353328e-05, -0.0009479796281084418, -0.01017136499285698, -0.002307730494067073, -0.05932217836380005, -0.9511558413505554, -0.01786193996667862, -0.1763581931591034, -0.11716486513614655, -0.0008251837571151555, -0.031729381531476974, -0.05025656521320343, -0.018072929233312607, -0.9843958020210266, -0.10587766766548157, -0.6419659852981567, -0.0007717015105299652, -0.0001961992384167388, -1.0371154530730564e-05, -5.006777428206988e-06, -0.004460148513317108, -0.0031173464376479387, -1.966933996300213e-05, -7.152555099310121e-07, -0.02346019446849823, -0.02189592830836773, -0.0006973695708438754, -0.1444002091884613, -1.7452120780944824, -0.018096227198839188, -0.1106361523270607, -0.01572459377348423, -0.0003466005437076092, -1.549708758830093e-05, -0.005180032458156347, -0.02623913623392582, -0.0010609956225380301, -2.4355082511901855, -0.015019074082374573, -0.6660877466201782, -0.00867834035307169, -0.24811850488185883, -0.0019052940187975764, -1.645074735279195e-05, -5.61460001335945e-05, -0.009054788388311863, -5.447716102935374e-05, -2.3841855067985307e-07, -0.03655083850026131, -0.009914558380842209, -0.0032116996590048075, -0.0010946955299004912, -0.009371812455356121, -0.22206799685955048, -0.046842385083436966, -0.000300958170555532, -0.00017867876158561558, -1.1801649634435307e-05, -0.008810692466795444, -0.00206864345818758, -0.12285841256380081, -0.0035798768512904644, -0.06780073791742325, -0.0008081507403403521, -0.1182108223438263, -3.576272320060525e-06, -0.00021872512297704816, -6.198863957251888e-06, -0.0013813963159918785, -0.00019405389321036637, -0.006855893414467573, -0.0004203628050163388, -1.1920928244535389e-07, -0.000285227142740041, -0.001050516264513135, -1.0728830375228426e-06, -1.490105023549404e-05, -0.00012730741582345217, -0.0005189026123844087, -0.0086082573980093, -1.060243844985962, -0.010242990218102932, -0.021391388028860092, -0.0016782497987151146, -0.0002711643755901605, -5.9126061387360096e-05, -0.002801424590870738, -2.622600959512056e-06, -1.5735502529423684e-05, -0.00024089295766316354, -0.001277822069823742, -0.054329220205545425, -0.06438612192869186, -9.417090768693015e-05, -9.643566590966657e-05, -0.0018851857166737318, -1.5497195136049413e-06, -3.5523738915799186e-05, -0.00029583368450403214, -0.02528148517012596, -0.07542276382446289, -0.020576467737555504, -0.2705184519290924, -0.0001045410826918669, -0.5318636894226074, -0.032336656004190445, -0.0006554362480528653, -0.0007225048611871898, -0.007124258670955896, -0.00035375059815123677, -0.0007581220706924796, -0.0006009918288327754, -1.9183117151260376, -0.17242531478405, -0.0011174393584951758, -0.048518285155296326, -0.010838213376700878, -0.0028314997907727957, -5.125986263010418e-06, -9.059865078597795e-06, -0.1955365538597107, -0.02694479376077652, -1.7759497165679932], "finish_reason": "stop"}], "metrics": {"energy": 702.7422626991265, "energy_per_token": 4.208037501192375, "time": 15.65473, "time_per_token": 0.09374089820359281}}
{"outputs": [{"text": "file_paths = []\n    for line in input_string.split('\\n'):\n        line = line.strip()\n        if line:\n            h = hashlib.sha256()\n            h.update(line.encode('utf-8'))\n            hash = h.hexdigest()\n            file_path = os.path.join(DIRECTORY, hash[:10] + '.txt')\n            file_paths.append(file_path)\n            with open(file_path, 'w') as f:\n                f.write(hash)\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", ":", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "        ", "if", " line", ":", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "h", ".", "update", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "hash", " =", " h", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "[:", "1", "0", "]", " +", " '", ".", "txt", "')", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "#"], "logprobs": [-2.5265631675720215, -0.016316914930939674, -0.05886809527873993, -0.008546561934053898, -0.013712962158024311, -0.08972278237342834, -0.4356576204299927, -1.0792495012283325, -0.10774413496255875, -0.005327788647264242, -0.007151363417506218, -0.00020144341397099197, -6.198863957251888e-06, -0.003366875695064664, -0.059878796339035034, -1.3457030057907104, -0.00015496007108595222, -5.781483559985645e-05, -7.021180499577895e-05, -0.0007441850611940026, -0.015435989014804363, -0.011576853692531586, -2.9241244792938232, -0.030079225078225136, -0.0036718109622597694, -0.000567275274079293, -0.05753015726804733, -0.014721456915140152, -0.06844093650579453, -0.03155094012618065, -0.017912408336997032, -0.5022936463356018, -0.2197362780570984, -0.07500612735748291, -0.002000237349420786, -1.3431469202041626, -1.4075180292129517, -0.0013668728061020374, -0.00019047829846385866, -9.059865078597795e-06, -0.032292451709508896, -0.002809864701703191, -0.0005385617259889841, -3.933898824470816e-06, -1.4155833721160889, -0.007934479974210262, -0.0014857931528240442, -0.015177242457866669, -0.00032228996860794723, -3.528532761265524e-05, -0.0019558602944016457, -0.09556906670331955, -0.004260867368429899, -0.011157029308378696, -0.6279073357582092, -0.022044967859983444, -0.02424507588148117, -0.0007726544863544405, -0.0019695423543453217, -0.002482073148712516, -0.005768675357103348, -1.8091822862625122, -2.0132436752319336, -0.010186233557760715, -2.658331868587993e-05, -0.11113421618938446, -2.276871418871451e-05, -1.1920928244535389e-07, -0.018722129985690117, -0.30515390634536743, -0.032502032816410065, -1.477870225906372, -0.03694853559136391, -0.8121280074119568, -0.0015291199088096619, -0.19963862001895905, -3.4927710657939315e-05, -0.0005637010326609015, -1.537788011773955e-05, -0.002209842437878251, -0.0023523299023509026, -0.00876389816403389, -9.536738616588991e-07, -2.50339189733495e-06, -0.0005983707960695028, -0.6885048151016235, -0.06925149261951447, -0.004295171704143286, -0.00043644916149787605, -0.09949899464845657, -0.0013296105898916721, -0.17626723647117615, -8.701899787411094e-05, -0.00020418466010596603, -0.00019762947340495884, -0.0133739048615098, -0.011675831861793995, -0.5160130858421326, -0.0008574623498134315, -0.009723443537950516, -0.0009030792862176895, -0.00011157367407577112, -0.0001971527235582471, -0.0020216519478708506, -1.1920858014491387e-05, -2.0861407392658293e-05, -0.00026306029758416116, -0.001167092937976122, -0.12111533433198929, -0.30420783162117004, -0.00031132620642893016, -0.0004917366313748062, -0.004110697191208601, -6.318072337307967e-06, -3.576272320060525e-06, -0.00037746457383036613, -0.04242376238107681, -0.05170377343893051, -0.1510138362646103, -0.00014053787162993103, -0.12675656378269196, -0.013628296554088593, -0.0005042473785579205, -0.00040451448876410723, -0.010847529396414757, -1.2516897186287679e-05, -0.0006071869283914566, -0.007514898665249348, -0.16583338379859924, -0.08801721781492233, -0.001032891683280468, -0.06693047285079956, -0.019001714885234833, -0.0018502036109566689, -6.556489552167477e-06, -4.7444173105759546e-05, -0.1629176139831543, -0.023760229349136353, -1.3167800903320312], "finish_reason": "stop"}], "metrics": {"energy": 577.2213420028688, "energy_per_token": 4.152671525200495, "time": 12.954918, "time_per_token": 0.0932008489208633}}
{"outputs": [{"text": "lines = input_string.split('\\n')\n    file_paths = []\n    for line in lines:\n        if line:\n            hash_obj = hashlib.sha256(line.encode('utf-8'))\n            hash_digest = hash_obj.hexdigest()\n            filename = hash_digest[:10] + '.txt'\n            file_path = os.path.join(DIRECTORY, filename)\n            file_paths.append(file_path)\n            if not os.path.exists(DIRECTORY):\n                os.mkdir(DIRECTORY)\n            with open(file_path, 'w') as f:\n                f.write(hash_digest)\n    return file_paths", "tokens": ["lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ":", "\n", "            ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "hash", "_", "dig", "est", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "            ", "filename", " =", " hash", "_", "dig", "est", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "                ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "hash", "_", "dig", "est", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "print"], "logprobs": [-3.224134922027588, -0.023551715537905693, -0.06932523846626282, -0.00014757021563127637, -9.059865078597795e-06, -0.0011208925861865282, -0.3043063282966614, -0.7945401668548584, -0.00028010259848088026, -9.262132516596466e-05, -0.0002051381452474743, -0.09631333500146866, -0.1568596363067627, -0.5591717958450317, -0.009949848987162113, -0.03482228145003319, -0.005118836183100939, -0.014199413359165192, -0.01732688955962658, -0.9050535559654236, -0.4147498309612274, -0.049160052090883255, -0.0021801055409014225, -0.0054980493150651455, -0.0008817598572932184, -0.003321371041238308, -0.006997246760874987, -0.07183754444122314, -0.33183515071868896, -0.8422205448150635, -0.22202341258525848, -0.0020460402593016624, -1.0563498735427856, -0.09862349182367325, -1.602763295173645, -0.0007007050444371998, -0.0005134217790327966, -1.4305012882687151e-05, -9.179073458653875e-06, -0.016845589503645897, -0.0016526625258848071, -0.0029844765085726976, -7.152555099310121e-07, -0.24506023526191711, -0.014580250717699528, -0.000726197671610862, -0.051547542214393616, -0.8160097002983093, -0.009039430879056454, -0.0026406915858387947, -0.00025078488397412, -0.0006947487709112465, -0.014951431192457676, -0.0016499252524226904, -0.5551938414573669, -0.07535775750875473, -2.759892463684082, -0.08079314976930618, -0.0038643223233520985, -0.003043901873752475, -0.00023576818057335913, -2.264974000354414e-06, -2.753696753643453e-05, -0.14902888238430023, -1.0609570381348021e-05, -2.3841855067985307e-07, -0.00441374396905303, -0.16201604902744293, -0.017337433993816376, -0.9610699415206909, -0.006700429134070873, -0.2334054708480835, -0.00018070495571009815, -0.00014065706636756659, -2.3841855067985307e-07, -0.030074598267674446, -0.004504414740949869, -0.000690460205078125, -0.018584178760647774, -0.04786553606390953, -0.13266979157924652, -6.758938252460212e-05, -0.00011383838864276186, -2.753696753643453e-05, -0.01244328822940588, -0.03300676867365837, -0.1794556826353073, -0.09300355613231659, -0.022878965362906456, -0.0005810956354252994, -0.02933155745267868, -8.702239938429557e-06, -0.00011598391574807465, -1.549708758830093e-05, -0.0015141224721446633, -0.003227147040888667, -0.0020385454408824444, -1.1086402082582936e-05, -2.3841830625315197e-06, -0.00021789084712509066, -0.0011300613405182958, -8.95221673999913e-05, -0.0008861667010933161, -0.0396798700094223, -0.45091527700424194, -0.0007421599584631622, -0.006906801834702492, -0.0003156163729727268, -6.687417771900073e-05, -0.00022492263815365732, -0.0014680571621283889, -3.576272320060525e-06, -1.6689160474925302e-05, -0.00030751267331652343, -0.0009863278828561306, -0.11698512732982635, -2.004695177078247, -0.04958294332027435, -0.0008393579046241939, -1.4305104514278355e-06, -8.153582894010469e-05, -9.179073458653875e-06, -0.08466218411922455, -0.0005322470096871257, -0.06924881786108017, -6.079655122448457e-06, 0.0, -0.0002797450579237193, -0.014078587293624878, -0.001675750594586134, -0.006720914039760828, -1.4424220353248529e-05, -1.5755932331085205, -2.5748875486897305e-05, -0.0007615765207447112, -0.00010024998482549563, -5.364403477869928e-06, -1.1920928244535389e-07, -0.00015793983766343445, -0.0011011258466169238, -0.01075955480337143, -0.030219415202736855, -8.880697714630514e-05, -0.00038485272671096027, -0.0005273620481602848, -2.145764938177308e-06, -2.8371408916427754e-05, -0.0002944036095868796, -0.022148162126541138, -0.06111502647399902, -0.12696364521980286, -7.366862701019272e-05, -0.47045421600341797, -0.005576648749411106, -0.0004239375703036785, -0.0002374367177253589, -0.005350555293262005, -1.2159273865108844e-05, -0.0007007050444371998, -0.005173272453248501, -0.18537038564682007, -9.775113539944869e-06, -0.001487578614614904, -2.3841855067985307e-07, -0.0490497350692749, -0.000849601230584085, -0.03887318819761276, -0.006624523084610701, -0.0016401661559939384, -5.483612312673358e-06, -1.0251946150674485e-05, -0.18536277115345, -0.031098512932658195, -3.3732857704162598], "finish_reason": "stop"}], "metrics": {"energy": 737.7874778823851, "energy_per_token": 4.240157918864282, "time": 16.513083, "time_per_token": 0.09490277586206898}}
{"outputs": [{"text": "file_paths = []\n\n    # Check if DIRECTORY exists and create if it doesn't\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Split the input string into lines, ignoring empty lines\n    lines = [line for line in input_string.split('\\n') if line.strip() != '']\n\n    # Hash each line using SHA256 and save the hashes to files\n    for line in lines:\n        hashed = hashlib.sha256(line.strip().encode('utf-8')).hexdigest()\n        filename = hashed[:10] + '.txt'\n        file_path = os.path.join(DIRECTORY, filename)\n        with open(file_path, 'w', encoding='utf-8') as file:\n            file.write(hashed + '\\n')\n        file_paths.append(file_path)\n\n    return file_paths", "tokens": ["file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " DIRECT", "ORY", " exists", " and", " create", " if", " it", " doesn", "'", "t", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", ",", " ignoring", " empty", " lines", "\n", "    ", "lines", " =", " [", "line", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", " ", "!", "=", " '", "']", "\n", "\n", "    ", "#", " Hash", " each", " line", " using", " SH", "A", "2", "5", "6", " and", " save", " the", " has", "hes", " to", " files", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "h", "ashed", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "        ", "filename", " =", " has", "hed", "[:", "1", "0", "]", " +", " '", ".", "txt", "'", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "h", "ashed", " +", " '\\", "n", "')", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-2.5265631675720215, -0.016316914930939674, -0.05886809527873993, -0.008546561934053898, -0.013712962158024311, -0.08972278237342834, -1.0429154634475708, -0.0014546061865985394, -0.6174148321151733, -1.2906460762023926, -0.057939063757658005, -1.829819679260254, -0.000278195773717016, -0.08670320361852646, -2.0436697006225586, -0.020757345482707024, -1.5048096179962158, -2.0528812408447266, -0.2329655885696411, -0.0013359201839193702, -2.95634672511369e-05, -0.027492469176650047, -0.00016234986833296716, -0.06988031417131424, -0.003471778240054846, -0.0006721144891344011, -2.074220174108632e-05, -0.0005326044629327953, -3.71926071238704e-05, -0.1413894146680832, -9.643566590966657e-05, -0.000559292733669281, -1.1920928244535389e-07, 0.0, -0.00020466140995267779, -0.0007801587926223874, -0.0025043098721653223, -0.012304351665079594, -5.960446742392378e-06, -0.19961890578269958, -6.198863957251888e-06, -2.145764938177308e-06, -0.0001784403866622597, -0.00014768941036891192, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.003030471969395876, -0.0008186326595023274, -0.006529425736516714, -0.0007948100101202726, -0.26869505643844604, -1.153602123260498, -0.8120661377906799, -0.09354814887046814, -0.2610114812850952, -0.2172672301530838, -0.04015614464879036, -2.5185790061950684, -1.4595013856887817, -0.0208404753357172, -0.019502436742186546, -0.051846057176589966, -0.00020621081057470292, -0.15250809490680695, -0.0070372577756643295, -0.4638662040233612, -0.014717815443873405, -0.12193876504898071, -1.490105023549404e-05, -1.0490362910786644e-05, -0.0004962643142789602, -0.00012885693286079913, -5.364403477869928e-06, -0.0002157455455744639, -0.14866741001605988, -1.1951913833618164, -7.533743337262422e-05, -2.5629668016335927e-05, -7.188061863416806e-05, -0.0002814135223161429, -0.0060991826467216015, -0.6274939179420471, -0.003314598463475704, -9.405170567333698e-05, -1.1667367219924927, -3.576278118089249e-07, -3.576278118089249e-07, -0.12634481489658356, -6.067568756407127e-05, -0.0009781105909496546, -0.012580323033034801, -0.0001842805795604363, -0.19319848716259003, -0.7469204068183899, -0.03323338180780411, -0.30316659808158875, -0.7510201930999756, -0.01985052414238453, -4.672895011026412e-05, -0.007962863892316818, -0.0001081169830285944, -7.271740287251305e-06, -0.20152920484542847, -0.10585332661867142, -0.3117830455303192, -0.7929344177246094, -0.0038441347423940897, -0.07502967864274979, -0.06346791237592697, -0.01779179461300373, -0.0002037079248111695, -0.00613105483353138, -0.02846098318696022, -0.002583144698292017, -0.00032646095496602356, -7.60526381782256e-05, -5.602679812000133e-05, -0.003640573238953948, -1.9339148998260498, -0.1234312430024147, -1.334053635597229, -0.0030299965292215347, -0.00021026308240834624, -3.4570634852570947e-06, -0.002218763343989849, -0.0015714927576482296, -0.00011157367407577112, -9.536738616588991e-07, -0.007423317059874535, -0.014685393311083317, -0.0007164295529946685, -1.0290933847427368, -0.004035188350826502, -2.062299427052494e-05, -0.0010829067323356867, -0.4512491226196289, -0.007843528874218464, -0.003769793314859271, -0.00011705666838679463, -0.0005737089086323977, -0.0393558107316494, -0.01319874543696642, -1.2159273865108844e-05, 0.0, -0.0039107524789869785, -0.1385376751422882, -0.04348453879356384, -0.5791662335395813, -0.002670652698725462, -0.3783974349498749, -4.732496745418757e-05, -0.00780709832906723, -0.0024081061128526926, -0.00030524839530698955, -0.004677069839090109, -0.10454795509576797, -0.14942391216754913, -2.9801878554280847e-05, -0.00016139635408762842, -1.4185804502631072e-05, -0.09251756966114044, -0.0463692843914032, -0.03261050209403038, -0.10268142074346542, -0.005772349424660206, -0.00015925093612167984, -0.014255120418965816, -8.821448318485636e-06, -6.341733387671411e-05, -3.576272320060525e-06, -0.0007017772295512259, -0.0013937769690528512, -0.004343955311924219, -0.00012146688823122531, 0.0, -8.761498611420393e-05, -0.00016151554882526398, -5.1377883210079744e-05, -0.0009120118920691311, -0.19012707471847534, -0.6341304183006287, -4.6132929128361866e-05, -0.00016604475968051702, -0.00032574593205936253, -2.145764938177308e-06, -7.152555099310121e-07, -0.0001515035255579278, -0.039301369339227676, -0.05586254596710205, -1.8138267993927002, -0.00014172980445437133, -0.001804986852221191, -0.05662263557314873, -0.0022960747592151165, -0.004144175909459591, -0.0001911934232339263, -0.0017407278064638376, -1.2397689715726301e-05, -0.3573012948036194, -0.008493373170495033, -0.0006030171643942595, -0.0006761648692190647, -0.0018256916664540768, -4.076874756719917e-05, -0.00026663561584427953, -0.0021308590658009052, -0.05333617702126503, -2.0265558760002023e-06, -2.9430794715881348, -0.08744688332080841, -0.0003666205739136785, -0.004070568829774857, -0.008746527135372162, -0.07935057580471039, -0.0024905160535126925, -2.729855441430118e-05, -0.0001722425949992612, -0.00010287232726113871, -4.446407547220588e-05, -0.0001438752660760656, -0.002613345393911004, -4.792098479811102e-05, -4.0531076592742465e-06, -0.0010174104245379567, -0.0006576997111551464, -0.015016959980130196, -0.0006663962849415839, -0.025705762207508087, -0.002064360771328211, -4.768360213347478e-06, -1.5497195136049413e-06, -0.20427481830120087, -0.022082747891545296, -0.8381574153900146], "finish_reason": "stop"}], "metrics": {"energy": 1085.3985645580294, "energy_per_token": 4.638455404094143, "time": 23.973324, "time_per_token": 0.10245010256410257}}
{"outputs": [{"text": "# Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n    for line in input_string.splitlines():\n        if line.strip():\n            # Hash the line using SHA256\n            hash_object = hashlib.sha256(line.encode('utf-8'))\n            # Get the first 10 characters of the hash\n            hash_prefix = hash_object.hexdigest()[:10]\n            # Create the filename\n            filename = os.path.join(DIRECTORY, f\"{hash_prefix}.txt\")\n            # Save the hash to file\n            with open(filename, \"w\") as file:\n                file.write(hash_object.hexdigest())\n            file_paths.append(filename)\n\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "            ", "#", " Get", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "hash", "_", "prefix", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "#", " Create", " the", " filename", "\n", "            ", "filename", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "hash", "_", "prefix", "}", ".", "txt", "\"", ")", "\n", "            ", "#", " Save", " the", " hash", " to", " file", "\n", "            ", "with", " open", "(", "filename", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "object", ".", "hex", "dig", "est", "())", "\n", "            ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -0.4572495222091675, -0.026567475870251656, -0.005228179972618818, -0.2439398318529129, -0.0010846928926184773, -3.9219088648678735e-05, -0.0044555203057825565, -0.02317090332508087, -0.001111485529690981, -0.3258815407752991, -0.0013624681159853935, -0.00032848684350028634, -1.5497195136049413e-06, -0.0003522014303598553, -3.528532761265524e-05, -0.07601401954889297, -0.00018666432879399508, -0.0006811682251282036, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00014256415306590497, -0.0013915151357650757, -0.002580172149464488, -0.006020505912601948, -7.033323527139146e-06, -0.16232967376708984, -7.271740287251305e-06, -7.152555099310121e-07, -0.000163541772053577, -0.00014041867689229548, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0026261862367391586, -0.0021347845904529095, -0.037298642098903656, -0.0007457336178049445, -1.5060170888900757, -0.002989706117659807, -0.02130655199289322, -0.0035965063143521547, -0.003588904393836856, -0.10829563438892365, -0.6335458159446716, -0.4130835235118866, -0.07188436388969421, -0.0029437087941914797, -0.0037930700927972794, -0.00013791563105769455, -3.3378044463461265e-05, -0.0010790961096063256, -0.10025715827941895, -0.3490526080131531, -0.017013197764754295, -0.011332076042890549, -0.003468214301392436, -0.33809930086135864, -0.3858133852481842, -0.3901388943195343, -0.002797977067530155, -0.2692662179470062, -0.6263770461082458, -0.001549235312268138, -0.8998773694038391, -0.6416401863098145, -0.16006290912628174, -0.22097359597682953, -0.15659984946250916, -0.027199121192097664, -0.00011860620725201443, -0.018751729279756546, -0.00011276562872808427, -1.537788011773955e-05, -0.20200476050376892, -0.00013302871957421303, -0.734129011631012, -0.08315706253051758, -0.20945461094379425, -0.00019631843315437436, -6.770858453819528e-05, -7.271740287251305e-06, -1.6689286894688848e-06, -0.0019408691441640258, -0.0013872295385226607, -3.194758028257638e-05, -2.3841855067985307e-07, -0.014342200011014938, -0.004507263191044331, -0.0008840228547342122, -0.6588840484619141, -1.4411406517028809, -0.0037753749638795853, -0.0009848987683653831, -4.172238186583854e-05, -0.0029114973731338978, -0.0011829291470348835, -0.1288459151983261, -2.325523853302002, -0.816186785697937, -0.03634382784366608, -0.024603499099612236, -0.008485334925353527, -0.006058778613805771, -0.0011064843274652958, -0.014672824181616306, -0.013755880296230316, -0.0013423488708212972, -0.022063974291086197, -0.35785171389579773, -0.0001486429391661659, -0.6867841482162476, -0.024611523374915123, -0.9540368914604187, -0.0008142255246639252, -0.0027610058896243572, -0.0001308832288486883, -3.6954811548639555e-06, -1.2636104656849056e-05, -0.002252305392175913, -2.0146166207268834e-05, 0.0, -0.0012411518255248666, -0.0008764001540839672, -0.002261582762002945, -0.0005030558677390218, -0.0001037067049765028, -0.002172373700886965, -0.1125614121556282, -0.04367569833993912, -0.8030401468276978, -0.08257199078798294, -1.4988545179367065, -1.099501371383667, -0.0003270567976869643, -0.2029421329498291, -0.0008809261489659548, -1.01323401927948, -4.887569048150908e-06, -1.2755313036905136e-05, -5.245195097813848e-06, -0.0006497179274447262, -0.00033718624035827816, -0.004174566827714443, -0.0004564673872664571, -1.1920928244535389e-07, -0.0002388668799540028, -0.31736376881599426, -0.20534901320934296, -0.00010239553375868127, -0.00020680672605521977, -3.576278118089249e-07, -4.529942543740617e-06, -0.002104093786329031, -2.658331868587993e-05, -0.00022837892174720764, -3.218599158572033e-05, -0.00020752183627337217, -0.00014935807848814875, -0.04172585904598236, -0.21110360324382782, -0.7214258909225464, -0.004708987195044756, -0.17363093793392181, -0.04624500125646591, -2.4247114658355713, -0.02105165645480156, -0.00028701478731818497, -0.038787759840488434, -6.23445157543756e-05, -0.00011169286881340668, -0.0005776405450887978, -0.00015162272029556334, -0.8954422473907471, -0.07218141853809357, -0.006415012292563915, -0.21052324771881104, -4.6967357775429264e-05, -0.6295222043991089, -0.012792076915502548, -0.0003300360403954983, -0.00016890530241653323, -0.003653401043266058, -0.00011121608258690685, -0.0002320735511602834, -0.00040642108069732785, -0.3299541175365448, -0.00015877417172305286, -0.23909629881381989, -0.0006817638641223311, -0.00031799983116798103, -2.5033637939486653e-05, 0.0, -0.044603023678064346, -0.0004727914638351649, -0.055898845195770264, -0.845132052898407, -7.271740287251305e-06, -0.0004441943601705134, -4.255681051290594e-05, -2.13382354559144e-05, -6.460934673668817e-05, -0.01604044809937477, -0.0006385194719769061, -0.001671347301453352, -0.4549892842769623, -0.0007052318542264402, -0.01772843860089779, -0.0010415849974378943, -5.245195097813848e-06, -3.576278118089249e-07, -0.16726180911064148, -0.022573653608560562, -0.702110767364502], "finish_reason": "stop"}], "metrics": {"energy": 901.8577728691098, "energy_per_token": 4.194687315670278, "time": 20.267286, "time_per_token": 0.0942664465116279}}
{"outputs": [{"text": "# Check if the directory exists and create it if necessary\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    # Hash each non-empty line of the input string\n    file_paths = []\n    for line in input_string.splitlines():\n        if line.strip():  # Ignore empty lines\n            line_hash = hashlib.sha256(line.strip().encode()).hexdigest()[:10]\n            file_name = line_hash + \".txt\"\n            file_path = os.path.join(DIRECTORY, file_name)\n\n            # Save the hash to the file\n            with open(file_path, \"w\") as file:\n                file.write(line_hash)\n\n            file_paths.append(file_path)\n\n    return file_paths", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " create", " it", " if", " necessary", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Hash", " each", " non", "-", "empty", " line", " of", " the", " input", " string", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "():", "  ", "#", " Ign", "ore", " empty", " lines", "\n", "            ", "line", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "file", "_", "name", " =", " line", "_", "hash", " +", " \"", ".", "txt", "\"", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "\n", "            ", "#", " Save", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "line", "_", "hash", ")", "\n", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -0.6362276077270508, -0.10271100699901581, -1.4972641468048096, -0.04084530100226402, -0.0503193698823452, -0.0024710141588002443, -1.0111018419265747, -0.03365464508533478, -0.0017081208061426878, -0.0827772244811058, -0.0022299441043287516, -0.0006140968762338161, -9.775113539944869e-06, -0.0005847889697179198, -3.218599158572033e-05, -2.074148416519165, -3.373566141817719e-05, -0.0008454324561171234, -0.0009909725049510598, -5.960462772236497e-07, -3.576278118089249e-07, -0.0003135904553346336, -0.0024120304733514786, -0.0029895871412009, -0.015401008538901806, -1.156323378381785e-05, -1.3188133239746094, -8.344646857949556e-07, -0.00040987672400660813, -0.00027259447961114347, 0.0, -3.576278118089249e-07, -0.0003936707798857242, -0.001824620645493269, -0.04800177738070488, -0.0009727513534016907, -0.3550400137901306, -3.0438122749328613, -0.26608845591545105, -0.08780159056186676, -0.0010474200826138258, -0.00031287543242797256, -0.0027371107134968042, -0.9255884885787964, -0.04277949780225754, -0.044742558151483536, -0.0502021498978138, -1.5520744323730469, -0.00047159992391243577, -0.9442888498306274, -0.0023732611443847418, -0.033828794956207275, -0.004532895982265472, -0.017287638038396835, -0.022933024913072586, -0.01919679529964924, -0.10788091272115707, -0.05611446872353554, -0.0034474246203899384, -0.003477005288004875, -0.0001787979417713359, -8.4638240878121e-06, -0.0012472239322960377, -0.09115439653396606, -0.48456910252571106, -0.009293864481151104, -0.003580946009606123, -0.002245644573122263, -0.08340790867805481, -0.2785581052303314, -0.6693001389503479, -0.0037783440202474594, -0.2029152661561966, -1.2752468585968018, -5.006777428206988e-06, -0.3268795609474182, -0.007475498132407665, -0.002342339837923646, -0.0025783886667340994, -0.02756761945784092, -0.0012882990995422006, -2.400178909301758, -0.15011531114578247, -0.033803440630435944, -0.0064244880340993404, -0.0018484188476577401, -0.0001586549769854173, -4.6491513785440475e-06, -0.0018845908343791962, -0.003318757051602006, -3.0397906812140718e-05, -3.576278118089249e-07, -0.007985570468008518, -0.015617329627275467, -0.0003946240758523345, -0.9342316389083862, -0.001544950413517654, -2.9801878554280847e-05, -0.0013394916895776987, -0.8024370670318604, -0.05086855590343475, -0.019674742594361305, -8.821448318485636e-06, 0.0, -0.002463046694174409, -1.7696319818496704, -0.012978839688003063, -0.004357367753982544, -0.0006517431465908885, -0.2594852149486542, -0.018975047394633293, -0.2983212471008301, -0.014813428744673729, -1.4126285314559937, -0.0010578995570540428, -1.6258835792541504, -6.83045873302035e-05, -8.344646857949556e-07, -0.01794261671602726, -0.41752561926841736, -0.00041869457345455885, -0.00010513706365600228, -1.2874520507466514e-05, -0.008248312398791313, -0.021791191771626472, -0.04352973401546478, -0.0005575056420639157, -0.01109207235276699, -0.0002580548170953989, -0.020082594826817513, -4.291525328881107e-06, -4.184158387943171e-05, -5.8412379075889476e-06, -0.0007512131123803556, -0.00011336160969221964, -0.00500865001231432, -8.49926145747304e-05, -2.3841855067985307e-07, -0.00011395759065635502, -0.0006214833119884133, -3.576278118089249e-07, -7.760223525110632e-05, -7.712543447269127e-05, -0.002794410800561309, -1.867836594581604, -0.0006282739923335612, -0.22802037000656128, -0.44877463579177856, -0.038719527423381805, -0.08584968000650406, -0.11180249601602554, -1.009561538696289, -0.07924485951662064, -0.06211012601852417, -0.00014041867689229548, -0.023797480389475822, -5.578839045483619e-05, -4.9232225137529895e-05, -0.000723576988093555, -1.6689286894688848e-06, -1.311301275563892e-06, -0.00010001159535022452, -0.08092421293258667, -0.01880297251045704, -0.011717541143298149, -0.21684956550598145, -1.847726889536716e-05, -0.23815642297267914, -0.00555459875613451, -0.0004379982128739357, -0.0001037067049765028, -0.003745803376659751, -5.340433563105762e-05, -0.00024256148026324809, -0.00026425207033753395, -0.024177588522434235, -0.03729427978396416, -0.0002712835557758808, -0.042021263390779495, -0.0038213341031223536, -0.0277276411652565, -0.0014923398848623037, -0.2042725831270218, -1.6689286894688848e-06, -8.77341881277971e-05, -5.304672595229931e-05, -1.597391747054644e-05, -8.654219709569588e-05, -0.0028350658249109983, -2.407998726994265e-05, -5.6265202147187665e-05, -0.0005174727994017303, -0.007507917936891317, -0.013575024902820587, -0.0006014683749526739, -0.02850976213812828, -0.0015185264637693763, -2.50339189733495e-06, -5.006777428206988e-06, -0.2148364931344986, -0.02511165291070938, -0.8047224879264832], "finish_reason": "stop"}], "metrics": {"energy": 857.3138594779972, "energy_per_token": 4.161717764456297, "time": 19.436607, "time_per_token": 0.09435246116504854}}
{"outputs": [{"text": "# Check if the DIRECTORY exists, otherwise create it\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize an empty list to store file paths\n    file_paths = []\n\n    # Split the input string into lines\n    lines = input_string.split('\\n')\n\n    # Iterate over lines\n    for line in lines:\n        # Skip empty lines\n        if not line:\n            continue\n\n        # Hash the line using SHA256\n        hashed_line = hashlib.sha256(line.encode('utf-8')).hexdigest()\n        # Take the first 10 characters of the hash\n        hash_prefix = hashed_line[:10]\n        # Generate a filename using the hash prefix and '.txt' extension\n        filename = f\"{hash_prefix}.txt\"\n        # Create a file path by joining the DIRECTORY and filename\n        file_path = os.path.join(DIRECTORY, filename)\n        # Write the line to the file\n        with open(file_path", "tokens": ["#", " Check", " if", " the", " DIRECT", "ORY", " exists", ",", " otherwise", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Iter", "ate", " over", " lines", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "#", " Skip", " empty", " lines", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "        ", "#", " Take", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "hash", "_", "prefix", " =", " has", "hed", "_", "line", "[:", "1", "0", "]", "\n", "        ", "#", " Generate", " a", " filename", " using", " the", " hash", " prefix", " and", " '", ".", "txt", "'", " extension", "\n", "        ", "filename", " =", " f", "\"", "{", "hash", "_", "prefix", "}", ".", "txt", "\"", "\n", "        ", "#", " Create", " a", " file", " path", " by", " joining", " the", " DIRECT", "ORY", " and", " filename", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "        ", "#", " Write", " the", " line", " to", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -1.0099897384643555, -0.0004681444843299687, -0.06518545001745224, -0.6650553345680237, -2.8159666061401367, -0.026150532066822052, -0.008352585136890411, -0.04354673996567726, -0.0010266992030665278, -0.07781945914030075, -0.0030384347774088383, -0.0007814691052772105, -1.6569954823353328e-05, -0.0006775943911634386, -4.339123915997334e-05, -0.13824349641799927, -0.00017724849749356508, -0.0005785936955362558, -2.3841855067985307e-07, 0.0, -0.0002544794406276196, -0.0017563169822096825, -0.0029043657705187798, -0.01537800021469593, -7.510157047363464e-06, -0.17593906819820404, -1.4305104514278355e-06, -4.768360213347478e-06, -0.00020990552729927003, -0.0002674698771443218, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00272260676138103, -0.0014028241857886314, -0.03743380680680275, -0.0007594323833473027, -0.4810165762901306, -1.516007661819458, -0.5744581818580627, -0.0086548225954175, -0.013780336827039719, -0.07493268698453903, -0.10256114602088928, -0.4262849986553192, -0.014219510369002819, -0.0566507987678051, -0.00012373158824630082, -0.05264098942279816, -0.0027242712676525116, -0.0059393346309661865, -0.0037123113870620728, -0.0018221217906102538, -0.0003369478799868375, -0.017801398411393166, -0.00016139635408762842, -0.013394607231020927, -0.9068487882614136, -0.047123659402132034, -0.04331468790769577, -0.1427948772907257, -0.15882544219493866, -0.07022330909967422, -0.663323163986206, -8.296622399939224e-05, -0.165831059217453, -0.0025966993998736143, -0.00541576836258173, -9.703165414975956e-05, -1.7046782886609435e-05, -6.210611172718927e-05, -0.13526394963264465, -0.7305586934089661, -0.00010418349120300263, -2.9801878554280847e-05, -5.364274329622276e-05, -0.0008624648326076567, -0.008739318698644638, -0.00012838016846217215, -0.01733134128153324, -0.6913445591926575, -0.00021026308240834624, -0.2999226748943329, -1.6573729515075684, -0.29507336020469666, -2.4318398573086597e-05, -0.001212814822793007, -0.01568222977221012, -0.0017779747722670436, -0.00047088501742109656, -0.00011872540198964998, -0.0001787979417713359, -0.030945617705583572, -0.12082719057798386, -1.1283507347106934, -0.021022707223892212, -0.0027141659520566463, -0.02513897232711315, -3.909988299710676e-05, -0.0007556205382570624, -0.15177951753139496, -0.0014669859083369374, -0.3321928381919861, -0.005873681511729956, -0.0005758534534834325, -0.0018672188743948936, -0.0011094611836597323, -0.03346605598926544, -0.0006945105269551277, -0.0019268295727670193, -0.49284815788269043, -0.04360232129693031, -0.0947389155626297, -0.05025509372353554, -0.03285727649927139, -6.007967749610543e-05, -0.008972090668976307, -7.83174327807501e-05, -5.125986263010418e-06, -0.12783829867839813, -4.911301948595792e-05, -0.8783009648323059, -0.08415864408016205, -0.3106485605239868, -0.25202104449272156, -0.001956217223778367, -0.0010371787939220667, -0.0001961992384167388, -6.437280717364047e-06, -0.0006326819420792162, -0.0014385362155735493, -2.884823152271565e-05, -9.536738616588991e-07, -0.0020303367637097836, -0.008236607536673546, -0.0003985564399044961, -0.049764662981033325, -0.7271044254302979, -0.006594324950128794, -0.0022578956559300423, -5.6980417866725475e-05, -0.0011611393420025706, -0.07980657368898392, -0.00842836033552885, -6.794906312279636e-06, 0.0, -0.0008868813747540116, -0.05304533988237381, -2.685462236404419, -0.12179365754127502, -1.0583860874176025, -0.20955418050289154, -0.00200571003369987, -0.012661663815379143, -0.0021114691626280546, -0.0008783058729022741, -0.01231718622148037, -0.038130003958940506, -0.0008848565630614758, -0.018301548436284065, -0.5819023847579956, -0.00030655929003842175, -1.3234517574310303, -0.010186705738306046, -0.3062460124492645, -0.0021402565762400627, -0.005143979098647833, -1.5497195136049413e-06, -2.145764938177308e-06, 0.0, -0.006510831415653229, -0.0008518642862327397, -0.00024375328212045133, -3.8980677345534787e-05, -0.000871159543748945, -0.4737595021724701, -0.004978640470653772, -2.393247127532959, -2.022731065750122, -0.3720828890800476, -1.1144064664840698, -0.07009128481149673, -0.4259037673473358, -0.10510057210922241, -0.6315966844558716, -0.4107530415058136, -0.005159634165465832, -0.0002232540718978271, -0.000102037942269817, -0.0025222653057426214, -0.0020930306054651737, -0.00016485285595990717, -0.14611761271953583, -0.0004468158003874123, -0.46468478441238403, -0.2840828001499176, -0.005027035251259804, -0.2593958377838135, -2.3603161025675945e-05, -3.814689989667386e-06, -0.003590567270293832, -1.5616295058862306e-05, -0.00017474555352237076, -3.015949550899677e-05, -0.0005449955351650715, -0.13161513209342957, -0.035217903554439545, -1.713197946548462, -0.9821496605873108, -0.2647656202316284, -0.011788702569901943, -1.0392248630523682, -0.17858415842056274, -0.15493088960647583, -0.030902158468961716, -5.507317473529838e-05, -0.05281548202037811, -0.2153243124485016, -0.01591257005929947, -9.393251093570143e-05, -0.0038474597968161106, -0.05775713548064232, -0.00016807096835691482, -9.63164638960734e-05, -0.005092506762593985, -3.4570634852570947e-06, -2.253030106658116e-05, -2.3841830625315197e-06, -0.00010680581908673048, -9.917721035890281e-05, -0.0003890234511345625, -1.7523612768854946e-05, -1.1920928244535389e-07, -5.0424259825376794e-05, -0.00024387246230617166, -2.8013790142722428e-05, -0.00018594920402392745, -0.9137043356895447, -0.038072627037763596, -1.3684180974960327, -0.004517943598330021, -2.6613082885742188, -0.0506976917386055, -0.01086663268506527, -0.0015598285244777799, -0.11677767336368561, -0.00042655906872823834, -0.00746177276596427, -5.0424259825376794e-05, -0.00017867876158561558, -0.00033396866638213396, -1.7881377516459906e-06, -1.1920922133867862e-06], "finish_reason": "length"}], "metrics": {"energy": 1107.049958841324, "energy_per_token": 4.324413901723922, "time": 24.228218, "time_per_token": 0.0946414765625}}
{"outputs": [{"text": "# Create a directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n\n    # Split the input string into lines and iterate over the lines\n    for line in input_string.splitlines():\n        if line.strip() != \"\":  # Skip empty lines\n            # Calculate the SHA256 hash of the line\n            h = hashlib.sha256(line.strip().encode())\n            # Extract the first 10 characters of the hash\n            filename = h.hexdigest()[:10]\n            # Construct the file path\n            filepath = os.path.join(DIRECTORY, filename + \".txt\")\n            # Save the hash to a file\n            with open(filepath, \"w\") as file:\n                file.write(h.hexdigest())\n            # Add the file path to the list of file paths\n            file_paths.append(filepath)\n\n    return file_paths", "tokens": ["#", " Create", " a", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", " and", " iterate", " over", " the", " lines", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "()", " ", "!", "=", " \"", "\":", "  ", "#", " Skip", " empty", " lines", "\n", "            ", "#", " Calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " line", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", "\n", "            ", "#", " Ext", "ract", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "filename", " =", " h", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "#", " Construct", " the", " file", " path", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", " +", " \"", ".", "txt", "\"", ")", "\n", "            ", "#", " Save", " the", " hash", " to", " a", " file", "\n", "            ", "with", " open", "(", "file", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "h", ".", "hex", "dig", "est", "())", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list", " of", " file", " paths", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -3.011061191558838, -0.7292623519897461, -0.24949418008327484, -0.03472787141799927, -0.49213746190071106, -0.0020599591080099344, -8.296622399939224e-05, -0.009324335493147373, -0.047162096947431564, -0.0013150862650945783, -0.25991201400756836, -0.0021034989040344954, -0.0008083889842964709, -2.3483953555114567e-05, -0.0006443570018745959, -7.629103492945433e-05, -0.15070843696594238, -0.00023529145983047783, -0.0006504327175207436, -5.960462772236497e-07, -2.3841855067985307e-07, -0.0002803409588523209, -0.00262880208902061, -0.003785588312894106, -0.010192133486270905, -1.168244216387393e-05, -0.3098016083240509, -3.2186455882765586e-06, -1.9073468138230965e-06, -0.00016199229867197573, -0.00020680672605521977, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0036607650108635426, -0.001887565478682518, -0.0352274551987648, -0.0008326877141371369, -1.43852698802948, -0.002641286002472043, -0.019347989931702614, -0.004263715818524361, -0.006093850824981928, -0.14153936505317688, -0.7545928955078125, -0.0003693613689392805, -0.3140422999858856, -1.5817762613296509, -0.1850285530090332, -0.09526121616363525, -0.09220834076404572, -0.17091894149780273, -0.04544120654463768, -0.7564990520477295, -2.3127243518829346, -0.11387700587511063, -3.256319522857666, -0.9759203195571899, -0.01985251158475876, -0.00014840454969089478, -0.27315592765808105, -0.04677879810333252, -0.0027032282669097185, -0.002022127853706479, -0.00015436411194968969, -1.9073468138230965e-06, -0.00042226933874189854, -0.04675354063510895, -0.22216947376728058, -0.014987953938543797, -0.0011191064259037375, -0.023854633793234825, -1.1229923963546753, -0.32710427045822144, -0.5753142237663269, -0.0046164365485310555, -1.0508482456207275, -0.5856176018714905, -5.960462772236497e-07, -2.50339189733495e-06, -0.2351771742105484, -0.0016019619069993496, -0.37262192368507385, -1.4662635294371285e-05, -1.196700930595398, -0.01067699771374464, -0.0013191340258345008, -0.00944066047668457, -0.007321313489228487, -0.2999683618545532, -1.6031588315963745, -0.192013680934906, -1.2736644744873047, -3.2543604902457446e-05, -0.025943446904420853, -0.00026174934464506805, -2.9802276912960224e-06, -0.02401757799088955, -0.06819566339254379, -0.060854487121105194, -0.0982310026884079, -0.13806864619255066, -0.00016389934171456844, -1.9660136699676514, -1.9334830045700073, -0.00023529145983047783, -1.6331539882230572e-05, -1.4305104514278355e-06, -0.03053523600101471, -0.0009016501135192811, -1.2755313036905136e-05, 0.0, -0.15554115176200867, -0.014583422802388668, -0.0010824303608387709, -0.8982495665550232, -0.004206025041639805, -4.60137271147687e-05, -0.0008338788175024092, -0.802340030670166, -1.038058876991272, -0.6988449096679688, -1.0188758373260498, -1.5113269090652466, -0.010737736709415913, -0.021541550755500793, -0.007141657639294863, -0.007527913432568312, -0.0047610728070139885, -0.0009697740315459669, -0.017834538593888283, -0.11219076812267303, -0.0008448368753306568, -0.034732475876808167, -0.7650101184844971, -0.00021145492792129517, -1.4648174047470093, -0.045674704015254974, -0.20719869434833527, -0.0006424508756026626, -0.0024462793953716755, -2.8371408916427754e-05, 0.0, -0.020955584943294525, -0.001487697591073811, -0.0012409137561917305, -0.0003295593778602779, -0.004112477879971266, -0.17967483401298523, -0.22955255210399628, -0.1721484661102295, -2.571145534515381, -0.03737225756049156, -0.1640295386314392, -0.02523510530591011, -0.3626824617385864, -0.0001394651480950415, -0.06147684156894684, -1.8514573574066162, -0.00146246247459203, -0.18408334255218506, -3.111314072157256e-05, -0.0005810956354252994, -1.3947389561508317e-05, -0.0035286799538880587, -0.00039033422945067286, -0.00575943011790514, -0.001073142047971487, -8.344646857949556e-07, -0.0006828360492363572, -0.3815075159072876, -0.07927624881267548, -0.25165000557899475, -0.0002177716523874551, -0.00027736154152080417, -1.168244216387393e-05, -5.98412734689191e-05, -0.0006076634745113552, -0.24056006968021393, -0.30880048871040344, -1.1289026737213135, -0.0037962766364216805, -0.07250078022480011, -0.09230323880910873, -1.1480801105499268, -0.02062329649925232, -0.06332234293222427, -0.00031442465842701495, -0.05743888020515442, -0.00012611546844709665, -5.6265202147187665e-05, -0.0011688789818435907, -2.861018856492592e-06, -0.00018261195509694517, -0.10785822570323944, -0.2728024423122406, -0.022316282615065575, -0.2836952805519104, -0.00010239553375868127, -1.5623481273651123, -0.03088505193591118, -0.0006785474251955748, -0.00013064485392533243, -0.011548690497875214, -0.00029738296871073544, -0.000506511190906167, -0.00036745471879839897, -0.3806198537349701, -0.0009196343016810715, -0.000578474544454366, -1.9192511899746023e-05, 0.0, -0.04048555716872215, -0.0034646503627300262, -0.20586931705474854, -0.18234564363956451, -1.021026849746704, -0.03884429484605789, -0.00568831292912364, -0.011491536162793636, -0.00046921687317080796, -0.011066960170865059, -0.050628453493118286, -0.7114754319190979, -0.29059314727783203, -0.01006102655082941, -0.017780903726816177, -0.0001971527235582471, -0.0007694382802583277, -2.4676019165781327e-05, -4.9470632802695036e-05, -0.00030250742565840483, -8.141662692651153e-05, -8.427741704508662e-05, -0.006406484171748161, -2.1815061700181104e-05, -0.0005650115781463683, -0.0003510097449179739, -0.029436549171805382, -0.0008875959902070463, -0.12855547666549683, -0.0020919598173350096, -2.682172998902388e-05, -2.145764938177308e-06, -2.499063491821289, -6.079655122448457e-06, -1.1920922133867862e-06, -3.4570634852570947e-06, -1.3112935448589269e-05, -0.1762906312942505], "finish_reason": "stop"}], "metrics": {"energy": 1056.008276500701, "energy_per_token": 4.207204288847414, "time": 24.006136, "time_per_token": 0.09564197609561753}}
{"outputs": [{"text": "# Create the directory if it doesn't exist\n    os.makedirs(DIRECTORY, exist_ok=True)\n\n    # Split input string into lines and process non-empty lines\n    file_paths = []\n    for line in input_string.splitlines():\n        if line.strip():\n            hash_object = hashlib.sha256(line.strip().encode())\n            hash_str = hash_object.hexdigest()[:10]  # First 10 characters of the hash\n            file_path = os.path.join(DIRECTORY, f\"{hash_str}.txt\")\n            file_paths.append(file_path)\n\n            # Save the hash to a file\n            with open(file_path, \"w\") as file:\n                file.write(hash_str)\n\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Split", " input", " string", " into", " lines", " and", " process", " non", "-", "empty", " lines", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "():", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", "\n", "            ", "hash", "_", "str", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "  ", "#", " First", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "hash", "_", "str", "}", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Save", " the", " hash", " to", " a", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "str", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -0.4572495222091675, -0.026567475870251656, -0.005228179972618818, -0.2439398318529129, -0.0010846928926184773, -3.9219088648678735e-05, -0.0044555203057825565, -0.02317090332508087, -0.001111485529690981, -1.3312182426452637, -0.00010585224663373083, -0.0006448334897868335, -4.768370445162873e-07, -6.079655122448457e-06, -0.00012110930401831865, -0.002895926358178258, -1.1920922133867862e-06, 0.0, -0.0005628670332953334, -0.00020859450160060078, -1.1920922133867862e-06, -2.264974000354414e-06, -0.003782975720241666, -0.00022623363474849612, -0.00017891713650897145, -0.006477668881416321, -0.04136723279953003, -0.0003332536434754729, -0.40916961431503296, -1.1658116579055786, -2.6884138584136963, -0.5535995364189148, -0.10030762851238251, -0.04739166796207428, -0.8902314305305481, -0.9232699871063232, -1.1763215065002441, -0.0005042473785579205, -0.00034517052699811757, -0.01018068753182888, -0.014439730904996395, -0.0001802282058633864, -0.7143673896789551, -0.0009224927052855492, -0.008071187883615494, -0.0024365282151848078, -0.036095380783081055, -0.019836267456412315, -0.021026208996772766, -0.16539831459522247, -0.055823199450969696, -0.0017107388703152537, -0.0029723532497882843, -0.00010418349120300263, -3.099436753473128e-06, -0.0004122599493712187, -0.040019288659095764, -0.1982489824295044, -0.009393659420311451, -0.0019378946162760258, -0.0016559947980567813, -0.07624810934066772, -0.1484595388174057, -0.3831981420516968, -0.002480051713064313, -0.14114068448543549, -0.7908096313476562, -0.0008947421447373927, -1.7746360301971436, -0.04820900410413742, -0.44678351283073425, -0.00042060110718011856, -0.0002884448622353375, -3.5523738915799186e-05, -3.576272320060525e-06, -0.00331911351531744, -0.0022163845133036375, -1.8358061424805783e-05, -1.1920928244535389e-07, -0.016345882788300514, -0.004868913441896439, -0.00015472168161068112, -0.753745973110199, -0.0012026942567899823, -1.3828182090946939e-05, -0.0005417786305770278, -0.5356029272079468, -0.02393459714949131, -0.004899401217699051, -0.8679407835006714, -0.054500821977853775, -2.428380250930786, -0.0011947167804464698, -0.01596911996603012, -0.00010299152199877426, -4.625213477993384e-05, -1.585470999998506e-05, -0.01408916525542736, -8.153582894010469e-05, -7.152555099310121e-07, -0.007077977526932955, -1.105125069618225, -0.0046947491355240345, -0.002784187439829111, -0.0014607959892600775, -1.5633175373077393, -1.8000440832111053e-05, -1.5791667699813843, -0.0026742194313555956, -0.0015751824248582125, -0.0002474478678777814, -0.05357280746102333, -0.0807470753788948, -0.12584355473518372, -0.010474114678800106, -0.024383528158068657, -0.07775979489088058, -0.4553698003292084, -0.019930224865674973, -0.3092491924762726, -0.00034350217902101576, -0.1635633260011673, -1.5020257706055418e-05, -6.544376083184034e-05, -3.099436753473128e-06, -0.001128275180235505, -0.0003134713042527437, -0.004737818613648415, -0.0005604841862805188, -1.1920928244535389e-07, -0.0002914242504630238, -0.3014332950115204, -0.04604681581258774, -9.619726915843785e-05, -0.00024077377747744322, -2.145764938177308e-06, -3.4570634852570947e-06, -0.002723438898101449, -2.3007127310847864e-05, -0.00014590153296012431, -1.645074735279195e-05, -0.00030870441696606576, -0.009942177683115005, -0.13078519701957703, -0.8673679828643799, -0.0002356490003876388, -0.005549145396798849, -7.462222856702283e-05, -7.271502545336261e-05, -6.544376083184034e-05, -0.0035892606247216463, -1.9073468138230965e-06, -2.0265558760002023e-06, -0.00015567521040793508, -0.0100230248644948, -0.8966547250747681, -0.11114104092121124, -0.2968592345714569, -0.6913397312164307, -0.5038630366325378, -0.0837450847029686, -0.07329818606376648, -0.8382934927940369, -0.019473442807793617, -0.0723610669374466, -0.00012778419477399439, -0.00972769409418106, -0.00015269544383045286, -6.294052582234144e-05, -0.0010084786918014288, -5.960462772236497e-07, -2.5629668016335927e-05, -0.00011216964776394889, -0.21703505516052246, -0.030870141461491585, -0.010270601138472557, -0.24329830706119537, -1.3828182090946939e-05, -0.18259534239768982, -0.0039550429210066795, -0.000205018965061754, -0.00013672371278516948, -0.002024388173595071, -0.00011276562872808427, -0.0001842805795604363, -0.000398198957554996, -0.11528181284666061, -4.0531076592742465e-06, -0.0022116266191005707, -0.05768703296780586, -0.0027448381297290325, -0.028249045833945274, -0.0020732830744236708, -0.02332545816898346, -0.0012356749502941966, -2.145764938177308e-06, -7.152555099310121e-07, -1.8166332244873047, -1.0251946150674485e-05, -1.1920922133867862e-06, -4.172316494077677e-06, -1.3232143828645349e-05, -0.10937099903821945], "finish_reason": "stop"}], "metrics": {"energy": 861.3897497520443, "energy_per_token": 4.18150363957303, "time": 19.008451, "time_per_token": 0.09227403398058252}}
{"outputs": [{"text": "# Check if the directory exists and create it if necessary\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize a list to store file paths\n    file_paths = []\n\n    # Split the input string into lines\n    lines = input_string.split('\\n')\n\n    # Loop through each line\n    for line in lines:\n        # Remove leading and trailing whitespace from each line\n        line = line.strip()\n\n        # Ignore empty lines\n        if not line:\n            continue\n\n        # Hash the line using SHA256\n        hashed_line = hashlib.sha256(line.encode('utf-8')).hexdigest()\n\n        # Extract the first 10 characters of the hash\n        file_hash = hashed_line[:10]\n\n        # Generate the file path using the hash and the constant DIRECTORY\n        file_path = os.path.join(DIRECTORY, f'{file_hash}.txt')\n\n        # Write the hashed line to the file\n        with", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " create", " it", " if", " necessary", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " a", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Loop", " through", " each", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "#", " Remove", " leading", " and", " trailing", " whites", "pace", " from", " each", " line", "\n", "        ", "line", " =", " line", ".", "strip", "()", "\n", "\n", "        ", "#", " Ign", "ore", " empty", " lines", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Ext", "ract", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "file", "_", "hash", " =", " has", "hed", "_", "line", "[:", "1", "0", "]", "\n", "\n", "        ", "#", " Generate", " the", " file", " path", " using", " the", " hash", " and", " the", " constant", " DIRECT", "ORY", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "'{", "file", "_", "hash", "}", ".", "txt", "')", "\n", "\n", "        ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "        ", "with"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -0.6362276077270508, -0.10271100699901581, -1.4972641468048096, -0.04084530100226402, -0.0503193698823452, -0.0024710141588002443, -1.0111018419265747, -0.03365464508533478, -0.0017081208061426878, -0.0827772244811058, -0.0022299441043287516, -0.0006140968762338161, -9.775113539944869e-06, -0.0005847889697179198, -3.218599158572033e-05, -0.13437868654727936, -0.00028355870745144784, -0.001036107074469328, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0002488780301064253, -0.0014225849881768227, -0.0027480479329824448, -0.01213147770613432, -1.0251946150674485e-05, -0.14014342427253723, -5.8412379075889476e-06, -7.748573807475623e-06, -0.00016151554882526398, -0.0002317160106031224, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0037908137310296297, -0.0028267446905374527, -0.03877720981836319, -0.0008779485360719264, -0.4404430389404297, -1.4698835611343384, -1.4022648334503174, -0.07512003183364868, -0.060462821274995804, -0.10601137578487396, -0.6584571599960327, -0.01703757420182228, -0.12847359478473663, -0.00017891713650897145, -0.036284852772951126, -0.001077905297279358, -0.006016121711581945, -0.0032660020515322685, -0.0021519139409065247, -0.00041929035796783864, -0.017626192420721054, -0.00018106251081917435, -0.019417090341448784, -1.1098709106445312, -0.07436015456914902, -0.055140119045972824, -0.06527981907129288, -0.12924574315547943, -0.06112153083086014, -0.49748343229293823, -8.844937838148326e-05, -0.11935726553201675, -0.001957882894203067, -0.008081711828708649, -9.083335316972807e-05, -2.7418097943154862e-06, -6.97350042173639e-05, -0.16599313914775848, -0.6341333389282227, -8.010543388081715e-05, -2.932505594799295e-05, -5.352353764465079e-05, -0.0008790204883553088, -0.006188634783029556, -0.00010096516780322418, -0.011063541285693645, -2.118767023086548, -0.20779019594192505, -0.22780928015708923, -0.14436553418636322, -0.27004384994506836, -2.2411095415009186e-05, -0.0010386077919974923, -0.009492618031799793, -0.001423537265509367, -0.00029869386344216764, -0.0001081169830285944, -9.440929716220126e-05, -0.02581740915775299, -0.1481633335351944, -1.69154953956604, -0.37785813212394714, -0.05340489000082016, -0.0001578206429257989, -0.08407086133956909, -0.3557945489883423, -1.3012690544128418, -1.6069570779800415, -0.001165664056316018, -0.021370267495512962, -0.00017891713650897145, -0.08366253226995468, -0.023882102221250534, -0.0004761277523357421, -7.033323527139146e-06, -0.0008420973899774253, -0.000974537746515125, -0.00033504117163829505, -0.051186077296733856, -0.00021062063751742244, -0.005478487350046635, -1.357312798500061, -0.00015436411194968969, -0.017486566677689552, -0.0023641036823391914, -0.029602637514472008, -2.2411095415009186e-05, -0.00032205163734033704, -0.2687838077545166, -0.0006945105269551277, -0.0031818735878914595, -0.0026972838677465916, -0.000259723310591653, -0.0013244913425296545, -0.0005050813779234886, -0.002213291823863983, -0.0006974886637181044, -0.0009688212885521352, -0.5615401268005371, -0.05149443820118904, -0.16029630601406097, -0.04355016350746155, -0.04180235043168068, -4.434487345861271e-05, -0.013726366683840752, -8.5588610090781e-05, -8.702239938429557e-06, -0.14173594117164612, -5.173549288883805e-05, -0.9377878308296204, -0.04813186824321747, -0.2803524434566498, -0.24267366528511047, -0.002058055717498064, -0.0009844223968684673, -0.0002917817619163543, -7.510157047363464e-06, -0.000494715350214392, -0.001335205975919962, -4.2199197196168825e-05, -1.7881377516459906e-06, -0.0019515770254656672, -0.004649423528462648, -0.0003228858404327184, -0.0041514174081385136, -0.519960880279541, -0.0045236400328576565, -0.0012698451755568385, -4.124556289752945e-05, -0.0003980797773692757, -0.06032085791230202, -0.007282615639269352, -4.887569048150908e-06, -1.1920928244535389e-07, -0.0005863377591595054, -0.04168492555618286, -0.03326336294412613, -0.0002464944263920188, -0.00027092601521871984, -1.2584108114242554, -0.003737489925697446, -0.016333451494574547, -0.007719329092651606, -0.01593063771724701, -0.0029290891252458096, -0.0011937642702832818, -0.009308509528636932, -0.067921482026577, -0.0003054867556784302, -0.03694520518183708, -0.8701333403587341, -2.6225699912174605e-05, -2.141072988510132, -0.0020092790946364403, -1.1898362636566162, -0.011366256512701511, -0.0047768522053956985, -5.364403477869928e-06, -2.3841830625315197e-06, -4.768370445162873e-07, -0.011896023526787758, -0.0010989824077114463, -0.00034505134681239724, -5.531158240046352e-05, -0.003017992712557316, -0.00499714445322752, -0.00021979777375236154, -0.0005789510905742645, -1.9822224378585815, -0.18474793434143066, -0.22035609185695648, -0.30056703090667725, -2.1488037109375, -0.10088899731636047, -0.9294992685317993, -0.8543453812599182, -0.5418281555175781, -3.6470963954925537, -0.21034039556980133, -0.0001995364436879754, -0.022817326709628105, -0.00016342257731594145, -0.021751882508397102, -0.0032933305483311415, -0.007244152948260307, -0.00038890427094884217, -0.22278471291065216, -1.0490362910786644e-05, -3.397406908334233e-05, -7.152531907195225e-06, -0.0007969540893100202, -0.0007329876534640789, -0.0034222390968352556, -9.703165414975956e-05, -9.536738616588991e-07, -0.00038020533975213766, -0.3783140480518341, -1.5557361841201782, -0.0003449321957305074, -1.311301275563892e-06, -2.7418097943154862e-06, -0.0020240312442183495, -8.880697714630514e-05, -0.00027652730932459235, -6.747018051100895e-05, -0.00031549722189083695, -0.03218267858028412, -0.00026341783814132214, -0.0014313939027488232, -1.3189576864242554, -0.005172442179173231, -0.23537014424800873, -0.0005648924270644784, -0.031592290848493576, -0.00752826826646924, -0.014999227598309517, -0.008084077388048172, -0.07678534090518951, -0.00015639036428183317, -0.009265046566724777], "finish_reason": "length"}], "metrics": {"energy": 1034.1900387630455, "energy_per_token": 4.039804838918147, "time": 23.801535, "time_per_token": 0.09297474609375}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    lines = input_string.split(\"\\n\")\n    file_paths = []\n\n    for line in lines:\n        if line:  # Check if the line is not empty\n            # Hash the non-empty line using SHA256\n            sha = hashlib.sha256()\n            sha.update(line.encode())\n            hash_str = sha.hexdigest()\n\n            # Create the file path based on the hash\n            filename = hash_str[:10] + \".txt\"\n            file_path = os.path.join(DIRECTORY, filename)\n\n            # Write the hashed line to the file\n            with open(file_path, \"w\") as file:\n                file.write(hash_str)\n\n            file_paths.append(file_path)\n\n    return file_paths", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ":", "  ", "#", " Check", " if", " the", " line", " is", " not", " empty", "\n", "            ", "#", " Hash", " the", " non", "-", "empty", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "sha", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "sha", ".", "update", "(", "line", ".", "encode", "())", "\n", "            ", "hash", "_", "str", " =", " sh", "a", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Create", " the", " file", " path", " based", " on", " the", " hash", "\n", "            ", "filename", " =", " hash", "_", "str", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "\n", "            ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "str", ")", "\n", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "#"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -0.6362276077270508, -0.10271100699901581, -1.227351427078247, -0.0016601602546870708, -0.034316159784793854, -0.007198114413768053, -0.000972155889030546, -1.0371154530730564e-05, -0.0009026029147207737, -4.494089080253616e-05, -0.20989857614040375, -0.0002138386043952778, -0.0007968349382281303, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0003053675754927099, -0.0010490872664377093, -0.00813799723982811, -0.6643391251564026, -5.722029527532868e-06, -0.15342193841934204, -8.106198947643861e-06, -7.867782187531702e-06, -0.00022825974156148732, -0.0005722792120650411, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.003118534805253148, -0.0612369179725647, -0.03757492080330849, -0.0012543675256893039, -2.927617073059082, -0.025064336135983467, -0.03956208378076553, -0.0001411338453181088, -2.0503786799963564e-05, -0.0002972637885250151, -0.48825451731681824, -1.432887077331543, -0.0018762619001790881, -0.0004985281848348677, -0.0001408954558428377, -3.313963316031732e-05, -0.0001472126314183697, -0.07339545339345932, -0.2899680435657501, -0.36030662059783936, -0.004691070877015591, -0.022516543045639992, -0.003043545177206397, -0.006233298219740391, -0.016285717487335205, -0.19487684965133667, -0.00012766500003635883, -0.12660522758960724, -0.024142097681760788, -0.001785947591997683, -0.001392824575304985, -0.00016080040950328112, -0.0008023141999728978, -0.004033288452774286, -0.25526806712150574, -0.2646060585975647, -1.4695849418640137, -1.149825096130371, -2.407998726994265e-05, -2.831623077392578, -0.06004338338971138, -0.22069180011749268, -0.0031747438479214907, -0.0015545914648100734, -0.19727285206317902, -0.0023347281385213137, -0.03573346138000488, -0.0039024401921778917, -0.7750307321548462, -0.6795143485069275, -0.04649355635046959, -2.9336929321289062, -0.00041869457345455885, -0.00014149141497910023, -0.006280684377998114, -0.35348114371299744, -0.024757366627454758, -9.321732068201527e-05, -0.010477299802005291, -8.892617915989831e-05, -6.6756979322235566e-06, -0.14852212369441986, -0.0001646144810365513, -2.449070930480957, -2.2281858921051025, -0.00018904806347563863, -2.1576648578047752e-05, -2.50339189733495e-06, -0.011788349598646164, -0.003928207792341709, -5.94836674281396e-05, -1.7881377516459906e-06, -1.0447206497192383, -0.0022335124667733908, -0.0008398343343287706, -0.029807114973664284, -0.0003277718205936253, -4.887569048150908e-06, -0.0004720765573438257, -0.01484937034547329, -0.0012634160229936242, -0.06276226788759232, -0.7311537265777588, -0.005514291115105152, -0.08825375139713287, -0.5322151780128479, -0.028189245611429214, -2.0248401165008545, -0.00030286493711173534, -0.00216535571962595, 0.0, -1.2755313036905136e-05, -0.013374963775277138, -1.490105023549404e-05, -1.1920928244535389e-07, -0.0030868046451359987, -0.12598051130771637, -0.18295280635356903, -0.00032276666024699807, -0.03627646341919899, -1.2493754625320435, -0.3015955686569214, -0.493216872215271, -0.4873976707458496, -2.3965904712677, -0.00025722055579535663, -0.016573842614889145, -0.5719383358955383, -0.22986501455307007, -0.00013469743134919554, -1.0147831439971924, -0.007744643371552229, -0.20140163600444794, -0.0003209791029803455, -2.145764938177308e-06, -0.009937101975083351, -0.0035476861521601677, -0.0006317288498394191, -0.0034836577251553535, -0.2514868676662445, -0.13889774680137634, -0.0002512616047170013, -0.00011944057769142091, -1.1920858014491387e-05, -0.11203230172395706, -0.004190593026578426, -0.008943499065935612, -0.033711932599544525, -0.0018217648612335324, -0.00012718822108581662, -0.009665358811616898, -1.9073468138230965e-06, -3.111314072157256e-05, -4.6491513785440475e-06, -0.0006554362480528653, -8.868777513271198e-05, -0.002666966989636421, -0.00038068200228735805, -3.576278118089249e-07, -7.843663479434326e-05, -0.00010334911348763853, -3.683499380713329e-05, -0.0003334919747430831, -0.29884469509124756, -0.0001494772732257843, -0.1180216372013092, -1.2157580852508545, -0.003012406872585416, -1.604985237121582, -0.016037045046687126, -0.4539864957332611, -0.008001535199582577, -0.020828450098633766, -0.005219404585659504, -0.018015678972005844, -7.629103492945433e-05, -0.017056677490472794, -4.6967357775429264e-05, -4.708655978902243e-05, -0.00038354191929101944, -1.4305104514278355e-06, -5.960462772236497e-07, -7.10462118149735e-05, -0.05192245543003082, -0.03940268233418465, -0.014735200442373753, -0.18175658583641052, -1.7165990357170813e-05, -0.2523799240589142, -0.004216471221297979, -0.0003094194398727268, -0.0001012035645544529, -0.0027164246421307325, -8.427741704508662e-05, -0.00031573555315844715, -0.0005470209871418774, -0.2131885439157486, -2.932505594799295e-05, -3.9934315282152966e-05, -0.1111983209848404, -0.0007537146448157728, -0.014700312167406082, -0.0010544460965320468, -0.273840069770813, -4.6491513785440475e-06, -8.225102646974847e-05, -2.8609820219571702e-05, -1.6212332411669195e-05, -5.185469490243122e-05, -0.003739390056580305, -1.3708974620385561e-05, -4.768370445162873e-07, -0.0003713871701620519, -0.012006042525172234, -0.007546133827418089, -0.0010400369064882398, -0.015460287220776081, -0.0009018882992677391, -2.622600959512056e-06, -1.9073468138230965e-06, -0.21374329924583435, -0.01921667531132698, -1.2544755935668945], "finish_reason": "stop"}], "metrics": {"energy": 962.5532203617091, "energy_per_token": 4.113475300691064, "time": 21.292166, "time_per_token": 0.0909921623931624}}
{"outputs": [{"text": "# Create directory if it doesn't exist\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    # Split input_string into lines and filter out empty lines\n    lines = [line.strip() for line in input_string.splitlines() if line.strip()]\n\n    # Compute hashes for non-empty lines\n    hashes = [hashlib.sha256(line.encode()).hexdigest()[:10] for line in lines]\n\n    # Create file paths for hashes\n    file_paths = [os.path.join(DIRECTORY, hash + \".txt\") for hash in hashes]\n\n    # Save hashes to files\n    for file_path in file_paths:\n        with open(file_path, 'w') as file:\n            file.write(os.path.basename(file_path).replace(\".txt\", \"\"))\n\n    return file_paths", "tokens": ["#", " Create", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " input", "_", "string", " into", " lines", " and", " filter", " out", " empty", " lines", "\n", "    ", "lines", " =", " [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "lines", "()", " if", " line", ".", "strip", "()", "]", "\n", "\n", "    ", "#", " Compute", " has", "hes", " for", " non", "-", "empty", " lines", "\n", "    ", "has", "hes", " =", " [", "hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", " for", " line", " in", " lines", "]", "\n", "\n", "    ", "#", " Create", " file", " paths", " for", " has", "hes", "\n", "    ", "file", "_", "paths", " =", " [", "os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", " +", " \"", ".", "txt", "\"", ")", " for", " hash", " in", " has", "hes", "]", "\n", "\n", "    ", "#", " Save", " has", "hes", " to", " files", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", ".", "replace", "(", "\"", ".", "txt", "\"", ",", " \"", "\"", "))", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -1.692305088043213, -0.04609975218772888, -0.12838679552078247, -0.3138379752635956, -0.0011639971053227782, -6.460934673668817e-05, -0.0027673065196722746, -0.016073176637291908, -0.0009483369067311287, -0.25258883833885193, -0.0014941253466531634, -0.000512111175339669, -5.245195097813848e-06, -0.00040368037298321724, -2.932505594799295e-05, -2.6118710041046143, -4.9470632802695036e-05, -0.0009505997295491397, -0.0008995062671601772, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00028951745480298996, -0.005258894059807062, -0.004252676852047443, -0.014453712850809097, -1.3351351299206726e-05, -0.5390356779098511, -1.4305104514278355e-06, -0.0004489606071729213, -0.0003698380314745009, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00047910655848681927, -0.0008568667690269649, -0.04526245966553688, -0.0007179781678132713, -0.4950075149536133, -1.3534959554672241, -0.6898511648178101, -1.5979735851287842, -0.0025185791309922934, -0.08692234009504318, -0.11354154348373413, -0.7723929286003113, -3.283511161804199, -0.11425308883190155, -0.02928629145026207, -0.012864338234066963, -0.003997194115072489, -0.00011824862303910777, -0.18098098039627075, -0.009568306617438793, -0.6828503012657166, -0.04349629580974579, -1.9504849910736084, -0.027439001947641373, -0.0021842687856405973, -0.0017402517842128873, -2.0265373677830212e-05, -1.3112935448589269e-05, -0.0016692051431164145, -9.917721035890281e-05, -2.264974000354414e-06, -0.00027640812913887203, -0.140010267496109, -0.9290812611579895, -0.005075901746749878, -0.006345836911350489, -0.0034943493083119392, -0.03010941669344902, -0.000646501372102648, -7.73638384998776e-05, -0.1497456133365631, -0.0038968592416495085, -0.036572907119989395, -0.0001538873475510627, -0.40983790159225464, -3.420545816421509, -1.5826568603515625, -0.001141492510214448, -0.8771846294403076, -0.9412632584571838, -0.0008768765837885439, -8.475421054754406e-05, -0.0008068405441008508, -0.5998523831367493, -0.00016056202002801, -0.3149304687976837, -0.00066985102603212, -0.010003787465393543, -0.1009979397058487, -0.026186764240264893, -0.0003897384158335626, -5.722029527532868e-06, -0.0006479309522546828, -0.0018712644232437015, -1.883488948806189e-05, 0.0, -0.0012709167785942554, -0.009930846281349659, -0.0025963427033275366, -0.012518754228949547, -0.6194571852684021, -0.0293483417481184, -0.03735985606908798, -6.318072337307967e-06, -3.576278118089249e-07, -0.007346164435148239, -1.063681960105896, -0.006431239657104015, -0.002405846491456032, -0.0014922209084033966, -0.05187469348311424, -5.9126061387360096e-05, -7.271740287251305e-06, -0.0003343261778354645, -0.005562541540712118, -0.005527806468307972, -0.007160476874560118, -0.00013398226292338222, -0.041173458099365234, -0.8073745369911194, -0.4261831045150757, -0.21299386024475098, -0.9740315079689026, -1.2536098957061768, -0.006322974804788828, -0.45853230357170105, -0.00013290952483657748, -0.021446112543344498, -0.0007798014557920396, -0.006067547015845776, -0.0002548369811847806, -0.014511285349726677, -0.3573455810546875, -6.556489552167477e-06, -0.0002351722796447575, -8.702239938429557e-06, -0.0007776573766022921, -0.0007964776013977826, -0.006778697017580271, -4.875540980719961e-05, -2.3841855067985307e-07, -0.00043418517452664673, -1.1453373432159424, -1.5429325103759766, -0.8735476732254028, -0.0001734344696160406, -0.00018344627460464835, -1.4066597032069694e-05, -0.000163541772053577, -0.00025018901214934886, -3.290122185717337e-05, -0.00035398892941884696, -8.237022848334163e-05, 0.0, -0.0007643162389285862, -0.00013720047718379647, -0.0024252308066934347, -0.00024482590379193425, -0.006727190222591162, -0.4384376108646393, -0.037070419639348984, -0.0003079893649555743, -0.03356369957327843, -0.04094085469841957, -0.030463429167866707, -0.0001230164198204875, -0.01588241569697857, -0.24806669354438782, -0.03340945020318031, -0.0014918637461960316, -1.605167269706726, -0.0004323977918829769, 0.0, -1.1920928244535389e-07, -0.00020382710499688983, -8.225102646974847e-05, -0.0007084482349455357, -0.024735968559980392, -0.00015233787416946143, -7.152301259338856e-05, -0.0007194076315499842, -5.245195097813848e-06, -2.3841855067985307e-07, -0.00016890530241653323, -2.7912516593933105, -0.025493470951914787, -0.037784893065690994, -0.0005806190893054008, -0.4678717851638794, -0.008240627124905586, -0.0013036570744588971, -0.0006647284608334303, -0.020206669345498085, -3.58813522325363e-05, -0.0006864098832011223, -0.052013784646987915, -0.5447564125061035, -3.9219088648678735e-05, -3.4450891689630225e-05, -1.490105023549404e-05, -0.1127883791923523, -8.344646857949556e-07, -1.3828182090946939e-05, -0.0007347744540311396, -0.0002671123365871608, -5.245195097813848e-06, -0.5849618911743164, -0.8539648056030273, -1.1398570537567139, -0.5250253677368164, -0.0007909983396530151, -0.001347468001767993, -0.00028046013903804123, -5.864924969500862e-05, -0.000125281119835563, -0.025304382666945457, -0.009128501638770103, -0.040096137672662735, -0.006098590325564146, -0.02010093815624714, -0.0009198724874295294, -0.12559451162815094, -0.00225444626994431, -4.768360213347478e-06, -3.2186455882765586e-06, -0.210793137550354, -0.017290333285927773, -0.8494023680686951], "finish_reason": "stop"}], "metrics": {"energy": 923.2881612224581, "energy_per_token": 3.9796903500968024, "time": 21.070307, "time_per_token": 0.09082028879310344}}
{"outputs": [{"text": "if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n    lines = input_string.splitlines()\n    for line in lines:\n        if not line:\n            continue\n        hash_object = hashlib.sha256(line.encode())\n        file_hash = hash_object.hexdigest()[:10]\n        file_path = os.path.join(DIRECTORY, f\"{file_hash}.txt\")\n        with open(file_path, \"w\") as file:\n            file.write(file_hash)\n        file_paths.append(file_path)\n    return file_paths", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "        ", "file", "_", "hash", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "file", "_", "hash", "}", ".", "txt", "\"", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "file", "_", "hash", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.142059803009033, -0.06515629589557648, -0.03001432865858078, -2.109982233378105e-05, -0.0022184066474437714, -7.891343557275832e-05, -0.1306229680776596, -0.00029774048016406596, -0.0009198724874295294, -1.4305104514278355e-06, -3.576278118089249e-07, -0.0009273757459595799, -0.03280802071094513, -0.006971084978431463, -0.03273776173591614, -2.1219027985353023e-05, -0.35322484374046326, -6.556489552167477e-06, -7.510157047363464e-06, -0.00024339574156329036, -0.00037674958002753556, -2.3841855067985307e-07, 0.0, -0.010317206382751465, -0.01973213255405426, -0.25799861550331116, -0.0008866431307978928, -0.7043413519859314, -0.0046666283160448074, -0.03556114062666893, -0.006625352427363396, -0.011273023672401905, -0.009647649712860584, -0.2803438901901245, -1.7719929218292236, -0.012817969545722008, -0.05448377877473831, -8.368142152903602e-05, -5.602820692729438e-06, -0.0003165697562508285, -0.32199347019195557, -1.157682180404663, -0.0173103678971529, -0.03493475541472435, -0.5218842625617981, -0.06656873226165771, -0.03458232432603836, -0.0029592791106551886, -0.0016226709121838212, -0.0008306628442369401, -0.0014003242831677198, -0.002841128269210458, -0.10813537240028381, -1.1305409669876099, -0.005205173976719379, -0.3485514223575592, -0.1212969720363617, -0.000871278636623174, -0.05870218575000763, -0.07875511795282364, -0.3675081729888916, -0.9654003977775574, -0.07714352011680603, -0.46335330605506897, -0.00044860312482342124, -0.0001433984871255234, -1.0371154530730564e-05, -3.6954811548639555e-06, -0.004285675473511219, -0.003490429138764739, -1.9788545614574105e-05, -4.768370445162873e-07, -0.017511049285531044, -0.011906037107110023, -0.000589792791288346, -0.10733646899461746, -0.4817027747631073, -0.006479327101260424, -0.002271335804834962, -2.929453134536743, -0.015104209072887897, -1.7062482833862305, -0.004105592146515846, -0.014745889231562614, -0.00018892886873800308, -1.2993727978027891e-05, -2.253030106658116e-05, -0.024742713198065758, -7.73638384998776e-05, -2.3841855067985307e-07, -0.028157256543636322, -0.18014952540397644, -0.003834872040897608, -0.002576724160462618, -0.000699156429618597, -0.1552899032831192, -0.011382993310689926, -0.19848233461380005, -0.011693623848259449, -0.3057198226451874, -0.000444551813416183, -0.257581502199173, -1.3947389561508317e-05, -0.00012170527770649642, -1.0847986231965479e-05, -0.0007738456479273736, -0.0006135011790320277, -0.007778591942042112, -0.00015579440514557064, -1.1920928244535389e-07, -0.00033825874561443925, -0.5658239722251892, -0.11898299306631088, -0.00011157367407577112, -0.00021860594279132783, -1.0728830375228426e-06, -8.583032467868179e-06, -0.002315342193469405, -2.992108420585282e-05, -0.0003152588615193963, -2.95634672511369e-05, -0.00030524839530698955, -0.0005978942499496043, -0.03344980254769325, -0.4838739335536957, -5.543078441405669e-05, -0.00011634149996098131, -0.0007277462864294648, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.00018857131362892687, -0.1519082635641098, -0.0605849027633667, -0.0154426796361804, -0.10286310315132141, -4.8993817472364753e-05, -0.5712874531745911, -0.023425377905368805, -0.000474936212413013, -0.0007595514762215316, -0.003989239223301411, -0.0006136203301139176, -0.000538680877070874, -0.0004190520558040589, -0.2775152623653412, -1.7881377516459906e-06, -0.0001618731184862554, -0.020541666075587273, -0.0033203016500920057, -0.024504279717803, -0.0017777367029339075, -2.2291887944447808e-05, -0.00026806574896909297, -7.033100700937212e-05, -3.838465272565372e-05, -9.440929716220126e-05, -0.005498523358255625, -2.8609820219571702e-05, -0.00015448330668732524, -0.0005694198189303279, -0.00035065223346464336, -0.5331062078475952, -0.01010351162403822, -0.0010905277449637651, -6.6756979322235566e-06, -3.71926071238704e-05, -2.026060104370117, -1.6927575416048057e-05, -1.6689286894688848e-06, -4.529942543740617e-06, -1.3351351299206726e-05, -0.11183884739875793], "finish_reason": "stop"}], "metrics": {"energy": 716.2186333637239, "energy_per_token": 4.1640618218821155, "time": 15.4873705, "time_per_token": 0.09004285174418605}}
{"outputs": [{"text": "os.makedirs(DIRECTORY, exist_ok=True)  # Create the directory if it doesn't exist\n\n    # Split the multi-line string into lines\n    lines = input_string.splitlines()\n\n    file_paths = []  # List to store file paths\n\n    for line in lines:\n        line = line.strip()  # Remove leading and trailing whitespace from the line\n\n        # Skip the line if it's empty\n        if not line:\n            continue\n\n        # Hash the line using SHA256 and convert the hash to a hexadecimal string\n        hash_object = hashlib.sha256(line.encode())\n        hashed_line = hash_object.hexdigest()\n\n        # Extract the first 10 characters of the hash for the file name\n        file_name = f\"{hashed_line[:10]}.txt\"\n        file_path = os.path.join(DIRECTORY, file_name)\n        file_paths.append(file_path)  # Add file path to the list\n\n        # Save the has", "tokens": ["os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "  ", "#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "\n", "    ", "#", " Split", " the", " multi", "-", "line", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "  ", "#", " List", " to", " store", " file", " paths", "\n", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "line", " =", " line", ".", "strip", "()", "  ", "#", " Remove", " leading", " and", " trailing", " whites", "pace", " from", " the", " line", "\n", "\n", "        ", "#", " Skip", " the", " line", " if", " it", "'", "s", " empty", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", " and", " convert", " the", " hash", " to", " a", " hex", "ade", "c", "imal", " string", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "        ", "h", "ashed", "_", "line", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Ext", "ract", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", " for", " the", " file", " name", "\n", "        ", "file", "_", "name", " =", " f", "\"", "{", "h", "ashed", "_", "line", "[:", "1", "0", "]}", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "  ", "#", " Add", " file", " path", " to", " the", " list", "\n", "\n", "        ", "#", " Save", " the", " has"], "logprobs": [-3.241926670074463, -0.001156733720563352, -0.01535229105502367, -3.4570634852570947e-06, -4.31528314948082e-05, -0.0003587556129787117, -0.011647317558526993, -6.437280717364047e-06, -1.1920928244535389e-07, -0.004152248613536358, -0.0023964515421539545, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.009252408519387245, -0.001166140311397612, -0.00036161558819003403, -1.9135464429855347, -0.00016437610611319542, -0.4274512231349945, -0.3572378158569336, -0.2580936551094055, -0.018888603895902634, -0.008570200763642788, -0.0693478137254715, -0.0004037995240651071, -4.184158387943171e-05, -0.004424069542437792, -0.04736574739217758, -0.9916142225265503, -0.0006675875629298389, -1.814563512802124, -1.2246716022491455, -0.0942516028881073, -2.7516419887542725, -0.0020787552930414677, -0.0015929164364933968, -0.040797922760248184, -0.03630554676055908, -0.29242345690727234, -0.9413157105445862, -0.0001984637783607468, -0.13689014315605164, -0.004564936738461256, -0.024524519219994545, -3.814624506048858e-05, -4.172316494077677e-06, -0.00012563870404846966, -0.3816526234149933, -1.275174856185913, -0.014304361306130886, -0.009030570276081562, -0.05050186067819595, -9.512448741588742e-05, -0.8092551827430725, -0.0009392855572514236, -0.008425405248999596, -0.00194193993229419, -0.0018116504652425647, -0.40054455399513245, -2.264974000354414e-06, -0.7522200345993042, -0.039970267564058304, -0.09394682198762894, -0.39572250843048096, -0.0023534002248197794, -0.5897617340087891, -0.04982273280620575, -8.737658936297521e-05, -1.0772124528884888, -0.013543154112994671, -0.0019004157511517406, -0.0008954567601904273, -0.00011955977242905647, -0.022266386076807976, -0.0022508781403303146, -1.629804015159607, -0.006086030974984169, -0.000806602300144732, -0.00013243274588603526, -0.03905961662530899, -0.0016594461631029844, -0.3876623809337616, -2.3841855067985307e-07, -0.0810655876994133, -0.083122618496418, -1.3970515727996826, -7.092700980138034e-05, -0.031647730618715286, -0.4758242666721344, -2.855454921722412, -1.0224719047546387, -0.02965448424220085, -0.0025056179147213697, -1.1407434940338135, -5.638440416078083e-05, -1.251124620437622, -0.4999416768550873, -3.0094032287597656, -0.9020388722419739, -0.001872811233624816, -0.00534403370693326, -0.5229265093803406, -3.099436753473128e-06, -0.007038796786218882, -0.10403499752283096, -7.70062324590981e-05, -0.0008840228547342122, -0.07939969003200531, -0.0011091040214523673, -0.0028810682706534863, -0.001495434669777751, -0.0004773192631546408, -0.003702097339555621, -0.0005346299149096012, -0.0026886051055043936, -0.0003292018664069474, -0.27668118476867676, -0.5374980568885803, -0.016846997663378716, -0.11105453222990036, -0.07464253157377243, -0.023886410519480705, -0.00011514954530866817, -0.020956052467226982, -6.067568756407127e-05, -2.145764938177308e-06, -2.4638776779174805, -1.461308479309082, -1.6150355339050293, -0.4121659994125366, -0.10797327011823654, -0.49914786219596863, -0.9745467305183411, -0.10353660583496094, -6.079655122448457e-06, -5.924526340095326e-05, -0.035885974764823914, -0.008857602253556252, -0.0001554368354845792, -0.7483680844306946, -0.08827994018793106, -0.45490163564682007, -0.0001931004080688581, -8.535020606359467e-05, -1.0847986231965479e-05, -2.50339189733495e-06, -0.003888903185725212, -0.0009706076816655695, -2.8609820219571702e-05, -4.768370445162873e-07, -0.029272399842739105, -0.006431120913475752, -0.0005243833875283599, -0.005140777211636305, -0.5648815035820007, -0.01515540387481451, -0.01050915103405714, -2.593682050704956, -0.00866167712956667, -0.07584032416343689, -0.42137542366981506, -0.010468452237546444, -0.0025829069782048464, -6.007967749610543e-05, -7.033323527139146e-06, -1.3470558769768104e-05, -0.0012276978231966496, -0.00010227633902104571, -2.3841855067985307e-07, -0.0012521054595708847, -0.04810448735952377, -0.028038453310728073, -0.0002002515539061278, -0.04915153980255127, -1.2001413106918335, -0.011763961985707283, -0.013103917241096497, -0.006505975499749184, -0.009778101928532124, -0.0026852760929614305, -0.001369848963804543, -0.019550718367099762, -0.15026766061782837, -0.00015376816736534238, -0.10215932130813599, -1.844219446182251, -0.08372842520475388, -1.2611957788467407, -0.004263122566044331, -0.031867723912000656, -4.708655978902243e-05, -0.32487842440605164, -0.00029094755882397294, -0.016165025532245636, -0.009698179550468922, -1.584757685661316, -0.030853960663080215, -0.0013368725776672363, -0.009984903037548065, -1.1920928244535389e-07, -2.2411095415009186e-05, -4.768370445162873e-07, -0.0029103087726980448, -0.0005914607318118215, -0.0003691230376716703, -0.002961299614980817, -0.0025056179147213697, -0.00022480344341602176, -2.658331868587993e-05, -0.04892986640334129, -0.8533269166946411, -0.018911181017756462, -0.0002286172821186483, -0.000892121868673712, -0.00017677174764685333, -0.02636779099702835, -3.2186455882765586e-06, -6.05564855504781e-05, -4.768360213347478e-06, -0.0007574073388241231, -0.00014685506175737828, -0.0031393314711749554, -1.2159273865108844e-05, 0.0, -5.173549288883805e-05, -0.0004323977918829769, -2.3841855067985307e-07, -9.298280929215252e-06, -2.610649426060263e-05, -0.25739574432373047, -1.4268798828125, -0.010505729354918003, -1.1920858014491387e-05, -0.0004159538948442787, -1.5139465176616795e-05, -2.729855441430118e-05, -3.4927710657939315e-05, -0.0015830377815291286, -3.814689989667386e-06, -7.271740287251305e-06, -0.00018106251081917435, -1.062498688697815, -5.960462772236497e-07, -0.20528008043766022, -1.8737796545028687, -0.004668526817113161, -0.0006139777251519263, -0.017836645245552063, -0.0019677577074617147, -0.023801669478416443, -0.010697519406676292, -0.008735300973057747, -0.097406305372715, -0.8000987768173218, -0.008982960134744644, -0.5100756883621216], "finish_reason": "length"}], "metrics": {"energy": 1015.8553434066772, "energy_per_token": 3.968184935182333, "time": 23.188019, "time_per_token": 0.09057819921875}}
{"outputs": [{"text": "# If directory does not exist, create it\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize an empty list to store the file paths\n    file_paths = []\n\n    # Split the input string into lines\n    lines = input_string.split('\\n')\n\n    # Iterate over each non-empty line\n    for line in lines:\n        if line != '':\n            # Hash the line using SHA256\n            hash_object = hashlib.sha256(line.encode())\n            hex_dig = hash_object.hexdigest()\n\n            # Create the file name using the first 10 characters of the hash\n            file_name = hex_dig[:10] + \".txt\"\n\n            # Create the file path\n            file_path = os.path.join(DIRECTORY, file_name)\n\n            # Add the file path to the list\n            file_paths.append(file_path)\n\n            # Write the hash to the file\n            with open(file_path,", "tokens": ["#", " If", " directory", " does", " not", " exist", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " the", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " non", "-", "empty", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", " ", "!", "=", " '", "':", "\n", "            ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "            ", "hex", "_", "dig", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Create", " the", " file", " name", " using", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "file", "_", "name", " =", " hex", "_", "dig", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "\n", "\n", "            ", "#", " Create", " the", " file", " path", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Write", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ","], "logprobs": [-0.7260650396347046, -3.0279054641723633, -2.2591919898986816, -0.6443793177604675, -0.004781241994351149, -0.03079570271074772, -0.07987205684185028, -0.06179818511009216, -0.036470383405685425, -0.152657613158226, -0.0008166077313944697, -0.10842752456665039, -0.002724508987739682, -0.0010935047175735235, -1.8596476365928538e-05, -0.000679500459227711, -4.458328112377785e-05, -0.1661374270915985, -0.00043132537393830717, -0.0011847150744870305, -7.152555099310121e-07, -1.1920928244535389e-07, -0.00038115866482257843, -0.0028901018667966127, -0.007291491609066725, -0.013493640348315239, -1.0967194612021558e-05, -0.2669426500797272, -1.0847986231965479e-05, -5.364403477869928e-06, -0.00022587609419133514, -0.00017176583060063422, 0.0, -2.3841855067985307e-07, -0.005012683104723692, -0.0010799296433106065, -0.07607025653123856, -0.001058137626387179, -0.42516300082206726, -1.9253581762313843, -1.464741587638855, -0.011437560431659222, -0.029645226895809174, -0.13384337723255157, -0.20725974440574646, -2.069194793701172, -0.18999330699443817, -0.018323905766010284, -0.24967381358146667, -0.00015352977789007127, -0.056486550718545914, -0.0033778061624616385, -0.012002037838101387, -0.004423832520842552, -0.003166425507515669, -0.00037293630884960294, -0.02704295888543129, -0.0002195594133809209, -0.016900915652513504, -1.0204212665557861, -0.12911121547222137, -0.08466963469982147, -0.07990023493766785, -0.17353443801403046, -0.09098352491855621, -0.5364026427268982, -0.00012027494085486978, -0.1474846750497818, -0.0037526916712522507, -0.006385163404047489, -0.0001232548092957586, -7.867782187531702e-06, -7.438383181579411e-05, -0.16293342411518097, -0.7489557266235352, -8.129743218887597e-05, -2.407998726994265e-05, -5.9960475482512265e-05, -0.0007371568935923278, -0.011287875473499298, -0.00013851160474587232, -0.019318174570798874, -0.6908683180809021, -0.0004017737810499966, -0.3230501711368561, -0.9348125457763672, -1.57791268825531, -0.0006705658161081374, -0.00021455370006151497, -0.0012904420727863908, -0.20723794400691986, -4.637133679352701e-05, -0.00293717160820961, -0.008613221347332, -0.0008440031087957323, -0.002942995633929968, -0.00013529339048545808, -0.00013696208770852536, -0.005688905715942383, -0.07175355404615402, -0.10905197262763977, -3.004878044128418, -9.536738616588991e-07, -1.5020257706055418e-05, -0.25242799520492554, -0.0006316096987575293, -0.17645272612571716, -0.006933794356882572, -0.02233901433646679, -0.5279627442359924, -0.025201046839356422, -0.04954879730939865, -0.06183796748518944, -0.037034351378679276, -0.00014602071314584464, -0.01405237428843975, -7.998623186722398e-05, -1.0847986231965479e-05, -0.1346885859966278, -9.595887240720913e-05, -0.6990687251091003, -0.10484866797924042, -0.1905055046081543, -0.00022873646230436862, -8.463501580990851e-05, -7.390948667307384e-06, -2.50339189733495e-06, -0.0016156489728018641, -0.0010561132803559303, -9.179073458653875e-06, -1.1920922133867862e-06, -0.02054143324494362, -0.006225716322660446, -0.0004925706889480352, -0.027828164398670197, -0.438368558883667, -0.0019748962949961424, -0.45868897438049316, -1.2668437957763672, -0.022725621238350868, -0.04408152401447296, -0.2266986221075058, -0.005698743741959333, -2.90866428258596e-05, 0.0, -9.179073458653875e-06, -0.0002928543253801763, -3.9457496313843876e-05, -1.6689286894688848e-06, -0.0019124329555779696, -0.03003966249525547, -0.06915304064750671, -0.0005187834613025188, -0.0013024666113778949, -1.5453875064849854, -0.363400936126709, -0.4783051013946533, -1.167389154434204, -2.050288677215576, -0.05272004008293152, -0.03307297080755234, -0.004289355129003525, -0.0031022538896650076, -0.000990257947705686, -0.016299674287438393, -0.011295300908386707, -0.00448732590302825, -0.012982958927750587, -0.2919510006904602, -0.00013052565918769687, -0.4228680431842804, -0.001763337990269065, -0.05372510850429535, -0.0015453074593096972, -0.23188863694667816, -6.556489552167477e-06, -2.3841855067985307e-07, -0.036132633686065674, -0.0019082685466855764, -0.0006569849792867899, -0.013081680051982403, -0.07667703181505203, -1.6262907981872559, -0.0004127365828026086, -0.00020919041708111763, -2.4676019165781327e-05, -0.005405571311712265, -0.15453273057937622, -0.0003620922507252544, -0.002774439286440611, -0.44723474979400635, -0.06203349679708481, -0.6340711116790771, -0.031160682439804077, -0.537258505821228, -7.56950321374461e-05, -0.008723601698875427, -0.0009095107670873404, -0.0007022537174634635, -0.00026067672297358513, -0.036924637854099274, -6.9141146923357155e-06, -4.8874615458771586e-05, -4.0531076592742465e-06, -0.0008673481643199921, -0.00033706706017255783, -0.006095746997743845, -7.152531907195225e-06, -1.1920928244535389e-07, -0.00031120702624320984, -0.0005451146862469614, -9.536738616588991e-07, -5.8412379075889476e-06, -8.630380034446716e-05, -0.00019274283840786666, -0.1170915961265564, -0.00029738296871073544, -0.002331279218196869, -2.0649147033691406, -0.02544419839978218, -0.0020190346986055374, -0.0013960388023406267, -0.0003864018653985113, -0.0029605866875499487, -0.023843225091695786, -0.046633511781692505, -5.2689116273541003e-05, -0.0015143604250624776, -4.768370445162873e-07, -3.93382906622719e-05, -0.00017736769223120064, -0.0001546025014249608, -0.0001262346631847322, -0.0016433794517070055, -6.9141146923357155e-06, -1.6689160474925302e-05, -0.0001411338453181088, -0.00013100242358632386, -0.0014144902816042304, -0.03949963301420212, -0.003849953645840287, -0.6187283396720886, -0.0018368767341598868, -0.3427712023258209, -0.03688971325755119, -0.014535488560795784, -0.0064532700926065445, -0.047246359288692474, -0.00023100091493688524, -0.010313902981579304, -4.351044481154531e-05, -0.00016723664884921163, -0.0007048744591884315, -1.5497195136049413e-06, -1.1444026313256472e-05, -0.00026520551182329655], "finish_reason": "length"}], "metrics": {"energy": 1036.5538509063717, "energy_per_token": 4.049038480103015, "time": 23.368734, "time_per_token": 0.0912841171875}}
{"outputs": [{"text": "import os\n    import hashlib\n\n    # Create directory if it does not exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Iterate through lines in input_string\n    file_paths = []\n    for line in input_string.splitlines():\n        if line:\n            # Hash using SHA256 and take first 10 characters as filename\n            h = hashlib.sha256(line.encode()).hexdigest()[:10]\n            filename = f\"{DIRECTORY}/{h}.txt\"\n            # Save hash to file\n            with open(filename, \"w\") as f:\n                f.write(h)\n            file_paths.append(filename)\n\n    return file_paths", "tokens": ["import", " os", "\n", "    ", "import", " hash", "lib", "\n", "\n", "    ", "#", " Create", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " lines", " in", " input", "_", "string", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ":", "\n", "            ", "#", " Hash", " using", " SH", "A", "2", "5", "6", " and", " take", " first", " ", "1", "0", " characters", " as", " filename", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "            ", "filename", " =", " f", "\"", "{", "DI", "RECT", "ORY", "}/{", "h", "}", ".", "txt", "\"", "\n", "            ", "#", " Save", " hash", " to", " file", "\n", "            ", "with", " open", "(", "filename", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "                ", "f", ".", "write", "(", "h", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-3.3832736015319824, -0.05826525390148163, -0.04442287236452103, -0.01415780745446682, -0.009062585420906544, -0.0013074668822810054, -2.0265558760002023e-06, -0.0005165196489542723, -0.08037764579057693, -0.0034961311612278223, -0.44737133383750916, -0.7020787596702576, -1.7864454984664917, -0.023412451148033142, -0.05888529121875763, -1.4618757963180542, -0.0002361257211305201, -0.0029666482005268335, -0.008503892458975315, -0.00035577642847783864, -0.15975508093833923, -0.0008605591137893498, -0.00017236177518498152, -3.4570634852570947e-06, -0.0001629458274692297, -2.6702524337451905e-05, -0.05278404429554939, -0.00038675934774801135, -0.0010749283246695995, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00013195598148740828, -0.0007964776013977826, -0.0023492376785725355, -0.003386716591194272, -6.079655122448457e-06, -0.18872010707855225, -4.0531076592742465e-06, -3.814689989667386e-06, -0.00013267113536130637, -8.046303264563903e-05, -1.5497195136049413e-06, 0.0, -0.0022686002776026726, -0.0004888770054094493, -0.00955283921211958, -0.0005376085755415261, -0.5227802991867065, -3.6701202392578125, -0.0027926277834922075, -1.4861161708831787, -1.273118257522583, -1.6428475379943848, -1.1737492084503174, -1.1451834440231323, -0.0019480077316984534, -0.29865768551826477, -0.0003782987187150866, -0.7071836590766907, -0.002035809215158224, -0.02086697891354561, -0.002506212331354618, -0.0037863010074943304, -0.02693864330649376, -0.017838988453149796, -0.07192030549049377, -0.032373473048210144, -0.001960857305675745, -0.0016417133156210184, -0.00010609064338495955, -9.775113539944869e-06, -0.0014396075857803226, -0.08880682289600372, -0.27604711055755615, -0.008597384206950665, -0.0012048374628648162, -0.009970976039767265, -0.29015499353408813, -0.1880781054496765, -0.9697912335395813, -0.9724308848381042, -0.0025855228304862976, -0.14440247416496277, -0.72707599401474, -3.5793333053588867, -0.01982457935810089, -0.00021300431399140507, -0.012925533577799797, -0.00019047829846385866, -1.966933996300213e-05, -1.4616652727127075, -2.027453899383545, -0.30462557077407837, -0.003323866054415703, -0.004843052010983229, -0.0018167671514675021, -0.03501591086387634, -2.3980870246887207, -0.19773809611797333, -0.0815313458442688, -0.00025293012731708586, -1.1174015998840332, -1.8420287370681763, -0.0003586364327929914, -4.7801782784517854e-05, -2.50339189733495e-06, -0.017032301053404808, -0.0016383809270337224, -3.111314072157256e-05, -7.152555099310121e-07, -0.2606358528137207, -0.013173803687095642, -0.0017145470483228564, -0.07979347556829453, -0.33545032143592834, -0.07113455981016159, -0.007014056202024221, -2.8013790142722428e-05, 0.0, -0.002597175072878599, -0.2219441533088684, -0.0010869554243981838, -0.0005609607324004173, -0.0006005152827128768, -0.05040030553936958, -0.01756950095295906, -0.4479963183403015, -0.0007877822499722242, -1.3933796882629395, -0.07654795795679092, -0.01650923490524292, -0.2999681830406189, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.005139472428709269, -0.0001674750237725675, -0.006561402231454849, -1.5139465176616795e-05, -0.00011586471373448148, -2.884823152271565e-05, -0.0017215682892128825, -0.6766446828842163, -1.6713697910308838, -0.3912515342235565, -0.178883358836174, -0.07257960736751556, -0.04085983708500862, -0.16001811623573303, -0.00021455370006151497, -0.021153202280402184, -0.00012540031457319856, -9.512448741588742e-05, -0.0007864719373174012, -0.00018702188390307128, -0.28567594289779663, -0.027305960655212402, -0.008443254046142101, -0.049445442855358124, -1.811964830267243e-05, -0.11402156949043274, -0.006143020931631327, -0.00039307496626861393, -0.00019536493346095085, -0.006251778919249773, -5.125986263010418e-06, -0.00019870213873218745, -0.00024125049822032452, -0.06424840539693832, -0.044458333402872086, -0.0005477358354255557, -0.0266735702753067, -0.35291600227355957, -1.0728830375228426e-06, -1.6569954823353328e-05, -0.00022003613412380219, -2.7894584491150454e-05, -5.328513361746445e-05, -0.004886707756668329, -0.0005168771021999419, -0.001090885023586452, -0.10802655667066574, -0.0008070787298493087, -0.05179183930158615, -0.0009332115878351033, -7.748573807475623e-06, -4.768370445162873e-07, -0.23713386058807373, -0.03135594725608826, -2.381849527359009], "finish_reason": "stop"}], "metrics": {"energy": 769.4505534782404, "energy_per_token": 4.07116694962032, "time": 17.12846, "time_per_token": 0.09062677248677249}}
{"outputs": [{"text": "# Check if the directory already exists\n    if not os.path.isdir(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    # Initialize a list to store file paths\n    file_paths = []\n\n    # Process each non-empty line\n    for line in input_string.splitlines():\n        if line.strip():  # Ignore empty lines\n            # Hash the line using SHA256 and get the first 10 characters\n            hash_object = hashlib.sha256(line.strip().encode())\n            hash_prefix = hash_object.hexdigest()[:10]\n\n            # Construct the file path with prefix and extension\n            file_path = os.path.join(DIRECTORY, f\"{hash_prefix}.txt\")\n            file_paths.append(file_path)\n\n            # Write the hashed line to the file\n            with open(file_path, \"w\") as file:\n                file.write(hash_prefix)\n\n    return file_paths", "tokens": ["#", " Check", " if", " the", " directory", " already", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " a", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Process", " each", " non", "-", "empty", " line", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " line", ".", "strip", "():", "  ", "#", " Ign", "ore", " empty", " lines", "\n", "            ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", " and", " get", " the", " first", " ", "1", "0", " characters", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", "\n", "            ", "hash", "_", "prefix", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "\n", "            ", "#", " Construct", " the", " file", " path", " with", " prefix", " and", " extension", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " f", "\"", "{", "hash", "_", "prefix", "}", ".", "txt", "\"", ")", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "hash", "_", "prefix", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "def"], "logprobs": [-0.7260650396347046, -1.8078279495239258, -0.12019440531730652, -0.3145260810852051, -0.6362276077270508, -3.0913469791412354, -0.005282610189169645, -0.5457733273506165, -0.002087677363306284, -0.04619377851486206, -0.015501721762120724, -0.0012347224401310086, -9.298280929215252e-06, -0.0010383697226643562, -3.099393507000059e-05, -1.5876191854476929, -9.60780744208023e-05, -0.001595415873453021, -0.0025393879041075706, -5.960462772236497e-07, -3.576278118089249e-07, -0.0004328744253143668, -0.0014999578706920147, -0.007799764629453421, -0.8855603337287903, -8.702239938429557e-06, -0.5775521397590637, -2.264974000354414e-06, -0.000508417550008744, -0.000559292733669281, -2.3841855067985307e-07, 0.0, -0.000604565953835845, -0.046088140457868576, -0.07896201312541962, -0.0015600664773955941, -0.3878377377986908, -1.7556321620941162, -1.2622027397155762, -0.11016955226659775, -0.10251649469137192, -0.11420481652021408, -0.43727490305900574, -0.020083529874682426, -0.0970042496919632, -0.00016556799528189003, -0.06629890203475952, -0.0038766723591834307, -0.012555602006614208, -0.006874718237668276, -0.006697231903672218, -0.000680691737215966, -0.021436426788568497, -0.0001559135998832062, -0.02976893074810505, -1.8827980756759644, -0.11876018345355988, -0.18988417088985443, -0.0005762108485214412, -0.00014244495832826942, -0.003495418466627598, -1.466935396194458, -0.00011073929636040702, -0.04871734231710434, -0.03570275008678436, -0.002044850494712591, -0.005099504254758358, -0.00010525626566959545, -4.0531076592742465e-06, -0.0009637002367526293, -0.05867307260632515, -0.4375437796115875, -0.008314164355397224, -0.005435331258922815, -0.007384149823337793, -0.2589099109172821, -0.14150665700435638, -0.45434311032295227, -0.0040849344804883, -0.15676863491535187, -1.1420584917068481, -1.6689286894688848e-06, -0.19234271347522736, -0.00883113406598568, -0.0026012177113443613, -0.0022759742569178343, -0.007949145510792732, -0.00915507972240448, -0.16203024983406067, -0.7543180584907532, -0.06110908463597298, -0.031729381531476974, -0.13367202877998352, -0.033317673951387405, -6.925819616299123e-05, -0.01769435778260231, -6.48477507638745e-05, -7.271740287251305e-06, -2.704263210296631, -1.8190902471542358, -0.056497592478990555, -0.07501983642578125, -0.006731926463544369, -0.005228535737842321, -0.0018498466815799475, -0.014002533629536629, -0.43350735306739807, -9.643566590966657e-05, -0.6848306059837341, -0.06885920464992523, -0.5438951253890991, -0.0002650863316375762, -6.496695277746767e-05, -4.291525328881107e-06, -1.7881377516459906e-06, -0.0026773104909807444, -0.0012959185987710953, -3.397406908334233e-05, 0.0, -0.027935633435845375, -0.005264941602945328, -0.00043049128726124763, -1.0080987215042114, -0.001100887660868466, -1.1324817933200393e-05, -0.0003327769518364221, -0.6051337718963623, -0.008383085019886494, -0.003978552762418985, -0.46133241057395935, -0.033524736762046814, -2.8062472343444824, -0.0016113643068820238, -0.0033049744088202715, -0.00010597144137136638, -2.0265558760002023e-06, -7.629365427419543e-06, -0.00342996115796268, -2.658331868587993e-05, 0.0, -0.0007121411035768688, -0.0012184107908979058, -0.0016439745668321848, -0.00031990656862035394, -6.735097849741578e-05, -0.02388361655175686, -0.07821839302778244, -0.00030012393835932016, -0.0021130156237632036, -1.2922239303588867, -0.04614949971437454, -0.17461800575256348, -0.13668064773082733, -2.668257236480713, -2.5439393520355225, -0.18535216152668, -0.43209242820739746, -0.016760017722845078, -7.366862701019272e-05, -0.07503090053796768, -0.005286404862999916, -0.02054470404982567, -0.0006096888100728393, -0.24586807191371918, -1.3351351299206726e-05, -7.033100700937212e-05, -6.794906312279636e-06, -0.0008962904685176909, -0.00020096666412428021, -0.00562868919223547, -0.0014910305617377162, -2.3841855067985307e-07, -0.0003351603518240154, -0.1612926572561264, -0.032822441309690475, -0.00024399164249189198, -0.00023707917716819793, -2.3841855067985307e-07, -1.1920922133867862e-06, -0.0017880895175039768, -4.672895011026412e-05, -0.0002643712505232543, -1.8596476365928538e-05, -0.00025948495022021234, -0.0004563482361845672, -1.5099990367889404, -0.02198106236755848, -2.5748875486897305e-05, -0.0032051641028374434, -2.8729025871143676e-05, -1.8000440832111053e-05, -5.757642793469131e-05, -0.0016198145458474755, -3.2186455882765586e-06, -5.960462772236497e-07, -0.0001287377526750788, -0.05708032846450806, -0.006833990104496479, -0.026150880381464958, -0.023689448833465576, -0.7867966294288635, -0.012188006192445755, -0.9567592144012451, -0.01211864035576582, -0.3520357012748718, -0.011031944304704666, -0.010510919615626335, -0.015044908970594406, -0.021749667823314667, -0.00010656742961145937, -0.015960555523633957, -4.1483970562694594e-05, -5.471556869451888e-05, -0.0010065733222290874, -8.344646857949556e-07, -1.2874520507466514e-05, -6.568216485902667e-05, -0.22027593851089478, -0.12450572848320007, -0.013630530796945095, -0.3909449279308319, -2.13382354559144e-05, -0.11766095459461212, -0.005153704434633255, -0.0006325627909973264, -0.00014530557382386178, -0.007982613518834114, -0.00013302871957421303, -0.000176652567461133, -0.0004514628672040999, -0.6227302551269531, -3.135155202471651e-05, -0.11592652648687363, -0.0873553454875946, -0.013641937635838985, -0.014864051714539528, -0.0023431722074747086, -0.13238005340099335, -0.0014294892316684127, -1.6689286894688848e-06, -3.576278118089249e-07, -0.13992060720920563, -0.012348271906375885, -2.4191298484802246], "finish_reason": "stop"}], "metrics": {"energy": 987.9626517925267, "energy_per_token": 4.049027261444781, "time": 22.078129, "time_per_token": 0.09048413524590164}}
{"outputs": [{"text": "# If the directory does not exist, create it\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n    for line in input_string.split('\\n'):\n        if line.strip() == '':\n            continue\n        hash_obj = hashlib.sha256(line.encode())\n        hash_hex = hash_obj.hexdigest()\n        filename = f\"{hash_hex[:10]}.txt\"\n        file_path = os.path.join(DIRECTORY, filename)\n        with open(file_path, 'w') as file:\n            file.write(hash_hex)\n        file_paths.append(file_path)\n    return file_paths", "tokens": ["#", " If", " the", " directory", " does", " not", " exist", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", ":", "\n", "        ", "if", " line", ".", "strip", "()", " ==", " '", "':", "\n", "            ", "continue", "\n", "        ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "hex", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "        ", "filename", " =", " f", "\"", "{", "hash", "_", "hex", "[:", "1", "0", "]}", ".", "txt", "\"", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "hash", "_", "hex", ")", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.7260650396347046, -3.0279054641723633, -0.29972705245018005, -0.7328605055809021, -0.44952183961868286, -0.001312109874561429, -0.009401808492839336, -0.022016163915395737, -0.037186089903116226, -0.0057297986932098866, -0.15587934851646423, -0.0007682471186853945, -0.09205015748739243, -0.0015889888163655996, -0.0008750900160521269, -1.168244216387393e-05, -0.0011319665936753154, -4.792098479811102e-05, -0.12949533760547638, -0.0003906917118001729, -0.0009233264136128128, -7.152555099310121e-07, -1.1920928244535389e-07, -0.00038521020906046033, -0.0020831567235291004, -0.00482834130525589, -0.010763328522443771, -1.1205610462639015e-05, -0.3877261281013489, -9.775113539944869e-06, -1.0847986231965479e-05, -0.00015186110977083445, -0.00024053541710600257, 0.0, -1.1920928244535389e-07, -0.003996481653302908, -0.0013344916515052319, -0.045514680445194244, -0.0008261366747319698, -1.3940448760986328, -0.0034284167923033237, -0.021700091660022736, -0.0047613102942705154, -0.00594964437186718, -0.16822445392608643, -0.6777349710464478, -0.339663028717041, -0.06658033281564713, -0.0029693818651139736, -0.0037910512182861567, -0.00017355366435367614, -7.510157047363464e-06, -0.0021326434798538685, -0.05817876756191254, -1.6008918285369873, -0.00011085849109804258, -4.351044481154531e-05, -6.01988795096986e-05, -0.0003057250869460404, -0.016571732237935066, -0.008318419568240643, -0.3535081744194031, -0.4583922028541565, -0.8553312420845032, -0.0035059908404946327, -0.8134946823120117, -0.5545729994773865, -0.36160531640052795, -0.00010430268594063818, -0.21381327509880066, -0.0016058895271271467, -0.20617549121379852, -0.15412715077400208, -0.460789293050766, -1.0472302436828613, -0.15448859333992004, -1.537285327911377, -0.0006964165368117392, -0.00038354191929101944, -1.3589766240329482e-05, -5.960446742392378e-06, -0.02338147535920143, -0.002385153668001294, -1.5258672647178173e-05, -3.576278118089249e-07, -0.2460782825946808, -0.014798042364418507, -0.0004619484825525433, -0.5424343347549438, -0.810475766658783, -0.022669918835163116, -0.0033755486365407705, -0.6901783347129822, -0.0826905220746994, -1.8364201784133911, -0.11207226663827896, -0.006200126372277737, -0.00018749863374978304, -1.9073468138230965e-06, -1.4424220353248529e-05, -0.0014141331193968654, -2.2291887944447808e-05, -1.1920928244535389e-07, -0.006473286543041468, -0.17416711151599884, -0.04146365076303482, -1.0644702911376953, -0.007520459592342377, -1.5540735721588135, -0.24622757732868195, -0.014060838147997856, -0.09403851628303528, -9.595887240720913e-05, -0.0018873275257647038, -0.021537235006690025, -0.0055889771319925785, -0.0004948345012962818, -0.0026497275102883577, -0.007884097285568714, -0.00027700403006747365, -4.815939246327616e-05, -0.024319540709257126, -0.03821273520588875, -0.09652366489171982, -0.08468277752399445, -0.03149179741740227, -0.0007406114018522203, -0.06589809060096741, -5.483612312673358e-06, -7.70062324590981e-05, -5.125986263010418e-06, -0.0011988840997219086, -0.0005738280597142875, -0.0063294898718595505, -1.9073468138230965e-06, -1.1920928244535389e-07, -0.00013219437096267939, -0.0015936305280774832, -8.225102646974847e-05, -0.0013362773461267352, -0.07664545625448227, -0.47755247354507446, -9.595887240720913e-05, -0.0003554189461283386, -0.000867467257194221, -2.50339189733495e-06, -1.1920928244535389e-07, -0.0002834395272657275, -0.43067482113838196, -0.055390533059835434, -0.07074812799692154, -0.00011693747364915907, -1.3143645524978638, -0.02686808817088604, -0.0004966217675246298, -0.0008505540899932384, -0.002623094944283366, -0.00014935807848814875, -0.0005080600967630744, -0.002389197237789631, -0.1612650603055954, -5.602820692729438e-06, -0.002622024854645133, -0.02735212631523609, -0.0008973624208010733, -0.025324372574687004, -0.002447825390845537, -2.0265373677830212e-05, -0.00023576818057335913, -0.0002643712505232543, -5.0424259825376794e-05, -9.63164638960734e-05, -0.0039245267398655415, -2.753696753643453e-05, -3.6954811548639555e-06, -0.000621959799900651, -0.0005901502445340157, -0.34593677520751953, -0.0066171810030937195, -0.001141492510214448, -5.602820692729438e-06, -2.3364747903542593e-05, -0.19020375609397888, -0.02583448588848114, -0.8370270133018494], "finish_reason": "stop"}], "metrics": {"energy": 739.3332172660826, "energy_per_token": 3.9963957690058516, "time": 16.690228, "time_per_token": 0.09021744864864865}}
{"outputs": [{"text": "# Create the DIRECTORY if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.mkdir(DIRECTORY)\n\n    # Split the input string into lines\n    input_lines = input_string.splitlines()\n\n    # Filter out empty lines\n    non_empty_lines = filter(lambda line: line != '', input_lines)\n\n    # Hash and save each non-empty line to a separate file\n    file_paths = []\n    for line in non_empty_lines:\n        # Hash the line using SHA256\n        line_hash = hashlib.sha256(line.encode('utf-8')).hexdigest()\n\n        # Generate the file name based on the first 10 characters of the hash\n        file_name = f\"{line_hash[:10]}.txt\"\n\n        # Construct the full file path\n        file_path = os.path.join(DIRECTORY, file_name)\n\n        # Save the hashed value to the file\n        with open(file_path, 'w', encoding", "tokens": ["#", " Create", " the", " DIRECT", "ORY", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "input", "_", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "\n", "    ", "#", " Filter", " out", " empty", " lines", "\n", "    ", "non", "_", "empty", "_", "lines", " =", " filter", "(", "lambda", " line", ":", " line", " ", "!", "=", " ''", ",", " input", "_", "lines", ")", "\n", "\n", "    ", "#", " Hash", " and", " save", " each", " non", "-", "empty", " line", " to", " a", " separate", " file", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " non", "_", "empty", "_", "lines", ":", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "line", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Generate", " the", " file", " name", " based", " on", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "file", "_", "name", " =", " f", "\"", "{", "line", "_", "hash", "[:", "1", "0", "]}", ".", "txt", "\"", "\n", "\n", "        ", "#", " Construct", " the", " full", " file", " path", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "\n", "        ", "#", " Save", " the", " has", "hed", " value", " to", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "'", ",", " encoding"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -1.433909296989441, -0.00017474555352237076, -0.04239393770694733, -0.01339848805218935, -0.35498425364494324, -0.0014350840356200933, -4.303362584323622e-05, -0.007416927255690098, -0.031615160405635834, -0.0009656057227402925, -0.28059902787208557, -0.0020825620740652084, -0.000519617460668087, -4.410646579344757e-05, -0.0006461439770646393, -7.045020902296528e-05, -0.07073768228292465, -0.00014149141497910023, -0.0005996812833473086, -2.3841855067985307e-07, 0.0, -0.0002101439022226259, -0.0021137294825166464, -0.0033471533097326756, -0.007061760872602463, -8.702239938429557e-06, -1.573515772819519, -1.0728830375228426e-06, -0.0004761277523357421, -0.00016211149340961128, 0.0, -2.3841855067985307e-07, -0.0002461368858348578, -0.000534868217073381, -0.03689683601260185, -0.0007670559571124613, -0.505055844783783, -1.3073166608810425, -0.12118250131607056, -0.09019944816827774, -0.18141181766986847, -0.10739075392484665, -0.06209399551153183, -0.8066393733024597, -0.0001387499796692282, -2.65895676612854, -0.0014668668154627085, -0.09173588454723358, -0.001708358759060502, -0.013640409335494041, -9.214453893946484e-05, -1.2397689715726301e-05, -9.369411418447271e-05, -0.1793982833623886, -0.9293606877326965, -0.01251863595098257, -0.004305616952478886, -0.033195558935403824, -0.00014625910262111574, -0.16614216566085815, -2.7430925369262695, -0.12547695636749268, -0.08104151487350464, -0.008888322860002518, -0.15163858234882355, -4.708655978902243e-05, -0.5520166754722595, -0.08107064664363861, -0.000512111175339669, -0.0009011736838147044, -0.027002811431884766, -0.0003651905863080174, -0.8784604072570801, -0.0003237200144212693, -0.8630427122116089, -0.4840453565120697, -0.001942891743965447, -0.11690017580986023, -1.7436573505401611, -0.00018249277491122484, -2.50339189733495e-06, -1.057278037071228, -0.0036899829283356667, -0.0014611531514674425, -1.3470558769768104e-05, -6.925819616299123e-05, -0.0001734344696160406, -0.003404774935916066, -0.0034517014864832163, -0.0002650863316375762, -0.1282161921262741, -0.5502850413322449, -3.171053171157837, -0.05637861415743828, -0.33592796325683594, -0.2177508920431137, -0.0018079616129398346, -0.00012385078298393637, -0.002844575559720397, -1.9732118844985962, -0.10571208596229553, -2.2370986938476562, -0.01844971999526024, -0.05101775750517845, -0.0003334919747430831, -0.15452761948108673, -0.0009616755996830761, -0.005319962743669748, -0.0032630315981805325, -0.03588804230093956, -0.011186265386641026, -0.04866215959191322, -0.01118355430662632, -0.05196376517415047, -0.004717529751360416, -0.001513408264145255, -2.50339189733495e-06, 0.0, -3.576278118089249e-07, -1.585470999998506e-05, -4.3987260141875595e-05, -0.0002411313180346042, -0.004091345705091953, -0.5666068196296692, -0.6043399572372437, -0.1014208048582077, -0.03936555236577988, -0.11613500118255615, -0.03452439606189728, -0.00010740180005086586, -0.018293941393494606, -0.00015746307326480746, -8.940656698541716e-06, -0.08301796019077301, -0.00011967896716669202, -2.2483537197113037, -0.03633026406168938, -0.05184821039438248, -0.008475642651319504, -0.0010203876299783587, -0.0002205128694185987, -3.814689989667386e-06, -0.0010525407269597054, -0.001476984703913331, -2.5152843591058627e-05, -1.1920922133867862e-06, -0.004847559612244368, -0.018878543749451637, -0.0012816318776458502, -0.05015147104859352, -0.8311141133308411, -0.009780462831258774, -0.00311782187782228, -7.70062324590981e-05, -0.00109576724935323, -0.07368773967027664, -0.03490309789776802, -5.006777428206988e-06, -1.1920928244535389e-07, -0.0011556621175259352, -0.052840132266283035, -0.24037814140319824, -0.0002563863235991448, -0.0007127366843633354, -2.8369178771972656, -0.25156962871551514, -1.1547515392303467, -0.4342334568500519, -1.733385443687439, -0.0005022218101657927, -0.007813840173184872, -0.21783141791820526, -0.009124367497861385, -0.0036918832920491695, -0.0005863377591595054, -0.018348952755331993, -0.0014722233172506094, -0.0012522244360297918, -0.013931412249803543, -0.11192433536052704, -9.560128091834486e-05, -0.24128210544586182, -0.000680691737215966, -0.014810140244662762, -0.0019953595474362373, -0.2985226511955261, -0.17543946206569672, -0.002357443794608116, -0.0577024482190609, -0.0007124984404072165, -1.5497195136049413e-06, -0.005157973617315292, -0.0016994333127513528, -0.00037281715776771307, -0.0020260538440197706, -0.0014366315444931388, -0.00026306029758416116, -2.8013790142722428e-05, -0.008749954402446747, -0.278279185295105, -0.00015198028995655477, -0.004300987813621759, -1.3866980075836182, -0.003988289274275303, -1.4714683294296265, -0.05958244204521179, -0.00051115796668455, -0.11055599898099899, -3.6954195820726454e-05, -0.049019087105989456, -0.00037269797758199275, -0.00043764073052443564, -9.7508447652217e-05, -0.0473923496901989, -4.887569048150908e-06, -2.396077979938127e-05, -7.271740287251305e-06, -0.001347825163975358, -0.00017689094238448888, -0.002770635299384594, -1.2397689715726301e-05, 0.0, -9.059495641849935e-05, -0.0010026433737948537, -4.768370445162873e-07, -8.22540732769994e-06, -2.634490556374658e-05, -0.0002131234941771254, -0.16074436902999878, -0.0001691436773398891, -0.01600959338247776, -0.39213553071022034, -0.002726529957726598, -1.4972460269927979, -0.002847428433597088, -1.5337371826171875, -0.06728807836771011, -0.1463438868522644, -0.002669225912541151, -0.014714408665895462, -0.00013600854435935616, -0.014625128358602524, -6.532455881824717e-05, -0.00011264643399044871, -0.0005103239673189819, -2.9802276912960224e-06, -2.3841830625315197e-06, -9.786603914108127e-05, -0.4896116256713867, -0.020142648369073868, -1.653741478919983, -0.0001110968878492713, -0.0019741824362426996], "finish_reason": "length"}], "metrics": {"energy": 1031.7345638256077, "energy_per_token": 4.03021313994378, "time": 23.182295, "time_per_token": 0.09055583984375}}
{"outputs": [{"text": "# Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    file_paths = []\n\n    for line in input_string.splitlines():\n        if not line:\n            continue\n\n        hash_object = hashlib.sha256(line.encode())\n        hash_string = hash_object.hexdigest()[:10]\n        filename = os.path.join(DIRECTORY, hash_string + \".txt\")\n\n        with open(filename, \"w\") as f:\n            f.write(hash_string)\n\n        file_paths.append(filename)\n\n    return file_paths", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "for", " line", " in", " input", "_", "string", ".", "split", "lines", "():", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "        ", "hash", "_", "string", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "        ", "filename", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " hash", "_", "string", " +", " \"", ".", "txt", "\"", ")", "\n", "\n", "        ", "with", " open", "(", "filename", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "hash", "_", "string", ")", "\n", "\n", "        ", "file", "_", "paths", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "return", " file", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -0.4572495222091675, -0.026567475870251656, -0.005228179972618818, -0.2439398318529129, -0.0010846928926184773, -3.9219088648678735e-05, -0.0044555203057825565, -0.02317090332508087, -0.001111485529690981, -0.3258815407752991, -0.0013624681159853935, -0.00032848684350028634, -1.5497195136049413e-06, -0.0003522014303598553, -3.528532761265524e-05, -0.07601401954889297, -0.00018666432879399508, -0.0006811682251282036, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00014256415306590497, -0.0013915151357650757, -0.002580172149464488, -0.006020505912601948, -7.033323527139146e-06, -0.16232967376708984, -7.271740287251305e-06, -7.152555099310121e-07, -0.000163541772053577, -0.00014041867689229548, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0026261862367391586, -0.0021347845904529095, -0.037298642098903656, -0.0007457336178049445, -1.5060170888900757, -0.002989706117659807, -0.02130655199289322, -0.0035965063143521547, -0.003588904393836856, -0.10829563438892365, -0.7568578124046326, -0.000285227142740041, -1.1333969831466675, -0.08769392222166061, -0.0034008543007075787, -0.002563644666224718, -0.00010251473577227443, -3.1709168979432434e-05, -0.0012919898144900799, -0.0902051106095314, -0.4139039218425751, -0.014031804166734219, -0.011410689912736416, -0.007743933703750372, -0.32528045773506165, -1.0956220626831055, -0.0022664591670036316, -0.3773289918899536, -0.310226172208786, -0.0005227153305895627, -0.10463427752256393, -0.28165996074676514, -0.20546714961528778, -0.000619696278590709, -1.310708999633789, -0.04076187312602997, -0.36354175209999084, -0.00033480284037068486, -0.00012265883560758084, -1.1801649634435307e-05, -2.264974000354414e-06, -0.005196872632950544, -0.0027844251599162817, -1.1086402082582936e-05, -1.1920928244535389e-07, -0.024994347244501114, -0.006971558555960655, -0.0003240775258745998, -0.14223560690879822, -0.41412273049354553, -0.011000699363648891, -0.012587033212184906, -0.612436056137085, -0.07322285324335098, -2.0178728103637695, -0.0013078240444883704, -0.009569605812430382, -0.0001389883691444993, -1.537788011773955e-05, -2.706014311115723e-05, -0.007784506306052208, -4.935142715112306e-05, -1.1920928244535389e-07, -0.004750394728034735, -1.3927325010299683, -0.005519744474440813, -0.0027787189465016127, -0.0006740205571986735, -0.2635575234889984, -0.250219464302063, -1.1731438636779785, -0.0022094857413321733, -1.6167616844177246, -4.529942543740617e-06, -2.0146166207268834e-05, -2.0265558760002023e-06, -0.0005476167425513268, -0.0003219324571546167, -0.005082899704575539, -0.0022481423802673817, -3.576278118089249e-07, -0.0004220310365781188, -1.2414395809173584, -7.271740287251305e-06, -0.00010096516780322418, -0.029465949162840843, -0.42648619413375854, -0.00020883286197204143, -0.0002681849291548133, -7.748573807475623e-06, -3.862306402879767e-05, -0.0008854520856402814, -0.563306450843811, -0.0002675890573300421, -0.3306282162666321, -3.6954195820726454e-05, -5.590759246842936e-05, -0.00045277358731254935, -0.00015245705435518175, -0.10885045677423477, -0.05734387785196304, -0.016979092732071877, -0.20533880591392517, -3.480850500636734e-05, -1.4365453720092773, -0.009648829698562622, -0.0004702892620116472, -0.00048387263086624444, -0.006840857211500406, -5.722029527532868e-06, -0.0007389436941593885, -0.00042381841922178864, -0.1786423921585083, -9.417489309271332e-06, -0.008838342502713203, -0.04253629967570305, -0.0015975582646206021, -0.03201413154602051, -0.0006017066189087927, -0.0029685499612241983, -3.814689989667386e-06, -0.0004686211177613586, -6.210611172718927e-05, -2.7417760065873154e-05, -0.00011431517486926168, -0.027055373415350914, -0.0010014524450525641, -0.0003649522550404072, -0.004223356489092112, -0.0007686044555157423, -0.0064056552946567535, -0.001189477858133614, -4.172316494077677e-06, -3.576278118089249e-07, -1.6949059963226318, -1.4781842764932662e-05, -1.4305104514278355e-06, -5.245195097813848e-06, -9.059865078597795e-06, -0.12009958177804947], "finish_reason": "stop"}], "metrics": {"energy": 701.9102466583255, "energy_per_token": 4.010915695190431, "time": 15.906057, "time_per_token": 0.09089175428571429}}
{"outputs": [{"text": "import os\n    import hashlib\n\n    # Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Split the input string into lines\n    lines = input_string.split('\\n')\n\n    # Hash and save non-empty lines\n    file_paths = []\n    for line in lines:\n        if line.strip():  # Ignore empty lines\n            # Hash the line using SHA256\n            hash_object = hashlib.sha256(line.strip().encode())\n            hex_digest = hash_object.hexdigest()\n\n            # Create the file path\n            filename = hex_digest[:10] + \".txt\"  # First 10 characters of the hash\n            file_path = os.path.join(DIRECTORY, filename)\n\n            # Save the hash to the file\n            with open(file_path, \"w\") as file:\n                file.write(line.strip())\n\n            file_paths.append(file_path", "tokens": ["import", " os", "\n", "    ", "import", " hash", "lib", "\n", "\n", "    ", "#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Hash", " and", " save", " non", "-", "empty", " lines", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "if", " line", ".", "strip", "():", "  ", "#", " Ign", "ore", " empty", " lines", "\n", "            ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "strip", "()", ".", "encode", "())", "\n", "            ", "hex", "_", "dig", "est", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Create", " the", " file", " path", "\n", "            ", "filename", " =", " hex", "_", "dig", "est", "[:", "1", "0", "]", " +", " \"", ".", "txt", "\"", "  ", "#", " First", " ", "1", "0", " characters", " of", " the", " hash", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " filename", ")", "\n", "\n", "            ", "#", " Save", " the", " hash", " to", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "line", ".", "strip", "())", "\n", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path"], "logprobs": [-3.3832736015319824, -0.05826525390148163, -0.04442287236452103, -0.01415780745446682, -0.009062585420906544, -0.0013074668822810054, -2.0265558760002023e-06, -0.0005165196489542723, -0.08037764579057693, -0.0034961311612278223, -0.44737133383750916, -0.7020787596702576, -0.3176707327365875, -0.5396638512611389, -0.013494699262082577, -0.004417067393660545, -0.2142539620399475, -0.0002821285743266344, -1.7165990357170813e-05, -0.003731314092874527, -0.018953407183289528, -0.000436091679148376, -0.3132026493549347, -0.0006885541952215135, -0.00011812942830147222, -5.960446742392378e-06, -0.00020144341397099197, -4.3748852476710454e-05, -0.03134265914559364, -0.0002119316632160917, -0.0010305099422112107, -1.1920928244535389e-07, -2.3841855067985307e-07, -7.092700980138034e-05, -0.00046433156239800155, -0.0023707635700702667, -0.0033902807626873255, -7.986990567587782e-06, -0.12072492390871048, -1.1920922133867862e-06, -2.264974000354414e-06, -0.00014029949670657516, -8.284702198579907e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0021547689102590084, -0.0007850425899960101, -0.008144618943333626, -0.000722266617231071, -0.6543281674385071, -1.3598487377166748, -0.10106809437274933, -0.06016664206981659, -0.07853197306394577, -0.07498699426651001, -0.055141810327768326, -0.5070486664772034, -0.00017331528943032026, -0.056675128638744354, -0.002172611653804779, -0.008093418553471565, -4.458328112377785e-05, -4.887569048150908e-06, -5.709961988031864e-05, -0.37538495659828186, -0.5333126783370972, -6.878139538457617e-05, -1.9192511899746023e-05, -3.659658250398934e-05, -0.000447530735982582, -0.027469273656606674, -6.663577369181439e-05, -0.2934926450252533, -2.443795680999756, -2.505038022994995, -0.05739655718207359, -1.9310581684112549, -0.00041154498467221856, -0.00011872540198964998, -0.0005420169327408075, -0.1952212154865265, -0.00011550712952157483, -0.11244317144155502, -0.0004901876673102379, -0.004274873994290829, -0.000972155889030546, -0.0012212683213874698, -0.009549886919558048, -0.015504421666264534, -0.010058783926069736, -0.009893901646137238, -0.001005025114864111, -0.0035583768039941788, -8.999896090244874e-05, -0.00013624693383462727, -0.000976919662207365, -0.05420738831162453, -0.08674419671297073, -0.2372632473707199, -0.0006437613046728075, -0.15550391376018524, -0.3882969915866852, -1.0728830375228426e-06, -0.2037898600101471, -0.005963153671473265, -0.0009941878961399198, -0.0006995138246566057, -0.0027674254961311817, -0.0012717501958832145, -0.8349692821502686, -0.8522574305534363, -0.14851318299770355, -0.03700448200106621, -0.13181346654891968, -0.017695527523756027, -6.925819616299123e-05, -0.013376845978200436, -7.235741941258311e-05, -6.079655122448457e-06, -0.04511650279164314, -9.405170567333698e-05, -0.5915759801864624, -0.05275893956422806, -0.22420404851436615, -0.00011753345461329445, -3.2305197237292305e-05, -2.9802276912960224e-06, -1.0728830375228426e-06, -0.0008691347320564091, -0.0008859285153448582, -2.7656173188006505e-05, -2.264974000354414e-06, -0.007818334735929966, -0.002416787436231971, -0.0001998939987970516, -1.2423038482666016, -0.0006824786541983485, -1.0013530300057027e-05, -0.00028320116689428687, -1.0651261806488037, -0.0015793481143191457, -0.1351957470178604, -1.5481255054473877, -0.020269403234124184, -0.11419705301523209, -0.9000135064125061, -0.0009321396937593818, -0.0011372057488188148, -2.253030106658116e-05, -3.3378546504536644e-06, -2.50339189733495e-06, -0.0002884448622353375, -6.198863957251888e-06, 0.0, -0.00096941675292328, -0.04144832491874695, -0.13564269244670868, -0.00041237910045310855, -0.0014325842494145036, -0.8388770222663879, -0.21280018985271454, -0.650455117225647, -0.6431044936180115, -1.2951282262802124, -0.00018034738604910672, -0.8044299483299255, -0.006298927590250969, -0.06014082208275795, -7.986990567587782e-06, -2.264974000354414e-06, 0.0, -0.003148243995383382, -0.002065312582999468, -0.0003493413969408721, -0.0022088908590376377, -0.1994697004556656, -2.135366916656494, -0.000286657246761024, -0.00015698630886618048, -1.1086402082582936e-05, -1.4838266372680664, -1.4305104514278355e-06, -0.7947375178337097, -0.00105408881790936, -0.0006484074983745813, -0.00014983485743869096, -0.02360457554459572, -0.07771589607000351, -0.049592360854148865, -0.0072221397422254086, -0.13938753306865692, -0.002826150506734848, -0.0049429358914494514, -0.015828559175133705, -0.0007992172613739967, -4.875540980719961e-05, -0.011709647253155708, -2.0265558760002023e-06, -3.564294092939235e-05, -3.6954811548639555e-06, -0.00048137042904272676, -0.00013731967192143202, -0.0035709680523723364, -0.0014925779541954398, -1.1920928244535389e-07, -7.164221460698172e-05, -8.844937838148326e-05, -6.401333666872233e-05, -0.0019477697787806392, -0.1321926862001419, -0.00015686711412854493, -0.012692032381892204, -0.2715660631656647, -0.004867964424192905, -0.07733519375324249, -0.11663340777158737, -0.11832553148269653, -0.0008778294431976974, -0.011389004066586494, -9.035655966727063e-05, -0.011380517855286598, -8.308542601298541e-05, -5.543078441405669e-05, -0.00032360086333937943, -1.311301275563892e-06, -9.536738616588991e-07, -7.772143726469949e-05, -0.5959072113037109, -0.009116334840655327, -0.006273339968174696, -0.1396353393793106, -9.894321920000948e-06, -0.08740165829658508, -0.001404966926202178, -0.00038675934774801135, -9.738924563862383e-05, -0.0012024560710415244, -4.8397800128441304e-05, -0.00012599628826137632, -0.00025054652360267937, -2.1372289657592773, -0.08218774944543839, -0.006885610055178404, -0.273568332195282, -0.045072171837091446, -0.020594336092472076, -0.0013908008113503456, -1.1230628490447998, -5.722029527532868e-06, -0.0002087136817863211, -1.2278481335670222e-05, -1.2636104656849056e-05, -7.819823804311454e-05, -0.0024949158541858196, -1.2636104656849056e-05, -7.152555099310121e-07], "finish_reason": "length"}], "metrics": {"energy": 1024.5888271102904, "energy_per_token": 4.002300105899572, "time": 23.309214, "time_per_token": 0.0910516171875}}
{"outputs": [{"text": "# Create directory if not exists\n    os.makedirs(DIRECTORY, exist_ok=True)\n\n    # Initialize list to store file paths\n    file_paths = []\n\n    # Split the input string into lines\n    input_lines = input_string.splitlines()\n\n    # Loop through the lines\n    for line in input_lines:\n        # Ignore empty lines\n        if not line:\n            continue\n\n        # Hash the line using SHA256\n        hashed_line = hashlib.sha256(line.encode()).hexdigest()\n\n        # Create filename with first 10 characters of the hash\n        file_name = f\"{hashed_line[:10]}.txt\"\n\n        # Create full file path\n        file_path = os.path.join(DIRECTORY, file_name)\n\n        # Write the hashed line to the file\n        with open(file_path, \"w\") as file:\n            file.write(hashed_line)\n\n        # Append the file path to the list\n        file_paths.append(", "tokens": ["#", " Create", " directory", " if", " not", " exists", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " the", " input", " string", " into", " lines", "\n", "    ", "input", "_", "lines", " =", " input", "_", "string", ".", "split", "lines", "()", "\n", "\n", "    ", "#", " Loop", " through", " the", " lines", "\n", "    ", "for", " line", " in", " input", "_", "lines", ":", "\n", "        ", "#", " Ign", "ore", " empty", " lines", "\n", "        ", "if", " not", " line", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "h", "ashed", "_", "line", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Create", " filename", " with", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "file", "_", "name", " =", " f", "\"", "{", "h", "ashed", "_", "line", "[:", "1", "0", "]}", ".", "txt", "\"", "\n", "\n", "        ", "#", " Create", " full", " file", " path", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "DI", "RECT", "ORY", ",", " file", "_", "name", ")", "\n", "\n", "        ", "#", " Write", " the", " has", "hed", " line", " to", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "h", "ashed", "_", "line", ")", "\n", "\n", "        ", "#", " App", "end", " the", " file", " path", " to", " the", " list", "\n", "        ", "file", "_", "paths", ".", "append", "("], "logprobs": [-0.7260650396347046, -0.8194970488548279, -1.692305088043213, -0.04609975218772888, -2.4676506519317627, -0.28383827209472656, -0.03209079056978226, -0.0010619483655318618, -1.4780704975128174, -0.00016497205069754273, -0.00845944881439209, -5.960462772236497e-07, -1.0132738680113107e-05, -0.00033420699764974415, -0.02077731303870678, -1.311301275563892e-06, 0.0, -0.0019823915790766478, -0.0013749678619205952, -1.311301275563892e-06, -2.3841830625315197e-06, -0.009353152476251125, -0.000888191512785852, -0.0002449450839776546, -0.0058499788865447044, -0.06912790238857269, -0.000277123210253194, -0.32379984855651855, -2.0335922241210938, -1.3460941314697266, -0.6759467124938965, -0.26817190647125244, -0.19134661555290222, -0.02903538942337036, -0.1445452719926834, -0.00011681827891152352, -0.07554833590984344, -0.0022040142212063074, -0.010166055522859097, -0.006153684109449387, -0.018944283947348595, -0.0004447901446837932, -0.02185102552175522, -0.00019012074335478246, -0.031444668769836426, -1.0195940732955933, -1.429344654083252, -0.15843920409679413, -0.14643223583698273, -0.3349536955356598, -0.07450035959482193, -0.389050155878067, -8.201262971851975e-05, -2.6550052165985107, -0.0015904169995337725, -0.08093278855085373, -0.0014223469188436866, -0.010650931857526302, -0.00010835537250386551, -5.125986263010418e-06, -9.417090768693015e-05, -0.10566607117652893, -0.9174278378486633, -0.01547132059931755, -0.007308177649974823, -0.01134987361729145, -0.00011753345461329445, -0.04043518751859665, -1.6253925561904907, -0.36345425248146057, -2.4466981887817383, -0.10153087973594666, -0.2723214626312256, -3.6477376852417365e-05, -0.0015687552513554692, -0.06561779975891113, -0.0028733417857438326, -0.00023982033599168062, -2.145764938177308e-06, -9.298280929215252e-06, -0.00012444675667211413, -0.00011789103882620111, -0.06249330937862396, -0.09859389811754227, -0.6587753295898438, -0.0016287406906485558, -0.013836419209837914, -0.005543217994272709, -0.01073797233402729, -8.844937838148326e-05, -0.0012759171659126878, -0.2414480447769165, -0.0033163807820528746, -0.44269514083862305, -0.010592428967356682, -0.0007252446957863867, -0.0023795643355697393, -0.0008507922757416964, -0.0634981170296669, -0.0005972985527478158, -0.002484808210283518, -0.4108094871044159, -0.08446807414293289, -0.07169685512781143, -0.1480449140071869, -0.030556973069906235, -0.00014828535495325923, -0.014672471210360527, -8.749579137656838e-05, -1.3112935448589269e-05, -0.09665787220001221, -5.638440416078083e-05, -0.790975034236908, -0.06963028013706207, -0.21495948731899261, -0.328636109828949, -0.0031018974259495735, -0.0015338810626417398, -0.00034898388548754156, -7.867782187531702e-06, -0.000933807052206248, -0.001354134758003056, -6.115249561844394e-05, -7.152555099310121e-07, -0.0020493713673204184, -0.006568271201103926, -0.0004555141495075077, -0.06577508896589279, -0.637539267539978, -0.15650218725204468, -0.013050029054284096, -2.002696055569686e-05, 0.0, -0.0004587313160300255, -0.054013147950172424, -0.06572731584310532, -0.00027021096320822835, -0.00036006642039865255, -1.6386709213256836, -1.311631441116333, -1.8297353982925415, -0.3588915169239044, -0.0017854715697467327, -0.0024336741771548986, -0.0006248190766200423, -0.041741982102394104, -0.02545151859521866, -0.30529674887657166, -0.011352349072694778, -0.23053158819675446, -8.49926145747304e-05, -2.3219265937805176, -0.008473987691104412, -0.12696699798107147, -0.001104817260056734, -0.7740908861160278, -0.07437963038682938, -0.0022159088402986526, -0.020969826728105545, -1.1920928244535389e-07, -9.500529267825186e-05, -1.0728830375228426e-06, -0.004627115558832884, -0.0017114529618993402, -0.00039200251922011375, -0.0015767297009006143, -0.0020078516099601984, -0.00024470672360621393, -3.6954195820726454e-05, -0.0040489607490599155, -0.06542308628559113, -0.00016616393986623734, -0.001090765930712223, -0.5907202363014221, -0.9852778911590576, -0.14931826293468475, -0.003966085612773895, -0.19318050146102905, -3.3378044463461265e-05, -0.033210091292858124, -0.00046754872892051935, -0.00084436044562608, -0.0002244459028588608, -0.04138484597206116, -7.629365427419543e-06, -7.795983401592821e-05, -3.4570634852570947e-06, -0.0009172523277811706, -0.00011777184408856556, -0.002955713542178273, -0.004512484651058912, -1.1920928244535389e-07, -0.00010394509445177391, -0.0007615765207447112, -8.344646857949556e-07, -6.198863957251888e-06, -2.753696753643453e-05, -0.00022718709078617394, -0.0702347531914711, -0.00015138434537220746, -0.0021799865644425154, -1.2185568809509277, -0.32535621523857117, -0.5235739350318909, -0.0009601273923180997, -0.06997668743133545, -0.006911655887961388, -0.2473909556865692, -0.0019064837833866477, -0.024572907015681267, -7.819823804311454e-05, -0.009868170134723186, -9.536288416711614e-05, -9.881961887003854e-05, -0.0006145734223537147, -3.099436753473128e-06, -3.3378546504536644e-06, -8.40390202938579e-05, -0.13338935375213623, -0.022431571036577225, -0.009097788482904434, -0.28928709030151367, -2.1219027985353023e-05, -0.3696805238723755, -0.011893785558640957, -0.000780754373408854, -0.0005361788207665086, -0.003739390056580305, -4.255681051290594e-05, -0.0002965487365145236, -0.00012492353562265635, -0.017852220684289932, -3.576278118089249e-07, -5.602820692729438e-06, -1.311301275563892e-06, -0.034718889743089676, -0.00030870441696606576, -0.0030889438930898905, -0.0006384003208950162, -0.004560783039778471, -0.3629808723926544, -0.00026055757189169526, -0.644397497177124, -0.015194854699075222, -0.0018868515035137534, -0.0014644861221313477, -0.0115737896412611, -0.01278136670589447, -0.07303781062364578, -9.727005090098828e-05, -0.0005327236140146852, -1.1920922133867862e-06, -0.00013374387344811112, -3.540453326422721e-05, -2.1815061700181104e-05, -4.410646579344757e-05], "finish_reason": "length"}], "metrics": {"energy": 1061.202454151154, "energy_per_token": 4.145322086527945, "time": 23.19084, "time_per_token": 0.09058921875}}
{"outputs": [{"text": "# Create the directory if it doesn't exist\n    if not os.path.exists(DIRECTORY):\n        os.makedirs(DIRECTORY)\n\n    # Initialize a list to store file paths\n    file_paths = []\n\n    # Split input_string into lines\n    lines = input_string.split('\\n')\n\n    # Loop through each line\n    for line in lines:\n        # Ignore empty lines\n        if line.strip() == \"\":\n            continue\n\n        # Hash the line using SHA256\n        hash_object = hashlib.sha256(line.encode())\n\n        # Get the first 10 characters of the hash\n        file_name = hash_object.hexdigest()[:10]\n\n        # Create the full file path\n        file_path = f\"{DIRECTORY}/{file_name}.txt\"\n\n        # Add the file path to the list\n        file_paths.append(file_path)\n\n        # Write the hash to the file\n        with open(file_path, 'w') as f:\n            f.", "tokens": ["#", " Create", " the", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "DI", "RECT", "ORY", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "DI", "RECT", "ORY", ")", "\n", "\n", "    ", "#", " Initialize", " a", " list", " to", " store", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "\n", "    ", "#", " Split", " input", "_", "string", " into", " lines", "\n", "    ", "lines", " =", " input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n", "\n", "    ", "#", " Loop", " through", " each", " line", "\n", "    ", "for", " line", " in", " lines", ":", "\n", "        ", "#", " Ign", "ore", " empty", " lines", "\n", "        ", "if", " line", ".", "strip", "()", " ==", " \"", "\":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Hash", " the", " line", " using", " SH", "A", "2", "5", "6", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "line", ".", "encode", "())", "\n", "\n", "        ", "#", " Get", " the", " first", " ", "1", "0", " characters", " of", " the", " hash", "\n", "        ", "file", "_", "name", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "[:", "1", "0", "]", "\n", "\n", "        ", "#", " Create", " the", " full", " file", " path", "\n", "        ", "file", "_", "path", " =", " f", "\"", "{", "DI", "RECT", "ORY", "}/{", "file", "_", "name", "}", ".", "txt", "\"", "\n", "\n", "        ", "#", " Add", " the", " file", " path", " to", " the", " list", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "        ", "#", " Write", " the", " hash", " to", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", "."], "logprobs": [-0.7260650396347046, -0.8194970488548279, -0.4246315658092499, -0.4572495222091675, -0.026567475870251656, -0.005228179972618818, -0.2439398318529129, -0.0010846928926184773, -3.9219088648678735e-05, -0.0044555203057825565, -0.02317090332508087, -0.001111485529690981, -0.3258815407752991, -0.0013624681159853935, -0.00032848684350028634, -1.5497195136049413e-06, -0.0003522014303598553, -3.528532761265524e-05, -0.07601401954889297, -0.00018666432879399508, -0.0006811682251282036, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00014256415306590497, -0.0013915151357650757, -0.002580172149464488, -0.006020505912601948, -7.033323527139146e-06, -0.16232967376708984, -7.271740287251305e-06, -7.152555099310121e-07, -0.000163541772053577, -0.00014041867689229548, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0026261862367391586, -0.0021347845904529095, -0.037298642098903656, -0.0007457336178049445, -0.4376576840877533, -1.653183102607727, -1.414631724357605, -0.08033815771341324, -0.053481053560972214, -0.12480513006448746, -0.5796698331832886, -0.012891053222119808, -0.0986475795507431, -0.00015746307326480746, -0.035977400839328766, -0.001029557315632701, -0.006041834596544504, -0.003460373729467392, -0.0025373664684593678, -0.00031728477915748954, -0.017628299072384834, -0.0001722425949992612, -0.02083919197320938, -1.1501673460006714, -2.779911518096924, -0.5362295508384705, -0.001940036192536354, -0.11977391690015793, -0.06468641757965088, -0.6257414221763611, -0.00010287232726113871, -0.11405209451913834, -0.0031495511066168547, -0.006439175456762314, -5.400034933700226e-05, -8.34461570775602e-06, -4.6132929128361866e-05, -0.29254207015037537, -0.6314960718154907, -7.772143726469949e-05, -3.3378044463461265e-05, -4.792098479811102e-05, -0.001567802974022925, -0.009604908525943756, -0.00015245705435518175, -0.01795678585767746, -1.9184503555297852, -0.17657192051410675, -0.3426814079284668, -0.09693630039691925, -0.2200145125389099, -2.2172682292875834e-05, -0.0008475763606838882, -0.010494287125766277, -0.0012061471352353692, -0.00031013446277938783, -9.011816291604191e-05, -0.00011240804451517761, -0.026801705360412598, -0.21485169231891632, -0.8819124698638916, -0.0005029367166571319, -0.007582218386232853, -0.0016769407084211707, -0.01124685537070036, -6.758938252460212e-05, -0.0008849757141433656, -1.5704433917999268, -0.46794044971466064, -0.0009303532424382865, -0.18038465082645416, -0.06259980797767639, -0.9476807117462158, -0.0003466005437076092, -0.0046503725461661816, -0.0007024919614195824, -0.003660052316263318, -0.0013388964580371976, -0.04427314177155495, -0.0007126175914891064, -0.0027411526534706354, -0.38528382778167725, -0.030987108126282692, -0.06876695156097412, -0.06307166814804077, -0.03229279816150665, -7.593343616463244e-05, -0.015222328715026379, -7.486063259420916e-05, -3.4570634852570947e-06, -0.07729116827249527, -5.8887653722194955e-05, -0.7953810095787048, -0.07753201574087143, -0.20314140617847443, -0.0002469711471349001, -5.709961988031864e-05, -4.6491513785440475e-06, -1.311301275563892e-06, -0.001642784452997148, -0.0009552444680593908, -4.7444173105759546e-05, -1.1920928244535389e-07, -0.025022832676768303, -0.005742480978369713, -0.00036149643710814416, -0.25504907965660095, -0.5950791239738464, -0.0017551269847899675, -1.0341582298278809, -0.00033682872890494764, -0.0003594706067815423, -0.8038086295127869, -0.024685842916369438, -0.09772343933582306, -0.009210950694978237, -0.005040556658059359, -0.001178999780677259, -0.00947006419301033, -0.027867581695318222, -0.001157209975644946, -0.028935682028532028, -0.5183930397033691, -6.758938252460212e-05, -2.4440526962280273, -0.002787634963169694, -0.5324183106422424, -0.02569739706814289, -0.017906786873936653, -0.0003357561945449561, -7.748573807475623e-06, -2.95634672511369e-05, -0.002342934487387538, -6.246371776796877e-05, 0.0, -0.009523673914372921, -0.0015437601832672954, -0.0019449143437668681, -0.0004067785630468279, -0.0015630420530214906, -0.19030754268169403, -0.015333390794694424, -0.00022373080719262362, -0.0008007657015696168, -0.7869961261749268, -0.13894817233085632, -2.5313265323638916, -0.06328273564577103, -0.008237789385020733, -0.15523183345794678, -5.721882189391181e-05, -0.05370420590043068, -0.0006779517862014472, -0.0007334641413763165, -0.0001679517881711945, -2.0495564937591553, -0.033094074577093124, -0.005389802157878876, -0.0030189435929059982, -1.1205610462639015e-05, -2.0265558760002023e-06, -0.0018242637161165476, -0.00010954733443213627, -1.5497195136049413e-06, -4.887569048150908e-06, -0.0027795510832220316, -1.2278481335670222e-05, -0.00016556799528189003, -3.2543604902457446e-05, -0.00037496211007237434, -0.04808994382619858, -0.0001858300092862919, -0.002378612756729126, -1.9701544046401978, -0.038228683173656464, -0.0026289208326488733, -0.0058275796473026276, -0.00025507534155622125, -0.00519865145906806, -0.01173380110412836, -0.04850159212946892, -2.253030106658116e-05, -0.0004953111056238413, -2.3841855067985307e-07, -7.748573807475623e-06, -3.8265450712060556e-05, -5.447716102935374e-05, -5.566918844124302e-05, -0.0008336406317539513, -4.529942543740617e-06, -0.00010442188795423135, -0.00016878610767889768, -9.393251093570143e-05, -0.0004576589271891862, -0.04880204051733017, -0.0020019030198454857, -0.5612812638282776, -0.0033649748656898737, -0.9320017695426941, -0.023972421884536743, -0.058841682970523834, -0.016924943774938583, -0.023890484124422073, -0.0001528146385680884, -0.005644573364406824, -2.5629668016335927e-05, -9.011816291604191e-05, -0.001683605252765119, -9.536738616588991e-07, -9.179073458653875e-06, -0.00015054999676067382, -0.5264860987663269, -0.108660988509655, -0.08730105310678482, -7.83174327807501e-05, -1.3694286346435547, -0.003493636380881071, -0.0006294653285294771, -0.000918681500479579, -0.009709158912301064, -1.07287787614041e-05], "finish_reason": "length"}], "metrics": {"energy": 1025.1561636867511, "energy_per_token": 4.004516264401372, "time": 23.152063, "time_per_token": 0.09043774609375}}
