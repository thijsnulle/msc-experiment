{"outputs": [{"text": " re.compile(", "tokens": [" re", ".", "compile", "(", "\n"], "logprobs": [-0.9925040006637573, -0.0001438752660760656, -0.0010082405060529709, -0.03035704232752323, -1.0838642120361328], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [list(map(lambda x: x.strip(), match)) for match in matches]", "tokens": [" [", "list", "(", "map", "(", "lambda", " x", ":", " x", ".", "strip", "()", ",", " match", "))", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -3.6762866973876953, -0.00888324249535799, -0.8626112341880798, -0.0019472938729450107, -0.42166587710380554, -0.16986897587776184, -0.004106304608285427, -0.07274078577756882, -0.03705146908760071, -0.03948851674795151, -0.023575585335493088, -0.25352275371551514, -0.4679444134235382, -0.19145992398262024, -0.02121015638113022, -0.00022003613412380219, -0.00018618757894728333, -0.0004152389301452786, -0.009013913571834564, -0.007130295038223267], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append([", "tokens": ["append", "([", "\n"], "logprobs": [-0.002999927382916212, -1.917665958404541, -2.2768442630767822], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -0.1797388792037964, -0.0007213136414065957, -0.015560056082904339], "finish_reason": "stop"}, {"text": "barplot(y=\"Age\", data=df, color=\"#2A4D78\")", "tokens": ["bar", "plot", "(", "y", "=", "\"", "Age", "\"", ",", " data", "=", "df", ",", " color", "=", "\"", "#", "2", "A", "4", "D", "7", "8", "\"", ")", "\n"], "logprobs": [-3.7262496948242188, -0.0012081712484359741, -0.011555053293704987, -3.0755295753479004, -0.05900003761053085, -0.18993909657001495, -0.45177215337753296, -0.0003363520372658968, -0.00038723601028323174, -1.111746072769165, -0.0014362744987010956, -0.0010432521812617779, -0.5430467128753662, -1.8769510984420776, -0.18394024670124054, -0.05230005830526352, -1.6043238639831543, -2.638801097869873, -3.8339619636535645, -2.7927188873291016, -3.426978588104248, -1.1914575099945068, -2.8548519611358643, -0.014660841785371304, -0.39537176489830017, -0.025523103773593903], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.32927510142326355, -0.006495553068816662, -0.04164639115333557], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.012865515425801277], "finish_reason": "stop"}], "metrics": {"energy": 175.88641663551329, "energy_per_token": 1.7243766336815027, "time": 7.345364, "time_per_token": 0.07201337254901961}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "countplot(x=\"Age\", data=df)", "tokens": ["count", "plot", "(", "x", "=", "\"", "Age", "\"", ",", " data", "=", "df", ")", "\n"], "logprobs": [-2.089177131652832, -2.5510462364763953e-05, -0.0015285247936844826, -0.37495914101600647, -0.10388737171888351, -0.16499489545822144, -0.007062589284032583, -9.858122211880982e-05, -0.0004366874636616558, -0.12100549787282944, -0.0010737375123426318, -0.0010935047175735235, -0.5495450496673584, -0.02233854867517948], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3691018223762512, -0.0053682224825024605, -0.06241883710026741], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010696458630263805, -0.6868292093276978], "finish_reason": "stop"}], "metrics": {"energy": 132.4178924674988, "energy_per_token": 1.1221855293855831, "time": 6.73534, "time_per_token": 0.057079152542372884}}
{"outputs": [{"text": " re.compile(", "tokens": [" re", ".", "compile", "(", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.0595202445983887], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [tuple(map(lambda x: x.strip(), match.split(\",\"))) for match in matches]", "tokens": [" [", "tuple", "(", "map", "(", "lambda", " x", ":", " x", ".", "strip", "()", ",", " match", ".", "split", "(", "\"", ",", "\"", ")))", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.6055030822753906, -0.03364311903715134, -3.0109663009643555, -0.003121030516922474, -0.5810659527778625, -0.16795772314071655, -0.0038307157810777426, -0.10224639624357224, -0.03372322767972946, -0.02436002716422081, -0.02306012623012066, -0.23071323335170746, -0.6133334636688232, -1.181755781173706, -0.07708911597728729, -0.16737867891788483, -0.07559044659137726, -0.002046397188678384, -0.49054664373397827, -0.010818873532116413, -0.04562869295477867, -0.000192504478036426, -0.000125281119835563, -0.0003409996279515326, -0.008123925887048244, -0.005583524238318205], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append([match[0], match[1], match[2], match[3]])", "tokens": ["append", "([", "match", "[", "0", "]", ",", " match", "[", "1", "]", ",", " match", "[", "2", "]", ",", " match", "[", "3", "]]", ")", "\n"], "logprobs": [-0.002999927382916212, -1.917665958404541, -0.3779280483722687, -0.01113651692867279, -0.029964350163936615, -0.015304042026400566, -0.10789332538843155, -0.014175084419548512, -0.0003401654539629817, -0.0011096993694081903, -0.0008928364841267467, -0.013778102584183216, -0.2704616189002991, -0.00020358874462544918, -0.0019395602867007256, -0.0019259967375546694, -0.016133824363350868, -0.0009552444680593908, -0.0011979315895587206, -0.0012444854946807027, -0.025928346440196037, -0.0002172949316445738, -0.003265526844188571], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -0.1797388792037964, -0.0007213136414065957, -0.015560056082904339], "finish_reason": "stop"}, {"text": "displot(df, x=\"Age\", kde=True, height=4)", "tokens": ["dis", "plot", "(", "df", ",", " x", "=", "\"", "Age", "\"", ",", " k", "de", "=", "True", ",", " height", "=", "4", ")", "\n"], "logprobs": [-2.3940906524658203, -0.0002980979916173965, -0.001260201446712017, -0.3791682720184326, -1.9723942279815674, -0.045626185834407806, -0.11035425961017609, -0.006792668718844652, -0.006204510107636452, -4.207999518257566e-05, -0.5351531505584717, -1.1224243640899658, -0.0018711454467847943, -0.0008076743106357753, -0.07164780795574188, -1.0967105627059937, -2.19293212890625, -0.0011993603548035026, -1.4164705276489258, -0.5266467928886414, -0.026135781779885292], "finish_reason": "stop"}, {"text": "title(\"Age Distribution\")", "tokens": ["title", "(", "\"", "Age", " Distribution", "\"", ")", "\n"], "logprobs": [-1.9221134185791016, -0.0363810732960701, -0.016512401401996613, -0.13588404655456543, -0.14806146919727325, -0.031070547178387642, -0.01240478828549385, -0.04721975326538086], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.012865515425801277, -0.6820584535598755], "finish_reason": "stop"}], "metrics": {"energy": 232.51723262405386, "energy_per_token": 1.8024591676283246, "time": 9.405792, "time_per_token": 0.07291311627906977}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " pd.to_numeric(df[\"Age\"])", "tokens": [" pd", ".", "to", "_", "numeric", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.5960842370986938, -0.00032610344351269305, -0.012900938279926777, -6.794906312279636e-06, -0.0002746204845607281, -0.0006256530177779496, -0.0023618440609425306, -0.05656912922859192, -0.0015150746330618858, -3.58813522325363e-05, -3.2066785934148356e-05, -0.1322253793478012, -0.02519976906478405], "finish_reason": "stop"}, {"text": "countplot(df[\"Age\"], ax=plt.gca())", "tokens": ["count", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " ax", "=", "plt", ".", "g", "ca", "())", "\n"], "logprobs": [-2.1220102310180664, -2.3483953555114567e-05, -0.0013521108776330948, -2.16019868850708, -0.11067478358745575, -0.0023384150117635727, -0.0019199287053197622, -1.1801649634435307e-05, -0.9434911608695984, -0.01913352683186531, -1.6523157358169556, -0.03216340020298958, -0.06817205995321274, -0.0002388668799540028, -1.0426812171936035, -0.002854560734704137, -0.14927750825881958, -0.018166817724704742], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.35896170139312744, -0.005312729626893997, -0.044856660068035126], "finish_reason": "stop"}, {"text": " df<|endoftext|>import requests", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "import", " requests", "\n"], "logprobs": [-0.010914507322013378, -1.0150771141052246, -4.291525328881107e-06, -1.311301275563892e-06, -3.6477376852417365e-05, -0.00015317220822907984, -0.05298270657658577, -1.1646031141281128, -4.326345443725586, -0.03437352180480957], "finish_reason": "stop"}], "metrics": {"energy": 199.51967958641046, "energy_per_token": 1.546664182840391, "time": 8.612456, "time_per_token": 0.06676322480620155}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(match)", "tokens": ["append", "(", "match", ")", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.3606841564178467, -0.28895071148872375, -0.0023749261163175106], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.0054294029250741005, -0.005302650388330221, -0.00351406866684556, -0.05588238686323166, -0.027146102860569954, -0.14068996906280518, -0.018192805349826813, -0.09661425650119781, -0.0028257938101887703, -2.3841855067985307e-07, -0.006250594276934862, -2.0265558760002023e-06, -6.794906312279636e-06, -3.576278118089249e-07, -0.010164638981223106, -0.015543506480753422], "finish_reason": "stop"}, {"text": " df[\"Age\"].apply(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "apply", "(", "int", ")", "\n"], "logprobs": [-0.2173779308795929, -0.036637723445892334, -0.00249396450817585, -4.5060096454108134e-05, -3.6238969187252223e-05, -0.0006301801186054945, -0.0018653151346370578, -1.9220566749572754, -0.0006156456656754017, -1.1156551837921143, -0.0014332984574139118, -0.03362848237156868], "finish_reason": "stop"}, {"text": "histplot(x=df[\"Age\"])", "tokens": ["hist", "plot", "(", "x", "=", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.083329200744629, -0.0003002431185450405, -0.0003713871701620519, -1.5858871936798096, -0.06678017228841782, -1.6938574314117432, -0.07747498154640198, -0.0016046992968767881, -0.0002812943421304226, -1.0013530300057027e-05, -0.7043309211730957, -0.016336383298039436], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3484134376049042, -0.005967063829302788, -0.054697226732969284], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.012697681784629822, -0.6381842494010925], "finish_reason": "stop"}], "metrics": {"energy": 125.46656998538971, "energy_per_token": 1.218122038693104, "time": 6.3073606, "time_per_token": 0.06123651067961165}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [list(map(str.strip, match)) for match in matches]", "tokens": [" [", "list", "(", "map", "(", "str", ".", "strip", ",", " match", "))", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -3.6762866973876953, -0.00888324249535799, -0.8626112341880798, -0.0019472938729450107, -1.1607654094696045, -0.020819460973143578, -0.006865601986646652, -0.0012287693098187447, -0.3042174279689789, -0.05996120721101761, -0.007134911138564348, -0.00015817821258679032, -0.00010668662434909493, -0.0007527616689912975, -0.009098970331251621, -0.008651277050375938], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].apply(lambda x: int(x))", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "apply", "(", "lambda", " x", ":", " int", "(", "x", "))", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -1.6212635040283203, -0.0006180283380672336, -0.5454772710800171, -0.02303146757185459, -0.001354491920210421, -0.2217562347650528, -0.0003477922291494906, -0.01744919829070568, -0.5361252427101135, -0.04219761863350868], "finish_reason": "stop"}, {"text": "histplot(df[\"Age\"], kde=False)", "tokens": ["hist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " k", "de", "=", "False", ")", "\n"], "logprobs": [-1.107435941696167, -0.0003023882454726845, -0.000436925794929266, -0.6472855806350708, -0.14206922054290771, -0.0018961322493851185, -8.415821503149346e-05, -6.318072337307967e-06, -0.7753404974937439, -0.00499690743163228, -0.37309521436691284, -0.03118356131017208, -0.0010927902767434716, -1.0007519721984863, -0.6348390579223633, -0.020176995545625687], "finish_reason": "stop"}, {"text": "xlabel(\"Age\")", "tokens": ["xlabel", "(", "\"", "Age", "\"", ")", "\n"], "logprobs": [-2.691603660583496, -0.0681641474366188, -0.0069843437522649765, -0.021126125007867813, -0.03838712349534035, -0.01019673515111208, -0.013652403838932514], "finish_reason": "stop"}, {"text": " df<|endoftext|>from selenium import webdriver", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "from", " sel", "enium", " import", " web", "driver", "\n"], "logprobs": [-0.010657301172614098, -1.0524944067001343, -4.529942543740617e-06, -1.1920922133867862e-06, -3.45700973412022e-05, -0.00019238528329879045, -0.0664496049284935, -1.3199374675750732, -4.855016708374023, -0.00300444383174181, -0.12893079221248627, -0.008615821599960327, -6.985420623095706e-05, -0.005189282353967428], "finish_reason": "stop"}], "metrics": {"energy": 205.36742806053155, "energy_per_token": 1.3249511487776229, "time": 9.654871, "time_per_token": 0.062289490322580646}}
{"outputs": [{"text": " re.compile(\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)\")", "tokens": [" re", ".", "compile", "(", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.2389922142028809, -0.07592497020959854, -0.024916909635066986, -0.009446565061807632, -0.012202373705804348, -0.013847353868186474, -0.0003880701260641217, -0.0014673429541289806, -0.000474936212413013, -0.009963540360331535, -0.004312145058065653, -0.000697965151630342, -0.0002244459028588608, -0.00016044282529037446, -5.721882189391181e-05, -0.0002335037279408425, -8.618460560683161e-05, -0.0007651500636711717, -0.0003768687602132559, -0.003385766176506877, -0.0005486889858730137, -0.002018677769228816, -4.565611743601039e-05, -0.0002739054325502366, -0.00010132275929208845, -0.00113589596003294, -0.0016927688848227262, -0.00029345019720494747, -4.5536911784438416e-05, -0.0014347269898280501, -0.004153198096901178, -3.2605950832366943, -0.22319599986076355, -0.017683112993836403], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [m for m in matches if m is not None]", "tokens": [" [", "m", " for", " m", " in", " matches", " if", " m", " is", " not", " None", "]", "\n"], "logprobs": [-0.7594162821769714, -3.209461212158203, -2.0114314556121826, -0.02118448168039322, -0.004102386999875307, -0.010915215127170086, -1.045236587524414, -0.2869853675365448, -2.521688222885132, -0.0008950994815677404, -0.004041837062686682, -0.017378438264131546, -0.017310602590441704], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(\"int\")", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "\"", "int", "\"", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -1.9921940565109253, -0.06562148779630661, -0.3853151202201843, -0.0022716925013810396, -0.010227297432720661], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"], kde=False)", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " k", "de", "=", "False", ")", "\n"], "logprobs": [-1.015769124031067, -0.0003407612966839224, -0.0038531599566340446, -0.01734071411192417, -0.06482765078544617, -0.002144420053809881, -6.23445157543756e-05, -6.437280717364047e-06, -0.6078438758850098, -0.03101542219519615, -0.9665071964263916, -0.0008214913541451097, -0.002378018107265234, -0.0964110866189003, -0.7596560716629028, -0.014992651529610157], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3691018223762512, -0.0053682224825024605, -0.06241883710026741], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010696458630263805, -0.6868292093276978], "finish_reason": "stop"}], "metrics": {"energy": 156.2068142127991, "energy_per_token": 1.174487324908264, "time": 7.5815406, "time_per_token": 0.057004064661654134}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [match for match in matches]", "tokens": [" [", "match", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -1.734603762626648, -1.457526445388794, -0.022493582218885422, -0.0011597104603424668, -0.003388260956853628, -0.5218239426612854, -0.012740878388285637], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({", "tokens": ["append", "({", "\n"], "logprobs": [-0.002999927382916212, -1.8990635871887207, -0.8051724433898926], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(\"int64\")", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "\"", "int", "6", "4", "\"", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -2.082012176513672, -0.05969935283064842, -1.4055958986282349, -4.887569048150908e-06, -1.8715683836489916e-05, -0.002466614358127117, -0.014111028052866459], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.0200939178466797, -0.00026806574896909297, -0.0035896170884370804, -0.017687447369098663, -0.057979222387075424, -0.0016683719586580992, -5.590759246842936e-05, -7.033323527139146e-06, -0.8182703256607056, -0.03139060363173485], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.32927510142326355, -0.006495553068816662, -0.04164639115333557], "finish_reason": "stop"}, {"text": " df<|endoftext|>\"\"\"", "tokens": [" df", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.012865515425801277, -1.164016842842102, -5.602820692729438e-06, -1.1920922133867862e-06, -3.981510963058099e-05, -0.0001726001501083374, -2.867669105529785, -0.006623694207519293, -0.001794396317563951, -0.0004689785710070282, -0.16065573692321777], "finish_reason": "stop"}], "metrics": {"energy": 155.4851674404144, "energy_per_token": 1.2957097286701198, "time": 6.9437184, "time_per_token": 0.05786432}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [(name.strip(), email.strip(), age.strip(), country.strip()) for name, email, age, country in matches]", "tokens": [" [(", "name", ".", "strip", "()", ",", " email", ".", "strip", "()", ",", " age", ".", "strip", "()", ",", " country", ".", "strip", "())", " for", " name", ",", " email", ",", " age", ",", " country", " in", " matches", "]", "\n"], "logprobs": [-3.644691228866577, -1.6327208280563354, -0.905582845211029, -0.018195264041423798, -0.010570371523499489, -0.018864504992961884, -0.02333151362836361, -0.019156333059072495, -0.001166616566479206, -0.0009934734553098679, -0.007659944240003824, -0.6766977310180664, -0.03943156450986862, -0.0013672299683094025, -0.002173920162022114, -0.007323798723518848, -0.004067838191986084, -0.0023494756314903498, -0.0002273062855238095, -0.014972805045545101, -0.20658299326896667, -0.09757715463638306, -0.0001445904199499637, -0.00499916123226285, -9.095255518332124e-05, -0.002433198504149914, -0.00024339574156329036, -0.0021376395598053932, -0.0065362947061657906, -0.003490904113277793, -0.006456112489104271, -0.004042193293571472], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({", "tokens": ["append", "({", "\n"], "logprobs": [-0.002999927382916212, -1.8990635871887207, -0.8051724433898926], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -0.1797388792037964, -0.0007213136414065957, -0.015560056082904339], "finish_reason": "stop"}, {"text": "barplot(x=\"Age\", y=\"Name\", data=df)", "tokens": ["bar", "plot", "(", "x", "=", "\"", "Age", "\"", ",", " y", "=", "\"", "Name", "\"", ",", " data", "=", "df", ")", "\n"], "logprobs": [-3.7262496948242188, -0.0012081712484359741, -0.011555053293704987, -0.30575984716415405, -0.07212252169847488, -0.042758479714393616, -0.5594574809074402, -0.0004999579978175461, -0.00020096666412428021, -0.1031298041343689, -0.016075992956757545, -0.03464427590370178, -1.4033738374710083, -0.00018273114983458072, -0.0002411313180346042, -0.026572002097964287, -0.0014965059235692024, -0.0015892268856987357, -0.775456964969635, -0.021596500650048256], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.32927510142326355, -0.006495553068816662, -0.04164639115333557], "finish_reason": "stop"}, {"text": " df<|endoftext|>#!/usr/bin/env python", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.012865515425801277, -1.164016842842102, -5.602820692729438e-06, -1.1920922133867862e-06, -3.981510963058099e-05, -0.0001726001501083374, -0.062434177845716476, -1.2423386573791504, -1.059447169303894, -0.04589812457561493, -0.112855464220047, -0.00017855956684798002, -0.0024341498501598835, -0.0003859252028632909, -0.05261294171214104, -0.005540491081774235, -0.6310553550720215], "finish_reason": "stop"}], "metrics": {"energy": 233.13445471668246, "energy_per_token": 1.4944516327992465, "time": 9.656299, "time_per_token": 0.06189935256410257}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [re.split(r\", +\", x) for x in matches]", "tokens": [" [", "re", ".", "split", "(", "r", "\"", ",", " +", "\"", ",", " x", ")", " for", " x", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.9043312072753906, -0.01281184982508421, -0.6343444585800171, -0.06909842044115067, -0.19987252354621887, -0.19012707471847534, -0.12193834781646729, -3.3663883209228516, -0.0976528450846672, -0.0003299168893136084, -2.7439212799072266, -0.26725056767463684, -0.050334785133600235, -0.0004962643142789602, -0.00031680811662226915, -0.0008774721063673496, -0.013104035519063473, -0.019462570548057556], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append([match[0], match[1], match[2], match[3]])", "tokens": ["append", "([", "match", "[", "0", "]", ",", " match", "[", "1", "]", ",", " match", "[", "2", "]", ",", " match", "[", "3", "]]", ")", "\n"], "logprobs": [-0.002999927382916212, -1.917665958404541, -0.3779280483722687, -0.01113651692867279, -0.029964350163936615, -0.015304042026400566, -0.10789332538843155, -0.014175084419548512, -0.0003401654539629817, -0.0011096993694081903, -0.0008928364841267467, -0.013778102584183216, -0.2704616189002991, -0.00020358874462544918, -0.0019395602867007256, -0.0019259967375546694, -0.016133824363350868, -0.0009552444680593908, -0.0011979315895587206, -0.0012444854946807027, -0.025928346440196037, -0.0002172949316445738, -0.003265526844188571], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -0.1797388792037964, -0.0007213136414065957, -0.015560056082904339], "finish_reason": "stop"}, {"text": "histplot(df[\"Age\"])", "tokens": ["hist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-0.9954604506492615, -0.0002874914789572358, -0.0003951007383875549, -0.6638173460960388, -0.13832426071166992, -0.001849489752203226, -8.5588610090781e-05, -6.794906312279636e-06, -0.671576201915741, -0.034027572721242905], "finish_reason": "stop"}, {"text": "xlabel(\"Age\")", "tokens": ["xlabel", "(", "\"", "Age", "\"", ")", "\n"], "logprobs": [-2.783270835876465, -0.05654659867286682, -0.0062137506902217865, -0.0194386038929224, -0.03957182541489601, -0.011116240173578262, -0.011030293069779873], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011247090995311737, -0.7666610479354858], "finish_reason": "stop"}], "metrics": {"energy": 195.287981212616, "energy_per_token": 1.3752674733282817, "time": 9.019853, "time_per_token": 0.06352009154929578}}
{"outputs": [{"text": " re.compile(\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\")", "tokens": [" re", ".", "compile", "(", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")(", "$", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.2389922142028809, -0.07592497020959854, -0.024916909635066986, -0.009446565061807632, -0.012202373705804348, -0.013847353868186474, -0.0003880701260641217, -0.0014673429541289806, -0.000474936212413013, -0.009963540360331535, -0.004312145058065653, -0.000697965151630342, -0.0002244459028588608, -0.00016044282529037446, -5.721882189391181e-05, -0.0002335037279408425, -8.618460560683161e-05, -0.0007651500636711717, -0.0003768687602132559, -0.003385766176506877, -0.0005486889858730137, -0.002018677769228816, -4.565611743601039e-05, -0.0002739054325502366, -0.00010132275929208845, -0.00113589596003294, -0.0016927688848227262, -0.00029345019720494747, -4.5536911784438416e-05, -0.0014347269898280501, -0.004153198096901178, -1.3388516902923584, -1.888802170753479, -0.0060889930464327335, -0.0010306290350854397, -0.00984987337142229, -0.021285081282258034, -0.02145194634795189], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7594162821769714, -2.017303466796875], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({\"Name\": match[0], \"Email\": match[1], \"Age\": match[2], \"Country\": match[3]})", "tokens": ["append", "(", "{\"", "Name", "\":", " match", "[", "0", "]", ",", " \"", "Email", "\":", " match", "[", "1", "]", ",", " \"", "Age", "\":", " match", "[", "2", "]", ",", " \"", "Country", "\":", " match", "[", "3", "]", "})", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.8250072002410889, -0.007999643683433533, -0.001086002797819674, -0.011834530159831047, -0.0008990298374556005, -0.0023896729107946157, -0.0008816407644189894, -0.10458649694919586, -0.14140287041664124, -0.0016808680957183242, -0.00014184899919200689, -0.001947531825862825, -5.173549288883805e-05, -0.0004412154376041144, -0.00019107422849629074, -0.006114704068750143, -0.02278691530227661, -0.0002637753786984831, -0.0002019201492657885, -0.11676622182130814, -0.0006236277404241264, -0.0012368656462058425, -0.00045468006283044815, -0.0016531385481357574, -0.008201373741030693, -0.0004532501916401088, -9.810443589231e-05, -0.0018374717328697443, -0.00026079590315930545, -0.000764792668633163, -0.0017394188325852156, -0.046861838549375534, -0.0010929093696177006], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].apply(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "apply", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -1.6212635040283203, -0.0006180283380672336, -1.1267837285995483, -0.0016479019541293383, -0.02511746622622013], "finish_reason": "stop"}, {"text": "barplot(x=df.Age.value_counts(sort=False).index, y=df.Age.value_counts(sort=False).values,", "tokens": ["bar", "plot", "(", "x", "=", "df", ".", "Age", ".", "value", "_", "counts", "(", "sort", "=", "False", ")", ".", "index", ",", " y", "=", "df", ".", "Age", ".", "value", "_", "counts", "(", "sort", "=", "False", ")", ".", "values", ",", "\n"], "logprobs": [-3.6658408641815186, -0.0008734225411899388, -0.010928303003311157, -0.386062353849411, -0.06332939863204956, -3.029897689819336, -2.0069260597229004, -1.1108677387237549, -1.4388326406478882, -1.9373046159744263, -6.23445157543756e-05, -0.0016123164677992463, -2.3037235736846924, -1.7324730157852173, -0.0035993570927530527, -0.2742578983306885, -0.041875746101140976, -0.07730970531702042, -0.06590311229228973, -0.08556618541479111, -0.1316681206226349, -0.005134135484695435, -0.0052934009581804276, -0.0028377999551594257, -0.0010012142593041062, -0.0007892115972936153, -0.0011308948742225766, -0.0017867805436253548, -0.00043394684325903654, -0.6532706022262573, -0.006002376321703196, -0.00011932138295378536, -0.00442027160897851, -0.5137320756912231, -1.733132243156433, -0.0684886947274208, -0.6376157999038696, -2.6207523345947266], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3444069027900696, -0.004664255306124687, -0.050419121980667114], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011533842422068119, -0.6409426331520081], "finish_reason": "stop"}], "metrics": {"energy": 190.6623741607666, "energy_per_token": 1.1625754521997964, "time": 8.840813, "time_per_token": 0.053907396341463416}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({\"Name\": match[0], \"Email\": match[1], \"Age\": match[2], \"Country\": match[3]})", "tokens": ["append", "(", "{\"", "Name", "\":", " match", "[", "0", "]", ",", " \"", "Email", "\":", " match", "[", "1", "]", ",", " \"", "Age", "\":", " match", "[", "2", "]", ",", " \"", "Country", "\":", " match", "[", "3", "]", "})", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.8250072002410889, -0.007999643683433533, -0.001086002797819674, -0.011834530159831047, -0.0008990298374556005, -0.0023896729107946157, -0.0008816407644189894, -0.10458649694919586, -0.14140287041664124, -0.0016808680957183242, -0.00014184899919200689, -0.001947531825862825, -5.173549288883805e-05, -0.0004412154376041144, -0.00019107422849629074, -0.006114704068750143, -0.02278691530227661, -0.0002637753786984831, -0.0002019201492657885, -0.11676622182130814, -0.0006236277404241264, -0.0012368656462058425, -0.00045468006283044815, -0.0016531385481357574, -0.008201373741030693, -0.0004532501916401088, -9.810443589231e-05, -0.0018374717328697443, -0.00026079590315930545, -0.000764792668633163, -0.0017394188325852156, -0.046861838549375534, -0.0010929093696177006], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -2.6214687824249268, -0.008197826333343983], "finish_reason": "stop"}, {"text": " pd.to_numeric(df[\"Age\"])", "tokens": [" pd", ".", "to", "_", "numeric", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.620631217956543, -0.00028761065914295614, -0.011936899274587631, -6.6756979322235566e-06, -0.000300958170555532, -0.0006042085005901754, -0.0021157516166567802, -0.049773167818784714, -0.0018408034229651093, -3.504691630951129e-05, -2.8609820219571702e-05, -0.14868415892124176, -0.02104080095887184], "finish_reason": "stop"}, {"text": "histplot(df[\"Age\"], kde=False)", "tokens": ["hist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " k", "de", "=", "False", ")", "\n"], "logprobs": [-0.9949387907981873, -0.0003064401389565319, -0.0003810394846368581, -0.6444913148880005, -0.16115234792232513, -0.0016327871708199382, -8.654219709569588e-05, -7.033323527139146e-06, -0.7739017605781555, -0.0051564318127930164, -0.3796328902244568, -0.028010169044137, -0.0010409895330667496, -0.9530969858169556, -0.6291325688362122, -0.01970723643898964], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.32900506258010864, -0.00590153131633997, -0.054827235639095306], "finish_reason": "stop"}, {"text": " df<|endoftext|>from collections import defaultdict", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "from", " collections", " import", " default", "dict", "\n"], "logprobs": [-0.011615974828600883, -1.030498743057251, -3.4570634852570947e-06, -1.0728830375228426e-06, -4.51792984677013e-05, -0.00013195598148740828, -0.05676467344164848, -1.3204718828201294, -2.7742154598236084, -0.009381023235619068, -0.9484591484069824, -9.298280929215252e-06, -0.09123154729604721], "finish_reason": "stop"}], "metrics": {"energy": 166.69498224639884, "energy_per_token": 1.1822339166411264, "time": 8.204581, "time_per_token": 0.05818851773049645}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.finditer(pattern, text)", "tokens": [" re", ".", "find", "iter", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -1.9888652563095093, -5.1020273531321436e-05, -0.0019112430745735765, -0.0002711643755901605, -0.005222962237894535, -0.0934392511844635, -0.005773771554231644], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.1327178478240967, -0.0013722298899665475], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.003203381784260273, -0.00036352223833091557, -0.00043752157944254577, -0.0008058876264840364], "finish_reason": "stop"}, {"text": "append({COLUMN_NAMES[0]: match[0],", "tokens": ["append", "({", "COL", "UM", "N", "_", "N", "AMES", "[", "0", "]:", " match", "[", "0", "]", ",", "\n"], "logprobs": [-0.0025290430057793856, -1.768480658531189, -0.7422537803649902, -4.60137271147687e-05, -0.0022150760050863028, -2.1457441107486375e-05, -0.0007270314963534474, -3.3378546504536644e-06, -0.0010639727115631104, -0.27248069643974304, -0.011923824436962605, -0.022493932396173477, -0.0012900849105790257, -0.005394900683313608, -0.0016808680957183242, -0.12231837213039398, -0.9240781664848328], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.004818375688046217, -0.004026995971798897, -0.0032978456001728773, -0.06285731494426727, -0.023866506293416023, -0.10833948850631714, -0.01545218750834465, -0.09534596651792526, -0.0025908732786774635, -2.3841855067985307e-07, -0.0045041777193546295, -1.7881377516459906e-06, -5.8412379075889476e-06, -4.768370445162873e-07, -0.009590976871550083, -0.017535297200083733], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(\"int\")", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "\"", "int", "\"", ")", "\n"], "logprobs": [-0.22496026754379272, -0.03541421890258789, -0.0017406088300049305, -4.1960789531003684e-05, -2.95634672511369e-05, -0.0006266061100177467, -0.002017844934016466, -0.37157872319221497, -2.3007127310847864e-05, -0.01377316378057003, -2.2758262157440186, -0.058824822306632996, -0.42946240305900574, -0.0026500842068344355, -0.011290468275547028], "finish_reason": "stop"}, {"text": "histplot(data=df, x=\"Age\")", "tokens": ["hist", "plot", "(", "data", "=", "df", ",", " x", "=", "\"", "Age", "\"", ")", "\n"], "logprobs": [-1.0055644512176514, -0.0003302744007669389, -0.00039593485416844487, -1.5165107250213623, -0.04334699362516403, -0.009284297935664654, -0.1420024037361145, -0.04142693802714348, -0.06581448763608932, -0.008012651465833187, -0.001430679694749415, -3.0636318115284666e-05, -0.7544347643852234, -0.047891102731227875], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3267201781272888, -0.0058996351435780525, -0.04472227022051811], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.013286151923239231], "finish_reason": "stop"}], "metrics": {"energy": 184.84699271106717, "energy_per_token": 1.5403916059255598, "time": 7.9791994, "time_per_token": 0.06649332833333334}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "displot(df[\"Age\"], bins=20)", "tokens": ["dis", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " bins", "=", "2", "0", ")", "\n"], "logprobs": [-2.3285112380981445, -0.0002944036095868796, -0.0013311582151800394, -0.4634729325771332, -0.3322775661945343, -0.0031037989538162947, -8.546940807718784e-05, -9.417489309271332e-06, -0.4952404499053955, -0.022886071354150772, -1.5701645612716675, -0.026826193556189537, -1.3622376918792725, -0.10758346319198608, -0.5773677229881287, -0.024994462728500366], "finish_reason": "stop"}, {"text": "xlabel(\"Age\")", "tokens": ["xlabel", "(", "\"", "Age", "\"", ")", "\n"], "logprobs": [-2.782061815261841, -0.06126819923520088, -0.005887902807444334, -0.019840240478515625, -0.036884889006614685, -0.010684664361178875, -0.010128174908459187], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010696458630263805, -0.6868292093276978], "finish_reason": "stop"}], "metrics": {"energy": 167.17487485504154, "energy_per_token": 1.359145324024728, "time": 7.97952, "time_per_token": 0.06487414634146342}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [dict(zip(COLUMN_NAMES, match)) for match in matches]", "tokens": [" [", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", "))", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.2118091583251953, -0.0068687982857227325, -0.011547158472239971, -0.0050629740580916405, -0.0008429311565123498, -1.0728830375228426e-06, -0.003346678102388978, -2.264974000354414e-06, -1.883488948806189e-05, -7.152555099310121e-07, -0.0014811508590355515, -0.3325561285018921, -0.018344152718782425, -0.013604306615889072, -0.00019524575327523053, -0.00012730741582345217, -0.0006023023161105812, -0.008352585136890411, -0.006898633204400539], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"], kde=False, bins=20, color=\"red\")", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " k", "de", "=", "False", ",", " bins", "=", "2", "0", ",", " color", "=", "\"", "red", "\"", ")", "\n"], "logprobs": [-1.015769124031067, -0.0003407612966839224, -0.0038531599566340446, -0.01734071411192417, -0.06482765078544617, -0.002144420053809881, -6.23445157543756e-05, -6.437280717364047e-06, -0.6078438758850098, -0.03101542219519615, -0.9665071964263916, -0.0008214913541451097, -0.002378018107265234, -0.0964110866189003, -0.6414729356765747, -0.37693044543266296, -0.017143983393907547, -1.0783283710479736, -0.14663003385066986, -1.239505648612976, -0.0309368334710598, -1.33396315574646, -0.007750676013529301, -1.7752113342285156, -0.00010418349120300263, -0.5770715475082397, -0.01569208689033985], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3691018223762512, -0.0053682224825024605, -0.06241883710026741], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010696458630263805, -0.6868292093276978], "finish_reason": "stop"}], "metrics": {"energy": 181.22425590515147, "energy_per_token": 1.216270173860077, "time": 8.212662, "time_per_token": 0.055118536912751676}}
{"outputs": [{"text": " re.compile(r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\")", "tokens": [" re", ".", "compile", "(", "r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.046252727508545, -0.0484590008854866, -0.17361460626125336, -0.08119012415409088, -0.016277391463518143, -0.03162301331758499, -0.014814838767051697, -0.0007188120507635176, -0.0030410494655370712, -0.0008002892718650401, -0.016035404056310654, -0.0049149408005177975, -0.0007445423980243504, -0.0004158347437623888, -0.00020311199477873743, -6.222531374078244e-05, -0.00025138078490272164, -7.116541382856667e-05, -0.0009427393670193851, -0.0006967739318497479, -0.009714707732200623, -0.0011588770430535078, -0.002570660086348653, -6.353653589030728e-05, -0.0002865380665753037, -0.00010144196130568162, -0.0012421043356880546, -0.0017673838883638382, -0.0003511289251036942, -7.259582343976945e-05, -0.00040892345714382827, -0.004570395220071077, -0.4999343156814575, -0.06777244061231613, -0.01614966057240963, -0.0006086166249588132, -0.007482479326426983, -0.029201893135905266, -0.01351539883762598], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.209289312362671, -0.0013506823452189565], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(", "tokens": ["append", "(", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -2.1854827404022217], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.015769124031067, -0.0003407612966839224, -0.0038531599566340446, -0.01734071411192417, -0.06482765078544617, -0.002144420053809881, -6.23445157543756e-05, -6.437280717364047e-06, -0.7877755165100098, -0.03496284410357475], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3691018223762512, -0.0053682224825024605, -0.06241883710026741], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.010696458630263805], "finish_reason": "stop"}], "metrics": {"energy": 151.99406328201295, "energy_per_token": 1.4475625074477423, "time": 7.345736, "time_per_token": 0.06995939047619047}}
{"outputs": [{"text": " re.compile(r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\")", "tokens": [" re", ".", "compile", "(", "r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.046252727508545, -0.0484590008854866, -0.17361460626125336, -0.08119012415409088, -0.016277391463518143, -0.03162301331758499, -0.014814838767051697, -0.0007188120507635176, -0.0030410494655370712, -0.0008002892718650401, -0.016035404056310654, -0.0049149408005177975, -0.0007445423980243504, -0.0004158347437623888, -0.00020311199477873743, -6.222531374078244e-05, -0.00025138078490272164, -7.116541382856667e-05, -0.0009427393670193851, -0.0006967739318497479, -0.009714707732200623, -0.0011588770430535078, -0.002570660086348653, -6.353653589030728e-05, -0.0002865380665753037, -0.00010144196130568162, -0.0012421043356880546, -0.0017673838883638382, -0.0003511289251036942, -7.259582343976945e-05, -0.00040892345714382827, -0.004570395220071077, -0.4999343156814575, -0.06777244061231613, -0.01614966057240963, -0.0006086166249588132, -0.007482479326426983, -0.029201893135905266, -0.01351539883762598], "finish_reason": "stop"}, {"text": " re.finditer(pattern, text)", "tokens": [" re", ".", "find", "iter", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -1.9888652563095093, -5.1020273531321436e-05, -0.0019112430745735765, -0.0002711643755901605, -0.005222962237894535, -0.0934392511844635, -0.005773771554231644], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.1327178478240967, -0.0013722298899665475], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.003203381784260273, -0.00036352223833091557, -0.00043752157944254577, -0.0008058876264840364], "finish_reason": "stop"}, {"text": "append({\"Name\": match[0],", "tokens": ["append", "(", "{\"", "Name", "\":", " match", "[", "0", "]", ",", "\n"], "logprobs": [-0.0025290430057793856, -0.42385897040367126, -1.9580869674682617, -0.008728683926165104, -0.001121845212765038, -0.012109925039112568, -0.0009835887467488647, -0.0019838192965835333, -0.0009442876325920224, -0.11176657676696777, -1.8361479043960571], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.004623199813067913, -0.004292560275644064, -0.003024886129423976, -0.05491220951080322, -0.028070444241166115, -2.5286638736724854, -0.005791431292891502], "finish_reason": "stop"}, {"text": " pd.to_numeric(df[\"Age\"])", "tokens": [" pd", ".", "to", "_", "numeric", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.4419128894805908, -0.0003875934926327318, -0.013625944964587688, -7.271740287251305e-06, -0.0002818902430590242, -0.0005495230434462428, -0.00204449356533587, -0.05643956735730171, -0.0017103818245232105, -3.6000557884108275e-05, -2.4676019165781327e-05, -0.12235602736473083, -0.020689738914370537], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-0.9992903470993042, -0.0002892790944315493, -0.004274161532521248, -0.021339694038033485, -0.054508499801158905, -0.0015160269103944302, -5.9960475482512265e-05, -5.245195097813848e-06, -0.8229087591171265, -0.0363517589867115], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.37721651792526245, -0.0055109718814492226, -0.05190502479672432], "finish_reason": "stop"}, {"text": " df<|endoftext|># Copyright 2023 Avaiga Private Limited", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", " Copyright", " ", "2", "0", "2", "3", " A", "va", "iga", " Private", " Limited", "\n"], "logprobs": [-0.0117220189422369, -1.0874824523925781, -4.529942543740617e-06, -1.1920922133867862e-06, -3.528532761265524e-05, -0.00014482879487331957, -0.06595958024263382, -1.1827081441879272, -3.2718377113342285, -0.6159178614616394, -0.04411950707435608, -1.1444026313256472e-05, -0.22788511216640472, -0.8257032036781311, -3.640256404876709, -0.49277061223983765, -0.02954002469778061, -0.4184685945510864, -0.004990976769477129, -0.005608299747109413], "finish_reason": "stop"}], "metrics": {"energy": 203.49310133171082, "energy_per_token": 1.6544154579813888, "time": 8.410798, "time_per_token": 0.06838047154471545}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.finditer(pattern, text)", "tokens": [" re", ".", "find", "iter", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -1.9888652563095093, -5.1020273531321436e-05, -0.0019112430745735765, -0.0002711643755901605, -0.005222962237894535, -0.0934392511844635, -0.005773771554231644], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-3.770479917526245, -0.003883322235196829], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.003203381784260273, -0.00036352223833091557, -0.00043752157944254577, -0.0008058876264840364], "finish_reason": "stop"}, {"text": "append({COLUMN_NAMES[i]: match[i] for i in range(len(COLUMN_NAMES))})", "tokens": ["append", "({", "COL", "UM", "N", "_", "N", "AMES", "[", "i", "]:", " match", "[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "COL", "UM", "N", "_", "N", "AMES", "))", "})", "\n"], "logprobs": [-0.0025290430057793856, -1.768480658531189, -0.7422537803649902, -4.60137271147687e-05, -0.0022150760050863028, -2.1457441107486375e-05, -0.0007270314963534474, -3.3378546504536644e-06, -0.0010639727115631104, -1.6944434642791748, -0.10843725502490997, -0.2892971932888031, -0.0023010701406747103, -0.04110916331410408, -0.0006456674309447408, -0.06644102185964584, -0.0003233625029679388, -0.005367747973650694, -0.0007794441189616919, -8.34430247778073e-05, -0.3017076253890991, -5.1020273531321436e-05, -0.2892738878726959, -7.152555099310121e-07, -0.0870705246925354, -9.536738616588991e-07, -1.4305104514278355e-06, -1.0728830375228426e-06, -0.002388126915320754, -0.009205280803143978, -0.0021098037250339985], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.004818375688046217, -0.004026995971798897, -0.0032978456001728773, -0.06285731494426727, -0.023866506293416023, -0.10833948850631714, -0.01545218750834465, -0.09534596651792526, -0.0025908732786774635, -2.3841855067985307e-07, -0.0045041777193546295, -1.7881377516459906e-06, -5.8412379075889476e-06, -4.768370445162873e-07, -0.009590976871550083, -0.017535297200083733], "finish_reason": "stop"}, {"text": " pd.to_numeric(df[\"Age\"])", "tokens": [" pd", ".", "to", "_", "numeric", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.6682357788085938, -0.0003331344632897526, -0.010590305551886559, -1.1205610462639015e-05, -0.0003281293320469558, -0.0005528590409085155, -0.0022599175572395325, -0.05179738625884056, -0.0013519919011741877, -3.1709168979432434e-05, -2.634490556374658e-05, -0.12414579838514328, -0.022125890478491783], "finish_reason": "stop"}, {"text": "histplot(df.Age, kde=False)", "tokens": ["hist", "plot", "(", "df", ".", "Age", ",", " k", "de", "=", "False", ")", "\n"], "logprobs": [-0.9195095300674438, -0.0003097769513260573, -0.00037520044133998454, -0.5873308777809143, -2.768874168395996, -0.03689281642436981, -0.5203176736831665, -0.3798917829990387, -0.024943305179476738, -0.0011085085570812225, -1.125562310218811, -0.661888062953949, -0.02374451421201229], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3549169600009918, -0.005480977240949869, -0.040614910423755646], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010553032159805298, -0.6454689502716064], "finish_reason": "stop"}], "metrics": {"energy": 206.54981642341608, "energy_per_token": 1.5767161559039395, "time": 8.603128, "time_per_token": 0.06567273282442748}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " pd.DataFrame([match[0].split(\", \") for match in matches])", "tokens": [" pd", ".", "DataFrame", "([", "match", "[", "0", "]", ".", "split", "(", "\"", ",", " \"", ")", " for", " match", " in", " matches", "])", "\n"], "logprobs": [-2.118436574935913, -0.0002307625545654446, -0.013795621693134308, -1.3000288009643555, -1.7284185886383057, -1.5752599239349365, -0.25369805097579956, -0.18768471479415894, -0.36065778136253357, -0.4254142642021179, -0.27781471610069275, -0.13249418139457703, -0.009502891451120377, -0.33782508969306946, -0.009726159274578094, -0.4777888357639313, -0.0008472190820612013, -0.0002212279650848359, -0.0008954567601904273, -0.5004429221153259, -0.3694707155227661], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "histplot(x=\"Age\", data=df)", "tokens": ["hist", "plot", "(", "x", "=", "\"", "Age", "\"", ",", " data", "=", "df", ")", "\n"], "logprobs": [-1.0226432085037231, -0.00034028460504487157, -0.0003800861886702478, -1.3792039155960083, -0.060023851692676544, -0.15441720187664032, -0.0011559001868590713, -6.627816765103489e-05, -0.0003149013500660658, -0.768805980682373, -0.0010486110113561153, -0.0007034449372440577, -0.5972768664360046, -0.029056349769234657], "finish_reason": "stop"}, {"text": "title(\"Age Distribution\")", "tokens": ["title", "(", "\"", "Age", " Distribution", "\"", ")", "\n"], "logprobs": [-1.8576017618179321, -0.040954697877168655, -0.019318057224154472, -0.15178443491458893, -0.1476641446352005, -0.03160950168967247, -0.011706938035786152, -0.04688242822885513], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011408214457333088, -0.7057110071182251], "finish_reason": "stop"}], "metrics": {"energy": 175.5442251911164, "energy_per_token": 1.2449945049015347, "time": 7.7976613, "time_per_token": 0.05530256241134752}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)(?=\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")(", "?", "=\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -1.7983179092407227, -0.49808481335639954, -2.007948398590088, -0.007359891664236784, -1.1610674858093262, -0.0365709513425827], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " pd.DataFrame.from_records(matches, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", ".", "from", "_", "records", "(", "matches", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-2.118436574935913, -0.0002307625545654446, -0.013795621693134308, -2.945101737976074, -4.1126360883936286e-05, -2.5152843591058627e-05, -0.29900437593460083, -0.0577867291867733, -0.04693281650543213, -0.4029649496078491, -0.08396510034799576, -0.06310166418552399, -0.0018507986096665263, -2.3841855067985307e-07, -0.006852104794234037, -5.006777428206988e-06, -2.7418097943154862e-06, -2.3841855067985307e-07, -0.01777188666164875, -0.0354585163295269], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(match)", "tokens": ["append", "(", "match", ")", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.3606841564178467, -0.28895071148872375, -0.0023749261163175106], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.0054294029250741005, -0.005302650388330221, -0.00351406866684556, -0.05588238686323166, -0.027146102860569954, -2.3747730255126953, -0.0069345044903457165], "finish_reason": "stop"}, {"text": " df[\"Age\"].map(lambda x: int(x.replace(\"years\", \"\").strip()))", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "map", "(", "lambda", " x", ":", " int", "(", "x", ".", "replace", "(", "\"", "years", "\"", ",", " \"", "\"", ")", ".", "strip", "()))", "\n"], "logprobs": [-0.2611739933490753, -0.03293433412909508, -0.0021655934397131205, -3.6954195820726454e-05, -3.218599158572033e-05, -0.0006630606367252767, -0.001978346612304449, -3.142251491546631, -0.4830668866634369, -0.5188149809837341, -0.07470536977052689, -0.0015430459752678871, -0.1667819619178772, -0.0003274143091402948, -0.02004123292863369, -1.1654736995697021, -1.0990734100341797, -0.05276697129011154, -0.003572274697944522, -2.766387939453125, -0.09664174914360046, -0.0016169581795111299, -0.02775871567428112, -0.0026638756971806288, -0.6394818425178528, -0.012645772658288479, -1.1049671173095703, -0.11996932327747345, -0.016537025570869446], "finish_reason": "stop"}, {"text": "countplot(df[\"Age\"], title=\"Age Distribution\")", "tokens": ["count", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " title", "=", "\"", "Age", " Distribution", "\"", ")", "\n"], "logprobs": [-2.095763921737671, -2.0861407392658293e-05, -0.0015705404803156853, -2.3132987022399902, -0.10653018206357956, -0.0022168601863086224, -0.0017341827042400837, -1.2516897186287679e-05, -0.9360230565071106, -0.022580180317163467, -3.945484161376953, -0.09248757362365723, -0.0239159744232893, -0.12210357934236526, -0.2157403975725174, -0.017937934026122093, -0.4774916172027588, -0.016141800209879875], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.4082596004009247, -0.005345812067389488, -0.05552113056182861], "finish_reason": "stop"}, {"text": " df<|endoftext|>from pprint import pprint", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "from", " p", "print", " import", " p", "print", "\n"], "logprobs": [-0.013002374209463596, -1.0101091861724854, -4.291525328881107e-06, -1.311301275563892e-06, -4.23184028477408e-05, -0.00012635385792236775, -0.04747011139988899, -1.3805466890335083, -4.078749656677246, -2.231027603149414, -0.00119304982945323, -0.014951665885746479, -0.02153116837143898, -0.09793023765087128], "finish_reason": "stop"}], "metrics": {"energy": 218.9318720359803, "energy_per_token": 1.4792694056485154, "time": 9.4429865, "time_per_token": 0.06380396283783783}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [[cols.strip() for cols in match] for match in matches]", "tokens": [" [[", "cols", ".", "strip", "()", " for", " col", "s", " in", " match", "]", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-3.66556715965271, -3.885467529296875, -0.2647898495197296, -0.10957464575767517, -0.038931552320718765, -0.16417795419692993, -0.002581598935648799, -7.748303323751315e-05, -0.00042703570215962827, -0.4582359194755554, -0.1660710871219635, -0.03400256857275963, -0.0006136203301139176, -0.000609927112236619, -0.00033825874561443925, -0.007234448567032814, -0.005314982496201992], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append([match[0], match[1], int(match[2]), match[3]])", "tokens": ["append", "([", "match", "[", "0", "]", ",", " match", "[", "1", "]", ",", " int", "(", "match", "[", "2", "])", ",", " match", "[", "3", "]]", ")", "\n"], "logprobs": [-0.002999927382916212, -1.917665958404541, -0.3779280483722687, -0.01113651692867279, -0.029964350163936615, -0.015304042026400566, -0.10789332538843155, -0.014175084419548512, -0.0003401654539629817, -0.0011096993694081903, -0.0008928364841267467, -0.013778102584183216, -1.4827780723571777, -4.31528314948082e-05, -0.0015513778198510408, -0.0004985281848348677, -0.0014068715972825885, -0.05134236440062523, -0.02208986133337021, -0.003656132845208049, -0.001313419546931982, -0.0005435658385977149, -0.026427701115608215, -0.0002153879904653877, -0.0046164365485310555], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=[\"Name\", \"Email\", \"Age\", \"Country\"])", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=[", "\"", "Name", "\"", ",", " \"", "Email", "\"", ",", " \"", "Age", "\"", ",", " \"", "Country", "\"", "])", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -2.870744228363037, -0.2501748204231262, -0.010776065289974213, -0.0006413786904886365, -0.002734376350417733, -0.008365944027900696, -0.0012652019504457712, -0.00014745102089364082, -0.00031835734262131155, -0.0015575670404359698, -0.0002810560108628124, -0.00019429226813372225, -0.0004905451205559075, -0.0012360322289168835, -0.00041797960875555873, -9.178694017464295e-05, -0.005848082713782787, -0.01668686419725418], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.18995033204555511, -0.02845345251262188, -0.002017844934016466, -4.053033626405522e-05, -3.611976353568025e-05, -0.0006525770877487957, -0.0017536989180371165, -0.3082084655761719, -2.098061486321967e-05, -0.013975496403872967, -0.18702544271945953, -0.0006250573205761611, -0.015581886284053326], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.049159288406372, -0.0003003622987307608, -0.003537470242008567, -0.018040968105196953, -0.05682706832885742, -0.001966092037037015, -5.9126061387360096e-05, -7.152531907195225e-06, -0.7798517942428589, -0.03220853582024574], "finish_reason": "stop"}, {"text": "title(\"Age Distribution\")", "tokens": ["title", "(", "\"", "Age", " Distribution", "\"", ")", "\n"], "logprobs": [-1.8375365734100342, -0.0410664863884449, -0.01780092902481556, -0.15427927672863007, -0.14284706115722656, -0.031116077676415443, -0.01029065903276205, -0.04100195690989494], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011496367864310741, -0.6920024752616882], "finish_reason": "stop"}], "metrics": {"energy": 200.27328011894218, "energy_per_token": 1.317587369203567, "time": 9.426284, "time_per_token": 0.06201502631578948}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.finditer(pattern, text)", "tokens": [" re", ".", "find", "iter", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -1.9888652563095093, -5.1020273531321436e-05, -0.0019112430745735765, -0.0002711643755901605, -0.005222962237894535, -0.0934392511844635, -0.005773771554231644], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.1327178478240967, -0.0013722298899665475], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.003203381784260273, -0.00036352223833091557, -0.00043752157944254577, -0.0008058876264840364], "finish_reason": "stop"}, {"text": "append(match)", "tokens": ["append", "(", "match", ")", "\n"], "logprobs": [-0.0025290430057793856, -0.42385897040367126, -1.1249780654907227, -0.37784406542778015, -0.0025991962756961584], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.0060477592051029205, -0.004222644027322531, -0.0038083898834884167, -0.056643251329660416, -0.027714654803276062, -2.599717617034912, -0.007570506073534489], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2805013358592987, -0.0362178310751915, -0.002060435013845563, -4.3748852476710454e-05, -3.8980677345534787e-05, -0.0007751559023745358, -0.0018755479250103235, -0.3303646445274353, -1.9073304429184645e-05, -0.013644995167851448, -0.18744003772735596, -0.0007003477076068521, -0.01462207455188036], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-0.9508596062660217, -0.0003129946126136929, -0.0033623608760535717, -0.013912602327764034, -0.058138277381658554, -0.0020958855748176575, -6.496695277746767e-05, -6.437280717364047e-06, -0.8291907906532288, -0.031022125855088234], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3367016613483429, -0.0050606015138328075, -0.05190570652484894], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.013454357162117958, -0.624343752861023], "finish_reason": "stop"}], "metrics": {"energy": 148.64591877746582, "energy_per_token": 1.598343212660923, "time": 7.1482644, "time_per_token": 0.07686305806451613}}
{"outputs": [{"text": " re.compile(\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\")", "tokens": [" re", ".", "compile", "(", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.2389922142028809, -0.07592497020959854, -0.024916909635066986, -0.009446565061807632, -0.012202373705804348, -0.013847353868186474, -0.0003880701260641217, -0.0014673429541289806, -0.000474936212413013, -0.009963540360331535, -0.004312145058065653, -0.000697965151630342, -0.0002244459028588608, -0.00016044282529037446, -5.721882189391181e-05, -0.0002335037279408425, -8.618460560683161e-05, -0.0007651500636711717, -0.0003768687602132559, -0.003385766176506877, -0.0005486889858730137, -0.002018677769228816, -4.565611743601039e-05, -0.0002739054325502366, -0.00010132275929208845, -0.00113589596003294, -0.0016927688848227262, -0.00029345019720494747, -4.5536911784438416e-05, -0.0014347269898280501, -0.004153198096901178, -0.39428120851516724, -0.024995161220431328, -0.008144264109432697, -0.000606710382271558, -0.006173825357109308, -0.029861265793442726, -0.013757525943219662], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [{k: v.strip() for k, v in zip(COLUMN_NAMES, m)} for m in matches]", "tokens": [" [", "{", "k", ":", " v", ".", "strip", "()", " for", " k", ",", " v", " in", " zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " m", ")}", " for", " m", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.8292007446289062, -2.265875816345215, -0.019575968384742737, -0.07555198669433594, -1.5413799285888672, -0.043239571154117584, -0.04745590314269066, -0.23862718045711517, -0.11256822943687439, -0.000316927267704159, -0.031112611293792725, -0.0014003242831677198, -1.318448781967163, -0.008091762661933899, -0.0016093410085886717, -7.152555099310121e-07, -0.004090277012437582, -9.536738616588991e-07, -2.5629668016335927e-05, -7.152555099310121e-07, -0.005099504254758358, -1.247046947479248, -0.0590420663356781, -0.07333142310380936, -0.0001864259538706392, -0.0003325386205688119, -0.0031562058720737696, -0.02000793069601059, -0.006082120817154646], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(match)", "tokens": ["append", "(", "match", ")", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.3606841564178467, -0.28895071148872375, -0.0023749261163175106], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.0054294029250741005, -0.005302650388330221, -0.00351406866684556, -0.05588238686323166, -0.027146102860569954, -0.14068996906280518, -0.018192805349826813, -0.09661425650119781, -0.0028257938101887703, -2.3841855067985307e-07, -0.006250594276934862, -2.0265558760002023e-06, -6.794906312279636e-06, -3.576278118089249e-07, -0.010164638981223106, -0.015543506480753422], "finish_reason": "stop"}, {"text": " df[\"Age\"].apply(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "apply", "(", "int", ")", "\n"], "logprobs": [-0.2173779308795929, -0.036637723445892334, -0.00249396450817585, -4.5060096454108134e-05, -3.6238969187252223e-05, -0.0006301801186054945, -0.0018653151346370578, -1.9220566749572754, -0.0006156456656754017, -1.1156551837921143, -0.0014332984574139118, -0.03362848237156868], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"], bins=10)", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " bins", "=", "1", "0", ")", "\n"], "logprobs": [-0.9181107878684998, -0.00029690624796785414, -0.003043188713490963, -0.018713822588324547, -0.05532184615731239, -0.0021452526561915874, -5.340433563105762e-05, -6.556489552167477e-06, -0.636105477809906, -0.02994398958981037, -0.6833176016807556, -0.07414477318525314, -0.8485518097877502, -0.23565687239170074, -0.8875474333763123, -0.03191426023840904], "finish_reason": "stop"}, {"text": "title(\"Age Distribution\")", "tokens": ["title", "(", "\"", "Age", " Distribution", "\"", ")", "\n"], "logprobs": [-1.8084728717803955, -0.037880510091781616, -0.019559603184461594, -0.13511961698532104, -0.12906910479068756, -0.02728322520852089, -0.012110278010368347, -0.04394782707095146], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.013470823876559734], "finish_reason": "stop"}], "metrics": {"energy": 222.52736130905163, "energy_per_token": 1.5453288979795252, "time": 9.226911, "time_per_token": 0.06407577083333332}}
{"outputs": [{"text": " \"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" \"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.244577407836914, -0.037490759044885635, -0.019764507189393044, -0.004797851666808128, -0.0067695798352360725, -0.008035002276301384, -0.00018606838420964777, -0.000935950840357691, -0.00022706791060045362, -0.004663899540901184, -0.0028400584124028683, -0.00034671969478949904, -0.00022349244682118297, -0.0002335037279408425, -5.507317473529838e-05, -0.00014983485743869096, -6.05564855504781e-05, -0.0005482124397531152, -0.00035684893373399973, -0.0018919678404927254, -0.00045158201828598976, -0.004627827554941177, -3.325883881188929e-05, -0.0002177716523874551, -8.511180931236595e-05, -0.0005956306122243404, -0.001166259404271841, -0.00016008525562938303, -4.362964682513848e-05, -0.0023451941087841988, -0.0038290531374514103, -0.16660617291927338, -0.010973935015499592, -0.006066125351935625, -0.00044383687782101333, -0.0046623568050563335, -0.03584974631667137], "finish_reason": "stop"}, {"text": " re.finditer(pattern, text)", "tokens": [" re", ".", "find", "iter", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -1.9888652563095093, -5.1020273531321436e-05, -0.0019112430745735765, -0.0002711643755901605, -0.005222962237894535, -0.0934392511844635, -0.005773771554231644], "finish_reason": "stop"}, {"text": " [tuple(x.strip() for x in y) for y in zip(*matches)]", "tokens": [" [", "tuple", "(", "x", ".", "strip", "()", " for", " x", " in", " y", ")", " for", " y", " in", " zip", "(*", "matches", ")]", "\n"], "logprobs": [-0.8247039914131165, -2.6536476612091064, -0.029959028586745262, -1.2989671230316162, -0.7582565546035767, -0.2987438142299652, -0.0568697527050972, -0.48175063729286194, -0.00014602071314584464, -0.00013279033009894192, -2.684629440307617, -1.22910737991333, -0.02365347556769848, -0.0009703694959171116, -0.00033563701435923576, -2.5728237628936768, -0.0007730118231847882, -0.0018129594391211867, -0.06695344299077988, -0.04723839834332466], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.003203381784260273, -0.00036352223833091557, -0.00043752157944254577, -0.0008058876264840364], "finish_reason": "stop"}, {"text": "append({COLUMN_NAMES[0]: match[0].strip(),", "tokens": ["append", "({", "COL", "UM", "N", "_", "N", "AMES", "[", "0", "]:", " match", "[", "0", "]", ".", "strip", "()", ",", "\n"], "logprobs": [-0.0025290430057793856, -1.768480658531189, -0.7422537803649902, -4.60137271147687e-05, -0.0022150760050863028, -2.1457441107486375e-05, -0.0007270314963534474, -3.3378546504536644e-06, -0.0010639727115631104, -0.27248069643974304, -0.011923824436962605, -0.022493932396173477, -0.0012900849105790257, -0.005394900683313608, -0.0016808680957183242, -2.1753311157226562, -0.014712998643517494, -0.013707435689866543, -0.025190236046910286, -0.39974796772003174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.004818375688046217, -0.004026995971798897, -0.0032978456001728773, -0.06285731494426727, -0.023866506293416023, -0.10833948850631714, -0.01545218750834465, -0.09534596651792526, -0.0025908732786774635, -2.3841855067985307e-07, -0.0045041777193546295, -1.7881377516459906e-06, -5.8412379075889476e-06, -4.768370445162873e-07, -0.009590976871550083, -0.017535297200083733], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.22496026754379272, -0.03541421890258789, -0.0017406088300049305, -4.1960789531003684e-05, -2.95634672511369e-05, -0.0006266061100177467, -0.002017844934016466, -0.37157872319221497, -2.3007127310847864e-05, -0.01377316378057003, -0.15498223900794983, -0.0006161222117953002, -0.014999697916209698], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-0.9922321438789368, -0.00031740395934320986, -0.004002774599939585, -0.015709219500422478, -0.05591755732893944, -0.0017193072708323598, -6.0437283536884934e-05, -7.510157047363464e-06, -0.711089551448822, -0.03876723349094391], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3613238036632538, -0.006358274724334478, -0.04907175526022911], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.011324296705424786], "finish_reason": "stop"}], "metrics": {"energy": 169.39638644790642, "energy_per_token": 1.2641521376709435, "time": 7.5778337, "time_per_token": 0.05655099776119403}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [{\"Name\": x[0], \"Email\": x[1], \"Age\": x[2], \"Country\": x[3]} for x in matches]", "tokens": [" [", "{\"", "Name", "\":", " x", "[", "0", "]", ",", " \"", "Email", "\":", " x", "[", "1", "]", ",", " \"", "Age", "\":", " x", "[", "2", "]", ",", " \"", "Country", "\":", " x", "[", "3", "]}", " for", " x", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.920347213745117, -0.028751876205205917, -0.001167926355265081, -2.8301641941070557, -0.006379595957696438, -0.008463585749268532, -0.0019023193744942546, -0.0414133258163929, -0.039962366223335266, -0.0032649326603859663, -0.00012206286191940308, -0.003433643840253353, -7.593343616463244e-05, -0.0009552444680593908, -0.0008311392739415169, -0.006451730150729418, -0.006439175456762314, -0.0003430254873819649, -0.00015925093612167984, -0.11480196565389633, -0.001797847100533545, -0.0016739654820412397, -0.0009857324184849858, -0.00464016804471612, -0.003167851595208049, -0.0005049622268415987, -0.00012242044613230973, -0.002063052263110876, -0.0004285847535356879, -0.0010127659188583493, -0.049515217542648315, -0.10400620102882385, -0.0006092122639529407, -0.00034671969478949904, -0.0021967582870274782, -0.007141894195228815, -0.0028288844041526318], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(", "tokens": ["append", "(", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -2.1854827404022217], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "histplot(x=df[\"Age\"])", "tokens": ["hist", "plot", "(", "x", "=", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.0226432085037231, -0.00034028460504487157, -0.0003800861886702478, -1.3792039155960083, -0.060023851692676544, -1.953579068183899, -0.08632995188236237, -0.0018576999427750707, -0.00028153270250186324, -1.0013530300057027e-05, -0.6671652793884277, -0.017826106399297714], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.33854925632476807, -0.005027391016483307, -0.0491311140358448], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011408214457333088, -0.7057110071182251], "finish_reason": "stop"}], "metrics": {"energy": 184.10418330669407, "energy_per_token": 1.3244905273862884, "time": 8.81171, "time_per_token": 0.06339359712230215}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [row.split(', ') for row in matches]", "tokens": [" [", "row", ".", "split", "('", ",", " '", ")", " for", " row", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -4.129705429077148, -0.2316780835390091, -0.3888961672782898, -1.7797353267669678, -0.031563762575387955, -0.5717213153839111, -0.007012398913502693, -0.016963504254817963, -0.000582525331992656, -0.0002004899288294837, -0.0012882990995422006, -0.012067642994225025, -0.006384334061294794], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].str.strip()", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "str", ".", "strip", "()", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -3.0314502716064453, -0.011034891940653324, -1.2857661247253418, -0.10623297095298767, -0.4359663128852844], "finish_reason": "stop"}, {"text": "histplot(data=df, x=\"Age\", kde=True)", "tokens": ["hist", "plot", "(", "data", "=", "df", ",", " x", "=", "\"", "Age", "\"", ",", " k", "de", "=", "True", ")", "\n"], "logprobs": [-1.107435941696167, -0.0003023882454726845, -0.000436925794929266, -1.4625149965286255, -0.0423685722053051, -0.007694132160395384, -0.1832936704158783, -0.04620698094367981, -0.05996805429458618, -0.008100631646811962, -0.0017133570509031415, -3.3378044463461265e-05, -0.7362412810325623, -1.0323354005813599, -0.15373621881008148, -0.00034528967808000743, -0.17087121307849884, -0.3847351670265198, -0.019029786810278893], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3476053774356842, -0.005837772041559219, -0.05025157704949379], "finish_reason": "stop"}, {"text": " df<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" df", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.011735450476408005, -1.045942783355713, -4.887569048150908e-06, -1.4305104514278355e-06, -2.6225699912174605e-05, -0.00014041867689229548, -0.06264884769916534, -1.2533633708953857, -2.7211599349975586, -0.013033908791840076, -0.015560290776193142, -0.001761909923516214, -0.014615495689213276, -0.0013294914970174432, -3.6954195820726454e-05, -0.00592061085626483, -0.004473322071135044, -0.0009374991059303284], "finish_reason": "stop"}], "metrics": {"energy": 198.72997781085965, "energy_per_token": 1.3248665187390642, "time": 9.453868, "time_per_token": 0.06302578666666667}}
{"outputs": [{"text": " re.compile(\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\")", "tokens": [" re", ".", "compile", "(", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")(", "$", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.2389922142028809, -0.07592497020959854, -0.024916909635066986, -0.009446565061807632, -0.012202373705804348, -0.013847353868186474, -0.0003880701260641217, -0.0014673429541289806, -0.000474936212413013, -0.009963540360331535, -0.004312145058065653, -0.000697965151630342, -0.0002244459028588608, -0.00016044282529037446, -5.721882189391181e-05, -0.0002335037279408425, -8.618460560683161e-05, -0.0007651500636711717, -0.0003768687602132559, -0.003385766176506877, -0.0005486889858730137, -0.002018677769228816, -4.565611743601039e-05, -0.0002739054325502366, -0.00010132275929208845, -0.00113589596003294, -0.0016927688848227262, -0.00029345019720494747, -4.5536911784438416e-05, -0.0014347269898280501, -0.004153198096901178, -1.3388516902923584, -1.888802170753479, -0.0060889930464327335, -0.0010306290350854397, -0.00984987337142229, -0.021285081282258034, -0.02145194634795189], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [match for match in matches]", "tokens": [" [", "match", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -1.734603762626648, -1.457526445388794, -0.022493582218885422, -0.0011597104603424668, -0.003388260956853628, -0.5218239426612854, -0.012740878388285637], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({COLUMN_NAMES[i]: match[i] for i in range(len(COLUMN_NAMES))})", "tokens": ["append", "({", "COL", "UM", "N", "_", "N", "AMES", "[", "i", "]:", " match", "[", "i", "]", " for", " i", " in", " range", "(", "len", "(", "COL", "UM", "N", "_", "N", "AMES", "))", "})", "\n"], "logprobs": [-0.002999927382916212, -1.8990635871887207, -0.8606743812561035, -4.327203714638017e-05, -0.0022553978487849236, -1.549708758830093e-05, -0.0009211826254613698, -3.2186455882765586e-06, -0.0011610202491283417, -1.6795580387115479, -0.10625988245010376, -0.2908727824687958, -0.0022766878828406334, -0.0388835109770298, -0.0007857572636567056, -0.07982880622148514, -0.000356253091013059, -0.005959717091172934, -0.0008572241058573127, -8.594620157964528e-05, -0.3472358286380768, -5.709961988031864e-05, -0.28348612785339355, -3.576278118089249e-07, -0.09140585362911224, -1.1920922133867862e-06, -1.311301275563892e-06, -9.536738616588991e-07, -0.0019483646610751748, -0.0075547704473137856, -0.0023474537301808596], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005703129339963198, -0.003668366465717554, -0.0031102162320166826, -0.055396512150764465, -0.0280073881149292, -0.11170687526464462, -0.014715583063662052, -0.08786535263061523, -0.0021540552843362093, -2.3841855067985307e-07, -0.005376759450882673, -1.9073468138230965e-06, -5.006777428206988e-06, -4.768370445162873e-07, -0.010341746732592583, -0.012875636108219624], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2702101767063141, -0.03743633255362511, -0.002224353840574622, -3.886147169396281e-05, -2.932505594799295e-05, -0.0006409021443687379, -0.0019170731538906693, -0.3272450566291809, -2.825220326485578e-05, -0.01350845955312252, -0.1797388792037964, -0.0007213136414065957, -0.015560056082904339], "finish_reason": "stop"}, {"text": "displot(df[\"Age\"])", "tokens": ["dis", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-2.3940906524658203, -0.0002980979916173965, -0.001260201446712017, -0.3791682720184326, -0.3142254054546356, -0.0028460018802434206, -9.393251093570143e-05, -9.65590606938349e-06, -1.0052571296691895, -0.02001389116048813], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.32927510142326355, -0.006495553068816662, -0.04164639115333557], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.012865515425801277, -0.6820584535598755], "finish_reason": "stop"}], "metrics": {"energy": 154.63106796836857, "energy_per_token": 1.1124537263911407, "time": 7.7887983, "time_per_token": 0.05603452014388489}}
{"outputs": [{"text": " re.compile(", "tokens": [" re", ".", "compile", "(", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.0595202445983887], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [{\"Name\": match[0], \"Email\": match[1], \"Age\": match[2], \"Country\": match[3]} for match in matches]", "tokens": [" [", "{\"", "Name", "\":", " match", "[", "0", "]", ",", " \"", "Email", "\":", " match", "[", "1", "]", ",", " \"", "Age", "\":", " match", "[", "2", "]", ",", " \"", "Country", "\":", " match", "[", "3", "]}", " for", " match", " in", " matches", "]", "\n"], "logprobs": [-0.7594162821769714, -2.920347213745117, -0.028751876205205917, -0.001167926355265081, -0.6037905216217041, -0.007056552451103926, -0.003346678102388978, -0.002138829091563821, -0.05540914461016655, -0.16102661192417145, -0.002784187439829111, -9.738924563862383e-05, -0.0028347091283649206, -8.022463589441031e-05, -0.0005258131423033774, -0.0007994554471224546, -0.00771317770704627, -0.019660014659166336, -0.00030524839530698955, -0.00014375607133843005, -0.19785019755363464, -0.0009093916742131114, -0.0014606770128011703, -0.0011855486081913114, -0.0024927754420787096, -0.013628179207444191, -0.000558220490347594, -6.592056161025539e-05, -0.00320979836396873, -0.00015448330668732524, -0.001082192175090313, -0.03333854302763939, -0.13598883152008057, -0.0012897277483716607, -0.0004175029753241688, -0.00237171514891088, -0.005006752442568541, -0.0033886174205690622], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(", "tokens": ["append", "(", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -2.1854827404022217], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].map({", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "map", "({", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -3.259847640991211, -1.1826515197753906, -0.8651586174964905], "finish_reason": "stop"}, {"text": "histplot(df[\"Age\"], bins=20, kde=True, color=\"C2\")", "tokens": ["hist", "plot", "(", "df", "[", "\"", "Age", "\"", "]", ",", " bins", "=", "2", "0", ",", " k", "de", "=", "True", ",", " color", "=", "\"", "C", "2", "\"", ")", "\n"], "logprobs": [-1.107435941696167, -0.0003023882454726845, -0.000436925794929266, -0.6472855806350708, -0.14206922054290771, -0.0018961322493851185, -8.415821503149346e-05, -6.318072337307967e-06, -0.7753404974937439, -0.00499690743163228, -1.5289561748504639, -0.03662680462002754, -1.3274445533752441, -0.08038865029811859, -1.0283119678497314, -0.1556498259305954, -0.04342644289135933, -0.00030894274823367596, -0.17384085059165955, -1.026332139968872, -0.6194774508476257, -0.15447235107421875, -0.013963858596980572, -4.185080528259277, -1.7698814868927002, -0.000897957943379879, -0.41116926074028015, -0.02819283865392208], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.37426090240478516, -0.004554968327283859, -0.05208756774663925], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010657301172614098, -0.6497291326522827], "finish_reason": "stop"}], "metrics": {"energy": 185.1024691858291, "energy_per_token": 1.5554829343346983, "time": 7.991396, "time_per_token": 0.06715458823529412}}
{"outputs": [{"text": " r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)($|\\n)\"", "tokens": [" r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")", "($", "|\\", "n", ")\"", "\n"], "logprobs": [-1.183786392211914, -0.025407472625374794, -0.1266150027513504, -0.0385328084230423, -0.008299622684717178, -0.023603063076734543, -0.008502001874148846, -0.00045694399159401655, -0.0017322786152362823, -0.0003665013937279582, -0.00735634146258235, -0.003450988559052348, -0.0004664763400796801, -0.00026663561584427953, -0.0002503081923350692, -8.11782301752828e-05, -0.00018988236843142658, -7.271502545336261e-05, -0.0006063529872335494, -0.0004049911512993276, -0.006155105773359537, -0.0007745603215880692, -0.0032909540459513664, -3.516612196108326e-05, -0.00020132421923335642, -8.701899787411094e-05, -0.0007354891858994961, -0.0010625437134876847, -0.00023362292267847806, -4.303362584323622e-05, -0.0016167201101779938, -0.002977701835334301, -0.23146729171276093, -0.04894712194800377, -0.006892950274050236, -0.0004954302567057312, -0.005024900194257498, -0.018155697733163834], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7594162821769714, -2.017303466796875], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append({\"Name\": match[0],", "tokens": ["append", "(", "{\"", "Name", "\":", " match", "[", "0", "]", ",", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.8250072002410889, -0.007999643683433533, -0.001086002797819674, -0.011834530159831047, -0.0008990298374556005, -0.0023896729107946157, -0.0008816407644189894, -0.10458649694919586, -2.046281576156616], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "histplot(df[\"Age\"])", "tokens": ["hist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.0226432085037231, -0.00034028460504487157, -0.0003800861886702478, -0.6661549806594849, -0.14831195771694183, -0.0019063648069277406, -8.77341881277971e-05, -7.510157047363464e-06, -0.49912282824516296, -0.02965136058628559], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.33854925632476807, -0.005027391016483307, -0.0491311140358448], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011408214457333088, -0.7057110071182251], "finish_reason": "stop"}], "metrics": {"energy": 156.71973266124726, "energy_per_token": 1.437795712488507, "time": 7.5542464, "time_per_token": 0.0693050128440367}}
{"outputs": [{"text": " re.compile(r\"Name: (.*?), Email: (.*?), Age: (.*?), Country: (.*?)(?:$|\\n)\")", "tokens": [" re", ".", "compile", "(", "r", "\"", "Name", ":", " (", ".", "*", "?", ")", ",", " Email", ":", " (", ".", "*", "?", ")", ",", " Age", ":", " (", ".", "*", "?", ")", ",", " Country", ":", " (", ".", "*", "?", ")(", "?", ":$", "|\\", "n", ")\"", ")", "\n"], "logprobs": [-1.0016212463378906, -0.00013290952483657748, -0.0010939810890704393, -0.026689007878303528, -1.046252727508545, -0.0484590008854866, -0.17361460626125336, -0.08119012415409088, -0.016277391463518143, -0.03162301331758499, -0.014814838767051697, -0.0007188120507635176, -0.0030410494655370712, -0.0008002892718650401, -0.016035404056310654, -0.0049149408005177975, -0.0007445423980243504, -0.0004158347437623888, -0.00020311199477873743, -6.222531374078244e-05, -0.00025138078490272164, -7.116541382856667e-05, -0.0009427393670193851, -0.0006967739318497479, -0.009714707732200623, -0.0011588770430535078, -0.002570660086348653, -6.353653589030728e-05, -0.0002865380665753037, -0.00010144196130568162, -0.0012421043356880546, -0.0017673838883638382, -0.0003511289251036942, -7.259582343976945e-05, -0.00040892345714382827, -0.004570395220071077, -1.1067382097244263, -0.6370736360549927, -1.0471229553222656, -0.04373777657747269, -0.0013305629836395383, -0.009141850285232067, -0.029071170836687088, -0.02029428444802761], "finish_reason": "stop"}, {"text": " re.findall(pattern, text)", "tokens": [" re", ".", "find", "all", "(", "pattern", ",", " text", ")", "\n"], "logprobs": [-0.014661193825304508, -6.16293036728166e-05, -0.0013986576814204454, -0.1472419947385788, -2.706014311115723e-05, -0.000934045237954706, -0.0007419217727147043, -0.005189875606447458, -0.04212973266839981, -0.004597094841301441], "finish_reason": "stop"}, {"text": " pd.DataFrame([[name, email, age, country] for name, email, age, country in matches])", "tokens": [" pd", ".", "DataFrame", "([", "[", "name", ",", " email", ",", " age", ",", " country", "]", " for", " name", ",", " email", ",", " age", ",", " country", " in", " matches", "])", "\n"], "logprobs": [-2.118436574935913, -0.0002307625545654446, -0.013795621693134308, -1.3000288009643555, -1.708496332168579, -3.2569785118103027, -0.4636954367160797, -0.015894969925284386, -0.007111356593668461, -0.06783615797758102, -0.0071468655951321125, -0.004486020188778639, -0.030500084161758423, -0.09372790902853012, -0.13616466522216797, -0.00016819016309455037, -0.005763696972280741, -0.0001262346631847322, -0.0022975020110607147, -0.00023457636416424066, -0.00395266804844141, -0.009778574109077454, -0.0038625411689281464, -0.41700881719589233, -0.445894330739975], "finish_reason": "stop"}, {"text": " in matches:", "tokens": [" in", " matches", ":", "\n"], "logprobs": [-0.0030317793134599924, -0.0003057250869460404, -0.00037091050762683153, -0.0007421599584631622], "finish_reason": "stop"}, {"text": "append(dict(zip(COLUMN_NAMES, match)))", "tokens": ["append", "(", "dict", "(", "zip", "(", "COL", "UM", "N", "_", "N", "AMES", ",", " match", ")))", "\n"], "logprobs": [-0.002999927382916212, -0.40795189142227173, -1.0320117473602295, -0.006913905031979084, -0.08485712856054306, -0.004200564697384834, -0.0010480155469849706, -5.960462772236497e-07, -0.0028839209116995335, -2.3841855067985307e-07, -1.9430925021879375e-05, -5.960462772236497e-07, -0.005778394173830748, -0.030192120000720024, -0.010695986449718475, -0.003957061562687159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMN_NAMES)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "N", "_", "N", "AMES", ")", "\n"], "logprobs": [-0.005145758390426636, -0.0033138857688754797, -0.0035827276296913624, -0.06617584079504013, -0.031180210411548615, -0.10700908303260803, -0.01398055162280798, -0.09087337553501129, -0.002134546637535095, -2.3841855067985307e-07, -0.006122049875557423, -1.7881377516459906e-06, -4.410734163684538e-06, -3.576278118089249e-07, -0.009917390532791615, -0.013942580670118332], "finish_reason": "stop"}, {"text": " df[\"Age\"].astype(int)", "tokens": [" df", "[", "\"", "Age", "\"", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.2486511468887329, -0.029426362365484238, -0.0022341071162372828, -4.589452510117553e-05, -3.290122185717337e-05, -0.000601349223870784, -0.002143468242138624, -0.39716142416000366, -2.3603161025675945e-05, -0.013230156153440475, -0.20118992030620575, -0.0007116645574569702, -0.014355597086250782], "finish_reason": "stop"}, {"text": "distplot(df[\"Age\"])", "tokens": ["dist", "plot", "(", "df", "[", "\"", "Age", "\"", "])", "\n"], "logprobs": [-1.015769124031067, -0.0003407612966839224, -0.0038531599566340446, -0.01734071411192417, -0.06482765078544617, -0.002144420053809881, -6.23445157543756e-05, -6.437280717364047e-06, -0.7877755165100098, -0.03496284410357475], "finish_reason": "stop"}, {"text": "show()", "tokens": ["show", "()", "\n"], "logprobs": [-0.3691018223762512, -0.0053682224825024605, -0.06241883710026741], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010696458630263805, -0.6868292093276978], "finish_reason": "stop"}], "metrics": {"energy": 192.50289507675177, "energy_per_token": 1.3461740914458167, "time": 9.225023, "time_per_token": 0.06451065034965035}}
