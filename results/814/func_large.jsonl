{"outputs": [{"text": "try:\n        # Get a list of files in the source directory that match the regular expression pattern\n        files = [f for f in os.listdir(source_dir) if re.match(file_pattern, f) is not None]\n        # Create the target directory if it does not exist\n        if not os.path.exists(target_dir):\n            os.makedirs(target_dir)\n        # Move the matching files from the source directory to the target directory\n        for file in files:\n            shutil.move(os.path.join(source_dir, file), os.path.join(target_dir, file))\n        # Return the number of files moved\n        return len(files)\n    except Exception as e:\n        # Catch any exceptions that may occur during file processing and return -1\n        print(f\"Error: {e}\")\n        return -1", "tokens": ["try", ":", "\n", "        ", "#", " Get", " a", " list", " of", " files", " in", " the", " source", " directory", " that", " match", " the", " regular", " expression", " pattern", "\n", "        ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "match", "(", "file", "_", "pattern", ",", " f", ")", " is", " not", " None", "]", "\n", "        ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "        ", "#", " Move", " the", " matching", " files", " from", " the", " source", " directory", " to", " the", " target", " directory", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", "))", "\n", "        ", "#", " Return", " the", " number", " of", " files", " moved", "\n", "        ", "return", " len", "(", "files", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Catch", " any", " exceptions", " that", " may", " occur", " during", " file", " processing", " and", " return", " -", "1", "\n", "        ", "print", "(", "f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " -", "1", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.4691989421844482, -0.0009043894242495298, -0.0053748623467981815, -0.036507394164800644, -1.3993176221847534, -2.144648551940918, -0.9462157487869263, -0.011556467972695827, -0.0007969540893100202, -1.4008097648620605, -0.10890134423971176, -0.00922181736677885, -0.08552306145429611, -0.019016804173588753, -1.1524873971939087, -0.01222262904047966, -0.006105107255280018, -2.8806955814361572, -0.00907617062330246, -0.5765678882598877, -0.21266846358776093, -0.0034557406324893236, -0.42508435249328613, -0.23199300467967987, -0.1436472237110138, -0.5874233841896057, -0.02863325923681259, -0.0002379134384682402, -4.7801782784517854e-05, -0.004552357830107212, -5.9960475482512265e-05, -0.0011624491307884455, -0.0002932118659373373, -0.0007329876534640789, -0.014447955414652824, -0.00036161558819003403, -0.0003195490571670234, -0.003181635867804289, -0.05391070619225502, -0.08972691744565964, -8.332382276421413e-05, -0.3056785464286804, -0.0006939148879610002, -0.020515622571110725, -0.00011526874004630372, -4.5060096454108134e-05, -0.0006048041977919638, -0.004424544516950846, -2.9615988731384277, -0.25366806983947754, -0.0022686002776026726, -0.0001833270798670128, -0.010051821358501911, -0.0008797351038083434, -1.2074044942855835, -0.5927743911743164, -2.228407859802246, -0.6100459694862366, -0.16462720930576324, -0.0079282121732831, -0.023365752771496773, -0.004005030728876591, -1.461594581604004, -0.0002748588449321687, -0.13460449874401093, -0.045688141137361526, -0.002669701585546136, -0.15176169574260712, -0.012667078524827957, -0.0005256939912214875, -7.152531907195225e-06, -0.00029297350556589663, -5.972207145532593e-05, -0.06453622877597809, -0.00014828535495325923, -0.0014119903789833188, -8.904537389753386e-05, -0.0002683041093405336, -0.001543165068142116, -0.0031603651586920023, -0.0031248333398252726, -0.007424736861139536, -8.34461570775602e-06, -0.07801695913076401, -0.0001677133986959234, -0.0003381395654287189, -0.00019560330838430673, -0.00041237910045310855, -6.05564855504781e-05, -2.658331868587993e-05, -0.002598958555608988, -0.0004042761866003275, -0.10095268487930298, -0.026495732367038727, -0.2719234526157379, -0.8696158528327942, -1.2294117212295532, -0.006911182310432196, -1.3115426301956177, -0.04805245250463486, -0.000697965151630342, -0.2506660223007202, -0.0007731309160590172, -0.00040642108069732785, -0.006170982029289007, -0.0020623384043574333, -0.04296131432056427, -0.0011355387978255749, -0.13170772790908813, -1.3323427438735962, -0.06028931960463524, -0.001510432455688715, -0.0002644904307089746, -0.00047052756417542696, -0.003172367112711072, -0.3239568769931793, -6.258291978156194e-05, -1.8358061424805783e-05, -0.01707085780799389, -0.001313419546931982, -0.02544071152806282, -1.597391747054644e-05, -0.0001705739414319396, -5.602820692729438e-06, -0.0002420847595203668, -0.00011193125828867778, -0.0009172523277811706, -0.00021765247220173478, -0.00019524575327523053, -0.0001731960946926847, -0.0027791946195065975, -0.0003666205739136785, -8.582700684200972e-05, -0.4228050112724304, -8.940656698541716e-06, -4.60137271147687e-05, -1.0371154530730564e-05, -0.0002299282787134871, -0.0001479277852922678, -0.0008199428557418287, -9.524368942948058e-05, -0.0002829628065228462, -0.009380905888974667, -0.0029747304506599903, -0.0012030514189973474, -0.00026520551182329655, -0.11892541497945786, -0.279431015253067, -0.5301500558853149, -0.08993635326623917, -0.25833988189697266, -0.0003817544784396887, -0.20372724533081055, -0.6877355575561523, -0.049481745809316635, -0.0037456846330314875, -0.038759320974349976, -0.08750379085540771, -0.00062851223628968, -0.0006789048202335835, -0.00013136000779923052, -0.003441247157752514, -0.044803887605667114, -0.024244261905550957, -0.18975214660167694, -0.04143368452787399, -0.13812346756458282, -0.00046659549116156995, -0.012219919823110104, -0.0032976078800857067, -0.6882917881011963, -3.607090950012207, -0.09911321848630905, -0.08750925213098526, -1.1447365283966064, -1.6130914688110352, -0.16788747906684875, -1.1163403987884521, -1.5124967098236084, -1.9123388528823853, -0.7513320446014404, -0.5857290625572205, -1.6783324480056763, -0.009652135893702507, -0.13311567902565002, -0.0005899119423702359, -0.1296387016773224, -0.048964377492666245, -0.698850691318512, -0.25109437108039856, -0.38031062483787537, -0.9110702872276306, -0.018162019550800323, -0.2870735824108124, -0.011582627892494202, -0.0011020784731954336, -0.002715830225497484, -0.005449558608233929, -0.006364078726619482, -0.009457901120185852, -0.00035720644518733025, -1.5465364456176758, -1.7762025890988298e-05, -2.264974000354414e-06, -2.50339189733495e-06, -1.3947389561508317e-05, -0.16335345804691315], "finish_reason": "stop"}], "metrics": {"energy": 714.3726595211035, "energy_per_token": 3.4510756498604036, "time": 17.457489, "time_per_token": 0.08433569565217391}}
{"outputs": [{"text": "file_pattern = re.compile(file_pattern)\n    config_file_path = os.path.join(target_dir, 'config.cfg')\n    num_moved_files = 0\n    for filename in os.listdir(source_dir):\n        if file_pattern.match(filename):\n            src = os.path.join(source_dir, filename)\n            dst = os.path.join(target_dir, filename)\n            shutil.copy(src, dst)\n            num_moved_files += 1\n\n    # Save the file path of the configuration file\n    with open(config_file_path, 'w') as config_file:\n        config_file.write(f\"Created the config file:\\n{config_file_path}\")\n\n    return num_moved_files", "tokens": ["file", "_", "pattern", " =", " re", ".", "compile", "(", "file", "_", "pattern", ")", "\n", "    ", "config", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "config", ".", "cfg", "')", "\n", "    ", "num", "_", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " file", "_", "pattern", ".", "match", "(", "filename", "):", "\n", "            ", "src", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", "\n", "            ", "dst", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", "\n", "            ", "sh", "util", ".", "copy", "(", "src", ",", " dst", ")", "\n", "            ", "num", "_", "m", "oved", "_", "files", " +=", " ", "1", "\n", "\n", "    ", "#", " Save", " the", " file", " path", " of", " the", " configuration", " file", "\n", "    ", "with", " open", "(", "config", "_", "file", "_", "path", ",", " '", "w", "')", " as", " config", "_", "file", ":", "\n", "        ", "config", "_", "file", ".", "write", "(", "f", "\"", "Created", " the", " config", " file", ":\\", "n", "{", "config", "_", "file", "_", "path", "}\"", ")", "\n", "\n", "    ", "return", " num", "_", "m", "oved", "_", "files"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.5582444667816162, -0.26510101556777954, -0.15603755414485931, -0.0003488647344056517, -0.0018375907093286514, -0.004138833377510309, -0.022474583238363266, -3.349725011503324e-05, -1.2755313036905136e-05, -0.038971107453107834, -0.055465422570705414, -0.20229800045490265, -2.0565648078918457, -0.052554354071617126, -0.35450443625450134, -0.9814772605895996, -0.3632435202598572, -0.007526375353336334, -0.7261685729026794, -3.814624506048858e-05, -0.010081915184855461, -7.235741941258311e-05, -0.04445377364754677, -0.04746158421039581, -0.24677902460098267, -0.0002978596603497863, -0.0011714984430000186, -0.003921083174645901, -0.2556019723415375, -0.5243642330169678, -0.2411249428987503, -2.6705286502838135, -0.0013267532922327518, -0.020002439618110657, -0.2790047228336334, -3.473106861114502, -0.006684680003672838, -1.2791727781295776, -0.04494282603263855, -0.5476114749908447, -0.0025874252896755934, -0.0021295505575835705, -0.028268398717045784, -0.00036244976217858493, -0.00913062784820795, -0.8877642154693604, -0.6319832801818848, -1.0351475477218628, -0.0006521005416288972, -0.008947043679654598, -1.1324817933200393e-05, -0.0005446380819194019, -7.867782187531702e-06, -0.000701658078469336, -0.007152546662837267, -0.00010823617776622996, -0.0003873551613651216, -0.0002661589242052287, -0.0031443224288523197, -0.006931426469236612, -0.15114092826843262, -0.2189541608095169, -6.151010165922344e-05, -0.0002379134384682402, -0.004756920039653778, -0.4956762492656708, -0.00033742457162588835, -0.0038943656254559755, -0.05235639959573746, -0.001420323271304369, -0.0026126320008188486, -2.082322835922241, -2.0760855674743652, -0.00280831940472126, -1.2397689715726301e-05, -0.00021443451987579465, -2.729855441430118e-05, -0.0010120513616129756, -0.00014161060971673578, -0.00128020322881639, -0.0001433984871255234, -0.00011574551899684593, -0.0003058442671317607, -0.0022018731106072664, -0.00013040646445006132, -0.0017062166007235646, -0.0007472821744158864, -0.12510885298252106, -0.001722401357255876, -0.0010527789127081633, -9.894321920000948e-06, -0.0002150304353563115, -9.179073458653875e-06, -0.0004094000905752182, -0.0001232548092957586, -0.002789299236610532, -0.00012146688823122531, -0.00016330339713022113, -0.0015549485106021166, -0.004589500371366739, -0.004330424126237631, -0.0003638797497842461, -0.004213384818285704, -0.13316231966018677, -8.093983342405409e-05, -4.4225667807040736e-05, -1.8581711053848267, -0.17566289007663727, -0.0012397230602800846, -0.0002798642381094396, -0.0042196763679385185, -0.002732117660343647, -0.010569899342954159, -0.007589435204863548, -0.1553138941526413, -2.658331868587993e-05, -0.00019274283840786666, -9.536738616588991e-07, -1.4305012882687151e-05, -1.7404405298293568e-05, -0.003956467844545841, -0.0017256144201382995, -0.00016592556494288146, -0.0010829067323356867, -1.9837210178375244, -0.05915229767560959, -2.3887362480163574, -2.811251163482666, -0.5111703872680664, -1.7730331420898438, -2.8120386600494385, -3.2439420223236084, -0.23240770399570465, -0.8992990851402283, -0.005372016690671444, -0.750558614730835, -0.004074249416589737, -0.12189043313264847, -0.0003404037852305919, -0.00920114666223526, -0.004442702513188124, -3.313963316031732e-05, -1.3708974620385561e-05, -0.0003000047872774303, -4.625213477993384e-05, -0.0013010379625484347, -0.01840103417634964, -0.02861866168677807, -0.013559500686824322, -0.00012385078298393637, -1.6200594902038574, -0.015700535848736763, -0.0007739647408016026, -0.0009420248097740114, -0.0003887851198669523, -0.003169277450069785, -0.015550078824162483, -4.875540980719961e-05, -0.0011830481234937906, -0.0008169650682248175, -0.0005429700831882656, -0.1539813131093979, -1.2608648538589478, -1.0043704509735107, -2.8148932456970215, -4.592996120452881, -2.6784884929656982, -0.38315385580062866, -3.898994207382202, -0.006132594775408506, -0.20882761478424072, -0.14731287956237793, -0.00011955977242905647, -6.770858453819528e-05, -0.016720276325941086, -0.00011383838864276186, -0.8870737552642822, -0.00319268717430532, -0.001279012649320066, -0.12967850267887115, -0.008645604364573956, -0.26972466707229614, -0.7154906392097473, -9.894321920000948e-06, -6.747018051100895e-05, -2.50339189733495e-06, -2.9802276912960224e-06, -4.529942543740617e-06], "finish_reason": "stop"}], "metrics": {"energy": 689.7891821517951, "energy_per_token": 3.63046937974629, "time": 15.98239, "time_per_token": 0.08411784210526316}}
{"outputs": [{"text": "files_in_source_dir = os.listdir(source_dir)\n    files_in_target_dir = os.listdir(target_dir)\n\n    # Find files in source dir that do not exist in target dir\n    # and match the file_pattern regular expression\n    files_to_move = []\n    for filename in files_in_source_dir:\n        if re.search(file_pattern, filename) and filename not in files_in_target_dir:\n            files_to_move.append(filename)\n\n    # Move the files that meet the criteria to the target directory\n    moved_count = 0\n    for filename in files_to_move:\n        source_file = os.path.join(source_dir, filename)\n        target_file = os.path.join(target_dir, filename)\n        shutil.move(source_file, target_file)\n        moved_count += 1\n\n    return moved_count", "tokens": ["files", "_", "in", "_", "source", "_", "dir", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "files", "_", "in", "_", "target", "_", "dir", " =", " os", ".", "list", "dir", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Find", " files", " in", " source", " dir", " that", " do", " not", " exist", " in", " target", " dir", "\n", "    ", "#", " and", " match", " the", " file", "_", "pattern", " regular", " expression", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "    ", "for", " filename", " in", " files", "_", "in", "_", "source", "_", "dir", ":", "\n", "        ", "if", " re", ".", "search", "(", "file", "_", "pattern", ",", " filename", ")", " and", " filename", " not", " in", " files", "_", "in", "_", "target", "_", "dir", ":", "\n", "            ", "files", "_", "to", "_", "move", ".", "append", "(", "filename", ")", "\n", "\n", "    ", "#", " Move", " the", " files", " that", " meet", " the", " criteria", " to", " the", " target", " directory", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "source", "_", "file", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", "\n", "        ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "file", ",", " target", "_", "file", ")", "\n", "        ", "m", "oved", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " moved", "_", "count"], "logprobs": [-2.3113791942596436, -0.5475730299949646, -3.4113497734069824, -0.017878802493214607, -1.177405834197998, -0.39034467935562134, -0.071381114423275, -0.014890595339238644, -0.1486033946275711, -4.076874756719917e-05, -0.007060695439577103, -3.015949550899677e-05, -0.0017143089789897203, -0.00420365110039711, -0.00033849707688204944, -0.00014172980445437133, -0.00046588058467023075, -0.042161278426647186, -0.1468486785888672, -1.3467270135879517, -0.015376943163573742, -1.8880804777145386, -0.0003847335756290704, -0.11808731406927109, -0.012523345649242401, -0.001874001114629209, -0.00397368473932147, -0.01923503540456295, -1.1086402082582936e-05, -0.0007060657371766865, -9.786603914108127e-05, -0.00033158526639454067, -0.0018438971601426601, -0.00011216964776394889, -0.00022837892174720764, -0.0002802217786666006, -0.004467862658202648, -0.9679298400878906, -0.0011630444787442684, -1.7132577896118164, -3.2049179077148438, -0.9815037846565247, -0.8506250977516174, -0.7644220590591431, -1.8849586248397827, -0.2865341603755951, -2.8325130939483643, -0.037243977189064026, -0.2875713109970093, -0.005948933307081461, -0.09140389412641525, -0.03688902407884598, -0.4704012870788574, -0.0032153832726180553, -3.146428108215332, -1.0256038904190063, -0.830147922039032, -0.09625021368265152, -0.9213836193084717, -1.4266469478607178, -0.004413981456309557, -2.1546690464019775, -0.003913364838808775, -0.38564032316207886, -0.011041494086384773, -0.35448944568634033, -0.008842832408845425, -0.01983778551220894, -4.172238186583854e-05, -0.17705468833446503, -0.002481121802702546, -0.8826861381530762, -0.004254694562405348, -0.027427172288298607, -0.05595926567912102, -0.7684366703033447, -0.001468295231461525, -0.0036948525812476873, -1.156323378381785e-05, -1.5735502529423684e-05, -4.088794958079234e-05, -0.0008854520856402814, -0.0001472126314183697, -1.6212332411669195e-05, -0.0007489498239010572, -0.0005241450853645802, -0.007935781031847, -0.19045358896255493, -2.521422863006592, -0.00010168035078095272, -1.421481966972351, -0.003109622048214078, -0.017974933609366417, -9.679325739853084e-05, -1.5258672647178173e-05, -0.0017307315720245242, -0.003022271441295743, -0.6941825747489929, -0.10690335929393768, -0.06152370199561119, -0.0027610058896243572, -1.2993727978027891e-05, -0.0014951966004446149, -6.09140915912576e-05, -0.00011407678539399058, -8.583032467868179e-06, -0.0005449955351650715, -0.00012575789878610522, -1.3589766240329482e-05, -0.001678725820966065, -0.0008899780223146081, -0.00560569204390049, -0.09605541825294495, -7.986990567587782e-06, -5.471556869451888e-05, -2.145764938177308e-06, -2.2291887944447808e-05, -0.0004316828562878072, -0.00020787939138244838, -0.0036267952527850866, -0.24896393716335297, -0.0013800868764519691, -0.0005983707960695028, -0.04390652850270271, -0.008623622357845306, -0.09883420169353485, -0.23317711055278778, -0.5901052951812744, -0.2703511714935303, -2.7261908054351807, -0.5392034649848938, -0.12226489186286926, -0.32137998938560486, -1.379676342010498, -0.08104876428842545, -0.028133613988757133, -0.15868233144283295, -0.04052093252539635, -0.0010333680547773838, -2.671947479248047, -0.03138020634651184, -0.0224736500531435, -1.5500470399856567, -0.0015043619787320495, -0.06960281729698181, -0.00023850933939684182, -0.028675541281700134, -0.0035904485266655684, -0.029704244807362556, -0.03310099616646767, -0.0010071687866002321, -0.0009147512027993798, -3.3378546504536644e-06, -9.679325739853084e-05, -1.1920928244535389e-07, -2.777537883957848e-05, -0.0003077510336879641, -0.00020013237372040749, -0.0034077451564371586, -0.6656046509742737, -0.051474399864673615, -1.1658244132995605, -0.8205366134643555, -0.02521301992237568, -4.410734163684538e-06, -0.00018714107864070684, -1.7404405298293568e-05, -0.0012463905150070786, -0.00015436411194968969, -0.0011962646385654807, -0.0002623452164698392, -0.0002119316632160917, -0.0003237200144212693, -0.0005055579822510481, -0.0001289761275984347, -0.0016252892091870308, -0.0007151191821321845, -0.023848697543144226, -0.0003871168300975114, -0.0010445620864629745, -0.00030524839530698955, -0.000512111175339669, -1.1920922133867862e-06, -0.00020549570035655051, -5.602820692729438e-06, -0.00018869050836656243, -7.652943895664066e-05, -0.0010736184194684029, -0.00010132275929208845, -6.854299135738984e-05, -0.000348268891684711, -0.0015248350100591779, -0.0008300673216581345, -0.0002579356369096786, -0.11777795106172562, -0.29978471994400024, -6.437094270950183e-05, -2.1457441107486375e-05, -0.05106499418616295, -8.892617915989831e-05, -0.0011329191038385034, -0.0001538873475510627, -0.0003675738989841193, -0.00019178935326635838, -0.000990734319202602, -1.9073304429184645e-05, -0.011319228447973728, -0.0010032388381659985, -0.0012760362587869167, -0.005538238678127527, -0.018652746453881264, -7.748573807475623e-06, -3.683499380713329e-05, -5.793403761344962e-05, -0.0052777486853301525, -0.0011406589765101671, -8.701899787411094e-05, -0.001073380233719945, -0.0785829946398735, -0.009444438852369785, -0.8841303586959839, -0.1313936561346054, -7.283422019099817e-05, -0.00010287232726113871], "finish_reason": "stop"}], "metrics": {"energy": 817.3945887718195, "energy_per_token": 3.6490829855884797, "time": 19.137537, "time_per_token": 0.08543543303571428}}
{"outputs": [{"text": "source_dir = r'C:\\SomeDir\\\\'\n    target_dir = r'C:\\SomeDir2\\\\'\n    file_pattern = r'\\b[A-Za-z0-9]+\\.(txt|doc|docx)\\b'\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    files = [f for f in os.listdir(source_dir) if re.match(file_pattern, f)]\n    for file in files:\n        src = os.path.join(source_dir, file)\n        dst = os.path.join(target_dir, file)\n        shutil.move(src, dst)\n\n    print(f'Moved {len(files)} files to {target_dir}')\n    return target_dir", "tokens": ["source", "_", "dir", " =", " r", "'", "C", ":\\", "Some", "Dir", "\\\\'", "\n", "    ", "target", "_", "dir", " =", " r", "'", "C", ":\\", "Some", "Dir", "2", "\\\\'", "\n", "    ", "file", "_", "pattern", " =", " r", "'\\", "b", "[", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "]", "+\\", ".", "(", "txt", "|", "doc", "|", "doc", "x", ")\\", "b", "'", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "match", "(", "file", "_", "pattern", ",", " f", ")]", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "src", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "dst", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "        ", "sh", "util", ".", "move", "(", "src", ",", " dst", ")", "\n", "\n", "    ", "print", "(", "f", "'", "M", "oved", " {", "len", "(", "files", ")}", " files", " to", " {", "target", "_", "dir", "}", "')", "\n", "    ", "return", " target", "_", "dir"], "logprobs": [-3.5270965099334717, -0.04933901131153107, -0.18976525962352753, -0.11940688639879227, -2.7539665699005127, -0.41980433464050293, -0.4451759457588196, -0.4470437169075012, -1.3188239336013794, -0.020932821556925774, -1.373607873916626, -0.09061121940612793, -0.019327528774738312, -0.21270796656608582, -0.0016906267264857888, -0.002620598068460822, -0.001935396110638976, -0.10052089393138885, -0.0344056561589241, -0.14193931221961975, -0.16552944481372833, -0.751226544380188, -0.20596973598003387, -1.7728004455566406, -0.025430019944906235, -0.004731886088848114, -0.2340162992477417, -0.3481743037700653, -0.0025107308756560087, -0.02670258842408657, -0.005237785633653402, -0.024884352460503578, -0.03164230287075043, -0.00562252476811409, -0.004854440689086914, -0.0017738097812980413, -5.98412734689191e-05, -0.0002076410164590925, -0.0006691362359561026, -2.2291887944447808e-05, -3.731181277544238e-05, -0.0010189585154876113, -2.6464111215318553e-05, -2.8490614567999728e-05, -0.001915883389301598, -0.00043108707177452743, -9.131014667218551e-05, -0.002043898915871978, -0.005282965954393148, -0.0005265279905870557, -0.0012646066024899483, -0.00995091162621975, -0.00035482310340739787, -0.0001938155182870105, -0.0070795160718262196, -5.602679812000133e-05, -0.001293656532652676, -0.051196157932281494, -0.6577864289283752, -2.9111878871917725, -0.26235002279281616, -0.030868178233504295, -6.151010165922344e-05, -0.006909879855811596, -8.916457591112703e-05, -0.29174891114234924, -0.0037080359179526567, -0.4300462305545807, -0.0008436457719653845, -0.001498172408901155, -0.002415836090222001, -0.010258211754262447, -0.018057826906442642, -0.03967677801847458, -2.7179348762729205e-05, -0.24488919973373413, -0.00042083943844772875, -0.0012685356196016073, -0.0014524635626003146, -0.00097977789118886, -0.0001559135998832062, -0.00011824862303910777, -0.006173588335514069, -0.02223094366490841, -1.3575798273086548, -0.011502377688884735, -1.8174476623535156, -0.5788444876670837, -0.8511507511138916, -0.7186120748519897, -0.04715868830680847, -0.0005830018781125546, -5.602679812000133e-05, -0.0032340388279408216, -4.6967357775429264e-05, -0.0014774608425796032, -5.221230458118953e-05, -0.0015185264637693763, -0.015031639486551285, -0.000286657246761024, -0.00017236177518498152, -0.016563640907406807, -0.08548016101121902, -0.3000456988811493, -0.00010513706365600228, -0.4281935691833496, -0.0004188137245364487, -0.013881330378353596, -0.00023052419419400394, -0.0001928620331455022, -0.0006395916570909321, -0.004873302765190601, -0.11663998663425446, -0.0036467495374381542, -0.2878701090812683, -0.8594375252723694, -0.8223729729652405, -0.11103959381580353, -0.0014357983600348234, -0.00041154498467221856, -0.00027509720530360937, -0.0060874526388943195, -1.9264841079711914, -1.0722763538360596, -0.016782525926828384, -6.318072337307967e-06, -0.0002848696312867105, -6.353653589030728e-05, -0.0007925468380562961, -0.0002172949316445738, -0.0017322786152362823, -0.00022659118985757232, -9.345571743324399e-05, -0.0004925706889480352, -0.0028288844041526318, -0.00035291642416268587, -0.0017979660769924521, -0.0010979106882587075, -0.08157837390899658, -0.0005267662927508354, -0.0014779369812458754, -2.50339189733495e-06, -6.282132380874828e-05, -5.960446742392378e-06, -0.00034671969478949904, -0.00016985881666187197, -0.0019031523261219263, -0.00015793983766343445, -0.00015758226800244302, -0.0009042703313753009, -0.012349803000688553, -0.006986355874687433, -0.0004104725376237184, -0.01203407533466816, -0.05723569914698601, -0.000188332938705571, -3.981510963058099e-05, -0.1453246921300888, -0.00021765247220173478, -0.0009869233472272754, -0.0002506657037883997, -0.002957139629870653, -0.0616007074713707, -0.02338927797973156, -0.49208053946495056, -0.10189741849899292, -2.5496513843536377, -0.08819546550512314, -0.7408839464187622, -1.4998559951782227, -0.7979490160942078, -0.0033693707082420588, -0.025617806240916252, -0.0064879730343818665, -0.00011872540198964998, -0.0006046851049177349, -0.0004881620698142797, -0.11985956877470016, -1.6129868030548096, -0.051214732229709625, -0.009524381719529629, -0.0002914242504630238, -0.0010027624666690826, -0.013752940110862255, -0.22331061959266663, -0.11503511667251587, -0.5520942211151123, -0.1859212964773178, -1.5320621728897095, -0.0012872274965047836, -0.002022960688918829], "finish_reason": "stop"}], "metrics": {"energy": 678.0515849533084, "energy_per_token": 3.550008298184861, "time": 15.983444, "time_per_token": 0.08368295287958115}}
{"outputs": [{"text": "file_count = 0\n    if not os.path.exists(source_dir):\n        raise Exception(f\"The directory {source_dir} does not exist.\")\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n    pattern = re.compile(file_pattern)\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if pattern.search(file):\n                src_path = os.path.join(root, file)\n                shutil.move(src_path, target_dir)\n                file_count += 1\n\n    return file_count", "tokens": ["file", "_", "count", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Exception", "(", "f", "\"", "The", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "file", "_", "pattern", ")", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " pattern", ".", "search", "(", "file", "):", "\n", "                ", "src", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "sh", "util", ".", "move", "(", "src", "_", "path", ",", " target", "_", "dir", ")", "\n", "                ", "file", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " file", "_", "count"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.7007977962493896, -0.005699929315596819, -0.014309884048998356, -0.0008665143977850676, -0.0980934351682663, -0.1706344336271286, -3.1154675483703613, -0.1939949095249176, -0.01894264668226242, -3.1709168979432434e-05, -0.00503557501360774, -3.528532761265524e-05, -0.2806164026260376, -0.001863292302004993, -1.6814335584640503, -7.092700980138034e-05, -8.308542601298541e-05, -0.058624058961868286, -0.01211604941636324, -0.00862894020974636, -1.560025691986084, -1.7991619110107422, -0.2117699682712555, -0.7076853513717651, -0.2839432656764984, -2.1771132946014404, -0.8489232063293457, -0.798760175704956, -0.010355904698371887, -2.9682672902708873e-05, -7.867782187531702e-06, -0.005877947900444269, -0.10503897070884705, -0.001259487122297287, -0.024117428809404373, -0.5159087777137756, -0.04854031652212143, -0.001053493469953537, -0.002140613505616784, -0.33991187810897827, -0.2433243840932846, -0.0815231055021286, -0.006711678113788366, -8.702239938429557e-06, -0.006445808336138725, -9.536697689327411e-06, -0.0423806868493557, -0.0003069168305955827, -0.003789032343775034, -5.340433563105762e-05, -4.577531944960356e-05, -0.003540439996868372, -0.0004127365828026086, -0.003235227195546031, -0.2081441879272461, -8.4638240878121e-06, -0.12097222357988358, -0.0001839230244513601, -0.0002022777043748647, -0.0005569098866544664, -0.0022100803907960653, -3.480850500636734e-05, -3.838465272565372e-05, -0.014499183744192123, -0.01774834655225277, -0.3056078553199768, -2.288914680480957, -0.04419684037566185, -0.07008683681488037, -3.218599158572033e-05, -0.0008188708452507854, -0.0021108745131641626, -0.022432969883084297, -3.540453326422721e-05, -1.5735502529423684e-05, -0.05051376298069954, -0.02925642393529415, -0.10008536279201508, -0.16916441917419434, -1.0185556411743164, -0.005443511996418238, -0.17092828452587128, -0.0008387623238377273, -0.00018988236843142658, -0.010760498233139515, -0.0009112972766160965, -0.00041607304592616856, -1.1801649634435307e-05, -0.00011002412065863609, -0.0004120216181036085, -0.006543518975377083, -4.2676016164477915e-05, -1.8000440832111053e-05, -0.07320800423622131, -0.0032362965866923332, -0.003579520620405674, -0.03707880526781082, -0.32676565647125244, -0.10952678322792053, -0.00338564720004797, -9.572047565598041e-05, -0.00019703354337252676, -0.002378137083724141, -0.14402280747890472, -0.09550774097442627, -0.0008878341759555042, -1.6890881061553955, -0.00027426297310739756, -0.004179552663117647, -0.03739878535270691, -0.0025668551679700613, -0.0012694880133494735, -2.320089340209961, -0.18101131916046143, -0.39384111762046814, -0.002445684978738427, -0.00507068308070302, -2.861018856492592e-06, -0.00011598391574807465, -1.537788011773955e-05, -0.0013996100751683116, -5.590759246842936e-05, -0.06699034571647644, -0.00012540031457319856, -0.006881821434944868, -0.00016246906307060272, -0.003782500745728612, -0.0014699617167934775, -1.4220967292785645, -0.00021586472576018423, -2.3483953555114567e-05, -0.43198704719543457, -0.00019822540343739092, -0.003261605743318796, -0.0004481264913920313, -9.131014667218551e-05, -0.0006741396500729024, -0.1993122696876526, -0.0002150304353563115, -0.0019882211927324533, -0.013670865446329117, -0.007317408453673124, -0.009899921715259552, -0.028605109080672264, -7.843663479434326e-05, -0.00019369633810129017, -0.01465860940515995, -0.0061393482610583305, -0.00026472879108041525, -0.0009926398051902652, -2.7142910957336426, -0.050924863666296005, -0.7154377102851868, -0.17302930355072021, -0.0001578206429257989, -0.0002299282787134871], "finish_reason": "stop"}], "metrics": {"energy": 572.1747594051359, "energy_per_token": 3.6213592367413665, "time": 13.249475, "time_per_token": 0.08385743670886076}}
{"outputs": [{"text": "# \u4f7f\u7528re\u6a21\u5757\u8fdb\u884c\u6587\u4ef6\u540d\u5339\u914d\n    pattern = file_pattern\n    file_list = [file for file in os.listdir(source_dir) if re.search(pattern, file)]\n\n    # \u79fb\u52a8\u5339\u914d\u7684\u6587\u4ef6\u5230\u76ee\u6807\u76ee\u5f55\n    for filename in file_list:\n        src = os.path.join(source_dir, filename)\n        dst = os.path.join(target_dir, filename)\n        shutil.move(src, dst)\n\n    # \u8fd4\u56de\u8def\u5f84\u5230\u914d\u7f6e\u6587\u4ef6\n    config_file = os.path.join(target_dir, \"config.txt\")\n    with open(config_file, \"w\") as f:\n        for filename in file_list:\n            f.write(\"{}\\n\".format(os.path.join(target_dir, filename)))\n\n    # \u8fd4\u56de\u5904\u7406\u540e\u7684\u6587\u4ef6\u5217\u8868\n    return config_file", "tokens": ["#", " ", "\u4f7f\u7528", "re", "\u6a21\u5757", "\u8fdb\u884c", "\u6587\u4ef6", "\u540d", "\u5339\u914d", "\n", "    ", "pattern", " =", " file", "_", "pattern", "\n", "    ", "file", "_", "list", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "pattern", ",", " file", ")]", "\n", "\n", "    ", "#", " ", "\u79fb\u52a8", "\u5339\u914d", "\u7684", "\u6587\u4ef6", "\u5230", "\u76ee\u6807", "\u76ee\u5f55", "\n", "    ", "for", " filename", " in", " file", "_", "list", ":", "\n", "        ", "src", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", "\n", "        ", "dst", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", "\n", "        ", "sh", "util", ".", "move", "(", "src", ",", " dst", ")", "\n", "\n", "    ", "#", " ", "\u8fd4\u56de", "\u8def\u5f84", "\u5230", "\u914d\u7f6e", "\u6587\u4ef6", "\n", "    ", "config", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " \"", "config", ".", "txt", "\"", ")", "\n", "    ", "with", " open", "(", "config", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "for", " filename", " in", " file", "_", "list", ":", "\n", "            ", "f", ".", "write", "(", "\"", "{}\\", "n", "\"", ".", "format", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")))", "\n", "\n", "    ", "#", " ", "\u8fd4\u56de", "\u5904\u7406", "\u540e\u7684", "\u6587\u4ef6", "\u5217\u8868", "\n", "    ", "return", " config", "_", "file"], "logprobs": [-1.442763090133667, -4.063405990600586, -3.2914013862609863, -2.9593558311462402, -0.5521755218505859, -3.7893152236938477, -1.5021363496780396, -0.6086415648460388, -0.18361428380012512, -0.14214564859867096, -0.0040076426230371, -1.9801299571990967, -0.013888854533433914, -2.807922840118408, -0.00021801002731081098, -0.00014423283573705703, -0.07672694325447083, -0.12485826760530472, -1.86057448387146, -0.03608296066522598, -0.5546115636825562, -0.005834572017192841, -1.249410629272461, -0.9318780899047852, -0.14639043807983398, -0.0004693360242526978, -0.0003225283289793879, -0.006190056446939707, -1.1801649634435307e-05, -0.00100514420773834, -1.1086402082582936e-05, -0.0010363452602177858, -0.04492732509970665, -0.00018451895448379219, -0.00018475732940714806, -0.004791563376784325, -0.033431123942136765, -0.1649509221315384, -6.16293036728166e-05, -1.8646924495697021, -0.00025829317746683955, -0.008699612691998482, -0.00248445151373744, -0.014284852892160416, -0.14284488558769226, -0.0055038584396243095, -0.5585848093032837, -0.0013509204145520926, -0.13321064412593842, -0.40986061096191406, -2.243241310119629, -1.464050054550171, -0.5781438946723938, -0.0009034366230480373, -0.7443540096282959, -0.130265012383461, -0.22335734963417053, -0.1404496729373932, -0.0011447074357420206, -0.7493906617164612, -2.1276497840881348, -0.0002460177056491375, -0.0023528055753558874, -1.8000440832111053e-05, -1.9192511899746023e-05, -0.0004117832868359983, -0.0006792622152715921, -0.005544640589505434, -1.326736569404602, -1.3664582967758179, -0.02344202995300293, -9.775113539944869e-06, -0.0003666205739136785, -1.6093124941107817e-05, -0.0006163604557514191, -0.0004029654082842171, -0.0010543270036578178, -0.00022456508304458112, -0.00012683063687290996, -0.00043275527423247695, -0.002442236291244626, -0.00018630675913300365, -0.019495071843266487, -0.000878663151524961, -0.08188804984092712, -0.0005438040825538337, -0.0007512131123803556, -5.722029527532868e-06, -8.868777513271198e-05, -6.198863957251888e-06, -0.0003190723655279726, -0.0002649671514518559, -0.0017348966794088483, -0.00010346830822527409, -0.0001438752660760656, -0.0034095270093530416, -0.0027278377674520016, -0.0016628975281491876, -0.0008000510279089212, -0.019641196355223656, -0.06274547427892685, -6.83045873302035e-05, -2.098061486321967e-05, -0.06268434226512909, -0.00012110930401831865, -0.0005989664932712913, -0.00022206225548870862, -0.00343732675537467, -0.01595996879041195, -0.012600688263773918, -0.15018457174301147, -0.061467986553907394, -0.26385608315467834, -0.05606217309832573, -0.7266066670417786, -3.9361140727996826, -1.0299378633499146, -0.6329770684242249, -0.0034956559538841248, -0.09140650928020477, -0.002281683497130871, -0.6848568320274353, -0.012082836590707302, -0.43096035718917847, -0.23059576749801636, -0.16732513904571533, -1.3351351299206726e-05, -0.0005629861843772233, -0.00010382589971413836, -0.060401998460292816, -0.04388975724577904, -0.18196003139019012, -0.00029476112104021013, -0.0005183068569749594, -0.001369729870930314, -2.587028741836548, -0.5247890949249268, -0.08454355597496033, -0.4532475471496582, -0.00030655929003842175, -0.0004876854654867202, -0.0063461922109127045, -0.03559381142258644, -0.14947041869163513, -0.00040618274942971766, -0.0013333010720089078, -0.0008816407644189894, -3.111314072157256e-05, -1.823885577323381e-05, -0.0007362039177678525, -0.4758059084415436, -0.024845048785209656, -0.008481789380311966, -0.024884352460503578, -8.248942322097719e-05, -0.11322331428527832, -0.007855829782783985, -0.0019450333202257752, -0.0023236675187945366, -1.5970851182937622, -0.09324292838573456, -0.00027736154152080417, -0.016268359497189522, -2.169585604860913e-05, -3.313963316031732e-05, -0.0004576589271891862, -0.0009691785671748221, -0.0015982723562046885, -0.09861863404512405, -4.339123915997334e-05, -0.0005519058904610574, -0.004988011438399553, -2.552316427230835, -1.0798038244247437, -0.007135739549994469, -0.0013436584267765284, -0.0008454324561171234, -0.0004117832868359983, -0.0009055804111994803, -0.8618909120559692, -4.136476854910143e-05, -5.364274329622276e-05, -4.708655978902243e-05, -0.018258240073919296, -0.002800592454150319, -0.05446041002869606, -8.785339014139026e-05, -0.00010334911348763853, -0.0005416594794951379, -0.004806630779057741, -0.005822720471769571, -0.005117294378578663, -0.6962925791740417, -0.013584432192146778, -1.531191110610962, -0.06857796758413315, -0.2031639814376831, -4.208574295043945, -1.321291446685791, -0.05202261358499527, -3.329648733139038, -0.22189870476722717, -0.0017463208641856909, -0.05022652447223663, -0.697340726852417, -0.0001389883691444993, -0.00023541064001619816], "finish_reason": "stop"}], "metrics": {"energy": 705.0728319358822, "energy_per_token": 3.4061489465501555, "time": 17.460331, "time_per_token": 0.08434942512077295}}
{"outputs": [{"text": "# initialize a list to store the matched files\n    files_to_move = []\n\n    # walk through the directory tree and look for files that match the pattern\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if re.match(file_pattern, file):\n                files_to_move.append(os.path.join(root, file))\n\n    # move the files to the target directory\n    for file in files_to_move:\n        shutil.move(file, target_dir)\n\n    # return the number of moved files\n    return len(files_to_move)", "tokens": ["#", " initialize", " a", " list", " to", " store", " the", " matched", " files", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "\n", "    ", "#", " walk", " through", " the", " directory", " tree", " and", " look", " for", " files", " that", " match", " the", " pattern", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "):", "\n", "                ", "files", "_", "to", "_", "move", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "#", " move", " the", " files", " to", " the", " target", " directory", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "#", " return", " the", " number", " of", " moved", " files", "\n", "    ", "return", " len", "(", "files", "_", "to", "_", "move", ")"], "logprobs": [-1.442763090133667, -4.895811080932617, -1.5730376243591309, -1.3419301509857178, -0.28333112597465515, -0.43944066762924194, -0.46513327956199646, -2.6467599868774414, -1.3121600151062012, -0.12629996240139008, -0.0027598170563578606, -1.9322500228881836, -0.43567243218421936, -0.46513476967811584, -0.0003228858404327184, -0.27434805035591125, -0.0034722534473985434, -0.013852996751666069, -0.0011551857460290194, -0.3404005169868469, -0.0007884969236329198, -0.036095838993787766, -2.387777805328369, -0.1791468858718872, -0.16066254675388336, -0.9012278914451599, -1.5567964315414429, -0.6455304026603699, -2.0979464054107666, -0.0018942285096272826, -0.29133814573287964, -0.14952830970287323, -0.007814313285052776, -0.022823503240942955, -0.26903507113456726, -0.06246744096279144, -0.0010284854797646403, -0.03818485513329506, -0.5298876166343689, -0.007933415472507477, -0.12286199629306793, -0.0002503081923350692, -9.16677454370074e-05, -0.01517653837800026, -0.0004256058018654585, -0.0005783553933724761, -5.781483559985645e-05, -6.174850568640977e-05, -0.0007666985620744526, -0.007309716194868088, -0.0002814135223161429, -0.00019596086349338293, -0.016179922968149185, -0.0019254018552601337, -0.006218370981514454, -0.04527396708726883, -0.5363897085189819, -0.095375657081604, -0.001423894427716732, -0.0002584123576525599, -0.000382707774406299, -0.0025955105666071177, -0.10257760435342789, -0.024543829262256622, -5.531158240046352e-05, -0.2675216495990753, -0.0007686044555157423, -0.013348733074963093, -0.00022218143567442894, -1.7046782886609435e-05, -0.0005236684810370207, -0.002916014287620783, -0.05044825002551079, -0.002701207296922803, -0.00188137823715806, -0.45405682921409607, -6.735097849741578e-05, -1.8358061424805783e-05, -3.576272320060525e-06, -5.6265202147187665e-05, -0.0001646144810365513, -0.0007726544863544405, -0.006497329566627741, -0.011947971768677235, -3.2186455882765586e-06, -0.00011789103882620111, -2.3841574147809297e-05, -0.0026918151415884495, -0.00012361239350866526, -0.012392307631671429, -0.00017712931730784476, -0.0024990777019411325, -0.00047994061606004834, -0.005166749935597181, -0.04080616310238838, -0.006884189322590828, -0.015644792467355728, -0.49811235070228577, -0.05790553614497185, -1.5030436515808105, -0.3733765482902527, -0.01745927333831787, -0.04075019806623459, -0.014419990591704845, -0.18540059030056, -0.0014423454413190484, -0.12223904579877853, -0.029573356732726097, -0.2448500096797943, -0.0009765623253770173, -3.1470757676288486e-05, -2.276871418871451e-05, -3.576278118089249e-07, -6.675497570540756e-05, -0.0004413345886860043, -0.0001731960946926847, -0.005783372092992067, -0.13542845845222473, -0.00010835537250386551, -3.302042750874534e-05, -0.04983849823474884, -0.00016115797916427255, -0.0016014858847483993, -0.0006874820101074874, -0.025967257097363472, -0.00016425691137555987, -0.0002646096108946949, -0.013384491205215454, -0.0057715196162462234, -0.029143191874027252, -0.03543182089924812, -0.11877277493476868, -0.9184538722038269, -0.07218119502067566, -0.3694656789302826, -0.0007699147681705654, -1.9265437126159668, -0.003181398380547762, -0.04178302735090256, -0.002455436158925295, -0.027746424078941345, -0.06486262381076813, -0.00014876213390380144, -0.0006180283380672336, -0.00022897482267580926, -2.95634672511369e-05, -3.099436753473128e-06, -0.0002181292074965313, -0.20728319883346558], "finish_reason": "stop"}], "metrics": {"energy": 544.6729461975096, "energy_per_token": 3.6555231288423466, "time": 12.40309, "time_per_token": 0.08324221476510067}}
{"outputs": [{"text": "# create directory if not exists\n    if not os.path.exists(target_dir):\n        os.mkdir(target_dir)\n\n    # count files that was moved\n    cnt = 0\n\n    # iterate directory\n    for filename in os.listdir(source_dir):\n        file_path = os.path.join(source_dir, filename)\n\n        # if filepath is a file and match the pattern\n        if os.path.isfile(file_path) and re.match(file_pattern, filename):\n            shutil.copy(file_path, target_dir)\n            cnt += 1\n\n    return cnt", "tokens": ["#", " create", " directory", " if", " not", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " count", " files", " that", " was", " moved", "\n", "    ", "cnt", " =", " ", "0", "\n", "\n", "    ", "#", " iterate", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "#", " if", " file", "path", " is", " a", " file", " and", " match", " the", " pattern", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " re", ".", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "            ", "sh", "util", ".", "copy", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "            ", "cnt", " +=", " ", "1", "\n", "\n", "    ", "return", " c", "nt", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.442763090133667, -3.7682363986968994, -3.4832639694213867, -0.7938637137413025, -1.129323959350586, -0.6108943819999695, -0.05503372848033905, -0.005310002248734236, -0.16600282490253448, -0.03391476348042488, -0.0029678368009626865, -1.1801649634435307e-05, -0.0015116228023543954, -5.936446541454643e-05, -0.12913522124290466, -0.0009950215462595224, -0.02839667722582817, -0.00011657988943625242, -0.00013243274588603526, -0.0033864788711071014, -0.005861593410372734, -0.008798403665423393, -0.03319486603140831, -1.3589766240329482e-05, -1.4564087390899658, -0.001100649475120008, -0.006985645741224289, -0.00216166814789176, -5.876845170860179e-05, -4.589452510117553e-05, -0.0022697895765304565, -0.0017754758009687066, -0.2005239874124527, -0.0021387101151049137, -0.5851505994796753, -3.1846370697021484, -1.6005479097366333, -2.090033531188965, -3.3564791679382324, -0.20417141914367676, -0.19218957424163818, -0.0005934861255809665, -3.4530744552612305, -0.26768338680267334, -0.01648695580661297, -0.0012029323261231184, -0.0028662097174674273, -0.6663776636123657, -0.0006565084331668913, -0.3469710350036621, -1.6933743953704834, -3.70468807220459, -0.5921632647514343, -0.0003678122302517295, -0.04403144493699074, -1.3868842124938965, -0.001347110839560628, -0.0079433498904109, -4.410734163684538e-06, -0.005362293682992458, -8.344646857949556e-07, -0.00047136162174865603, -0.006455283612012863, -0.00019524575327523053, -2.8132995794294402e-05, -0.0004533693427219987, -0.0015688742278143764, -0.1680782437324524, -2.7159786224365234, -0.5659086108207703, -0.17178571224212646, -0.012860925868153572, -0.021254271268844604, -1.9073468138230965e-06, -0.0005156855913810432, -7.510157047363464e-06, -0.0030163289047777653, -0.00014327930693980306, -0.002456030808389187, -2.0503786799963564e-05, -8.868777513271198e-05, -0.00020346954988781363, -0.003333252388983965, -0.0003631647559814155, -0.011251570656895638, -0.5049805641174316, -0.0019752532243728638, -0.09924837201833725, -1.9166958332061768, -0.648545503616333, -2.893486261367798, -0.06724171340465546, -0.038746707141399384, -0.08848444372415543, -0.7627925872802734, -1.359151005744934, -1.3194142580032349, -0.22841528058052063, -0.3276020586490631, -0.0002449450839776546, -0.01779167726635933, -0.0185721255838871, -7.390948667307384e-06, -1.6689160474925302e-05, -9.536738616588991e-07, -0.0002119316632160917, -0.00044848397374153137, -0.00012706902634818107, -0.002149891806766391, -0.0009254701435565948, -6.079655122448457e-06, -0.1337033212184906, -0.009913377463817596, -0.048474106937646866, -3.886147169396281e-05, -0.45122262835502625, -0.0010608765296638012, -0.019758429378271103, -5.4238757002167404e-05, -0.001150541938841343, -0.0008684201166033745, -0.05123681575059891, -0.12024693936109543, -0.0005534547381103039, -0.05839986354112625, -1.7217676639556885, -5.519237674889155e-05, -2.372236667724792e-05, -1.2224370241165161, -0.3063867688179016, -0.006392152048647404, -0.001598986447788775, -3.814624506048858e-05, -0.00034397884155623615, -0.109071746468544, -0.00013469743134919554, -0.000358159770257771, -0.01756376214325428, -0.02729644812643528, -0.06771763414144516, -0.04403635114431381, -0.05477656424045563, -0.004242824390530586, -0.00019226610311307013, -0.006442610174417496, -0.08702681213617325, -0.011799541302025318, -0.5667259693145752, -0.15880082547664642, -0.00013064485392533243, -1.9388353824615479, -3.6954811548639555e-06, -8.702239938429557e-06, -1.311301275563892e-06, -6.6756979322235566e-06, -0.08328836411237717], "finish_reason": "stop"}], "metrics": {"energy": 532.0741955413816, "energy_per_token": 3.4107320227011644, "time": 13.035169, "time_per_token": 0.08355877564102564}}
{"outputs": [{"text": "files_to_move = []\n    for root, _, filenames in os.walk(source_dir):\n        for filename in filenames:\n            if re.match(file_pattern, filename):\n                files_to_move.append(os.path.join(root, filename))\n\n    # Move files to the target directory\n    for file in files_to_move:\n        shutil.copy2(file, target_dir)\n\n    config_file = os.path.join(target_dir, 'config.ini')\n    with open(config_file, 'w') as f:\n        f.write('Moved Files:\\n')\n        for file in files_to_move:\n            f.write(file + '\\n')\n\n    return config_file", "tokens": ["files", "_", "to", "_", "move", " =", " []", "\n", "    ", "for", " root", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "                ", "files", "_", "to", "_", "move", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", "))", "\n", "\n", "    ", "#", " Move", " files", " to", " the", " target", " directory", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "sh", "util", ".", "copy", "2", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "config", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "config", ".", "ini", "')", "\n", "    ", "with", " open", "(", "config", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "f", ".", "write", "('", "M", "oved", " Files", ":\\", "n", "')", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "            ", "f", ".", "write", "(", "file", " +", " '\\", "n", "')", "\n", "\n", "    ", "return", " config", "_", "file", "\n", "\n", "if"], "logprobs": [-2.3113791942596436, -0.5475730299949646, -0.9247812628746033, -0.0003665013937279582, -0.2928012013435364, -0.005486905109137297, -0.24549566209316254, -0.026846153661608696, -0.17901752889156342, -0.35347485542297363, -1.2059745788574219, -0.004222762770950794, -1.9565784931182861, -0.014988071285188198, -1.458736777305603, -3.576214658096433e-05, -2.0503786799963564e-05, -0.0009582218481227756, -0.0007873057620599866, -0.00022480344341602176, -5.602679812000133e-05, -0.0005896736984141171, -0.009719666093587875, -0.00014435203047469258, -0.00013886917440686375, -0.018771501258015633, -0.0066978237591683865, -0.007240010891109705, -0.08345835655927658, -0.10754439234733582, -0.0002917817619163543, -0.004267395939677954, -2.062299427052494e-05, 0.0, -6.460934673668817e-05, -0.0004766043566633016, -0.0031860326416790485, -0.09441475570201874, -0.03628680855035782, -7.1403817855753e-05, -0.3654421269893646, -0.0006399490521289408, -0.011643900536000729, -8.689979586051777e-05, -7.986990567587782e-06, -0.001387705677188933, -0.0034489689860492945, -0.07124058902263641, -0.0032567339949309826, -0.0012351986952126026, -0.38649576902389526, -5.07818695041351e-05, -5.543078441405669e-05, -2.50339189733495e-06, -6.603976362384856e-05, -0.00023421882360707968, -0.002305827336385846, -0.010541708208620548, -0.007611558772623539, -5.960462772236497e-07, -0.00018475732940714806, -2.7894584491150454e-05, -0.005699929315596819, -0.00012933371181134135, -0.004008473828434944, -0.00019202772818971425, -0.0014254419365897775, -0.0006399490521289408, -0.0014353221049532294, -0.5274348855018616, -0.0062905168160796165, -2.47322940826416, -0.8920093178749084, -1.0070245265960693, -0.6702022552490234, -0.5705214738845825, -0.04470733553171158, -0.02112145535647869, -0.17674335837364197, -0.0020895807538181543, -0.22926178574562073, -0.24373169243335724, -1.7646640539169312, -0.0018196230521425605, -2.3364747903542593e-05, -9.536697689327411e-06, -4.768370445162873e-07, -3.814689989667386e-06, -0.0007400158210657537, -0.00019202772818971425, -0.0034008543007075787, -0.20378004014492035, -6.05564855504781e-05, -2.3603161025675945e-05, -2.60054612159729, -1.1294670104980469, -0.0001728385395836085, -0.0024435443338006735, -0.000727508042473346, -0.021221594884991646, -0.0001387499796692282, -0.00043752157944254577, -0.01041701715439558, -0.0733194574713707, -0.06877296417951584, -0.05147417262196541, -3.2226788997650146, -0.014480854384601116, -0.4013456702232361, -0.5410548448562622, -0.10810156166553497, -2.5510462364763953e-05, -0.0007883778307586908, -5.709961988031864e-05, -0.03548325225710869, -0.02469724230468273, -0.22366231679916382, -0.0002321927313460037, -0.0002548369811847806, -0.0013678251998499036, -0.2238115668296814, -0.44302815198898315, -0.13430187106132507, -1.650679111480713, -0.0002857038634829223, -0.025504162535071373, -0.08015508949756622, -0.16177383065223694, -0.00034314466756768525, -0.0010711177019402385, -0.0006804534932598472, -3.313963316031732e-05, -4.410734163684538e-06, -0.0008089845650829375, -0.0141163170337677, -0.034081608057022095, -0.024433085694909096, -0.0002138386043952778, -0.181773379445076, -0.012799609452486038, -0.000952267087996006, -0.0012884180760011077, -0.8020817637443542, -3.611976353568025e-05, -0.06279215961694717, -0.3970928192138672, -2.996114730834961, -0.029946187511086464, -2.912416458129883, -0.19671906530857086, -0.0006562701892107725, -0.038968928158283234, -0.000277123210253194, -0.003931413404643536, -0.06541159003973007, -0.055613260716199875, -0.01265177596360445, -0.00927248690277338, -5.07818695041351e-05, -2.3603161025675945e-05, -2.3841855067985307e-07, -2.312633478140924e-05, -0.0005427317810244858, -0.00020895205670967698, -0.0007074952009133995, -0.037163347005844116, -3.540453326422721e-05, -9.560128091834486e-05, -0.04678448289632797, -0.7398549914360046, -0.029225047677755356, -0.005064990371465683, -0.00024077377747744322, -0.00040046300273388624, -0.0032011240255087614, -0.09801919013261795, -0.006002850364893675, -0.11407772451639175, -0.08127497881650925, -4.970903682988137e-05, -2.038458114839159e-05, -0.29341965913772583, -0.012497327290475368, -0.630608320236206], "finish_reason": "stop"}], "metrics": {"energy": 623.3551921958918, "energy_per_token": 3.3877999575863686, "time": 15.350822, "time_per_token": 0.08342838043478261}}
{"outputs": [{"text": "# Define a regular expression pattern for file names that should be moved.\n    pattern = re.compile(file_pattern)\n\n    # Create the target directory if it doesn't exist.\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Find all files in the source directory that match the pattern and move them to the target directory.\n    moved_count = 0  # Initialize a counter to keep track of the number of files moved.\n    for filename in os.listdir(source_dir):\n        if pattern.match(filename):\n            shutil.move(os.path.join(source_dir, filename), target_dir)\n            moved_count += 1  # Increment the counter after each file move.\n\n    # Return the number of files moved.\n    return moved_count", "tokens": ["#", " Define", " a", " regular", " expression", " pattern", " for", " file", " names", " that", " should", " be", " moved", ".", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "file", "_", "pattern", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " in", " the", " source", " directory", " that", " match", " the", " pattern", " and", " move", " them", " to", " the", " target", " directory", ".", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "  ", "#", " Initialize", " a", " counter", " to", " keep", " track", " of", " the", " number", " of", " files", " moved", ".", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " pattern", ".", "match", "(", "filename", "):", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", " target", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "count", " +=", " ", "1", "  ", "#", " In", "crement", " the", " counter", " after", " each", " file", " move", ".", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " files", " moved", ".", "\n", "    ", "return", " moved", "_", "count", "\n", "\n", "def"], "logprobs": [-1.442763090133667, -3.3821680545806885, -1.5381327867507935, -0.6300410628318787, -0.002900443272665143, -0.37484902143478394, -1.4278769493103027, -2.518354892730713, -0.24807283282279968, -2.476206064224243, -2.5900895595550537, -0.02605529874563217, -0.24425669014453888, -1.5292118787765503, -0.05142831429839134, -0.02242562733590603, -1.0963659286499023, -0.011590758338570595, -0.4394336938858032, -0.00011955977242905647, -0.0006398299592547119, -0.0034910230897367, -0.021524516865611076, -3.7431014789035544e-05, -1.811964830267243e-05, -0.04207875579595566, -0.02574015222489834, -0.2533961832523346, -0.000940714729949832, -0.049015797674655914, -2.1059012413024902, -1.5555362701416016, -0.2973732054233551, -0.02494737319648266, -0.034115020185709, -0.0034162988886237144, -0.44723811745643616, -0.000990257947705686, -8.475421054754406e-05, -0.17156030237674713, -0.1544976830482483, -0.006971676833927631, -0.001191978226415813, -0.29400521516799927, -0.007699573878198862, -0.0014722233172506094, -1.7046782886609435e-05, -0.0006685405969619751, -4.60137271147687e-05, -0.055160313844680786, -0.00026913834153674543, -0.0019376566633582115, -0.00032264748006127775, -0.0004573014739435166, -0.0009074860718101263, -0.0005944392178207636, -0.004068669397383928, -0.01115644071251154, -7.629365427419543e-06, -0.08754463493824005, -0.00013100242358632386, -0.0003960540343541652, -0.00029130507027730346, -0.0002616301644593477, -2.8729025871143676e-05, -2.074220174108632e-05, -0.0038975717034190893, -0.0007664603181183338, -0.028022341430187225, -0.001763337990269065, -0.037020452320575714, -2.751567840576172, -0.29500269889831543, -0.30573466420173645, -0.13008950650691986, -0.021529067307710648, -0.029910437762737274, -0.008323267102241516, -0.38871797919273376, -0.01954791322350502, -0.0038943656254559755, -0.2773285508155823, -1.863926649093628, -0.41119351983070374, -0.007732695899903774, -0.04764982685446739, -0.016338728368282318, -0.009538787417113781, -0.020334351807832718, -0.014286498539149761, -0.003983896225690842, -0.0015737541252747178, -1.1298918724060059, -0.03069143183529377, -0.039907269179821014, -1.773053526878357, -0.0010968389688059688, -0.011966818943619728, -9.464769391342998e-05, -2.7278993129730225, -9.083335316972807e-05, -1.1246187686920166, -0.1794605553150177, -0.11539547145366669, -1.452869176864624, -0.13888882100582123, -0.0001787979417713359, -0.0004418112221173942, -0.19016818702220917, -0.013282976113259792, -0.0003058442671317607, -0.3635762333869934, -0.0891638845205307, -0.026341086253523827, -0.0008680627797730267, -0.03844861313700676, -0.032449524849653244, -0.9998632073402405, -0.00029690624796785414, -0.006744359154254198, -8.702239938429557e-06, -5.376194530981593e-05, -4.768370445162873e-07, -0.00035148640745319426, -0.001672775368206203, -0.0001250427303602919, -2.47952248173533e-05, -5.674201020156033e-05, -0.19482475519180298, -0.004244842100888491, -0.141013041138649, -0.04923824593424797, -0.0003922408213838935, -0.21162450313568115, -0.00014435203047469258, -0.0019190958701074123, -0.045125387609004974, -0.17117512226104736, -0.001578157884068787, -1.8872863054275513, -4.2199197196168825e-05, -1.537788011773955e-05, -0.048826903104782104, -0.000501983508002013, -0.024338271468877792, -6.794906312279636e-06, -6.246371776796877e-05, -3.576272320060525e-06, -9.42901024245657e-05, -5.2569914259947836e-05, -0.0006712805479764938, -5.972207145532593e-05, -2.002696055569686e-05, -7.629103492945433e-05, -0.0007712250226177275, -0.00023958197562023997, -8.153582894010469e-05, -1.096229076385498, -2.9682672902708873e-05, -5.400034933700226e-05, -0.006152025423943996, -0.02480958215892315, -0.002826031530275941, -0.012308001518249512, -1.537788011773955e-05, -4.1126360883936286e-05, -0.00012730741582345217, -0.001893633627332747, -0.0005951540661044419, -5.07818695041351e-05, -0.41079020500183105, -1.2636104656849056e-05, -0.03531583398580551, -0.00023064337437972426, -0.0031533539295196533, -0.030495228245854378, -2.7903385162353516, -0.275661438703537, -0.1326204091310501, -1.4881895780563354, -0.02107114903628826, -0.0013473490253090858, -0.08847178518772125, -0.007214091718196869, -0.09579483419656754, -1.4615435600280762, -0.031580161303281784, -0.516224205493927, -0.0002833203470800072, -0.041712138801813126, -0.13851556181907654, -0.09730388224124908, -0.007209357805550098, -0.0011514945654198527, -0.05171803757548332, -0.25422099232673645, -0.00012134769349358976, -0.0002656822034623474, -0.4502617418766022, -0.01653127931058407, -2.1963462829589844], "finish_reason": "stop"}], "metrics": {"energy": 712.3380294380186, "energy_per_token": 3.543970295711535, "time": 16.83179, "time_per_token": 0.08374024875621891}}
{"outputs": [{"text": "file_pattern = re.compile(file_pattern)\n    files = [file for file in os.listdir(source_dir) if file_pattern.search(file)]\n    for file in files:\n        try:\n            shutil.copy2(os.path.join(source_dir, file), target_dir)\n            print(f'{file} was successfully copied to {target_dir}')\n        except Exception as e:\n            print(f'Error: {e}')\n    return len(files)", "tokens": ["file", "_", "pattern", " =", " re", ".", "compile", "(", "file", "_", "pattern", ")", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " file", "_", "pattern", ".", "search", "(", "file", ")]", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "sh", "util", ".", "copy", "2", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", ",", " target", "_", "dir", ")", "\n", "            ", "print", "(", "f", "'{", "file", "}", " was", " successfully", " copied", " to", " {", "target", "_", "dir", "}", "')", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "f", "'", "Error", ":", " {", "e", "}", "')", "\n", "    ", "return", " len", "(", "files", ")", "\n", "\n", "if"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.5582444667816162, -0.26510101556777954, -0.15603755414485931, -0.0003488647344056517, -0.0018375907093286514, -0.004138833377510309, -0.022474583238363266, -3.349725011503324e-05, -1.2755313036905136e-05, -0.038971107453107834, -0.055465422570705414, -0.20229800045490265, -1.4898189306259155, -0.7095872163772583, -0.8366796970367432, -1.0802021026611328, -0.05888944864273071, -0.0009857324184849858, -0.000536655425094068, -0.0068313851952552795, -7.986990567587782e-06, -0.0041206697933375835, -4.8636207793606445e-05, -0.001053255284205079, -0.015825390815734863, -0.0002673506969586015, -0.00026246439665555954, -0.011062480509281158, -0.04486452415585518, -0.4030287563800812, -0.002725341124460101, -2.8967437174287625e-05, -0.0009926398051902652, -1.1909819841384888, -0.0006412595394067466, -0.003985914401710033, -0.06064145267009735, -0.004157946910709143, -0.21427494287490845, -1.1823341846466064, -0.057815756648778915, -0.030185526236891747, -0.002559007378295064, -0.0021213425789028406, -0.0011609011562541127, -0.00843876227736473, -2.681349515914917, -0.00031132620642893016, -0.0025895654689520597, -0.003471540519967675, -0.13864798843860626, -0.00013696208770852536, -7.92710343375802e-05, -1.534706473350525, -1.0126938819885254, -0.0014002051902934909, -0.09501506388187408, -2.109982233378105e-05, -0.0006363751017488539, -7.390948667307384e-06, -0.00037150635034777224, -0.00017867876158561558, -0.0017736908048391342, -0.0006245807744562626, -0.00019333878299221396, -0.0004625442670658231, -0.0095902681350708, -0.000666277133859694, -0.0001896439935080707, -0.52949458360672, -0.00016449528629891574, -0.00012015574611723423, -0.003921439405530691, -0.007925491780042648, -1.1756956577301025, -0.20176510512828827, -0.0997648686170578, -0.21726550161838531, -2.9123566150665283, -0.03344288468360901, -0.06861859560012817, -1.4398807287216187, -1.2169365882873535, -0.6205468773841858, -0.718083381652832, -0.17937538027763367, -0.00819002278149128, -0.00025567124248482287, -0.0007008241955190897, -0.015507824718952179, -0.20759746432304382, -0.002212459221482277, -0.03147435560822487, -0.0004292996891308576, -0.788679838180542, -0.04092838242650032, -0.5187423229217529, -0.000486970558995381, -0.0020690003875643015, -0.0013161577517166734, -0.02782352641224861, -0.016019096598029137, -0.06198173388838768, -0.09834661334753036, -0.40631359815597534, -2.4002346992492676, -0.10123983025550842, -0.20118066668510437, -0.02258286066353321, -0.03333912044763565, -0.11128439754247665, -0.8331363201141357, -0.47815367579460144, -0.5982603430747986, -0.0035100297536700964, -0.0025475923903286457, -0.08255793899297714, -0.20333684980869293, -0.022791460156440735, -0.5404688715934753], "finish_reason": "stop"}], "metrics": {"energy": 442.86309462356587, "energy_per_token": 3.6300253657669335, "time": 10.102353, "time_per_token": 0.08280617213114755}}
{"outputs": [{"text": "file_list = []\n\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if re.search(file_pattern, file):\n                file_list.append(os.path.join(root, file))\n\n    for file_path in file_list:\n        shutil.copy(file_path, target_dir)\n\n    return len(file_list)", "tokens": ["file", "_", "list", " =", " []", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "search", "(", "file", "_", "pattern", ",", " file", "):", "\n", "                ", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "        ", "sh", "util", ".", "copy", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " len", "(", "file", "_", "list", ")"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.439025640487671, -0.012369701638817787, -0.35035935044288635, -0.049011483788490295, -1.9701396226882935, -0.002193784574046731, -0.4765923321247101, -0.8292412161827087, -0.009741151705384254, -0.17176321148872375, -0.0009253510506823659, -0.00026592056383378804, -0.010291720740497112, -0.0009472650708630681, -0.0007826602668501437, -4.482168878894299e-05, -0.00010442188795423135, -0.0008043391280807555, -0.00922606885433197, -0.00013755806139670312, -0.0002113357331836596, -0.02847766876220703, -0.006702678743749857, -0.023547058925032616, -0.058731865137815475, -0.2994215190410614, -0.09283158928155899, -0.003901252755895257, -0.00016699827392585576, -0.00043132537393830717, -0.008054159581661224, -0.1600441187620163, -0.0635685995221138, -6.174850568640977e-05, -1.136647343635559, -0.0022601555101573467, -0.012463303282856941, -0.00024625606602057815, -4.2676016164477915e-05, -0.0009217780898325145, -0.006607114803045988, -0.11922543495893478, -0.0057591930963099, -0.002479338087141514, -0.2653135061264038, -0.0126118715852499, -0.3866620361804962, -0.0017357297474518418, -0.0012487717904150486, -0.009814225137233734, -0.06383435428142548, -5.8412379075889476e-06, -0.0001658063702052459, -1.2278481335670222e-05, -0.005794157274067402, -0.00037853704998269677, -0.007372079882770777, -0.0013004426145926118, -0.006412406452000141, -0.003622400341555476, -0.0020443748217076063, -0.13045985996723175, -0.01607939414680004, -1.1394237279891968, -0.18479233980178833, -1.2261241674423218, -0.04642539098858833, -0.0011411352315917611, -0.002183317206799984, -1.966933996300213e-05, -1.8954096958623268e-05, -0.0010936238104477525, -0.0004782725009135902, -0.008002717979252338, -0.4378209710121155, -6.01988795096986e-05, -5.9960475482512265e-05, -1.2439945936203003, -0.38966047763824463, -0.002227684250101447, -0.0007974305190145969, -0.00031323294388130307, -0.0013735393295064569, -0.07784327864646912, -0.0001864259538706392, -0.000645429186988622, -0.016398068517446518, -0.023302050307393074, -0.07532934099435806, -0.04937407374382019, -0.792131781578064, -0.6687758564949036, -0.0007725353352725506, -0.002493250882253051, -2.7179348762729205e-05, -0.0002224197960458696, -0.23013664782047272], "finish_reason": "stop"}], "metrics": {"energy": 333.74355534648885, "energy_per_token": 3.3711470237019077, "time": 8.203551, "time_per_token": 0.0828641515151515}}
{"outputs": [{"text": "count = 0\n    for dirpath, dirnames, filenames in os.walk(source_dir):\n        for filename in filenames:\n            if re.fullmatch(file_pattern, filename):\n                count += 1\n                file_path = os.path.join(dirpath, filename)\n                shutil.move(file_path, target_dir)\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " re", ".", "full", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "                ", "count", " +=", " ", "1", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-3.2237441539764404, -0.09148353338241577, -0.012821500189602375, -0.0018222408834844828, -0.08897370100021362, -0.10704775154590607, -0.6595281362533569, -2.283322811126709, -0.06778859347105026, -0.001177809201180935, -0.07919089496135712, -0.002692409558221698, -8.737658936297521e-05, -0.013053088448941708, -1.0371154530730564e-05, -4.768360213347478e-06, -0.0005265279905870557, -0.0009213017183355987, -0.00021455370006151497, -0.00010525626566959545, -0.0005606033373624086, -0.007829926908016205, -0.00015531764074694365, -0.0002184867626056075, -0.014918547123670578, -0.014190834015607834, -0.013089681044220924, -0.08750193566083908, -0.15782713890075684, -0.00011097769311163574, -0.0030311851296573877, -3.3378546504536644e-06, 0.0, -0.00014029949670657516, -0.00066985102603212, -0.004192017484456301, -0.16683240234851837, -0.0561375729739666, -4.8397800128441304e-05, -2.2255938053131104, -8.976056415122002e-05, -0.0008551992941647768, -0.01708187349140644, -4.541770613286644e-05, -5.364403477869928e-06, -0.0012085284106433392, -0.009509622119367123, -0.11215367913246155, -0.007499635685235262, -0.003546023042872548, -1.286211371421814, -0.014072239398956299, -0.004622488282620907, -0.0002286172821186483, -0.003201718209311366, -0.039264921098947525, -2.3439955711364746, -0.32297614216804504, -0.055034294724464417, -0.027676738798618317, -0.0051564318127930164, -7.271740287251305e-06, -0.0003675738989841193, -3.731181277544238e-05, -0.007389119826257229, -0.0001656871900195256, -0.09553331136703491, -0.00013457823661156, -0.00034791138023138046, -0.001375206047669053, -0.00018666432879399508, -0.005776497535407543, -0.016392556950449944, -0.24055209755897522, -0.00011491115583339706, -5.972207145532593e-05, -0.37267056107521057, -0.0003352795320097357, -0.002336750039830804, -0.00025388356880284846, -4.386805812828243e-05, -0.0011077941162511706, -0.14308461546897888, -0.0002379134384682402, -0.0005254556890577078, -0.017051871865987778, -0.015772588551044464, -0.6421313881874084, -0.48188889026641846, -0.13676850497722626, -0.4386780560016632, -0.02680193819105625, -0.8446406722068787], "finish_reason": "stop"}], "metrics": {"energy": 350.7836052646639, "energy_per_token": 3.7718667232759557, "time": 7.574668, "time_per_token": 0.08144804301075269}}
{"outputs": [{"text": "files = os.listdir(source_dir)\n    files = list(filter(lambda x: re.match(file_pattern, x), files))\n\n    for file in files:\n        source_path = os.path.join(source_dir, file)\n        target_path = os.path.join(target_dir, file)\n\n        try:\n            shutil.copy2(source_path, target_path)\n            print(f\"File {file} has been copied to {target_path} successfully.\")\n\n        except:\n            print(f\"There was an error copying the file {file} to {target_path}.\")\n\n    return len(files)", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "files", " =", " list", "(", "filter", "(", "lambda", " x", ":", " re", ".", "match", "(", "file", "_", "pattern", ",", " x", ")", ",", " files", "))", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "\n", "        ", "try", ":", "\n", "            ", "sh", "util", ".", "copy", "2", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "            ", "print", "(", "f", "\"", "File", " {", "file", "}", " has", " been", " copied", " to", " {", "target", "_", "path", "}", " successfully", ".", "\"", ")", "\n", "\n", "        ", "except", ":", "\n", "            ", "print", "(", "f", "\"", "There", " was", " an", " error", " copying", " the", " file", " {", "file", "}", " to", " {", "target", "_", "path", "}", ".", "\"", ")", "\n", "\n", "    ", "return", " len", "(", "files", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.3113791942596436, -0.8793124556541443, -0.5266009569168091, -4.31528314948082e-05, -0.0048377132043242455, -3.397406908334233e-05, -0.0023160558193922043, -0.012930946424603462, -0.00031192204914987087, -0.0001399419124936685, -0.000701658078469336, -0.03184809535741806, -0.12094761431217194, -2.3889732360839844, -1.670595407485962, -2.057695150375366, -0.0019135037437081337, -0.03934331610798836, -0.0028269824106246233, -0.029043380171060562, -0.9864972233772278, -0.010525429621338844, -0.1464540660381317, -7.974783511599526e-05, -0.5366156101226807, -0.0027862084098160267, -0.05154573172330856, -8.332382276421413e-05, -7.390703103737906e-05, -0.0022979776840656996, -0.016060978174209595, -0.01870855689048767, -0.14894333481788635, -0.006555006839334965, -0.0003420721332076937, -0.029161717742681503, -1.58780837059021, -0.0012636542087420821, -0.8122073411941528, -0.33526578545570374, -0.1232948899269104, -0.0039474437944591045, -0.0011200590524822474, -0.0017228773795068264, -0.010635362938046455, -2.0705745220184326, -0.2676502764225006, -0.3464985489845276, -0.004044093191623688, -0.012013816274702549, -6.6756979322235566e-06, -0.0006827168981544673, -3.731181277544238e-05, -0.0025399825535714626, -0.0003259842633269727, -0.0016551617300137877, -0.00021669900161214173, -0.00014876213390380144, -0.0005430892342701554, -0.0025217896327376366, -0.0003830652858596295, -0.0021433494985103607, -0.006847487296909094, -0.04699264466762543, -0.0004972175229340792, -0.0026500842068344355, -0.0005959880072623491, -0.0013036570744588971, -5.364403477869928e-06, -0.00030620177858509123, -7.510157047363464e-06, -0.0008648469229228795, -0.0003156163729727268, -0.0014917447697371244, -0.00012516192509792745, -0.0003800861886702478, -0.0010091932490468025, -0.006417499855160713, -0.004156284965574741, -0.0010798105504363775, -1.5906012058258057, -0.008271129801869392, -2.5440895557403564, -0.00026603974401950836, -0.0014480592217296362, -0.003710767487064004, -0.060619235038757324, -7.891343557275832e-05, -5.876845170860179e-05, -1.3469250202178955, -1.0260274410247803, -0.0001006075763143599, -0.0022431467659771442, -0.00016497205069754273, -0.0006087357178330421, -0.0001567479339428246, -0.0017035985365509987, -4.124556289752945e-05, -0.015447375364601612, -0.0053537567146122456, -0.01254394743591547, -0.6642730236053467, -0.06361893564462662, -0.10804645717144012, -0.08411656320095062, -0.5095328092575073, -1.0740069150924683, -1.4458489418029785, -0.17292653024196625, -0.00908443983644247, -1.260735034942627, -0.0599779337644577, -1.0173795223236084, -0.7603738307952881, -0.1498546004295349, -0.005634616129100323, -5.0424259825376794e-05, -0.6772481799125671, -1.6637579202651978, -2.197179079055786, -0.4688122570514679, -0.006512726657092571, -0.0012991330586373806, -0.0005849081207998097, -2.5566442012786865, -0.06517104059457779, -0.001263773301616311, -3.0258584022521973, -0.004269294906407595, -0.004929531831294298, -0.059670042246580124, -0.007661009207367897, -0.05813872814178467, -0.020300008356571198, -4.184292316436768, -0.14201544225215912, -0.1910080909729004, -0.052219390869140625, -1.3040189743041992, -0.5101799368858337, -0.05578633397817612, -0.14599338173866272, -0.035923004150390625, -0.07274389266967773, -0.846367597579956, -0.09396743774414062, -0.0011068414896726608, -8.856858039507642e-05, -0.013972087763249874, -0.1132342740893364, -0.021584367379546165, -0.023913413286209106, -0.01816178485751152, -0.05653499439358711, -0.12242806702852249, -0.3064320385456085, -0.3611595034599304, -0.6636050343513489, -0.0012844892917200923, -0.00442774873226881, -2.7969799041748047, -1.6927575416048057e-05, -8.821448318485636e-06, -2.0265558760002023e-06, -1.5616295058862306e-05, -1.983105182647705, -0.0034004980698227882], "finish_reason": "stop"}], "metrics": {"energy": 565.4544541072851, "energy_per_token": 3.385954815013683, "time": 13.878722, "time_per_token": 0.08310611976047905}}
{"outputs": [{"text": "file_list = []\n\n    try:\n        for item in os.listdir(source_dir):\n            if re.match(file_pattern, item):\n                file_list.append(item)\n\n        for file_name in file_list:\n            shutil.move(os.path.join(source_dir, file_name), os.path.join(target_dir, file_name))\n\n        return len(file_list)\n    except Exception as error:\n        return error", "tokens": ["file", "_", "list", " =", " []", "\n", "\n", "    ", "try", ":", "\n", "        ", "for", " item", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " item", "):", "\n", "                ", "file", "_", "list", ".", "append", "(", "item", ")", "\n", "\n", "        ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", "_", "name", "))", "\n", "\n", "        ", "return", " len", "(", "file", "_", "list", ")", "\n", "    ", "except", " Exception", " as", " error", ":", "\n", "        ", "return", " error"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.439025640487671, -0.012369701638817787, -0.35035935044288635, -0.049011483788490295, -1.9701396226882935, -0.002193784574046731, -3.2366602420806885, -0.0009977606823667884, -0.00450536422431469, -0.028967183083295822, -0.556390643119812, -4.024179458618164, -0.009327052161097527, -0.009428969584405422, -5.221230458118953e-05, -0.0346871092915535, -3.349725011503324e-05, -0.0013808010844513774, -0.015870800241827965, -0.0002851079625543207, -0.0002444683632347733, -0.0011463745031505823, -0.013181215152144432, -0.014887776225805283, -0.7360825538635254, -0.6432701945304871, -4.351044481154531e-05, -0.5434943437576294, -0.0018605556106194854, -0.028353920206427574, -4.482168878894299e-05, -7.581423415103927e-05, -0.0010564705589786172, -0.01479440089315176, -0.08627297729253769, -0.004750394728034735, -0.0029435898177325726, -0.3256760239601135, -0.01557460892945528, -0.17032653093338013, -0.0021313349716365337, -0.0015357855008915067, -0.00950749684125185, -0.850333571434021, -0.00471942825242877, -0.00302940234541893, -0.6815531849861145, -0.20045022666454315, -0.6457158327102661, -0.3774302005767822, -1.0787454843521118, -0.08531281352043152, -0.001312348060309887, -0.0036220441106706858, -4.768360213347478e-06, -2.8729025871143676e-05, -0.0012657972984015942, -0.0007965967524796724, -0.007881022058427334, -1.2868317365646362, -7.962863310240209e-05, -8.892617915989831e-05, -0.2045043408870697, -0.002390386536717415, -0.17527180910110474, -1.2040065485052764e-05, -0.0004990047891624272, -1.0967194612021558e-05, -0.0003319427778478712, -0.00020656836568377912, -0.0018795934738591313, -0.0005965837044641376, -0.00035422726068645716, -0.0007826602668501437, -0.005298025906085968, -0.0002675890573300421, -0.00026294111739844084, -0.0005722792120650411, -0.0003104920033365488, -0.5113568902015686, -1.7165990357170813e-05, -0.00017653337272349745, -1.680836794548668e-05, -0.0006336349761113524, -0.00023266946664080024, -0.003130299737676978, -0.00015293381875380874, -0.00029559535323642194, -0.0363379642367363, -0.008464177139103413, -3.755022044060752e-05, -0.00015925093612167984, -0.0026710093952715397, -0.0013585394481197, -0.1842321902513504, -0.40990880131721497, -1.4566792249679565, -0.6114985346794128, -0.0006646093097515404, -0.0025274972431361675, -9.536697689327411e-06, -0.0004285847535356879, -0.0003797286772169173, -0.03574392944574356, -1.1275722980499268, -0.0031724858563393354, -0.3410623073577881, -0.06795378029346466, -2.183359146118164, -0.05953088775277138, -0.006935925222933292, -0.006101552397012711, -0.8893443942070007, -0.8264376521110535], "finish_reason": "stop"}], "metrics": {"energy": 389.3881677246094, "energy_per_token": 3.356794549350081, "time": 9.68301, "time_per_token": 0.08347422413793103}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        print('No such directory')\n        return None\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    file_names = os.listdir(source_dir)\n    file_paths = [os.path.join(source_dir, file_name) for file_name in file_names]\n\n    # find files matching the file pattern\n    files_to_move = []\n    for file_path in file_paths:\n        if os.path.isfile(file_path) and re.match(file_pattern, file_path):\n            files_to_move.append(file_path)\n\n    # move files to target directory\n    for file_path in files_to_move:\n        shutil.move(file_path, target_dir)\n        print(f'{os.path.basename(file_path)} is moved to {target_dir}')\n\n    config_file = os.path.join(target_dir, 'config.json')\n\n    with", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "print", "('", "No", " such", " directory", "')", "\n", "        ", "return", " None", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "file", "_", "names", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "file", "_", "paths", " =", " [", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", " for", " file", "_", "name", " in", " file", "_", "names", "]", "\n", "\n", "    ", "#", " find", " files", " matching", " the", " file", " pattern", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", ")", " and", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "_", "path", "):", "\n", "            ", "files", "_", "to", "_", "move", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "#", " move", " files", " to", " target", " directory", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "        ", "print", "(", "f", "'{", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")}", " is", " moved", " to", " {", "target", "_", "dir", "}", "')", "\n", "\n", "    ", "config", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "config", ".", "json", "')", "\n", "\n", "    ", "with"], "logprobs": [-2.3099868297576904, -0.14620238542556763, -0.0787540152668953, -5.006777428206988e-06, -0.009861559607088566, -3.659658250398934e-05, -0.36072859168052673, -0.0015829188050702214, -1.3196845054626465, -0.00011789103882620111, -0.00010382589971413836, -0.053001247346401215, -0.012082012370228767, -0.007974808104336262, -0.9802254438400269, -1.9513404369354248, -3.6599831581115723, -0.4314078092575073, -0.3492679297924042, -1.583405613899231, -0.009915384463965893, -0.18008293211460114, -0.16606280207633972, -1.253422498703003, -0.009068846702575684, -0.6886503100395203, -0.5978304743766785, -0.21035566926002502, -0.011156322434544563, -7.033323527139146e-06, -0.01948431506752968, -1.0490362910786644e-05, -0.08284272998571396, -0.000802075956016779, -0.005143505055457354, -9.440929716220126e-05, -6.592056161025539e-05, -0.005878895986825228, -0.0009226117981597781, -0.004532658960670233, -0.3809976577758789, -1.9788545614574105e-05, -0.5766313672065735, -0.0006658005877397954, -0.0012048374628648162, -0.002792033366858959, -0.0040520476177334785, -8.046303264563903e-05, -1.6927575416048057e-05, -0.02006319910287857, -0.01939592882990837, -0.963749885559082, -0.002762313699349761, -1.448460578918457, -0.033844929188489914, -3.0207221508026123, -0.06637062877416611, -0.4003013074398041, -7.629365427419543e-06, -0.0013468727702274919, -2.682172998902388e-05, -0.001141492510214448, -0.008236607536673546, -0.00011562632425921038, -8.749579137656838e-05, -0.0003469580551609397, -0.021578185260295868, -0.12299703806638718, -1.8852571249008179, -0.01022529136389494, -1.8725919723510742, -0.029383648186922073, -0.2795659601688385, -0.10034342855215073, -1.3708974620385561e-05, -0.0008742563077248633, -5.018585216021165e-05, -0.008954014629125595, -0.0004096384218428284, -0.004657254554331303, -0.00033444532891735435, -3.504691630951129e-05, -0.0003413571394048631, -0.506214439868927, -0.21101383864879608, -0.012101562693715096, -0.0013252056669443846, -0.04124392569065094, -0.0006780709372833371, -3.6000557884108275e-05, -7.354942499659956e-05, -0.0011338717304170132, -0.005783609114587307, -7.510157047363464e-06, -0.0001382732152706012, -0.23137924075126648, -0.0035551695618778467, -0.8177558183670044, -0.000621959799900651, -3.1902122497558594, -4.365921497344971, -1.0027244091033936, -2.6657872200012207, -0.5241010189056396, -1.684181809425354, -0.7731757164001465, -0.2378450334072113, -0.0029295645654201508, -1.418973684310913, -0.1856113225221634, -0.17760619521141052, -0.0003313469351269305, -0.14939773082733154, -0.0015298341168090701, -0.7147592902183533, -0.002918391488492489, -0.01408916525542736, -0.18729405105113983, -0.056440696120262146, -0.032635193318128586, -0.02201254852116108, -0.0060426644049584866, -0.001574111171066761, -1.1920922133867862e-06, -0.0009380945703014731, -0.00022396916756406426, -0.0005229535745456815, -0.003572274697944522, -0.2474386990070343, -0.8088083267211914, -2.5510462364763953e-05, -0.00031728477915748954, -1.585470999998506e-05, -0.009997296147048473, -0.07279576361179352, -0.0010750473011285067, -0.0004948345012962818, -1.6331539882230572e-05, -0.00024470672360621393, -0.4963489770889282, -0.00630011223256588, -0.04355712607502937, -7.521823135903105e-05, -0.4942767322063446, -0.0010003806091845036, -0.010161925107240677, -2.8609820219571702e-05, -4.458328112377785e-05, -0.00101062236353755, -0.6490879654884338, -3.158996332786046e-05, -0.009874307550489902, -0.07966237515211105, -0.002066264161840081, -0.00584642356261611, -0.059166908264160156, -3.325883881188929e-05, -1.3947389561508317e-05, -2.145764938177308e-06, -2.5987286790041253e-05, -0.0005192600074224174, -0.0004694551753345877, -0.003638435387983918, -0.006869153585284948, -6.151010165922344e-05, -0.00042465253500267863, -0.0011180347064509988, -0.0005608416395261884, -0.07424051314592361, -0.004443058744072914, -0.19080904126167297, -0.4616765081882477, -0.7911072373390198, -0.4350709617137909, -0.844515860080719, -0.08169581741094589, -0.1035236045718193, -0.0015826807357370853, -0.27450478076934814, -0.017699509859085083, -0.026185138151049614, -0.05367607623338699, -0.0020261728204786777, -0.000979658798314631, -1.764281842042692e-05, -1.0609570381348021e-05, -4.768370445162873e-07, -0.00017152745567727834, -0.0005036516231484711, -0.0002172949316445738, -0.0040525225922465324, -0.40001872181892395, -9.667406266089529e-05, -3.838465272565372e-05, -0.08712155371904373, -0.0001382732152706012, -0.00230202148668468, -5.829164365422912e-05, -0.00024196557933464646, -0.0004885195521637797, -0.04558085650205612, -0.00012444675667211413, -0.00023815179883968085, -0.013076738454401493, -0.01567225344479084, -3.053942918777466, -0.3287464678287506, -0.2150905281305313, -0.17257529497146606, -2.253472089767456, -2.292975664138794, -0.0001510267611593008, -0.0013172292383387685, -0.00017426878912374377, -0.04243176057934761, -5.876845170860179e-05, -0.0006123098428361118, -0.006982923019677401, -0.0006021831650286913, -0.00029225845355540514, -0.01090802252292633, -3.1100258827209473, -0.24507106840610504, -0.47966110706329346, -0.15893110632896423, -0.05725427344441414, -0.00048137042904272676, -0.0003232433518860489, -0.014233731664717197, -0.06552893668413162, -0.018448900431394577, -0.1285971850156784, -0.10756569355726242, -2.4131228923797607, -0.012518989853560925, -0.3311840891838074, -0.7649904489517212, -0.10169510543346405, -3.635817120084539e-05, -0.0013705631718039513, -6.842378934379667e-05, -0.02363123744726181, -0.017767202109098434, -0.11443161964416504, -9.7508447652217e-05, -0.00012814177898690104, -0.0017417988274246454, -0.12436173111200333, -0.34554222226142883, -0.12579698860645294, -2.9061546325683594, -0.0005691815749742091, -0.013846647925674915, -2.1800684928894043, -0.003545785555616021, -1.230386734008789], "finish_reason": "length"}], "metrics": {"energy": 874.849196121216, "energy_per_token": 3.4173796723485, "time": 21.643072, "time_per_token": 0.08454325}}
{"outputs": [{"text": "config_file_path = ''\n    # Initialize a dictionary to keep track of the files that have been copied\n    copied_files = {}\n    # Iterate over the contents of the source directory\n    for file_name in os.listdir(source_dir):\n        # Check if the file name matches the regular expression pattern\n        if re.match(file_pattern, file_name):\n            # Construct the path to the file\n            file_path = os.path.join(source_dir, file_name)\n            # Get the extension of the file\n            extension = os.path.splitext(file_name)[1]\n            # Generate a new file name using the current date and time\n            new_file_name = 'new_' + os.path.splitext(file_name)[0] + '_' + time.strftime('%Y%m%d%H%M%S') + extension\n            # Construct the path to the new file name\n            new_file_path = os.path.join(target_dir, new_file_name)\n            # Copy the file to the target directory\n            sh", "tokens": ["config", "_", "file", "_", "path", " =", " ''", "\n", "    ", "#", " Initialize", " a", " dictionary", " to", " keep", " track", " of", " the", " files", " that", " have", " been", " copied", "\n", "    ", "cop", "ied", "_", "files", " =", " {}", "\n", "    ", "#", " Iter", "ate", " over", " the", " contents", " of", " the", " source", " directory", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "#", " Check", " if", " the", " file", " name", " matches", " the", " regular", " expression", " pattern", "\n", "        ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "_", "name", "):", "\n", "            ", "#", " Construct", " the", " path", " to", " the", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "#", " Get", " the", " extension", " of", " the", " file", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "1", "]", "\n", "            ", "#", " Generate", " a", " new", " file", " name", " using", " the", " current", " date", " and", " time", "\n", "            ", "new", "_", "file", "_", "name", " =", " '", "new", "_", "'", " +", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "0", "]", " +", " '_", "'", " +", " time", ".", "str", "ftime", "('", "%", "Y", "%", "m", "%", "d", "%", "H", "%", "M", "%", "S", "')", " +", " extension", "\n", "            ", "#", " Construct", " the", " path", " to", " the", " new", " file", " name", "\n", "            ", "new", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " new", "_", "file", "_", "name", ")", "\n", "            ", "#", " Copy", " the", " file", " to", " the", " target", " directory", "\n", "            ", "sh"], "logprobs": [-2.4843337535858154, -0.0424959696829319, -0.4453180134296417, -0.8798748850822449, -0.2631685733795166, -0.01121054869145155, -1.977357029914856, -0.32354506850242615, -0.20828425884246826, -2.76503324508667, -3.574040174484253, -0.935292661190033, -2.855330228805542, -0.19769711792469025, -2.133134603500366, -0.04612627625465393, -0.002221261151134968, -0.9082280993461609, -2.509631633758545, -0.7945692539215088, -1.051154375076294, -0.32391178607940674, -2.777501344680786, -0.5741317868232727, -0.002340436913073063, -0.22588437795639038, -0.001369610894471407, -0.008762244135141373, -0.024274863302707672, -0.019914565607905388, -0.026761548593640327, -0.007213145028799772, -0.7208413481712341, -0.19149093329906464, -2.0146331787109375, -0.0017571499338373542, -0.6133307814598083, -0.6001425385475159, -2.793917655944824, -0.006204273086041212, -0.010750356130301952, -0.10205534845590591, -0.018844734877347946, -0.06042567640542984, -0.0013269914779812098, -0.03259227052330971, -1.697213053703308, -0.6314284205436707, -0.12614907324314117, -0.0017829725984483957, -0.007064483128488064, -2.3603161025675945e-05, -0.0044478061608970165, -3.862306402879767e-05, -0.00038485272671096027, -0.0031266158912330866, -0.0001967951684491709, -0.0006491222884505987, -0.00048029806930571795, -0.0008740180637687445, -0.030608076602220535, -0.15443333983421326, -0.3834695816040039, -0.016120921820402145, -0.012609751895070076, -0.1955413669347763, -1.1567107439041138, -0.023726120591163635, -0.0021878371480852365, -2.279982089996338, -0.0017021704697981477, -0.2145511358976364, -0.11441078037023544, -0.001652305480092764, -0.05030973255634308, -0.04423766955733299, -5.7338023907504976e-05, -0.20564408600330353, -0.0009433348895981908, -0.02197359874844551, -5.543078441405669e-05, -9.178694017464295e-05, -0.0012747265864163637, -0.004706732928752899, -8.415821503149346e-05, -5.483612312673358e-06, -0.09877102822065353, -0.0006198153714649379, -0.005880910903215408, -0.15179109573364258, -2.165555000305176, -0.019529908895492554, -2.63397479057312, -0.06347652524709702, -0.004380630794912577, -0.9828306436538696, -2.2892067432403564, -0.0005185451591387391, -0.26723626255989075, -0.005198295693844557, -0.0029145879670977592, -0.0044607422314584255, -0.02322331629693508, -8.702239938429557e-06, -0.00025781645672395825, -2.0146166207268834e-05, -0.0013800868764519691, -0.00020287363440729678, -0.0027341386303305626, -8.987976616481319e-05, -0.00014852374442853034, -0.0003513672563713044, -0.0009078433504328132, -3.2305197237292305e-05, -0.0007391819381155074, -0.00016258825780823827, -0.00022575691400561482, -0.017475087195634842, -0.03439091145992279, -1.8454962968826294, -0.006180696655064821, -1.5597014427185059, -0.02108854055404663, -0.0006055190460756421, -0.0038015018217265606, -0.09323032945394516, -0.00037555795279331505, -1.2187726497650146, -0.002312725642696023, -0.2473171353340149, -6.198863957251888e-06, -4.029192859889008e-05, -5.960446742392378e-06, -0.0002768848498817533, -2.3841830625315197e-06, 0.0, -2.4318398573086597e-05, -0.0010402749758213758, -1.6331539882230572e-05, -0.5952432751655579, -0.04342518746852875, -0.001536499592475593, -0.042792174965143204, -0.11046996712684631, -0.008614876307547092, -0.026170853525400162, -2.3551106452941895, -0.12404134124517441, -0.2206946611404419, -0.25267162919044495, -0.007777054328471422, -2.1451704502105713, -0.11905315518379211, -0.8689262866973877, -1.2536247968673706, -0.09549170732498169, -0.08529245108366013, -0.270390123128891, -0.0007619338575750589, -0.285546213388443, -0.0005385617259889841, -0.15834243595600128, -0.000967153930105269, -0.006238273810595274, -0.004055846948176622, -2.71421480178833, -3.461440086364746, -0.21973733603954315, -1.1642723083496094, -0.003738915082067251, -1.9802497625350952, -0.00018988236843142658, -0.00033301531220786273, -2.9802276912960224e-06, -0.11737435311079025, -4.768370445162873e-07, 0.0, -0.0006138585740700364, -0.04002123698592186, -4.4225667807040736e-05, -0.009519422426819801, -0.00246863579377532, -0.004118057899177074, -0.00974174216389656, -0.04958237707614899, -0.334678053855896, -0.06768810749053955, -0.025514621287584305, -1.893328309059143, -0.005909471306949854, -0.00438098656013608, -2.3841830625315197e-06, -0.3500991761684418, -0.0007840896723791957, -0.030878694728016853, -0.3467246890068054, -0.0009479796281084418, -0.00038092033355496824, -0.0012006701435893774, -0.40803831815719604, -0.0005723983631469309, -0.0012862751027569175, -0.0017740478506311774, -0.008346201851963997, -0.00028236693469807506, -0.11435835808515549, -0.011709294281899929, -0.017209719866514206, -0.007568849716335535, -0.004482460208237171, -0.04507012292742729, -0.494762659072876, -0.005529940128326416, -0.10757115483283997, -0.03034883178770542, -0.00430134404450655, -0.24559685587882996, -0.024685261771082878, -1.7217698097229004, -0.16043531894683838, -0.00047565114800818264, -0.02433815598487854, -4.672895011026412e-05, -0.008083367720246315, -0.0007869484252296388, -0.0014706759247928858, -0.0003670972364488989, -0.0006655623437836766, -1.9073468138230965e-06, -7.378782902378589e-05, -4.565611743601039e-05, -0.00032062159152701497, -0.0004323977918829769, -0.11769730597734451, -8.082063141046092e-05, -0.00010227633902104571, -0.0005758534534834325, -0.003925239201635122, -3.6954811548639555e-06, -4.410734163684538e-06, -2.1457441107486375e-05, -0.0003270567976869643, -0.0005306981038302183, -0.0002579356369096786, -0.010167471133172512, -0.027102362364530563, -0.8634493947029114, -0.002943352097645402, -0.012281625531613827, -0.19649529457092285, -0.006190767046064138, -0.3931644558906555, -0.00574745936319232, -0.4367575943470001, -0.001026341924443841, -0.053987737745046616], "finish_reason": "length"}], "metrics": {"energy": 860.9804401206973, "energy_per_token": 3.3632048442214737, "time": 21.65182, "time_per_token": 0.084577421875}}
{"outputs": [{"text": "if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # 1. Get all filepaths in the source directory\n    filepaths = [os.path.join(source_dir, f) for f in os.listdir(source_dir)]\n\n    # 2. Filter to include only txt or doc files with alphanumeric filenames\n    filtered_filepaths = [fp for fp in filepaths if re.match(file_pattern, fp)]\n\n    # 3. Create a configuration file with a list of file paths\n    with open('config.txt', 'w') as f:\n        for fp in filtered_filepaths:\n            f.write(f'{fp}\\n')\n\n    # 4. Move the files to the target directory and rename them\n    for fp in filtered_filepaths:\n        filename = os.path.basename(fp)\n        new_filename = ''.join(filter(str.isalnum, filename)) + '.txt'\n        shutil.move(fp, os.path.join(target", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " ", "1", ".", " Get", " all", " file", "paths", " in", " the", " source", " directory", "\n", "    ", "file", "paths", " =", " [", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", ")", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")]", "\n", "\n", "    ", "#", " ", "2", ".", " Filter", " to", " include", " only", " t", "xt", " or", " doc", " files", " with", " al", "phan", "umeric", " fil", "en", "ames", "\n", "    ", "filtered", "_", "file", "paths", " =", " [", "fp", " for", " f", "p", " in", " file", "paths", " if", " re", ".", "match", "(", "file", "_", "pattern", ",", " f", "p", ")]", "\n", "\n", "    ", "#", " ", "3", ".", " Create", " a", " configuration", " file", " with", " a", " list", " of", " file", " paths", "\n", "    ", "with", " open", "('", "config", ".", "txt", "'", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " f", "p", " in", " filtered", "_", "file", "paths", ":", "\n", "            ", "f", ".", "write", "(", "f", "'{", "fp", "}\\", "n", "')", "\n", "\n", "    ", "#", " ", "4", ".", " Move", " the", " files", " to", " the", " target", " directory", " and", " rename", " them", "\n", "    ", "for", " f", "p", " in", " filtered", "_", "file", "paths", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "fp", ")", "\n", "        ", "new", "_", "filename", " =", " ''", ".", "join", "(", "filter", "(", "str", ".", "isal", "num", ",", " filename", "))", " +", " '", ".", "txt", "'", "\n", "        ", "sh", "util", ".", "move", "(", "fp", ",", " os", ".", "path", ".", "join", "(", "target"], "logprobs": [-2.3099868297576904, -0.14620238542556763, -0.0787540152668953, -5.006777428206988e-06, -0.009861559607088566, -3.659658250398934e-05, -0.36072859168052673, -0.0015829188050702214, -0.31774282455444336, -0.00030655929003842175, -0.00032789100077934563, -0.005463548935949802, -0.011247562244534492, -0.010681833140552044, -0.07065371423959732, -2.288792165927589e-05, -0.1796981394290924, -0.0002847504511009902, -0.000248043768806383, -0.000809699238743633, -0.0015548295341432095, -5.113947918289341e-05, -1.2636104656849056e-05, -0.00892010610550642, -0.03677469864487648, -0.42174336314201355, -0.003396102227270603, -2.538336753845215, -3.6991961002349854, -2.3444032669067383, -0.1823863685131073, -2.8799991607666016, -1.2239292860031128, -1.3948078155517578, -3.408188819885254, -0.7715321183204651, -0.5549962520599365, -0.43927833437919617, -0.26099541783332825, -0.7708051800727844, -0.008814946748316288, -0.5698826313018799, -0.5766674876213074, -0.04164993762969971, -0.5112550854682922, -0.08431348204612732, -1.2874520507466514e-05, -0.0009869233472272754, -0.00011801023356383666, -0.006113519426435232, -0.0003014348621945828, -0.22154420614242554, -0.001692292862571776, -0.005234227981418371, -0.0003014348621945828, -1.0486702919006348, -0.07198919355869293, -0.021331876516342163, -0.00023707917716819793, -0.0004573014739435166, -0.0036012576892971992, -1.8358061424805783e-05, -5.602679812000133e-05, -4.207999518257566e-05, -0.00013314791431184858, -0.006575258448719978, -5.090107151772827e-05, -1.0013530300057027e-05, -0.5353734493255615, -0.0045642247423529625, -0.12110382318496704, -0.0005398723296821117, -0.014857004396617413, -0.012590917758643627, -0.0073847416788339615, -0.002352567622438073, -0.928520679473877, -3.4826412200927734, -2.4619343280792236, -0.05477825924754143, -4.073664665222168, -0.00034648136352188885, -2.741645336151123, -0.005649670492857695, -0.7970277070999146, -3.245427131652832, -0.9261223077774048, -0.02216646820306778, -0.008383558131754398, -1.6672481298446655, -0.00020168177434243262, -0.0006389960180968046, -0.09705109149217606, -0.003230830654501915, -1.5351066589355469, -0.03385057672858238, -0.1350705772638321, -0.001769763883203268, -0.0010484919184818864, -0.2461576908826828, -1.6492844820022583, -0.004488631151616573, -0.0007636015070602298, -4.792098479811102e-05, -0.00025245340657420456, -0.0009014118695631623, -4.541770613286644e-05, -0.05235017463564873, -0.08725211024284363, -7.748303323751315e-05, -0.3282434940338135, -0.002543787471950054, -0.04759742692112923, -0.00010466027742950246, -0.0007985025877133012, -0.0008226824575103819, -0.8189730048179626, -0.0016030330443754792, -0.0563792884349823, -0.0018891122890636325, -0.03774230554699898, -0.0006493605324067175, -0.035147011280059814, -0.026772109791636467, -0.01810980774462223, -0.004066769964993, -2.860291004180908, -0.9745548367500305, -0.8704367280006409, -0.02156185172498226, -0.781976044178009, -2.8801746368408203, -0.45017844438552856, -0.00412055104970932, -1.629902958869934, -1.4206595420837402, -0.6900908946990967, -0.0034526519011706114, -2.214785099029541, -0.0030808625742793083, -0.4874144494533539, -1.0731558799743652, -0.16856291890144348, -0.2985328137874603, -0.0002563863235991448, -0.00012540031457319856, -0.008084549568593502, -0.01107603870332241, -0.021305503323674202, -0.0001554368354845792, -0.3762015700340271, -0.009579995647072792, -0.0056299930438399315, -0.0035764321219176054, -0.8249883651733398, -0.26394617557525635, -0.007741804234683514, -0.00041345154750160873, -0.009433693252503872, -3.325883881188929e-05, -3.635817120084539e-05, -0.00027891082572750747, -0.0004552758182398975, -0.0012048374628648162, -0.002216741442680359, -0.09021611511707306, -0.00019596086349338293, -0.0003053675754927099, -0.037341825664043427, -1.6626381874084473, -0.7713572978973389, -0.018820403143763542, -0.057854123413562775, -0.004908298142254353, -0.0005357022164389491, -0.006716888397932053, -0.09351980686187744, -0.013269565999507904, -0.09368058294057846, -0.07367799431085587, -0.0376485139131546, -0.003621212672442198, -0.4203204810619354, -0.8450151085853577, -0.6013975143432617, -0.43867290019989014, -0.03511708602309227, -0.07811001688241959, -0.019090723246335983, -2.617736339569092, -1.2031142711639404, -0.15537676215171814, -0.8763467669487, -0.0018434212543070316, -0.43911415338516235, -0.5379698276519775, -0.01768779754638672, -0.008021284826099873, -0.0016915787709876895, -4.529942543740617e-06, -3.4570634852570947e-06, -8.797258487902582e-05, -0.0003280101518612355, -0.0003274143091402948, -0.003018468152731657, -0.7432749271392822, -0.03627519682049751, -0.05421845614910126, -8.583032467868179e-06, -7.83174327807501e-05, -1.2397689715726301e-05, -0.026375919580459595, -2.264974000354414e-06, -1.8358061424805783e-05, -0.000589792791288346, -0.0024135764688253403, -0.06731527298688889, -0.002399781486019492, -0.6778427958488464, -0.016001969575881958, -0.1013798713684082, -0.004044805187731981, -2.4721431732177734, -0.012699211947619915, -7.664863369427621e-05, -0.07595314085483551, -1.7224570512771606, -0.0003455280384514481, -0.16862717270851135, -0.000169382052263245, -0.43502673506736755, -0.0002548369811847806, -0.0009868042543530464, -0.007093365304172039, -0.016458578407764435, -3.1827144622802734, -0.6906698942184448, -0.03362433239817619, -0.5159826278686523, -0.000687958556227386, -0.18595929443836212, -0.004360690712928772, -0.6044828295707703, -8.821448318485636e-06, -8.22540732769994e-06, -0.037304386496543884, -5.757642793469131e-05, -0.004092651419341564, -0.0002640137099660933, -0.007937673479318619, -4.6491513785440475e-06, -5.376194530981593e-05, -8.940656698541716e-06, -0.0003477922291494906, -0.00035148640745319426, -0.001276512397453189], "finish_reason": "length"}], "metrics": {"energy": 892.2112043724061, "energy_per_token": 3.4852000170797113, "time": 21.64749, "time_per_token": 0.0845605078125}}
{"outputs": [{"text": "files = os.listdir(source_dir)\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n    # print(f\"{source_dir}, {target_dir}\")\n    for f in files:\n        full_path_file = os.path.join(source_dir, f)\n        if os.path.isfile(full_path_file):\n            # print(f)\n            if re.search(file_pattern, f):\n                try:\n                    shutil.copy(full_path_file, target_dir)\n                    print(f\"file: '{full_path_file}' move to: '{target_dir}'\")\n                except Exception as e:\n                    print(str(e))\n    # shutil.move(source_dir, target_dir)", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "#", " print", "(", "f", "\"", "{", "source", "_", "dir", "}", ",", " {", "target", "_", "dir", "}\"", ")", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "full", "_", "path", "_", "file", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " f", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "full", "_", "path", "_", "file", "):", "\n", "            ", "#", " print", "(", "f", ")", "\n", "            ", "if", " re", ".", "search", "(", "file", "_", "pattern", ",", " f", "):", "\n", "                ", "try", ":", "\n", "                ", "    ", "sh", "util", ".", "copy", "(", "full", "_", "path", "_", "file", ",", " target", "_", "dir", ")", "\n", "                ", "    ", "print", "(", "f", "\"", "file", ":", " '", "{", "full", "_", "path", "_", "file", "}'", " move", " to", ":", " '", "{", "target", "_", "dir", "}'", "\"", ")", "\n", "                ", "except", " Exception", " as", " e", ":", "\n", "                ", "    ", "print", "(", "str", "(", "e", "))", "\n", "    ", "#", " shut", "il", ".", "move", "(", "source", "_", "dir", ",", " target", "_", "dir", ")", "\n", "\n", "def"], "logprobs": [-2.3113791942596436, -0.8793124556541443, -0.5266009569168091, -4.31528314948082e-05, -0.0048377132043242455, -3.397406908334233e-05, -0.0023160558193922043, -0.012930946424603462, -0.00031192204914987087, -0.0001399419124936685, -0.000701658078469336, -0.03184809535741806, -0.12094761431217194, -4.765958786010742, -0.4267736077308655, -0.28137722611427307, -0.00014768941036891192, -0.011085351929068565, -6.603976362384856e-05, -0.2020816057920456, -0.0018628163961693645, -0.01025337353348732, -0.00012051333033014089, -0.00015710550360381603, -0.00387061620131135, -0.01016688160598278, -0.013733657076954842, -0.028872797265648842, -7.748573807475623e-06, -0.2331584095954895, -0.00020013237372040749, -0.0005472592893056571, -0.0012947280192747712, -0.0021080193109810352, -7.056941103655845e-05, -3.3378044463461265e-05, -0.0025284483563154936, -0.005205766763538122, -0.3551715612411499, -3.6680104732513428, -2.3325767517089844, -0.1708015650510788, -2.0912821292877197, -0.5569236874580383, -2.4026379585266113, -1.091588020324707, -0.001735848723910749, -0.001586013357155025, -0.8792336583137512, -1.6843115091323853, -0.15133552253246307, -0.0307921189814806, -0.0010888606775552034, -0.00039009589818306267, -1.3006608486175537, -0.017284240573644638, -0.017371995374560356, -0.12657824158668518, -2.1681880950927734, -2.418809652328491, -0.14971768856048584, -0.011284810490906239, -0.0012679402716457844, -0.003071236191317439, -0.01277383416891098, -3.579519033432007, -0.5122034549713135, -0.6295281052589417, -2.3064703941345215, -1.5660953521728516, -0.07095324248075485, -0.11462690681219101, -1.4305012882687151e-05, -0.002585760550573468, -3.6954195820726454e-05, -0.017164137214422226, -0.0006542449118569493, -0.009367442689836025, -6.282132380874828e-05, -0.00012385078298393637, -0.002752922009676695, -0.013224509544670582, -0.0024909917265176773, -0.012217211537063122, -0.023229723796248436, -0.4982898235321045, -0.4656027555465698, -1.883488948806189e-05, -0.004874726291745901, -7.271740287251305e-06, -0.017305798828601837, -0.20989982783794403, -0.0018745961133390665, -0.0056062848307192326, -2.0265373677830212e-05, -1.0728830375228426e-06, -5.61460001335945e-05, -1.3828182090946939e-05, -0.39874595403671265, -0.010763328522443771, -0.008616176433861256, -1.7863460779190063, -0.32423135638237, -0.019930457696318626, -0.6144842505455017, -0.8534754514694214, -0.008955196477472782, -0.0063916780054569244, -0.4707711935043335, -0.1138765811920166, -0.00015639036428183317, -1.1355522871017456, -0.0034042997285723686, -0.07299403846263885, -5.9126061387360096e-05, -1.9073304429184645e-05, -0.0028626436833292246, -0.05844394117593765, -0.24570389091968536, -0.013230038806796074, -0.00592452147975564, -3.6549839973449707, -0.0008660380262881517, -0.0023663633037358522, -0.002656979952007532, -0.0028811870142817497, -0.21611973643302917, -7.486063259420916e-05, -4.577531944960356e-05, -1.0273077487945557, -0.3627418577671051, -0.04004311189055443, -6.318072337307967e-06, -4.768370445162873e-07, -3.814689989667386e-06, -2.3841574147809297e-05, -0.001177213853225112, -0.12563152611255646, -7.581423415103927e-05, -5.8410845667822286e-05, -0.02101348526775837, -0.009013086557388306, -0.007501173764467239, -0.7025842070579529, -0.33538657426834106, -0.03595969080924988, -0.32898783683776855, -0.19073358178138733, -3.3313183784484863, -1.9502489566802979, -2.7649598121643066, -0.0016182672698050737, -0.4210297167301178, -6.9141146923357155e-06, -1.1444026313256472e-05, -8.34461570775602e-06, -2.6940935640595853e-05, -0.03387823328375816, -4.430859088897705, -0.26404961943626404, -1.658646821975708, -0.18659445643424988, -0.0019135037437081337, -0.013564910739660263, -6.282132380874828e-05, -0.00024077377747744322, -0.02637220360338688, -0.14383099973201752, -0.006270851939916611, -0.0014013956533744931, -0.011406328529119492, -0.049514081329107285, -0.823819100856781, -0.04633047804236412, -0.290079802274704, -0.002148583298549056, -0.0023918135557323694, -0.0004553949984256178, -0.0021004059817641973, -0.07335878163576126, -0.025872239843010902, -3.202333927154541, -0.0015236446633934975, -0.005778512451797724, -0.028939273208379745, -0.04954085499048233, -0.9235808849334717, -2.245326042175293, -4.043514251708984, -0.0015925593907013535, -0.005716404877603054, -1.1558635234832764, -0.3225513994693756, -0.8117092847824097, -0.03716472536325455, -0.06345952302217484, -0.08621174097061157, -0.046574801206588745, -0.0012502004392445087, -0.005891695152968168, -0.08819055557250977, -0.0439394973218441, -1.3830305337905884, -1.8283846378326416], "finish_reason": "stop"}], "metrics": {"energy": 675.0906466426849, "energy_per_token": 3.309267875699436, "time": 17.018757, "time_per_token": 0.08342527941176471}}
{"outputs": [{"text": "# Check if the source directory exists.\n    if not os.path.exists(source_dir):\n        raise ValueError('Source directory does not exist: {}'.format(source_dir))\n    # Check if the target directory exists.\n    if not os.path.exists(target_dir):\n        raise ValueError('Target directory does not exist: {}'.format(target_dir))\n    # Check if the file pattern is valid.\n    try:\n        re.compile(file_pattern)\n    except re.error:\n        raise ValueError('Invalid file pattern: {}'.format(file_pattern))\n\n    # Create a list of all files in the source directory.\n    files = os.listdir(source_dir)\n    # Initialize a counter to keep track of the number of files that were moved.\n    count = 0\n    # Loop through each file in the source directory.\n    for file in files:\n        # Check if the file matches the file pattern.\n        if re.match(file_pattern, file):\n            # If the file matches, move it to the target directory.\n            shutil.move", "tokens": ["#", " Check", " if", " the", " source", " directory", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " directory", " does", " not", " exist", ":", " {", "}'", ".", "format", "(", "source", "_", "dir", "))", "\n", "    ", "#", " Check", " if", " the", " target", " directory", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "('", "Target", " directory", " does", " not", " exist", ":", " {", "}'", ".", "format", "(", "target", "_", "dir", "))", "\n", "    ", "#", " Check", " if", " the", " file", " pattern", " is", " valid", ".", "\n", "    ", "try", ":", "\n", "        ", "re", ".", "compile", "(", "file", "_", "pattern", ")", "\n", "    ", "except", " re", ".", "error", ":", "\n", "        ", "raise", " Value", "Error", "('", "Invalid", " file", " pattern", ":", " {", "}'", ".", "format", "(", "file", "_", "pattern", "))", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " all", " files", " in", " the", " source", " directory", ".", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "#", " Initialize", " a", " counter", " to", " keep", " track", " of", " the", " number", " of", " files", " that", " were", " moved", ".", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "#", " Loop", " through", " each", " file", " in", " the", " source", " directory", ".", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Check", " if", " the", " file", " matches", " the", " file", " pattern", ".", "\n", "        ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "):", "\n", "            ", "#", " If", " the", " file", " matches", ",", " move", " it", " to", " the", " target", " directory", ".", "\n", "            ", "sh", "util", ".", "move"], "logprobs": [-1.442763090133667, -2.7114813327789307, -0.2807373106479645, -0.5645157098770142, -0.4485031068325043, -0.29207777976989746, -0.12482448667287827, -2.2374250888824463, -0.21221135556697845, -0.0024619766045361757, -0.020943794399499893, -0.1210089847445488, -0.0040671261958777905, -1.6331539882230572e-05, -0.0019873883575201035, -8.475421054754406e-05, -0.4871969521045685, -0.0004574206250254065, -0.004541677888482809, -0.00015877417172305286, -0.00014077626110520214, -0.014854185283184052, -0.000977157847955823, -0.004690240137279034, -1.2463277578353882, -0.9035604000091553, -0.00015746307326480746, -2.207850694656372, -1.0134847164154053, -0.009989270009100437, -0.2466755509376526, -0.001068616984412074, -0.011300605721771717, -1.7811212539672852, -0.4528690278530121, -0.049181729555130005, -0.002361487364396453, -0.0008204193436540663, -0.00048137042904272676, -0.0059958589263260365, -0.0001714082609396428, -6.079655122448457e-06, -0.0007314390386454761, -0.0007913556764833629, -1.6224136352539062, -0.05394730344414711, -0.1595153659582138, -0.009383031167089939, -0.027284152805805206, -0.08510853350162506, -0.002858720952644944, -0.02201896347105503, -0.2055424600839615, -0.16926658153533936, -0.00066985102603212, -0.04447760432958603, -0.021007999777793884, -0.00021288513380568475, -1.311301275563892e-06, -0.00024971229140646756, -1.4185804502631072e-05, -0.003567404579371214, -0.00014482879487331957, -0.0023271164391189814, -5.352353764465079e-05, -3.0874729418428615e-05, -0.000740968796890229, -0.00010787858627736568, -0.0016066036187112331, -0.24381746351718903, -0.0014359173364937305, -1.2636104656849056e-05, -0.002491348423063755, -0.0112813925370574, -0.0008395960903726518, -0.0009232072625309229, -0.00014006110723130405, -0.0009572691051289439, -0.0015281677478924394, -0.0014974582009017467, -7.164221460698172e-05, -0.00022706791060045362, -0.0004659997357521206, -6.842378934379667e-05, -0.0055727362632751465, -0.00015829740732442588, -0.00014935807848814875, -0.00010525626566959545, -0.00035089056473225355, -0.35396522283554077, -0.03882823884487152, -0.9818667769432068, -0.07398580759763718, -0.12843187153339386, -0.9975777268409729, -0.20558041334152222, -0.08124156296253204, -0.8233784437179565, -0.09048066288232803, -0.00566448736935854, -0.0007820646860636771, -0.6297401189804077, -0.00012742661056108773, -0.0008522216230630875, -0.001327467616647482, -0.11529944837093353, -0.028822878375649452, -0.005683334544301033, -0.0023023784160614014, -0.012844331562519073, -6.854299135738984e-05, -0.00014780859055463225, -0.0026623301673680544, -0.002630228642374277, -0.002880354877561331, -0.0020695950370281935, -0.2784200608730316, -0.0002632986579556018, -6.735097849741578e-05, -0.7300975322723389, -0.0014387742849066854, -0.0009631047723814845, -0.00737030478194356, -0.07516127824783325, -5.185469490243122e-05, -0.01276583131402731, -0.04339836165308952, -0.3463153541088104, -0.012087429873645306, -0.05093585327267647, -0.006367158610373735, -0.000779205875005573, -0.0001530530134914443, -0.0002826052950695157, -0.00018785618885885924, -0.0008094609947875142, -8.368142152903602e-05, -1.2516897186287679e-05, -0.0002015625941567123, -0.0022701462730765343, -1.1132267713546753, -0.003411784302443266, -0.20464833080768585, -2.134758234024048, -0.4647388756275177, -0.5519334673881531, -0.16474954783916473, -1.0203394889831543, -0.5090111494064331, -0.07459916174411774, -0.006651641335338354, -0.0665074959397316, -0.003983658738434315, -0.3352961242198944, -0.0028794039972126484, -0.0008746135863475502, -0.8032780885696411, -0.07113412022590637, -0.3610670268535614, -1.9907753085135482e-05, -0.0001597276859683916, -4.029192859889008e-05, -0.0002668739762157202, -0.0014073477359488606, -0.00011181206355104223, -6.353653589030728e-05, -0.00016258825780823827, -0.0005666795768775046, -0.2608675956726074, -0.10474003106355667, -1.8071056604385376, -0.19267910718917847, -0.2399662584066391, -1.4533511400222778, -0.25755026936531067, -0.0008273277780972421, -0.0006205302197486162, -0.18963757157325745, -0.013744121417403221, -0.0014444880653172731, -0.1272520273923874, -1.447312355041504, -1.2072834968566895, -0.18597939610481262, -0.048147089779376984, -0.0017027654685080051, -0.0004058252670802176, -1.2625795602798462, -0.012925062328577042, -0.0013330630026757717, -0.0003682888636831194, -0.0005460678366944194, -0.33942797780036926, -0.0486939512193203, -0.7133474349975586, -0.2720940113067627, -0.7584343552589417, -0.029823314398527145, -0.11541788280010223, -0.0023359174374490976, -0.42946961522102356, -0.0006890306831337512, -0.05024262145161629, -0.003069334663450718, -0.0009174905135296285, -0.0062315212562680244, -0.24739941954612732, -0.09917809814214706, -0.0013524680398404598, -0.0003209791029803455, -0.00021526881027966738, -0.0115846311673522, -0.01955247111618519, -0.15629860758781433, -0.005797950085252523, -0.008648795075714588, -0.3485565483570099, -0.29912739992141724, -0.0006026597693562508, -0.7591086626052856, -0.008040442131459713, -0.045814432203769684, -0.005296839866787195, -0.0008673481643199921, -0.04966700077056885, -0.023664303123950958, -3.373566141817719e-05, -0.3100506365299225, -0.0008099374244920909, -0.0042986138723790646, -0.00023529145983047783, -1.537788011773955e-05, -0.00040058218291960657, -0.005282610189169645, -0.04021718353033066, -0.00031799983116798103, -0.004556748550385237, -0.024745039641857147, -2.130626916885376, -0.5248664021492004, -0.006180933676660061, -0.031014729291200638, -0.6404587626457214, -0.3552379012107849, -0.029812900349497795, -0.0504947192966938, -0.0005603650351986289, -0.010276027955114841, -0.0011824527755379677, -0.1047963872551918, -0.005347353406250477, -0.0006310140597634017, -0.1767769306898117, -0.00013302871957421303, -4.3987260141875595e-05, -0.04185048118233681], "finish_reason": "length"}], "metrics": {"energy": 852.8532644691466, "energy_per_token": 3.3314580643326037, "time": 21.436571, "time_per_token": 0.08373660546875}}
{"outputs": [{"text": "# find files in the source directory that match the pattern\n    # and create a list of their paths\n    files = []\n    for root, dirs, file_list in os.walk(source_dir):\n        for name in file_list:\n            if re.match(file_pattern, name):\n                files.append(os.path.join(root, name))\n\n    # move the files from the source to the target directory and remove the original file\n    for file in files:\n        shutil.move(file, target_dir)\n\n    # write the list of files to the configuration file\n    config_file = os.path.join(target_dir, 'config.txt')\n    with open(config_file, 'w') as f:\n        for file in files:\n            f.write(file + '\\n')\n    return len(files)", "tokens": ["#", " find", " files", " in", " the", " source", " directory", " that", " match", " the", " pattern", "\n", "    ", "#", " and", " create", " a", " list", " of", " their", " paths", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " file", "_", "list", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " name", " in", " file", "_", "list", ":", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " name", "):", "\n", "                ", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " name", "))", "\n", "\n", "    ", "#", " move", " the", " files", " from", " the", " source", " to", " the", " target", " directory", " and", " remove", " the", " original", " file", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "#", " write", " the", " list", " of", " files", " to", " the", " configuration", " file", "\n", "    ", "config", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "config", ".", "txt", "')", "\n", "    ", "with", " open", "(", "config", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "f", ".", "write", "(", "file", " +", " '\\", "n", "')", "\n", "    ", "return", " len", "(", "files", ")", "\n", "\n", "print"], "logprobs": [-1.442763090133667, -5.078096389770508, -1.3680675029754639, -1.0427958965301514, -0.8230885863304138, -0.252659410238266, -0.19929204881191254, -0.5011371970176697, -0.025173962116241455, -0.04204275459051132, -0.9714154601097107, -0.35199838876724243, -0.0072442712262272835, -3.2738232612609863, -2.0870583057403564, -2.4092586040496826, -0.12812557816505432, -0.1993589550256729, -0.07496443390846252, -0.9692911505699158, -0.4761863648891449, -0.0574079267680645, -0.01485054474323988, -1.3512355089187622, -0.9876898527145386, -1.1948105096817017, -0.006511423736810684, -0.010984664782881737, -0.144022598862648, -1.5344419479370117, -0.0012716311030089855, -0.1378229409456253, -0.000800408364739269, -0.0001174142598756589, -1.3635962009429932, -0.3622995913028717, -1.0660501718521118, -0.001668252982199192, -0.0013994909822940826, -5.066266385256313e-05, -0.0003359945258125663, -0.000683074293192476, -0.00841736700385809, -0.00029202012228779495, -0.00016532962035853416, -0.013033321127295494, -0.009428614750504494, -0.007750439457595348, -0.10596409440040588, -2.238553524017334, -0.0009934734553098679, -0.015810489654541016, -0.0004207202873658389, -5.8887653722194955e-05, -0.0001662831346038729, -0.0017130000051110983, -0.002971045905724168, -0.1192626804113388, -0.036497969180345535, -8.165503095369786e-05, -0.37522661685943604, -0.0014065144350752234, -0.021892430260777473, -0.0001072826053132303, -3.290122185717337e-05, -0.0017533419886603951, -0.011425304226577282, -0.11042962223291397, -0.007289361208677292, -0.0015874415403231978, -0.20875564217567444, -0.007370068226009607, -0.0026944305282086134, -0.006242657080292702, -0.029535626992583275, -1.4066597032069694e-05, -0.0007216709782369435, -6.806619057897478e-05, -0.01059360895305872, -0.00016449528629891574, -0.022101404145359993, -0.0007433511782437563, -0.005335970316082239, -0.0020155846141278744, -0.001536380616016686, -0.23222702741622925, -0.005580679047852755, -0.058475200086832047, -1.1918871402740479, -0.5441965460777283, -0.13172203302383423, -1.9420287609100342, -0.17414087057113647, -0.012989077717065811, -1.3686023950576782, -0.25406113266944885, -0.011410454288125038, -0.10723356157541275, -3.045032501220703, -3.8083527088165283, -0.9880032539367676, -1.3130648136138916, -1.8069615364074707, -0.14923438429832458, -0.005873918533325195, -0.4097728729248047, -0.46658387780189514, -0.4951583445072174, -0.0020409247372299433, -0.0005540504935197532, -0.0006507901125587523, -0.006956287194043398, -0.8083486557006836, -0.00012361239350866526, -5.185469490243122e-05, -0.05323954299092293, -0.0005000770906917751, -0.013696500100195408, -0.001762028899975121, -0.0960349515080452, -0.000440262199845165, -0.00017927470616996288, -0.04928726702928543, -0.06640532612800598, -0.6105075478553772, -0.14475157856941223, -0.24540799856185913, -2.1161227226257324, -0.19105379283428192, -1.826290488243103, -0.01531284675002098, -1.5058015584945679, -0.22579620778560638, -1.9434903860092163, -0.19112518429756165, -0.008348802104592323, -0.07100876420736313, -0.005197346676141024, -0.5707635283470154, -0.034015242010354996, -0.3180122673511505, -0.18577072024345398, -0.4110180139541626, -3.325883881188929e-05, -0.001531738555058837, -0.0002177716523874551, -0.03442823141813278, -0.05694925785064697, -0.28910303115844727, -0.00041476229671388865, -0.000662703241687268, -0.0017432268941774964, -0.11408176273107529, -0.6324303150177002, -0.09693943709135056, -0.2906182110309601, -0.0003844952443614602, -0.004272737540304661, -0.003070760751143098, -0.02011822909116745, -0.000589792791288346, -0.0013831820106133819, -0.0007242917199619114, -6.83045873302035e-05, -1.8596476365928538e-05, -0.0007616956136189401, -0.007983204908668995, -0.022289467975497246, -0.03155452013015747, -0.00016318420239258558, -0.06266922503709793, -0.01231047511100769, -0.0011096993694081903, -0.0017150230705738068, -0.5324408411979675, -0.01895984075963497, -0.007633681409060955, -0.007541637867689133, -0.0005494038923643529, -0.000510204816237092, -0.0013677061069756746, -0.06250641494989395, -5.721882189391181e-05, -0.0013825867790728807, -0.05613498017191887, -0.2007424682378769, -0.04799405112862587, -0.02278563380241394, -0.0014160377904772758, -0.00044228785554878414, -0.0046017225831747055, -2.6034069061279297, -0.10017045587301254, -2.895770311355591, -0.0014680571621283889, -0.0037149244453758, -0.11287473887205124, -0.23567117750644684, -0.022906694561243057, -2.928807258605957], "finish_reason": "stop"}], "metrics": {"energy": 696.0275388526918, "energy_per_token": 3.480137694263459, "time": 16.812649, "time_per_token": 0.08406324500000001}}
{"outputs": [{"text": "if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n    file_list = []\n    for dirpath, dirnames, filenames in os.walk(source_dir):\n        for filename in filenames:\n            if re.match(file_pattern, filename):\n                file_list.append(os.path.join(dirpath, filename))\n    if len(file_list) > 0:\n        for file in file_list:\n            shutil.copy2(file, target_dir)\n    return 'Files have been copied to the specified folder'", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "file", "_", "list", " =", " []", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "                ", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", "))", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " >", " ", "0", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "sh", "util", ".", "copy", "2", "(", "file", ",", " target", "_", "dir", ")", "\n", "    ", "return", " '", "Files", " have", " been", " copied", " to", " the", " specified", " folder", "'", "\n", "\n", "if"], "logprobs": [-2.3099868297576904, -0.14620238542556763, -0.0787540152668953, -5.006777428206988e-06, -0.009861559607088566, -3.659658250398934e-05, -0.36072859168052673, -0.0015829188050702214, -0.31774282455444336, -0.00030655929003842175, -0.00032789100077934563, -0.005463548935949802, -0.011247562244534492, -0.010681833140552044, -0.07065371423959732, -2.288792165927589e-05, -0.1796981394290924, -0.0002847504511009902, -0.000248043768806383, -0.000809699238743633, -0.0015548295341432095, -5.113947918289341e-05, -1.2636104656849056e-05, -0.00892010610550642, -0.03677469864487648, -1.1220836639404297, -1.8070505857467651, -0.05473548546433449, -1.2452491521835327, -0.012580911628901958, -0.7678403854370117, -0.016342012211680412, -0.03055107593536377, -0.30790624022483826, -2.27860951423645, -0.07501950860023499, -0.0012729407753795385, -0.07034742832183838, -0.0036986530758440495, -6.270212179515511e-05, -0.010653055272996426, -6.794906312279636e-06, -7.152531907195225e-06, -0.0004128557338844985, -0.0007045170641504228, -5.638440416078083e-05, -8.594620157964528e-05, -0.0005882440018467605, -0.005981165450066328, -0.00013493580627255142, -4.482168878894299e-05, -0.011025341227650642, -0.005738925188779831, -0.005217388737946749, -0.07241784036159515, -0.2277672290802002, -0.00010942813969450071, -0.004152960609644651, -1.2397689715726301e-05, -1.1920928244535389e-07, -0.00013755806139670312, -0.0006756883230991662, -0.0032144326251000166, -0.16200095415115356, -0.0508948415517807, -4.732496745418757e-05, -0.3797157406806946, -0.001057542278431356, -0.014446428045630455, -8.284702198579907e-05, -1.2040065485052764e-05, -0.0011685217032209039, -0.00807485356926918, -0.06097876653075218, -0.004064513836055994, -0.001427465584129095, -0.3729436695575714, -0.09961942583322525, -0.6775917410850525, -0.0016866994556039572, -0.0014732946874573827, -0.01307815033942461, -0.062261246144771576, -7.510157047363464e-06, -0.00018010901112575084, -5.722029527532868e-06, -0.008631422184407711, -0.00039283663500100374, -0.026014646515250206, -4.6132929128361866e-05, -0.0007740838918834925, -0.00318508199416101, -0.0011252983240410686, -0.0013454442378133535, -0.661497950553894, -2.110286235809326, -1.1749327182769775, -0.00043072958942502737, -0.000982397934421897, -5.3165931603871286e-05, -4.1960789531003684e-05, -0.0241815447807312, -0.7508824467658997, -0.0013506823452189565, -0.027525637298822403, -0.0016918168403208256, -0.0017532228957861662, -0.004602552857249975, -1.1724395751953125, -0.3230515718460083, -0.6348907947540283, -0.0029057920910418034, -3.480850500636734e-05, -3.659658250398934e-05, -0.000874851830303669, -0.0007113072206266224, -0.0029889929573982954, -0.2729598879814148, -8.40390202938579e-05, -6.007967749610543e-05, -1.241283893585205, -1.6147029399871826, -0.0004266782198101282, -0.00776711804792285, -0.0021393049973994493, -0.10494312644004822, -0.00022265815641731024, -8.904537389753386e-05, -0.015477659180760384, -0.021538518369197845, -0.6190168857574463, -0.685924768447876, -3.721867561340332, -2.66607928276062, -1.9703198671340942, -0.05331424996256828, -1.3322088718414307, -1.5532763004302979, -1.2555081844329834, -2.83016037940979, -1.9935572147369385, -0.9361883997917175, -0.28520962595939636, -0.04508037865161896, -0.5974165201187134], "finish_reason": "stop"}], "metrics": {"energy": 488.1451290340421, "energy_per_token": 3.366518131269256, "time": 12.198147, "time_per_token": 0.08412515172413794}}
{"outputs": [{"text": "# Create a list of all files in the source directory\n    all_files = os.listdir(source_dir)\n    # Filter the list of all files to only include those that match the regular expression\n    matching_files = [file for file in all_files if re.match(file_pattern, file)]\n    # Move each matching file to the target directory\n    for file in matching_files:\n        src = os.path.join(source_dir, file)\n        dest = os.path.join(target_dir, file)\n        shutil.move(src, dest)\n    # Return the number of files that were moved\n    return len(matching_files)\n\ntask_func('/path/to/source', '/path/to/target')", "tokens": ["#", " Create", " a", " list", " of", " all", " files", " in", " the", " source", " directory", "\n", "    ", "all", "_", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", "\n", "    ", "#", " Filter", " the", " list", " of", " all", " files", " to", " only", " include", " those", " that", " match", " the", " regular", " expression", "\n", "    ", "matching", "_", "files", " =", " [", "file", " for", " file", " in", " all", "_", "files", " if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", ")]", "\n", "    ", "#", " Move", " each", " matching", " file", " to", " the", " target", " directory", "\n", "    ", "for", " file", " in", " matching", "_", "files", ":", "\n", "        ", "src", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "dest", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "        ", "sh", "util", ".", "move", "(", "src", ",", " dest", ")", "\n", "    ", "#", " Return", " the", " number", " of", " files", " that", " were", " moved", "\n", "    ", "return", " len", "(", "matching", "_", "files", ")", "\n", "\n", "task", "_", "func", "('/", "path", "/", "to", "/", "source", "'", ",", " '/", "path", "/", "to", "/", "target", "')"], "logprobs": [-1.442763090133667, -2.321604013442993, -0.94492107629776, -0.6492645144462585, -0.20903578400611877, -0.7145611047744751, -0.47318169474601746, -0.09153498709201813, -0.04034874588251114, -0.2124575823545456, -0.03289557620882988, -0.4562665820121765, -0.0021766559220850468, -1.7638267278671265, -0.017454704269766808, -0.031227122992277145, -0.015894031152129173, -0.19967767596244812, -3.325883881188929e-05, -0.0007873057620599866, -6.806619057897478e-05, -0.0005511910421773791, -0.0036001885309815407, -0.0002795067266561091, -0.00014184899919200689, -0.0003014348621945828, -0.0012742503313347697, -1.7700423002243042, -0.3998517096042633, -1.4438908100128174, -0.2050980180501938, -0.2556712031364441, -0.5302299857139587, -1.3588685989379883, -0.024547666311264038, -0.5953865647315979, -1.2005529403686523, -0.12542638182640076, -1.003082513809204, -0.06325789541006088, -0.020382942631840706, -0.015981437638401985, -2.6285009384155273, -0.012700977735221386, -1.0679621696472168, -0.0011104138102382421, -1.299244999885559, -0.0033305196557193995, -0.022751957178115845, -0.001019673072732985, -0.23772549629211426, -0.7334872484207153, -0.13069723546504974, -0.00011467275908216834, -0.0003036991402041167, -0.0011439929949119687, -5.8410845667822286e-05, -2.622600959512056e-06, -0.012149731628596783, -0.016983311623334885, -8.332382276421413e-05, -0.3284144103527069, -0.001311871805228293, -0.042749229818582535, -0.0014630577061325312, -0.00010907054820563644, -0.0006423317245207727, -0.004494683817028999, -0.08208299428224564, -0.0005295066512189806, -0.19244852662086487, -0.06885074824094772, -0.7024661898612976, -1.124748945236206, -0.1840318739414215, -0.00325388228520751, -0.22732248902320862, -0.0027541108429431915, -0.033042751252651215, -0.0020775655284523964, -0.1611611694097519, -0.0016398091102018952, -0.10533460229635239, -0.04465421289205551, -0.021367933601140976, -0.001977275824174285, -8.106198947643861e-06, -0.00010644822759786621, -0.0005059154354967177, -0.0003301552205812186, -0.007956004701554775, -2.6636171340942383, -0.5424124598503113, -0.04016175866127014, -1.7046782886609435e-05, -0.0008141063735820353, -1.9788545614574105e-05, -0.001401276676915586, -0.0005133026279509068, -0.0014152044896036386, -0.000972155889030546, -0.0006111184484325349, -0.0006654431927017868, -0.0033770932350307703, -0.000291662581730634, -0.011788466945290565, -0.0008476955117657781, -2.330735683441162, -0.0024257064796984196, -0.0019461041083559394, -6.437280717364047e-06, -0.0004365683125797659, -7.986990567587782e-06, -0.00034409802174195647, -0.000350175570929423, -0.0028571756556630135, -0.00041762212640605867, -0.0005546461907215416, -0.004894418641924858, -0.003644967917352915, -0.0015795861836522818, -0.0003526780928950757, -0.008934875018894672, -0.05613013729453087, -0.00031990656862035394, -9.476689592702314e-05, -0.04901091381907463, -0.00026603974401950836, -0.0017515569925308228, -0.0003413571394048631, -0.006721742916852236, -0.013872983865439892, -0.013805967755615711, -0.15035761892795563, -0.13505254685878754, -0.46000415086746216, -0.08413322269916534, -0.3731687366962433, -0.0005677518784068525, -0.9368650317192078, -0.5788042545318604, -0.022021878510713577, -0.04375911504030228, -0.026631435379385948, -0.0031791406217962503, -0.04947584867477417, -0.04480445757508278, -0.0003756771038752049, -0.0022339883726090193, -6.878139538457617e-05, -0.00014625910262111574, -0.2349192500114441, -0.3161736726760864, -0.033707551658153534, -3.4965012073516846, -0.035383034497499466, -0.08691971749067307, -1.2763949632644653, -0.11912554502487183, -0.0011972171487286687, -0.0009560781763866544, -0.0002898749662563205, -0.008035830222070217, -0.014401659369468689, -0.00032085992279462516, -0.012659309431910515, -0.00046456989366561174, -7.354942499659956e-05, -0.0003430254873819649, -8.523101132595912e-05, -0.0025657848455011845, -0.04941367357969284], "finish_reason": "stop"}], "metrics": {"energy": 571.6372997016911, "energy_per_token": 3.3234726726842503, "time": 14.284125, "time_per_token": 0.08304723837209302}}
{"outputs": [{"text": "# \u041f\u043e\u0434\u0441\u0447\u0451\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0444\u0430\u0439\u043b\u043e\u0432, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u0443\n    file_counter = 0\n    # \u0421\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u043c\u0435\u043d \u0444\u0430\u0439\u043b\u043e\u0432, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u0443\n    list_files = [file for file in os.listdir(source_dir) if re.search(file_pattern, file) != None]\n    # \u041f\u0435\u0440\u0435\u0431\u043e\u0440 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u043e \u0441\u043f\u0438\u0441\u043a\u0443\n    for file in list_files:\n        # \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0430\n        source_path = os.path.join(source_dir, file)\n        target_path = os.path.join(target_dir, file)\n        # \u041f\u0435\u0440\u0435\u043d\u043e\u0441 \u0444\u0430\u0439\u043b\u043e\u0432\n        shutil.move(source_path, target_path)\n        file_counter += 1\n    print('Number of moved files: {}'.format(file_counter))\n    return 1", "tokens": ["#", " \u041f\u043e", "\u0434", "\u0441", "\u0447", "", "", "\u0442", " \u043a\u043e", "\u043b\u0438", "\u0447\u0435", "\u0441\u0442\u0432\u0430", " \u0444", "\u0430\u0439", "\u043b\u043e\u0432", ",", " \u0443", "\u0434\u043e", "\u0432", "\u043b\u0435\u0442", "\u0432\u043e", "\u0440\u044f", "\u044e", "\u0449\u0438", "\u0445", " \u0448\u0430", "\u0431", "\u043b\u043e", "\u043d\u0443", "\n", "    ", "file", "_", "counter", " =", " ", "0", "\n", "    ", "#", " \u0421\u043e", "\u0441\u0442\u0430\u0432", "\u043b\u0435\u043d\u0438\u0435", " \u0441", "\u043f\u0438", "\u0441\u043a\u0430", " \u0438", "\u043c\u0435\u043d", " \u0444", "\u0430\u0439", "\u043b\u043e\u0432", ",", " \u0443", "\u0434\u043e", "\u0432", "\u043b\u0435\u0442", "\u0432\u043e", "\u0440\u044f", "\u044e", "\u0449\u0438", "\u0445", " \u0448\u0430", "\u0431", "\u043b\u043e", "\u043d\u0443", "\n", "    ", "list", "_", "files", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", ")", " if", " re", ".", "search", "(", "file", "_", "pattern", ",", " file", ")", " ", "!", "=", " None", "]", "\n", "    ", "#", " \u041f\u0435", "\u0440\u0435", "\u0431\u043e\u0440", " \u0444", "\u0430\u0439", "\u043b\u043e\u0432", " \u043f\u043e", " \u0441", "\u043f\u0438\u0441", "\u043a\u0443", "\n", "    ", "for", " file", " in", " list", "_", "files", ":", "\n", "        ", "#", " \u0424", "\u043e\u0440", "\u043c\u0438", "\u0440\u043e", "\u0432\u0430", "\u043d\u0438\u0435", " \u0438\u043c\u0435", "\u043d\u0438", " \u0444", "\u0430\u0439", "\u043b\u0430", " \u0434", "\u043b\u044f", " \u043f\u0435", "\u0440\u0435", "\u043d\u043e", "\u0441\u0430", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "        ", "#", " \u041f\u0435", "\u0440\u0435", "\u043d\u043e", "\u0441", " \u0444", "\u0430\u0439", "\u043b\u043e\u0432", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "        ", "file", "_", "counter", " +=", " ", "1", "\n", "    ", "print", "('", "Number", " of", " moved", " files", ":", " {", "}'", ".", "format", "(", "file", "_", "counter", "))", "\n", "    ", "return", " ", "1", "\n", "\n", "if"], "logprobs": [-1.442763090133667, -4.245754241943359, -2.462322235107422, -0.1435455083847046, -2.2786014080047607, -0.005268617533147335, -0.000248401309363544, -0.0012451999355107546, -0.955074667930603, -0.07736983895301819, -0.0009334497735835612, -0.01486299466341734, -0.5004647970199585, -0.0006050424999557436, -0.0027242712676525116, -1.556801199913025, -1.7199875116348267, -0.011961400508880615, -0.0027973828837275505, -0.0032174033112823963, -0.000621840707026422, -0.0005470209871418774, -0.003702097339555621, -0.003278715768828988, -0.01240007858723402, -1.9000334739685059, -0.0010468247346580029, -0.00014006110723130405, -0.03126166760921478, -0.3571000397205353, -0.006675324868410826, -1.4831757545471191, -0.02766386792063713, -1.8189423084259033, -0.007637585513293743, -0.2079949975013733, -0.00179903709795326, -0.012994843535125256, -0.523392379283905, -0.9196885824203491, -1.8846690654754639, -2.2120237350463867, -0.11384743452072144, -0.22992193698883057, -0.021415075287222862, -0.009905705228447914, -2.172060489654541, -0.04148801043629646, -0.12065339088439941, -0.00010287232726113871, -0.0024120304733514786, -1.5911608934402466, -0.8203420042991638, -0.00023946279543451965, -0.0009444067254662514, -0.011442274786531925, -0.00038342276820912957, -0.0017215682892128825, -0.0023072545882314444, -0.003572868648916483, -0.008527295663952827, -0.056011226028203964, -0.0004316828562878072, -0.000105375460407231, -0.0020976699888706207, -0.0640045627951622, -0.0029502459801733494, -2.741604804992676, -0.0606764554977417, -1.3297593593597412, -0.21151287853717804, -1.4003911018371582, -0.9569717645645142, -0.29815536737442017, -0.0018756669014692307, -0.0012371037155389786, -0.014080584980547428, -5.7338023907504976e-05, -0.009277920238673687, -1.6093124941107817e-05, -0.0022954801097512245, -0.05487429350614548, -0.00021526881027966738, -0.0007560970261693001, -0.015128632076084614, -0.09418802708387375, -0.11415281146764755, -8.427741704508662e-05, -1.083784580230713, -0.002159764990210533, -0.0372161827981472, -0.0014811508590355515, -0.00033682872890494764, -0.0026057357899844646, -0.010802717879414558, -2.3805782794952393, -2.8720407485961914, -0.00015245705435518175, -0.00011920218821614981, -0.010426336899399757, -0.01432692352682352, -0.0056665027514100075, -0.20557032525539398, -0.3674125075340271, -0.5060662627220154, -0.004852423910051584, -0.932719349861145, -0.9372899532318115, -0.00026472879108041525, -0.0036253698635846376, -1.3115297555923462, -0.5659850239753723, -0.09466962516307831, -3.111314072157256e-05, -0.7409056425094604, -0.00032074074260890484, -0.019690638408064842, -0.15823803842067719, -0.09558077156543732, -0.009138424880802631, -0.0003580405900720507, -1.3232143828645349e-05, -0.0014153235824778676, -0.0014390123542398214, -0.029042337089776993, -0.2773285508155823, -1.5762900114059448, -0.011111760511994362, -0.0027236768510192633, -0.0048941816203296185, -0.0009392855572514236, -0.005845475476235151, -3.148700714111328, -0.0002317160106031224, -0.4526314437389374, -0.0003405229654163122, -0.04366908222436905, -2.277912139892578, -0.0004135706985834986, -1.202391266822815, -0.002191167790442705, -2.107369899749756, -0.0021877181716263294, -0.18872809410095215, -0.0007939761853776872, -2.2152328491210938, -0.19840657711029053, -1.1060729026794434, -0.06205937638878822, -0.09728506207466125, -2.4914430468925275e-05, -0.002203657291829586, -2.5152843591058627e-05, -0.006147049367427826, -0.0015126940561458468, -0.006011974532157183, -0.00033825874561443925, -9.30981186684221e-05, -0.004734852351248264, -0.0139801986515522, -0.001715499092824757, -0.009265637025237083, -0.003358440240845084, -1.3692378997802734, -0.0005716835148632526, -0.00791910570114851, -0.001135419704951346, -0.002130145439878106, -5.722029527532868e-06, -0.00013136000779923052, -5.722029527532868e-06, -0.0006093314150348306, -0.0007447806419804692, -0.0020507988519966602, -8.332382276421413e-05, -0.00032264748006127775, -0.0015112657565623522, -0.025436410680413246, -0.0065749031491577625, -0.001281036646105349, -0.028157256543636322, -0.1123666763305664, -0.5302935838699341, -0.00013290952483657748, -0.48597002029418945, -0.0013800868764519691, -0.03854886814951897, -0.000582525331992656, -1.451829195022583, -0.8545472621917725, -0.000894146622158587, -0.11516888439655304, -0.0004226268210913986, -6.317892984952778e-05, -0.29369014501571655, -0.002544738817960024, -0.002829835517331958, -0.0011299422476440668, -0.0009074860718101263, -0.0004700509598478675, -0.005673496052622795, -5.2569914259947836e-05, -0.030649812892079353, -0.0072120800614356995, -0.0020632902160286903, -0.0654681995511055, -1.1536263227462769, -6.317892984952778e-05, -0.00021371940965764225, -0.039223313331604004, -0.022900519892573357, -0.00020930961181875318, -0.018473008647561073, -0.21111653745174408, -2.6488685607910156, -2.1880252361297607, -2.995323657989502, -0.023650914430618286, -1.3229494094848633, -0.02854069508612156, -0.8228114247322083, -1.069933533668518, -0.11054927855730057, -0.008352466858923435, -0.0028891509864479303, -0.0004917366313748062, -0.029787329956889153, -9.262132516596466e-05, -0.00010168035078095272, -0.009220399893820286, -0.049060970544815063, -0.38261011242866516, -0.37198197841644287, -2.4785046577453613, -2.315563678741455, -0.2978922128677368, -0.06559145450592041, -0.5744308829307556], "finish_reason": "stop"}], "metrics": {"energy": 810.4760822620384, "energy_per_token": 3.405361690176632, "time": 20.180601, "time_per_token": 0.08479244117647058}}
{"outputs": [{"text": "# Use regular expression to match filename pattern\n    matching_files = []\n    for filename in os.listdir(source_dir):\n        if re.search(file_pattern, filename) is not None:\n            matching_files.append(os.path.join(source_dir, filename))\n\n    # Move the matching files to the target directory\n    num_files_moved = 0\n    for source_file in matching_files:\n        target_file = os.path.join(target_dir, os.path.basename(source_file))\n        shutil.move(source_file, target_file)\n        num_files_moved += 1\n\n    return num_files_moved", "tokens": ["#", " Use", " regular", " expression", " to", " match", " filename", " pattern", "\n", "    ", "matching", "_", "files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " re", ".", "search", "(", "file", "_", "pattern", ",", " filename", ")", " is", " not", " None", ":", "\n", "            ", "matching", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", "))", "\n", "\n", "    ", "#", " Move", " the", " matching", " files", " to", " the", " target", " directory", "\n", "    ", "num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " source", "_", "file", " in", " matching", "_", "files", ":", "\n", "        ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "source", "_", "file", "))", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "file", ",", " target", "_", "file", ")", "\n", "        ", "num", "_", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " num", "_", "files", "_", "m", "oved", "\n", "\n", "def"], "logprobs": [-1.442763090133667, -4.589086532592773, -2.379441738128662, -0.7346200346946716, -0.17345044016838074, -2.02555251121521, -3.5480096340179443, -0.8422797918319702, -0.1743539720773697, -0.009372284635901451, -3.841062068939209, -0.02314085140824318, -0.20932717621326447, -0.004284369759261608, -0.48739710450172424, -0.005288302432745695, -0.039014674723148346, -0.13322243094444275, -0.8007440567016602, -0.0005793085438199341, -0.007335158996284008, -2.52720492426306e-05, -0.000520570669323206, -4.851700214203447e-05, -0.0009883524617180228, -0.009866753593087196, -0.0002946419408544898, -0.00019405389321036637, -0.0003935516288038343, -0.002410603454336524, -0.005508719012141228, -0.04794337600469589, -0.045383110642433167, -8.11782301752828e-05, -2.0131747722625732, -0.0015194787411019206, -0.012709805741906166, -8.129743218887597e-05, -0.00011169286881340668, -0.0008635367848910391, -0.002424398437142372, -2.811429977416992, -0.27639928460121155, -0.016115877777338028, -7.86750388215296e-05, -0.013320972211658955, -0.003821452846750617, -0.0026983539573848248, -0.10946043580770493, -1.4781842764932662e-05, -0.0022137677296996117, -0.0007839705212973058, -0.00035577642847783864, -0.005943837575614452, -0.9725231528282166, -8.4638240878121e-06, -0.00016866691294126213, -8.4638240878121e-06, -0.011882947757840157, -0.00021610308613162488, -0.004224305972456932, -0.00021002470748499036, -0.00029297350556589663, -0.00018368464952800423, -0.002610372845083475, -0.000513064325787127, -0.0009132028790190816, -0.1721462607383728, -0.004112715367227793, -0.09815028309822083, -0.860723614692688, -2.4486207962036133, -0.38022732734680176, -0.05997445434331894, -0.18223953247070312, -0.10130651295185089, -0.06663598120212555, -0.02681621164083481, -0.06716369092464447, -0.0010921949287876487, -2.947906494140625, -0.003466313472017646, -0.8408747911453247, -0.13038566708564758, -0.0744238942861557, -0.0002686616498976946, -0.0007522851810790598, -0.048113804310560226, -6.437094270950183e-05, -0.004041124600917101, -0.0018192660063505173, -0.03834594041109085, -2.206660747528076, -0.03756459057331085, -0.5575296878814697, -0.11088606715202332, -0.001210909802466631, -4.0531076592742465e-06, -1.6689286894688848e-06, -0.0003672163875307888, -0.00021765247220173478, -0.0032600611448287964, -0.6683465838432312, -0.0013178244698792696, -0.011020507663488388, -0.00310035259462893, -0.003736895974725485, -2.50339189733495e-06, -6.329813186312094e-05, -5.006777428206988e-06, -0.0033321829978376627, -0.00010132275929208845, -0.0050171902403235435, -9.929640509653836e-05, -0.0004934046883136034, -0.0005900310934521258, -0.004979233723133802, -1.1920858014491387e-05, -1.2516897186287679e-05, -7.986990567587782e-06, -0.0014000862138345838, -2.622600959512056e-06, -5.972207145532593e-05, -0.00045885046711191535, -2.288792165927589e-05, -0.00018606838420964777, -0.0006959400488995016, -0.0005918181850574911, -0.004812444094568491, -0.26504257321357727, -5.590759246842936e-05, -1.811964830267243e-05, -0.05981625244021416, -7.426462980220094e-05, -0.0006233894382603467, -4.1483970562694594e-05, -0.0001426833332516253, -0.00012790338951162994, -0.0006089740199968219, -1.9907753085135482e-05, -0.008610975928604603, -0.0007874249131418765, -0.0018860186683014035, -0.0024447336327284575, -0.007982258684933186, -5.722029527532868e-06, -2.9682672902708873e-05, -5.483612312673358e-06, -1.2516897186287679e-05, -7.152555099310121e-07, -0.002831143094226718, -0.0006623458466492593, -8.11782301752828e-05, -0.0010390841634944081, -0.0685516968369484, -0.0059498813934624195, -1.8227150440216064, -0.09966571629047394, -9.417489309271332e-06, -0.00030787018476985395, -7.223821739898995e-05, -6.663577369181439e-05, -8.344646857949556e-07, -0.47958818078041077, -0.021443543955683708, -1.6223359107971191], "finish_reason": "stop"}], "metrics": {"energy": 554.3987037506103, "energy_per_token": 3.339751227413315, "time": 13.8779335, "time_per_token": 0.08360200903614458}}
{"outputs": [{"text": "# Initialize variables\n    files_to_move = []\n\n    # Iterate through all files in the directory\n    for file in os.listdir(source_dir):\n        # Check if the file matches the file_pattern\n        if re.match(file_pattern, file):\n            # Add the file to the list of files to move\n            files_to_move.append(file)\n\n    # Move files to the target directory\n    for file in files_to_move:\n        source_path = os.path.join(source_dir, file)\n        target_path = os.path.join(target_dir, file)\n        shutil.move(source_path, target_path)\n\n    # Print the number of files moved\n    print(f\"{len(files_to_move)} file(s) moved from {source_dir} to {target_dir}\")\n\n    # Return the path to the created configuration file\n    return len(files_to_move)", "tokens": ["#", " Initialize", " variables", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "#", " Check", " if", " the", " file", " matches", " the", " file", "_", "pattern", "\n", "        ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "):", "\n", "            ", "#", " Add", " the", " file", " to", " the", " list", " of", " files", " to", " move", "\n", "            ", "files", "_", "to", "_", "move", ".", "append", "(", "file", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " the", " target", " directory", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " file", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " file", ")", "\n", "        ", "sh", "util", ".", "move", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "\n", "    ", "#", " Print", " the", " number", " of", " files", " moved", "\n", "    ", "print", "(", "f", "\"", "{", "len", "(", "files", "_", "to", "_", "move", ")}", " file", "(", "s", ")", " moved", " from", " {", "source", "_", "dir", "}", " to", " {", "target", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " configuration", " file", "\n", "    ", "return", " len", "(", "files", "_", "to", "_", "move", ")", "\n", "\n", "#"], "logprobs": [-1.442763090133667, -2.141126871109009, -1.7287951707839966, -0.21216200292110443, -0.006474707741290331, -2.1304948329925537, -0.12126106768846512, -1.852123737335205, -0.0002512616047170013, -0.31215599179267883, -0.013627943582832813, -0.07820957154035568, -0.11297110468149185, -2.0658347606658936, -0.0008518642862327397, -0.02318919077515602, -2.0095653533935547, -0.004699020646512508, -0.7645959258079529, -1.2005560398101807, -0.28122642636299133, -0.07338093966245651, -0.12366386502981186, -1.5150494575500488, -0.297608345746994, -0.0005651307292282581, -0.03261084854602814, -1.0897393226623535, -0.4848179221153259, -0.013862637802958488, -2.52720492426306e-05, -0.007268296089023352, -0.0004114258335903287, -0.0007889734115451574, -0.0054896315559744835, -0.000228140561375767, -9.643566590966657e-05, -0.0005204515182413161, -0.0010886224918067455, -0.05618434399366379, -0.20107468962669373, -0.201359823346138, -0.016037045046687126, -0.13343849778175354, -0.3039049208164215, -0.27043333649635315, -0.002658287761732936, -1.9601867198944092, -2.0079729557037354, -0.00551915168762207, -0.1482030153274536, -0.0008930747280828655, -0.04847762733697891, -0.052106693387031555, -5.900685573578812e-05, -0.2625676989555359, -0.0009046276099979877, -0.014775959774851799, -0.0002723561483435333, -1.2040065485052764e-05, -0.0007110689766705036, -0.004874133039265871, -0.09125037491321564, -0.0008123196894302964, -0.004043736960738897, -0.3331010043621063, -1.0521011352539062, -0.10364022105932236, -0.1300363391637802, -0.2595933675765991, -0.025743404403328896, -0.055203065276145935, -0.08939306437969208, -0.005257826764136553, -0.013966797851026058, -0.09437038749456406, -0.008109737187623978, -0.00022885564249008894, -0.03446531668305397, -5.2689116273541003e-05, -3.659658250398934e-05, -7.152555099310121e-07, -5.411955135059543e-05, -0.0003575639275368303, -0.0006942722829990089, -0.003501357976347208, -1.303283929824829, -0.0007726544863544405, -0.000291662581730634, -0.0768686905503273, -0.01365651935338974, -0.014291081577539444, -0.5010162591934204, -2.028891086578369, -0.9251465797424316, -0.2893507480621338, -0.0429844968020916, -0.02330123446881771, -0.08017203211784363, -0.0005857420619577169, -0.10444250702857971, -0.021502699702978134, -0.014337969943881035, -0.0024989587254822254, -6.4490144723095e-05, -2.407998726994265e-05, -5.245195097813848e-06, -2.3483953555114567e-05, -0.00031025364296510816, -8.725739462533966e-05, -0.004554019309580326, -1.861436128616333, -0.1368204951286316, -0.4057975709438324, -0.0010108605492860079, -0.014236904680728912, -6.079655122448457e-06, -0.001073856488801539, -2.0265373677830212e-05, -0.0007182164117693901, -0.0002588890492916107, -0.001423656358383596, -0.0002760506176855415, -0.0005404680268839002, -0.00036066226311959326, -0.0009922825265675783, -0.0002269487304147333, -0.00687909871339798, -0.0007148809381760657, -0.030957868322730064, -0.00011944057769142091, -0.0005716835148632526, -0.0002488780301064253, -0.0011451836908236146, -5.364403477869928e-06, -5.125868119648658e-05, -3.3378546504536644e-06, -0.0003022690652869642, -0.0001879753835964948, -0.001479603466577828, -0.0002648479712661356, -0.00042060110718011856, -0.0016763457097113132, -0.00437980005517602, -0.0017639329889789224, -0.0004577780782710761, -0.05440305918455124, -0.05856548249721527, -9.727005090098828e-05, -5.1377883210079744e-05, -0.04192844405770302, -0.00019464982324279845, -0.001016814960166812, -0.00022098960471339524, -0.00033539868309162557, -0.0002227773511549458, -0.0006705658161081374, -4.577531944960356e-05, -0.014369462616741657, -0.009185437113046646, -0.00971305463463068, -0.03537233546376228, -0.05023491382598877, -0.11822830140590668, -3.034642219543457, -0.1812669336795807, -0.24863693118095398, -0.000995974289253354, -0.23042356967926025, -0.1811484843492508, -0.06183841824531555, -0.0026590011548250914, -0.18033549189567566, -0.028399458155035973, -0.959509015083313, -0.3943977355957031, -0.677008867263794, -0.009290557354688644, -8.868777513271198e-05, -0.00036435641231946647, -4.565611743601039e-05, -4.1126360883936286e-05, -9.536738616588991e-07, -0.00014804698002990335, -0.002735208487138152, -1.648695707321167, -0.12618763744831085, -5.94836674281396e-05, -0.0008102948195300996, -0.20409998297691345, -2.2630722522735596, -0.2834624946117401, -0.005986142437905073, -0.00013004888023715466, -0.0014172281371429563, -0.0025718489196151495, -0.0011945976875722408, -0.00047910655848681927, -0.0002540027489885688, -0.0003578022588044405, -0.007782022003084421, -0.32181107997894287, -0.02144751138985157, -0.06565966457128525, -0.09139268845319748, -0.30123135447502136, -0.18786059319972992, -0.5899003744125366, -0.30932506918907166, -0.34691834449768066, -0.06590043008327484, -0.008301395922899246, -0.8326654434204102, -0.04855643957853317, -0.0021303833927959204, -0.027819933369755745, -0.003295706817880273, -0.30789950489997864, -4.037083625793457, -0.0004980515805073082, -0.002360179089009762, -0.00043561504571698606, -4.95898348162882e-05, -8.344646857949556e-07, -8.463501580990851e-05, -0.28154608607292175, -0.26654887199401855, -0.0223365668207407, -1.2837841510772705], "finish_reason": "stop"}], "metrics": {"energy": 812.6458224201193, "energy_per_token": 3.5486717136249752, "time": 19.322641, "time_per_token": 0.08437834497816595}}
{"outputs": [{"text": "# Iterate through all files in the source directory. If the filename matches the\n    # regular expression pattern and the extension is in the list of allowed extensions,\n    # move the file to the target directory.\n    count = 0\n    for filename in os.listdir(source_dir):\n        if re.match(file_pattern, filename):\n            # Move the file to the target directory, overwriting any existing file with the same name.\n            shutil.move(os.path.join(source_dir, filename),\n                        os.path.join(target_dir, filename))\n            count += 1\n\n    # Return the number of moved files.\n    return count", "tokens": ["#", " Iter", "ate", " through", " all", " files", " in", " the", " source", " directory", ".", " If", " the", " filename", " matches", " the", "\n", "    ", "#", " regular", " expression", " pattern", " and", " the", " extension", " is", " in", " the", " list", " of", " allowed", " extensions", ",", "\n", "    ", "#", " move", " the", " file", " to", " the", " target", " directory", ".", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " target", " directory", ",", " over", "writing", " any", " existing", " file", " with", " the", " same", " name", ".", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " filename", ")", ",", "\n", "                ", "        ", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", "))", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " moved", " files", ".", "\n", "    ", "return", " count"], "logprobs": [-1.442763090133667, -5.004510879516602, -0.05722522735595703, -0.8106736540794373, -0.9868649244308472, -0.3461807668209076, -0.15703712403774261, -0.09066478908061981, -0.29355308413505554, -0.022691477090120316, -2.3271584510803223, -2.5856692790985107, -0.924293577671051, -0.8335249423980713, -0.15669015049934387, -0.13291144371032715, -2.4999516010284424, -0.0007086864789016545, -0.0018473479431122541, -2.0083322525024414, -0.004090989474207163, -0.3904857635498047, -2.8155646324157715, -0.9495816230773926, -2.0440635681152344, -0.12284617871046066, -3.214294910430908, -0.16305749118328094, -0.8960193395614624, -0.30872583389282227, -0.7540788650512695, -0.11494224518537521, -0.028966719284653664, -0.0709170401096344, -0.0002759314374998212, -0.0004553949984256178, -0.7117127776145935, -0.10130327939987183, -0.0029743739869445562, -0.03245067968964577, -0.0018867325270548463, -0.07180692255496979, -0.004760123789310455, -0.17862455546855927, -0.10279910266399384, -0.0765373557806015, -1.7950433492660522, -0.03314701095223427, -0.014616905711591244, -0.0012866322649642825, -0.08612796664237976, -0.021115737035870552, -0.245721697807312, -0.45874306559562683, -0.0006256530177779496, -0.007676387671381235, -5.447716102935374e-05, -0.0014317509485408664, -1.5139465176616795e-05, -0.0004781533498317003, -0.0037659930530935526, -0.0005063920398242772, -0.00030429501202888787, -0.0003570872650016099, -0.0031323200091719627, -0.010176321491599083, -0.10507513582706451, -0.06579774618148804, -7.176141662057489e-05, -0.23390205204486847, -0.0019086254760622978, -0.02598770149052143, -0.00016068121476564556, -0.00014435203047469258, -0.001004906021989882, -0.006839199457317591, -0.4370933473110199, -0.007828625850379467, -0.005580205004662275, -2.1991918087005615, -1.700282096862793, -0.16381846368312836, -0.01109242532402277, -0.5549540519714355, -0.0030228656250983477, -0.017386991530656815, -0.00718000577762723, -3.4333560466766357, -1.3466709852218628, -0.012596332468092442, -0.7780737280845642, -0.08968953788280487, -0.11055290699005127, -0.3254154622554779, -0.10954954475164413, -0.06509453058242798, -0.02093398943543434, -0.5198892951011658, -0.0022388650104403496, -0.00383130949921906, -0.19584473967552185, -9.548207890475169e-05, -3.0397906812140718e-05, -0.03630830720067024, -0.001001571537926793, -0.06101476773619652, -1.7762025890988298e-05, -0.0001382732152706012, -5.006777428206988e-06, -0.00012694983161054552, -0.00010573305189609528, -0.001081834896467626, -0.0001734344696160406, -0.00019405389321036637, -0.0001234931987710297, -0.000987756997346878, -0.00046921687317080796, -0.00012194366718176752, -2.3695452213287354, -0.003395151812583208, -0.03303906321525574, -0.018742837011814117, -4.768360213347478e-06, -2.7179348762729205e-05, -1.549708758830093e-05, -0.0005516675882972777, -0.00013565097469836473, -0.0013999671209603548, -0.0001062098381225951, -0.0002488780301064253, -0.005883755162358284, -0.0035505369305610657, -0.13971786201000214, -0.0010961245279759169, -0.021658679470419884, -0.07722441107034683, -0.01029065903276205, -0.001177928177639842, -0.00018869050836656243, -0.014515867456793785, -0.7826265692710876, -0.02691543474793434, -0.34850767254829407, -1.0954419374465942, -0.07001092284917831, -0.6064040064811707, -0.0006386386230587959, -2.8386642932891846, -0.003468214301392436, -0.15062732994556427, -0.009596525691449642, -0.0019355150870978832, -0.034861769527196884, -0.08927466720342636], "finish_reason": "stop"}], "metrics": {"energy": 565.4633784084315, "energy_per_token": 3.6718401195352692, "time": 12.83125, "time_per_token": 0.0833198051948052}}
{"outputs": [{"text": "file_list = []\n    config_file_path = f\"{os.path.basename(source_dir)}_task_config.txt\"\n\n    for root, dirs, files in os.walk(source_dir):\n        for file in files:\n            if re.match(file_pattern, file):\n                file_list.append(os.path.join(root, file))\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    for file_path in file_list:\n        shutil.move(file_path, target_dir)\n\n    with open(config_file_path, \"w\") as config_file:\n        config_file.write(f\"{len(file_list)} files were moved to {target_dir}\\n\")\n        config_file.write(f\"The configuration file was created at {os.path.abspath(config_file_path)}\")\n\n    return config_file_path", "tokens": ["file", "_", "list", " =", " []", "\n", "    ", "config", "_", "file", "_", "path", " =", " f", "\"", "{", "os", ".", "path", ".", "bas", "ename", "(", "source", "_", "dir", ")}_", "task", "_", "config", ".", "txt", "\"", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "):", "\n", "                ", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "with", " open", "(", "config", "_", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " config", "_", "file", ":", "\n", "        ", "config", "_", "file", ".", "write", "(", "f", "\"", "{", "len", "(", "file", "_", "list", ")}", " files", " were", " moved", " to", " {", "target", "_", "dir", "}\\", "n", "\"", ")", "\n", "        ", "config", "_", "file", ".", "write", "(", "f", "\"", "The", " configuration", " file", " was", " created", " at", " {", "os", ".", "path", ".", "ab", "sp", "ath", "(", "config", "_", "file", "_", "path", ")}", "\"", ")", "\n", "\n", "    ", "return", " config", "_", "file", "_", "path", "\n", "\n", "if"], "logprobs": [-2.014012098312378, -0.061409469693899155, -1.439025640487671, -0.012369701638817787, -0.35035935044288635, -0.049011483788490295, -0.15079988539218903, -3.4001286029815674, -0.03706226497888565, -0.42382681369781494, -0.8292367458343506, -0.46708688139915466, -0.004901299253106117, -3.961611270904541, -0.5815286040306091, -0.20425693690776825, -1.367311716079712, -0.00020716428116429597, -0.3956928849220276, -0.0025939648039638996, -1.5167146921157837, -2.0265558760002023e-06, -0.06274211406707764, -0.5762017369270325, -0.0003685271949507296, -0.0005669178790412843, -1.469928503036499, -3.387998580932617, -0.39544984698295593, -0.8574531674385071, -0.1042335107922554, -0.37189534306526184, -0.0006901028100401163, -0.047854967415332794, -0.8443572521209717, -0.0014671048847958446, -0.5131184458732605, -0.6770084500312805, -0.00854230672121048, -0.1729586124420166, -0.0008715168805792928, -0.000196556793525815, -0.008058061823248863, -0.0007459718617610633, -0.0006937957368791103, -5.376194530981593e-05, -3.0040289857424796e-05, -0.0006482883472926915, -0.012917413376271725, -1.5258672647178173e-05, -1.2636104656849056e-05, -0.016116932034492493, -0.006360762286931276, -0.012764771468937397, -0.059400029480457306, -0.4258226156234741, -0.09234454482793808, -0.004128030501306057, -0.00010632903286023065, -0.00034528967808000743, -0.003616105066612363, -0.1733507215976715, -0.06006348133087158, -5.4238757002167404e-05, -0.3598755896091461, -0.0005459486856125295, -0.017301347106695175, -0.00022098960471339524, -7.533743337262422e-05, -0.000847814604640007, -0.01054359506815672, -0.05369482934474945, -0.0033301631920039654, -0.0019237360684201121, -0.42295798659324646, -0.012408438138663769, -0.8662915229797363, -0.001095171901397407, -0.0019432486733421683, -0.005364665295928717, -0.07919144630432129, -5.960446742392378e-06, -0.00013147920253686607, -1.2993727978027891e-05, -0.005222962237894535, -0.00022075122979003936, -0.009651899337768555, -0.0020041633397340775, -0.004063683096319437, -0.003173674223944545, -0.000996093382127583, -3.0354971885681152, -1.6379218101501465, -0.8678261637687683, -0.4557135999202728, -4.8636207793606445e-05, -0.0034842516761273146, -1.6331539882230572e-05, -0.06874503195285797, -0.0031721293926239014, -0.18390235304832458, -0.00019786784832831472, -0.0005519058904610574, -0.0022963127121329308, -0.00399458222091198, -0.025866199284791946, -0.01809845119714737, -5.483612312673358e-06, -0.12796564400196075, -5.936446541454643e-05, -0.0002733095607254654, -0.0005298641044646502, -0.0009857324184849858, -5.6980417866725475e-05, -0.00011157367407577112, -0.0026966894511133432, -0.003662309143692255, -0.9908647537231445, -0.0037662305403500795, -0.5054563283920288, -0.15411120653152466, -0.8501016497612, -0.04984121769666672, -0.001148398732766509, -0.0016282646683976054, -1.6927575416048057e-05, -8.165503095369786e-05, -0.0008432884933426976, -0.00043764073052443564, -0.008615231141448021, -0.5164358019828796, -4.23184028477408e-05, -2.753696753643453e-05, -0.5118461847305298, -0.00021288513380568475, -0.0016869375249370933, -0.0003778220561798662, -0.00020275443966966122, -0.0011811431031674147, -0.16009216010570526, -8.153582894010469e-05, -0.0001677133986959234, -0.011490829288959503, -0.014045321382582188, -0.19612686336040497, -0.019047915935516357, -0.2742285132408142, -0.0006805725861340761, -0.0060149370692670345, -0.17395615577697754, -3.4927710657939315e-05, -0.00036244976217858493, -6.806619057897478e-05, -9.775113539944869e-06, -0.0010526598198339343, -1.1759724617004395, -0.027746887877583504, -0.01869603805243969, -0.03295232728123665, -0.00030894274823367596, -0.7561079263687134, -0.028786277398467064, -0.0007323920144699514, -0.002433198504149914, -0.0008756855386309326, -0.004263478796929121, -0.5024017691612244, -0.0001147919538198039, -0.0017000283114612103, -0.0010247938334941864, -0.017007455229759216, -0.07325807958841324, -0.9762926697731018, -0.06471692770719528, -1.7729908227920532, -0.8021666407585144, -0.0008412636234425008, -0.0023808723781257868, -3.564294092939235e-05, -0.0009286858257837594, -0.885269045829773, -0.5294341444969177, -1.0324139595031738, -0.2549143135547638, -1.0862956047058105, -0.29948586225509644, -0.024535220116376877, -0.00010764019680209458, -0.0006652049487456679, -0.8885083198547363, -0.007549564819782972, -0.027700508013367653, -0.008380129933357239, -0.0032768147066235542, -0.3252432346343994, -0.31156089901924133, -2.9801878554280847e-05, -0.00014840454969089478, -0.0003209791029803455, -0.07464718073606491, -0.026105355471372604, -0.5587162971496582, -0.005337749142199755, -1.9569875001907349, -2.113126277923584, -0.056444525718688965, -0.7779706120491028, -0.26413923501968384, -1.352146863937378, -0.10429108142852783, -0.5871313810348511, -0.00012051333033014089, -0.08103349059820175, -0.0001627074379939586, -0.11391711235046387, -0.00010168035078095272, -8.904537389753386e-05, -0.0906139388680458, -0.007892612367868423, -5.781483559985645e-05, -7.414542778860778e-05, -0.06323092430830002, -5.030505417380482e-05, -0.5315947532653809, -0.07473479956388474, -0.008332724682986736, -0.0026203603483736515, -0.33281928300857544, -0.045829009264707565, -0.05420659855008125, -0.30739888548851013, -5.6265202147187665e-05, -8.940297266235575e-05, -0.00946486834436655, -2.5987286790041253e-05, -0.23884199559688568, -0.026481105014681816, -0.5754680633544922], "finish_reason": "stop"}], "metrics": {"energy": 794.2872776069637, "energy_per_token": 3.3373415025502675, "time": 19.974998, "time_per_token": 0.08392856302521008}}
{"outputs": [{"text": "files = []\n\n    try:\n        if os.path.exists(source_dir):\n            print('Source directory exists.')\n            for dirpath, dirnames, filenames in os.walk(source_dir):\n                for filename in filenames:\n                    if re.match(file_pattern, filename):\n                        print(f'{dirpath}\\\\{filename}')\n                        shutil.move(f'{dirpath}\\\\{filename}', f'{target_dir}')\n\n    except Exception as err:\n        print(f'An error occurred: {err}')\n    # finally:\n        return True", "tokens": ["files", " =", " []", "\n", "\n", "    ", "try", ":", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "            ", "print", "('", "Source", " directory", " exists", ".", "')", "\n", "            ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "                ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "    ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " filename", "):", "\n", "                ", "        ", "print", "(", "f", "'{", "dir", "path", "}\\\\{", "filename", "}", "')", "\n", "                ", "        ", "sh", "util", ".", "move", "(", "f", "'{", "dir", "path", "}\\\\{", "filename", "}'", ",", " f", "'{", "target", "_", "dir", "}", "')", "\n", "\n", "    ", "except", " Exception", " as", " err", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", ":", " {", "err", "}", "')", "\n", "    ", "#", " finally", ":", "\n", "        ", "return", " True", "\n", "\n", "if"], "logprobs": [-2.3113791942596436, -0.8793124556541443, -2.0207338333129883, -0.027140649035573006, -2.1815922260284424, -0.0015689932042732835, -3.230539083480835, -0.0008852138998918235, -0.004474983550608158, -0.02946259267628193, -2.8660788536071777, -1.1061325073242188, -9.905801562126726e-05, -0.02877179905772209, -0.00017617580306250602, -0.8266212940216064, -0.004257543478161097, -0.781405508518219, -0.0001062098381225951, -7.1403817855753e-05, -0.30854126811027527, -0.013381198048591614, -0.03597395122051239, -2.7525320053100586, -1.560162901878357, -1.403113603591919, -0.19207251071929932, -0.34744176268577576, -0.5022228956222534, -0.16987067461013794, -0.004050029441714287, -1.1992568969726562, -1.2809295654296875, -3.131286382675171, -0.08091926574707031, -0.0020615055691450834, -0.06868492811918259, -0.004213978536427021, -9.691245941212401e-05, -0.01930975541472435, -1.5020257706055418e-05, -2.4437606043647975e-05, -0.0005334384622983634, -0.0011033882619813085, -6.079655122448457e-06, -0.00012981049076188356, -0.0007085673278197646, -0.004227392375469208, -5.113947918289341e-05, -2.372236667724792e-05, -0.01313568465411663, -0.00624194648116827, -0.005646707024425268, -0.2209184467792511, -0.28051501512527466, -0.0003331344632897526, -0.003910514991730452, -1.3947389561508317e-05, -2.3841855067985307e-07, -0.00017677174764685333, -0.0013736584223806858, -0.004642066545784473, -0.0021433494985103607, -0.27460777759552, -0.05588723346590996, -5.471556869451888e-05, -0.3445678949356079, -0.0014736517332494259, -0.020226063206791878, -8.856858039507642e-05, -3.611976353568025e-05, -0.00150079105515033, -0.00878091435879469, -0.0678926333785057, -0.0028325694147497416, -0.0010689741466194391, -0.0017108578467741609, -2.6224822998046875, -0.39571553468704224, -0.9665396213531494, -3.0710952281951904, -2.117119312286377, -0.0010125277331098914, -0.6217825412750244, -0.0028620492666959763, -0.03377658873796463, -0.18247784674167633, -0.016479920595884323, -0.01887725666165352, -0.008063974790275097, -2.1335160732269287, -7.855583680793643e-05, -7.271502545336261e-05, -0.4667743444442749, -0.0022686002776026726, -1.0495418310165405, -0.0387670062482357, -0.012890229001641273, -1.6689160474925302e-05, -0.00414702482521534, -0.0005279577453620732, -0.002076494973152876, -0.0009826361201703548, -1.313127040863037, -0.018252387642860413, -0.045951295644044876, -0.00033087024348787963, -0.00026341783814132214, -1.085436463356018, -0.005112313199788332, -0.014896584674715996, -2.9561922550201416, -1.3182876110076904, -0.012962130829691887, -0.4573417901992798, -0.05077315494418144, -2.7510712146759033, -0.015210235491394997, -0.006543874274939299, -0.016177458688616753, -0.16565753519535065, -0.12849655747413635, -0.34928178787231445, -0.1983916312456131, -1.1746819019317627, -0.03027470037341118, -0.10859842598438263, -0.1725863218307495, -0.006849026307463646, -0.11786048859357834, -0.020960139110684395, -0.011166342534124851, -0.05329763516783714, -1.8805642127990723, -3.7009031772613525, -1.6043987274169922, -0.002768852049484849, -0.009390471503138542, -2.145094394683838, -2.859433650970459, -4.233863353729248, -0.4676269292831421, -0.1202738955616951, -0.5510817170143127], "finish_reason": "stop"}], "metrics": {"energy": 488.3083331184391, "energy_per_token": 3.3910300911002715, "time": 11.993304, "time_per_token": 0.08328683333333334}}
{"outputs": [{"text": "# create empty dict for files to move\n    files_to_move = []\n    # walk through all dirs starting from source_dir\n    for root, dirs, files in os.walk(source_dir):\n        # iterate through all files in the dir\n        for file in files:\n            # check if file match the pattern\n            if re.match(file_pattern, file):\n                # if yes, append to the dict\n                files_to_move.append(os.path.join(root, file))\n\n    # move all files to the target_dir\n    for file in files_to_move:\n        shutil.move(file, target_dir)\n\n    return files_to_move", "tokens": ["#", " create", " empty", " dict", " for", " files", " to", " move", "\n", "    ", "files", "_", "to", "_", "move", " =", " []", "\n", "    ", "#", " walk", " through", " all", " d", "irs", " starting", " from", " source", "_", "dir", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "#", " iterate", " through", " all", " files", " in", " the", " dir", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " check", " if", " file", " match", " the", " pattern", "\n", "            ", "if", " re", ".", "match", "(", "file", "_", "pattern", ",", " file", "):", "\n", "                ", "#", " if", " yes", ",", " append", " to", " the", " dict", "\n", "                ", "files", "_", "to", "_", "move", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "#", " move", " all", " files", " to", " the", " target", "_", "dir", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "dir", ")", "\n", "\n", "    ", "return", " files", "_", "to", "_", "move", "\n", "\n", "if"], "logprobs": [-1.442763090133667, -3.7682363986968994, -3.726778984069824, -3.4422011375427246, -2.002629280090332, -1.9253185987472534, -2.391483783721924, -0.7358312010765076, -0.18716870248317719, -0.0038599285762757063, -0.4376208186149597, -0.11246287822723389, -0.14567027986049652, -0.0004234609368722886, -0.010903187096118927, -0.02246922068297863, -2.4679129123687744, -0.006296795327216387, -0.9099143743515015, -0.19983895123004913, -2.5929369926452637, -0.3714049160480499, -2.1041860580444336, -2.71700382232666, -0.0009784678695723414, -3.7911217212677, -0.40528014302253723, -0.3751102089881897, -0.5622380375862122, -0.003907071426510811, -0.30671894550323486, -0.0017232344252988696, -0.09367635101079941, -0.8882190585136414, -0.043708451092243195, -0.09507370740175247, -0.0007325111655518413, -0.0008101756684482098, -0.09187530726194382, -0.0015474499668926, -0.001177094760350883, -3.0397906812140718e-05, -0.00023326536756940186, -0.0007813499541953206, -0.005465327296406031, -0.00014602071314584464, -9.16677454370074e-05, -0.15930841863155365, -0.003846272360533476, -0.02417782135307789, -0.3167959153652191, -2.074678659439087, -0.6299889087677002, -0.9941832423210144, -0.21123206615447998, -0.47850745916366577, -2.089174509048462, -1.9126102924346924, -0.12645292282104492, -0.0011934071080759168, -0.00865340419113636, -0.2417714148759842, -0.1776878386735916, -0.0020828000269830227, -0.0002134810492862016, -0.0004247716860845685, -0.007379535119980574, -0.04350439831614494, -1.0952489376068115, -0.20872952044010162, -1.1456199884414673, -2.109398365020752, -0.8046252727508545, -0.511907696723938, -0.35074859857559204, -0.0010493254521861672, -0.0808805599808693, -0.0729181244969368, -5.9960475482512265e-05, -0.3352203369140625, -0.001302942750044167, -0.02976800501346588, -0.00037055302527733147, -0.0003097769513260573, -0.0013680632691830397, -0.01041418593376875, -0.07464485615491867, -0.0013493727892637253, -0.0030677898321300745, -0.0945720225572586, -1.0007127523422241, -1.1654988527297974, -0.5328077077865601, -1.7797439098358154, -1.638344645500183, -1.1124686002731323, -0.9136935472488403, -0.37967026233673096, -0.0004077318590134382, -0.10811129957437515, -0.00020394629973452538, -0.0001289761275984347, -6.318072337307967e-06, -0.00019047829846385866, -0.004107492044568062, -0.00042834642226807773, -0.09223290532827377, -0.11276281625032425, -7.152531907195225e-06, -0.0006256530177779496, -3.182837463100441e-05, -0.004103455226868391, -0.00029488030122593045, -0.019358163699507713, -0.000494715350214392, -0.015050075948238373, -0.0016581370728090405, -0.0020723312627524137, -1.3772878646850586, -0.008597029373049736, -0.1671445071697235, -2.637887954711914, -1.4222294092178345, -0.33724847435951233, -1.197019338607788, -0.5705438852310181, -0.07474597543478012, -0.8783711194992065, -0.008038313128054142, -0.08710680156946182, -0.0021742768585681915, -0.12184020131826401, -0.09772052615880966, -0.25486043095588684, -0.0028166405390948057, -0.0003106111544184387, -0.0001289761275984347, -1.9073468138230965e-06, -0.00010859376925509423, -0.002285965019837022, -0.0005411829333752394, -0.008271129801869392, -0.6496231555938721, -0.00023672162205912173, -0.00010573305189609528, -0.05033852532505989, -0.0008492438937537372, -0.008272667415440083, -0.002222807612270117, -0.023592235520482063, -0.00026592056383378804, -0.00011622230522334576, -0.01991947367787361, -0.015397721901535988, -0.13467629253864288, -0.038393206894397736, -1.987975001335144, -1.2238904237747192, -0.0015068616485223174, -0.00046397410915233195, -7.152531907195225e-06, -0.0003270567976869643, -0.3519454002380371, -0.01320698019117117, -0.5823004841804504], "finish_reason": "stop"}], "metrics": {"energy": 570.6164565601349, "energy_per_token": 3.4582815549099086, "time": 13.669071, "time_per_token": 0.08284285454545455}}
