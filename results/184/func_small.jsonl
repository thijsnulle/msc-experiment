{"outputs": [{"text": "dataframe = dataframe.copy()\n\n    # Remove stopwords from the dataframe text column\n    dataframe[text_column] = dataframe[text_column].map(lambda x: \" \".join([word for word in re.split(\"\\s|\\.|,\", x) if word not in STOPWORDS]))\n\n    # Create a CountVectorizer object to count occurrences of each word in the dataframe text column\n    count_vectorizer = CountVectorizer(lowercase=True, stop_words=STOPWORDS)\n    vectorizer = count_vectorizer.fit(dataframe[text_column])\n\n    # Get the list of unique words from the text column\n    unique_words = count_vectorizer.get_feature_names()\n\n    # Count the occurrences of each word in the dataframe text column\n    word_counts = dataframe[text_column].apply(lambda x: vectorizer.transform([x]).toarray()[0])\n\n    # Create a DataFrame containing the unique words and their counts\n    df = pd.DataFrame(zip(unique_words, word_", "tokens": ["data", "frame", " =", " data", "frame", ".", "copy", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " the", " data", "frame", " text", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "map", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "word", " for", " word", " in", " re", ".", "split", "(", "\"", "\\", "s", "|\\", ".", "|", ",", "\"", ",", " x", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Create", " a", " Count", "Vector", "izer", " object", " to", " count", " occurrences", " of", " each", " word", " in", " the", " data", "frame", " text", " column", "\n", "    ", "count", "_", "vector", "izer", " =", " Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "vector", "izer", " =", " count", "_", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Get", " the", " list", " of", " unique", " words", " from", " the", " text", " column", "\n", "    ", "unique", "_", "words", " =", " count", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "#", " Count", " the", " occurrences", " of", " each", " word", " in", " the", " data", "frame", " text", " column", "\n", "    ", "word", "_", "counts", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " vector", "izer", ".", "transform", "([", "x", "])", ".", "to", "array", "()[", "0", "])", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " containing", " the", " unique", " words", " and", " their", " counts", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "zip", "(", "unique", "_", "words", ",", " word", "_"], "logprobs": [-3.232661724090576, -0.10270433127880096, -1.1567742824554443, -0.12857937812805176, -0.0002585315378382802, -0.1107763797044754, -0.2592533528804779, -0.034864649176597595, -0.17598436772823334, -0.8917773962020874, -0.000785280775744468, -0.42456188797950745, -1.0173583030700684, -0.49839749932289124, -0.04406863451004028, -1.569724440574646, -0.8625158071517944, -2.427438735961914, -0.5619274973869324, -2.5851309299468994, -0.17972373962402344, -0.2898600101470947, -0.002393954200670123, -0.5425906181335449, -0.0008972433279268444, -0.053354598581790924, -0.008408619090914726, -2.861018856492592e-06, -1.5616295058862306e-05, -0.004037800244987011, -0.00827585905790329, -0.11749593913555145, -0.000356253091013059, -0.010103275068104267, -0.0005526207387447357, -4.0531076592742465e-06, -1.7881377516459906e-06, -0.002762789139524102, -0.011957160197198391, -3.263207197189331, -0.014446898363530636, -0.3816032111644745, -0.16443678736686707, -0.0004602803383022547, -1.6842056512832642, -0.009705617092549801, -0.0005266471416689456, -0.00014673586701974273, -0.49317747354507446, -0.8633052706718445, -0.045460231602191925, -0.0002828436263371259, -0.001520192832686007, -0.9329497814178467, -0.00011932138295378536, -1.698652982711792, -0.40629351139068604, -1.1892222166061401, -1.3679561614990234, -0.9401851296424866, -3.3322415351867676, -1.4307210445404053, -0.7182352542877197, -0.2904679775238037, -1.695328950881958, -0.0006561510381288826, -0.12252531200647354, -0.08011514693498611, -0.08738648146390915, -0.14400051534175873, -0.41871973872184753, -0.0004211969207972288, -0.006236733868718147, -7.152555099310121e-07, -6.9141146923357155e-06, -1.9073468138230965e-06, -2.777537883957848e-05, -0.048879917711019516, -0.017686158418655396, -0.0936102420091629, -0.0007767044589854777, -0.029666172340512276, -2.2977895736694336, -0.27027639746665955, -0.5557267665863037, -0.015340082347393036, -0.0034502758644521236, -0.25773048400878906, -1.389072060585022, -1.1908296346664429, -1.8093445301055908, -0.06502728909254074, -1.4561940431594849, -0.1515461802482605, -0.2564586102962494, -0.14518901705741882, -0.7014313340187073, -0.013223332352936268, -0.14306354522705078, -0.010046628303825855, -0.0461079478263855, -0.0006959400488995016, -2.4606096744537354, -0.21832410991191864, -0.40447795391082764, -0.017465129494667053, -0.0007782529573887587, -0.0001793938863556832, -1.156323378381785e-05, -1.847726889536716e-05, -0.994452953338623, -2.649245023727417, -0.00014494798961095512, -0.00012575789878610522, -0.0029135181102901697, -0.13502609729766846, -0.4050905704498291, -0.3984470069408417, -1.9073304429184645e-05, -0.00012242044613230973, -0.9580750465393066, -0.2078491747379303, -9.536738616588991e-07, -0.0009083197801373899, -0.014516925439238548, -0.00022671037004329264, -0.3552963137626648, -0.019912227988243103, -0.6225460171699524, -1.8363310098648071, -3.005016565322876, -0.27677372097969055, -0.030375661328434944, -6.639736966462806e-05, -3.3378546504536644e-06, -6.90197994117625e-05, -0.007849915884435177, -0.14276129007339478, -0.20677903294563293, -0.021431293338537216, -3.2066785934148356e-05, -0.010998341254889965, -0.0002858230145648122, -5.960462772236497e-07, -2.0265558760002023e-06, -0.05444449186325073, -0.023621924221515656, -0.4329104423522949, -0.00032300499151460826, -0.07501917332410812, -2.8280229568481445, -0.31411847472190857, -3.320936918258667, -0.0011091040214523673, -1.4804558753967285, -0.030870605260133743, -1.4162122011184692, -0.021598484367132187, -3.729875087738037, -0.14806464314460754, -0.3922516703605652, -0.0004067785630468279, -1.0705775022506714, -0.0011550667695701122, -0.012811614200472832, -0.00539620453491807, -1.629348635673523, -4.172316494077677e-06, -1.3470558769768104e-05, -9.417489309271332e-06, -0.00014280252798926085, -0.34178367257118225, -2.0265558760002023e-06, -0.00012861855793744326, 0.0, -0.004713614471256733, -0.37381961941719055, -0.0049071116372942924, -0.07016129791736603, -0.00029976642690598965, -0.014286850579082966, -1.8128881454467773, -0.5701314210891724, -0.19877710938453674, -0.008352348580956459, -0.035803280770778656, -0.37414732575416565, -0.12142335623502731, -0.04448113963007927, -0.8671087622642517, -0.001836162875406444, -0.0545581690967083, -0.002181770745664835, -0.22563545405864716, -0.0004605186404660344, -0.9784864783287048, -0.003685350762680173, -0.12288107722997665, -0.013728600926697254, -1.470210075378418, -2.4437606043647975e-05, -0.00795742403715849, -0.001167569193057716, -6.794906312279636e-06, -2.264974000354414e-06, -0.002117892960086465, -0.003582608886063099, -0.30465731024742126, -0.0009891861118376255, -0.08624771982431412, -0.03957720845937729, -0.0002494739310350269, -1.5215115547180176, -0.00012885693286079913, -8.11782301752828e-05, -0.02025737054646015, -0.028852876275777817, -0.007383321411907673, -0.04348796233534813, -0.035193849354982376, -0.0920741856098175, -0.012750765308737755, -0.3427366614341736, -0.0002338612830499187, -0.04024546593427658, -0.05499649792909622, -0.11770875006914139, -0.0003759154351428151, -0.09988397359848022, -0.4775257110595703, -0.030727846547961235, -1.2314722537994385, -0.0009052231325767934, -3.217249870300293, -0.2558138072490692, -0.6369786262512207, -0.05424589291214943, -0.9128231406211853, -0.015803683549165726, -0.2262507528066635, -0.1596718579530716, -0.00042512916843406856, -2.3252384662628174, -0.07456420361995697, -0.003352975007146597, -0.0007376333815045655, -0.00813504122197628, -1.3358255624771118, -3.128838300704956, -0.002498721005395055, -0.008296666666865349, -1.4781842764932662e-05, -2.7418097943154862e-06, -0.0003502947511151433, -0.004272143822163343, -3.421248038648628e-05], "finish_reason": "length"}], "metrics": {"energy": 344.50619512176513, "energy_per_token": 1.345727324694395, "time": 14.075445, "time_per_token": 0.05498220703125}}
{"outputs": [{"text": "# Convert DataFrame to pandas object\n    panda_obj = pd.DataFrame({text_column: [row[text_column] for row in dataframe.to_numpy()]})\n\n    # Remove stop words and punctuations\n    clean_text = [re.sub('[' + re.escape(''.join(STOPWORDS)) + ']', ' ', text) for text in panda_obj[text_column]]\n    clean_text = [re.sub('[^0-9a-zA-Z]+', ' ', text) for text in clean_text]\n\n    # Split text into words\n    words = [word.split() for word in clean_text]\n\n    # Count occurrences of words\n    vectorizer = CountVectorizer()\n    word_counts = vectorizer.fit_transform(words)\n    word_df = pd.DataFrame(word_counts.toarray(), index=panda_obj.index, columns=vectorizer.get_feature_names())\n\n    return word_df", "tokens": ["#", " Convert", " Data", "Frame", " to", " pandas", " object", "\n", "    ", "p", "anda", "_", "obj", " =", " pd", ".", "DataFrame", "({", "text", "_", "column", ":", " [", "row", "[", "text", "_", "column", "]", " for", " row", " in", " data", "frame", ".", "to", "_", "numpy", "()", "]", "})", "\n", "\n", "    ", "#", " Remove", " stop", " words", " and", " punct", "uations", "\n", "    ", "clean", "_", "text", " =", " [", "re", ".", "sub", "('", "['", " +", " re", ".", "escape", "('", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", " +", " '", "]", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " p", "anda", "_", "obj", "[", "text", "_", "column", "]]", "\n", "    ", "clean", "_", "text", " =", " [", "re", ".", "sub", "('", "[", "^", "0", "-", "9", "a", "-", "z", "A", "-", "Z", "]+", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " clean", "_", "text", "]", "\n", "\n", "    ", "#", " Split", " text", " into", " words", "\n", "    ", "words", " =", " [", "word", ".", "split", "()", " for", " word", " in", " clean", "_", "text", "]", "\n", "\n", "    ", "#", " Count", " occurrences", " of", " words", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "word", "_", "counts", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "words", ")", "\n", "    ", "word", "_", "df", " =", " pd", ".", "DataFrame", "(", "word", "_", "counts", ".", "to", "array", "()", ",", " index", "=", "p", "anda", "_", "obj", ".", "index", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " word", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6648897528648376, -3.4518775939941406, -3.4804112911224365, -0.030240928754210472, -0.21322128176689148, -3.0669150352478027, -3.6814913749694824, -0.3170984089374542, -0.004955272655934095, -3.87032151222229, -1.1024175882339478, -0.4463818669319153, -1.5640329122543335, -0.022243650630116463, -0.25132620334625244, -0.0028773832600563765, -0.5480027794837952, -2.646852970123291, -0.18342138826847076, -0.0018077236600220203, -0.0002470903273206204, -0.0063714231364429, -2.826479196548462, -1.2850887775421143, -0.21611204743385315, -0.21318218111991882, -0.00010191874753218144, -1.9788545614574105e-05, -0.0029368149116635323, -0.06812784820795059, -0.04655591398477554, -0.0001998939987970516, -0.006878979969769716, -4.660974445869215e-05, -0.26765647530555725, -1.3682055473327637, -3.886147169396281e-05, -2.9066874980926514, -0.011820629239082336, -0.12941542267799377, -0.0074072242714464664, -0.029655179008841515, -0.2522745132446289, -0.0008665143977850676, -0.08946795016527176, -0.9824317693710327, -0.7805134654045105, -2.715836524963379, -1.313206672668457, -1.1590994596481323, -1.7578192949295044, -0.5409395694732666, -0.00306018372066319, -3.4834365844726562, -0.12622156739234924, -0.3503093123435974, -0.19476519525051117, -1.3106399774551392, -0.5482158064842224, -0.0005440423847176135, -0.016356321051716805, -1.2014849185943604, -2.455573558807373, -0.8193064332008362, -0.03971092030405998, -0.00014661667228210717, -0.1880982518196106, -1.166939616203308, -1.446424961090088, -0.0004963834653608501, -0.00012957210128661245, -0.05845046415925026, -0.10285105556249619, -2.9802276912960224e-06, -4.362964682513848e-05, -5.960462772236497e-07, -2.0503786799963564e-05, -0.3551539182662964, -0.013852879405021667, -0.05429331585764885, -0.20773838460445404, -0.07915950566530228, -0.003233088180422783, -1.2779674530029297, -0.010461610741913319, -0.0004677870310842991, -1.4202439785003662, -0.17382191121578217, -0.2600218653678894, -0.007010978646576405, -0.0017998700495809317, -0.053702060133218765, -1.5735502529423684e-05, -4.6491513785440475e-06, -4.291525328881107e-06, -0.3799116909503937, -0.030448975041508675, -0.0003719830128829926, -2.062299427052494e-05, -0.05067502707242966, -0.006026904564350843, -1.4263067245483398, -1.1457406282424927, -0.0038397409953176975, -0.03514056280255318, -0.04593615233898163, -0.17335443198680878, -0.1810983568429947, -0.0007781338645145297, -0.004435107111930847, -0.5306010842323303, -0.28409385681152344, -0.36510083079338074, -2.5870718955993652, -0.0005099665140733123, -0.0007557396893389523, -0.047410767525434494, -0.0025698277167975903, -0.00018451895448379219, -0.04316364973783493, -3.93382906622719e-05, -0.00036435641231946647, -1.0320441722869873, -0.007658406626433134, -6.222531374078244e-05, -0.03921758010983467, -0.0008274468709714711, -7.402622577501461e-05, -0.10850752145051956, -0.02782572992146015, -0.08910707384347916, -0.00038532938924618065, -5.447716102935374e-05, -0.012426452711224556, -5.960462772236497e-07, -3.099436753473128e-06, -0.0007474012672901154, -0.028516829013824463, -0.3316957652568817, -0.0005099665140733123, -0.0629691407084465, -2.505998134613037, -1.2754712104797363, -0.1992952823638916, -0.3637044429779053, -0.4355817437171936, -0.00035661060246638954, -1.5608479976654053, -0.12340173870325089, -0.09023615717887878, -0.463381290435791, -0.39350754022598267, -1.2430498600006104, -0.12969964742660522, -0.005264585837721825, -0.5648553967475891, -0.00025614796322770417, -0.0028174726758152246, -2.038458114839159e-05, -2.50339189733495e-06, -0.022065257653594017, -0.0015695883193984628, -0.22101153433322906, -0.0005414212355390191, -0.02829401008784771, -1.538922905921936, -1.3226597309112549, -0.07319016754627228, -0.7822506427764893, -0.2631072700023651, -0.0005972985527478158, -1.8459774255752563, -0.10908649861812592, -0.0029086447320878506, -0.00013147920253686607, -8.702239938429557e-06, -9.083335316972807e-05, -0.6874314546585083, -0.02050020731985569, -0.012374293990433216, -2.4071407318115234, -0.010622506961226463, -0.276532381772995, -0.018466688692569733, -0.15715205669403076, -5.8530047681415454e-05, -3.290122185717337e-05, -0.0021290748845785856, -0.0014317509485408664, -0.00010156115604331717, -0.006233653519302607, -0.011855264194309711, -0.0010443239007145166, -1.1522953510284424, -0.6996712684631348, -0.9851645827293396, -0.010331599973142147, -2.538858652114868, -0.004813867621123791, -0.007274686358869076, -0.001165664056316018, -0.007902311161160469, -0.017647625878453255, -0.12370505183935165, -7.807903602952138e-05, -2.253030106658116e-05, -0.008390887640416622, -0.27050817012786865, -0.005331820342689753, -0.0224330872297287, -0.04386705160140991, -1.8216586112976074, -0.010708959773182869, -0.21104608476161957, -9.333651541965082e-05, -2.729855441430118e-05, -0.0002611534437164664, -0.09238345175981522, -0.0003762729174923152, -0.015129806473851204, -0.061047401279211044, -0.039583053439855576, -0.022532161325216293, -3.766942609217949e-05, -2.658331868587993e-05, -0.01155104674398899, -4.768370445162873e-07, -0.00018499570433050394, -5.960462772236497e-07, -0.0027734884060919285, -0.07324966043233871, -0.012401138432323933, -0.2419956773519516, -0.00027092601521871984, -0.34036245942115784, -0.02419457770884037, -1.0251946150674485e-05, -0.0053005157969892025, -1.0286973714828491, -8.344646857949556e-07, -9.536738616588991e-07, -3.111314072157256e-05, -0.0002774807217065245, -0.05629342794418335], "finish_reason": "stop"}], "metrics": {"energy": 264.9865850982665, "energy_per_token": 1.0860105946650267, "time": 11.146018, "time_per_token": 0.04568040163934426}}
{"outputs": [{"text": "# Create a vectorizer instance\n    vectorizer = CountVectorizer(stop_words=STOPWORDS)\n\n    # Pre-processing: remove numbers, punctuation, and stopwords from text\n    text = dataframe[text_column].str.replace(r'\\w+', '').str.replace(r'\\d+', '').str.replace(r'\\.+', '').str.replace(\n        r'_+', '').str.replace(r'_+', '').str.replace(r'_+', '').str.replace(r'_+', '')\n    text_clean = text.str.cat()\n\n    # Transform the text using the vectorizer\n    count = vectorizer.fit_transform(text_clean)\n\n    # Create a pandas DataFrame from the count\n    result = pd.DataFrame(count.todense(), index=dataframe.index, columns=vectorizer.get_feature_names())\n    return result", "tokens": ["#", " Create", " a", " vector", "izer", " instance", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "\n", "    ", "#", " Pre", "-", "processing", ":", " remove", " numbers", ",", " punct", "uation", ",", " and", " stop", "words", " from", " text", "\n", "    ", "text", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'\\", "w", "+'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'\\", "d", "+'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'\\", ".", "+'", ",", " '", "')", ".", "str", ".", "replace", "(", "\n", "        ", "r", "'", "_+", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'", "_+", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'", "_+", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'", "_+", "'", ",", " '", "')", "\n", "    ", "text", "_", "clean", " =", " text", ".", "str", ".", "cat", "()", "\n", "\n", "    ", "#", " Transform", " the", " text", " using", " the", " vector", "izer", "\n", "    ", "count", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "_", "clean", ")", "\n", "\n", "    ", "#", " Create", " a", " pandas", " Data", "Frame", " from", " the", " count", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "count", ".", "t", "od", "ense", "()", ",", " index", "=", "data", "frame", ".", "index", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "    ", "return", " result", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6648897528648376, -2.2491464614868164, -0.3355608880519867, -2.2279653549194336, -0.0316108874976635, -1.5451762676239014, -0.7758331894874573, -0.0012346034636721015, -0.112188421189785, -0.004319979343563318, -0.001255677198059857, -0.0016586130950599909, -7.510157047363464e-06, -1.4424220353248529e-05, -0.8175373077392578, -0.36113598942756653, -0.001715499092824757, -7.664863369427621e-05, -0.5477262139320374, -0.055203404277563095, -3.576278118089249e-07, -0.000164018536452204, -0.0009392855572514236, -3.909988299710676e-05, -0.5777972340583801, -0.008789422921836376, -0.15011264383792877, -0.0005339150666259229, -0.02472352422773838, -3.0243043899536133, -2.795976400375366, -1.45042085647583, -2.1063036918640137, -0.7673294544219971, -1.8182377815246582, -0.4309788644313812, -0.32467931509017944, -0.1637917459011078, -0.12957409024238586, -0.18777146935462952, -0.28469905257225037, -0.10443241149187088, -1.248267650604248, -1.1465929746627808, -0.9221630692481995, -0.003485083347186446, -1.197595238685608, -0.9769212603569031, -0.5974746942520142, -1.7404405298293568e-05, -0.03022739663720131, -0.0013815154088661075, -1.4066597032069694e-05, -6.794906312279636e-06, -0.0007370378007180989, -0.08032550662755966, -0.8470814824104309, -0.0014961488777771592, -0.20758254826068878, -0.7558653354644775, -0.05470309406518936, -0.33688026666641235, -2.149904727935791, -0.6520765423774719, -0.00031871485407464206, -0.7214520573616028, -0.17924852669239044, -0.16521713137626648, -0.16941069066524506, -0.0013148480793461204, -0.112389475107193, -0.35262531042099, -0.021580984815955162, -0.7876952290534973, -0.689202606678009, -0.048564277589321136, -3.838465272565372e-05, -0.006739031057804823, -0.0227584820240736, -0.1602262258529663, -0.04077159985899925, -0.0010824303608387709, -0.03297020494937897, -0.13916124403476715, -0.06402815133333206, -1.7243250608444214, -1.977771520614624, -1.099568486213684, -0.00017033556650858372, -0.005554480012506247, -0.03848130628466606, -0.598080575466156, -0.130229651927948, -0.00939543079584837, -0.10396956652402878, -0.14960725605487823, -0.8939438462257385, -0.007527203299105167, -0.0736956000328064, -0.6576997637748718, -3.514500617980957, -0.11114755272865295, -0.0002277830062666908, -0.03818749263882637, -0.19625559449195862, -0.44119566679000854, -0.176463320851326, -0.020059343427419662, -0.13880155980587006, -0.10512396693229675, -0.02640482969582081, -0.4980998933315277, -0.47290775179862976, -0.16652342677116394, -0.0010121704544872046, -0.011598300188779831, -0.007225335575640202, -0.38990330696105957, -0.1414094865322113, -0.005796527955681086, -0.13858374953269958, -0.1966426819562912, -0.044669944792985916, -0.3984006643295288, -0.20456507802009583, -0.06536077708005905, -0.0013173482147976756, -0.006385281682014465, -0.004328406415879726, -0.2837837040424347, -0.07637656480073929, -0.003403824521228671, -0.06409355998039246, -0.08137432485818863, -0.04272638261318207, -0.23364944756031036, -0.026891065761446953, -0.021516816690564156, -0.00018630675913300365, -0.004358791746199131, -0.003908377606421709, -1.5455573797225952, -1.1245492696762085, -0.7673603296279907, -2.866675615310669, -1.3652236461639404, -0.028390303254127502, -1.4304368495941162, -0.07205397635698318, -0.37618282437324524, -0.001450320822186768, -1.5549261569976807, -0.8991024494171143, -0.16310113668441772, -0.187111958861351, -0.0014997198013588786, -0.03013359196484089, -2.3993349075317383, -0.6687897443771362, -0.6734172701835632, -1.7619850635528564, -0.1514415740966797, -0.030389653518795967, -0.0037074419669806957, -0.10341772437095642, -0.0009178477921523154, -2.3401284217834473, -1.7050399780273438, -0.027644271031022072, -0.00021205084340181202, -8.105902816168964e-05, -0.14764100313186646, -0.0013104431563988328, -5.352353764465079e-05, -0.06418971717357635, -0.026554705575108528, -0.033740974962711334, -0.00028224775451235473, -0.0961221233010292, -0.21674446761608124, -0.14431053400039673, -0.000929400441236794, -0.16786782443523407, -1.6923104524612427, -0.060628436505794525, -1.38975191116333, -0.26178333163261414, -0.0012887752382084727, -0.8368232846260071, -0.024233557283878326, -0.6023393869400024, -2.7472574710845947, -0.000660439720377326, -0.4987805485725403, -0.035761758685112, -0.004793580621480942, -0.0018992258701473475, -0.0020548435859382153, -0.03678251430392265, -0.056114017963409424, -0.03048100508749485, -0.8111476898193359, -9.417090768693015e-05, -0.004209586419165134, -0.03306351229548454, -0.03803257644176483, -0.9915029406547546, -0.0152047174051404, -0.4311273694038391, -0.003663615556433797, -0.06905169785022736, -0.0005241450853645802, -0.016295569017529488, -0.05737742409110069, -0.11789651960134506, -0.009672914631664753, -4.136476854910143e-05, -4.7444173105759546e-05, -0.010209125466644764, -1.7881377516459906e-06, -0.00025555206229910254, -1.4305104514278355e-06, -0.004175753798335791, -0.08805815130472183, -0.019231993705034256, -1.5927555561065674, -0.24026639759540558, -0.022817909717559814, -1.501314401626587, -1.6689286894688848e-06, -8.344646857949556e-07, -2.8132995794294402e-05, -0.000446696620201692, -0.09419269114732742], "finish_reason": "stop"}], "metrics": {"energy": 250.96589876174917, "energy_per_token": 1.0725038408621759, "time": 10.519905, "time_per_token": 0.04495685897435897}}
{"outputs": [{"text": "# Preparation\n    text_column = dataframe[text_column]\n    stopwords = STOPWORDS\n    nums = '([0-9])+'\n    punct = '[!\"#$%&\\'()*+,-./:;<=>?@[\\]^_`{|}~]+'\n    regex_stopwords = re.compile('|'.join(map(re.escape, stopwords)))\n    regex_nums = re.compile(nums)\n    regex_punct = re.compile(punct)\n\n    # Remove punctuation from each row\n    text_column = [re.sub(regex_punct, '', i) for i in text_column]\n    # Remove stopwords from each row\n    text_column = [re.sub(regex_stopwords, ' ', i) for i in text_column]\n    # Remove numbers from each row\n    text_column = [re.sub(regex_nums, '', i) for i in text_column]\n    # Apply CountVectorizer\n    vectorizer = CountVectorizer()\n    vectorized = vectorizer.fit", "tokens": ["#", " Pre", "paration", "\n", "    ", "text", "_", "column", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "stop", "words", " =", " ST", "OP", "W", "OR", "DS", "\n", "    ", "num", "s", " =", " '", "([", "0", "-", "9", "]", ")+", "'", "\n", "    ", "punct", " =", " '", "[", "!", "\"", "#", "$", "%", "&\\", "'", "()", "*", "+", ",", "-", ".", "/", ":", ";<", "=>", "?", "@", "[\\", "]^", "_", "`", "{|", "}~", "]+", "'", "\n", "    ", "regex", "_", "stop", "words", " =", " re", ".", "compile", "('", "|", "'", ".", "join", "(", "map", "(", "re", ".", "escape", ",", " stop", "words", ")))", "\n", "    ", "regex", "_", "num", "s", " =", " re", ".", "compile", "(", "num", "s", ")", "\n", "    ", "regex", "_", "punct", " =", " re", ".", "compile", "(", "punct", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", " from", " each", " row", "\n", "    ", "text", "_", "column", " =", " [", "re", ".", "sub", "(", "regex", "_", "punct", ",", " ''", ",", " i", ")", " for", " i", " in", " text", "_", "column", "]", "\n", "    ", "#", " Remove", " stop", "words", " from", " each", " row", "\n", "    ", "text", "_", "column", " =", " [", "re", ".", "sub", "(", "regex", "_", "stop", "words", ",", " '", " '", ",", " i", ")", " for", " i", " in", " text", "_", "column", "]", "\n", "    ", "#", " Remove", " numbers", " from", " each", " row", "\n", "    ", "text", "_", "column", " =", " [", "re", ".", "sub", "(", "regex", "_", "num", "s", ",", " ''", ",", " i", ")", " for", " i", " in", " text", "_", "column", "]", "\n", "    ", "#", " Apply", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "ized", " =", " vector", "izer", ".", "fit"], "logprobs": [-0.6648897528648376, -2.9187660217285156, -3.2757654190063477, -1.0143250226974487, -0.05140204355120659, -2.41353178024292, -1.2505552768707275, -0.5967447757720947, -0.3691912293434143, -0.5696061849594116, -0.00026639728457666934, -0.049279890954494476, -0.002111826092004776, -7.4741430580616e-05, -4.172316494077677e-06, -0.0020494903437793255, -0.42707470059394836, -0.13523323833942413, -2.700620651245117, -0.6724089980125427, -0.3953345715999603, -0.5572096109390259, -2.0265558760002023e-06, -5.125986263010418e-06, -6.258291978156194e-05, -1.9311717551317997e-05, -0.20186516642570496, -0.3448220193386078, -3.8167855739593506, -1.3443392515182495, -0.3890268802642822, -2.563859224319458, -3.3242290019989014, -0.12478944659233093, -0.012822559103369713, -0.0024833811912685633, -1.7519006729125977, -1.1111208200454712, -0.016787566244602203, -0.025291480123996735, -0.029012229293584824, -1.3107291460037231, -1.5368115901947021, -0.6156473159790039, -0.530599057674408, -0.9097606539726257, -0.04638248682022095, -0.0828249529004097, -0.0037273948546499014, -0.01323592010885477, -0.036981046199798584, -0.011310388334095478, -0.02847604639828205, -0.0031502642668783665, -0.003575719427317381, -0.0012180536286905408, -0.10748261958360672, -0.008244173601269722, -0.014981495216488838, -0.0017454879125580192, -0.00628873985260725, -0.0029459670186042786, -0.009747998788952827, -0.14888766407966614, -2.652883768081665, -0.07475581765174866, -0.08072200417518616, -0.0019011296099051833, -0.00031323294388130307, -0.022738557308912277, -0.25642576813697815, -0.004767716862261295, -0.00668669305741787, -0.3085866868495941, -2.023204803466797, -1.2495994567871094, -3.0496554374694824, -0.31257912516593933, -0.01225842721760273, -0.5572881102561951, -4.7205765440594405e-05, -0.0036060088314116, -0.6195967793464661, -0.2290731519460678, -4.9470632802695036e-05, -0.00014375607133843005, -0.00014399446081370115, -0.17552217841148376, -0.22989238798618317, -0.0005217621219344437, -0.0016840812750160694, -0.00037865620106458664, -0.0009953788248822093, -3.2782016205601394e-05, -0.07339877635240555, -5.543078441405669e-05, -0.10775323212146759, -0.023200372233986855, -0.04917730391025543, -0.0847182646393776, -0.009035887196660042, -0.6605972051620483, -0.017969196662306786, -0.00868271291255951, -0.00154292699880898, -4.684815212385729e-05, -0.0007078525959514081, -0.035197071731090546, -0.02050943300127983, -1.5139465176616795e-05, -0.006639681290835142, -0.001540903584100306, -0.007258828263729811, -0.013293210417032242, -0.0007676515378989279, -0.062134999781847, -0.06456942111253738, -0.00019071667338721454, -9.77468371274881e-05, -9.023735765367746e-05, -0.001210195361636579, -0.011882830411195755, -0.006826175842434168, -0.0016267173923552036, -0.33935225009918213, -0.0005675135762430727, -0.23165273666381836, -2.3021416664123535, -2.4982991218566895, -0.2603553831577301, -2.8412272930145264, -3.1932621002197266, -1.3782413005828857, -0.4999377131462097, -0.0021176550071686506, -0.4152233302593231, -0.07039331644773483, -0.053632237017154694, -0.12729158997535706, -1.8757719993591309, -1.3953038454055786, -0.0010231266496703029, -0.0028679927345365286, -0.012401021085679531, -0.029153844341635704, -0.0024726788979023695, -0.07423973828554153, -0.0012837749673053622, -0.33173778653144836, -5.924526340095326e-05, -3.102505683898926, -0.10832376778125763, -0.019273856654763222, -0.0003782987187150866, -0.00012003655137959868, -0.018578678369522095, -0.00017712931730784476, -4.7205765440594405e-05, -0.012820794247090816, -0.0027764602564275265, -1.2135562896728516, -0.07288742810487747, -0.13142625987529755, -0.5525326132774353, -0.09668990969657898, -0.15859627723693848, -0.015024123713374138, -0.0021257440093904734, -0.017229873687028885, -0.0003159739135298878, -0.02026508003473282, -0.0018760239472612739, -0.0015955348499119282, -0.004369830247014761, -0.031166113913059235, -2.2579591274261475, -0.0011616155970841646, -0.00044216870446689427, -0.0014094904763624072, -0.0006364941946230829, -6.16293036728166e-05, -0.0007502601947635412, -1.2993727978027891e-05, -0.00014768941036891192, -1.4920592308044434, -0.040536269545555115, -0.00018904806347563863, -0.013777161948382854, -0.013065090402960777, -0.05017732083797455, -4.279521817807108e-05, -1.2159273865108844e-05, -0.0005671561229974031, -3.576278118089249e-07, -1.6093124941107817e-05, -0.0005837167263962328, -0.0011664974736049771, -0.05464699864387512, -0.014768559485673904, -0.15072791278362274, -0.21076832711696625, -0.056897569447755814, -0.0030444960575550795, -0.002044612541794777, -0.009998239576816559, -0.00022230061586014926, -0.005743666552007198, -0.0005515484372153878, -0.0006461439770646393, -0.0006526962388306856, -0.009939698502421379, -0.0541011281311512, -0.0004655231023207307, -0.0001538873475510627, -0.0005976559477858245, -0.0008063640561886132, -3.194758028257638e-05, -7.021180499577895e-05, -1.0728830375228426e-06, -5.8887653722194955e-05, -1.83769953250885, -4.2914423829643056e-05, -0.00326017988845706, -0.002125268103554845, -0.009986083954572678, -3.1470757676288486e-05, -2.0265558760002023e-06, -0.00018594920402392745, -4.768370445162873e-07, -1.7046782886609435e-05, -0.0029277815483510494, -0.001039203256368637, -0.47586944699287415, -0.09835752844810486, -3.1793673038482666, -1.4977748394012451, -0.060744889080524445, -0.02548615075647831, -0.9939475655555725, -0.006622510030865669, -0.7829433083534241, -0.041267603635787964, -0.002460906282067299, -0.0003073934931308031, -1.5139465176616795e-05, -2.4914430468925275e-05, -0.868918776512146, -0.014057781547307968, -0.021436193957924843, -0.9790651798248291, -0.7130617499351501, -0.9418289065361023, -0.03747112676501274, -5.209310256759636e-05, -6.067568756407127e-05, -0.015894265845417976], "finish_reason": "length"}], "metrics": {"energy": 275.5152766895295, "energy_per_token": 1.0762315495684747, "time": 11.54761, "time_per_token": 0.0451078515625}}
{"outputs": [{"text": "# Remove stopwords from text data\n    dataframe.replace(STOPWORDS, \"\", inplace=True)\n\n    # Remove numeric characters\n    dataframe[text_column] = dataframe[text_column].astype(str).str.replace(r'\\d+', '', regex=True)\n\n    # Remove punctuations\n    dataframe[text_column] = dataframe[text_column].str.replace('[^\\w\\s]', '', regex=True)\n\n    # Vectorize the text data using CountVectorizer\n    vectorizer = CountVectorizer(max_features=None)\n    count_matrix = vectorizer.fit_transform(dataframe[text_column])\n\n    # Calculate word count for each word\n    result = pd.DataFrame(count_matrix.toarray(), columns=vectorizer.get_feature_names())\n\n    return result", "tokens": ["#", " Remove", " stop", "words", " from", " text", " data", "\n", "    ", "data", "frame", ".", "replace", "(", "ST", "OP", "W", "OR", "DS", ",", " \"", "\"", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " numeric", " characters", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "ast", "ype", "(", "str", ")", ".", "str", ".", "replace", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uations", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Vector", "ize", " the", " text", " data", " using", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "max", "_", "features", "=", "None", ")", "\n", "    ", "count", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Calculate", " word", " count", " for", " each", " word", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "count", "_", "matrix", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-0.6648897528648376, -1.4965039491653442, -0.5097635388374329, -0.04419375956058502, -1.5273507833480835, -0.76496422290802, -1.3572040796279907, -0.2781292498111725, -0.003796395380049944, -1.1945630311965942, -0.03929620981216431, -2.7450780868530273, -1.7017724514007568, -0.3156545162200928, -0.382625550031662, -2.0265558760002023e-06, -0.00012218205665703863, -1.9788545614574105e-05, -1.1920858014491387e-05, -0.0026805205270648003, -1.2388081550598145, -0.20838531851768494, -0.006843580398708582, -0.5302814841270447, -0.0002012050390476361, -0.004899401217699051, -0.001430679694749415, -0.07839244604110718, -0.015269760973751545, -0.23024442791938782, -0.0005791893927380443, -0.019637104123830795, -0.5352531671524048, -3.404923915863037, -0.44481760263442993, -2.1221890449523926, -0.00044252615771256387, -0.26373180747032166, -0.0010347970528528094, -0.4713510572910309, -0.002636411227285862, -1.1444026313256472e-05, -1.728519782773219e-05, -0.0012566297082230449, -0.020222440361976624, -0.16919460892677307, -0.0001134808044298552, -0.003497200319543481, -0.0004326361231505871, -2.3841830625315197e-06, -3.099436753473128e-06, -0.001557805109769106, -0.00390374637208879, -2.621105670928955, -0.00024828212917782366, -0.040529631078243256, -0.01917773298919201, -0.005379368085414171, -0.06582978367805481, -0.4959172308444977, -0.0008094609947875142, -0.02437003329396248, -0.6679016947746277, -0.13322889804840088, -0.3827276825904846, -0.14042356610298157, -0.17285571992397308, -3.862306402879767e-05, -1.2802523374557495, -0.00015758226800244302, -0.03815685585141182, -0.00035470392322167754, -0.003087161108851433, -0.005406282842159271, -0.09874813258647919, -0.03231772780418396, -0.00024279984063468874, -0.0036594585981220007, -0.1837896704673767, -0.16763810813426971, -1.605800747871399, -0.23999467492103577, -0.00040356122190132737, -0.0866917222738266, -0.0002602000313345343, -0.013836067169904709, -0.00020180096908006817, -2.622600959512056e-06, -1.0728830375228426e-06, -0.000626367807853967, -0.057934898883104324, -0.015727292746305466, -0.00023755589791107923, -0.000863774970639497, -0.00031132620642893016, -2.145764938177308e-06, -3.933898824470816e-06, -0.0012296028435230255, -0.003186270361766219, -0.6405324935913086, -0.0002454218047205359, -0.022956442087888718, -1.5399091243743896, -0.06382261216640472, -0.9767646193504333, -0.019134579226374626, -0.0882643386721611, -0.0024084628093987703, -0.10759245604276657, -0.006274998188018799, -7.259582343976945e-05, -0.17986276745796204, -5.495397272170521e-05, -0.0031001148745417595, -0.00031382881570607424, -0.0030115749686956406, -0.0011863820254802704, -0.02861924096941948, -0.08660077303647995, -0.0010705222375690937, -0.062343571335077286, -2.96983003616333, -0.11913781613111496, -1.9603267908096313, -0.649830162525177, -0.0981438010931015, -1.2446786165237427, -0.4100589454174042, -0.026287905871868134, -0.004095026291906834, -0.11679040640592575, -0.002996124094352126, -0.4531971514225006, -0.01206293236464262, -0.0012463905150070786, -0.0002802217786666006, -9.298280929215252e-06, -2.1934269170742482e-05, -0.8097492456436157, -2.7144322395324707, -8.713819261174649e-05, -0.09433914721012115, -0.005317117087543011, -1.026232361793518, -1.2143282890319824, -0.023270487785339355, -0.04748216271400452, -3.533256769180298, -0.0910906195640564, -0.05878997966647148, -0.002615842269733548, -0.002784900600090623, -1.4424220353248529e-05, -1.2993727978027891e-05, -0.002073521027341485, -0.0004215544031467289, -7.533743337262422e-05, -0.0008905735448934138, -0.008377410471439362, -2.9801878554280847e-05, -0.009401808492839336, -0.00028772983932867646, -2.2649508537142538e-05, -1.6689286894688848e-06, -0.08307347446680069, -0.04661234840750694, -0.4095839560031891, -0.0003909300430677831, -0.2782524526119232, -3.5419135093688965, -1.7485989332199097, -1.8426309823989868, -0.670372486114502, -0.02628210000693798, -1.2753092050552368, -0.7863870859146118, -0.0005969410995021462, -2.8664729595184326, -0.03297850862145424, -0.02229984477162361, -3.313963316031732e-05, -0.01021148543804884, -0.062192242592573166, -0.08231259137392044, -0.00010978573118336499, -8.332382276421413e-05, -0.0018887552432715893, -0.4455435574054718, -0.006950723007321358, -0.01906662993133068, -0.022069688886404037, -0.46607282757759094, -0.09441616386175156, -0.008721357211470604, -3.909988299710676e-05, -2.658331868587993e-05, -0.022902965545654297, -1.311301275563892e-06, -0.00011264643399044871, -1.1920928244535389e-07, -0.0027434115763753653, -0.1778680682182312, -0.11302987486124039, -0.7489138841629028, -0.00041559641249477863, -0.326106995344162, -0.01213925052434206, -1.1402411460876465, -0.009982189163565636, -0.8872151374816895], "finish_reason": "stop"}], "metrics": {"energy": 244.92365015411366, "energy_per_token": 1.1663030959719698, "time": 9.47058, "time_per_token": 0.045098}}
{"outputs": [{"text": "df = pd.DataFrame({text_column: dataframe[text_column]})\n    # remove stopwords from the text\n    df[text_column] = df[text_column].str.lower()\n    df[text_column] = df[text_column].str.replace('[^a-zA-Z\\s]', '')\n    df[text_column] = df[text_column].str.replace('\\n', ' ')\n    df[text_column] = df[text_column].str.strip()\n    df[text_column] = df[text_column].str.replace(r'\\s+', ' ')\n    df[text_column] = df[text_column].str.split(r'\\s+')\n    df = df[text_column].apply(lambda x: [w for w in x if w not in STOPWORDS])\n\n    # vectorize the text\n    cv = CountVectorizer()\n    cv.fit_transform(df[text_column])\n    return cv.fit_transform(df[text", "tokens": ["df", " =", " pd", ".", "DataFrame", "({", "text", "_", "column", ":", " data", "frame", "[", "text", "_", "column", "]", "})", "\n", "    ", "#", " remove", " stop", "words", " from", " the", " text", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "'", ",", " '", "')", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "strip", "()", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " '", " '", ")", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "split", "(", "r", "'\\", "s", "+", "')", "\n", "    ", "df", " =", " df", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " [", "w", " for", " w", " in", " x", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " vector", "ize", " the", " text", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "()", "\n", "    ", "cv", ".", "fit", "_", "transform", "(", "df", "[", "text", "_", "column", "])", "\n", "    ", "return", " cv", ".", "fit", "_", "transform", "(", "df", "[", "text"], "logprobs": [-3.04194974899292, -0.08594967424869537, -1.437345027923584, -0.006727071478962898, -0.16010211408138275, -1.1339044570922852, -0.2551649212837219, -0.0012332937913015485, -7.92710343375802e-05, -0.0021835551597177982, -0.1680028736591339, -3.85038583772257e-05, -0.0617828331887722, -0.0010152667528018355, -3.313963316031732e-05, -4.410734163684538e-06, -0.01361383218318224, -0.12142441421747208, -0.08536239713430405, -0.6727262139320374, -1.5598490238189697, -2.3287839889526367, -0.580395519733429, -0.08635882288217545, -2.59023380279541, -1.3889694213867188, -0.5818127393722534, -0.46087712049484253, -0.005818335339426994, -0.650740385055542, -0.24776917695999146, -0.03605502098798752, -6.615896563744172e-05, -2.2291887944447808e-05, -0.012255601584911346, -0.007607299834489822, -0.17119069397449493, -0.007922534830868244, -0.0007159530650824308, -7.748573807475623e-06, -6.6756979322235566e-06, -0.002504547592252493, -0.00950324535369873, -1.1493008136749268, -0.0004413345886860043, -0.8456679582595825, -0.021713856607675552, -0.6553244590759277, -0.03746676445007324, -0.1868084818124771, -0.01607024483382702, -0.0009336879593320191, -1.9073468138230965e-06, -1.6689286894688848e-06, -0.000962151971179992, -0.09441269189119339, -0.025592824444174767, -0.0018418743275105953, -0.00021038226259406656, -1.3828182090946939e-05, -2.622600959512056e-06, -0.0029970749747008085, -0.004564105998724699, -0.1039472222328186, -0.00036113892565481365, -0.049024537205696106, -0.9742093086242676, -0.15975376963615417, -0.27102231979370117, -0.06420759856700897, -6.794698856538162e-05, -0.0002932118659373373, -0.9137058258056641, -8.713819261174649e-05, -0.001115891383960843, -1.730971097946167, -0.25315800309181213, -0.13777723908424377, -0.0013652060879394412, -0.00011443436960689723, -0.941176176071167, -0.44741737842559814, -0.08436135947704315, -0.0772063136100769, -0.23570480942726135, -0.02926151640713215, -0.001121845212765038, -1.4305012882687151e-05, -2.145764938177308e-06, -0.0008312584250234067, -0.03872400149703026, -0.02415001019835472, -0.0013991338200867176, -0.00018463814922142774, -3.4570634852570947e-06, -1.0728830375228426e-06, -0.0011333954753354192, -0.0008680627797730267, -0.055750370025634766, -7.986703712958843e-05, -0.09896540641784668, -0.290225625038147, -0.2906527817249298, -2.9237349033355713, -0.10219936072826385, -0.0022846567444503307, -0.016604091972112656, -0.26410388946533203, -0.0007250064518302679, -0.05411354824900627, -0.07959863543510437, -0.23557314276695251, -0.0327601432800293, -0.001329015358351171, -3.6954811548639555e-06, -1.4305104514278355e-06, -0.0009148702956736088, -0.04466196522116661, -0.041768621653318405, -0.0011137479450553656, -0.00020096666412428021, -9.536738616588991e-07, -7.152555099310121e-07, -0.0012446045875549316, -0.0011610202491283417, -0.028555408120155334, -7.295342220459133e-05, -1.4415065050125122, -0.020153863355517387, -0.010352601297199726, -0.11375711113214493, -0.2261674702167511, -0.038703929632902145, -0.0012654400197789073, -8.4638240878121e-06, -1.5497195136049413e-06, -0.0010062160436064005, -0.02808099240064621, -0.053863830864429474, -0.0008198237628675997, -0.00022671037004329264, -8.344646857949556e-07, -5.960462772236497e-07, -0.0009700122172944248, -0.0013234198559075594, -0.06159409508109093, -6.937739817658439e-05, -0.21510687470436096, -1.5808544158935547, -0.26105600595474243, -0.4561067521572113, -0.06115775182843208, -0.2804873585700989, -0.00010394509445177391, -0.0107614416629076, -0.0033759051002562046, -0.010440021753311157, -0.04505451023578644, -0.24816027283668518, -0.3204297721385956, -0.04658128693699837, -0.0016060085035860538, -1.6689160474925302e-05, -1.311301275563892e-06, -0.0011872155591845512, -0.0276020597666502, -0.1065441146492958, -0.0021429925691336393, -0.00016378014697693288, -3.576278118089249e-07, -7.152555099310121e-07, -0.0027769359294325113, -0.0016696811653673649, -0.1299085170030594, -0.00018487652414478362, -1.327322006225586, -1.609717845916748, -0.3001193702220917, -0.4158969521522522, -0.04329882189631462, -2.029864549636841, -0.004384191241115332, -0.042224932461977005, -0.3412923216819763, -0.332248330116272, -1.3716117143630981, -0.2046869993209839, -1.2345657348632812, -0.008251267485320568, -3.6954811548639555e-06, -1.9073468138230965e-06, -0.0010140759404748678, -0.0026828984264284372, -0.438392698764801, -0.005263518542051315, -0.4456554055213928, -0.04768926650285721, -0.001369253732264042, -0.6356470584869385, -1.7524687051773071, -0.20021626353263855, -0.0014350840356200933, -0.0013817534781992435, -0.019335011020302773, -0.005565860774368048, -0.12473073601722717, -0.1619453877210617, -1.4781842764932662e-05, -0.017432915046811104, -5.960462772236497e-07, -1.5735502529423684e-05, -5.960462772236497e-07, -1.9430925021879375e-05, -0.04347837716341019, -0.03137408196926117, -1.3351893424987793, -0.0009527434594929218, -0.24815069139003754, -1.866640329360962, -0.09346791356801987, -0.42394861578941345, -0.4894378185272217, -0.6802235245704651, -0.0030493687372654676, -1.4474256038665771, -0.01397373341023922, -0.00026723151677288115, -1.3232143828645349e-05, -1.6212332411669195e-05, -0.6512150168418884, -0.016423750668764114, -0.012565725483000278, -0.5341152548789978, -0.21996650099754333, -0.007227939087897539, -2.172934055328369, -0.00021050144277978688, -0.01878846436738968, -0.019031891599297523, -0.03358928859233856, -0.0011210116790607572, -3.731181277544238e-05, -1.1920922133867862e-06, -0.08461683988571167, -0.04389740154147148, -0.6008830666542053, -0.6621842384338379, -0.3006569743156433, -0.6543684601783752, -2.238051414489746, -0.04723362252116203, -0.00036995718255639076, -0.007917094975709915, -0.017421433702111244, -0.005158566869795322, -0.00014757021563127637], "finish_reason": "length"}], "metrics": {"energy": 276.699032101631, "energy_per_token": 1.0808555941469962, "time": 11.564571, "time_per_token": 0.04517410546875}}
{"outputs": [{"text": "stopwords_regex = re.compile(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b', re.IGNORECASE)\n\n    # Convert text data to lowercase\n    dataframe[text_column] = dataframe[text_column].str.lower()\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].str.replace('[^a-z\\s]', '', regex=True)\n    # Remove stopwords\n    dataframe[text_column] = dataframe[text_column].str.replace(stopwords_regex, '', regex=True)\n    # Split words and create a new column\n    dataframe[text_column] = dataframe[text_column].str.split()\n    # Apply vectorizer to text\n    vectorizer = CountVectorizer(ngram_range=(2, 3), tokenizer=str.split)\n    dataframe[text_column] = vectorizer.fit_transform(dataframe[text_column])\n\n    return dataframe[[text_column", "tokens": ["stop", "words", "_", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "'", ",", " re", ".", "IGN", "ORE", "C", "ASE", ")", "\n", "\n", "    ", "#", " Convert", " text", " data", " to", " lower", "case", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "stop", "words", "_", "regex", ",", " ''", ",", " regex", "=", "True", ")", "\n", "    ", "#", " Split", " words", " and", " create", " a", " new", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "split", "()", "\n", "    ", "#", " Apply", " vector", "izer", " to", " text", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "2", ",", " ", "3", ")", ",", " token", "izer", "=", "str", ".", "split", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "return", " data", "frame", "[[", "text", "_", "column"], "logprobs": [-2.6051974296569824, -0.6838839650154114, -1.388414740562439, -1.4282121658325195, -0.02045489102602005, -0.9393057227134705, -3.766942609217949e-05, -0.0025521109346300364, -0.9321366548538208, -0.146915465593338, -0.289054274559021, -0.0010831448016688228, -0.2480648308992386, -0.016876887530088425, -1.549431324005127, -0.11535925418138504, -0.001663492526859045, -0.0005639393348246813, -0.00034981805947609246, -0.000188332938705571, -0.020079556852579117, -0.2635361850261688, -1.0728830375228426e-06, -6.318072337307967e-06, -1.1920922133867862e-06, -1.7762025890988298e-05, -0.018076207488775253, -0.0041136653162539005, -0.003093697363510728, -0.013130507431924343, -0.001447225920855999, -2.0105903148651123, -0.001029438222758472, -0.06839930266141891, -5.94836674281396e-05, -0.3672579526901245, -3.0636318115284666e-05, -3.6477376852417365e-05, -0.0002843929105438292, -0.016764003783464432, -0.024021651595830917, -1.120091199874878, -0.000717025191988796, -1.0114237070083618, -3.5798087120056152, -1.2962080240249634, -1.5068752765655518, -0.4205248951911926, -0.5080624222755432, -0.12830102443695068, -0.8995668888092041, -0.0020137999672442675, -0.29281526803970337, -0.00762398075312376, -0.21760272979736328, -0.005972514860332012, -1.5497195136049413e-06, -1.549708758830093e-05, -0.0063929809257388115, -0.007422133814543486, -0.022624701261520386, -3.158996332786046e-05, -0.002360536018386483, -0.0001426833332516253, -2.0265558760002023e-06, -1.311301275563892e-06, -0.00028427375946193933, -0.00027616979787126184, -0.39112547039985657, -3.4689302992774174e-05, -0.0025232164189219475, -0.0003046525234822184, -0.009127674624323845, -1.6039402484893799, -0.1597520411014557, -0.1547149270772934, -1.9645757675170898, -0.2921474874019623, -0.738785982131958, -0.0008374521275982261, -0.02765946090221405, -8.987976616481319e-05, -0.001536023453809321, -0.00011395759065635502, -9.536738616588991e-07, -2.145764938177308e-06, -0.00028975578607060015, -0.03901754319667816, -0.007509574294090271, -0.00023719835735391825, -0.0005514293443411589, -0.00018773700867313892, -9.536738616588991e-07, -9.536738616588991e-07, -0.0005958688561804593, -0.002024388173595071, -0.05958671122789383, -7.128461584215984e-05, -0.05081100016832352, -1.6946723461151123, -0.027423808351159096, -0.5323534607887268, -0.1416618674993515, -1.883488948806189e-05, -0.00011395759065635502, -2.3927011489868164, -0.38112616539001465, -0.21944810450077057, -0.001348063233308494, -5.280832192511298e-05, -0.5147792100906372, -6.615896563744172e-05, -0.03199196234345436, -0.002412862842902541, -0.0033471533097326756, -0.0008245882345363498, -0.009854595176875591, -0.09218452870845795, -0.023795966058969498, -0.0849427655339241, -0.14882972836494446, -0.04941140487790108, -0.08729919791221619, -0.0004217927053105086, -0.010152602568268776, -2.7179348762729205e-05, -0.0004914983292110264, -2.8132995794294402e-05, -1.4305104514278355e-06, -1.0728830375228426e-06, -0.0002499506517779082, -0.010882197879254818, -0.08162957429885864, -0.00018034738604910672, -0.00015686711412854493, -0.00011002412065863609, -2.3841855067985307e-07, -9.536738616588991e-07, -0.0003890234511345625, -0.0020944580901414156, -0.16907542943954468, -6.103329360485077e-05, -0.013348380103707314, -0.021105114370584488, -0.04090698063373566, -6.031808152329177e-05, -5.495397272170521e-05, -5.006777428206988e-06, -0.0226875152438879, -0.6720595955848694, -3.7788631743751466e-05, -0.01293530035763979, -0.00018499570433050394, -0.004267632961273193, -0.0006951061659492552, -0.010707426816225052, -0.3692292869091034, -0.04128476232290268, -1.5589605569839478, -1.9359734058380127, -2.3929595947265625, -2.481815814971924, -0.5175595879554749, -2.4163055419921875, -0.1178692877292633, -0.7008072137832642, -0.002393716247752309, -0.08433517813682556, -0.00029202012228779495, -0.20017166435718536, -0.02179865725338459, -9.715084888739511e-05, -1.6569954823353328e-05, -0.08439379185438156, -0.0031305374577641487, -0.07454351335763931, -3.611976353568025e-05, -0.0018629353726282716, -0.0003003622987307608, -1.0728830375228426e-06, -8.344646857949556e-07, -0.0007858763565309346, -0.0016398091102018952, -0.0825992077589035, -5.054346183896996e-05, -0.019999634474515915, -0.13423411548137665, -0.03757584095001221, -0.8236014246940613, -0.10848944634199142, -2.7087502479553223, -1.3188658952713013, -2.3567771911621094, -0.9259310364723206, -2.937392234802246, -1.5927414894104004, -0.0039803339168429375, -0.22294726967811584, -0.015163740143179893, -0.0026661348529160023, -0.00047088501742109656, -7.986990567587782e-06, -1.1920858014491387e-05, -1.001245379447937, -3.451571226119995, -0.01440565474331379, -6.615896563744172e-05, -3.659658250398934e-05, -0.005713204387575388, -2.1727943420410156, -0.00017105070583056659, -0.05616236850619316, -1.2509897947311401, -0.7592411041259766, -0.0005449955351650715, -1.97307288646698, -1.6237469911575317, -0.00784825999289751, -2.719536066055298, -0.01578138768672943, -0.485089510679245, -0.4724816083908081, -0.017262212932109833, -0.030280712991952896, -1.9641084671020508, -0.004889554809778929, -0.22227247059345245, -0.014487316831946373, -0.0004624251159839332, -1.728519782773219e-05, -0.036647260189056396, -0.005590518470853567, -0.030698945745825768, -0.00010322991875000298, -0.00017820201173890382, -0.0525054894387722, -0.0001528146385680884, -0.00014327930693980306, -0.0012000747956335545, -0.017399994656443596, -2.4437606043647975e-05, -0.003319469979032874, -0.00011121608258690685, -1.0728830375228426e-06, -5.960462772236497e-07, -0.15802767872810364, -0.39828845858573914, -0.8044771552085876, -0.003804233390837908, -0.07792577147483826, -0.05491965636610985, -0.0002308817347511649, -2.757214307785034, -0.002201278228312731, -1.3708974620385561e-05, -3.4570634852570947e-06], "finish_reason": "length"}], "metrics": {"energy": 280.31443972682933, "energy_per_token": 1.094978280182927, "time": 11.569713, "time_per_token": 0.04519419140625}}
{"outputs": [{"text": "vectorizer = CountVectorizer()\n\n    def clean_text(text):\n        text = str(text)\n        text = re.sub(r'[\\.,\\/#!$%\\^&\\*;:{}=\\-_`~()]', '', text)\n        text = re.sub(r'[^\\w\\s]', '', text)\n        text = re.sub(r'[\\s]{2,}', ' ', text)\n        return text\n\n    text_data = dataframe[text_column].apply(clean_text)\n    return pd.DataFrame(vectorizer.fit_transform(text_data.str.split()).toarray(),\n                        index=text_data.index,\n                        columns=[\" \".join(e) for e in vectorizer.get_feature_names_out()])", "tokens": ["vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "\n", "    ", "def", " clean", "_", "text", "(", "text", "):", "\n", "        ", "text", " =", " str", "(", "text", ")", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[\\", ".", ",", "\\", "/#", "!", "$", "%\\", "^", "&\\", "*", ";", ":", "{", "}=\\", "-", "_", "`", "~", "()", "]", "'", ",", " ''", ",", " text", ")", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[\\", "s", "]{", "2", ",", "}'", ",", " '", " '", ",", " text", ")", "\n", "        ", "return", " text", "\n", "\n", "    ", "text", "_", "data", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "clean", "_", "text", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "text", "_", "data", ".", "str", ".", "split", "())", ".", "to", "array", "()", ",", "\n", "                ", "        ", "index", "=", "text", "_", "data", ".", "index", ",", "\n", "                ", "        ", "columns", "=[", "\"", " \"", ".", "join", "(", "e", ")", " for", " e", " in", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "])", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.108977794647217, -0.05715261399745941, -0.0033766180276870728, -0.0018193849828094244, -8.34461570775602e-06, -3.135155202471651e-05, -1.1623365879058838, -0.025626754388213158, -1.3577423095703125, -0.0008550802012905478, -3.4084560871124268, -2.5625123977661133, -0.12388632446527481, -0.1503322720527649, -0.03615102916955948, -0.21687135100364685, -0.1082809716463089, -0.004757157526910305, -0.006984816864132881, -1.8813693523406982, -0.017394723370671272, -2.833983898162842, -0.005747814662754536, -0.014649799093604088, -0.008007566444575787, -0.46341076493263245, -0.12662644684314728, -0.5199472308158875, -0.011085587553679943, -0.701418399810791, -4.1126360883936286e-05, -0.018300846219062805, -0.1935432404279709, -0.03909905254840851, -0.628800094127655, -3.0111594200134277, -3.1005396842956543, -0.7421420812606812, -0.9820417165756226, -0.8868449330329895, -0.002398473210632801, -0.046460896730422974, -0.15496550500392914, -0.013459885492920876, -0.016676314175128937, -0.031151091679930687, -0.012328490614891052, -0.09447181224822998, -0.15662695467472076, -0.1416616588830948, -0.011223869398236275, -0.020960954949259758, -0.011633767746388912, -0.08469734340906143, -0.34220582246780396, -0.3370976150035858, -0.004485545679926872, -0.00012087091454304755, -0.2500193119049072, -5.6265202147187665e-05, -0.002188907703384757, -0.00980029534548521, -0.1031978651881218, -0.013153097592294216, -0.1331583559513092, -0.001712523982860148, -0.7037199139595032, -0.0028145008254796267, -0.003416061168536544, -0.08514335006475449, -0.029775874689221382, -0.3675783574581146, -0.15522213280200958, -0.7070012092590332, -0.012997549958527088, -0.06338310241699219, -0.0015849421033635736, -0.015150237828493118, -0.0013434203574433923, -5.1377883210079744e-05, -0.09306405484676361, -3.0040289857424796e-05, -0.00039736481267027557, -0.0020801827777177095, -0.020075233653187752, -0.024015599861741066, -0.4101025462150574, -0.0029906569980084896, -2.017641544342041, -0.0033418068196624517, -0.002540101297199726, -0.10326968878507614, -0.024351302534341812, -1.3775382041931152, -0.7770101428031921, -0.5174590945243835, -0.8988928198814392, -0.01743057183921337, -0.0026925283018499613, -0.008586629293859005, -8.427741704508662e-05, -0.022080648690462112, -0.0012675831094384193, -7.176141662057489e-05, -0.004642778541892767, -0.0097008952870965, -0.02400919981300831, -0.05754951760172844, -0.7046844363212585, -0.026677517220377922, -0.3181617856025696, -0.022188503295183182, -0.00047708096099086106, -2.7349746227264404, -1.1502721309661865, -2.449841022491455, -0.05857650190591812, -0.704545259475708, -1.6569954823353328e-05, -0.04693782329559326, -0.0026012177113443613, -5.006777428206988e-06, -6.9141146923357155e-06, -0.0008111285860650241, -0.28503841161727905, -0.443462997674942, -0.001073142047971487, -0.06501086801290512, -1.1205610462639015e-05, -9.894321920000948e-06, -0.0021014767698943615, -0.16555540263652802, -0.27637794613838196, -3.7141566276550293, -0.6392569541931152, -2.3245540432981215e-05, -0.014094337821006775, -0.08404587209224701, -0.0716443657875061, -6.508615479106084e-05, -6.472854875028133e-05, -0.007391959894448519, -0.0003486264031380415, -7.188061863416806e-05, -0.0048448313027620316, -0.024086007848381996, -0.00014840454969089478, -2.5629668016335927e-05, -2.002938985824585, -2.3291749954223633, -0.0009554826538078487, -0.4895199239253998, -0.28704729676246643, -0.04804336279630661, -0.2596909999847412, -0.0051668682135641575, -0.05271495133638382, -0.02619117684662342, -0.34698787331581116, -0.009072508662939072, -0.11942317336797714, -1.008760929107666, -0.011822514235973358, -1.652611494064331, -0.00015400654228869826, -0.00027044929447583854, -0.0021997320000082254, -0.00034421717282384634, -0.004431309178471565, -0.4693988561630249, -6.4490144723095e-05, -0.0003526780928950757, -0.0002131234941771254, -0.46997904777526855, -0.8677184581756592, -0.26598474383354187, -0.0024607873056083918, -7.152301259338856e-05, -0.008314873091876507, -2.9328877925872803, -0.31751149892807007, -0.03628427907824516, -0.0038849846459925175, -0.0010056205792352557, -0.13273441791534424, -0.00011717586312443018, -0.00016151554882526398, -0.05288287252187729, -7.152555099310121e-07, -0.0001591317413840443, -1.1920928244535389e-07, -0.0025242867413908243, -1.5952565670013428, -5.1616290875244886e-05, -0.005818335339426994, -0.05274390056729317, -1.1604275703430176, -2.622600959512056e-06, -8.344646857949556e-07, -0.00010024998482549563, -0.00027104519540444016, -0.07192718237638474], "finish_reason": "stop"}], "metrics": {"energy": 215.79497148609173, "energy_per_token": 1.0682919380499591, "time": 9.056536, "time_per_token": 0.04483433663366336}}
{"outputs": [{"text": "dataframe[text_column] = dataframe[text_column].str.lower().str.replace(r'\\s+', ' ').strip()\n    dataframe[text_column] = dataframe[text_column].str.replace(r'[^a-z ]', '')\n    stopwords = set(STOPWORDS)\n    dataframe[text_column] = dataframe[text_column].str.split().apply(lambda x: ' '.join([w for w in x if w not in stopwords]))\n    vectorizer = CountVectorizer()\n    dataframe[text_column] = vectorizer.fit_transform(dataframe[text_column]).toarray()\n    return dataframe[text_column]", "tokens": ["data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " '", " '", ")", ".", "strip", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", " ]", "'", ",", " '", "')", "\n", "    ", "stop", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "split", "()", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "w", " for", " w", " in", " x", " if", " w", " not", " in", " stop", "words", "]))", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", "\n", "    ", "return", " data", "frame", "[", "text", "_", "column", "]"], "logprobs": [-3.17891263961792, -0.11241834610700607, -0.5948535799980164, -0.023163914680480957, -6.198863957251888e-06, -3.886147169396281e-05, -0.013327794149518013, -0.03267349675297737, -0.07980238646268845, -0.000256982195423916, -0.018790336325764656, -0.0007203606073744595, -7.629365427419543e-06, -5.8412379075889476e-06, -0.0035689487121999264, -0.056427739560604095, -0.9688129425048828, -0.0016233850037679076, -0.40261057019233704, -0.02532925456762314, -1.8046663999557495, -0.24328568577766418, -0.0006725909770466387, -0.12348582595586777, -0.5848657488822937, -0.18926294147968292, -0.8988198041915894, -1.9222460985183716, -0.1593146175146103, -0.00010561384988250211, -0.056924935430288315, -0.013109330087900162, -0.43607375025749207, -0.5623293519020081, -1.8597307205200195, -0.009872183203697205, -0.2459544986486435, -0.1599818468093872, -0.31669509410858154, -0.002087915316224098, -0.016758376732468605, -0.0008936702506616712, -2.145764938177308e-06, -5.960446742392378e-06, -0.00145329674705863, -0.08731252700090408, -0.07294217497110367, -0.0008985534077510238, -0.00206947629339993, -0.00033384948619641364, -2.0265558760002023e-06, -1.6689286894688848e-06, -0.010912030935287476, -0.018818063661456108, -0.2643628418445587, -0.0004345426568761468, -0.0820479616522789, -0.15850044786930084, -0.043895915150642395, -0.6216937303543091, -0.16176876425743103, -1.236630916595459, -0.11662036180496216, -0.0001565095444675535, -0.0003644755925051868, -1.422667384147644, -0.20920108258724213, -7.60526381782256e-05, -0.2048078328371048, -0.25595226883888245, -0.20193324983119965, -0.10723377764225006, -2.6554062366485596, -0.8034101724624634, -0.4450191259384155, -0.6380675435066223, -0.003653163556009531, -0.011743461713194847, -8.344646857949556e-07, -3.099436753473128e-06, -1.1920922133867862e-06, -1.811964830267243e-05, -0.020269403234124184, -0.014712058939039707, -0.02825159579515457, -0.49844276905059814, -0.0024528198409825563, -0.01058723870664835, -0.0005374894244596362, -6.318072337307967e-06, -7.986990567587782e-06, -0.0015598285244777799, -0.008199836127460003, -0.12602485716342926, -0.00013195598148740828, -0.001143040368333459, -0.0005728749092668295, -2.264974000354414e-06, -1.6689286894688848e-06, -0.0017045505810528994, -0.010332662612199783, -0.43282169103622437, -0.00022873646230436862, -0.8023583292961121, -0.23226255178451538, -0.7753015160560608, -0.12251434475183487, -0.0017829725984483957, -0.8740777969360352, -0.02753039263188839, -0.0038441347423940897, -2.0116848945617676, -0.0076646762900054455, -0.0007649118197150528, -9.48860906646587e-05, -0.3364906907081604, -2.0661144256591797, -0.005800202023237944, -0.0004508670826908201, -0.0003415954706724733, -0.009120115078985691, -0.011856324970722198, -0.10937099903821945, -0.006319657899439335, -2.7417760065873154e-05, -0.02164514735341072, -3.397406908334233e-05, -0.3066646456718445, -0.017015542834997177, -0.21149203181266785, -0.8365187644958496, -0.04351935163140297, -0.0021567910443991423, -0.0004037995240651071, -9.179073458653875e-06, -2.455681169521995e-05, -0.4490845501422882, -0.011103389784693718, -0.018225347623229027, -1.5775948762893677, -0.00822159182280302, -0.21504418551921844, -0.008751608431339264, -2.7417760065873154e-05, -1.3589766240329482e-05, -0.046833742409944534, -0.008022111840546131, -0.06056470796465874, -4.541770613286644e-05, -0.00011407678539399058, -0.02232595719397068, -0.00035255891270935535, -0.00018559163436293602, -0.0018688846612349153, -0.00986710749566555, -8.583032467868179e-06, -0.0022400543093681335, -8.797258487902582e-05, -5.960462772236497e-07, -1.4305104514278355e-06, -0.025915799662470818, -0.8827736377716064, -0.17502036690711975, -0.027985943481326103, -0.0018067717319354415, -0.10044305771589279, -0.2702789604663849, -0.07414200901985168, -0.053268250077962875, -8.427741704508662e-05, -1.4222891330718994, -0.021078035235404968, -6.9141146923357155e-06, -2.50339189733495e-06, -0.3277053236961365], "finish_reason": "stop"}], "metrics": {"energy": 202.41142618370068, "energy_per_token": 1.1566367210497182, "time": 7.7886043, "time_per_token": 0.044506310285714286}}
{"outputs": [{"text": "# Preprocessing and filtering of text data\n    text = dataframe[text_column]\n    text = text.fillna(\"\")  # fill NaN values with empty string\n    text = text.str.lower()  # convert text to lowercase\n    text = text.str.replace(r'[^a-z\\s]+', \"\", regex=True)  # remove special characters and numbers\n    text = text.str.replace(r'\\s+', \" \", regex=True)  # remove double spaces\n\n    # Splitting text into individual words\n    text_words = text.str.split()\n\n    # Stopword removal\n    stopwords_regex = re.compile(\"|\".join(map(re.escape, STOPWORDS)))\n    text_words = text_words.apply(lambda x: [w for w in x if not stopwords_regex.match(w)])\n\n    # Counting occurrences of each word\n    vectorizer = CountVectorizer()\n    tfidf = vectorizer.fit_transform(text_words)\n    count_matrix = pd.DataFrame", "tokens": ["#", " Pre", "processing", " and", " filtering", " of", " text", " data", "\n", "    ", "text", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "text", " =", " text", ".", "fill", "na", "(", "\"", "\"", ")", "  ", "#", " fill", " Na", "N", " values", " with", " empty", " string", "\n", "    ", "text", " =", " text", ".", "str", ".", "lower", "()", "  ", "#", " convert", " text", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", "\\", "s", "]+", "'", ",", " \"", "\"", ",", " regex", "=", "True", ")", "  ", "#", " remove", " special", " characters", " and", " numbers", "\n", "    ", "text", " =", " text", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " \"", " \"", ",", " regex", "=", "True", ")", "  ", "#", " remove", " double", " spaces", "\n", "\n", "    ", "#", " Split", "ting", " text", " into", " individual", " words", "\n", "    ", "text", "_", "words", " =", " text", ".", "str", ".", "split", "()", "\n", "\n", "    ", "#", " Stop", "word", " removal", "\n", "    ", "stop", "words", "_", "regex", " =", " re", ".", "compile", "(", "\"", "|", "\"", ".", "join", "(", "map", "(", "re", ".", "escape", ",", " ST", "OP", "W", "OR", "DS", ")))", "\n", "    ", "text", "_", "words", " =", " text", "_", "words", ".", "apply", "(", "lambda", " x", ":", " [", "w", " for", " w", " in", " x", " if", " not", " stop", "words", "_", "regex", ".", "match", "(", "w", ")]", ")", "\n", "\n", "    ", "#", " Count", "ing", " occurrences", " of", " each", " word", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "_", "words", ")", "\n", "    ", "count", "_", "matrix", " =", " pd", ".", "DataFrame"], "logprobs": [-0.6648897528648376, -2.9187660217285156, -0.8955162763595581, -3.148793935775757, -4.092390060424805, -2.545816421508789, -0.6105554699897766, -0.45674431324005127, -0.24206408858299255, -0.013483055867254734, -1.3921141624450684, -1.1046667098999023, -0.24080145359039307, -3.194758028257638e-05, -0.05048508569598198, -0.0013566347770392895, -8.821448318485636e-06, -8.34461570775602e-06, -0.0015103134792298079, -1.2506712675094604, -0.08371187001466751, -0.22348052263259888, -0.07758540660142899, -0.11770864576101303, -0.00695462990552187, -2.8606958389282227, -3.0517112463712692e-05, -1.1681265830993652, -0.259684681892395, -0.4594840109348297, -0.00032264748006127775, -1.3421242237091064, -0.0006224363460205495, -2.188192367553711, -1.1470022201538086, -0.19446218013763428, -0.04975706338882446, -0.07844435423612595, -0.6612739562988281, -0.760739803314209, -0.056215111166238785, -0.06584585458040237, -0.047823261469602585, -0.015139670111238956, -0.12419728189706802, -0.005926298908889294, -0.9781229496002197, -0.00019167017308063805, -0.5669551491737366, -0.0004119024670217186, -0.10819442570209503, -0.0028127175755798817, -0.06361233443021774, -0.9069531559944153, -0.016922365874052048, -0.013816197402775288, -0.06614180654287338, -0.024305345490574837, -0.049835775047540665, -0.10630479454994202, -0.005588740110397339, -0.10144708305597305, -0.001117201172746718, -0.10249368101358414, -7.009260298218578e-05, -0.08051030337810516, -0.21271972358226776, -0.16890589892864227, -1.5372653007507324, -0.19508755207061768, -1.9905184507369995, -0.03806138038635254, -3.85038583772257e-05, -9.274052717955783e-05, -1.1065335273742676, -0.1374230980873108, -2.4737210273742676, -0.010160980746150017, -1.6212332411669195e-05, -2.9596691131591797, -0.22793646156787872, -0.03921838477253914, -0.056479789316654205, -0.0006890306831337512, -0.0010415849974378943, -0.0012153151910752058, -0.05605315789580345, -0.0003047717036679387, -0.04886368662118912, -1.2903437614440918, -0.007599846459925175, -1.092369556427002, -0.7161211967468262, -0.08875118941068649, -0.03373509645462036, -0.04981275275349617, -0.0038650347851216793, -0.11489676684141159, -0.0009525052737444639, -0.07451662421226501, -5.364274329622276e-05, -0.11183308809995651, -0.10536925494670868, -0.09691552817821503, -0.34555959701538086, -0.27977660298347473, -0.04042316600680351, -1.1920858014491387e-05, -0.3805970251560211, -0.01366333942860365, -0.33581236004829407, -0.0016693241195753217, -5.936446541454643e-05, -0.005211933515965939, -0.0006877202540636063, -0.35627466440200806, -0.004249827936291695, -0.26773685216903687, -3.2261102199554443, -0.1705627739429474, -0.024084029719233513, -1.4801164865493774, -0.0004988856380805373, -0.1108839362859726, -2.9992220401763916, -0.7728803157806396, -0.34716877341270447, -0.05837692320346832, -1.7072553634643555, -0.010414067655801773, -0.29322540760040283, -0.0006497179274447262, -0.710895299911499, -2.549330234527588, -1.0327377319335938, -0.014470632188022137, -0.3364544212818146, -0.0006246999255381525, -0.05235210061073303, -7.903263758635148e-05, -0.016084088012576103, -0.30118370056152344, -0.07633503526449203, -0.1982658952474594, -0.00037651124875992537, -0.028252869844436646, -2.838181734085083, -0.15977367758750916, -0.24318446218967438, -0.1485246866941452, -0.0007294139941222966, -0.8110217452049255, -0.5651389956474304, -1.1828413009643555, -1.3099725246429443, -0.004315587691962719, -0.40996053814888, -8.4638240878121e-06, -0.0008500776602886617, -0.3466565012931824, -1.3722583055496216, -0.3549719750881195, -1.2040065485052764e-05, -3.6477376852417365e-05, -0.00015889335190877318, -0.17598505318164825, -0.3084593117237091, -0.0003212174342479557, -0.00229119835421443, -8.082063141046092e-05, -0.0003369478799868375, -1.9311717551317997e-05, -0.0035160882398486137, -5.960462772236497e-07, -2.9802276912960224e-06, -3.4570634852570947e-06, -2.1457441107486375e-05, -0.04000886529684067, -0.05253105238080025, -0.0522615909576416, -0.2687792479991913, -0.08416248112916946, -0.18638789653778076, -0.10051313042640686, -0.044948067516088486, -0.0053370376117527485, -2.3007127310847864e-05, -0.00035065223346464336, -0.877957820892334, -0.002230301033705473, -0.14846108853816986, -0.1742185801267624, -0.0002535260282456875, -2.932711124420166, -0.7264431715011597, -0.12135262042284012, -0.00025006983196362853, -0.00023266946664080024, -0.0014987675240263343, -0.003305568592622876, -0.14087730646133423, -0.05404793471097946, -8.082063141046092e-05, -0.00015484087634831667, -1.1205610462639015e-05, -2.992108420585282e-05, -1.2636566162109375, -0.0001573438785271719, -0.0009296386269852519, -0.013044851832091808, -0.005361108109354973, -0.013626649975776672, -0.06632667779922485, -0.0002687808300834149, -0.07163304835557938, -0.9032580256462097, -0.5089704394340515, -1.288935899734497, -0.050317782908678055, -1.0476100444793701, -0.027249468490481377, -0.14520201086997986, -0.0009348789462819695, -0.6320513486862183, -0.016820387914776802, -0.0008753282018005848, -8.606540359323844e-05, -7.271740287251305e-06, -2.90866428258596e-05, -0.6883532404899597, -0.010963323526084423, -0.006008182652294636, -3.6800761222839355, -1.5309350490570068, -0.004780411254614592, -0.5346866250038147, -0.07868867367506027, -9.333651541965082e-05, -0.00011729506513802335, -0.014128071255981922, -0.012953657656908035, -5.411955135059543e-05, -0.0019225463038310409, -0.0070079006254673, -0.016065318137407303, -1.4305012882687151e-05, -0.04702972248196602, -0.0845634937286377, -0.18932658433914185, -2.0451669692993164, -0.5035653114318848, -0.2201627939939499, -0.0020856549963355064, -0.587315559387207, -0.0002867764269467443, -0.018085455521941185], "finish_reason": "length"}], "metrics": {"energy": 282.35121975612657, "energy_per_token": 1.1029344521723694, "time": 11.570509, "time_per_token": 0.04519730078125}}
{"outputs": [{"text": "text = dataframe[text_column]\n\n    # Remove numbers, punctuations, and stopwords from the text\n    text = [re.sub(r'\\d+', '', line) for line in text]\n    text = [re.sub(r'[^\\w\\s]', '', line) for line in text]\n    text = [line.lower() for line in text]\n    text = [re.sub(r'\\s+', ' ', line) for line in text]\n\n    # Split the text into words using the space delimiter\n    words = [word.strip() for line in text for word in line.split() if word not in STOPWORDS]\n\n    # Create a dictionary of words with their count\n    word_count = {}\n    for word in words:\n        word_count[word] = words.count(word)\n\n    # Create a pandas DataFrame with the word as the index and its count as its values\n    word_count_df = pd.DataFrame.from_dict(word_count, orient='index', columns=['count'])\n\n    return word_", "tokens": ["text", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "\n", "    ", "#", " Remove", " numbers", ",", " punct", "uations", ",", " and", " stop", "words", " from", " the", " text", "\n", "    ", "text", " =", " [", "re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " line", ")", " for", " line", " in", " text", "]", "\n", "    ", "text", " =", " [", "re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " line", ")", " for", " line", " in", " text", "]", "\n", "    ", "text", " =", " [", "line", ".", "lower", "()", " for", " line", " in", " text", "]", "\n", "    ", "text", " =", " [", "re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " line", ")", " for", " line", " in", " text", "]", "\n", "\n", "    ", "#", " Split", " the", " text", " into", " words", " using", " the", " space", " del", "im", "iter", "\n", "    ", "words", " =", " [", "word", ".", "strip", "()", " for", " line", " in", " text", " for", " word", " in", " line", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " of", " words", " with", " their", " count", "\n", "    ", "word", "_", "count", " =", " {}", "\n", "    ", "for", " word", " in", " words", ":", "\n", "        ", "word", "_", "count", "[", "word", "]", " =", " words", ".", "count", "(", "word", ")", "\n", "\n", "    ", "#", " Create", " a", " pandas", " Data", "Frame", " with", " the", " word", " as", " the", " index", " and", " its", " count", " as", " its", " values", "\n", "    ", "word", "_", "count", "_", "df", " =", " pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "word", "_", "count", ",", " orient", "='", "index", "'", ",", " columns", "=['", "count", "'])", "\n", "\n", "    ", "return", " word", "_"], "logprobs": [-3.4806036949157715, -1.625105619430542, -0.16375774145126343, -3.1470757676288486e-05, -0.056061383336782455, -0.0025361774023622274, -1.490105023549404e-05, -1.4305012882687151e-05, -0.002036403864622116, -0.5100337266921997, -0.9714685678482056, -0.0010045487433671951, -0.2050510197877884, -0.831122875213623, -2.7652409076690674, -1.8587918281555176, -0.6116887927055359, -1.997215986251831, -0.35605233907699585, -0.1589527726173401, -0.46201789379119873, -0.04255412146449089, -1.0683780908584595, -0.6427024602890015, -0.14124658703804016, -0.3655683398246765, -0.002185458317399025, -0.48046383261680603, -0.07929067313671112, -2.1857924461364746, -0.25188103318214417, -0.00011920218821614981, -0.005350199528038502, -0.18370693922042847, -0.014245248399674892, -0.23903311789035797, -0.1557196080684662, -0.0698806494474411, -2.6225699912174605e-05, -0.15102644264698029, -2.0503786799963564e-05, -2.2200653553009033, -0.0655083954334259, -0.031069854274392128, -0.00032360086333937943, -2.4199192921514623e-05, -0.004486613906919956, -0.01673246920108795, -0.017866037786006927, -0.005166394170373678, -0.032086748629808426, -0.0007641970878466964, -0.043876294046640396, -0.08031274378299713, -0.0008472190820612013, -0.000834355247206986, -0.09462559968233109, -0.004479255992919207, -0.08400126546621323, -0.048702239990234375, -0.2107597291469574, -0.0033884986769407988, -0.09549376368522644, -0.001772262854501605, -0.07092481851577759, -0.027484582737088203, -3.576214658096433e-05, -0.016214758157730103, -2.407998726994265e-05, -0.0024453280493617058, -0.009050417691469193, -0.006962324492633343, -6.294052582234144e-05, -1.0728830375228426e-06, -0.0002256377338198945, -0.0007394201820716262, -0.0038852221332490444, -0.07159454375505447, -0.07222455739974976, -0.002137282630428672, -0.03892387077212334, -0.3119499683380127, -0.08121298998594284, -0.2054770439863205, -0.00010883215873036534, -0.05419338867068291, -7.581423415103927e-05, -1.3112935448589269e-05, -0.0005658455775119364, -0.04297741502523422, -0.003792238887399435, -0.2519194185733795, -0.10278145968914032, -0.005026797764003277, -0.06949528306722641, -1.4025015830993652, -0.0027939353603869677, -0.04073360562324524, -0.11895652860403061, -0.012662369757890701, -0.08723419159650803, -0.4873300790786743, -0.249707892537117, -1.9907753085135482e-05, -0.06342875212430954, -0.0007862337515689433, -7.545663538621739e-05, -0.0036075529642403126, -0.0305730439722538, -0.24194027483463287, -2.8609820219571702e-05, -3.576278118089249e-07, -0.00022206225548870862, -0.003303548786789179, -0.004637083038687706, -0.8600553274154663, -0.0004593271005433053, -0.11592970788478851, -1.7685425281524658, -0.5302832126617432, -0.13149671256542206, -0.024230647832155228, -0.5833855867385864, -2.7308056354522705, -2.684601306915283, -1.923209309577942, -1.6317788362503052, -0.014102094806730747, -0.0006647284608334303, -0.2063857614994049, -0.0005048430757597089, -0.43524107336997986, -0.028202572837471962, -0.19922231137752533, -0.1822485774755478, -0.6925289630889893, -0.8468226194381714, -0.016475582495331764, -0.006262441165745258, -0.07915543019771576, -2.9444261599564925e-05, -0.0016827721847221255, -0.005697676911950111, -6.770858453819528e-05, -0.00012003655137959868, -0.050569746643304825, -0.00016389934171456844, -0.007245099637657404, -0.4628566801548004, -1.5023624897003174, -0.09404198825359344, -1.354865550994873, -1.4543427823809907e-05, -0.0013341344892978668, -3.576278118089249e-07, -8.583032467868179e-06, -5.960446742392378e-06, -3.0397906812140718e-05, -0.052464090287685394, -0.0028568191919475794, -0.06307715177536011, -0.000387831823900342, -0.03491115942597389, -1.3169043064117432, -0.051231153309345245, -2.1765809059143066, -2.118881940841675, -0.7241290807723999, -1.502992868423462, -0.12876290082931519, -0.5041582584381104, -0.42125198245048523, -0.00033861625706776977, -0.23766712844371796, -0.0064588370732963085, -0.9729770421981812, -0.08906661719083786, -1.141811728477478, -0.0013405631761997938, -0.020551826804876328, -0.005354112479835749, -0.005638409405946732, -0.00015114595589693636, -0.033028680831193924, -5.411955135059543e-05, -0.0002903516869992018, -0.001128632458858192, -2.261650323867798, -0.005537764634937048, -0.0002520958660170436, -0.018384883180260658, -0.00022539935889653862, -0.00026651646476238966, -7.033323527139146e-06, -0.7164438962936401, -4.291525328881107e-06, -9.417489309271332e-06, -1.6212332411669195e-05, -6.246371776796877e-05, -0.0002810560108628124, -0.0014511541230604053, -0.046726010739803314, -0.0009324969723820686, -0.23133231699466705, -0.7181617617607117, -0.03353269025683403, -1.5031687021255493, -0.21635136008262634, -0.0017135950038209558, -0.9040864706039429, -0.6817819476127625, -0.1556212604045868, -1.7612395286560059, -0.662490963935852, -0.6327917575836182, -0.0691744014620781, -0.8663374781608582, -0.030549803748726845, -0.008768625557422638, -1.7116525173187256, -1.7211384773254395, -0.024842606857419014, -0.0007270314963534474, -1.822556495666504, -0.008835624903440475, -1.0143296718597412, -0.222160205245018, -0.06138424202799797, -0.0002978596603497863, -0.0013685394078493118, -0.00019333878299221396, -0.008960985578596592, -1.3158156871795654, -7.998623186722398e-05, -4.577531944960356e-05, -0.0014424644177779555, -0.00021836756786797196, -0.0039487495087087154, -1.1086402082582936e-05, -8.583032467868179e-06, -0.05395272374153137, -0.03737466782331467, -0.07539910078048706, -0.00013815402053296566, -0.273298978805542, -0.000402250443585217, -0.08040735125541687, -0.05642909184098244, -0.1974533051252365, -0.0011986460303887725, -0.018835611641407013, -0.4371030628681183, -0.00022921319759916514, -0.8403974771499634, -0.012328254990279675, -2.074220174108632e-05], "finish_reason": "length"}], "metrics": {"energy": 277.02430554485335, "energy_per_token": 1.0821261935345834, "time": 11.561561, "time_per_token": 0.04516234765625}}
{"outputs": [{"text": "text_df = dataframe[[text_column]].copy()\n    # removing stopwords and punctuation\n    text_df['text'] = text_df['text'].str.lower()\n    text_df['text'] = text_df['text'].str.replace('[^a-z\\d\\s]', '', regex=True)\n\n    # remove extra spaces\n    text_df['text'] = text_df['text'].str.replace('\\s+', ' ', regex=True)\n\n    # remove extra newline\n    text_df['text'] = text_df['text'].str.replace('\\n', ' ', regex=True)\n\n    # removing stopwords\n    text_df['text'] = text_df['text'].str.replace('[^a-z]', '', regex=True)\n\n    # remove stopwords from stopwords list\n    text_df['text'] = text_df['text'].str.replace('(' + '|'.join(STOPWORDS) + ')', '', regex=True)\n\n", "tokens": ["text", "_", "df", " =", " data", "frame", "[[", "text", "_", "column", "]]", ".", "copy", "()", "\n", "    ", "#", " removing", " stop", "words", " and", " punct", "uation", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "\\", "d", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " remove", " extra", " spaces", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " remove", " extra", " new", "line", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " removing", " stop", "words", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " remove", " stop", "words", " from", " stop", "words", " list", "\n", "    ", "text", "_", "df", "['", "text", "']", " =", " text", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " '", ")'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n"], "logprobs": [-3.4806036949157715, -1.1034095287322998, -2.29813289642334, -0.008991112001240253, -0.31859850883483887, -8.797258487902582e-05, -1.3863511085510254, -0.0017407278064638376, -1.9073468138230965e-06, -9.775113539944869e-06, -0.0044582500122487545, -1.4458093643188477, -0.15606172382831573, -0.04417174682021141, -0.21360427141189575, -0.41730815172195435, -1.7458984851837158, -4.013172149658203, -0.7159255743026733, -0.12327992916107178, -2.0803258419036865, -1.1810275316238403, -0.27386054396629333, -0.509821891784668, -0.006960548926144838, -0.38640114665031433, -0.03539661318063736, -0.011579092592000961, -1.8785133361816406, -0.5887100100517273, -0.1849837750196457, -0.020227814093232155, -0.0689706951379776, -0.001148755894973874, -0.0002874914789572358, -0.10452347248792648, -7.009260298218578e-05, -0.0013019903562963009, -0.01338790263980627, -1.0412847995758057, -0.0005159238935448229, -0.8044511079788208, -0.022314300760626793, -0.5760563015937805, -0.018288439139723778, -0.13067850470542908, -0.004681341350078583, -0.0010702840518206358, -0.08985213190317154, -0.011962460353970528, -0.011574143543839455, -0.15857553482055664, -0.05548042058944702, -0.00013445904187392443, -5.900685573578812e-05, -0.02239450253546238, -9.65590606938349e-06, -0.0013866343069821596, -0.002042114268988371, -0.21966786682605743, -0.0002119316632160917, -0.053794924169778824, -0.9713589549064636, -0.18862919509410858, -0.34833383560180664, -0.07625716924667358, -0.00010513706365600228, -0.0002479245886206627, -2.814716339111328, -1.8785107135772705, -0.03518947586417198, -0.029559237882494926, -0.1080828383564949, -0.0019212374463677406, -0.00010907054820563644, -0.8980081081390381, -0.0001679517881711945, -0.016720393672585487, -0.0033767367713153362, -0.003190429415553808, -0.0016477829776704311, -0.05205169692635536, -2.417978048324585, -0.0006584145012311637, -0.1969919353723526, -2.634277820587158, -3.9827752113342285, -0.5205098986625671, -0.2872093915939331, -0.00041321321623399854, -0.02507840469479561, -0.0017985610757023096, -0.00041714549297466874, -0.03210972249507904, -0.002141089178621769, -0.004635422024875879, -0.015055360272526741, -0.04987921193242073, -2.47952248173533e-05, -1.8358061424805783e-05, -0.00589074706658721, -1.2874520507466514e-05, -0.00013541258522309363, -0.0014731755945831537, -0.06839607656002045, -3.0636318115284666e-05, -1.122332215309143, -0.34929904341697693, -0.505093514919281, -0.004303599242120981, -0.3274196684360504, -6.854299135738984e-05, -0.00948388036340475, -0.0014447261346504092, -0.9680603742599487, -0.0031808041967451572, -0.0006221981020644307, -0.009630647487938404, -0.0019512200960889459, -0.08817090839147568, -0.3128799498081207, -0.00033301531220786273, -0.16837787628173828, -1.0086495876312256, -2.358288288116455, -2.6094424724578857, -2.051913261413574, -1.1630592346191406, -0.0004596845537889749, -0.01650712452828884, -0.0010170531459152699, -0.00033682872890494764, -0.014492369256913662, -0.00029702542815357447, -0.0007497837068513036, -0.04487979784607887, -0.013914953917264938, -2.002696055569686e-05, -4.887569048150908e-06, -0.0029987390153110027, -1.490105023549404e-05, -0.00036244976217858493, -0.0010181248653680086, -0.027033211663365364, -0.00010334911348763853, -0.045238763093948364, -0.09947557002305984, -0.14980749785900116, -0.043293341994285583, -0.797033965587616, -0.0032145516015589237, -0.7613443732261658, -0.027512995526194572, -0.02498830109834671, -0.0004887578543275595, -0.0001754606782924384, -0.0222521610558033, -0.0003579214389901608, -0.0020053531043231487, -0.1058446392416954, -0.00035494225448928773, -0.14134211838245392, -1.6308894157409668, -0.7257386445999146, -0.058649688959121704, -0.3847644627094269, -0.0025517542380839586, -0.8612527251243591, -0.010225526988506317, -0.00699416920542717, -0.08076983690261841, -0.06349363923072815, -0.03549809381365776, -0.016589906066656113, -0.0871642678976059, -8.749579137656838e-05, -2.1934269170742482e-05, -0.00990676786750555, -1.847726889536716e-05, -0.0006080209277570248, -0.0036547074560076, -0.573142409324646, -0.0002479245886206627, -0.139858216047287, -0.2717137038707733, -2.3381690979003906, -0.625856339931488, -0.05796797573566437, -0.0023430532310158014, -0.001208409434184432, -1.3919665813446045, -0.018979374319314957, -0.0023730231914669275, -0.746570885181427, -0.00011955977242905647, -0.002203657291829586, -0.0009058186551555991, -0.017940040677785873, -0.0010259846458211541, -0.02727394551038742, -1.193962574005127, -0.00037889453233219683, -0.5588749051094055, -2.0645217895507812, -1.331174373626709, -0.07211730629205704, -1.692255973815918, -3.914008617401123, -0.4255622625350952, -0.2507602572441101, -0.07109925895929337, -0.0049149408005177975, -0.5107241272926331, -0.003024529432877898, -0.0031657125800848007, -0.10563056915998459, -0.016122445464134216, -0.015450309962034225, -0.027128003537654877, -0.08439444750547409, -9.893881360767409e-05, -1.7165990357170813e-05, -0.007915557362139225, -7.64102369430475e-05, -0.0009332115878351033, -0.0038872407749295235, -0.5661205649375916, -0.0003331344632897526, -0.03721756115555763, -0.40523549914360046, -1.5284571647644043, -0.12411557883024216, -0.11522094160318375, -0.007239537313580513, -0.0015135272406041622, -0.00018487652414478362, -0.0007267932523973286, -0.015035866759717464, -0.09134416282176971, -8.344646857949556e-07, -2.4199192921514623e-05, -5.960462772236497e-07, -1.0371154530730564e-05, -0.008102642372250557, -0.0035100297536700964, -0.004177653230726719, -0.019535403698682785, -0.005186436232179403, -0.26811090111732483, -0.0001408954558428377, -0.007983441464602947, -0.0011636398267000914, -0.004265733994543552, -0.0008736607851460576, -0.005063803866505623, -0.07579071074724197], "finish_reason": "length"}], "metrics": {"energy": 275.82612631511694, "energy_per_token": 1.0774458059184255, "time": 11.563776, "time_per_token": 0.045171}}
{"outputs": [{"text": "# Step 1: Remove stopwords\n    clean_df = dataframe.copy()\n    clean_df[text_column] = clean_df[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n\n    # Step 2: Remove numbers and punctuation\n    clean_df[text_column] = clean_df[text_column].str.replace('\\d', '').str.replace('[^A-Za-z]', ' ')\n\n    # Step 3: Count words and return\n    count_vectorizer = CountVectorizer(stop_words='english', ngram_range=(1, 2))\n    word_count = count_vectorizer.fit_transform(clean_df[text_column])\n    word_df = pd.DataFrame(word_count.todense(), columns=count_vectorizer.get_feature_names())\n    return word_df", "tokens": ["#", " Step", " ", "1", ":", " Remove", " stop", "words", "\n", "    ", "clean", "_", "df", " =", " data", "frame", ".", "copy", "()", "\n", "    ", "clean", "_", "df", "[", "text", "_", "column", "]", " =", " clean", "_", "df", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Remove", " numbers", " and", " punct", "uation", "\n", "    ", "clean", "_", "df", "[", "text", "_", "column", "]", " =", " clean", "_", "df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "d", "'", ",", " '", "')", ".", "str", ".", "replace", "('", "[", "^", "A", "-", "Z", "a", "-", "z", "]", "'", ",", " '", " '", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Count", " words", " and", " return", "\n", "    ", "count", "_", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " n", "gram", "_", "range", "=(", "1", ",", " ", "2", "))", "\n", "    ", "word", "_", "count", " =", " count", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "clean", "_", "df", "[", "text", "_", "column", "])", "\n", "    ", "word", "_", "df", " =", " pd", ".", "DataFrame", "(", "word", "_", "count", ".", "t", "od", "ense", "()", ",", " columns", "=", "count", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "    ", "return", " word", "_", "df", "\n", "\n", "if"], "logprobs": [-0.6648897528648376, -2.616781234741211, -0.0409565307199955, -0.061004895716905594, -0.10153432190418243, -0.869257390499115, -0.46610844135284424, -0.057326655834913254, -1.4927778244018555, -0.010424095205962658, -3.7037386894226074, -0.09161929041147232, -2.584765911102295, -0.010482844896614552, -0.15914392471313477, -6.747018051100895e-05, -0.387096643447876, -0.2535979747772217, -0.0857759416103363, -0.036672886461019516, -0.04464532062411308, -0.6724465489387512, -0.001069569610990584, -0.01702655851840973, -0.08409037441015244, -0.00978801865130663, -3.349725011503324e-05, -2.2172682292875834e-05, -0.0028168782591819763, -0.010647512041032314, -0.10032067447900772, -0.00019810620869975537, -0.0002115741081070155, -0.009719784371554852, -0.0007325111655518413, -7.629365427419543e-06, -3.3378546504536644e-06, -0.0033030735794454813, -0.017120545729994774, -0.7174494862556458, -0.02668691799044609, -0.1292971670627594, -0.06773122400045395, -0.00036483307485468686, -0.35956063866615295, -0.000785161682870239, -0.0004574206250254065, -9.655486064730212e-05, -0.31288501620292664, -0.5133845806121826, -0.03647279739379883, -0.00022885564249008894, -0.0016709902556613088, -0.7079582810401917, -0.002358514117076993, -0.1288674920797348, -0.13233326375484467, -0.06541795283555984, -0.03165789321064949, -0.24123753607273102, -0.0004907834227196872, -0.008332369849085808, -5.960462772236497e-07, -1.645074735279195e-05, -2.7418097943154862e-06, -3.2305197237292305e-05, -0.015348769724369049, -0.006608891300857067, -0.12976478040218353, -0.00046719127567484975, -0.00649211835116148, -0.017451424151659012, -0.0010781434830278158, -0.0042085181921720505, -0.005205766763538122, -0.43241146206855774, -0.19417281448841095, -0.8670868277549744, -0.08767437934875488, -0.06477189809083939, -0.13414864242076874, -0.001302942750044167, -0.1712838113307953, -0.0020341435447335243, -0.004156759474426508, -0.031026054173707962, -0.00044860312482342124, -1.3232143828645349e-05, -3.099436753473128e-06, -0.0004891153075732291, -0.005976306740194559, -0.002426419872790575, -3.5523738915799186e-05, -4.7801782784517854e-05, -0.000935950840357691, -0.0002150304353563115, -1.4305104514278355e-06, -2.7418097943154862e-06, -0.0009687021956779063, -0.004837831947952509, -2.684325933456421, -0.00016616393986623734, -0.025141529738903046, -0.7996309995651245, -1.6050703525543213, -0.05251951515674591, -2.2290401458740234, -9.011816291604191e-05, -0.42934656143188477, -0.7646395564079285, -0.3111146092414856, -0.018489977344870567, -0.00011467275908216834, -0.002806536154821515, -0.10435336828231812, -0.35477936267852783, -1.267274260520935, -1.676987648010254, -1.9311717551317997e-05, -0.0013805630151182413, -0.00024816294899210334, -2.9802276912960224e-06, -1.2755313036905136e-05, -1.6224528551101685, -0.0004686211177613586, -5.924526340095326e-05, -0.0016890796832740307, -1.0738554000854492, -0.008771461434662342, -0.2133423537015915, -0.0507698692381382, -0.0004096384218428284, -0.00722178490832448, -0.02349279820919037, -0.0007175016799010336, -0.002262296387925744, -0.0032690914813429117, -2.4975662231445312, -0.9633308053016663, -2.148103713989258, -2.373551368713379, -3.4078943729400635, -0.005737977102398872, -2.3143506050109863, -0.23463749885559082, -0.525373637676239, -0.17074106633663177, -0.0010183630511164665, -0.00014244495832826942, -9.059865078597795e-06, -2.1815061700181104e-05, -0.7836155891418457, -0.6835985779762268, -0.00015233787416946143, -8.248942322097719e-05, -0.08291427791118622, -0.0039107524789869785, -1.0728830375228426e-06, -1.5429960489273071, -0.000392598332837224, -2.4713659286499023, -0.014174849726259708, -1.549708758830093e-05, -0.0001928620331455022, -0.0065713501535356045, -0.13474057614803314, -0.0001436368766007945, -0.029062485322356224, -0.7405468225479126, -0.20878206193447113, -0.023294828832149506, -0.03725752979516983, -1.6707924604415894, -0.004657966550439596, -1.9619677066802979, -0.28966861963272095, -0.04474426805973053, -1.2159273865108844e-05, -8.106198947643861e-06, -3.576214658096433e-05, -4.0649541915627196e-05, -0.0032752701081335545, -0.008561218157410622, -6.270212179515511e-05, -0.0012446045875549316, -0.005572499241679907, -1.1205610462639015e-05, -2.861018856492592e-06, -0.008958976715803146, -0.001053969725035131, -3.099393507000059e-05, -1.5497195136049413e-06, -0.045878879725933075, -0.1386030614376068, -0.1950036883354187, -1.7835140228271484, -0.007665504235774279, -2.0296273231506348, -0.003250911831855774, -0.005088355392217636, -5.5549986427649856e-05, -0.007103071082383394, -0.016404636204242706, -0.35585376620292664, -0.00012444675667211413, -0.00010334911348763853, -0.0034477810841053724, -1.7587816715240479, -0.00017176583060063422, -0.010557396337389946, -0.023050457239151, -0.014566270634531975, -0.2846677601337433, -0.03812484070658684, -0.015383400022983551, -1.5735502529423684e-05, -4.529942543740617e-06, -3.516612196108326e-05, -5.2689116273541003e-05, -0.026756558567285538, -4.768370445162873e-07, -0.00011145447206217796, 0.0, -0.0007918321643956006, -0.31810158491134644, -0.019971825182437897, -0.38900047540664673, -0.23703868687152863, -0.04842618107795715, -2.5152843591058627e-05, -0.0024234468583017588, -1.128232717514038, -0.010270247235894203, -0.7571055293083191], "finish_reason": "stop"}], "metrics": {"energy": 249.84392814540877, "energy_per_token": 1.067709094638499, "time": 10.52205, "time_per_token": 0.04496602564102564}}
{"outputs": [{"text": "# Remove stopwords using regex\n    regex = re.compile(r'\\b(' + '|'.join(STOPWORDS) + r')\\b')\n    text = regex.sub(r'', dataframe[text_column])\n\n    # Remove numbers using regex\n    regex = re.compile(r'[0-9]+')\n    text = regex.sub(r'', text)\n\n    # Replace any other special characters with a space\n    text = re.sub(r'[^\\w\\s]', ' ', text)\n\n    # Tokenize the text into a list of words\n    tokens = [word.strip() for word in text.split()]\n\n    # Apply CountVectorizer\n    vectorizer = CountVectorizer(max_features=None)\n    X = vectorizer.fit_transform(tokens)\n    result = pd.DataFrame(X.todense(), columns=vectorizer.get_feature_names())\n    return result", "tokens": ["#", " Remove", " stop", "words", " using", " regex", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "')", "\n", "    ", "text", " =", " regex", ".", "sub", "(", "r", "''", ",", " data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Remove", " numbers", " using", " regex", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "r", "'", "[", "0", "-", "9", "]+", "')", "\n", "    ", "text", " =", " regex", ".", "sub", "(", "r", "''", ",", " text", ")", "\n", "\n", "    ", "#", " Replace", " any", " other", " special", " characters", " with", " a", " space", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n", "\n", "    ", "#", " Token", "ize", " the", " text", " into", " a", " list", " of", " words", "\n", "    ", "tokens", " =", " [", "word", ".", "strip", "()", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "\n", "    ", "#", " Apply", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "max", "_", "features", "=", "None", ")", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "tokens", ")", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "X", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "    ", "return", " result"], "logprobs": [-0.6648897528648376, -1.4965039491653442, -0.5097635388374329, -0.04419375956058502, -3.4642348289489746, -1.3725638389587402, -0.3860305845737457, -0.004412676207721233, -2.647946834564209, -0.2765137553215027, -0.13066887855529785, -3.85038583772257e-05, -0.005093692801892757, -1.2581275701522827, -0.1364733874797821, -0.21073250472545624, -0.00497543765231967, -0.6589862704277039, -0.0108872689306736, -0.3234066963195801, -0.00014840454969089478, -0.00010942813969450071, -6.472854875028133e-05, -0.00021586472576018423, -0.010237091220915318, -0.07885140925645828, -8.344646857949556e-07, -1.3232143828645349e-05, -3.576278118089249e-07, -2.7894584491150454e-05, -0.007658170070499182, -0.001642784452997148, -0.0073895929381251335, -0.03221026808023453, -0.0007146426942199469, -0.16336308419704437, -0.009266464039683342, -0.10711394250392914, -1.9164905548095703, -0.4311214089393616, -1.2681394815444946, -0.00027736154152080417, -0.0009109399979934096, -0.7359810471534729, -0.08353665471076965, -0.11095040291547775, -0.0001037067049765028, -0.043404869735240936, -2.2053474822314456e-05, -0.03684421628713608, -0.0005410637822933495, -5.245195097813848e-06, -9.536697689327411e-06, -0.6145439743995667, -0.05130499601364136, -0.3311258852481842, -0.0006111184484325349, -0.01243610680103302, -0.5733762979507446, -0.2926909029483795, -1.075709342956543, -0.01844211295247078, -0.02051457203924656, -0.0004167880106251687, -0.4315047562122345, -0.04489951580762863, -0.0008976006065495312, -0.00021634146105498075, -0.00020549570035655051, -0.05147870257496834, -0.002230776706710458, -2.3230679035186768, -0.6019451022148132, -0.039204973727464676, -2.3007127310847864e-05, -0.00014697425649501383, -0.6820612549781799, -0.025269977748394012, -0.00243200920522213, -0.0010182439582422376, -0.02875361405313015, -0.005129747558385134, -0.0026065681595355272, -7.629365427419543e-06, -1.597391747054644e-05, -0.2910362184047699, -0.0016552807064726949, -0.030866097658872604, -1.7046782886609435e-05, -0.0028342336881905794, -0.0023683852050453424, -0.0035505369305610657, -0.00656767887994647, -0.00026770823751576245, -0.0025981261860579252, -2.8060081005096436, -3.7766518592834473, -2.731459856033325, -1.442864179611206, -0.10974258184432983, -0.3361648619174957, -0.9801813364028931, -0.298973947763443, -0.1447022706270218, -0.00033968876232393086, -0.12486910074949265, -0.0035949621815234423, -0.4833839237689972, -0.0007558587822131813, -0.002686940599232912, -0.020579153671860695, -0.0016825341153889894, -0.02978605590760708, -0.008303405717015266, -0.6899501085281372, -0.004996432922780514, -0.02544873021543026, -0.0011343479854986072, -0.12710222601890564, -0.0066439444199204445, -3.302042750874534e-05, -0.7292435169219971, -0.001143040368333459, -6.341733387671411e-05, -0.007791603449732065, -0.004533845465630293, -0.013902257196605206, -0.048632070422172546, -0.000530936405993998, -0.03098745457828045, -2.1788082122802734, -0.032952673733234406, -0.5529439449310303, -0.10583831369876862, -0.532531201839447, -2.231548547744751, -0.0346779003739357, -0.012450470589101315, -0.018602900207042694, -0.16336359083652496, -0.0003711488388944417, -2.4491169452667236, -0.0020487764850258827, -1.7289108037948608, -0.6402867436408997, -0.9720032215118408, -2.424539804458618, -0.0077077364549040794, -0.045965757220983505, -0.00047231485950760543, -0.00020632999076042324, -0.02173205278813839, -0.0005333193112164736, -0.12956488132476807, -0.14897209405899048, -0.04947664216160774, -0.0034008543007075787, -0.028114836663007736, -0.0005482124397531152, -0.01943369209766388, -4.083399295806885, -0.7000849843025208, -0.016951197758316994, -0.010614368133246899, -2.3191707134246826, -0.0014721043407917023, -0.540064811706543, -0.007808399386703968, -0.0006563892820850015, -0.0002653246629051864, -1.3351351299206726e-05, -0.00013100242358632386, -0.6701313853263855, -2.5158255100250244, -4.339123915997334e-05, -0.16229501366615295, -0.008749245665967464, -1.443771243095398, -1.0812464952468872, -0.023249872028827667, -0.018419994041323662, -3.7525665760040283, -0.017011674121022224, -0.0032127690501511097, -1.3470558769768104e-05, -1.3351351299206726e-05, -0.009118815883994102, -0.0003583981015253812, -8.105902816168964e-05, -0.0221833735704422, -0.003939844202250242, -0.0023999004624783993, -0.02253752388060093, -1.2822567224502563, -1.801727533340454, -0.027361754328012466, -0.009960117749869823, -0.004150230437517166, -0.006157238502055407, -0.017695879563689232, -0.35439828038215637, -0.004043261986225843, -0.8929779529571533, -8.248942322097719e-05, -0.0038669349160045385, -0.02138928696513176, -0.015564280562102795, -0.2413518726825714, -0.06738448143005371, -0.00736462464556098, -0.00015698630886618048, -1.7881233361549675e-05, -0.004790851846337318, -2.0265558760002023e-06, -0.0001292145170737058, -3.814689989667386e-06, -0.0020550815388560295, -0.17403438687324524, -0.021825948730111122, -0.9157818555831909, -0.16734863817691803, -0.023169271647930145], "finish_reason": "stop"}], "metrics": {"energy": 261.21673595237723, "energy_per_token": 1.176651963749447, "time": 10.0968, "time_per_token": 0.04548108108108108}}
{"outputs": [{"text": "# Apply preprocessing to each row of the text column in the DataFrame\n    dataframe[text_column] = dataframe[text_column].apply(preprocessing_func)\n\n    # Convert processed text to a vector using CountVectorizer\n    vectorizer = CountVectorizer(stop_words='english',\n                                 token_pattern=r'\\b\\w+\\b',\n                                 tokenizer=tokenizer_func,\n                                 lowercase=True)\n\n    vectorizer.fit(dataframe[text_column])\n    vectorizer.transform(dataframe[text_column])\n\n    # Return the result as a DataFrame\n    return vectorizer.fit_transform(dataframe[text_column]).toarray().reshape(1, -1)", "tokens": ["#", " Apply", " pre", "processing", " to", " each", " row", " of", " the", " text", " column", " in", " the", " Data", "Frame", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "processing", "_", "func", ")", "\n", "\n", "    ", "#", " Convert", " processed", " text", " to", " a", " vector", " using", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", "\n", "                ", "                ", " token", "_", "pattern", "=", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", "\n", "                ", "                ", " token", "izer", "=", "token", "izer", "_", "func", ",", "\n", "                ", "                ", " lower", "case", "=", "True", ")", "\n", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "vector", "izer", ".", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Return", " the", " result", " as", " a", " Data", "Frame", "\n", "    ", "return", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", ".", "resh", "ape", "(", "1", ",", " -", "1", ")"], "logprobs": [-0.6648897528648376, -3.962916374206543, -2.1885344982147217, -0.055071186274290085, -1.426093339920044, -1.7829456329345703, -0.6349450349807739, -1.5131134986877441, -0.33075299859046936, -1.0731369256973267, -0.14162668585777283, -3.2240986824035645, -0.20152130722999573, -0.4833580553531647, -0.0020705468486994505, -0.15861713886260986, -0.006449480075389147, -1.4404003620147705, -0.01369708776473999, -0.1394955813884735, -0.011488707736134529, -2.9802276912960224e-06, -1.966933996300213e-05, -0.0045749046839773655, -0.008186593651771545, -0.07262882590293884, -0.00016175392374861985, -0.009972038678824902, -0.0003046525234822184, -3.6954811548639555e-06, -2.3841830625315197e-06, -0.0022259000688791275, -0.026677865535020828, -0.3342944383621216, -0.06606023758649826, -1.6699023246765137, -1.2663545608520508, -0.8878016471862793, -0.6426973342895508, -0.026275133714079857, -0.020235758274793625, -0.273226797580719, -0.004935344215482473, -0.06206800416111946, -1.2960699796676636, -2.7860169410705566, -0.13084785640239716, -0.9128854870796204, -1.191349983215332, -1.340575098991394, -0.6232556700706482, -0.5810835957527161, -0.018757227808237076, -0.0043472787365317345, -0.15022385120391846, -0.0019445574143901467, -0.426746129989624, -0.02450113743543625, -0.0010605193674564362, -0.0005190217634662986, -7.867782187531702e-06, -2.1457441107486375e-05, -0.7677420973777771, -0.30188825726509094, -0.0014317509485408664, -5.876845170860179e-05, -0.5249242186546326, -0.004794766660779715, -2.145764938177308e-06, -0.6522297859191895, -0.0006027788622304797, -2.543506145477295, -0.003715636907145381, -0.01135553140193224, -1.285407304763794, -0.4946422278881073, -0.04814084246754646, -0.20227189362049103, -0.20687587559223175, -0.8140422105789185, -0.20048320293426514, -0.04669790714979172, -0.07945826649665833, -1.0244193077087402, -0.0025052609853446484, -0.23527555167675018, -0.01933220587670803, -0.4373965263366699, -0.0005360596696846187, -0.00013386306818574667, -3.6612298488616943, -0.12536127865314484, -0.006003561429679394, -1.635576844215393, -0.5661168098449707, -0.7279616594314575, -0.04454635828733444, -0.820671796798706, -0.14384132623672485, -0.0011391110019758344, -0.0012215065071359277, -1.6341465711593628, -0.0008890252211131155, -0.0046300822868943214, -0.25697651505470276, -0.37540459632873535, -0.026368139311671257, -1.3884092569351196, -0.0004980515805073082, -1.8496863842010498, -1.7764273881912231, -0.054450925439596176, -0.016603857278823853, -0.12499503791332245, -0.014885427430272102, -4.9828242481453344e-05, -0.014224446378648281, -0.0005665604257956147, -1.2278481335670222e-05, -2.145764938177308e-06, -0.05117814987897873, -0.04678334668278694, -0.4976857900619507, -0.6437081098556519, -1.124985694885254, -0.2654349207878113, -0.3816216289997101, -0.023222967982292175, -0.00801702681928873, -7.045020902296528e-05, -0.0020760190673172474, -9.440929716220126e-05, -5.483612312673358e-06, -1.6689286894688848e-06, -0.0048317816108465195, -0.17086577415466309, -0.3448866903781891, -0.014410825446248055, -0.8948946595191956, -1.5414960384368896, -0.7341007590293884, -2.553908586502075, -0.8752946257591248, -0.03101946786046028, -0.604977548122406, -0.0036371287424117327, -0.21260331571102142, -0.0011813811725005507, -0.2527872622013092, -1.8914170265197754, -0.009090936742722988, -0.04490305110812187, -1.1260802745819092, -0.25797539949417114, -0.0003181189822498709, -0.0009732277248986065, -0.004377188626676798, -1.9192511899746023e-05, -0.0035335503052920103, -0.00011014331539627165, -5.364403477869928e-06, -9.536738616588991e-07, -0.004778631962835789, -0.5208425521850586, -0.0999288484454155, -0.3163347542285919, -0.012324251234531403, -1.8987197875976562, -1.2757775783538818, -2.145764938177308e-06, -0.9710974097251892, -1.3504657745361328, -0.0057581267319619656, -0.0672232136130333, -0.00010239553375868127, -0.17678841948509216], "finish_reason": "stop"}], "metrics": {"energy": 189.7639503822326, "energy_per_token": 1.0782042635354125, "time": 7.7892203, "time_per_token": 0.044256933522727276}}
{"outputs": [{"text": "# Create a vectorizer object\n    vectorizer = CountVectorizer(stop_words='english', strip_accents='ascii')\n\n    # Create a DataFrame with each word as a column\n    counts = pd.DataFrame(\n        vectorizer.fit_transform(dataframe[text_column]).toarray(),\n        columns=vectorizer.get_feature_names()\n    )\n    # Return the counts DataFrame with each word as a column and their count as rows\n    return counts", "tokens": ["#", " Create", " a", " vector", "izer", " object", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " strip", "_", "acc", "ents", "='", "ascii", "')", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " each", " word", " as", " a", " column", "\n", "    ", "counts", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", ",", "\n", "        ", "columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", ")", "\n", "    ", "#", " Return", " the", " counts", " Data", "Frame", " with", " each", " word", " as", " a", " column", " and", " their", " count", " as", " rows", "\n", "    ", "return", " counts"], "logprobs": [-0.6648897528648376, -2.2491464614868164, -0.3355608880519867, -2.2279653549194336, -0.0316108874976635, -0.6562469005584717, -0.8825879693031311, -0.0012666305992752314, -0.15139126777648926, -0.005725057329982519, -0.00269431178458035, -0.0013140147784724832, -7.867782187531702e-06, -2.3841574147809297e-05, -0.7905362844467163, -0.2781095802783966, -0.002147155813872814, -6.580135959666222e-05, -1.0003207921981812, -0.009216737933456898, -4.410734163684538e-06, -0.546474814414978, -0.0013490156270563602, -2.537426471710205, -0.0006398299592547119, -0.006289095152169466, -0.000494715350214392, -0.8070685267448425, -0.6272761225700378, -1.0502641201019287, -0.013711315579712391, -0.2242753952741623, -0.000568228424526751, -0.04745419695973396, -2.511687755584717, -0.33808618783950806, -3.4980199337005615, -0.0025779129937291145, -1.0479724407196045, -1.6290510892868042, -0.10533148795366287, -1.2066872119903564, -0.06429211795330048, -0.0517711266875267, -2.0032007694244385, -0.0012473430251702666, -4.042581558227539, -0.1874092072248459, -0.2714070677757263, -0.005053010769188404, -0.011966230347752571, -0.04702335223555565, -2.9222412109375, -0.011407507583498955, -0.1388319730758667, -0.0003723404952324927, -0.000327652640407905, -0.009252290241420269, -0.004289711359888315, -5.900685573578812e-05, -0.013988779857754707, -0.08610696345567703, -3.194758028257638e-05, -0.02387581765651703, -0.0019325405592098832, -1.4066597032069694e-05, -1.5258672647178173e-05, -0.39360108971595764, -0.046271178871393204, -0.3061160147190094, -0.004340750630944967, -0.031007448211312294, -0.03235350549221039, -0.058681391179561615, -0.0014613912208005786, -0.45759379863739014, -0.3654417097568512, -0.02290879189968109, -0.00010513706365600228, -1.7046782886609435e-05, -0.0012315078638494015, -4.768370445162873e-07, -0.00011669908417388797, -3.576278118089249e-07, -0.002176299225538969, -0.2618705928325653, -0.6804829835891724, -0.011827933602035046, -0.0008908117306418717, -0.02772277221083641, -1.8700562715530396, -1.4449214935302734, -2.304673671722412, -0.31111907958984375, -1.357856273651123, -0.5099102854728699, -0.003666466102004051, -2.9422314167022705, -1.1006619930267334, -0.037978410720825195, -0.3224124014377594, -0.03572196140885353, -0.019068384543061256, -1.8032363653182983, -0.06743796914815903, -0.04023241251707077, -0.007971497252583504, -0.09148462116718292, -0.06444279104471207, -0.006854354403913021, -0.011992850340902805, -0.009936275891959667], "finish_reason": "stop"}], "metrics": {"energy": 136.23244764900213, "energy_per_token": 1.2163611397232332, "time": 4.937935, "time_per_token": 0.04408870535714286}}
{"outputs": [{"text": "# Convert the text column to a list\n    text_list = dataframe[text_column].values.tolist()\n\n    # Remove stopwords, numbers, and punctuation from each text in the list\n    preprocessed_texts = [\n        re.sub(r'\\w+', lambda x: x[0] if x[0] not in STOPWORDS else '', text).lower()\n        for text in text_list\n    ]\n\n    # Convert each remaining text to a vector using the CountVectorizer\n    cv = CountVectorizer(min_df=2)\n    vectorized_texts = cv.fit_transform(preprocessed_texts).todense()\n\n    # Convert vectorized_texts to a dataframe\n    df_preprocessed = pd.DataFrame(vectorized_texts,\n                                   columns=[\n                                       col for col in cv.get_feature_names() if col not in STOPWORDS\n                                   ])\n    return df_preprocessed", "tokens": ["#", " Convert", " the", " text", " column", " to", " a", " list", "\n", "    ", "text", "_", "list", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "values", ".", "tol", "ist", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", " from", " each", " text", " in", " the", " list", "\n", "    ", "pre", "processed", "_", "text", "s", " =", " [", "\n", "        ", "re", ".", "sub", "(", "r", "'\\", "w", "+'", ",", " lambda", " x", ":", " x", "[", "0", "]", " if", " x", "[", "0", "]", " not", " in", " ST", "OP", "W", "OR", "DS", " else", " ''", ",", " text", ")", ".", "lower", "()", "\n", "        ", "for", " text", " in", " text", "_", "list", "\n", "    ", "]", "\n", "\n", "    ", "#", " Convert", " each", " remaining", " text", " to", " a", " vector", " using", " the", " Count", "Vector", "izer", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "min", "_", "df", "=", "2", ")", "\n", "    ", "vector", "ized", "_", "text", "s", " =", " cv", ".", "fit", "_", "transform", "(", "pre", "processed", "_", "text", "s", ")", ".", "t", "od", "ense", "()", "\n", "\n", "    ", "#", " Convert", " vector", "ized", "_", "text", "s", " to", " a", " data", "frame", "\n", "    ", "df", "_", "pre", "processed", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", "s", ",", "\n", "                ", "                ", "   ", "columns", "=[", "\n", "                ", "                ", "       ", "col", " for", " col", " in", " cv", ".", "get", "_", "feature", "_", "names", "()", " if", " col", " not", " in", " ST", "OP", "W", "OR", "DS", "\n", "                ", "                ", "   ", "])", "\n", "    ", "return", " df", "_", "pre", "processed", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6648897528648376, -3.4518775939941406, -0.8836314082145691, -0.9698485136032104, -0.5317618250846863, -0.2543995678424835, -0.21807357668876648, -0.32847166061401367, -1.324486255645752, -0.0020157035905867815, -0.38621702790260315, -0.3458009660243988, -0.06613756716251373, -0.0029671236407011747, -0.1775522083044052, -1.7881233361549675e-05, -0.03199854493141174, -0.0004544417606666684, -3.8980677345534787e-05, -4.0531076592742465e-06, -0.00037079135654494166, -0.010505729354918003, -2.901996612548828, -0.06307469308376312, -0.14252324402332306, -5.960462772236497e-07, -0.0010240792762488127, -0.007101769093424082, -0.25239306688308716, -0.0005871717585250735, -0.03188839554786682, -0.7774889469146729, -0.5667170286178589, -0.037400390952825546, -1.4878761768341064, -0.20180076360702515, -0.07299426198005676, -0.03791195526719093, -0.01754876784980297, -0.027768338099122047, -0.6142839193344116, -1.4885127544403076, -0.7438513040542603, -2.0294060707092285, -0.018121397122740746, -0.062145527452230453, -0.09995052963495255, -0.0016233850037679076, -2.7388176918029785, -0.09200666099786758, -0.02885994128882885, -0.1691867709159851, -0.8737108707427979, -0.002989230677485466, -0.7103728652000427, -2.488874673843384, -0.0028064174111932516, -0.2531784474849701, -0.00026663561584427953, -0.008684367872774601, -0.22185297310352325, -0.044517625123262405, -1.0751478672027588, -2.4655086994171143, -0.5501545667648315, -0.0005617947317659855, -1.4186725616455078, -0.7765456438064575, -0.000929400441236794, -0.4278552532196045, -1.424111247062683, -0.005523775238543749, -0.023433761671185493, -1.4558095932006836, -0.08598161488771439, -0.19724956154823303, -0.01658146269619465, -0.0026418804191052914, -0.3627317547798157, -6.603976362384856e-05, -0.012631647288799286, -3.576278118089249e-07, -2.3841830625315197e-06, -9.536738616588991e-07, -2.90866428258596e-05, -0.1243990957736969, -0.09242073446512222, -0.0017489389283582568, -0.7441619634628296, -0.24416621029376984, -1.6942803859710693, -0.9692838191986084, -0.0008300673216581345, -0.5383428931236267, -0.0037062542978674173, -0.0053550610318779945, -0.0010742137674242258, -0.0015633992152288556, -0.004314637742936611, -3.40932747349143e-05, -1.2755313036905136e-05, -0.16418270766735077, -0.017381953075528145, -0.00014423283573705703, -0.000742398202419281, -0.02093714103102684, -0.0009090343955904245, -0.0302166398614645, -1.5904866456985474, -2.4201302528381348, -3.3217873573303223, -0.33224567770957947, -0.6765891909599304, -0.265922874212265, -0.9291963577270508, -0.5464199781417847, -1.1854493618011475, -0.1295763999223709, -0.013000373728573322, -0.002679450437426567, -0.44564396142959595, -0.0010621865512803197, -2.8760056495666504, -0.006314801052212715, -0.00011669908417388797, -6.556489552167477e-06, -1.883488948806189e-05, -1.0259795188903809, -2.9101269245147705, -1.168244216387393e-05, -0.17800995707511902, -0.0031929248943924904, -2.7746148109436035, -0.7652013301849365, -0.08234409987926483, -0.020193001255393028, -1.1269514560699463, -0.30176395177841187, -0.059988148510456085, -0.28902336955070496, -0.13414572179317474, -0.001830213237553835, -0.0061635179445147514, -2.610649426060263e-05, -0.01639009453356266, -0.0016830102540552616, -5.8530047681415454e-05, -0.011439446359872818, -0.0029350321274250746, -0.000198821333469823, -8.344646857949556e-07, -2.3841855067985307e-07, -6.437280717364047e-06, -0.0011099375551566482, -1.363743543624878, -2.1498565673828125, -0.00014852374442853034, -0.0032164526637643576, -0.0009321396937593818, -0.04277721047401428, -0.058021970093250275, -0.00039986721822060645, -0.07000870257616043, -1.3899272680282593, -2.3083319664001465, -0.049602001905441284, -2.2829337120056152, -0.005938149522989988, -0.004733665846288204, -0.30664023756980896, -0.08346153795719147, -2.3740956783294678, -0.03068784810602665, -0.6340579986572266, -0.001191859133541584, -1.7192946672439575, -2.482105255126953, -3.648283004760742, -0.2340354472398758, -0.3037445545196533, -0.01293082907795906, -0.002535939682275057, -0.0029678368009626865, -0.01762291230261326, -0.15786521136760712, -0.00013159839727450162, -3.6954195820726454e-05, -6.9141146923357155e-06, -8.821448318485636e-06, -0.2145117074251175, -1.6956532001495361, -0.00923953391611576, -0.019538911059498787, -0.07344119995832443, -0.7508164644241333, -0.4997214078903198, -3.082192897796631, -0.0008585343020968139, -0.0014078239910304546, -0.026024403050541878, -2.6313984394073486, -0.6370572447776794, -0.04019073024392128, -0.026292435824871063, -0.055131882429122925, -0.00018952481332235038, -0.02038773149251938, -2.9802276912960224e-06, -0.00023135847004596144, -8.344646857949556e-07, -0.010473760776221752, -0.38674187660217285, -1.1806905269622803, -0.7115277051925659, -0.11945639550685883, -0.001492816023528576, -0.03579936921596527, -3.576278118089249e-07, -2.622600959512056e-06, -3.2186455882765586e-06, -2.5987286790041253e-05, -0.28207293152809143, -0.0011380392825230956, -0.0005003153928555548, -0.009690623730421066, -0.2799554765224457, -0.06644938141107559, -1.6302608251571655, -0.7584702372550964, -0.018128888681530952, -5.2569914259947836e-05, -1.1205610462639015e-05, -0.00014482879487331957, -0.9161309003829956, -8.344646857949556e-07, -5.960462772236497e-07, -3.373566141817719e-05, -0.00024423000286333263, -0.06539316475391388], "finish_reason": "stop"}], "metrics": {"energy": 252.77646762371054, "energy_per_token": 1.0576421239485796, "time": 10.882583, "time_per_token": 0.04553382008368201}}
{"outputs": [{"text": "vectorizer = CountVectorizer(stop_words=STOPWORDS)\n    return vectorizer.fit_transform(dataframe[text_column])", "tokens": ["vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "return", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "if"], "logprobs": [-3.108977794647217, -0.05715261399745941, -0.0033766180276870728, -0.0018193849828094244, -8.34461570775602e-06, -3.135155202471651e-05, -0.3780233860015869, -0.2982504665851593, -0.0008211340173147619, -8.821098163025454e-05, -0.3521369695663452, -0.03392340615391731, -4.768370445162873e-07, -0.00010954733443213627, -0.0008880723617039621, -6.210611172718927e-05, -0.5250106453895569, -0.04796234890818596, -0.23298627138137817, -2.287534713745117, -0.6840606927871704, -0.00037222131504677236, -0.0015055523253977299, -0.026968929916620255, -0.0028093892615288496, -0.0002236116270069033, -0.015930872410535812, -0.03046620450913906, -0.00015877417172305286, -0.01848038099706173, -0.0007570500019937754, -1.3470558769768104e-05, -1.585470999998506e-05, -0.06251133978366852, -0.9820264577865601, -0.016099102795124054, -1.0032784938812256], "finish_reason": "stop"}], "metrics": {"energy": 36.01589605331421, "energy_per_token": 0.9734025960355192, "time": 1.4526695, "time_per_token": 0.03926133783783784}}
{"outputs": [{"text": "# Removing stopwords, numbers, and punctuation\n    text = dataframe[text_column].str.replace('[%s]' % re.escape(string.punctuation), ' ').str.replace(\n        '\\d', ' ').str.replace('\\s\\s+', ' ').str.lower()\n\n    # Removing stopwords and converting to lowercase\n    vectorizer = CountVectorizer(stop_words=STOPWORDS, lowercase=True)\n    vectorizer.fit(text)\n    dataframe[text_column] = vectorizer.transform(text).toarray().tolist()\n\n    return dataframe", "tokens": ["#", " Rem", "oving", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", "\n", "    ", "text", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "%", "s", "]", "'", " %", " re", ".", "escape", "(", "string", ".", "punct", "uation", ")", ",", " '", " '", ")", ".", "str", ".", "replace", "(", "\n", "        ", "'\\", "d", "'", ",", " '", " '", ")", ".", "str", ".", "replace", "('", "\\", "s", "\\", "s", "+'", ",", " '", " '", ")", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Rem", "oving", " stop", "words", " and", " converting", " to", " lower", "case", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ",", " lower", "case", "=", "True", ")", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " vector", "izer", ".", "transform", "(", "text", ")", ".", "to", "array", "()", ".", "tol", "ist", "()", "\n", "\n", "    ", "return", " data", "frame", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6648897528648376, -3.921452522277832, -0.47509875893592834, -0.6578148603439331, -0.08087407797574997, -2.0732481479644775, -0.28130730986595154, -0.1474498063325882, -0.0811716616153717, -0.020299073308706284, -0.03623737394809723, -0.8769102692604065, -0.011631528846919537, -1.3719314336776733, -0.7032634615898132, -0.5073543787002563, -3.1470757676288486e-05, -0.037177130579948425, -0.0015816095983609557, -1.3470558769768104e-05, -9.536697689327411e-06, -0.0019791792146861553, -0.15153245627880096, -0.66860032081604, -0.002634152304381132, -0.530619204044342, -0.6153460144996643, -0.31531068682670593, -2.5199902057647705, -0.043413884937763214, -0.00856594555079937, -0.005196161102503538, -0.002979365875944495, -0.008813528344035149, -6.6756979322235566e-06, -0.0029162520077079535, -0.1870989054441452, -0.19659528136253357, -0.00028725311858579516, -0.0009245174005627632, -0.00036554806865751743, -0.008913371711969376, -0.0014862692914903164, -0.17738918960094452, -0.7192666530609131, -0.18481561541557312, -0.8629831671714783, -0.13358640670776367, -0.00076908094342798, -0.049832940101623535, -1.2456777095794678, -0.6797932982444763, -0.006001902278512716, -1.700427532196045, -0.20415829122066498, -2.9527761936187744, -0.0008650851668789983, -0.005646351259201765, -0.07360811531543732, -0.0015010291244834661, -0.020908890292048454, -0.05715508759021759, -0.00016139635408762842, -0.06476742774248123, -0.16228234767913818, -0.17164534330368042, -0.3978404104709625, -1.3843655586242676, -0.0008580578723922372, -0.4893417954444885, -6.007967749610543e-05, -0.0016174342017620802, -0.00119066855404526, -0.00714970612898469, -0.3960471451282501, -0.9822518229484558, -0.008378948085010052, -1.4597156047821045, -0.00482715480029583, -1.244078278541565, -0.4758973717689514, -0.0006960591417737305, -0.05438917130231857, -1.2511632442474365, -0.01025655958801508, -0.8738841414451599, -0.02079552598297596, -2.020984172821045, -2.8018956184387207, -0.5219074487686157, -1.9829052686691284, -0.19040076434612274, -0.1351107656955719, -0.00232081301510334, -3.6672399044036865, -0.0680655986070633, -0.0029882797971367836, -0.0006622266955673695, -1.2159273865108844e-05, -4.076874756719917e-05, -0.060075268149375916, -0.23745252192020416, -0.006939831655472517, -7.211902266135439e-05, -0.5935609340667725, -0.04249276965856552, -2.3841855067985307e-07, -2.95634672511369e-05, -0.00042715485324151814, -2.5748875486897305e-05, -1.1463630199432373, -0.42521122097969055, -4.339123915997334e-05, -0.001517812255769968, -0.011822867207229137, -0.09542723745107651, -0.02017933316528797, -0.0671028271317482, -0.6883009076118469, -0.7360143661499023, -0.010092182084918022, -0.02444157935678959, -0.17883151769638062, -0.03351655229926109, -0.10772412270307541, -0.03195813298225403, -0.21175289154052734, -3.143191337585449, -0.713570773601532, -0.28096795082092285, -0.034550078213214874, -0.011040433309972286, -3.528532761265524e-05, -0.07630676031112671, -0.007638650014996529, -0.022011732682585716, -0.00026913834153674543, -7.795983401592821e-05, -0.009784713387489319, -0.0013811582466587424, -0.018915390595793724, -0.007981903851032257, -0.6943418979644775, -0.060939397662878036, -0.06417283415794373, -0.0029741362668573856, -2.5209083557128906, -1.7708988189697266, -8.093983342405409e-05, -0.04972054064273834, -0.03504687547683716, -0.5053344368934631, -0.005986734759062529, -0.22991834580898285, -0.10130435973405838, -0.00010394509445177391, -1.3715120553970337, -4.768370445162873e-07, -5.960462772236497e-07, -3.0397906812140718e-05, -0.00019167017308063805, -0.10180956870317459], "finish_reason": "stop"}], "metrics": {"energy": 171.67617117404947, "energy_per_token": 1.0597294516916633, "time": 7.1954145, "time_per_token": 0.04441613888888889}}
{"outputs": [{"text": "stopwords = STOPWORDS\n\n    # Create a regex object to match words with at least one uppercase letter or number, a punctuation character,\n    # and a space or a tab, or the end of the string\n    pattern = re.compile(r\"[\\w]+|[^\\s\\w]+[\\s]*\")\n\n    # Define a function to remove stopwords and punctuation from words\n    def remove_punctuation(text):\n        return re.sub(pattern, \"\", text)\n\n    # Apply the above function to each element in the column\n    dataframe[text_column] = dataframe[text_column].apply(remove_punctuation)\n\n    # Apply the CountVectorizer class to the resulting dataframe\n    cv = CountVectorizer(lowercase=True, stop_words=stopwords)\n    vectorized = cv.fit_transform(dataframe[text_column])\n    # Convert the vectorized output to a dataframe with the same structure as the input\n    df = pd.DataFrame(dataframe.index, columns=cv.get_feature_names())\n    df = pd.", "tokens": ["stop", "words", " =", " ST", "OP", "W", "OR", "DS", "\n", "\n", "    ", "#", " Create", " a", " regex", " object", " to", " match", " words", " with", " at", " least", " one", " upper", "case", " letter", " or", " number", ",", " a", " punct", "uation", " character", ",", "\n", "    ", "#", " and", " a", " space", " or", " a", " tab", ",", " or", " the", " end", " of", " the", " string", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "\"", "[\\", "w", "]+", "|", "[", "^\\", "s", "\\", "w", "]+", "[\\", "s", "]*", "\"", ")", "\n", "\n", "    ", "#", " Define", " a", " function", " to", " remove", " stop", "words", " and", " punct", "uation", " from", " words", "\n", "    ", "def", " remove", "_", "punct", "uation", "(", "text", "):", "\n", "        ", "return", " re", ".", "sub", "(", "pattern", ",", " \"", "\"", ",", " text", ")", "\n", "\n", "    ", "#", " Apply", " the", " above", " function", " to", " each", " element", " in", " the", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "remove", "_", "punct", "uation", ")", "\n", "\n", "    ", "#", " Apply", " the", " Count", "Vector", "izer", " class", " to", " the", " resulting", " data", "frame", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " stop", "_", "words", "=", "stop", "words", ")", "\n", "    ", "vector", "ized", " =", " cv", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "#", " Convert", " the", " vector", "ized", " output", " to", " a", " data", "frame", " with", " the", " same", " structure", " as", " the", " input", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", "frame", ".", "index", ",", " columns", "=", "cv", ".", "get", "_", "feature", "_", "names", "())", "\n", "    ", "df", " =", " pd", "."], "logprobs": [-2.6051974296569824, -0.6838839650154114, -0.2976364195346832, -0.6894466876983643, -2.145764938177308e-06, -2.3841830625315197e-06, -5.602679812000133e-05, -1.680836794548668e-05, -0.20477840304374695, -0.9867762923240662, -0.0007986216805875301, -0.4725157916545868, -2.677501916885376, -0.2941003739833832, -2.0780282020568848, -1.0193803310394287, -0.5910254716873169, -0.27416980266571045, -2.3494338989257812, -1.3586599826812744, -2.1084158420562744, -0.011121191084384918, -0.16947831213474274, -3.193976402282715, -0.16788889467716217, -0.14798641204833984, -2.3940927982330322, -2.0707077980041504, -2.428351879119873, -3.5824294090270996, -3.8347620964050293, -0.005692935548722744, -0.8573773503303528, -0.22880566120147705, -0.9844240546226501, -0.000403084559366107, -0.0009415484382770956, -0.4481430649757385, -1.265527367591858, -1.8144488334655762, -2.2077200412750244, -3.0747904777526855, -2.6225271224975586, -2.4296035766601562, -1.8527898788452148, -1.999464988708496, -0.46768316626548767, -0.01228869054466486, -0.09942376613616943, -0.2037099301815033, -1.0273971557617188, -0.008329769596457481, -1.1101189851760864, -0.03783402219414711, -0.06425030529499054, -1.3708974620385561e-05, -0.00011979816190432757, -0.3011316657066345, -0.06813597679138184, -0.6798306107521057, -0.8086444139480591, -0.03515080735087395, -2.6016032695770264, -0.2772349715232849, -0.48432573676109314, -0.0818849727511406, -0.3497333824634552, -0.5712572336196899, -0.8327048420906067, -0.6466810703277588, -2.215406894683838, -0.7228037714958191, -2.1375627517700195, -0.09237878024578094, -0.04285556077957153, -0.005221539177000523, -0.10420428961515427, -0.00047994061606004834, -0.23381449282169342, -2.295133113861084, -0.3072347640991211, -0.9036338329315186, -0.2744154632091522, -1.1461337804794312, -0.5734161734580994, -0.05031200125813484, -0.8331452012062073, -0.7091336846351624, -0.06503275781869888, -0.6379334926605225, -2.557939291000366, -0.6657866835594177, -0.0035415091551840305, -0.02792276442050934, -0.43271899223327637, -0.005859815515577793, -1.725143313407898, -0.28467369079589844, -0.34643641114234924, -1.4074119329452515, -0.039960991591215134, -0.0006811682251282036, -0.004205668810755014, -0.49906203150749207, -0.8150172233581543, -0.0004245333548169583, -0.005555072799324989, -0.036705754697322845, -2.687457799911499, -0.012264786288142204, -1.0724267959594727, -0.19909493625164032, -0.00026806574896909297, -0.023325923830270767, -0.06845863908529282, -0.16279880702495575, -0.007673193700611591, -0.0014356792671605945, -0.08023705333471298, -1.4107221364974976, -0.21359512209892273, -3.3575079441070557, -0.9296109676361084, -0.030038967728614807, -0.7144451141357422, -2.271617889404297, -0.19588913023471832, -0.07882761210203171, -2.909625291824341, -0.6206396222114563, -0.0012229352723807096, -0.3575807809829712, -0.004341225605458021, -0.030219994485378265, -0.01395527645945549, -8.308542601298541e-05, -2.3245540432981215e-05, -0.0023913378827273846, -0.009038249962031841, -0.02319711074233055, -7.712543447269127e-05, -0.0022244728170335293, -0.00033945043105632067, -2.288792165927589e-05, -2.622600959512056e-06, -0.0006926044588908553, -0.0064240144565701485, -0.16911529004573822, -0.00035661060246638954, -0.0782528966665268, -1.311301275563892e-06, -0.00023684080224484205, -1.0847986231965479e-05, -0.0016294547822326422, -0.03962911292910576, -0.06930521130561829, -0.0007043979712761939, -0.03628876432776451, -1.8024041652679443, -0.6768022775650024, -0.9440654516220093, -0.009756263345479965, -0.006394047290086746, -2.454279899597168, -0.7473158240318298, -1.2001206874847412, -3.729649543762207, -1.5988010168075562, -0.12934377789497375, -0.4933466613292694, -0.0019500303314998746, -2.226649284362793, -0.012063520960509777, -0.00026043839170597494, -9.059865078597795e-06, -2.6464111215318553e-05, -0.15937021374702454, -1.8771657943725586, -0.00024530262453481555, -8.928377064876258e-05, -0.0023387717083096504, -0.24593883752822876, -0.13746434450149536, -0.16462881863117218, -0.00010227633902104571, -0.00011121608258690685, -0.10193736106157303, -0.09541358053684235, -0.0007795632118359208, -0.4308197498321533, -0.03190063312649727, -0.2982328534126282, -1.97001051902771, -0.4033627510070801, -1.3708871603012085, -0.005932461470365524, -4.792098479811102e-05, -0.0263676755130291, -0.013095681555569172, -6.580135959666222e-05, -0.00363522837869823, -0.009047109633684158, -3.266281055402942e-05, -0.007239892613142729, -0.00024339574156329036, -1.0371154530730564e-05, -1.7881377516459906e-06, -0.033364370465278625, -0.07413193583488464, -1.4789183139801025, -2.474870204925537, -1.978682041168213, -0.1314302384853363, -1.733996033668518, -0.24151715636253357, -2.11959171295166, -0.4915649890899658, -0.03688385337591171, -1.8819849491119385, -0.021288931369781494, -2.3595759868621826, -1.4722732305526733, -2.065919876098633, -3.2857203483581543, -0.3127177655696869, -0.05176490172743797, -1.5580322742462158, -1.4269859790802002, -0.006636128760874271, -2.6878342628479004, -0.34073084592819214, -0.011879178695380688, -0.0009890670189633965, -0.0028300732374191284, -0.012451883405447006, -1.6936882734298706, -0.24935437738895416, -2.61598539352417, -0.9855226874351501, -0.16137705743312836, -0.2033715844154358, -0.6743042469024658, -0.24552831053733826, -8.129743218887597e-05, -0.04590222239494324, -4.291525328881107e-06, -0.0003280101518612355, -3.8265450712060556e-05, -0.00565867917612195, -0.18477310240268707, -0.13098286092281342, -0.1390020102262497, -0.37444084882736206, -2.128141403198242, -0.24576497077941895, -0.0008933129138313234], "finish_reason": "length"}], "metrics": {"energy": 303.68265751171134, "energy_per_token": 1.1862603809051224, "time": 11.907231, "time_per_token": 0.04651262109375}}
{"outputs": [{"text": "# Remove stopwords\n    dataframe[text_column] = dataframe[text_column].str.lower().str.replace('[^\\w\\s]', ' ', regex=True)\n    dataframe[text_column] = dataframe[text_column].str.replace('\\s+', ' ', regex=True).str.strip()\n    dataframe[text_column] = dataframe[text_column].str.split().str.join(' ')\n    dataframe[text_column] = dataframe[text_column].map(lambda x: re.sub(r'\\b\\w{1,3}\\b', '', x))\n    dataframe[text_column] = dataframe[text_column].map(lambda x: re.sub(r'\\s+', ' ', x))\n    dataframe[text_column] = dataframe[text_column].map(lambda x: re.sub(r'\\s*[^\\w\\s]\\s*', ' ', x))\n\n    # Convert the string to a list of words\n    dataframe[", "tokens": ["#", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", " '", ",", " regex", "=", "True", ")", ".", "str", ".", "strip", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "split", "()", ".", "str", ".", "join", "('", " '", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "1", ",", "3", "}\\", "b", "'", ",", " ''", ",", " x", "))", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " x", "))", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "s", "*[", "^\\", "w", "\\", "s", "]\\", "s", "*", "'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " Convert", " the", " string", " to", " a", " list", " of", " words", "\n", "    ", "data", "frame", "["], "logprobs": [-0.6648897528648376, -1.4965039491653442, -0.5097635388374329, -0.04419375956058502, -1.2148526906967163, -0.0035242848098278046, -1.179237723350525, -0.027726713567972183, -0.3951566517353058, -0.009030334651470184, -6.6756979322235566e-06, -3.123234637314454e-05, -0.008159635588526726, -0.01370955165475607, -0.12138038873672485, -0.00016675988445058465, -0.006136741489171982, -0.0005261705373413861, -2.9802276912960224e-06, -2.0265558760002023e-06, -0.0024201171472668648, -0.010012874379754066, -1.0950567722320557, -0.0007553822943009436, -0.5444948077201843, -0.028030918911099434, -0.8277761936187744, -0.34942302107810974, -0.0006093314150348306, -0.1100558340549469, -1.0908091068267822, -0.406467080116272, -1.8494635820388794, -0.00748780369758606, -0.37027233839035034, -0.0057219755835831165, -0.05000803619623184, -0.004891690332442522, -0.0001209901092806831, -1.1576621532440186, -0.8489282131195068, -0.6075466871261597, -0.027754077687859535, -0.002330089919269085, -0.0003812778159044683, -0.0484132319688797, -1.056445837020874, -0.08507251739501953, -0.19919125735759735, -0.0004159538948442787, -0.007444852497428656, -0.0004117832868359983, -1.4305104514278355e-06, -2.264974000354414e-06, -0.0006080209277570248, -0.1585049331188202, -0.07626070082187653, -0.003364380681887269, -0.0009551253751851618, -0.00016902448260225356, -1.7881377516459906e-06, -1.5497195136049413e-06, -0.0022590849548578262, -0.004927159287035465, -0.03995480388402939, -0.00016807096835691482, -0.03373567387461662, -0.489952027797699, -0.3814399540424347, -0.09600072354078293, -0.28532811999320984, -5.61460001335945e-05, -0.004753716755658388, -0.0014840076910331845, -0.18402057886123657, -0.0024588846135884523, -0.00010227633902104571, -0.001060757553204894, -0.0016016048612073064, -0.9288547039031982, -0.5402520298957825, -0.0013802058529108763, -0.11596282571554184, -0.046181827783584595, -0.15105533599853516, -0.24247576296329498, -0.3708173930644989, -0.0019922663923352957, -0.026750754565000534, -0.0008747326792217791, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.0019621660467237234, -0.0672009214758873, -0.47992876172065735, -0.00045622908510267735, -0.0010805251076817513, -0.0003328961320221424, -4.172316494077677e-06, -1.311301275563892e-06, -0.004107135813683271, -0.012704862281680107, -0.25478217005729675, -0.0005460678366944194, -1.0931099653244019, -0.3595234453678131, -0.9039371013641357, -0.35887303948402405, -0.0007722970913164318, -0.08421070128679276, -0.19148561358451843, -0.08645296096801758, -0.0023825373500585556, -0.06824331730604172, -0.5125894546508789, -0.2420530468225479, -0.002894618781283498, -0.037406593561172485, -0.001158519764430821, -6.437280717364047e-06, -2.0265558760002023e-06, -0.0021312159951776266, -0.06620306521654129, -0.3394508361816406, -0.0002896366349887103, -0.003091320628300309, -0.0005476167425513268, -1.0728830375228426e-06, -9.536738616588991e-07, -0.0030604214407503605, -0.01280149258673191, -2.030796766281128, -0.013636763207614422, -0.333398699760437, -0.120296411216259, -0.0012642494402825832, -1.9932215213775635, -0.00015853578224778175, -0.16914238035678864, -0.45280131697654724, -0.08676102757453918, -0.6200523376464844, -0.41876694560050964, -0.9863786101341248, -0.07925289869308472, -0.672102153301239, -0.16119971871376038, -0.019463155418634415, -0.2644645869731903, -0.007109936326742172, -0.019025810062885284, -0.019276196137070656, -0.00018571082910057157, -0.3213600218296051, -0.0003997480380348861, -0.023333260789513588, -0.15125611424446106, -0.10038138180971146, -0.6537777185440063, -0.30081653594970703, -0.0016538526397198439, -0.01670960895717144, -0.0005959880072623491, -8.344646857949556e-07, -1.5497195136049413e-06, -0.0019041041377931833, -0.015078493393957615, -0.15762117505073547, -6.747018051100895e-05, -0.0014217516873031855, -0.00046171018038876355, -2.3841855067985307e-07, -8.344646857949556e-07, -0.0029000865761190653, -0.004999042488634586, -0.4678041934967041, -0.006017899140715599, -0.028639746829867363, -0.005683927331119776, -0.0002908283786382526, -0.33512723445892334, -0.00021634146105498075, -0.006811731029301882, -0.08268756419420242, -0.009676102548837662, -0.2381284236907959, -2.36296010017395, -0.6289916038513184, -8.308542601298541e-05, -0.04866999387741089, -0.002402516780421138, -0.0001896439935080707, -0.02064630202949047, -0.03689982369542122, -0.07933483272790909, -0.4803265333175659, -0.2289886772632599, -0.0008504349971190095, -0.02126104012131691, -0.0007474012672901154, -1.1920922133867862e-06, -2.3841830625315197e-06, -0.0011433976469561458, -0.030483664944767952, -0.07113367319107056, -0.00022230061586014926, -0.0011511372867971659, -0.0003847335756290704, -7.152555099310121e-07, -7.152555099310121e-07, -0.002107186708599329, -0.004993942100554705, -0.36257049441337585, -0.001166854752227664, -0.028575683012604713, -0.002918035024777055, -0.0003091811086051166, -0.4646894335746765, -0.0004724340105894953, -0.014273570850491524, -0.19636081159114838, -0.014657669700682163, -0.5770970582962036, -1.263702392578125, -4.023571968078613, -1.2771937847137451, -0.3431156873703003, -0.08429276943206787, -0.0030850220937281847, -1.231053113937378, -0.07409274578094482, -0.036478545516729355, -0.009785539470613003, -0.0001006075763143599, -0.21849198639392853, -0.0023211699444800615, -0.00014828535495325923, -0.003398834727704525, -0.01575932838022709, -0.030638597905635834, -1.0487576723098755, -0.0009538153535686433, -0.12061165273189545, -2.6151347160339355, -2.6542177200317383, -2.7940268516540527, -1.1991448402404785, -0.5233896970748901, -1.0977624654769897, -0.7064658999443054, -0.08572626858949661, -0.1887575089931488, -0.002753754146397114, -0.4325571060180664, -0.003089775564149022, -0.01630905643105507], "finish_reason": "length"}], "metrics": {"energy": 285.892456026077, "energy_per_token": 1.1167674063518633, "time": 11.554047, "time_per_token": 0.04513299609375}}
{"outputs": [{"text": "# Convert the text column to a list of words using the CountVectorizer class\n    vectorizer = CountVectorizer(stop_words=STOPWORDS)\n    vectorized = vectorizer.fit_transform(dataframe[text_column])\n\n    # Transform the resulting NumPy array into a pandas DataFrame\n    result = pd.DataFrame(vectorized.to_numpy(), columns=vectorizer.get_feature_names())\n    result.rename(index=dataframe.index, inplace=True)\n    return result", "tokens": ["#", " Convert", " the", " text", " column", " to", " a", " list", " of", " words", " using", " the", " Count", "Vector", "izer", " class", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "vector", "ized", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Transform", " the", " resulting", " Num", "Py", " array", " into", " a", " pandas", " Data", "Frame", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "vector", "ized", ".", "to", "_", "numpy", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "    ", "result", ".", "rename", "(", "index", "=", "data", "frame", ".", "index", ",", " in", "place", "=", "True", ")", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-0.6648897528648376, -3.4518775939941406, -0.8836314082145691, -0.9698485136032104, -0.5317618250846863, -0.2543995678424835, -0.21807357668876648, -0.32847166061401367, -0.6439842581748962, -1.7237136363983154, -1.7311067581176758, -1.2110852003097534, -1.0321543216705322, -0.0030497252009809017, -0.00257303798571229, -2.2322869300842285, -0.46155786514282227, -0.0036535197868943214, -0.5186020731925964, -0.012582913041114807, -0.000812915270216763, -0.00016699827392585576, -5.8412379075889476e-06, -1.7762025890988298e-05, -0.27118921279907227, -0.19644631445407867, -0.0007124984404072165, -7.60526381782256e-05, -0.6100096106529236, -0.05549699813127518, -3.576278118089249e-07, -0.0001726001501083374, -0.0024123871698975563, -5.280832192511298e-05, -0.6747098565101624, -0.04506579041481018, -0.017066990956664085, -1.177469253540039, -0.37074005603790283, -2.0677566528320312, -0.021915871649980545, -3.528532761265524e-05, -4.7801782784517854e-05, -0.01570628583431244, -0.0036493625957518816, -9.48860906646587e-05, -0.027003275230526924, -0.014360766857862473, -2.288792165927589e-05, -0.012915648519992828, -0.00036197309964336455, -1.3470558769768104e-05, -7.271740287251305e-06, -0.09048915654420853, -0.05181040242314339, -0.325227826833725, -0.000621959799900651, -0.035174861550331116, -3.533539056777954, -0.07098544389009476, -2.608668804168701, -3.60843563079834, -0.00028463127091526985, -0.19992133975028992, -0.4144618511199951, -0.020204098895192146, -0.540737509727478, -0.08923093974590302, -0.004079591948539019, -0.4980998933315277, -0.0007403731578961015, -1.376250982284546, -0.03811175748705864, -0.019611738622188568, -0.0021608355455100536, -0.0014606770128011703, -0.02793644368648529, -0.1648952215909958, -0.012846332974731922, -0.0118478424847126, -0.35468003153800964, -0.08267372846603394, -3.07454252243042, -0.048941899091005325, -0.5785761475563049, -0.6119115352630615, -0.1846189945936203, -0.006357682403177023, -0.004904383327811956, -3.302042750874534e-05, -0.008518903516232967, -2.264974000354414e-06, -0.00013791563105769455, -2.3841855067985307e-07, -0.0013429442187771201, -0.27643129229545593, -0.025258122012019157, -1.451922059059143, -2.1163039207458496, -0.523652195930481, -3.255326271057129, -0.08221641182899475, -2.3078091144561768, -0.7289226651191711, -0.8641062378883362, -0.0006201728247106075, -0.10424908250570297, -0.009459082037210464, -0.12004439532756805, -0.0403113067150116, -3.576272320060525e-06, -0.00041106835124082863, -0.0004997196956537664, -0.04399231821298599, -0.026942355558276176, -0.7972410917282104, -0.0983773022890091, -0.01226831879466772, -0.9481858015060425, -0.01162575464695692, -0.8740704655647278], "finish_reason": "stop"}], "metrics": {"energy": 135.34748722076415, "energy_per_token": 1.11857427455177, "time": 5.350777, "time_per_token": 0.04422129752066115}}
{"outputs": [{"text": "# Create a count vectorizer object\n    cv = CountVectorizer(stop_words='english')\n    # Fit the vectorizer to the text data\n    cv.fit([row[text_column] for row in dataframe])\n    # Apply the vectorizer to the text data\n    vectorized_text = cv.transform([row[text_column] for row in dataframe])\n    # Create a pandas DataFrame from the vectorized text\n    vectorized_text_df = pd.DataFrame(vectorized_text)\n    # Rename the columns to be the terms in the data\n    vectorized_text_df.columns = cv.get_feature_names()\n    # Drop stopwords and punctuation from the vectorized text\n    vectorized_text_df = vectorized_text_df.applymap(lambda x: re.sub(r'[\\W_]+', '', str(x)))\n    # Return the vectorized text DataFrame\n    return vectorized_text_df", "tokens": ["#", " Create", " a", " count", " vector", "izer", " object", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "#", " Fit", " the", " vector", "izer", " to", " the", " text", " data", "\n", "    ", "cv", ".", "fit", "([", "row", "[", "text", "_", "column", "]", " for", " row", " in", " data", "frame", "])", "\n", "    ", "#", " Apply", " the", " vector", "izer", " to", " the", " text", " data", "\n", "    ", "vector", "ized", "_", "text", " =", " cv", ".", "transform", "([", "row", "[", "text", "_", "column", "]", " for", " row", " in", " data", "frame", "])", "\n", "    ", "#", " Create", " a", " pandas", " Data", "Frame", " from", " the", " vector", "ized", " text", "\n", "    ", "vector", "ized", "_", "text", "_", "df", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", ")", "\n", "    ", "#", " R", "ename", " the", " columns", " to", " be", " the", " terms", " in", " the", " data", "\n", "    ", "vector", "ized", "_", "text", "_", "df", ".", "columns", " =", " cv", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "#", " Drop", " stop", "words", " and", " punct", "uation", " from", " the", " vector", "ized", " text", "\n", "    ", "vector", "ized", "_", "text", "_", "df", " =", " vector", "ized", "_", "text", "_", "df", ".", "apply", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[\\", "W", "_", "]+", "'", ",", " ''", ",", " str", "(", "x", ")))", "\n", "    ", "#", " Return", " the", " vector", "ized", " text", " Data", "Frame", "\n", "    ", "return", " vector", "ized", "_", "text", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6648897528648376, -2.2491464614868164, -0.3355608880519867, -3.9491395950317383, -0.03428021818399429, -0.03601488843560219, -0.9144517183303833, -0.781894862651825, -0.0014479401288554072, -2.281226396560669, -0.013820077292621136, -0.000522357877343893, -1.0847986231965479e-05, -3.671578815556131e-05, -0.2227766066789627, -0.24694722890853882, -0.0008810452418401837, -0.00010823617776622996, -0.7204633355140686, -0.013491170480847359, -3.099436753473128e-06, -1.0729146003723145, -0.008300095796585083, -1.5351972579956055, -0.23010189831256866, -1.9199938774108887, -0.4609616994857788, -1.2880144119262695, -0.004575260449200869, -0.9014516472816467, -0.06268490105867386, -0.8263659477233887, -0.5765730142593384, -0.6244702339172363, -0.0008021951070986688, -0.3462251126766205, -0.03755724057555199, -0.00017534149810671806, -2.1731956005096436, -1.5526659488677979, -0.031536731868982315, -0.011999564245343208, -0.00013529339048545808, -2.5629668016335927e-05, -0.001278298324905336, -0.06680147349834442, -0.18142424523830414, -0.0001137191939051263, -0.005955924745649099, -2.455681169521995e-05, -0.4401252865791321, -0.003572868648916483, -0.10892839729785919, -0.013666396960616112, -2.2772653102874756, -0.18234096467494965, -0.300055593252182, -0.15570083260536194, -0.11151336133480072, -0.17236410081386566, -0.1068759337067604, -0.02368188090622425, -0.32341083884239197, -0.0005710878176614642, -1.3578085899353027, -0.2518746554851532, -0.16410258412361145, -1.0761088132858276, -0.06205242872238159, -0.002039734972640872, -3.909988299710676e-05, -0.053762275725603104, -0.7563479542732239, -0.0063219089061021805, -0.00077622797107324, -0.00026556302327662706, -7.629365427419543e-06, -2.3841830625315197e-06, -0.00012110930401831865, -0.015023654326796532, -4.911301948595792e-05, -0.00010692501382436603, -0.000485183292767033, -0.00010966652916977182, -0.0019518149783834815, -0.013980081304907799, -0.1319933831691742, -0.04604966193437576, -1.822697639465332, -0.06815078854560852, -1.102150559425354, -0.38409608602523804, -0.0010720703285187483, -0.521250307559967, -0.0069135501980781555, -0.6292804479598999, -0.03268907591700554, -0.35407137870788574, -0.48299548029899597, -0.0012191252317279577, -1.6931575536727905, -0.0843534767627716, -0.03870232403278351, -1.9969732761383057, -0.50379878282547, -0.06976281106472015, -0.0005160430446267128, -0.003783213207498193, -0.0022272085770964622, -0.0007761088781990111, -0.023879658430814743, -0.1943630576133728, -0.0017462018877267838, -3.099393507000059e-05, -5.781483559985645e-05, -2.261435031890869, -0.24816808104515076, -0.04522634297609329, -0.1580258458852768, -1.2127692699432373, -0.00710342638194561, -0.13340678811073303, -0.2197272926568985, -0.5688260793685913, -2.0944576263427734, -1.2337325811386108, -2.3782691955566406, -1.84372079372406, -0.029660502448678017, -3.8062186241149902, -0.3859344720840454, -0.0005796659388579428, -0.040894050151109695, -6.09140915912576e-05, -5.936446541454643e-05, -0.0013454442378133535, -0.00028975578607060015, -0.0006740205571986735, -0.12726157903671265, -0.03452024981379509, -0.0012949660886079073, -0.022079482674598694, -5.209310256759636e-05, -0.020064717158675194, -8.344646857949556e-07, -0.00011789103882620111, -8.583032467868179e-06, -0.0074101826176047325, -0.12182658910751343, -0.0031601274386048317, -0.0530502013862133, -0.2643853425979614, -2.8207614421844482, -3.1404924392700195, -0.08819819241762161, -1.2879455089569092, -2.171621561050415, -0.024890748783946037, -0.9108386635780334, -0.07591955363750458, -2.355851888656616, -0.07479287683963776, -0.3905174732208252, -0.23482047021389008, -0.001493054092861712, -0.2985999286174774, -0.0007372760446742177, -0.0016413562698289752, -0.004710410721600056, -0.0053314645774662495, -0.007482479326426983, -0.1489865779876709, -0.04968775808811188, -5.769562994828448e-05, -3.302042750874534e-05, -0.00014768941036891192, -0.0002618685248307884, -4.792098479811102e-05, -0.05592161417007446, -1.366715908050537, -0.6396783590316772, -0.011680309660732746, -0.12791560590267181, -0.06574171036481857, -0.0005368936690501869, -0.7025394439697266, -5.221230458118953e-05, -0.024235302582383156, -0.4517465829849243, -0.05004863068461418, -0.319187194108963, -1.4353289604187012, -0.6884140372276306, -0.0854991003870964, -0.0632641613483429, -0.022834572941064835, -0.000163541772053577, -0.3880639672279358, -0.0001851148990681395, -1.2940583229064941, -0.0003228858404327184, -0.0008993871742859483, -0.046836357563734055, -0.09615839272737503, -0.04059934243559837, -0.4210996627807617, -2.663287401199341, -0.05872759222984314, -1.2017450332641602, -0.004404724109917879, -0.11489921063184738, -0.7735100984573364, -0.00034791138023138046, -0.16228701174259186, -0.003511455375701189, -0.007641134783625603, -0.018026918172836304, -4.768360213347478e-06, -3.635817120084539e-05, -8.344646857949556e-07, -0.00011824862303910777, -9.536738616588991e-07, -0.9234930276870728, -1.1920922133867862e-06, -7.152555099310121e-07, -3.635817120084539e-05, -0.000276765669696033, -0.06379745155572891], "finish_reason": "stop"}], "metrics": {"energy": 240.4672241344451, "energy_per_token": 1.0546808076072154, "time": 10.269923, "time_per_token": 0.04504352192982456}}
{"outputs": [{"text": "# Remove stopwords\n    words = [w for w in re.split('[^a-zA-Z]', dataframe[text_column].str.lower()) if w not in STOPWORDS]\n    # Convert text to bag-of-words\n    vectorizer = CountVectorizer()\n    bag_of_words = vectorizer.fit_transform(words)\n    return pd.DataFrame(bag_of_words.todense(), index=dataframe.index, columns=vectorizer.get_feature_names())", "tokens": ["#", " Remove", " stop", "words", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " re", ".", "split", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "())", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Convert", " text", " to", " bag", "-", "of", "-", "words", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "bag", "_", "of", "_", "words", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "words", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "bag", "_", "of", "_", "words", ".", "t", "od", "ense", "()", ",", " index", "=", "data", "frame", ".", "index", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "if"], "logprobs": [-0.6648897528648376, -1.4965039491653442, -0.5097635388374329, -0.04419375956058502, -1.2148526906967163, -0.0035242848098278046, -3.029694080352783, -0.08260151743888855, -0.443108469247818, -2.0477235317230225, -0.4631003141403198, -0.0020996923558413982, -0.0006254147156141698, -2.8743271827697754, -6.270212179515511e-05, -1.4195725917816162, -0.9079422354698181, -1.8282098770141602, -0.6615149974822998, -0.2714662253856659, -0.00020704510097857565, -0.00030048147891648114, -0.18389323353767395, -8.320462075062096e-05, -0.0011848341673612595, -0.9215280413627625, -0.008645131252706051, -0.00022075122979003936, -0.17205603420734406, -7.962863310240209e-05, -0.05115164443850517, -0.0007950482540763915, -1.3232143828645349e-05, -1.645074735279195e-05, -0.4642203450202942, -0.006563178729265928, -0.8419737219810486, -0.03370478376746178, -0.2068360298871994, -0.5046114325523376, -0.09279562532901764, -0.08262379467487335, -0.13975082337856293, -0.0002109781780745834, -0.00376658677123487, -4.768370445162873e-07, -4.0531076592742465e-06, -1.1920858014491387e-05, -3.3854863431770355e-05, -0.020810004323720932, -0.005333361681550741, -1.1322993040084839, -0.2576294243335724, -2.2776880264282227, -2.588540554046631, -0.35430294275283813, -2.6635918617248535, -0.2785641551017761, -0.0007178590167313814, -0.0005719218170270324, -0.007562815677374601, -2.0899782180786133, -0.0012181727215647697, -0.42052707076072693, -0.05466596037149429, -0.0012244831304997206, -0.0001896439935080707, -9.536697689327411e-06, -2.407998726994265e-05, -0.7642302513122559, -0.022383779287338257, -0.003903508884832263, -2.774022102355957, -0.09374570846557617, -0.10547900199890137, -9.881961887003854e-05, -0.0060991826467216015, -0.014800273813307285, -0.017642706632614136, -1.1801649634435307e-05, -4.23184028477408e-05, -0.01595914736390114, -0.002100881887599826, -7.652943895664066e-05, -0.015193445608019829, -0.002989230677485466, -0.0010122895473614335, -0.11552547663450241, -0.11265407502651215, -1.333333969116211, -0.02578476443886757, -5.8412379075889476e-06, -0.006102855782955885, -0.1511238068342209, -0.1910129189491272, -1.883488948806189e-05, -2.50339189733495e-06, -6.55629628454335e-05, -5.006777428206988e-06, -0.01615188829600811, -1.0295937061309814, -8.022463589441031e-05, -0.009477739222347736, -0.028593987226486206, -0.017095351591706276, -0.9510243535041809, -0.02190735749900341, -0.0964733362197876, -0.00014733182615600526, -0.08440069854259491, -0.0004128557338844985, -0.015209296718239784, -0.07034053653478622, -0.23095758259296417, -0.02321481518447399, -7.807903602952138e-05, -3.4450891689630225e-05, -0.013619123958051205, -1.1920922133867862e-06, -0.00023898606013972312, -9.536738616588991e-07, -0.0026638756971806288, -0.12853974103927612, -0.8878813982009888, -0.023759065195918083, -0.907616913318634], "finish_reason": "stop"}], "metrics": {"energy": 146.21361284828188, "energy_per_token": 1.160425498795888, "time": 5.5546837, "time_per_token": 0.04408479126984127}}
{"outputs": [{"text": "# Clean text data\n    dataframe[text_column] = dataframe[text_column].str.lower()\n    dataframe[text_column] = dataframe[text_column].str.replace('[^a-z0-9]', ' ', regex=True)\n    dataframe[text_column] = dataframe[text_column].str.replace('\\s+', ' ').str.strip()\n\n    # Remove stopwords from text data\n    stop_words = set(STOPWORDS)\n    dataframe[text_column] = dataframe[text_column].str.replace('[a-z]', ' ').str.replace('\\s+', ' ').str.strip()\n    dataframe[text_column] = dataframe[text_column].str.replace('[a-z]', '')\n    for stopword in STOPWORDS:\n        dataframe[text_column] = dataframe[text_column].replace(stopword, '')\n\n    # Count the number of times each unique word appears in the", "tokens": ["#", " Clean", " text", " data", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "0", "-", "9", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", " '", ")", ".", "str", ".", "strip", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " text", " data", "\n", "    ", "stop", "_", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "a", "-", "z", "]", "'", ",", " '", " '", ")", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", " '", ")", ".", "str", ".", "strip", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "a", "-", "z", "]", "'", ",", " '", "')", "\n", "    ", "for", " stop", "word", " in", " ST", "OP", "W", "OR", "DS", ":", "\n", "        ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "replace", "(", "stop", "word", ",", " '", "')", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " times", " each", " unique", " word", " appears", " in", " the"], "logprobs": [-0.6648897528648376, -4.350743293762207, -1.160635232925415, -1.7024425268173218, -1.108636736869812, -0.011504263617098331, -0.9356443285942078, -0.01192900724709034, -0.14527830481529236, -0.009388817474246025, -2.3841830625315197e-06, -1.4424220353248529e-05, -0.0031438469886779785, -0.029978349804878235, -0.056454554200172424, -0.00012003655137959868, -0.00971116591244936, -0.0005146132898516953, -3.4570634852570947e-06, -1.9073468138230965e-06, -0.0027747959829866886, -0.015431880950927734, -0.6818589568138123, -0.000985375139862299, -0.3445417284965515, -0.028700098395347595, -0.419030100107193, -0.04737529531121254, -0.10297441482543945, -0.0004481264913920313, -0.00492217717692256, -0.00026055757189169526, -1.9073468138230965e-06, -8.344646857949556e-07, -0.0006575806182809174, -0.09243682026863098, -0.02619628608226776, -0.000459565402707085, -0.0006342306733131409, -0.0003778220561798662, -1.1920922133867862e-06, -1.0728830375228426e-06, -0.007932350970804691, -0.012487555854022503, -0.07580706477165222, -0.0006512666586786509, -0.03216490149497986, -1.0829713344573975, -0.2037159651517868, -0.24945582449436188, -0.07186738401651382, -5.2569914259947836e-05, -0.00022587609419133514, -1.64088773727417, -0.00018010901112575084, -0.00023588736075907946, -0.7778324484825134, -0.0007344171172007918, -7.581423415103927e-05, -0.20160238444805145, -0.09712346643209457, -0.06940653920173645, -0.007880667224526405, -0.0017532228957861662, -0.0016400470631197095, -0.002755656372755766, -0.06298257410526276, -0.2691831588745117, -0.05718368664383888, -0.0001674750237725675, -0.007904321886599064, -0.0002646096108946949, -1.9073468138230965e-06, -2.0265558760002023e-06, -0.00029881304362788796, -0.035963140428066254, -0.027782252058386803, -0.0002240883477497846, -0.0006254147156141698, -0.00012492353562265635, -9.536738616588991e-07, -1.0728830375228426e-06, -0.0013677061069756746, -0.003132795449346304, -0.04182075709104538, -0.00011467275908216834, -0.2917117774486542, -0.37603485584259033, -0.8591083288192749, -0.09500747174024582, -0.2120891958475113, -6.258291978156194e-05, -0.0034886470530182123, -0.0013954435708001256, -2.1437110900878906, -1.178096055984497, -1.2984352111816406, -0.0008762810612097383, -0.021248552948236465, -0.08024794608354568, -0.03414105996489525, -0.4644091725349426, -0.0007770617958158255, -0.09370478987693787, -0.6991686224937439, -0.13449634611606598, -0.0921611562371254, -2.7225401401519775, -0.1933722048997879, -0.4591323435306549, -0.035656508058309555, -0.0012617491884157062, -0.8674560189247131, -1.6163947582244873, -0.18346892297267914, -0.10601405799388885, -0.3760688304901123, -0.002765404526144266, -0.040981244295835495, -5.960462772236497e-07, -4.6491513785440475e-06, -7.152555099310121e-07, -2.2291887944447808e-05, -0.023053834214806557, -0.01386357843875885, -0.017966503277420998, -0.4576723277568817, -0.000967153930105269, -0.005656189750880003, -0.0008699684985913336, -9.298280929215252e-06, -3.099436753473128e-06, -0.001829380402341485, -0.004263241309672594, -0.19572310149669647, -0.00012766500003635883, -0.0008041008841246367, -0.0005123494775034487, -4.768370445162873e-07, -1.5497195136049413e-06, -0.0009782296838238835, -0.005060720257461071, -1.2556270360946655, -0.00017677174764685333, -0.764718234539032, -0.2886490225791931, -2.077780246734619, -2.977651834487915, -0.0015015052631497383, -0.00047565114800818264, -2.188065528869629, -0.07012951374053955, -0.006603799294680357, -0.39267823100090027, -1.032926321029663, -0.29035696387290955, -1.1836509704589844, -0.19398833811283112, -0.0015717307105660439, -0.2611810564994812, -0.300759881734848, -0.9490712881088257, -0.06872933357954025, -0.027073590084910393, -2.8132995794294402e-05, -0.009720374830067158, -0.054228730499744415, -0.06561512500047684, -0.23551568388938904, -0.10361066460609436, -0.0024943212047219276, -0.6301332116127014, -0.020811287686228752, -0.060045965015888214, -0.07480858266353607, -0.32334595918655396, -0.000996093382127583, -0.01109513733536005, -0.002416192786768079, -1.1920928244535389e-07, -1.9073468138230965e-06, -0.0015048381173983216, -0.14205308258533478, -0.4670386016368866, -0.0009031984372995794, -0.0015166220255196095, -0.001085764612071216, -6.198863957251888e-06, -1.7881377516459906e-06, -0.0019785843323916197, -0.005700047593563795, -0.5004405379295349, -0.0005127069307491183, -0.5029436945915222, -0.19271676242351532, -0.8374114632606506, -0.6812825798988342, -0.005805179942399263, -0.0020111827179789543, -0.19124068319797516, -0.0062028514221310616, -0.0007398966699838638, -0.034938208758831024, -1.5937632322311401, -0.40568068623542786, -0.25662437081336975, -2.1612167358398438, -2.1090750694274902, -0.5622177124023438, -0.000940714729949832, -0.977912187576294, -8.344646857949556e-07, -0.00011693747364915907, -4.410734163684538e-06, -8.821448318485636e-06, -0.008356249891221523, -0.0040545412339270115, -0.0038859345950186253, -0.21464742720127106, -0.00036638224264606833, -0.0032959445379674435, -0.018725287169218063, -2.3841855067985307e-07, -2.9802276912960224e-06, -0.0032059960067272186, -0.016271643340587616, -0.009851054288446903, -4.672895011026412e-05, -0.001733111683279276, -0.003919420763850212, -1.7881377516459906e-06, -1.1920922133867862e-06, -0.0005216429708525538, -0.0005552418879233301, -1.620780348777771, -0.11610634624958038, -0.12133519351482391, -0.0007161913090385497, -0.02933155745267868, -0.23753722012043, -0.14751943945884705, -0.010120032355189323, -0.4402804672718048, -0.004743394907563925, -0.1035197302699089, -2.3259100914001465, -1.940795660018921, -1.1133973598480225, -0.0024446146562695503, -1.315864086151123, -0.10239705443382263, -2.7852373123168945, -0.012889405712485313, -0.28434693813323975, -0.10587305575609207, -0.22351054847240448], "finish_reason": "length"}], "metrics": {"energy": 276.4154427986143, "energy_per_token": 1.0797478234320872, "time": 11.496788, "time_per_token": 0.044909328125}}
{"outputs": [{"text": "df = dataframe\n    df = df[text_column]\n    df.reset_index(drop=True, inplace=True)\n    df.columns = [text_column]\n\n    # Remove stopwords\n    text = df[text_column].copy()\n    text = text.apply(lambda x: \" \".join([word for word in x.split() if word not in STOPWORDS]))\n\n    # Remove numbers and punctuation\n    text = text.apply(lambda x: re.sub('[0-9]+', '', x))\n    text = text.apply(lambda x: re.sub('[^\\w\\s]', '', x))\n\n    # Count the words\n    vectorizer = CountVectorizer(ngram_range=(1, 2), stop_words='punctuation', token_pattern=r\"\\S+\")\n    counts = vectorizer.fit_transform(text)\n\n    return pd.DataFrame(counts.toarray(), index=df.index, columns=vectorizer.get_feature_names())", "tokens": ["df", " =", " data", "frame", "\n", "    ", "df", " =", " df", "[", "text", "_", "column", "]", "\n", "    ", "df", ".", "reset", "_", "index", "(", "drop", "=", "True", ",", " in", "place", "=", "True", ")", "\n", "    ", "df", ".", "columns", " =", " [", "text", "_", "column", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "text", " =", " df", "[", "text", "_", "column", "]", ".", "copy", "()", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", " and", " punct", "uation", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "0", "-", "9", "]+", "'", ",", " ''", ",", " x", "))", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Count", " the", " words", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "ng", "ram", "_", "range", "=(", "1", ",", " ", "2", ")", ",", " stop", "_", "words", "='", "punct", "uation", "'", ",", " token", "_", "pattern", "=", "r", "\"", "\\", "S", "+", "\"", ")", "\n", "    ", "counts", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", ")", "\n", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "counts", ".", "to", "array", "()", ",", " index", "=", "df", ".", "index", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())"], "logprobs": [-3.04194974899292, -0.08594967424869537, -0.30203965306282043, -0.00010418349120300263, -1.3582351207733154, -0.33591723442077637, -1.3135708570480347, -2.635918140411377, -0.20350882411003113, -1.1687324047088623, -0.07467229664325714, -1.847726889536716e-05, -3.158996332786046e-05, -0.0017589349299669266, -0.46357980370521545, -0.41548797488212585, -0.545221209526062, -1.975037693977356, -3.9031989574432373, -1.1324817933200393e-05, -0.000715833914000541, -0.03989363834261894, -0.30453863739967346, -0.0047982074320316315, -0.010043914429843426, -0.12125399708747864, -0.0032423564698547125, -7.510157047363464e-06, -0.0007681279676035047, -0.0006761648692190647, -0.004707563202828169, -0.012270556762814522, -0.353319376707077, -0.4196206033229828, -1.119610071182251, -1.2261583805084229, -0.029399044811725616, -0.6879599094390869, -0.23222115635871887, -0.00051115796668455, -0.00018320789968129247, -0.009963540360331535, -0.015491392463445663, -0.7745283246040344, -0.0011239885352551937, -0.5737638473510742, -1.1580568552017212, -0.6860700249671936, -0.08096873760223389, -0.8800262808799744, -0.0013159195659682155, -3.4750003814697266, -0.9446535110473633, -0.49828365445137024, -0.33596935868263245, -0.015729639679193497, -0.0003522014303598553, -1.4305012882687151e-05, -0.008135750889778137, -0.28406694531440735, -1.2505966424942017, -0.029944567009806633, -0.03967001661658287, -0.032118264585733414, -0.4018252193927765, -0.2123100906610489, -0.49688437581062317, -0.017846951261162758, -1.067948579788208, -0.007859851233661175, -0.1211468055844307, -0.07913439720869064, -0.0012353177880868316, -1.8329647779464722, -0.007376576773822308, -0.0008219677838496864, -0.00010001159535022452, -0.3637329339981079, -0.5964311361312866, -0.030630042776465416, -0.00016950124700088054, -0.0006551980040967464, -0.5475900769233704, -0.0005756151513196528, -0.0712803304195404, -0.10917264968156815, -0.014297191984951496, -0.027952441945672035, -0.21622709929943085, -8.40390202938579e-05, -0.009309336543083191, -4.768370445162873e-07, -1.3947389561508317e-05, -1.0013530300057027e-05, -2.706014311115723e-05, -0.01635526493191719, -0.011438739486038685, -0.9861180782318115, -0.0003123987407889217, -0.020571913570165634, -0.25562402606010437, -0.200686976313591, -0.9389643669128418, -0.16570380330085754, -0.08424532413482666, -0.07664048671722412, -0.0005017452058382332, -0.21385428309440613, -0.021071381866931915, -0.04404091462492943, -0.0005009111482650042, -0.13168463110923767, -0.0002967870968859643, -0.020843161270022392, -0.0030772972386330366, -8.999896090244874e-05, -0.08221113681793213, -1.3351351299206726e-05, -0.0020271246321499348, -1.0370391607284546, -0.07361774891614914, -0.3931586742401123, -1.4305012882687151e-05, -0.00023755589791107923, -0.5371764898300171, -0.04408140853047371, -9.560128091834486e-05, -0.07384010404348373, -7.331102824537084e-05, -0.016185084357857704, -0.030789922922849655, -0.03314366564154625, -0.01965416967868805, -0.008757871575653553, -0.0011379201896488667, -0.003271467750892043, -9.97731985989958e-05, -0.00537213496863842, -0.00015400654228869826, -0.0004646890447475016, -0.00011407678539399058, -2.658331868587993e-05, -0.008547153323888779, -0.0003796095261350274, -0.00013422065239865333, -0.1459774225950241, -0.08543616533279419, -0.7473325729370117, -0.01146949827671051, -0.1737731248140335, -0.0017820206703618169, -0.11859100311994553, -0.010056542232632637, -4.7444173105759546e-05, -0.019570590928196907, -3.504691630951129e-05, -0.00047600860125385225, -0.009290440008044243, -0.011492125689983368, -0.15205182135105133, -0.0003700763627421111, -0.08823508769273758, -2.2262256145477295, -1.4258720874786377, -1.25274658203125, -0.5029870867729187, -0.000972155889030546, -0.7177839279174805, -0.022802645340561867, -0.0009396428358741105, -0.000125281119835563, -1.1801649634435307e-05, -7.73638384998776e-05, -0.6261457800865173, -2.5328073501586914, -0.014567445032298565, -3.325883881188929e-05, -4.637133679352701e-05, -0.004705427680164576, -0.09587238729000092, -9.893881360767409e-05, -0.02916901186108589, -0.7640699148178101, -0.6363895535469055, -0.000256982195423916, -0.5807988047599792, -3.6954195820726454e-05, -0.00013755806139670312, -0.27530068159103394, -3.122781991958618, -0.21143202483654022, -1.343045711517334, -0.0015260252403095365, -1.1669472455978394, -0.17259664833545685, -0.03046111762523651, -0.6386874318122864, -0.2413770705461502, -1.5149515867233276, -0.6036669015884399, -2.3127429485321045, -0.03300468996167183, -0.05146930366754532, -0.10573235899209976, -0.012215091846883297, -0.015334447845816612, -2.2251129150390625, -0.008205393329262733, -0.06101028248667717, -9.07141511561349e-05, -7.73638384998776e-05, -0.001965140225365758, -0.004930717870593071, -0.0002661589242052287, -0.0022896521259099245, -0.011585927568376064, -0.09294772148132324, -0.1255541294813156, -1.381699800491333, -0.0003771070914808661, -0.9906725883483887, -0.04644462466239929, -0.00023898606013972312, -0.003368182573467493, -0.1028771921992302, -0.12034714221954346, -0.021448444575071335, -0.6086970567703247, -0.006716296076774597, -0.011469027027487755, -0.0219854936003685, -2.197700023651123, -0.004929413087666035, -0.32164421677589417, -0.017846716567873955, -0.00046564225340262055, -0.007275870069861412, -0.015653593465685844, -0.1323338896036148, -0.014028511941432953, -0.00016509123088326305, -4.136476854910143e-05, -0.029616989195346832, -1.1920922133867862e-06, -0.00020919041708111763, -2.145764938177308e-06, -0.004187862388789654, -0.14132554829120636], "finish_reason": "stop"}], "metrics": {"energy": 268.10936026573177, "energy_per_token": 1.081086130103757, "time": 11.297208, "time_per_token": 0.04555325806451613}}
{"outputs": [{"text": "def _preprocess(x):\n        # Removes special characters\n        x = re.sub(r'[^\\w\\s]', ' ', x)\n        # Removes multiple spaces\n        x = re.sub(r'\\s+', ' ', x)\n        # Removes stopwords\n        x = [word for word in x.split() if word not in STOPWORDS]\n        # Converts to lowercase\n        x = ' '.join(x).lower()\n        return x\n\n    vectorizer = CountVectorizer(tokenizer=_preprocess)\n    return pd.DataFrame(vectorizer.fit_transform(dataframe[text_column]))", "tokens": ["def", " _", "pre", "process", "(", "x", "):", "\n", "        ", "#", " Rem", "oves", " special", " characters", "\n", "        ", "x", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " x", ")", "\n", "        ", "#", " Rem", "oves", " multiple", " spaces", "\n", "        ", "x", " =", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " x", ")", "\n", "        ", "#", " Rem", "oves", " stop", "words", "\n", "        ", "x", " =", " [", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "#", " Con", "verts", " to", " lower", "case", "\n", "        ", "x", " =", " '", " '", ".", "join", "(", "x", ")", ".", "lower", "()", "\n", "        ", "return", " x", "\n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "token", "izer", "=_", "pre", "process", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "]))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.609473705291748, -3.054713726043701, -1.6026687622070312, -0.1639835089445114, -0.9309723973274231, -3.3137128353118896, -0.06310837715864182, -0.030743105337023735, -0.015412160195410252, -1.6117527484893799, -3.200854778289795, -0.5831224322319031, -2.6085047721862793, -0.07051263749599457, -1.6774652004241943, -0.0014147283509373665, -0.3355323374271393, -0.03716208413243294, -0.12070252001285553, -2.90866428258596e-05, -0.004560189787298441, -0.2612020969390869, -0.05316245183348656, -0.28567129373550415, -0.01892404817044735, -0.4440709948539734, -0.0046304380521178246, -0.12686283886432648, -0.004391312599182129, -0.09900081902742386, -0.04583800211548805, -8.356221951544285e-05, -2.8105616569519043, -0.0070905243046581745, -0.00012218205665703863, -0.03512537106871605, -0.01039047259837389, -0.012063638307154179, -0.2176292985677719, -0.058760866522789, -0.3460591733455658, -0.004144413396716118, -2.092533588409424, -0.3000413775444031, -0.1638811081647873, -0.00010346830822527409, -0.018833154812455177, -0.001156376558355987, -0.35546359419822693, -0.0004144048143643886, -4.136476854910143e-05, -0.07711957395076752, -0.002904128050431609, -0.025759320706129074, -0.00045599075383506715, -0.10354682058095932, -7.533743337262422e-05, -0.0028237728402018547, -0.0005221195751801133, -4.625213477993384e-05, -0.0024927754420787096, -0.0027612438425421715, -0.08073124289512634, -0.012577262707054615, -0.18909572064876556, -0.7914415001869202, -0.0036889140028506517, -0.5196282863616943, -0.15187539160251617, -0.11490165442228317, -0.0004231034545227885, -0.18780170381069183, -0.008323385380208492, -0.9128251671791077, -0.27303919196128845, -0.0950370654463768, -0.00037222131504677236, -0.00022349244682118297, -0.14235173165798187, -0.006647023372352123, -0.09170597791671753, -0.4304610788822174, -0.0042719063349068165, -0.02338613197207451, -0.7080883979797363, -1.5735502529423684e-05, -0.0105805154889822, -2.3841855067985307e-07, -3.099393507000059e-05, -2.4437606043647975e-05, -1.9311717551317997e-05, -0.008271248079836369, -0.0017131189815700054, -0.014163213782012463, -0.5504052639007568, -1.6567516326904297, -0.017941564321517944, -1.0171529054641724, -0.050354622304439545, -0.16354571282863617, -0.06573021411895752, -0.00011240804451517761, -0.11095403134822845, -0.0026926472783088684, -0.7986587285995483, -0.00025948495022021234, -5.566918844124302e-05, -0.001374610816128552, -0.08812888711690903, -0.013153214938938618, -0.0002723561483435333, -0.13686446845531464, -0.003950055688619614, -0.00011038171214750037, -0.002634627977386117, -0.05247608199715614, -0.1529897302389145, -0.04476501792669296, -0.0035485175903886557, -0.16553995013237, -0.0007861146004870534, -2.6934971809387207, -0.05620812252163887, -0.003011812688782811, -0.0007585985003970563, -9.775113539944869e-06, -2.8371408916427754e-05, -0.23149122297763824, -1.1387534141540527, -0.034146588295698166, -0.2773222327232361, -1.490105023549404e-05, -4.660974445869215e-05, -0.439788818359375, -0.010490983724594116, -0.10757404565811157, -1.471883773803711, -0.35856667160987854, -4.51792984677013e-05, -0.01036298368126154, -0.06243070587515831, -0.11064372956752777, -4.8993817472364753e-05, -0.00014208737411536276, -0.02325429767370224, -0.000686767278239131, -0.00011193125828867778, -0.01046396978199482, -0.028264805674552917, -9.214453893946484e-05, -0.009966373443603516, -0.00043501926120370626, -7.033323527139146e-06, -1.0967194612021558e-05, -1.8199512958526611, -1.149416446685791, -4.768370445162873e-07, -7.152555099310121e-07, -4.1126360883936286e-05, -0.00031394799589179456, -0.08408927917480469], "finish_reason": "stop"}], "metrics": {"energy": 166.39365510463716, "energy_per_token": 1.0335009633828396, "time": 7.158655, "time_per_token": 0.04446369565217392}}
{"outputs": [{"text": "df = dataframe\n    texts = df[text_column]\n    texts = texts.apply(lambda x: ' '.join(re.findall(r'\\w+', str(x))))\n    texts = texts.apply(lambda x: x.lower())\n    texts = texts.apply(lambda x: re.sub(r'\\d+', ' ', x))\n    texts = texts.apply(lambda x: re.sub(r'[^\\w\\s]+', '', x))\n    texts = texts.apply(lambda x: re.sub(r'\\s+', ' ', x))\n    vectorizer = CountVectorizer(stop_words='english', token_pattern=r'\\S+')\n    vectorized = vectorizer.fit_transform(texts)\n\n    result = pd.DataFrame(vectorized.toarray(),\n                          index=texts.index,\n                          columns=vectorizer.get_feature_names_out())\n    return result", "tokens": ["df", " =", " data", "frame", "\n", "    ", "text", "s", " =", " df", "[", "text", "_", "column", "]", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " str", "(", "x", "))", "))", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " x", ".", "lower", "())", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " '", " '", ",", " x", "))", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]+", "'", ",", " ''", ",", " x", "))", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " x", "))", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", " token", "_", "pattern", "=", "r", "'\\", "S", "+", "')", "\n", "    ", "vector", "ized", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "vector", "ized", ".", "to", "array", "()", ",", "\n", "                ", "          ", "index", "=", "text", "s", ".", "index", ",", "\n", "                ", "          ", "columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-3.04194974899292, -0.08594967424869537, -0.30203965306282043, -0.00010418349120300263, -1.3582351207733154, -0.33591723442077637, -2.3999242782592773, -1.5393879413604736, -0.013759642839431763, -0.11840590834617615, -0.12913091480731964, -0.002568162977695465, -4.339123915997334e-05, -9.179073458653875e-06, -0.0009400001727044582, -0.5277297496795654, -0.6729321479797363, -1.5276583433151245, -0.0332234650850296, -0.19579406082630157, -0.1751212179660797, -0.01600595749914646, -1.3444063663482666, -0.01957339607179165, -0.30137476325035095, -0.10958853363990784, -0.0011299422476440668, -2.0134010314941406, -0.0037882011383771896, -0.0007231004419736564, -0.00010799778101500124, -0.26051753759384155, -0.25563132762908936, -0.0001528146385680884, -0.13299065828323364, -4.6491513785440475e-06, -0.09921491146087646, -0.03835098817944527, -0.2614617645740509, -0.03500071540474892, -0.019274676218628883, -2.5629668016335927e-05, -1.5061992406845093, -0.0021049263887107372, -0.0052458494901657104, -0.5051332116127014, -0.001608031801879406, -0.16922028362751007, -0.24096007645130157, -0.6223734617233276, -0.005279645789414644, -0.02426043525338173, -0.14923478662967682, -0.0049128057435154915, -0.7597213983535767, -0.0020672159735113382, -0.06872188299894333, -0.013852056115865707, -0.0005822870298288763, -0.975821852684021, -0.004906281363219023, -0.2637990415096283, -0.06060274317860603, -0.037780072540044785, -0.10148876905441284, -0.23655222356319427, -0.002169043058529496, -0.013107799924910069, -0.04057084023952484, -0.0023053516633808613, -0.08542478084564209, -0.0009800160769373178, -0.014686803333461285, -0.002284300047904253, -0.00019178935326635838, -0.9564599394798279, -0.0015868464251980186, -0.053227558732032776, -0.22190949320793152, -0.018478158861398697, -0.9286648035049438, -1.0130736827850342, -0.10032067447900772, -4.708655978902243e-05, -1.2391055822372437, -0.05396684259176254, -0.0006189814303070307, -0.061754703521728516, -0.01513567753136158, -0.0405753068625927, -0.025783486664295197, -0.08650894463062286, -0.0008335214806720614, -0.0040646325796842575, -0.011070732958614826, -0.00028463127091526985, -0.01110763382166624, -0.00028272447525523603, -0.0022961937356740236, -0.0006810491322539747, -6.23445157543756e-05, -0.22234204411506653, -0.0006181474891491234, -0.004008117597550154, -0.08929756283760071, -0.0069001722149550915, -0.25224441289901733, -0.06240125373005867, -0.2239135354757309, -0.0031781899742782116, -0.10346028953790665, -0.0017119289841502905, -2.382154941558838, -0.024844001978635788, -6.782778655178845e-05, -1.8215060234069824, -7.974783511599526e-05, -0.005011141300201416, -0.00835293997079134, -0.016997961327433586, -0.07887465506792068, -0.2498520165681839, -0.001972754718735814, -0.009120351634919643, -0.03415718674659729, -0.0008874768391251564, -0.015318834222853184, -0.0009752523037604988, -0.006865483243018389, -0.0010212211636826396, -0.00017331528943032026, -1.2331840991973877, -0.0011024356354027987, -0.04722202569246292, -0.08643776923418045, -0.010434477590024471, -0.18172259628772736, -0.03159748762845993, -0.08844679594039917, -5.4238757002167404e-05, -0.02043655514717102, -0.0025653094053268433, -0.00024005869636312127, -0.008337335661053658, -0.033019110560417175, -0.06443977355957031, -0.16037876904010773, -3.1688601970672607, -0.058118030428886414, -0.001517931348644197, -0.00045170116936787963, -1.168244216387393e-05, -2.9205850296420977e-05, -0.3288154602050781, -0.2808796465396881, -0.0005844315164722502, -5.1377883210079744e-05, -0.9230406880378723, -0.006656733341515064, -1.9073468138230965e-06, -1.2771888971328735, -0.0005364171229302883, -1.6524367332458496, -0.1282927393913269, -0.0166111271828413, -0.4839989244937897, -0.12081271409988403, -0.2267829179763794, -2.9493026733398438, -1.3423573970794678, -0.025312168523669243, -0.01064479909837246, -0.0214750487357378, -1.0199745893478394, -1.0398318767547607, -1.2134547233581543, -0.02288781851530075, -9.619726915843785e-05, -6.186770770000294e-05, -0.020269636064767838, -0.0018066527554765344, -0.00012027494085486978, -0.0026298719458281994, -0.014260878786444664, -9.905801562126726e-05, -0.06108272820711136, -0.052336033433675766, -2.9267327785491943, -0.0012050755321979523, -1.8111084699630737, -0.06227278336882591, -0.01732981763780117, -0.000302030734019354, -0.0068702190183103085, -0.04165668413043022, -0.3614944815635681, -0.003127447795122862, -0.007972680032253265, -0.500321090221405, -0.0027891802601516247, -0.021185997873544693, -0.01785620115697384, -2.402287006378174, -0.008736010640859604, -0.15862099826335907, -1.0029335021972656, -0.03728784993290901, -1.7785892486572266, -0.002105521271005273, -0.0038671724032610655, -0.006242301780730486, -0.005129391793161631, -0.08069462329149246, -0.00012063252506777644, -0.0008485292200930417, -0.0008666335488669574, -0.4108906090259552, -0.05150202661752701, -0.0013155624037608504, -9.905801562126726e-05, -0.00674246484413743, -1.311301275563892e-06, -0.00017128908075392246, -1.1920928244535389e-07, -0.0019760860595852137, -1.7161204814910889, -5.054346183896996e-05, -0.13905273377895355, -0.05723198130726814, -0.7444515824317932, -0.36540597677230835, -0.0199287049472332, -1.144702434539795, -0.017137888818979263, -0.9855133295059204], "finish_reason": "stop"}], "metrics": {"energy": 253.02860741615305, "energy_per_token": 1.0767174783666087, "time": 10.722481, "time_per_token": 0.045627578723404255}}
{"outputs": [{"text": "df = dataframe.copy()\n    vectorizer = CountVectorizer(stop_words='english')\n\n    # Remove stopwords from dataframe\n    for col in df[text_column]:\n        col = ' '.join(\n            [word for word in re.sub(r\"[^\\w\\s]\", \" \", col).split() if word.lower() not in STOPWORDS])\n        col = re.sub(r'\\b[a-z]\\b', \"\", col)  # Removes single character words\n        df.loc[df.index, text_column] = vectorizer.fit_transform([col])\n\n    return df", "tokens": ["df", " =", " data", "frame", ".", "copy", "()", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " data", "frame", "\n", "    ", "for", " col", " in", " df", "[", "text", "_", "column", "]:", "\n", "        ", "col", " =", " '", " '", ".", "join", "(", "\n", "            ", "[", "word", " for", " word", " in", " re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", " \"", ",", " col", ")", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "col", " =", " re", ".", "sub", "(", "r", "'\\", "b", "[", "a", "-", "z", "]\\", "b", "'", ",", " \"", "\"", ",", " col", ")", "  ", "#", " Rem", "oves", " single", " character", " words", "\n", "        ", "df", ".", "loc", "[", "df", ".", "index", ",", " text", "_", "column", "]", " =", " vector", "izer", ".", "fit", "_", "transform", "([", "col", "])", "\n", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-3.04194974899292, -0.08594967424869537, -0.30203965306282043, -0.00010418349120300263, -0.4125221371650696, -0.021053407341241837, -0.058790091425180435, -0.07253126800060272, -0.4940607249736786, -2.8848915100097656, -0.05103055760264397, -0.003477005288004875, -0.002802256727591157, -1.0609570381348021e-05, -1.3351351299206726e-05, -0.372281551361084, -0.3456384837627411, -0.0007304860628210008, -7.772143726469949e-05, -1.1966792345046997, -0.00885157659649849, -3.4570634852570947e-06, -0.8802229762077332, -0.0346662700176239, -1.5665087699890137, -0.0008931938209570944, -0.6022928953170776, -1.6324918270111084, -1.0788954496383667, -0.09077659994363785, -1.8176171779632568, -3.261472225189209, -0.331161767244339, -0.44601041078567505, -0.0018308082362636924, -2.4184021949768066, -1.4728429317474365, -0.10464093834161758, -0.19229108095169067, -0.3715284764766693, -0.008379656821489334, -9.775113539944869e-06, -1.8596476365928538e-05, -0.8993000388145447, -0.005109822377562523, -0.007350069470703602, -1.565617561340332, -0.47404026985168457, -2.483928680419922, -0.0033559452276676893, -0.007878419943153858, -0.002097075106576085, -1.075966715812683, -1.6563425064086914, -0.009554374031722546, -0.5704582333564758, -0.48825377225875854, -0.093941830098629, -0.0015788720920681953, -0.0013386583887040615, -0.6239900588989258, -0.00010895135346800089, -0.2785663306713104, -0.20022591948509216, -0.21023790538311005, -1.218522310256958, -0.5087478160858154, -0.7816264033317566, -0.002976156771183014, -0.5739858150482178, -0.0040671261958777905, -0.06455466896295547, -0.00021264675888232887, -0.10289838165044785, -0.8519983291625977, -0.00011729506513802335, -0.275566428899765, -0.058218806982040405, -0.012381593696773052, -0.3215877115726471, -0.037229735404253006, -0.05166007578372955, -0.06767195463180542, -0.8484706282615662, -0.041222989559173584, -0.0021038558334112167, -0.008121324703097343, -3.242440288886428e-05, -0.010039783082902431, -3.576278118089249e-07, -3.4570634852570947e-06, -4.0531076592742465e-06, -2.6464111215318553e-05, -0.030826102942228317, -0.036245767027139664, -0.1583622843027115, -1.8656930923461914, -0.05116274580359459, -0.7891845107078552, -0.0011944787111133337, -0.029191473498940468, -0.10416143387556076, -0.03854519501328468, -1.8596075773239136, -1.5755819082260132, -1.3472636938095093, -0.5197311639785767, -0.028928039595484734, -0.002202943665906787, -1.5513665676116943, -0.7971428632736206, -0.0792817547917366, -3.8265450712060556e-05, -2.251878499984741, -0.32855233550071716, -0.0012279358925297856, -0.03469862416386604, -0.10483868420124054, -2.6814682483673096, -0.002303924411535263, -2.425884962081909, -0.3505338430404663, -0.9178320169448853, -2.931389331817627, -0.1240251287817955, -0.2920055687427521, -0.13744325935840607, -0.8827688097953796, -1.722128987312317, -0.4371921420097351, -0.019596191123127937, -0.1785368025302887, -1.386582374572754, -0.012053391896188259, -0.012526641599833965, -0.2664283215999603, -1.2040065485052764e-05, -9.059865078597795e-06, -0.0069354516454041, -0.002687416272237897, -0.39342236518859863, -0.0009177286992780864, -0.0003280101518612355, -0.04418360814452171, -0.0022864409256726503, -0.00019405389321036637, -1.8030675649642944, -0.013914483599364758, -0.04860515519976616, -0.7309161424636841, -0.5149519443511963, -0.007745944429188967, -0.08139894157648087, -0.20651046931743622, -1.5039458274841309, -0.009143504314124584, -0.795369029045105], "finish_reason": "stop"}], "metrics": {"energy": 164.3169492816926, "energy_per_token": 1.0466047724948573, "time": 6.9494734, "time_per_token": 0.04426416178343949}}
{"outputs": [{"text": "# Check if pandas or scikit learn is installed.\n    if 'pandas' not in globals():\n        raise ImportError('This function requires pandas and scikit-learn to be installed.')\n\n    # Clean text from special characters.\n    text_column_cleaned = dataframe[text_column].str.replace(r'[^\\w]', ' ', regex=True)\n    text_column_cleaned = text_column_cleaned.str.lower()\n    text_column_cleaned = text_column_cleaned.str.replace(r'[\\d]', ' ', regex=True)\n    text_column_cleaned = text_column_cleaned.str.replace(r'\\s+', ' ', regex=True)\n\n    # Split text by whitespace and remove stopwords.\n    words = text_column_cleaned.str.split()\n    words = [w for w in words if w not in STOPWORDS]\n    # Create a vectorized count matrix for the words.\n    cv = CountVectorizer()\n    cv_matrix = cv.fit_transform(words)\n    #", "tokens": ["#", " Check", " if", " pandas", " or", " sc", "ik", "it", " learn", " is", " installed", ".", "\n", "    ", "if", " '", "pand", "as", "'", " not", " in", " glob", "als", "():", "\n", "        ", "raise", " Import", "Error", "('", "This", " function", " requires", " pandas", " and", " sc", "ik", "it", "-", "learn", " to", " be", " installed", ".", "')", "\n", "\n", "    ", "#", " Clean", " text", " from", " special", " characters", ".", "\n", "    ", "text", "_", "column", "_", "cleaned", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "text", "_", "column", "_", "cleaned", " =", " text", "_", "column", "_", "cleaned", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "column", "_", "cleaned", " =", " text", "_", "column", "_", "cleaned", ".", "str", ".", "replace", "(", "r", "'", "[\\", "d", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "text", "_", "column", "_", "cleaned", " =", " text", "_", "column", "_", "cleaned", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Split", " text", " by", " whites", "pace", " and", " remove", " stop", "words", ".", "\n", "    ", "words", " =", " text", "_", "column", "_", "cleaned", ".", "str", ".", "split", "()", "\n", "    ", "words", " =", " [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "    ", "#", " Create", " a", " vector", "ized", " count", " matrix", " for", " the", " words", ".", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "()", "\n", "    ", "cv", "_", "matrix", " =", " cv", ".", "fit", "_", "transform", "(", "words", ")", "\n", "    ", "#"], "logprobs": [-0.6648897528648376, -3.7540998458862305, -1.4148727655410767, -1.521530270576477, -3.1404099464416504, -1.802141547203064, -0.046691425144672394, -0.00700494134798646, -2.437039852142334, -0.739125669002533, -0.4359619915485382, -2.537381172180176, -0.3118308484554291, -0.010263049043715, -1.072197437286377, -2.3376922607421875, -0.1350276619195938, -8.702239938429557e-06, -0.0008956949459388852, -0.16425442695617676, -0.0010021670022979379, -1.0706603527069092, -0.0002426806604489684, -1.313406229019165, -0.017752913758158684, -0.0009115354623645544, -0.1336662918329239, -0.2956206798553467, -0.002227684250101447, -0.827871561050415, -3.242554187774658, -0.7503044009208679, -0.10016851127147675, -0.516938328742981, -0.49946990609169006, -0.27065324783325195, -0.0006786665762774646, -0.006676390767097473, -0.9186080098152161, -0.0004707658663392067, -0.47943946719169617, -0.012053273618221283, -0.014320695772767067, -0.15370289981365204, -0.3321777880191803, -0.0017433458706364036, -0.7541839480400085, -0.00032944019767455757, -0.3686227798461914, -4.409639835357666, -1.2604408264160156, -2.925201892852783, -2.750964641571045, -0.07102341949939728, -2.771437168121338, -0.018846724182367325, -0.0027733694296330214, -1.6493746042251587, -0.9157990217208862, -0.23262424767017365, -1.267054557800293, -1.6481757164001465, -0.00824145507067442, -0.5491421222686768, -3.516612196108326e-05, -0.02791638858616352, -0.002667323686182499, -2.7418097943154862e-06, -9.059865078597795e-06, -0.0029126862064003944, -0.017045309767127037, -0.8379122614860535, -0.0007823029300197959, -0.07912767678499222, -0.40623942017555237, -0.15208908915519714, -0.37259188294410706, -0.07360988855361938, -0.35120588541030884, -0.00968483928591013, -2.0186617374420166, -0.02028493955731392, -9.30981186684221e-05, -0.20055773854255676, -0.07330305874347687, -0.4155881404876709, -0.0063270023092627525, -0.0019812018144875765, -0.0019710890483111143, -0.007098454982042313, -0.13752076029777527, -1.5458136796951294, -0.6571581363677979, -0.023795034736394882, -0.019808335229754448, -0.01211133785545826, -0.035706777125597, -0.10106022655963898, -0.2284606248140335, -0.00044252615771256387, -8.606540359323844e-05, -0.0003779412363655865, -0.00011216964776394889, -0.0007397775771096349, -0.07323846966028214, -9.727005090098828e-05, -2.1931793689727783, -0.0024227334652096033, -0.24712349474430084, -0.9966156482696533, -0.3496798574924469, -0.019242987036705017, -0.021366765722632408, -0.003300340613350272, -0.025658590719103813, -0.054035961627960205, -0.24076566100120544, -0.00022480344341602176, -0.0001854724541772157, -0.009679644368588924, -0.000714523543138057, -0.001167331007309258, -0.08508236706256866, -0.00048744716332294047, -0.38211479783058167, -0.32239124178886414, -0.05293714255094528, -1.2639529705047607, -2.1633729934692383, -1.1135133504867554, -0.9349730610847473, -0.009771609678864479, -0.0002954761730507016, -0.21182562410831451, -0.05649454891681671, -0.024876793846488, -0.0007599088130518794, -0.0003687655262183398, -0.00834348239004612, -0.0008300673216581345, -0.028364000841975212, -0.5981407761573792, -0.14265276491641998, -0.004417541902512312, -0.006713809445500374, -0.0006561510381288826, -0.005998940207064152, -0.02072710543870926, -0.12982937693595886, -9.798523387871683e-05, -6.270212179515511e-05, -0.0005508335889317095, -0.0005022218101657927, -0.0007333449902944267, -0.08240184187889099, -0.0003491030656732619, -0.14401216804981232, -0.11728870123624802, -0.03773702681064606, -0.6085546612739563, -0.06063371151685715, -0.4229496419429779, -6.770858453819528e-05, -0.01039224211126566, -0.0032150268089026213, -0.08053229749202728, -0.0009243983076885343, -0.00014602071314584464, -0.004305973183363676, -0.0007776573766022921, -0.35114631056785583, -0.506659746170044, -0.0005718026659451425, -0.05082504823803902, -1.962539792060852, -0.5650269985198975, -2.7122085094451904, -1.4212487936019897, -0.08922342211008072, -1.4609030485153198, -0.7470998764038086, -0.38881033658981323, -0.11398976296186447, -0.2395036518573761, -0.004140851553529501, -0.001101244823075831, -1.7189662456512451, -0.21811555325984955, -1.0095462799072266, -0.00018749863374978304, -7.199982064776123e-05, -0.00014029949670657516, -0.0003716255014296621, -0.005205055233091116, -0.8108527064323425, -0.0003601856005843729, -0.08639676123857498, -0.35644403100013733, -0.1421031504869461, -0.09175796806812286, -0.26983997225761414, -0.16013513505458832, -0.3349583148956299, -1.7986118793487549, -0.05242212489247322, -0.01811612956225872, -0.00235363794490695, -0.03075559064745903, -0.061885930597782135, -0.10938424617052078, -0.18327739834785461, -1.9073468138230965e-06, -0.006524096243083477, -3.576278118089249e-07, -1.597391747054644e-05, -1.5497195136049413e-06, -3.6000557884108275e-05, -0.018216101452708244, -0.0037108862306922674, -1.4127662181854248, -2.4595463275909424, -1.766424298286438, -0.4659968912601471, -2.2600317001342773, -2.677103042602539, -1.5998120307922363, -1.0747971534729004, -3.1148977279663086, -1.0649471282958984, -0.8351824879646301, -0.3613285422325134, -0.005011497065424919, -0.0034132099244743586, -1.8606173992156982, -0.019243337213993073, -0.00031716562807559967, -1.1444026313256472e-05, -2.8967437174287625e-05, -0.7802912592887878, -0.017867326736450195, -0.011785168200731277, -0.49252885580062866, -0.3988214135169983, -0.15213291347026825, -0.003401567228138447, -0.0003194298769813031, -3.9219088648678735e-05, -0.00271904026158154, -0.00032824851223267615, -5.328513361746445e-05, -0.0007566926069557667, -0.001699671265669167, -0.0014573440421372652, -0.054083168506622314, -0.5608642101287842, -0.9739174246788025], "finish_reason": "length"}], "metrics": {"energy": 270.9449783935546, "energy_per_token": 1.0583788218498227, "time": 11.561407, "time_per_token": 0.04516174609375}}
