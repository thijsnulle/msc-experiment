{"outputs": [{"text": "# Check if the text_column exists in the DataFrame\n    if text_column not in dataframe:\n        raise ValueError(f\"The column '{text_column}' does not exist in the DataFrame.\")\n\n    # Select the text column for processing\n    text_data = dataframe[text_column].tolist()\n\n    # Remove stop words, numbers, and punctuation\n    stopwords = set(STOPWORDS)\n    processed_data = []\n    for text in text_data:\n        # Remove punctuation\n        text = re.sub(r'[^\\w\\s]', '', text)\n\n        # Convert to lowercase\n        text = text.lower()\n\n        # Remove stop words and numbers\n        words = [word for word in text.split() if word not in stopwords and not word.isdigit()]\n\n        # Append the processed words to the processed data list\n        processed_data.append(' '.join(words))\n\n    # Create a vectorizer\n    vectorizer = CountVectorizer()\n\n    # Fit the data to the vectorizer\n    ", "tokens": ["#", " Check", " if", " the", " text", "_", "column", " exists", " in", " the", " Data", "Frame", "\n", "    ", "if", " text", "_", "column", " not", " in", " data", "frame", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " column", " '", "{", "text", "_", "column", "}'", " does", " not", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "#", " Select", " the", " text", " column", " for", " processing", "\n", "    ", "text", "_", "data", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "tol", "ist", "()", "\n", "\n", "    ", "#", " Remove", " stop", " words", ",", " numbers", ",", " and", " punct", "uation", "\n", "    ", "stop", "words", " =", " set", "(", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "processed", "_", "data", " =", " []", "\n", "    ", "for", " text", " in", " text", "_", "data", ":", "\n", "        ", "#", " Remove", " punct", "uation", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "        ", "#", " Convert", " to", " lower", "case", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "        ", "#", " Remove", " stop", " words", " and", " numbers", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " stop", "words", " and", " not", " word", ".", "is", "digit", "()", "]", "\n", "\n", "        ", "#", " App", "end", " the", " processed", " words", " to", " the", " processed", " data", " list", "\n", "        ", "processed", "_", "data", ".", "append", "('", " '", ".", "join", "(", "words", "))", "\n", "\n", "    ", "#", " Create", " a", " vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "\n", "    ", "#", " Fit", " the", " data", " to", " the", " vector", "izer", "\n", "    "], "logprobs": [-0.5079585313796997, -3.1975173950195312, -0.5125638246536255, -0.49434733390808105, -1.5831630229949951, -0.1775115728378296, -0.0016553997993469238, -0.511437177658081, -0.0595068521797657, -0.007093247026205063, -0.37070566415786743, -0.0031125929672271013, -0.02646682597696781, -0.0005466635921038687, -0.01898159831762314, -0.015475664287805557, -3.576272320060525e-06, -2.0265558760002023e-06, -0.011375920847058296, -4.768370445162873e-07, -0.022118661552667618, -2.3841830625315197e-06, -2.864393472671509, -0.0003698380314745009, -0.0005567907355725765, -0.1367478221654892, -0.22180971503257751, -4.6491513785440475e-06, -0.023210039362311363, -0.3318992853164673, -0.03153211250901222, -1.5900367498397827, -0.7183309197425842, -0.09356746822595596, -0.0001722425949992612, -8.999896090244874e-05, -2.7418097943154862e-06, -0.0003026265767402947, -0.0019019624451175332, -0.07801773399114609, -0.00019298121333122253, -0.00033468366018496454, -0.016263317316770554, -0.001341991825029254, -0.10898622870445251, -0.0008661571191623807, -0.08597516268491745, -0.01518851425498724, -0.0004478881892282516, -4.327203714638017e-05, -0.0261305570602417, -0.0005821678787469864, -0.07383468002080917, -3.730884075164795, -0.10571219027042389, -1.3846263885498047, -0.7763726115226746, -3.166530132293701, -0.5378126502037048, -0.03885415568947792, -7.4741430580616e-05, -0.3370320796966553, -0.8775541186332703, -0.3599354922771454, -0.003119604429230094, -0.008571500889956951, -3.576278118089249e-07, -0.04049494490027428, -0.0007420408655889332, -4.768370445162873e-07, -7.152531907195225e-06, -0.00016711745411157608, -1.817579984664917, -2.3185226917266846, -0.00022837892174720764, -0.0001426833332516253, -0.0049200416542589664, -0.027401654049754143, -0.00019751029321923852, -0.017453180626034737, -1.477065086364746, -0.22885563969612122, -2.2906017303466797, -0.4127575159072876, -0.12482838332653046, -0.07344751060009003, -0.020739248022437096, -0.02677118219435215, -0.00939791090786457, -0.5054749846458435, -0.000746448349673301, -3.252944231033325, -1.099691390991211, -0.11937165260314941, -0.6190062761306763, -0.0010155049385502934, -0.013311914168298244, 0.0, -3.2305197237292305e-05, 0.0, 0.0, -0.005081357900053263, -0.13140003383159637, -0.1083085760474205, -1.7820502519607544, -0.007357288151979446, -1.665815830230713, -0.0011436357162892818, -0.2039521187543869, -0.0019093393348157406, -0.09198568016290665, -0.03485843166708946, -0.2562692165374756, -0.005315694026648998, -0.0010825494537129998, -2.3841855067985307e-07, -2.622600959512056e-06, -6.782778655178845e-05, -0.00039867559098638594, -0.00083078199531883, -0.29686057567596436, -1.5382188558578491, -2.582226514816284, -0.005131170619279146, -0.8441362380981445, -0.0002636561985127628, -0.18273070454597473, -0.10746420174837112, -0.017430804669857025, -5.4238757002167404e-05, -0.0005372511222958565, -0.04535086825489998, -0.005626081023365259, -0.20745418965816498, -0.0014546061865985394, -0.013810906559228897, -5.411955135059543e-05, -0.00010156115604331717, -5.090107151772827e-05, -0.008947516791522503, -0.0002946419408544898, -1.0847986231965479e-05, -0.1614399552345276, -2.1934269170742482e-05, -0.06276462227106094, -0.12175049632787704, -0.011610318906605244, -1.1924397945404053, -0.00023707917716819793, -0.02013283409178257, -1.328420639038086, -0.46364232897758484, -0.0025138226337730885, -0.03701264038681984, -0.40126538276672363, -2.95634672511369e-05, -0.00868921261280775, -0.0032043324317783117, -0.001873882138170302, -4.887569048150908e-06, -0.0009192770230583847, -5.245195097813848e-06, -0.00732604693621397, -0.006214935332536697, -6.758938252460212e-05, -0.011105158366262913, -0.6538683772087097, -0.08956147730350494, -0.17753802239894867, -0.6472275853157043, -0.01996528171002865, -0.01043117418885231, -7.199982064776123e-05, -0.5153254866600037, -0.003287508385255933, -0.29989302158355713, -0.002176180249080062, -0.0033208958338946104, -4.172316494077677e-06, -1.2993727978027891e-05, -0.04174232482910156, -4.434487345861271e-05, -0.0025617422070354223, -0.008478834293782711, -0.053187206387519836, -0.0392444021999836, -0.06154835969209671, -2.9802276912960224e-06, -0.0012763934209942818, -8.940656698541716e-06, -0.011151960119605064, -0.0018318791408091784, -0.12705278396606445, -0.00023755589791107923, -0.00018630675913300365, -0.13511744141578674, -1.9430925021879375e-05, -0.0027390127070248127, -0.0002530493075028062, -0.09088382124900818, -5.6503606174374e-05, -0.28218522667884827, -1.5401196479797363, -7.843663479434326e-05, -0.4174359440803528, -0.26627781987190247, -1.214888334274292, -0.0482301339507103, -0.01258656196296215, -1.8897591829299927, -1.8993396759033203, -0.4536542296409607, -0.0021360930986702442, -2.7179348762729205e-05, -0.0009785869624465704, -4.410734163684538e-06, -0.0005116345710121095, -0.003410596400499344, -0.004436175338923931, -0.43294376134872437, -0.0008762810612097383, -5.280832192511298e-05, -0.0001134808044298552, -0.00021860594279132783, -0.0002307625545654446, -0.0002708068350329995, -0.0006426891195587814, -0.0009274948388338089, -0.0003367095487192273, -0.004588788375258446, -2.3034191131591797, -0.19217097759246826, -1.1081314086914062, -0.010553267784416676, -1.7368102073669434, -0.00011216964776394889, -0.013940111733973026, -0.00025293012731708586, -0.00011264643399044871, -0.000270091783022508, -1.4305104514278355e-06, -1.5497195136049413e-06, -0.27687108516693115, -0.0062547409906983376, -0.07641123980283737, -3.7431014789035544e-05, -0.00046230596490204334, -0.6906667947769165, -2.3738486766815186, -2.7361555099487305, -0.8939504027366638, -0.0350605733692646, -0.0020537730306386948, -0.00011765264935093, -0.16327449679374695, -3.6954195820726454e-05], "finish_reason": "length"}], "metrics": {"energy": 1246.0464945945746, "energy_per_token": 4.867369119510057, "time": 33.76635, "time_per_token": 0.1318998046875}}
{"outputs": [{"text": "# Remove stopwords\n    stopwords_regex = r'\\b(' + r'\\b|\\b'.join(STOPWORDS) + r'\\b)'\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: re.sub(stopwords_regex, '', x, flags=re.IGNORECASE) if x is not None else '')\n\n    # Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: re.sub(r'[0-9]+', '', x) if x is not None else '')\n\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: re.sub(r'[^\\w\\s]', '', x) if x is not None else '')\n\n    # Convert to lowercase\n    dataframe[text_column] = dataframe[text_column].str.lower()\n\n    # Vectorization\n    vectorizer = CountVectorizer(\n        lowercase=", "tokens": ["#", " Remove", " stop", "words", "\n", "    ", "stop", "words", "_", "regex", " =", " r", "'\\", "b", "('", " +", " r", "'\\", "b", "|\\", "b", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "'\\", "b", ")'", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "stop", "words", "_", "regex", ",", " ''", ",", " x", ",", " flags", "=", "re", ".", "IGN", "ORE", "C", "ASE", ")", " if", " x", " is", " not", " None", " else", " '", "')", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "0", "-", "9", "]+", "'", ",", " ''", ",", " x", ")", " if", " x", " is", " not", " None", " else", " '", "')", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", ")", " if", " x", " is", " not", " None", " else", " '", "')", "\n", "\n", "    ", "#", " Convert", " to", " lower", "case", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "\n", "        ", "low", "erc", "ase", "="], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -1.013405442237854, -0.0022819212172180414, -2.3961100578308105, -0.7384104132652283, -1.0452781915664673, -2.0212459564208984, -0.017358873039484024, -0.8231327533721924, -0.0877113938331604, -0.0014319891342893243, -0.10090548545122147, -0.0021893836092203856, -0.015488809905946255, -2.1195662021636963, -0.29970821738243103, -0.3316553235054016, -1.3112935448589269e-05, -0.0001137191939051263, -5.352353764465079e-05, -1.3470558769768104e-05, -0.004018803592771292, -0.22500234842300415, 0.0, -1.1444026313256472e-05, 0.0, 0.0, -0.0012465096078813076, -0.00026353701832704246, -0.003053647233173251, -0.25595834851264954, -3.6954811548639555e-06, -0.24776768684387207, -0.007669881451874971, -0.04823876544833183, -0.27766916155815125, -0.008441008627414703, -0.6016368269920349, -0.04257902503013611, -9.417489309271332e-06, -2.145764938177308e-06, -0.0066838511265814304, -0.0029143502470105886, -0.004220270086079836, -7.152555099310121e-07, -0.0012543675256893039, -0.0014556775568053126, -9.536738616588991e-07, -3.3378546504536644e-06, -0.0002108589978888631, -0.0009983561467379332, -1.5607761144638062, -0.0002972637885250151, -0.6979405283927917, -0.006350456736981869, -0.00023767507809679955, -0.021800989285111427, -0.00012385078298393637, -0.002730690874159336, -6.794906312279636e-06, -0.0004934046883136034, -0.005324350204318762, -0.009900984354317188, -1.4305104514278355e-06, -1.5497195136049413e-06, -1.4305104514278355e-06, -0.0006291079334914684, -0.9736222624778748, -2.276871418871451e-05, -0.06601705402135849, -1.5284135341644287, -0.000898077036254108, -0.0007440659101121128, -2.3841574147809297e-05, -1.1920922133867862e-06, -0.10682129859924316, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07, -2.552321434020996, -2.3377976417541504, -1.2443928718566895, -0.6559476852416992, -0.0002366024418734014, -0.07460104674100876, -0.01650911755859852, -1.898650884628296, -0.007657223381102085, -0.006644062697887421, -0.11144500970840454, -0.000129691296024248, -0.0013187768636271358, -0.04020046442747116, -0.07752065360546112, -0.40767860412597656, -0.00017641419253777713, -0.028633374720811844, -1.6212332411669195e-05, -0.00278632715344429, -0.0001629458274692297, -8.344646857949556e-07, -3.3378546504536644e-06, -0.00016318420239258558, -0.000695344409905374, -0.0006865289760753512, 0.0, -0.0003406421164982021, -0.00015186110977083445, -5.960462772236497e-07, -1.6331539882230572e-05, -2.7417760065873154e-05, -0.0002325502864550799, -0.12214409559965134, -0.00017355366435367614, -0.788995087146759, -0.00038342276820912957, -5.054346183896996e-05, -0.004561258014291525, -2.8013790142722428e-05, -0.020602744072675705, -2.50339189733495e-06, -0.00028200942324474454, -0.060372259467840195, -0.005255454685539007, -2.0527970790863037, -0.09704060107469559, -0.010486501269042492, -0.0006256530177779496, -1.2755313036905136e-05, -0.20595896244049072, -0.011447342112660408, -0.00037901371251791716, -0.013262154534459114, -1.0609570381348021e-05, -0.0025159630458801985, -0.20728231966495514, -0.0037459221202880144, -0.002314509591087699, -0.0003500564198475331, -7.271740287251305e-06, -6.6756979322235566e-06, -0.0004551566671580076, -0.0035127620212733746, -0.000144709600135684, -0.0018254535971209407, -0.008634140715003014, -0.00012408917245920748, -0.00046135272714309394, -0.01981043815612793, -0.021143164485692978, -0.0219067744910717, -0.060732439160346985, -0.0002195594133809209, -0.1345166563987732, -1.1920858014491387e-05, -0.0010644490830600262, -7.509902934543788e-05, -3.576278118089249e-07, -4.768370445162873e-07, -0.00014602071314584464, -0.0002687808300834149, -0.000310730334604159, 0.0, -0.00017391123401466757, -6.580135959666222e-05, 0.0, -6.329813186312094e-05, -4.410734163684538e-06, -0.0001829695247579366, -0.009799232706427574, -0.00010227633902104571, -0.07974867522716522, -0.0002610342635307461, -0.00012659224739763886, -0.0009211826254613698, -9.179073458653875e-06, -0.017742140218615532, -4.768370445162873e-07, -6.139089964563027e-05, -0.008673494681715965, -0.00923221092671156, -0.03820068761706352, -0.007036429364234209, -0.027059782296419144, -0.0006171943969093263, -0.0019449143437668681, -3.7788631743751466e-05, -0.013722838833928108, -0.0011659021256491542, -4.7444173105759546e-05, -0.040845759212970734, -1.7404405298293568e-05, -0.0023203373420983553, -0.07236085087060928, -0.013695676811039448, -9.583967766957358e-05, -5.1616290875244886e-05, -9.65590606938349e-06, -6.079655122448457e-06, -0.00011848701251437888, -0.002058769576251507, -3.0517112463712692e-05, -0.0016615884378552437, -0.007560449652373791, -0.00019274283840786666, -0.017510229721665382, -1.3436356782913208, -0.9728521108627319, -0.18127936124801636, -0.05658050626516342, -0.07256220281124115, -9.512448741588742e-05, -0.004028539638966322, -1.0251946150674485e-05, -0.0036904579028487206, -0.00010108436981681734, -8.344646857949556e-07, -1.168244216387393e-05, -0.0002840353990904987, -0.0009211826254613698, -0.0006942722829990089, -2.3841830625315197e-06, -0.000205018965061754, -7.533743337262422e-05, -3.576278118089249e-07, -3.933898824470816e-06, -7.748573807475623e-06, -5.709961988031864e-05, -0.21288055181503296, -7.152531907195225e-06, -0.0013524680398404598, -0.0001209901092806831, -0.01562742330133915, -0.005154178477823734, -0.00017307691450696439, -0.017216047272086143, -1.2242765426635742, -0.7134534120559692, -0.45092856884002686, -0.002838750835508108, -0.3197063207626343, -0.018291015177965164, -0.0011461363174021244, -0.0003738896339200437, -1.4305104514278355e-06, -2.145764938177308e-06, -0.5437638759613037, -2.104762315750122, -0.007781785447150469, -2.4468069076538086, -0.002488613361492753, -6.079655122448457e-06, -0.001292465953156352], "finish_reason": "length"}], "metrics": {"energy": 913.9766057491312, "energy_per_token": 3.5702211162075437, "time": 22.275898, "time_per_token": 0.0870152265625}}
{"outputs": [{"text": "# Remove stopwords, numbers and punctuation\n    dataframe = dataframe.copy()  # Create a copy of the DataFrame to avoid modifying the original data\n\n    # Function for removing stopwords, numbers and punctuation\n    def preprocess(text):\n        # Convert to lower case\n        text = text.lower()\n        # Remove stopwords\n        text = ' '.join([word for word in text.split() if word not in STOPWORDS])\n        # Remove numbers\n        text = re.sub(r'\\d+', '', text)\n        # Remove punctuation\n        text = re.sub(r'[^\\w\\s]', '', text)\n        # Remove extra whitespaces\n        text = ' '.join(text.split())\n        return text\n\n    # Apply preprocessing function to the specified column\n    dataframe[text_column] = dataframe[text_column].apply(preprocess)\n\n    # Apply the vectorization process\n    vectorizer = CountVectorizer()\n    vectors = vectorizer.fit_transform(dataframe[text_column])\n    feature_names = vector", "tokens": ["#", " Remove", " stop", "words", ",", " numbers", " and", " punct", "uation", "\n", "    ", "data", "frame", " =", " data", "frame", ".", "copy", "()", "  ", "#", " Create", " a", " copy", " of", " the", " Data", "Frame", " to", " avoid", " modifying", " the", " original", " data", "\n", "\n", "    ", "#", " Function", " for", " removing", " stop", "words", ",", " numbers", " and", " punct", "uation", "\n", "    ", "def", " pre", "process", "(", "text", "):", "\n", "        ", "#", " Convert", " to", " lower", " case", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "#", " Remove", " stop", "words", "\n", "        ", "text", " =", " '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "        ", "#", " Remove", " numbers", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "\n", "        ", "#", " Remove", " punct", "uation", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n", "        ", "#", " Remove", " extra", " whites", "paces", "\n", "        ", "text", " =", " '", " '", ".", "join", "(", "text", ".", "split", "())", "\n", "        ", "return", " text", "\n", "\n", "    ", "#", " Apply", " pre", "processing", " function", " to", " the", " specified", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", ")", "\n", "\n", "    ", "#", " Apply", " the", " vector", "ization", " process", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "feature", "_", "names", " =", " vector"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -0.7296873331069946, -0.10203877091407776, -1.8421677350997925, -0.043167874217033386, -0.027793729677796364, -0.26390478014945984, -0.004243061412125826, -1.0977386236190796, -0.06302880495786667, -3.1365199089050293, -0.21455998718738556, -0.0004686211177613586, -0.5436906218528748, -0.4675638973712921, -0.018537020310759544, -1.8218780755996704, -0.00013541258522309363, -0.9234069585800171, -0.020726870745420456, -0.011538909748196602, -0.2499924898147583, -0.02728983759880066, -1.048441767692566, -0.003494586795568466, -0.49652957916259766, -0.10172482579946518, -0.17450547218322754, -0.022140465676784515, -0.011811911128461361, -0.9078409671783447, -0.05428191274404526, -2.6058058738708496, -0.00011264643399044871, -0.9374046325683594, -2.7947113513946533, -3.077648878097534, -1.1092700958251953, -0.16516651213169098, -0.021837379783391953, -0.07417510449886322, -0.03249210864305496, -0.07911820709705353, -0.0024756519123911858, -0.003964660689234734, -0.10811932384967804, -0.005719960667192936, -0.040227945894002914, -1.636121392250061, -0.15147271752357483, -1.7663543224334717, -0.17097128927707672, -0.07226337492465973, -0.0034430292434990406, -0.0057258871383965015, -0.5460579991340637, -1.7814451456069946, -0.821291446685791, -0.004032338969409466, -2.612725019454956, -0.2343694269657135, -0.0002619877050165087, -0.03923523426055908, -0.008870363235473633, -0.10913170874118805, -3.8265450712060556e-05, -0.010720164515078068, -4.327203714638017e-05, -0.010690325871109962, -0.40078723430633545, -0.004069025628268719, -0.055543120950460434, -0.49896302819252014, -0.04998807981610298, -0.08251491189002991, -0.00012242044613230973, -0.23559574782848358, -0.017672806978225708, -0.4169686734676361, -4.2199197196168825e-05, -0.00010752100206445903, -0.00010513706365600228, -0.3264772295951843, -0.0038932969328016043, -0.0009541726321913302, -6.198863957251888e-06, -6.198863957251888e-06, -0.001863292302004993, -1.823885577323381e-05, -0.000382707774406299, -0.009137243032455444, -0.0012532960390672088, -0.002497175009921193, -0.007206398993730545, -1.0967194612021558e-05, -0.009984430857002735, 0.0, -4.160317621426657e-05, 0.0, 0.0, -0.005155008751899004, -0.002596223959699273, -0.003214313881471753, -0.000998951611109078, -0.012865632772445679, -0.10436034947633743, -0.1476278454065323, -2.3603161025675945e-05, -0.005455723963677883, -0.0004447901446837932, -0.02558608539402485, -1.1086402082582936e-05, -0.0007514513563364744, -0.06779371947050095, -0.050611112266778946, -0.10208548605442047, -0.0027149980887770653, -0.004122806712985039, -2.145764938177308e-06, -0.009257841855287552, -1.645074735279195e-05, -0.0005379660287871957, -0.0007863528444431722, -0.003389805555343628, -0.00044490929576568305, -0.0006550788530148566, -0.0030986887868493795, -0.0075217606499791145, -0.007417045533657074, -0.02148706652224064, -6.723177648382261e-05, -0.03590011969208717, -0.0004917366313748062, -0.015353582799434662, -2.0265558760002023e-06, -0.0001072826053132303, -0.02143339440226555, -0.0022380324080586433, -0.029664205387234688, -0.0015467357588931918, -0.0029133993666619062, -2.4676019165781327e-05, -0.0006434039096347988, -1.311301275563892e-06, -0.002141327131539583, -6.210611172718927e-05, -6.437280717364047e-06, -0.06996424496173859, -8.940656698541716e-06, -0.00040987672400660813, -0.0006256530177779496, -0.005259131081402302, -0.05772371590137482, -0.8417268395423889, -0.23782294988632202, -0.3238150179386139, -1.6473263502120972, -1.2127666473388672, -0.021518100053071976, -0.0001854724541772157, -0.014965170994400978, -0.00010883215873036534, -1.3510184288024902, -3.814689989667386e-06, -4.768360213347478e-06, -9.119095193454996e-05, -0.04508436843752861, -0.0001931004080688581, -1.156323378381785e-05, -0.0006632988806813955, -1.7404405298293568e-05, -0.003484489396214485, -0.15770883858203888, -0.04643108323216438, -0.0034749857150018215, -0.0021031422074884176, -0.015188396908342838, -0.00012432756193447858, -0.2614198327064514, -0.068108469247818, -0.7265090346336365, -0.1946374475955963, -0.6074697971343994, -0.1904171258211136, -0.1836436539888382, -0.4550466239452362, -0.0727614089846611, -0.045556824654340744, -0.00011657988943625242, -0.010505965910851955, -0.00011526874004630372, -0.008142372593283653, -0.0043716104701161385, -5.364403477869928e-06, -1.0371154530730564e-05, -0.002676716074347496, -5.113947918289341e-05, -0.0011150578502565622, -2.3841855067985307e-07, -0.001704074558801949, -0.00018594920402392745, -4.529942543740617e-06, -1.4305104514278355e-06, -4.768360213347478e-06, -0.00010108436981681734, -0.0050921509973704815, -1.811964830267243e-05, -0.2066517472267151, -1.0251946150674485e-05, -8.856858039507642e-05, -0.0011857867939397693, -0.02412557415664196, -0.0001793938863556832, -0.009274967946112156, -0.9542022943496704, -2.2170419692993164, -0.07547051459550858, -0.010791042819619179, -0.08484180271625519, -0.7072075605392456, -0.0033054498489946127, -0.299407035112381, -0.015248745679855347, -0.0008631794480606914, -0.0003240775258745998, -1.311301275563892e-06, -2.7418097943154862e-06, -0.7067325115203857, -0.15007345378398895, -0.045740414410829544, -2.9106175899505615, -0.013264389708638191, -0.002617031103000045, -1.6689286894688848e-06, -1.8000440832111053e-05, -0.00023946279543451965, -8.34461570775602e-06, -4.6491513785440475e-06, -0.0009320206008851528, -0.004925973247736692, -9.524368942948058e-05, -0.0032858450431376696, -0.00025960413040593266, -4.529942543740617e-06, -3.015949550899677e-05, -0.02192753367125988, -0.1176571398973465, -0.6209237575531006, -1.5637632608413696, -0.0006804534932598472, -0.0010725465836003423, -0.0007871866691857576, -0.019515061751008034], "finish_reason": "length"}], "metrics": {"energy": 900.2979777021407, "energy_per_token": 3.516788975398987, "time": 22.062737, "time_per_token": 0.08618256640625}}
{"outputs": [{"text": "# Convert to lowercase and remove stopwords\n    df = dataframe.copy()\n    df['cleaned_text'] = df[text_column].str.lower()\n    df['cleaned_text'] = df['cleaned_text'].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n\n    # Remove numbers and punctuation\n    df['cleaned_text'] = df['cleaned_text'].apply(lambda x: re.sub(r'[0-9]', ' ', x))\n    df['cleaned_text'] = df['cleaned_text'].apply(lambda x: re.sub(r'\\W+', ' ', x))\n    df['cleaned_text'] = df['cleaned_text'].apply(lambda x: re.sub(r'\\s+', ' ', x))\n\n    # Apply vectorization to convert text into a numeric format\n    cv = CountVectorizer()\n    cv.fit(df['cleaned_text'])\n\n    # Convert the text data into numeric format using vectorization\n    df['vectorized_text", "tokens": ["#", " Convert", " to", " lower", "case", " and", " remove", " stop", "words", "\n", "    ", "df", " =", " data", "frame", ".", "copy", "()", "\n", "    ", "df", "['", "cleaned", "_", "text", "']", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "df", "['", "cleaned", "_", "text", "']", " =", " df", "['", "cleaned", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", " and", " punct", "uation", "\n", "    ", "df", "['", "cleaned", "_", "text", "']", " =", " df", "['", "cleaned", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "0", "-", "9", "]", "'", ",", " '", " '", ",", " x", "))", "\n", "    ", "df", "['", "cleaned", "_", "text", "']", " =", " df", "['", "cleaned", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " x", "))", "\n", "    ", "df", "['", "cleaned", "_", "text", "']", " =", " df", "['", "cleaned", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " Apply", " vector", "ization", " to", " convert", " text", " into", " a", " numeric", " format", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "()", "\n", "    ", "cv", ".", "fit", "(", "df", "['", "cleaned", "_", "text", "'])", "\n", "\n", "    ", "#", " Convert", " the", " text", " data", " into", " numeric", " format", " using", " vector", "ization", "\n", "    ", "df", "['", "vector", "ized", "_", "text"], "logprobs": [-0.5974228382110596, -2.7130608558654785, -2.6049304008483887, -0.4076155424118042, -0.2105749100446701, -1.2955870628356934, -0.569542407989502, -0.3562573194503784, -0.10934630781412125, -0.30199119448661804, -0.0021845067385584116, -2.0118918418884277, -0.4796081781387329, -0.047418612986803055, -3.71926071238704e-05, -0.4474755823612213, -0.018509872257709503, -0.012079420499503613, -0.1308208703994751, -0.021067997440695763, -0.09764797985553741, -1.0627504587173462, -3.0821051597595215, -0.18450531363487244, -0.043227240443229675, -0.007953520864248276, -0.00011634149996098131, -0.1125594973564148, -0.01572600193321705, -0.0012207920663058758, -5.960446742392378e-06, -2.372236667724792e-05, -0.0008725888328626752, -0.004218014422804117, -0.11698660999536514, -3.4450891689630225e-05, -0.009295754134654999, -0.022995121777057648, -0.2891349792480469, -0.05024035647511482, -0.3424186408519745, -0.006925033405423164, -0.0023142718710005283, -8.106198947643861e-06, -0.0004183370911050588, -0.0010045487433671951, -0.0017219253350049257, -0.028559695929288864, -0.005926772952079773, -6.067568756407127e-05, -2.3841830625315197e-06, -4.768370445162873e-07, -1.7523612768854946e-05, -0.002541647292673588, -0.062905453145504, -0.0003351603518240154, -0.7199612855911255, -0.003996007144451141, -0.0016731324139982462, -0.13694888353347778, -6.663577369181439e-05, -0.0004234609368722886, -8.964136941358447e-05, -0.021001696586608887, -0.1238127052783966, -0.0018398514948785305, -0.00017248096992261708, -0.0003393312799744308, -0.018430761992931366, -1.5139465176616795e-05, -1.8358061424805783e-05, -0.003127091098576784, -0.010281692259013653, -0.008958031423389912, -0.004216708708554506, -0.002992677502334118, -0.04277367144823074, 0.0, -1.8358061424805783e-05, 0.0, 0.0, -0.004004911985248327, -0.0009739422821439803, -0.04901852086186409, -0.00031895318534225225, -0.0010244365548714995, -0.07385361194610596, -0.13443079590797424, -0.2347792685031891, -0.033434927463531494, -0.005989223252981901, -0.06248491257429123, -0.0003367095487192273, -0.033121176064014435, -0.0016987192211672664, -0.008769452571868896, -3.2186455882765586e-06, -0.00018261195509694517, -0.001369491801597178, -0.002524167764931917, -0.0019012485863640904, -0.0004634975048247725, -7.510157047363464e-06, -1.0728830375228426e-06, 0.0, -6.9141146923357155e-06, -0.00031871485407464206, -0.33270347118377686, -0.0001908358681248501, -0.04351387172937393, -0.009269416332244873, -0.0005236684810370207, -0.023761626332998276, -1.9192511899746023e-05, -0.0007744412287138402, -0.3922782242298126, -0.03739533945918083, -0.6861400008201599, -0.0358969010412693, -1.5011658668518066, -0.0008441222598776221, -3.111314072157256e-05, -2.035844564437866, -0.2085777074098587, -4.7801782784517854e-05, -3.020966053009033, -0.0007426364463753998, -0.0005837167263962328, -0.020651789382100105, -0.00889623910188675, -0.02808806300163269, -0.0029724722262471914, -0.010837742127478123, -9.858122211880982e-05, -0.0002411313180346042, -2.861018856492592e-06, -6.437280717364047e-06, -5.9960475482512265e-05, -0.0003880701260641217, -0.0006713996990583837, -8.248942322097719e-05, -6.437280717364047e-06, 0.0, -8.344646857949556e-07, -1.9073468138230965e-06, -3.516612196108326e-05, -0.01540593896061182, -2.825220326485578e-05, -0.018416600301861763, -0.0006687788409180939, -9.357491217087954e-05, -0.029649971053004265, -1.0728830375228426e-06, -0.00027724236133508384, -0.021057842299342155, -0.002567211864516139, -2.0761284828186035, -0.18108631670475006, -0.18166513741016388, -1.8000440832111053e-05, -0.0033011725172400475, -0.00010787858627736568, -8.713819261174649e-05, -0.0025139416102319956, -0.034316275268793106, -0.009150591678917408, -2.483943223953247, -0.1714741438627243, -0.03757951408624649, -0.0007073761080391705, -1.2040065485052764e-05, -8.928377064876258e-05, -0.0009978797752410173, -0.006259953137487173, -0.0014586533652618527, -0.00030858523678034544, -2.3245540432981215e-05, -3.576278118089249e-07, -3.4570634852570947e-06, -8.4638240878121e-06, -0.0006532918778248131, -0.08031714707612991, -5.447716102935374e-05, -0.0043920245952904224, -0.0018898261478170753, -0.00029690624796785414, -0.3725963830947876, -4.0531076592742465e-06, -0.00038961926475167274, -0.09110977500677109, -0.031311698257923126, -0.3019087016582489, -0.21526749432086945, -0.7397848963737488, -6.556489552167477e-06, -0.002596580656245351, -0.00019500737835187465, -5.113947918289341e-05, -0.00018606838420964777, -0.19136275351047516, -0.018385468050837517, -0.12668158113956451, -0.0003406421164982021, -0.011585456319153309, -1.461450219154358, -0.3858449161052704, -0.005080290138721466, -1.7283767461776733, -0.2783889174461365, -0.07970739901065826, -0.3544091582298279, -1.705361247062683, -0.038069989532232285, -0.021895112469792366, -0.4995467960834503, -0.0014561536954715848, -2.117896556854248, -0.00456837797537446, -0.00017593742813915014, -9.536738616588991e-07, -3.576278118089249e-07, -0.3028729557991028, -0.020868029445409775, -0.01611458696424961, -0.7791376709938049, -0.4322226047515869, -0.00026913834153674543, -0.06817618012428284, -0.00865045003592968, -0.006936161778867245, -0.00017855956684798002, -2.264974000354414e-06, -1.7881377516459906e-06, -0.12715208530426025, -0.004932141397148371, -2.2731993198394775, -0.0002397011558059603, -0.6471058130264282, -1.1908828020095825, -1.3454251289367676, -0.8489593267440796, -0.9482921957969666, -0.27702760696411133, -2.165790319442749, -0.6369130611419678, -1.2710685729980469, -2.6503398418426514, -0.04264471307396889, -0.03540823608636856, -0.00032026408007368445, -2.72173810005188, -0.5554531216621399, -0.8700127005577087, -0.04782087355852127, -0.037616368383169174, -0.045502375811338425], "finish_reason": "length"}], "metrics": {"energy": 892.7393384466168, "energy_per_token": 3.487263040807097, "time": 22.073387, "time_per_token": 0.08622416796875}}
{"outputs": [{"text": "text_column = dataframe[text_column].copy()\n    text_column = text_column.apply(str.lower)\n    text_column = text_column.apply(lambda x: re.sub(r\"\\d+\", \"\", x))\n    text_column = text_column.apply(lambda x: re.sub(r\"[^\\w\\s]\", \"\", x))\n    text_column = text_column.apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n\n    vectorizer = CountVectorizer()\n    vectorizer.fit(text_column)\n    result = pd.DataFrame(data=vectorizer.transform(text_column).toarray(), columns=vectorizer.get_feature_names())\n\n    return result", "tokens": ["text", "_", "column", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "copy", "()", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "apply", "(", "str", ".", "lower", ")", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ",", " x", "))", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " x", "))", "\n", "    ", "text", "_", "column", " =", " text", "_", "column", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "_", "column", ")", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "data", "=", "vector", "izer", ".", "transform", "(", "text", "_", "column", ")", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " result"], "logprobs": [-2.578587770462036, -0.9350455403327942, -1.523646354675293, -0.9376524090766907, -0.4858245253562927, -0.00014900050882715732, -0.07171760499477386, -0.007410892751067877, -3.814689989667386e-06, -5.960446742392378e-06, -0.0007671750499866903, -1.5296354293823242, -1.7734198570251465, -0.04220493510365486, -0.0926881730556488, -0.4281938672065735, -0.5828613638877869, -0.012030188925564289, -0.021890446543693542, -0.060435663908720016, -0.11313676834106445, -8.892617915989831e-05, -0.0007787294453009963, -0.002788110403344035, -2.538893222808838, -0.002786683849990368, -2.3185503482818604, -0.5059134364128113, -0.021736836060881615, -0.0010740946745499969, -0.20972374081611633, -0.11310567706823349, -0.13531039655208588, -0.0008523407159373164, -0.005699692294001579, -0.008740737102925777, -0.022473882883787155, -7.390948667307384e-06, -4.291525328881107e-06, -0.0004291805380489677, -0.2148219794034958, -0.002310347044840455, -0.42372655868530273, -0.02375592105090618, -0.001178285456262529, -0.646820068359375, -3.8742269680369645e-05, -0.01270250789821148, -0.14465811848640442, -0.03929437696933746, -1.5539510250091553, -1.6511374711990356, -0.7837536334991455, -0.10973478108644485, -0.007686797995120287, -5.531158240046352e-05, -0.10196632146835327, -0.03854565694928169, -7.903263758635148e-05, -0.006488210055977106, -0.005580086261034012, -0.05508032441139221, -0.020198024809360504, -0.03047279641032219, -0.0018394945655018091, -0.014328098855912685, -0.00285206432454288, -0.01209850050508976, -2.622600959512056e-06, -1.311301275563892e-06, -0.0002631794777698815, -0.010331246070563793, -0.001583751873113215, -0.26890790462493896, -0.009307210333645344, -0.0006859333370812237, -0.3141072392463684, -5.006777428206988e-06, -0.0027558940928429365, -0.03435612842440605, -0.0679880827665329, -0.10070393979549408, -0.6453027725219727, -0.12832482159137726, -0.0030787233263254166, -0.026224620640277863, -0.0005594118847511709, -0.0266847126185894, -1.6331539882230572e-05, -0.009413854219019413, -0.08747003972530365, -4.649054244509898e-05, -0.0010059778578579426, -0.006687877234071493, -0.01411349605768919, -0.08280915766954422, -0.1376485526561737, -0.0056080627255141735, -0.0214750487357378, -0.022238055244088173, -0.023169156163930893, -3.576272320060525e-06, -2.264974000354414e-06, -0.00021872512297704816, -0.03467352315783501, -0.0012642494402825832, -0.09424412250518799, -0.012584325857460499, -0.00032646095496602356, -1.466841220855713, -0.0009573881980031729, -0.0002731903805397451, -4.327203714638017e-05, -0.07518228888511658, -0.07164059579372406, -0.0016842002514749765, -5.352353764465079e-05, -8.225102646974847e-05, -0.009682832285761833, -1.9192511899746023e-05, -8.987976616481319e-05, -0.029697997495532036, -0.0027210612315684557, -0.004929176066070795, -0.01823202148079872, -3.9934315282152966e-05, -0.07468767464160919, 0.0, -2.407998726994265e-05, 0.0, 0.0, -0.004916364327073097, -0.0022826348431408405, -1.0973100662231445, -0.00018225439998786896, -0.6994439959526062, -0.028642643243074417, -0.0015687552513554692, -0.000610999355558306, -1.0728830375228426e-06, -7.152555099310121e-07, -0.253500372171402, -0.017351726070046425, -0.03186206892132759, -0.7461549639701843, -0.09530825167894363, -0.010549847036600113, -0.0005267662927508354, -0.11223679780960083, -0.015616625547409058, -4.8874615458771586e-05, -4.732496745418757e-05, -0.03276556357741356, -0.002832807367667556, -0.1842774897813797, -2.1272730827331543, -0.05154391750693321, -0.7569069862365723, -8.344646857949556e-07, -0.0003685271949507296, -0.026402274146676064, -2.4215075969696045, -0.007335277274250984, -0.0026834928430616856, -3.576278118089249e-07, -4.625213477993384e-05, -0.002555440180003643, -0.0004631400224752724, -0.006527175661176443, -2.372236667724792e-05, -1.4066597032069694e-05, -0.000834236154332757, -0.0009739422821439803, -0.07836092263460159, -2.3841830625315197e-06, -0.0098017118871212, -0.01596090756356716, -0.2295060157775879, -0.002809032564982772, -0.0007382289622910321, 0.0, -8.702239938429557e-06, -0.0013248485047370195, -1.1920928244535389e-07, -9.059865078597795e-06, 0.0, -1.4305012882687151e-05, -0.5702638626098633, -0.0035963875707238913, -0.6821792721748352, -0.0001445904199499637, -0.020911458879709244, -0.002623451640829444], "finish_reason": "stop"}], "metrics": {"energy": 699.4389972972867, "energy_per_token": 3.6240362554263563, "time": 16.611868, "time_per_token": 0.0860718549222798}}
{"outputs": [{"text": "# Step 1: Lowercase text\n    dataframe[text_column] = dataframe[text_column].str.lower()\n\n    # Step 2: Remove stopwords\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join(\n        [token for token in x.split(\" \") if token not in STOPWORDS]))\n\n    # Step 3: Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r\"\\d+\", \"\", x))\n\n    # Step 4: Remove punctuation\n    dataframe[text_column] = dataframe[text_column].str.replace(\n        r'[^\\w\\s]', '', regex=True)\n\n    # Step 5: Convert text to numeric format using vectorization\n    vectorizer = CountVectorizer()\n    vectorizer.fit(dataframe[text_column])\n    dataframe = pd.DataFrame(\n        vectorizer.transform(dataframe[text_column]).", "tokens": ["#", " Step", " ", "1", ":", " Lower", "case", " text", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "\n", "        ", "[", "token", " for", " token", " in", " x", ".", "split", "(", "\"", " \"", ")", " if", " token", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ",", " x", "))", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "\n", "        ", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Step", " ", "5", ":", " Convert", " text", " to", " numeric", " format", " using", " vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "data", "frame", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "vector", "izer", ".", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "."], "logprobs": [-0.5974228382110596, -4.342199802398682, -0.027831410989165306, -0.033006999641656876, -0.12667444348335266, -2.6451261043548584, -0.3723038136959076, -2.580307722091675, -0.3847852945327759, -0.0035343817435204983, -0.3990284204483032, -0.012310239486396313, -0.09241801500320435, -0.02142510935664177, -9.775113539944869e-06, -2.3841574147809297e-05, -0.0044565885327756405, -0.0004866131057497114, -0.004059646278619766, -2.3841855067985307e-07, -0.0016576610505580902, -0.0005998004344291985, -2.264974000354414e-06, -8.344646857949556e-07, -5.090107151772827e-05, -0.0002525725867599249, -0.08950752019882202, -9.059865078597795e-06, -0.001492934999987483, -2.253030106658116e-05, -0.01004887092858553, -0.11240119487047195, -9.822363062994555e-05, -0.001073261140845716, -0.012047149240970612, -0.00044645831803791225, -0.005747933406382799, -0.01024192851036787, -0.1486360728740692, -0.295392781496048, -0.12166140973567963, -0.2630726397037506, -0.000856628583278507, -0.6676711440086365, -0.0016649207100272179, -0.010477653704583645, -0.004889199044555426, -1.311301275563892e-06, -4.5536911784438416e-05, -0.0036473434884101152, -0.0036699105985462666, -0.016994914039969444, -7.152531907195225e-06, -0.0017902314430102706, -0.004596501123160124, -1.4305104514278355e-06, -3.540453326422721e-05, -0.0008404298569075763, -0.0049441223964095116, -0.01960110105574131, -0.00035065223346464336, -0.6611871719360352, -0.009662761352956295, -0.000834355247206986, -1.5379934310913086, -0.0015326907159760594, -0.0002873722987715155, -3.9219088648678735e-05, -0.7748627066612244, -1.2131468057632446, -0.012492618523538113, -0.0764019638299942, -2.0309529304504395, -0.0033875482622534037, -0.00010799778101500124, -2.4676019165781327e-05, -0.08756495267152786, -0.0004880429187323898, -0.0020557953976094723, -1.173119306564331, -0.00046885941992513835, -2.109982233378105e-05, -0.00036042393185198307, -0.0008176797418855131, -0.029750879853963852, -0.00231082271784544, -2.7418097943154862e-06, -0.002727956511080265, 0.0, -1.2159273865108844e-05, 0.0, 0.0, -0.08476152271032333, -0.007253384217619896, -0.005420866422355175, -6.949660019017756e-05, -0.00038890427094884217, -0.004390481859445572, -0.0005584587925113738, -0.015547497197985649, -0.004055965691804886, -0.02288910187780857, -0.20329736173152924, -0.261597603559494, -0.00026222606538794935, -0.0534062460064888, -4.5298504119273275e-05, -0.001413061749190092, -0.0002153879904653877, -2.3841855067985307e-07, -8.702239938429557e-06, -0.00020859450160060078, -0.0010617101797834039, -0.004783970769494772, -2.3841855067985307e-07, -0.00039760314393788576, -0.0008897398365661502, -5.960462772236497e-07, -8.702239938429557e-06, -2.586808113846928e-05, -0.00011181206355104223, -0.07801001518964767, -8.606540359323844e-05, -0.7401211857795715, -0.01798512041568756, -0.00014506718434859067, -0.347883403301239, -4.541770613286644e-05, -0.000502817565575242, -0.07775582373142242, -0.18075037002563477, -1.514851450920105, -0.023638572543859482, -0.0008248264202848077, -0.008163773454725742, -0.00021944021864328533, -5.8412379075889476e-06, -0.007307467516511679, -0.004874726291745901, -2.0265558760002023e-06, -0.0009274948388338089, -0.012077419087290764, -0.003030947409570217, -0.00702104065567255, -5.769562994828448e-05, -0.00011598391574807465, -0.002142516663298011, -0.0004129749140702188, -0.005090371705591679, -0.0011474461061879992, -0.025195235386490822, -0.02434048242866993, -0.055631980299949646, -0.04455719143152237, -0.00012885693286079913, -0.06642662733793259, -1.490105023549404e-05, -0.00045789722935296595, -0.00015531764074694365, -4.768370445162873e-07, -4.0531076592742465e-06, -0.00011228884250158444, -5.9960475482512265e-05, -0.000505677133332938, -2.3841855067985307e-07, -0.00012635385792236775, -8.856858039507642e-05, -1.1920928244535389e-07, -4.756337511935271e-05, -7.390948667307384e-06, -5.936446541454643e-05, -2.875190019607544, -4.303362584323622e-05, -0.022393103688955307, -0.08866861462593079, -2.919633150100708, -0.0012584156356751919, -0.10270831733942032, -0.28720608353614807, -0.011860329657793045, -0.014308826997876167, -0.0020982648711651564, -0.007260248530656099, -0.0001864259538706392, -0.021651213988661766, -0.0007013006834313273, -5.2569914259947836e-05, -0.8349831700325012, -0.020558716729283333, -0.006344533991068602, -0.0001174142598756589, -0.002428084844723344, -0.1275472491979599, -0.07126034796237946, -0.01693197712302208, -0.00013136000779923052, -0.012294931337237358, -0.12369104474782944, -0.0012819890398532152, -0.014928176999092102, -0.005098792724311352, -1.9337459802627563, -0.41220390796661377, -0.5933681130409241, -0.470630407333374, -0.18613199889659882, -1.103078007698059, -0.5983344316482544, -0.025000974535942078, -0.10918226838111877, -0.003974040970206261, -0.22628307342529297, -0.01655285432934761, -0.0006895071710459888, -0.0007387054502032697, -1.5497195136049413e-06, -4.768370445162873e-07, -0.2924204170703888, -0.02957925945520401, -0.02638520672917366, -0.723626434803009, -0.3173624873161316, -0.005247153807431459, -0.0006104036583565176, -0.042260587215423584, -0.0047444626688957214, -2.5748875486897305e-05, -0.0028621682431548834, -0.0006011109799146652, -7.510157047363464e-06, -2.2291887944447808e-05, -0.035514432936906815, -0.017419910058379173, -0.17261792719364166, -1.9937196969985962, -0.25510478019714355, -0.4027130603790283, -0.6414560675621033, -7.986990567587782e-06, -0.03503639996051788, -0.012454002164304256, -0.721923828125, -0.000898077036254108, -0.06002811715006828, -5.960462772236497e-07, -3.3378044463461265e-05, -0.022466540336608887, -0.0008060067193582654, -0.03168295696377754, 0.0, -0.000922969076782465, -8.725739462533966e-05, -6.079655122448457e-06, -1.1086402082582936e-05, -0.0010246747406199574, -0.0008295908919535577], "finish_reason": "length"}], "metrics": {"energy": 908.2529761085507, "energy_per_token": 3.547863187924026, "time": 22.058243, "time_per_token": 0.08616501171875}}
{"outputs": [{"text": "# Prepare data by removing stop words, numbers, and punctuation\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: ' '.join([word for word in x.lower().split() if word not in STOPWORDS and not word.isnumeric() and\n                            not any(char in '!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~' for char in word)]))\n    # Apply vectorization to convert text into numeric format suitable for analysis\n    vectorizer = CountVectorizer(lowercase=False)\n    vectorizer.fit(dataframe[text_column])\n    transformed_data = vectorizer.transform(dataframe[text_column])\n    feature_names = vectorizer.get_feature_names_out()\n    return pd.DataFrame(transformed_data.toarray(), columns=feature_names)", "tokens": ["#", " Prepare", " data", " by", " removing", " stop", " words", ",", " numbers", ",", " and", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "lower", "()", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " not", " word", ".", "is", "numeric", "()", " and", "\n", "                ", "            ", "not", " any", "(", "char", " in", " '", "!", "\"", "#", "$", "%", "&\\", "'", "()", "*", "+", ",", "-", ".", "/", ":", ";<", "=>", "?", "@", "[\\\\", "]^", "_", "`", "{|", "}~", "'", " for", " char", " in", " word", ")]", "))", "\n", "    ", "#", " Apply", " vector", "ization", " to", " convert", " text", " into", " numeric", " format", " suitable", " for", " analysis", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "trans", "formed", "_", "data", " =", " vector", "izer", ".", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "trans", "formed", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "feature", "_", "names", ")", "\n", "\n", "if"], "logprobs": [-0.5974228382110596, -3.7325310707092285, -2.286872386932373, -2.015406370162964, -0.285916805267334, -0.17056156694889069, -2.895383596420288, -0.33806493878364563, -0.11435921490192413, -0.1587848663330078, -0.027104683220386505, -0.010112480260431767, -0.012299759313464165, -0.22506222128868103, -0.004686799366027117, -1.110628604888916, -0.3147980272769928, -0.44907525181770325, -0.07571113854646683, -1.0967194612021558e-05, -2.253030106658116e-05, -0.008047300390899181, -0.006926809437572956, -0.02866998128592968, -6.198863957251888e-06, -0.0027777680661529303, -0.002063171239569783, -1.6689286894688848e-06, -1.7881377516459906e-06, -0.0013635394861921668, -0.008201610296964645, -1.0134127140045166, -0.0011619728757068515, -0.5837262868881226, -0.0065713501535356045, -0.007673075422644615, -0.06951774656772614, -0.0002953569928649813, -0.3897925615310669, -0.0005926521262153983, -0.0002712835557758808, -0.00022206225548870862, -0.19614596664905548, -0.09325660765171051, -0.019380144774913788, -0.00029940891545265913, -0.0003413571394048631, -0.7411720156669617, -0.00010084597306558862, -0.3953052759170532, -5.1020273531321436e-05, -0.002922076266258955, -0.00958589930087328, -0.012154796160757542, -0.03633279353380203, -0.09981849044561386, -0.02322937361896038, -0.00042274597217328846, -0.09320155531167984, 0.0, -7.712543447269127e-05, 0.0, 0.0, -0.24980010092258453, -0.08096983283758163, -0.04972054064273834, -0.0005947966128587723, -0.00014494798961095512, -0.6919429302215576, -0.024112774059176445, -0.35098913311958313, -1.557288408279419, -0.0024786246940493584, -0.12946151196956635, -0.5246486663818359, -2.2022080421447754, -0.394552081823349, -0.11974165588617325, -0.015759680420160294, -1.7790249586105347, -1.7754039764404297, -0.15662634372711182, -0.018699899315834045, -0.0007857572636567056, -0.0005435658385977149, -0.0060334219597280025, -0.0034705903381109238, -0.0007840896723791957, -0.00020823694649152458, -0.0016828911611810327, -0.003904815064743161, -0.040761757642030716, -0.01090837549418211, -0.004384428728371859, -0.0023742124903947115, -0.000704159727320075, -0.0007974305190145969, -0.0002641328901518136, -0.0007043979712761939, -0.13045650720596313, -3.8265450712060556e-05, -0.07627848535776138, -0.000659248442389071, -0.0013012760318815708, -0.002773607149720192, -0.07207660377025604, -0.0015651845606043935, -0.00010954733443213627, -0.00018368464952800423, -0.0026914584450423717, -0.020468907430768013, -0.08309793472290039, -0.002725341124460101, -2.3625376224517822, -0.1581922471523285, -0.7144646048545837, -0.2731541395187378, -0.004875438287854195, -1.0718939304351807, -0.20467698574066162, -0.08067131042480469, -0.28312206268310547, -0.38985100388526917, -0.07385118305683136, -1.015202522277832, -0.0019577639177441597, -0.030214326456189156, -0.029149096459150314, -0.0007614573696628213, -0.3906708061695099, -0.02091776207089424, -0.0006873629172332585, -0.0005501187406480312, -3.6954811548639555e-06, -1.0728830375228426e-06, -1.4434658288955688, -2.1645896434783936, -0.0003779412363655865, -4.0531076592742465e-06, -0.0013193720951676369, -0.7088375091552734, -0.26313138008117676, -0.16141997277736664, -0.0035557635128498077, -0.8730881214141846, -0.039666466414928436, -0.010278978385031223, -0.000982278841547668, -0.04939790070056915, -0.006395705509930849, -3.123234637314454e-05, -0.005912552587687969, -0.00036161558819003403, -1.0371154530730564e-05, -1.4066597032069694e-05, -0.03156838193535805, -0.0072732665576040745, -0.030793506652116776, -2.7570407390594482, -0.005592770874500275, -0.05027391016483307, -0.49483129382133484, -0.05446232855319977, -0.04369372874498367, -7.152555099310121e-07, -3.0278701160568744e-05, -0.0021096847485750914, -0.00048160876031033695, -0.0012226970866322517, 0.0, -0.0003586364327929914, -4.5298504119273275e-05, -7.152555099310121e-07, -1.6689286894688848e-06, -0.0010726656764745712, -0.12089532613754272, -0.12961231172084808, -1.1942392587661743, -0.00015555603022221476, -0.00109576724935323, -0.001935277134180069, -0.02549777179956436, -4.768370445162873e-07, -2.145764938177308e-06, -0.00032014489988796413, -7.152555099310121e-07, -9.65590606938349e-06, 0.0, -9.536738616588991e-07, -0.5255605578422546, -0.00045885046711191535, -0.00047302976599894464, -0.010946580208837986, -0.11904045939445496, -1.1875015497207642, -0.0023185533937066793, -8.940656698541716e-06, -0.0005937243695370853, -0.007845421321690083, -0.07797274738550186, -8.106198947643861e-06, -2.3841830625315197e-06, -2.3841855067985307e-07, -0.0008611546363681555, -0.13538651168346405, -1.7881377516459906e-06, -0.0005552418879233301, -0.0025305887684226036, -0.03264038637280464, -0.0006280356901697814, -0.0003182381624355912, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.6235288381576538, -0.7110907435417175, -0.00767106469720602, -0.8571171164512634], "finish_reason": "stop"}], "metrics": {"energy": 763.5782130985266, "energy_per_token": 3.5187936087489704, "time": 18.714312, "time_per_token": 0.08624106912442396}}
{"outputs": [{"text": "# Preprocessing\n    # Convert text to lowercase\n    dataframe[text_column] = dataframe[text_column].str.lower()\n    # Remove stopwords\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n    # Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub('\\d+', '', x))\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r'[^\\w\\s]', ' ', x))\n\n    # Vectorization\n    # Convert text to numeric format\n    count_vector = CountVectorizer().fit_transform(dataframe[text_column])\n    return pd.DataFrame(count_vector.toarray(), columns=count_vector.get_feature_names())", "tokens": ["#", " Pre", "processing", "\n", "    ", "#", " Convert", " text", " to", " lower", "case", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "\\", "d", "+'", ",", " ''", ",", " x", "))", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "#", " Convert", " text", " to", " numeric", " format", "\n", "    ", "count", "_", "vector", " =", " Count", "Vector", "izer", "()", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "count", "_", "vector", ".", "to", "array", "()", ",", " columns", "=", "count", "_", "vector", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "if"], "logprobs": [-0.5974228382110596, -2.9913907051086426, -1.2479320764541626, -0.7753555774688721, -0.026194659993052483, -1.9238572120666504, -2.0322813987731934, -1.5704354047775269, -0.08817822486162186, -0.015342195518314838, -0.07313432544469833, -0.16788475215435028, -0.0015886317705735564, -0.2346096783876419, -0.007666805759072304, -0.18371835350990295, -0.02505410648882389, -7.390948667307384e-06, -4.1126360883936286e-05, -0.005861000623553991, -0.0003721021639648825, -0.0026454473845660686, 0.0, -0.001311990898102522, -0.0008216104470193386, -1.311301275563892e-06, -1.7881377516459906e-06, -7.30726242181845e-05, -0.00021801002731081098, -0.05373900383710861, -1.07287787614041e-05, -0.0011150578502565622, -4.577531944960356e-05, -0.003427228657528758, -0.875774621963501, -0.010105753317475319, -0.09366755932569504, -0.3584929406642914, -0.10385030508041382, -0.08606386929750443, -0.00023541064001619816, -0.46064430475234985, -0.005698980763554573, -0.007192078046500683, -0.0016708712792024016, -2.3841830625315197e-06, -7.152555099310121e-07, -0.0026145342271775007, -0.002148583298549056, -0.017789803445339203, -5.960462772236497e-07, -0.0013735393295064569, -0.005054790060967207, -7.152555099310121e-07, -1.6569954823353328e-05, -0.0006891497760079801, -0.0010181248653680086, -0.021054573357105255, -0.0004764852055814117, -0.6307340860366821, -0.006154039409011602, -0.0028423171024769545, -0.013120506890118122, -0.00025328766787424684, -0.2760786712169647, -7.521823135903105e-05, -0.0001817776501411572, -5.411955135059543e-05, -0.025835763663053513, -0.027697725221514702, -0.0005388000281527638, -7.295342220459133e-05, -7.164221460698172e-05, -0.030705420300364494, -3.814689989667386e-06, -0.00028701478731818497, -0.0012762743281200528, -0.003885103389620781, -0.0007169060409069061, -0.00600178400054574, -3.85038583772257e-05, -0.15649934113025665, 0.0, -2.6940935640595853e-05, 0.0, 0.0, -0.0652761310338974, -0.001459605642594397, -0.008251149207353592, -0.0007938570925034583, -0.01747496984899044, -0.10931393504142761, -0.11770981550216675, -9.417090768693015e-05, -0.021822916343808174, -1.2516897186287679e-05, -0.001176618505269289, -0.00011872540198964998, -1.1920928244535389e-07, -7.390948667307384e-06, -0.0001858300092862919, -0.0023755207657814026, -0.002417976502329111, -3.576278118089249e-07, -0.0005189026123844087, -0.00021205084340181202, -5.960462772236497e-07, -9.298280929215252e-06, -1.2993727978027891e-05, -8.332382276421413e-05, -0.3115263283252716, -0.0001776060671545565, -0.14328905940055847, -0.0019052940187975764, -8.11782301752828e-05, -0.04380030557513237, -7.510157047363464e-06, -0.00010084597306558862, -2.980842351913452, -0.16458605229854584, -0.12954330444335938, -0.022233158349990845, -4.172316494077677e-06, -0.017547011375427246, -1.9430925021879375e-05, -0.0007545484695583582, -0.021182497963309288, -0.0042916107922792435, -0.003911464940756559, -0.0008274468709714711, -0.007407816126942635, -0.021674778312444687, -0.043753065168857574, -0.03777100518345833, -0.0001232548092957586, -0.019832177087664604, -2.706014311115723e-05, -0.0007456144667230546, -4.732496745418757e-05, -9.536738616588991e-07, -7.271740287251305e-06, -4.3748852476710454e-05, -0.00026425207033753395, -0.0004086851258762181, 0.0, -0.00016473367577418685, -0.00013553177996072918, -1.1920928244535389e-07, -5.960446742392378e-06, -1.1324817933200393e-05, -3.290122185717337e-05, -0.09659834951162338, -0.0003152588615193963, -0.13782615959644318, -0.0019456282025203109, -1.9788545614574105e-05, -0.056406330317258835, -2.3841855067985307e-07, -0.0007701530121266842, -0.26730871200561523, -0.019340625032782555, -0.020415296778082848, -0.003369132988154888, -0.0026145342271775007, -1.2040065485052764e-05, -0.0006582954083569348, -1.311301275563892e-06, -0.004149755463004112, -0.00015317220822907984, -1.5497195136049413e-06, -2.9699604511260986, -0.0005860995152033865, -1.9073304429184645e-05, -0.008862919174134731, -0.008942318148911, -0.001875904854387045, -0.7073715329170227, -0.0002205128694185987, -0.017330637201666832, -0.4607052206993103, -0.09198274463415146, -0.18959279358386993, -0.002123126992955804, -1.0655553340911865, -1.5467262268066406, -0.13471285998821259, -1.0288587808609009, -0.6750937700271606, -0.17010943591594696, -0.39268094301223755, -0.0011736417654901743, -2.1747279167175293, -0.09557729959487915, -0.5600648522377014, -2.182875633239746, -0.0004190520558040589, -1.311301275563892e-06, -3.576278118089249e-07, -0.2147108018398285, -2.831033706665039, -6.0794889577664435e-05, -0.3336751461029053, -0.00010215714428341016, -0.00041261743172071874, -0.01903516799211502, -0.00016151554882526398, -0.003314004512503743, -0.0006069486844353378, -4.0531076592742465e-06, -4.0531076592742465e-06, -0.03808479383587837, -0.012548891827464104, -0.15396864712238312, -2.398162364959717, -0.024027004837989807, -3.0278701160568744e-05, -0.001090885023586452, -0.04700686037540436, -0.09024661034345627, -9.536738616588991e-07, -5.8412379075889476e-06, -0.007237762212753296, -0.10708577185869217, -3.564294092939235e-05, -0.4076525866985321, -0.006097049918025732, -0.03995480388402939, -0.013105211779475212, -0.00775339687243104, -4.172316494077677e-06, -3.6954811548639555e-06, -5.471556869451888e-05, -0.2369442582130432, -1.1920928244535389e-07, -0.00013457823661156, -5.960462772236497e-07, -0.00010442188795423135, -0.6130332946777344, -0.9805973768234253, -0.007375038228929043, -0.8857014179229736], "finish_reason": "stop"}], "metrics": {"energy": 863.5083611202242, "energy_per_token": 3.5830222453121334, "time": 20.815598, "time_per_token": 0.08637177593360996}}
{"outputs": [{"text": "text = dataframe[text_column]\n\n    def process_text(text):\n        text = re.sub('[^a-z]', ' ', text.lower())\n        words = [word for word in text.split() if word not in STOPWORDS]\n        return ' '.join(words)\n\n    text = text.apply(process_text)\n\n    vectorizer = CountVectorizer()\n    vectorizer.fit(text)\n\n    result = vectorizer.transform(text)\n    result_df = pd.DataFrame(result.toarray(), columns=vectorizer.get_feature_names_out())\n    return result_df", "tokens": ["text", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "\n", "    ", "def", " process", "_", "text", "(", "text", "):", "\n", "        ", "text", " =", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "]", "'", ",", " '", " '", ",", " text", ".", "lower", "())", "\n", "        ", "words", " =", " [", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n", "        ", "return", " '", " '", ".", "join", "(", "words", ")", "\n", "\n", "    ", "text", " =", " text", ".", "apply", "(", "process", "_", "text", ")", "\n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", ")", "\n", "\n", "    ", "result", " =", " vector", "izer", ".", "transform", "(", "text", ")", "\n", "    ", "result", "_", "df", " =", " pd", ".", "DataFrame", "(", "result", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "return", " result", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.578587770462036, -0.7711852192878723, -0.10156825184822083, -7.1403817855753e-05, -0.07790018618106842, -0.00302381650544703, -5.602820692729438e-06, -1.5020257706055418e-05, -0.001122797722928226, -0.33932194113731384, -1.1033419370651245, -0.0012857988476753235, -2.460268259048462, -2.1292335987091064, -0.24838821589946747, -0.14181549847126007, -0.026718605309724808, -0.32924962043762207, -0.23312366008758545, -0.002914468990638852, -0.011168582364916801, -1.0700429677963257, -0.03607790172100067, -1.3769288063049316, -0.00037448544753715396, -0.011430725455284119, -1.4878487586975098, -0.2550983130931854, -0.32624292373657227, -0.348836749792099, -5.4238757002167404e-05, -7.188061863416806e-05, -2.735780715942383, -0.002064360771328211, -0.00014137222024146467, -0.07326827198266983, -0.00016282663273159415, -0.00010179955279454589, -0.33563971519470215, -0.4670756161212921, -0.010462908074259758, -0.01740327477455139, -0.2255302220582962, -0.027440626174211502, -1.3203152418136597, -0.006794326473027468, -1.2044163942337036, -0.08617368340492249, -0.009756498970091343, -0.00010716341057559475, -3.1470757676288486e-05, -0.06883995234966278, -0.00021550717065110803, -0.002633201191201806, -0.29046690464019775, -0.012999314814805984, -0.009866753593087196, -0.026974499225616455, -2.002696055569686e-05, -0.019154461100697517, 0.0, -3.6000557884108275e-05, 0.0, 0.0, -0.09155402332544327, -0.008797340095043182, -0.016783345490694046, -0.2907866835594177, -0.19631065428256989, -7.497983460780233e-05, -0.00030286493711173534, -6.997340824455023e-05, -0.00658781174570322, -0.0017861855449154973, -0.00011646069469861686, -0.003919183276593685, -0.019222287461161613, -0.00017653337272349745, -0.6987717151641846, -0.08941290527582169, -0.03450758382678032, -0.00013743886665906757, -0.03536876663565636, -2.8013790142722428e-05, -0.2752162218093872, -3.576278118089249e-07, -3.576278118089249e-07, -0.00015948931104503572, -0.00689946161583066, -0.7978779673576355, -0.00021038226259406656, -0.6879748106002808, -0.011399021372199059, -0.000608854868914932, -0.00024279984063468874, -1.9073468138230965e-06, -2.861018856492592e-06, -0.2793903648853302, -0.01414064783602953, -0.033483002334833145, -0.49133673310279846, -0.07181613147258759, -0.006236970890313387, -0.00023993951617740095, -0.27263355255126953, -0.0035052781458944082, -0.03152310103178024, -0.0028123611118644476, -1.4488587379455566, -4.6967357775429264e-05, -1.2588849067687988, -0.02088915929198265, -1.2754746675491333, -1.7165990357170813e-05, -0.0001934579631779343, -0.006072878837585449, -0.000967153930105269, -0.0011328000109642744, -0.0012003129813820124, -0.11023404449224472, -0.24050842225551605, -0.36735355854034424, -2.966463327407837, -0.22484974563121796, -0.0004737447015941143, -0.0032151455525308847, -4.768370445162873e-07, -0.0004291805380489677, -0.015040094032883644, -0.06367754936218262, -0.0031438469886779785, -0.17321038246154785, -0.00015138434537220746, -0.015524492599070072, -0.001522811478935182, -0.00413954583927989, -0.0035311745014041662, -0.0006622266955673695, 0.0, -3.3378546504536644e-06, -0.00023064337437972426, -3.576278118089249e-07, -7.390948667307384e-06, -1.1920928244535389e-07, -5.066266385256313e-05, -0.44652602076530457, -0.004526250530034304, -0.0027456702664494514, -0.0031279230024665594, -1.0948410034179688, -0.06656471639871597, -0.0015024575404822826, -0.001321276999078691, -3.099393507000059e-05, -0.981078028678894, -2.622600959512056e-06, -2.7418097943154862e-06, -2.3841830625315197e-06, -1.645074735279195e-05, -0.13554099202156067], "finish_reason": "stop"}], "metrics": {"energy": 558.8137962656024, "energy_per_token": 3.492586226660015, "time": 13.673363, "time_per_token": 0.08545851875}}
{"outputs": [{"text": "# Remove stopwords, numbers and punctuation\n    stopwords = STOPWORDS\n    dataframe = dataframe[text_column]\n    dataframe = dataframe.apply(lambda x: ' '.join([word for word in x.lower().split() if word not in stopwords and not\n                                                    any([character in word for character in list('1234567890')]) and not\n                                                    any([character in word for character in list('!\"#$%&\\'()*+,-./:;<=>?@')])]))\n\n    # Vectorization\n    vectorizer = CountVectorizer()\n    vectorizer.fit(dataframe)\n    features = pd.DataFrame(data=vectorizer.transform(dataframe).toarray(), columns=vectorizer.get_feature_names())\n\n    return features", "tokens": ["#", " Remove", " stop", "words", ",", " numbers", " and", " punct", "uation", "\n", "    ", "stop", "words", " =", " ST", "OP", "W", "OR", "DS", "\n", "    ", "data", "frame", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "data", "frame", " =", " data", "frame", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "lower", "()", ".", "split", "()", " if", " word", " not", " in", " stop", "words", " and", " not", "\n", "                ", "                ", "                ", "    ", "any", "([", "character", " in", " word", " for", " character", " in", " list", "('", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "')", "])", " and", " not", "\n", "                ", "                ", "                ", "    ", "any", "([", "character", " in", " word", " for", " character", " in", " list", "('", "!", "\"", "#", "$", "%", "&\\", "'", "()", "*", "+", ",", "-", ".", "/", ":", ";<", "=>", "?", "@", "')", "]", ")]", "))", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", ")", "\n", "    ", "features", " =", " pd", ".", "DataFrame", "(", "data", "=", "vector", "izer", ".", "transform", "(", "data", "frame", ")", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " features"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -0.7296873331069946, -0.10203877091407776, -1.8421677350997925, -0.043167874217033386, -0.027793729677796364, -0.26390478014945984, -0.004243061412125826, -3.2036099433898926, -0.6429638862609863, -0.24981273710727692, -0.5852546095848083, 0.0, -4.9232225137529895e-05, 0.0, 0.0, -0.16210171580314636, -0.09861182421445847, -1.3560904264450073, -0.09655223786830902, -3.0982749462127686, -0.1461586058139801, -0.00011288482346571982, -1.4657905101776123, -0.05850398540496826, -7.390703103737906e-05, -3.576272320060525e-06, -0.0008355463505722582, -0.9344872236251831, -0.12154518812894821, -0.4638271629810333, -0.02423681505024433, -0.04587603360414505, -0.12828949093818665, -3.325883881188929e-05, -0.004670425318181515, -1.3890018463134766, -0.0006329201860353351, -0.35539349913597107, -0.026017898693680763, -0.0025254758074879646, -0.8987385630607605, -0.0009433348895981908, -0.0002836778585333377, -8.701899787411094e-05, -0.14735999703407288, -0.06395222991704941, -0.00854289811104536, -0.00020776021119672805, -0.00036149643710814416, -0.21559752523899078, -6.758938252460212e-05, -1.6073445081710815, -6.329813186312094e-05, -0.0006140968762338161, -0.002457814523950219, -0.015294649638235569, -0.030006693676114082, -0.12190267443656921, -0.020209357142448425, -0.0011380392825230956, -0.05077836662530899, -3.707340147229843e-05, -1.3384711742401123, -0.24148344993591309, -2.199366569519043, -0.013672512024641037, -0.018874917179346085, -0.06622504442930222, -0.5084282159805298, -1.585716724395752, -0.9226734042167664, -2.42459774017334, -2.5594966411590576, -1.4833347797393799, -0.011885304003953934, -0.007794915232807398, -0.0058397869579494, -3.2430784702301025, -0.7069385647773743, -0.3726840913295746, -0.0002768848498817533, -0.00022957073815632612, -0.00011157367407577112, -0.00017510310863144696, -0.00030155404238030314, -0.0006910558440722525, -0.0020239122677594423, -0.0007147617870941758, -0.01381031796336174, -0.4170609712600708, -0.04900104179978371, -0.15670207142829895, -0.5104953646659851, -0.03499495983123779, -0.0005638201837427914, -0.00021717573690693825, -0.00037377048283815384, -0.034716587513685226, -0.5725738406181335, -0.026135550811886787, -0.023207826539874077, -0.01088785845786333, -0.004574785940349102, -0.0006164796068333089, -0.007988526485860348, -0.020492849871516228, -0.13540388643741608, -0.12175671756267548, -0.7141898274421692, -0.10657947510480881, -0.02667844481766224, -0.0010868363315239549, -0.0006871246150694788, -0.008907109498977661, -0.0011318475008010864, -0.0006104036583565176, -0.0010583758121356368, -0.003603514516726136, -0.007153493817895651, -0.039726272225379944, -0.021150633692741394, -0.0021714221220463514, -0.0020016650669276714, -0.021901410073041916, -0.0016617074143141508, -0.006869153585284948, -0.002533918246626854, -0.6505937576293945, -0.32045653462409973, -0.026609845459461212, -0.022590087726712227, -0.0014696045545861125, -0.39424994587898254, -0.00028772983932867646, -0.025353778153657913, -0.9992094039916992, -0.7110443711280823, -0.47276896238327026, -0.003029758809134364, -0.44144928455352783, -0.0807935893535614, -0.0016432604752480984, -0.0011194637045264244, -6.079655122448457e-06, -1.6689286894688848e-06, -0.3457576036453247, -0.01858043484389782, -0.01654546707868576, -1.2287704944610596, -0.2141389697790146, -0.09738002717494965, -0.002763977972790599, -0.0778454840183258, -0.004756564274430275, -0.00016544880054425448, -0.06289157271385193, -0.004463708959519863, -0.18632853031158447, -4.444891452789307, -0.08522666245698929, -1.9103751182556152, -8.189342770492658e-05, -0.0022845377679914236, -0.020005827769637108, -0.8863356113433838, -0.006586508825421333, -0.031569305807352066, -1.5497195136049413e-06, -8.916457591112703e-05, -0.005368933547288179, -0.0010762381134554744, -0.008683186024427414, -4.172316494077677e-06, -0.0035247597843408585, -0.0008585343020968139, -0.036553483456373215, -2.3841855067985307e-07, -0.07328179478645325, -0.006227967329323292, -0.14300981163978577, -0.003499576123431325, -0.0029464424587786198, 0.0, -0.00019691436318680644, -0.0006403064471669495, -5.960462772236497e-07, -7.748573807475623e-06, 0.0, -6.437280717364047e-06, -0.45000532269477844, -0.0019622850231826305, -0.46346160769462585, -0.00021026308240834624, -0.21123631298542023, -0.006136149168014526], "finish_reason": "stop"}], "metrics": {"energy": 687.2105515632633, "energy_per_token": 3.4533193545892624, "time": 17.242573, "time_per_token": 0.08664609547738694}}
{"outputs": [{"text": "# Remove stopwords and numbers from the data\n    stopwordless = dataframe[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS and not word.isnumeric()]))\n    # Remove punctuation from the data\n    punctless = stopwordless.apply(lambda x: ' '.join(re.sub(r'[^\\w\\s]', '', word) for word in x.split()))\n    # Convert the data into a vectorized format\n    vectorizer = CountVectorizer(binary=True)\n    vectorized = pd.DataFrame.sparse.from_spmatrix(\n        vectorizer.fit_transform(punctless),\n        index=punctless.index,\n        columns=vectorizer.get_feature_names_out(),\n    )\n\n    return vectorized", "tokens": ["#", " Remove", " stop", "words", " and", " numbers", " from", " the", " data", "\n", "    ", "stop", "word", "less", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " not", " word", ".", "is", "numeric", "()", "]))", "\n", "    ", "#", " Remove", " punct", "uation", " from", " the", " data", "\n", "    ", "punct", "less", " =", " stop", "word", "less", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " word", ")", " for", " word", " in", " x", ".", "split", "()))", "\n", "    ", "#", " Convert", " the", " data", " into", " a", " vector", "ized", " format", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "binary", "=", "True", ")", "\n", "    ", "vector", "ized", " =", " pd", ".", "DataFrame", ".", "sparse", ".", "from", "_", "sp", "matrix", "(", "\n", "        ", "vector", "izer", ".", "fit", "_", "transform", "(", "punct", "less", ")", ",", "\n", "        ", "index", "=", "punct", "less", ".", "index", ",", "\n", "        ", "columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", ",", "\n", "    ", ")", "\n", "\n", "    ", "return", " vector", "ized"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -3.002729892730713, -0.7775924801826477, -1.3838921785354614, -0.38809680938720703, -3.108879566192627, -0.5835100412368774, -0.00273556518368423, -2.48026180267334, -1.2090628147125244, -2.4731435775756836, -1.0521727800369263, -0.37352344393730164, -0.0002549561613705009, -0.15628810226917267, -0.004527200013399124, -7.867782187531702e-06, -2.8609820219571702e-05, -0.0033004595898091793, -0.010941745713353157, -0.5029102563858032, -0.0028127175755798817, -0.5799996256828308, -0.018744124099612236, -0.0020961235277354717, -0.19588403403759003, -0.00021002470748499036, -0.0004349001101218164, -8.391981828026474e-05, -0.03621162101626396, -0.28634387254714966, -0.0022172171156853437, -0.0018621024210005999, -0.0012176964664831758, -0.26630568504333496, -0.00011216964776394889, -0.022191185504198074, -0.0012567488010972738, -0.0373518168926239, -0.029702162370085716, -0.27102312445640564, -0.00695119658485055, -0.31628453731536865, 0.0, -1.7046782886609435e-05, 0.0, 0.0, -0.9443230032920837, -0.07066526263952255, -0.35087886452674866, -0.0024221388157457113, -0.0009576263837516308, -0.8500480055809021, -0.0001394651480950415, -0.035975098609924316, -0.011767967604100704, -1.4914911985397339, -0.15033791959285736, -0.13615790009498596, -0.09112773090600967, -0.05607074126601219, -1.2510952949523926, -0.017908543348312378, -0.04205269739031792, -0.02323787659406662, -0.00033790123416110873, -1.2405409812927246, -1.690219759941101, -0.006155105773359537, -0.024417264387011528, -2.3841830625315197e-06, -5.483612312673358e-06, -0.0004680253332480788, -0.13164512813091278, -0.0002097863471135497, -0.0012459142599254847, -0.01143308263272047, -0.00300444383174181, -1.5299415588378906, -0.0008647278300486505, -0.00011634149996098131, -4.6132929128361866e-05, -0.15235599875450134, -0.0011087467428296804, -3.6238969187252223e-05, -0.360870361328125, -0.1360602080821991, -0.33528846502304077, -0.14397862553596497, -0.06300059705972672, -0.01490586344152689, -0.0005285535007715225, -0.015277626924216747, -0.00010990492592100054, -0.008729983121156693, -0.0056764595210552216, -0.00031120702624320984, -0.028719674795866013, -0.00024399164249189198, -0.39991819858551025, -0.011760544963181019, -0.005102943629026413, -9.298280929215252e-06, -3.4570634852570947e-06, -0.004232496954500675, -0.00391799584031105, -0.006319065578281879, -0.010688084177672863, -0.0025631689932197332, -0.13990382850170135, -0.026075854897499084, -1.3066551685333252, -0.9201691746711731, -0.7269294261932373, -0.43431493639945984, -0.3821229338645935, -2.496274471282959, -0.11964784562587738, -0.3187046945095062, -0.4085095226764679, -0.0002225389762315899, -0.443392813205719, -0.19584551453590393, -0.0006380429258570075, -0.0004266782198101282, -1.4305104514278355e-06, -3.576278118089249e-07, -1.3372199535369873, -2.0581789016723633, -0.015590688213706017, -0.2020980566740036, -0.13298752903938293, -0.05875333398580551, -0.001903747208416462, -1.0205713510513306, -0.5745939016342163, -0.71632319688797, -2.052605628967285, -4.124556289752945e-05, -0.0009659630013629794, -2.3602101802825928, -0.09266024827957153, -0.00038747431244701147, -0.0020695950370281935, -2.145764938177308e-06, -0.0004021312633994967, -0.0017642899183556437, -0.0008607972995378077, -2.0531797409057617, -0.13409589231014252, -0.010305171832442284, -3.611976353568025e-05, -0.0001867835089797154, -0.0013594918418675661, -1.311301275563892e-06, -2.6702524337451905e-05, -0.0012740122620016336, -0.015149767510592937, -5.960462772236497e-07, -0.050771117210388184, -0.03640429303050041, -0.007095732726156712, -0.0028912907000631094, -0.004607299342751503, -0.011759249493479729, -0.30863845348358154, -2.932505594799295e-05, -0.00015710550360381603, -0.000987876090221107, -0.018185783177614212, -0.0050865765661001205, -0.004783140029758215, -0.0002522150462027639, -0.001050635357387364, -0.000546425289940089, -2.264974000354414e-06, -5.364403477869928e-06, -3.3378044463461265e-05, -1.1920928244535389e-07, -1.9788545614574105e-05, 0.0, -8.344646857949556e-07, -0.7453209161758423, -0.0025637636426836252, -0.07791408151388168, -2.1481690406799316, -0.005329923238605261, -0.016622617840766907, -0.0008747326792217791, -0.40167295932769775, -1.5599242448806763, -0.0004938812926411629, -0.13510076701641083, -0.007423908915370703, -8.904537389753386e-05], "finish_reason": "stop"}], "metrics": {"energy": 708.862557050704, "energy_per_token": 3.580113924498505, "time": 17.023594, "time_per_token": 0.08597774747474747}}
{"outputs": [{"text": "texts = dataframe[text_column].astype(str)\n    pattern = r'[\\d]+|[^A-Za-z0-9]+'\n    texts = texts.str.lower().str.replace('\\n', ' ')\n    texts = texts.str.replace(pattern, ' ')\n    texts = texts.str.replace(r'[^\\w\\s]', ' ')\n    texts = texts.str.replace(r'\\b(?=\\w{1,2}\\b)\\w+|\\s', \" \")\n    texts = texts.apply(lambda x: \" \".join(x for x in x.split() if x not in STOPWORDS))\n    count_vect = CountVectorizer()\n    bag_of_words = count_vect.fit_transform(texts)\n    return pd.DataFrame(bag_of_words.toarray(), columns=count_vect.get_feature_names())", "tokens": ["text", "s", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "pattern", " =", " r", "'", "[\\", "d", "]+", "|", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "]+", "'", "\n", "    ", "text", "s", " =", " texts", ".", "str", ".", "lower", "()", ".", "str", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n", "    ", "text", "s", " =", " texts", ".", "str", ".", "replace", "(", "pattern", ",", " '", " '", ")", "\n", "    ", "text", "s", " =", " texts", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ")", "\n", "    ", "text", "s", " =", " texts", ".", "str", ".", "replace", "(", "r", "'\\", "b", "(", "?", "=\\", "w", "{", "1", ",", "2", "}\\", "b", ")\\", "w", "+", "|\\", "s", "'", ",", " \"", " \"", ")", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "x", " for", " x", " in", " x", ".", "split", "()", " if", " x", " not", " in", " ST", "OP", "W", "OR", "DS", "))", "\n", "    ", "count", "_", "vect", " =", " Count", "Vector", "izer", "()", "\n", "    ", "bag", "_", "of", "_", "words", " =", " count", "_", "vect", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "bag", "_", "of", "_", "words", ".", "to", "array", "()", ",", " columns", "=", "count", "_", "vect", ".", "get", "_", "feature", "_", "names", "())", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.578587770462036, -2.0180857181549072, -0.07210211455821991, -0.20790940523147583, -5.9602869441732764e-05, -0.05696198344230652, -0.002506569027900696, -3.814689989667386e-06, -4.0531076592742465e-06, -0.0008436457719653845, -1.2090797424316406, -1.6695828437805176, -5.960462772236497e-07, -0.2855265140533447, -0.03874441236257553, -0.005293994210660458, -0.24523675441741943, -0.4131745398044586, -3.547896146774292, -0.040531232953071594, -0.4097430408000946, -1.5535591840744019, -2.5912108421325684, -1.0479822158813477, -1.5426459312438965, -0.2493710070848465, -0.6548901200294495, -2.742799758911133, -1.1102861166000366, -2.634490556374658e-05, -0.0295368991792202, -0.0007541911327280104, -1.4305104514278355e-06, -3.981510963058099e-05, -1.583770751953125, -0.001016934053041041, -0.00018737945356406271, -0.6847441792488098, -0.323140949010849, -0.1319362372159958, -0.08010051399469376, -0.7187899947166443, -0.033403683453798294, -0.08931805938482285, -0.18224698305130005, -0.0008205384365282953, -0.6696344614028931, -7.283422019099817e-05, -1.3096544742584229, -0.005681674927473068, -0.5622891783714294, -0.396566241979599, -4.279521817807108e-05, -0.15695184469223022, -2.7241368293762207, -0.4822772741317749, -0.3459916114807129, -0.030382253229618073, -0.00011920218821614981, -0.05042886734008789, -0.44616562128067017, -0.03613757714629173, -0.8997055888175964, -0.03171113505959511, -0.07154415547847748, -0.009241187945008278, -0.025319723412394524, -0.0938226655125618, -0.00021741411183029413, -0.7902609705924988, -3.6238969187252223e-05, -0.03143034502863884, -0.059441253542900085, -0.5821227431297302, -0.0003693613689392805, -0.0419602245092392, -0.005494729615747929, -0.21832266449928284, -0.5544154644012451, -0.08097203820943832, -0.18801280856132507, -0.026864489540457726, -0.06957768648862839, -0.039480265229940414, -0.000648883986286819, -0.1661221832036972, -0.00010501786891836673, -0.5943437814712524, -0.4921152889728546, -0.12876342236995697, -1.3856654167175293, -0.7559298276901245, -0.2176392674446106, -0.00901840254664421, -0.04826614260673523, -0.0008821171941235662, -0.12316273152828217, -0.003714567981660366, -0.0002317160106031224, -0.2734169065952301, -1.0994141101837158, -0.2327183336019516, -0.293779194355011, -0.11240439116954803, -0.1998884379863739, -0.025239987298846245, -0.03600982949137688, -0.042116932570934296, -0.0009374991059303284, -0.2981601357460022, -0.00012194366718176752, -0.5024726986885071, -0.29064950346946716, -0.05132696405053139, -0.1561322957277298, -2.8276526927948, -2.8016316890716553, -0.02498004585504532, -2.3714725971221924, -0.002623094944283366, -0.6471697092056274, -0.051187664270401, -0.037912070751190186, -1.140859603881836, -0.009564056061208248, -0.012160449288785458, -1.4152441024780273, -5.245071224635467e-05, -1.3038097620010376, -0.11348673701286316, -0.30314335227012634, -2.0050647258758545, -7.295342220459133e-05, -1.0472946166992188, -0.32210689783096313, -0.00580032030120492, -0.15292824804782867, -0.09033657610416412, -0.24635599553585052, -0.025795452296733856, -0.042649850249290466, -0.04493119940161705, -0.000998594332486391, -2.1022636890411377, -0.0010306290350854397, -0.0816061720252037, -0.07274821400642395, -0.0027901313733309507, -0.7999382615089417, -0.001801535952836275, -0.00010787858627736568, -5.209310256759636e-05, -0.40867289900779724, -0.19732286036014557, -0.02806974947452545, -0.00046004203613847494, -2.0265373677830212e-05, -0.11162680387496948, -0.00023326536756940186, -9.179073458653875e-06, -0.029477408155798912, -0.007245573215186596, -0.0017658369615674019, -0.0052923341281712055, -2.0503786799963564e-05, -0.004104642663151026, 0.0, -2.6940935640595853e-05, 0.0, 0.0, -0.01289199385792017, -0.010670392774045467, -0.25369277596473694, -1.8420805931091309, -0.6508979797363281, -0.8084640502929688, -0.003374123014509678, -0.0004104725376237184, -8.34461570775602e-06, -2.3841855067985307e-07, -0.30284515023231506, -0.015761088579893112, -0.002316412515938282, -3.2704038619995117, -0.021261857822537422, -0.01527093444019556, -3.266281055402942e-05, -0.001639332971535623, -0.03807974234223366, -0.0007024919614195824, -7.152555099310121e-07, -3.015949550899677e-05, -4.255681051290594e-05, -0.0005458295345306396, -0.0031865080818533897, -8.165503095369786e-05, -0.00023147765023168176, -0.010895051062107086, -0.00012885693286079913, -0.03430556133389473, -0.027084263041615486, -0.04087723046541214, -2.1916162967681885, -0.1058642640709877, -2.1934269170742482e-05, -0.0012748456792905927, -0.031368423253297806, -0.0046218945644795895, -2.0265558760002023e-06, -1.1920928244535389e-07, 0.0, -1.537788011773955e-05, -0.004826917313039303, -0.30493757128715515, -2.622600959512056e-06, -0.011140407994389534, -0.006640983745455742, -0.026206621900200844, -0.004003487061709166, -0.002119558397680521, -4.0531076592742465e-06, -2.3841855067985307e-07, -1.156323378381785e-05, -0.0011087467428296804, -1.1920928244535389e-07, -1.2040065485052764e-05, 0.0, -2.2172682292875834e-05, -0.5039815306663513, -0.7731975317001343, -3.933898824470816e-06, -2.3841830625315197e-06, -2.7418097943154862e-06, -6.556489552167477e-06, -0.09003844112157822], "finish_reason": "stop"}], "metrics": {"energy": 818.4311490917212, "energy_per_token": 3.482685740815835, "time": 20.181602, "time_per_token": 0.08587915744680852}}
{"outputs": [{"text": "# Extract the text from the specified column\n    text_data = dataframe[text_column]\n\n    # Remove stopwords, numbers, and punctuation using regex\n    # text_data = text_data.apply(lambda x: re.sub(r'\\b{}\\b'.format(word), '', x) for word in STOPWORDS)\n    text_data = text_data.apply(lambda x: re.sub(r'\\b[a-zA-Z]\\S+', '', x))\n    text_data = text_data.apply(lambda x: re.sub(r'\\d', '', x))\n    text_data = text_data.apply(lambda x: re.sub(r'[^\\w\\s]', '', x))\n\n    # Convert the text into numeric format\n    vectorizer = CountVectorizer()\n    vectorizer.fit(text_data)\n    text_matrix = vectorizer.transform(text_data)\n\n    # Create a DataFrame with word as column and count as row\n    word_count_df = pd.DataFrame(text_matrix", "tokens": ["#", " Ext", "ract", " the", " text", " from", " the", " specified", " column", "\n", "    ", "text", "_", "data", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "\n", "    ", "#", " Remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", " using", " regex", "\n", "    ", "#", " text", "_", "data", " =", " text", "_", "data", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "b", "{}\\", "b", "'", ".", "format", "(", "word", ")", ",", " ''", ",", " x", ")", " for", " word", " in", " ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "]\\", "S", "+'", ",", " ''", ",", " x", "))", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "'", ",", " ''", ",", " x", "))", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Convert", " the", " text", " into", " numeric", " format", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "_", "data", ")", "\n", "    ", "text", "_", "matrix", " =", " vector", "izer", ".", "transform", "(", "text", "_", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " word", " as", " column", " and", " count", " as", " row", "\n", "    ", "word", "_", "count", "_", "df", " =", " pd", ".", "DataFrame", "(", "text", "_", "matrix"], "logprobs": [-0.5974228382110596, -3.796776294708252, -0.21533910930156708, -0.5217075347900391, -1.1758038997650146, -1.4164067506790161, -0.03481675684452057, -0.09497961401939392, -0.007622087839990854, -0.09823467582464218, -0.001263773301616311, -0.42318499088287354, -1.5119869709014893, -0.3821631371974945, -0.0029393110889941454, -0.03771980479359627, -3.290122185717337e-05, -0.0248419102281332, -0.0017307315720245242, -2.264974000354414e-06, -2.50339189733495e-06, -0.00017271934484597296, -0.17180940508842468, -0.041854824870824814, -0.00017820201173890382, -0.006188279017806053, -1.1033185720443726, -0.17118126153945923, -0.07472683489322662, -0.4886912405490875, -0.055233750492334366, -0.03403068333864212, -0.01581835001707077, -0.011366610415279865, -0.0021672588773071766, -3.4192237854003906, -1.5169705152511597, -0.12398079037666321, -0.0008990298374556005, -3.146190643310547, -2.705449342727661, -0.06610052287578583, -0.15224789083003998, -0.03624346852302551, -0.16968226432800293, -0.00015853578224778175, -6.532455881824717e-05, -0.00041559641249477863, -0.9102998375892639, -0.0007379907765425742, -0.22065852582454681, -0.019559485837817192, -0.00041321321623399854, -0.3442743420600891, -8.618460560683161e-05, -0.01767140068113804, -0.04765096306800842, -0.019170131534337997, -0.05707762762904167, -0.0033192322589457035, -1.4224210977554321, -0.00328465667553246, -0.004470236133784056, -0.00016735584358684719, -9.870042413240299e-05, -0.0423787422478199, -2.2824761867523193, -0.005346404854208231, -0.0011318475008010864, -0.054229408502578735, -0.0006736631621606648, -0.022311735898256302, -0.3085222542285919, -0.1377701759338379, -0.0008039817912504077, -0.0001494772732257843, -0.05991865321993828, -9.65590606938349e-06, -0.0003319427778478712, -1.1920928244535389e-07, 0.0, -0.017877748236060143, -0.07757680863142014, -0.026444070041179657, -0.41779041290283203, -0.0002833203470800072, -0.0014890070306137204, -0.002169875893741846, -0.01161255780607462, -5.8412379075889476e-06, -2.50339189733495e-06, -0.0003120412293355912, -0.22008273005485535, -0.0002708068350329995, -0.08303003013134003, -0.0053890906274318695, -0.0006547214579768479, -0.016839025542140007, -2.622600959512056e-06, -0.0012247211998328567, -0.04320497810840607, -0.012745233252644539, -0.2729998230934143, -0.8204537630081177, -0.7005467414855957, -0.508126974105835, -0.00014745102089364082, -0.0001532914029667154, -0.11191985756158829, -2.288792165927589e-05, -0.012188124470412731, -1.9922822713851929, -2.8649990558624268, -1.2748339176177979, -0.0002613918040879071, -0.10504798591136932, -0.0002044230350293219, -0.010876184329390526, -0.02028295397758484, -0.2193758338689804, -0.11552473157644272, -0.08564157783985138, -4.2676016164477915e-05, -4.339123915997334e-05, -0.00019572250312194228, -0.0007541911327280104, -4.529942543740617e-06, -3.576278118089249e-07, -8.583032467868179e-06, -0.024137908592820168, -3.4450891689630225e-05, -0.0032557835802435875, -0.00034362133010290563, -6.842378934379667e-05, -0.0036176491994410753, -1.4305104514278355e-06, -0.00016616393986623734, -0.027459414675831795, -0.0019233791390433908, -0.1642664670944214, -0.8467891216278076, -2.3547418117523193, -3.85038583772257e-05, -0.009607742540538311, -4.136476854910143e-05, -0.00044919890933670104, -0.002613702090457082, -0.005811935290694237, -0.016668107360601425, -0.020648520439863205, -5.447716102935374e-05, -5.364403477869928e-06, -0.00027044929447583854, -0.00047350639943033457, -2.0265558760002023e-06, 0.0, -1.156323378381785e-05, -0.01287951972335577, -2.372236667724792e-05, -0.03543642535805702, -0.0005497612874023616, -5.709961988031864e-05, -0.0175151489675045, -4.6491513785440475e-06, -0.00016151554882526398, -0.027751874178647995, -0.005816794466227293, -0.4394437372684479, -0.009304848499596119, -0.0010544460965320468, -0.002310703741386533, -0.013545505702495575, -0.00012683063687290996, -0.027824105694890022, -0.0014674619305878878, -4.672895011026412e-05, -0.06208088621497154, -2.634490556374658e-05, -0.00033766290289349854, -0.012667667120695114, -0.006701849866658449, -0.07007038593292236, -0.00031585473334416747, -0.00459341611713171, -1.7463481426239014, -1.0517382621765137, -0.29763057827949524, -0.6597423553466797, -1.7284178733825684, -0.17678701877593994, -2.4376494884490967, -0.0010066924151033163, -0.19619162380695343, -0.011113056913018227, -0.0004614718782249838, -0.0003375437227077782, -4.291525328881107e-06, -3.2186455882765586e-06, -0.2558439075946808, -0.02483295649290085, -0.013319207355380058, -0.6868944764137268, -0.1769842803478241, -0.00963584240525961, -0.0005776405450887978, -0.06669162958860397, -0.007430653553456068, -4.5298504119273275e-05, -5.960462772236497e-07, -0.014725802466273308, -0.011448756791651249, -0.16919371485710144, -1.9084033966064453, -0.011491182260215282, -2.8194780349731445, -0.0009844223968684673, -0.0099671995267272, -5.960462772236497e-07, -1.8358061424805783e-05, -0.024259736761450768, -0.0004128557338844985, -0.0006244616815820336, -2.586808113846928e-05, -0.00011657988943625242, -0.0024755329359322786, -0.15147948265075684, -0.2539423108100891, -0.00012599628826137632, -0.0210283100605011, -0.7303032875061035, -0.05894564464688301, -0.10727190226316452, -0.0008313775178976357, -0.37608602643013, -3.474123477935791, -1.8417342901229858, -0.4282536804676056, -0.4966955780982971, -0.510309636592865, -0.010537933558225632, -0.6833534836769104, -0.03565443679690361, -0.00045193947153165936, -1.124794363975525, -0.004721089266240597, -1.470908522605896, -0.2159186154603958, -0.08897478878498077, -0.0001472126314183697, -0.002938716672360897, -1.7523612768854946e-05, -0.0012388896429911256, -0.006782486103475094, -0.11935694515705109, -1.9073468138230965e-06, -5.435795901576057e-05], "finish_reason": "length"}], "metrics": {"energy": 894.2988323297499, "energy_per_token": 3.4933548137880854, "time": 22.05416, "time_per_token": 0.0861490625}}
{"outputs": [{"text": "# Remove stopwords\n    texts = dataframe[text_column].str.split()\n    texts = texts.apply(\n        lambda x: [word for word in x if word.lower() not in STOPWORDS])\n\n    # Remove numbers\n    texts = texts.apply(lambda x: [re.sub(r'\\d+', '', word) for word in x])\n\n    # Remove punctuation\n    texts = texts.apply(\n        lambda x: [re.sub(r'[^\\w\\s]', '', word) for word in x])\n\n    # Remove empty strings\n    texts = texts.apply(lambda x: [word for word in x if word != ''])\n\n    # Vectorization\n    count_vect = CountVectorizer()\n    count_vect.fit(texts.str.join(' '))\n    texts = count_vect.transform(texts.str.join(' '))\n    return pd.DataFrame(texts.toarray(), columns=count_vect.get_feature_names_out())", "tokens": ["#", " Remove", " stop", "words", "\n", "    ", "text", "s", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "split", "()", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " [", "word", " for", " word", " in", " x", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " [", "re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " word", ")", " for", " word", " in", " x", "])", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " [", "re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " word", ")", " for", " word", " in", " x", "])", "\n", "\n", "    ", "#", " Remove", " empty", " strings", "\n", "    ", "text", "s", " =", " texts", ".", "apply", "(", "lambda", " x", ":", " [", "word", " for", " word", " in", " x", " if", " word", " ", "!", "=", " '", "'])", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "count", "_", "vect", " =", " Count", "Vector", "izer", "()", "\n", "    ", "count", "_", "vect", ".", "fit", "(", "text", "s", ".", "str", ".", "join", "('", " '", "))", "\n", "    ", "text", "s", " =", " count", "_", "vect", ".", "transform", "(", "text", "s", ".", "str", ".", "join", "('", " '", "))", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "text", "s", ".", "to", "array", "()", ",", " columns", "=", "count", "_", "vect", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -1.013405442237854, -0.0022819212172180414, -2.291614055633545, -1.1184616088867188, -0.12026110291481018, -0.22009095549583435, -4.3987260141875595e-05, -0.054212357848882675, -0.0016690860502421856, -3.814689989667386e-06, -2.0146166207268834e-05, -0.0012132910778746009, -0.2569125294685364, -1.176157832145691, -5.1020273531321436e-05, -0.9145468473434448, -0.030676748603582382, -0.8443124890327454, -0.02262679859995842, -0.15588833391666412, -0.004257424734532833, -0.08370748162269592, -0.25078049302101135, -8.391981828026474e-05, -0.11699297279119492, -0.0003518439189065248, -2.5805788040161133, -0.008821327239274979, -0.0014723424101248384, -0.11460299044847488, -0.004779343493282795, -0.06983128935098648, -0.15848396718502045, -0.020499972626566887, -0.00020215852418914437, -4.31528314948082e-05, -0.0018904210301116109, -0.004697359632700682, -0.02720387652516365, -0.14944855868816376, -0.008411219343543053, -0.0006786665762774646, -0.008250322192907333, -1.9907753085135482e-05, -0.007249596994370222, 0.0, -1.5735502529423684e-05, 0.0, 0.0, -0.40825673937797546, -0.014030393213033676, -0.12694232165813446, -8.260862523457035e-05, -0.003458235412836075, -0.08746249973773956, -0.1296612173318863, -0.36274775862693787, -0.0002240883477497846, -0.12093229591846466, -0.000608854868914932, -0.007805678993463516, -0.0035792829003185034, -0.00011276562872808427, -0.029008060693740845, -0.000205018965061754, -0.18602383136749268, -0.012357573956251144, -0.0001787979417713359, -0.019005926325917244, -0.5664271712303162, -2.455681169521995e-05, -0.0007515705074183643, -0.19367261230945587, -0.0829605758190155, -0.08141773194074631, -0.002465781755745411, -0.03685765713453293, -3.3378546504536644e-06, -0.017568329349160194, -1.9073468138230965e-06, -0.014318815432488918, -0.011576500721275806, -0.018060987815260887, -0.0010382506297901273, -0.0010099078062921762, -0.0005715643637813628, -0.007678280584514141, -0.0005716835148632526, -0.019356876611709595, -7.557583012385294e-05, -0.0003992714046034962, -0.007177757099270821, -0.0487341471016407, -0.03339457884430885, -0.05667084828019142, -0.00014709345123264939, -0.10015223175287247, -0.0005610798834823072, -0.0003601856005843729, -0.00041500062798149884, -3.838465272565372e-05, -0.0003175231395289302, -0.00024625606602057815, -0.5106722116470337, -0.0004353767435532063, -0.0003392120997887105, -0.0029828124679625034, -6.437094270950183e-05, -0.0022877492010593414, -0.031289514154195786, -1.9073468138230965e-06, -0.0007345362100750208, -0.02887962944805622, -0.02006518468260765, -0.10490050911903381, -0.0019566931296139956, -0.011334197595715523, -2.884823152271565e-05, -0.013180391862988472, -1.2516897186287679e-05, -0.005108518060296774, -0.000408327643526718, -2.0265558760002023e-06, -0.006270259618759155, -2.9802276912960224e-06, -0.001864482183009386, -0.004475102294236422, -0.016893649473786354, -9.775113539944869e-06, -9.536738616588991e-07, -6.5205356804654e-05, -0.013238273561000824, -0.00046921687317080796, -0.011783754453063011, -8.940297266235575e-05, -0.029293932020664215, -0.9931284189224243, -0.08416280895471573, -0.3292868435382843, -0.10332215577363968, -7.939023635117337e-05, -0.0031137813348323107, -0.00035386974923312664, -0.0005390383303165436, -0.0002714027068577707, -1.549708758830093e-05, -0.00040975757292471826, -2.7894584491150454e-05, -0.06101151555776596, -0.0004968600696884096, -3.0636318115284666e-05, -0.0021929519716650248, -0.0023296140134334564, -0.0030612533446401358, -1.5497195136049413e-06, -5.125986263010418e-06, -0.0001230164198204875, -7.426462980220094e-05, -0.0057736532762646675, -0.3831075131893158, -0.00035613393993116915, -1.311301275563892e-06, -0.3353852927684784, -0.0002033503697020933, -0.00018344627460464835, -0.006018254905939102, -9.095255518332124e-05, -0.02137913554906845, -1.173001766204834, -0.686673641204834, -0.4353691041469574, -0.002698829397559166, -2.0072412490844727, -0.12931790947914124, -0.6376567482948303, -0.0015482831513509154, -0.00032658010604791343, -1.6689286894688848e-06, -1.1920922133867862e-06, -0.2472153902053833, -0.006396889686584473, -0.02225402742624283, -0.6903606653213501, -0.0027308098506182432, -0.061480991542339325, -0.009735839441418648, -0.0002674698771443218, -0.05197259411215782, -0.15954168140888214, -0.0005913416389375925, -1.6302744150161743, -1.2032616138458252, -0.026004891842603683, -0.006724348291754723, -0.851547360420227, -0.004078998696058989, -0.0047836145386099815, -0.0162891186773777, -0.09792602062225342, -2.4967803955078125, -0.2297135293483734, -0.3172454833984375, -0.5445675253868103, -1.311301275563892e-06, -2.145764938177308e-06, -9.738924563862383e-05, -0.007042584475129843, -0.0033325394615530968, -0.0038498349022120237, -6.794906312279636e-06, -0.05960344523191452, -0.0008312584250234067, -2.098061486321967e-05, -5.578839045483619e-05, -0.0008000510279089212, -0.0006506709614768624, -0.000262106885202229, -0.06427758187055588, -1.154867172241211, -1.579179286956787, -0.02954315021634102, -7.223821739898995e-05, -0.0015244778478518128, -0.08370978385210037, -0.12484732270240784, -0.00020132421923335642, -0.006815283093601465, -0.032818980515003204, -4.172316494077677e-06, -0.009558270685374737, -0.003976534586399794, -0.06726133078336716, -0.0015635181916877627, -0.0005127069307491183, -2.145764938177308e-06, -2.3841855067985307e-07, -3.755022044060752e-05, -0.0004295380203984678, -4.768370445162873e-07, -2.288792165927589e-05, 0.0, -1.549708758830093e-05, -0.7617459893226624, -0.0007254829397425056, -0.004849220626056194, -0.7852566838264465, -4.291525328881107e-06, -2.3841830625315197e-06, -2.9802276912960224e-06, -1.2159273865108844e-05, -0.13631893694400787], "finish_reason": "stop"}], "metrics": {"energy": 910.2665217742915, "energy_per_token": 3.5696726344089864, "time": 22.269264, "time_per_token": 0.08733044705882353}}
{"outputs": [{"text": "dataframe = dataframe.copy()\n\n    # Remove stopwords\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: ' '.join([word for word in x.split() if word not in (STOPWORDS)]))\n\n    # Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r'\\d+', '', x))\n\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Apply vectorization to convert text into numeric format\n    vectorizer = CountVectorizer()\n    vectorizer.fit(dataframe[text_column])\n    features = vectorizer.transform(dataframe[text_column])\n    features = pd.DataFrame(features.toarray())\n\n    return features", "tokens": ["data", "frame", " =", " data", "frame", ".", "copy", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " (", "ST", "OP", "W", "OR", "DS", ")]", "))", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Apply", " vector", "ization", " to", " convert", " text", " into", " numeric", " format", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "features", " =", " vector", "izer", ".", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "features", " =", " pd", ".", "DataFrame", "(", "features", ".", "to", "array", "())", "\n", "\n", "    ", "return", " features", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.814683198928833, -0.48944759368896484, -1.267563819885254, -0.08472537994384766, -0.00027855331427417696, -0.537140429019928, -0.24625638127326965, -0.030608076602220535, -0.12710778415203094, -0.9887259602546692, -0.0006497179274447262, -0.5315820574760437, -1.2888128757476807, -0.3427400588989258, -0.10311657935380936, -0.7668007016181946, -0.003585459664463997, -0.6528165340423584, -0.0021589321549981833, -0.11552685499191284, -0.05743134021759033, -1.156323378381785e-05, -4.005352093372494e-05, -0.009705735370516777, -0.005524368025362492, -0.025006670504808426, -2.3841830625315197e-06, -0.007365098223090172, -0.003618955845013261, -2.264974000354414e-06, -1.0490362910786644e-05, -0.0015430459752678871, -0.007084250915795565, -0.24670106172561646, -0.0008547228644602001, -0.7401540279388428, -0.006933794356882572, -0.003834872040897608, -0.040464721620082855, -0.0005236684810370207, -0.22386427223682404, -0.00022396916756406426, -0.00030310326837934554, -3.2782016205601394e-05, -0.04642277583479881, -0.06946325302124023, -0.0034484940115362406, -0.00012027494085486978, -0.00010883215873036534, -0.1207508072257042, -2.0146166207268834e-05, -0.03534863144159317, -0.004088733810931444, -0.007035955786705017, -0.0057097673416137695, -0.36199966073036194, -3.58813522325363e-05, -1.6639512777328491, -0.016997259110212326, 0.0, -6.329813186312094e-05, 0.0, 0.0, -0.007760967127978802, -0.29284390807151794, -0.004505482967942953, -0.09097917377948761, -0.00011979816190432757, -0.0028145008254796267, -0.07066871225833893, -0.16018296778202057, -0.15314684808254242, -0.00026246439665555954, -0.021200353279709816, -0.0001323135511483997, -0.005254743155092001, -0.000393432448618114, -1.1920922133867862e-06, -3.158996332786046e-05, -0.0002783149539027363, -0.007324627134948969, -0.0025556781329214573, -3.576278118089249e-07, -0.0008635367848910391, -0.0004895919119007885, -4.768370445162873e-07, -3.099436753473128e-06, -5.221230458118953e-05, -0.00020561488054227084, -0.3385466933250427, -0.000408327643526718, -0.3099575340747833, -0.0048626260831952095, -0.0008484101272188127, -0.03717368468642235, -7.271740287251305e-06, -0.0013159195659682155, -0.20509618520736694, -0.09663081914186478, -0.15572592616081238, -0.008364052511751652, -0.005306682083755732, -2.50339189733495e-06, -0.011670883744955063, -1.2516897186287679e-05, -0.0024135764688253403, -0.01861027255654335, -0.0042841327376663685, -0.011327479034662247, -9.107174992095679e-05, -0.0006012300727888942, -0.030734552070498466, -0.03940967470407486, -0.09098538011312485, -0.041696131229400635, -0.00018606838420964777, -0.042714960873126984, -2.312633478140924e-05, -0.0008854520856402814, -0.00013493580627255142, -7.152555099310121e-07, -3.099436753473128e-06, -6.12716976320371e-05, -0.0006195771275088191, -0.0005467826849780977, -1.1920928244535389e-07, -0.0004161922261118889, -0.0001426833332516253, 0.0, -1.883488948806189e-05, -1.2040065485052764e-05, -0.00553598627448082, -1.83101224899292, -2.9682672902708873e-05, -0.007189355790615082, -0.5742597579956055, -0.1681874692440033, -0.0619177520275116, -0.0023685041815042496, -0.0004198861715849489, -3.6954811548639555e-06, -0.0010021670022979379, -7.390948667307384e-06, -0.0075920382514595985, -1.645074735279195e-05, -7.152555099310121e-07, -0.6961531639099121, -1.5735502529423684e-05, -0.0030790797900408506, -0.0003667397249955684, -0.0007666985620744526, -0.0008522216230630875, -0.012004628777503967, -0.01358866598457098, -0.00010513706365600228, -0.04328352212905884, -1.4903945922851562, -0.32791152596473694, -0.007658998016268015, -2.357461452484131, -0.4034770131111145, -0.0710466280579567, -0.5161071419715881, -0.24092410504817963, -0.1087798923254013, -0.23349107801914215, -0.0025412903632968664, -0.42721983790397644, -0.040436215698719025, -0.0012500813463702798, -0.0005336767644621432, -1.7881377516459906e-06, -1.4305104514278355e-06, -0.5171476602554321, -0.0261221956461668, -0.04701618850231171, -0.678791344165802, -0.20460596680641174, -0.01375740859657526, -0.0006905793561600149, -0.0653306320309639, -0.003717537270858884, -4.2199197196168825e-05, -0.004298138897866011, -0.0004226268210913986, -5.483612312673358e-06, -1.6212332411669195e-05, -0.03523631766438484, -0.012186829000711441, -0.22426149249076843, -3.889573574066162, -0.10672637820243835, -0.33094507455825806, -2.5748875486897305e-05, -1.156323378381785e-05, -0.08600731939077377, -0.0009517907164990902, -0.0021107555367052555, -1.1920928244535389e-07, -0.0007294139941222966, -0.0002053765201708302, -1.4305104514278355e-06, -3.933898824470816e-06, -0.0011980506824329495, -0.2930721938610077, -0.6802604794502258, -0.6630704998970032, -0.610156238079071, -0.4459468424320221, -5.8412379075889476e-06, -0.0008764001540839672, -0.5542232990264893, -0.15199889242649078, -0.003003730671480298, -0.15023688971996307, -3.2186455882765586e-06, -1.420046091079712, -0.019933847710490227, -1.592049241065979, -7.950943836476654e-05, -2.144845724105835, -0.027143433690071106, -0.6956478953361511, -3.2186455882765586e-06, -1.9073468138230965e-06, -2.3841830625315197e-06, -1.6689160474925302e-05, -2.1108851432800293, -0.0013499680208042264], "finish_reason": "stop"}], "metrics": {"energy": 821.8514035758973, "energy_per_token": 3.5888707579733508, "time": 19.695202, "time_per_token": 0.08600524890829693}}
{"outputs": [{"text": "df = dataframe[[text_column]]\n    df[text_column] = df[text_column].str.replace('[^\\w\\s]', '')  # Removes all punctuation\n    df[text_column] = df[text_column].str.replace('\\d+', '')  # Removes all numbers\n    df[text_column] = df[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in (STOPWORDS)]))\n\n    cv = CountVectorizer(lowercase=False)\n    cv_fit = cv.fit_transform(df[text_column])\n    df_countvector = pd.DataFrame(cv_fit.toarray(), columns=cv.get_feature_names_out())\n    return df_countvector", "tokens": ["df", " =", " data", "frame", "[[", "text", "_", "column", "]]", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", "  ", "#", " Rem", "oves", " all", " punct", "uation", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "d", "+'", ",", " '", "')", "  ", "#", " Rem", "oves", " all", " numbers", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " (", "ST", "OP", "W", "OR", "DS", ")]", "))", "\n", "\n", "    ", "cv", " =", " Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n", "    ", "cv", "_", "fit", " =", " cv", ".", "fit", "_", "transform", "(", "df", "[", "text", "_", "column", "])", "\n", "    ", "df", "_", "count", "vector", " =", " pd", ".", "DataFrame", "(", "cv", "_", "fit", ".", "to", "array", "()", ",", " columns", "=", "cv", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "return", " df", "_", "count", "vector", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.5570156574249268, -0.11959538608789444, -0.04516333341598511, -3.3378044463461265e-05, -1.2843801975250244, -0.0028473094571381807, -1.728519782773219e-05, -4.887569048150908e-06, -0.001168402610346675, -0.4405338168144226, -0.3092796504497528, -0.5265582203865051, -0.47088906168937683, -0.0449756495654583, -1.1086402082582936e-05, -1.3232143828645349e-05, -0.008926131762564182, -0.02052578330039978, -0.19058699905872345, -0.007339182775467634, -0.005036524031311274, -4.410734163684538e-06, -1.9073468138230965e-06, -0.0017378717893734574, -0.008450465276837349, -0.4059258699417114, -0.000844479538500309, -0.5543509125709534, -0.8084357380867004, -0.2751334011554718, -0.20895975828170776, -0.0012535341084003448, -0.04089416563510895, -0.01377351675182581, -0.022632276639342308, -0.0010307481279596686, -0.0005025792634114623, -0.1278189867734909, -0.04755309596657753, -1.8625941276550293, -0.0016413562698289752, -1.8988045454025269, -1.2293604612350464, -2.4579832553863525, -0.223963662981987, -0.1986236721277237, -0.551439642906189, -0.013647346757352352, -0.0742400735616684, -0.015492448583245277, -0.0004226268210913986, -3.099436753473128e-06, -4.768370445162873e-07, -0.0027064383029937744, -0.003697702893987298, -0.006706941872835159, -0.0007967158453539014, -0.001450082752853632, -1.1920928244535389e-07, -9.536738616588991e-07, -0.00014029949670657516, -0.0009678685455583036, -0.16831663250923157, -7.497983460780233e-05, -0.10800579935312271, -0.12223440408706665, -0.07110413908958435, -0.009885993786156178, -0.4693445861339569, -2.3841855067985307e-07, -0.0024628089740872383, -0.007470765151083469, -0.05164026468992233, -1.4424220353248529e-05, -0.06939975172281265, -0.007424736861139536, -0.054740339517593384, -0.23280589282512665, -0.02313723973929882, -0.09569615125656128, -0.15726175904273987, -0.037867192178964615, -0.0005539313424378633, -5.960462772236497e-07, -1.4305104514278355e-06, -0.0020019030198454857, -0.00351204932667315, -0.027478666976094246, -0.002231728285551071, -0.0026811149436980486, -5.960462772236497e-07, -9.536738616588991e-07, -0.0007331067463383079, -0.0013943722005933523, -0.8957836627960205, -0.0012559153838083148, -0.5824470520019531, -0.018940774723887444, -0.0004978132783435285, -0.2419169694185257, -0.00022015532886143774, -0.0002450642641633749, -6.317892984952778e-05, -0.04977623000741005, -0.04657537117600441, -0.002143468242138624, -0.00039891392225399613, -0.0002752163854893297, -0.022608384490013123, -1.9788545614574105e-05, -0.0021395429503172636, -0.0033489353954792023, -0.011029940098524094, -0.0105577502399683, -0.08082316815853119, -0.002151795197278261, -1.1716697216033936, -0.05477340519428253, 0.0, -1.4662635294371285e-05, 0.0, 0.0, -0.00306018372066319, -0.015006860718131065, -0.14353445172309875, -1.3044867515563965, -0.0003997480380348861, -2.0348761081695557, -0.006204628385603428, -0.00042358008795417845, -1.311301275563892e-06, -1.1920928244535389e-07, -1.5415074825286865, -0.7377446293830872, -0.00427143182605505, -6.48477507638745e-05, -0.007341549266129732, -0.5328612327575684, -0.22253015637397766, -0.21502140164375305, -0.052238624542951584, -1.5270873308181763, -0.20498323440551758, -1.4890882968902588, -0.003765280358493328, -0.0005952732171863317, -6.9141146923357155e-06, -0.0001674750237725675, -0.017407726496458054, -0.0005704921204596758, -0.00020466140995267779, -0.010543241165578365, -0.011761016212403774, -0.001095290994271636, -7.629365427419543e-06, -8.34461570775602e-06, -0.03597130626440048, -0.030147472396492958, -0.25508326292037964, -1.1598823070526123, -0.31333887577056885, -0.6539961695671082, -2.0431182384490967, -1.9626295566558838, -0.0036371287424117327, -5.245195097813848e-06, -0.0018309272127225995, -0.0021289559081196785, -0.009216856211423874, -0.004095619544386864, -1.7881377516459906e-06, -0.0009532198309898376, -0.06888268142938614, -2.264974000354414e-06, -0.010681715793907642, -0.006728729233145714, -0.003489716211333871, -0.001073856488801539, -0.0006549597019329667, -1.156323378381785e-05, -4.768258077092469e-05, 0.0, -3.0636318115284666e-05, -1.1920928244535389e-07, -1.0251946150674485e-05, -0.13964135944843292, -0.00017021637177094817, -0.0036566078197211027, -0.010149888694286346, -0.9933049082756042, -0.08415919542312622, -0.004227154888212681, -0.0014831743901595473, -1.490105023549404e-05, -7.629365427419543e-06, -1.1954554319381714, -3.2186455882765586e-06, -2.7418097943154862e-06, -2.861018856492592e-06, -1.3708974620385561e-05, -0.12131069600582123], "finish_reason": "stop"}], "metrics": {"energy": 728.3785475616459, "energy_per_token": 3.6237738684659, "time": 17.65198, "time_per_token": 0.08782079601990049}}
{"outputs": [{"text": "# Lowercase all text\n    df = dataframe.copy()\n    df[text_column] = dataframe[text_column].str.lower()\n    # Remove numbers and punctuation\n    df[text_column] = df[text_column].apply(lambda x: re.sub('[^a-zA-Z]', ' ', x))\n    # Remove stopwords\n    df[text_column] = df[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n    # Apply Count Vectorization\n    vectorizer = CountVectorizer()\n    vectorized_text = vectorizer.fit_transform(df[text_column])\n    # Convert to DataFrame\n    feature_names = vectorizer.get_feature_names()\n    result = pd.DataFrame(vectorized_text.toarray(), columns=feature_names)\n    return result", "tokens": ["#", " Lower", "case", " all", " text", "\n", "    ", "df", " =", " data", "frame", ".", "copy", "()", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "#", " Remove", " numbers", " and", " punct", "uation", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " x", "))", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "    ", "#", " Apply", " Count", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "ized", "_", "text", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "[", "text", "_", "column", "])", "\n", "    ", "#", " Convert", " to", " Data", "Frame", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", ".", "to", "array", "()", ",", " columns", "=", "feature", "_", "names", ")", "\n", "    ", "return", " result", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5974228382110596, -3.4513421058654785, -0.5723410844802856, -1.7704722881317139, -0.48972421884536743, -0.43702659010887146, -0.0011187491472810507, -2.0131900310516357, -0.2585117518901825, -0.02138800360262394, -2.9205850296420977e-05, -0.28060299158096313, -0.013419542461633682, -0.014280740171670914, -0.07691582292318344, -0.006274998188018799, -0.03576451912522316, -0.11358697712421417, -0.028505243360996246, -1.645074735279195e-05, -7.986990567587782e-06, -0.0023756397422403097, -0.0004539651272352785, -1.4035072326660156, -1.3708974620385561e-05, -0.007317999843508005, -0.0014119903789833188, -2.145764938177308e-06, -2.264974000354414e-06, -0.00020883286197204143, -0.001096481690183282, -0.056185923516750336, -1.168244216387393e-05, -0.005350317806005478, -1.8954096958623268e-05, -0.007872032932937145, -1.707930326461792, -0.06020558997988701, -0.21234865486621857, -2.3313651084899902, -1.725401520729065, -0.2979743182659149, -0.02125917375087738, -0.17293766140937805, -0.0022601555101573467, -0.046203453093767166, -0.01123047061264515, -0.001293656532652676, -3.099436753473128e-06, -1.168244216387393e-05, -0.0017350156558677554, -0.00316987163387239, -0.6461466550827026, -0.0017929683672264218, -0.0011526852613314986, -2.50339189733495e-06, -1.0728830375228426e-06, -0.0005030558677390218, -0.000615407363511622, -0.26573362946510315, -0.0005946775199845433, -0.5023087859153748, -0.03289234638214111, -0.0011823337990790606, -0.07088284194469452, -3.015949550899677e-05, -0.0010486110113561153, -1.4882659912109375, -0.024288708344101906, -0.02087748609483242, -0.09385836869478226, -2.9802276912960224e-06, -3.6238969187252223e-05, -0.21545079350471497, -8.34461570775602e-06, -0.00768608832731843, -0.27188029885292053, -0.023613890632987022, -0.00019214690837543458, -0.06545167416334152, -0.000188332938705571, -0.00021395778458099812, -0.37345755100250244, -0.006612917874008417, -0.007939092814922333, -0.02159486711025238, -0.0600854828953743, -0.25199946761131287, -0.07757272571325302, -0.23366567492485046, -0.05078086256980896, -0.0003149013500660658, -0.609280526638031, -0.009429913945496082, -0.0007537146448157728, -1.0728830375228426e-06, -2.622600959512056e-06, -0.001370087033137679, -0.009008124470710754, -0.03081257827579975, -0.0008364992681890726, -6.592056161025539e-05, -9.536738616588991e-07, -1.0609570381348021e-05, -0.00014077626110520214, -0.0006997520686127245, -0.002856937935575843, -0.00041345154750160873, -0.17428188025951385, -0.0018030828796327114, -0.0004029654082842171, -0.16219943761825562, -6.90197994117625e-05, -0.00028427375946193933, -0.00012408917245920748, -0.06604048609733582, -0.04747261479496956, -0.0015500684967264533, -0.00018404220463708043, -5.578839045483619e-05, -0.007230542600154877, -9.65590606938349e-06, -0.0008289953111670911, -0.0021584564819931984, -0.002293933881446719, -0.0011954312212765217, -0.015232308767735958, -0.0001134808044298552, -0.1625738888978958, 0.0, -3.3378044463461265e-05, 0.0, 0.0, -0.0015564957866445184, -0.0006842655711807311, -0.17782266438007355, -0.03829476982355118, -1.186995267868042, -2.469773054122925, -1.4874229431152344, -0.5457085967063904, -0.35910123586654663, -0.0009758477681316435, -0.5761418342590332, -0.04202240705490112, -0.0011096993694081903, -0.0003844952443614602, -2.0265558760002023e-06, -2.3841855067985307e-07, -0.17263948917388916, -0.012078596279025078, -0.0035944872070103884, -0.9608302116394043, -2.7525851726531982, -0.0826975479722023, -0.35312068462371826, -0.03503122180700302, -0.01062580943107605, -5.602820692729438e-06, -1.0847986231965479e-05, -0.001496029901318252, -3.933898824470816e-06, -5.9126061387360096e-05, -0.0008561521535739303, -0.006422356236726046, -0.002667323686182499, -0.0003965306677855551, -1.490105023549404e-05, -3.909988299710676e-05, -0.032591115683317184, -0.042903415858745575, -0.09104382246732712, -0.5771678686141968, -0.7054489254951477, -0.9530934691429138, -0.13348793983459473, -0.009507850743830204, -0.16729992628097534, -0.0003924791526515037, -1.9476344585418701, -0.00042822727118618786, -0.0004698126285802573, -0.0015544723719358444, -0.06089352071285248, -1.0728830375228426e-06, -2.50339189733495e-06, -4.029192859889008e-05, -1.1920928244535389e-07, -3.933898824470816e-06, 0.0, -5.960462772236497e-07, -0.6091281771659851, -0.003613016800954938, -0.0014972201315686107, -0.5842288136482239, -0.1801915466785431, -0.0067210327833890915, -4.768370445162873e-07, -0.0014109190087765455, -0.025789642706513405, -0.19100572168827057, -4.768370445162873e-07, -5.960462772236497e-07, -9.536738616588991e-07, -0.0008961713756434619, -0.04265647754073143, -4.768370445162873e-07, -0.0027883481234312057, -0.007766408380120993, -0.0023924082051962614, -0.0031798535492271185, -0.00035398892941884696, -2.3841855067985307e-07, -7.152555099310121e-07, -0.005132119636982679, -0.005397983361035585, -0.21957024931907654, -0.16922420263290405, -0.0016502822982147336, -1.0415778160095215, -2.7418097943154862e-06, -2.145764938177308e-06, -2.861018856492592e-06, -1.3351351299206726e-05, -0.13402271270751953], "finish_reason": "stop"}], "metrics": {"energy": 780.7303296546944, "energy_per_token": 3.469912576243086, "time": 19.494686, "time_per_token": 0.0866430488888889}}
{"outputs": [{"text": "# Remove stopwords from each text entry in the specified column\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n\n    # Remove numbers and punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r'\\d+', '', re.sub(r'[^\\w\\s]', '', x)))\n\n    # Convert text data into a numeric format suitable for analysis\n    vectorizer = CountVectorizer()\n    transformed_data = vectorizer.fit_transform(dataframe[text_column])\n    feature_names = vectorizer.get_feature_names_out()\n    feature_names = [x for x in feature_names if x != '']\n    feature_names = feature_names + ['count']\n\n    # Create a DataFrame with each word (after preprocessing) as a column and their count as rows\n    df = pd.DataFrame([transformed_data.toarray().sum", "tokens": ["#", " Remove", " stop", "words", " from", " each", " text", " entry", " in", " the", " specified", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", " and", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", ")))", "\n", "\n", "    ", "#", " Convert", " text", " data", " into", " a", " numeric", " format", " suitable", " for", " analysis", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "trans", "formed", "_", "data", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "feature", "_", "names", " =", " [", "x", " for", " x", " in", " feature", "_", "names", " if", " x", " ", "!", "=", " '", "']", "\n", "    ", "feature", "_", "names", " =", " feature", "_", "names", " +", " ['", "count", "']", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " each", " word", " (", "after", " pre", "processing", ")", " as", " a", " column", " and", " their", " count", " as", " rows", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "([", "trans", "formed", "_", "data", ".", "to", "array", "()", ".", "sum"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -2.4077630043029785, -2.4911575317382812, -1.806264877319336, -2.263021945953369, -2.0326626300811768, -0.23517143726348877, -0.5460718274116516, -0.050164055079221725, -0.2305080145597458, -0.002976037794724107, -0.7320900559425354, -0.013860168866813183, -0.08517049998044968, -0.022053830325603485, -6.437280717364047e-06, -2.932505594799295e-05, -0.006106173619627953, -0.0057801720686256886, -0.021263841539621353, -7.152555099310121e-07, -0.006477195303887129, -0.0026782616041600704, -4.410734163684538e-06, -3.576278118089249e-07, -0.000895933189895004, -0.004435107111930847, -0.22485269606113434, -0.0005818104837089777, -0.6186988949775696, -0.030089404433965683, -0.0023070168681442738, -0.24952176213264465, -0.0004822045157197863, -0.0007468056865036488, -0.0002177716523874551, -0.04114805907011032, -0.1327558159828186, -0.004129217471927404, -0.0010555178159847856, -0.0016632545739412308, -0.09598372131586075, -0.00014149141497910023, -0.04882065951824188, -0.00917102675884962, -0.05015328526496887, -0.03816637769341469, -0.1782374083995819, -0.08626291900873184, -0.08471815288066864, 0.0, -1.2993727978027891e-05, 0.0, 0.0, -0.0070377313531935215, -0.0033068754710257053, -0.3381233513355255, -0.00070296844933182, -0.001450082752853632, -0.12914936244487762, -0.21476657688617706, -0.8472117781639099, -0.057690296322107315, -0.005331108812242746, -1.8805588483810425, -0.0005628670332953334, -0.12814655900001526, -0.0008336406317539513, -0.015919608995318413, -0.0004888770054094493, -5.602820692729438e-06, -7.510157047363464e-06, -0.0014019908849149942, -0.003999568987637758, -0.004113427828997374, -1.9073468138230965e-06, -0.0007182164117693901, -0.00032217081752605736, -2.7418097943154862e-06, -1.883488948806189e-05, -0.00013076403411105275, -0.00029404606902971864, -0.12589001655578613, -0.0001908358681248501, -0.0068028513342142105, -0.020157719030976295, -0.003646987257525325, -0.13799461722373962, -1.6569954823353328e-05, -0.0017802356742322445, -0.4942340552806854, -0.11617278307676315, -0.8287347555160522, -0.19964760541915894, -0.09927179664373398, -0.0001174142598756589, -0.04915528744459152, -0.0011127954348921776, -1.9132721424102783, -1.0251946150674485e-05, -0.00011944057769142091, -0.10421685874462128, -0.004004555754363537, -0.2677111029624939, -0.010499595664441586, -0.003827746957540512, -0.0010989824077114463, -0.011863275431096554, -2.932505594799295e-05, -0.010192841291427612, -0.002273952355608344, -0.00011860620725201443, -0.4231812357902527, -0.0002420847595203668, -0.006700192112475634, -0.062162891030311584, -0.005743192508816719, -0.013855230994522572, -0.0005165196489542723, -0.00850093737244606, -1.464718222618103, -0.4708103537559509, -2.9169657230377197, -0.2832070291042328, -0.9498741030693054, -0.16355866193771362, -0.06859955936670303, -0.35402244329452515, -0.0018876844551414251, -0.033864058554172516, -0.13975052535533905, -0.0005996812833473086, -0.3322102725505829, -0.03840479254722595, -0.0015939876902848482, -0.0006672301678918302, -1.1920922133867862e-06, -9.536738616588991e-07, -0.41003262996673584, -0.04643210396170616, -0.047649942338466644, -3.19748592376709, -0.01958228088915348, -0.11393263936042786, -0.5387721657752991, -0.038971222937107086, -0.07032809406518936, -2.9802276912960224e-06, -2.90866428258596e-05, -0.00045622908510267735, -3.3378546504536644e-06, -4.005352093372494e-05, -0.0027259355410933495, -0.008015608415007591, -5.709961988031864e-05, -0.004804139491170645, -0.0003968881501350552, -8.821448318485636e-06, -9.095255518332124e-05, -0.021494649350643158, -0.19580720365047455, -1.3748505115509033, -0.6816139817237854, -0.0002681849291548133, -0.001259606215171516, -0.0011999557027593255, -0.012903056107461452, -1.1920928244535389e-07, -5.245195097813848e-06, -0.00016544880054425448, -1.1920928244535389e-07, -9.059865078597795e-06, 0.0, -7.152555099310121e-07, -0.6720293760299683, -5.149708886165172e-05, -0.0005884823040105402, -0.018019894137978554, -1.6896227598190308, -1.9135799407958984, -0.0018204560037702322, -0.8439368009567261, -0.41547349095344543, -0.9359999299049377, -2.1882176399230957, -0.2961899936199188, -0.0012029323261231184, -0.0019263536669313908, -0.0042177774012088776, -2.3841830625315197e-06, -6.079655122448457e-06, -0.046171922236680984, -0.12911856174468994, -0.6890538930892944, -2.861018856492592e-06, -0.00011121608258690685, -0.20190948247909546, -0.1010107696056366, -0.19432398676872253, -1.5822027921676636, -1.511716365814209, -0.0007514513563364744, -0.0707148015499115, -0.3384389281272888, -2.678701877593994, -4.768360213347478e-06, -3.933898824470816e-06, -0.2246532291173935, -0.7697632908821106, -2.1701347827911377, -0.224014550447464, -0.048718251287937164, -0.3624890148639679, -0.0005361788207665086, -0.08313128352165222, -0.6015907526016235, -0.12511348724365234, -0.45862478017807007, -0.0019434866262599826, -0.38063108921051025, -0.6499477028846741, -0.0492267832159996, -1.0434465408325195, -0.008668058551847935, -0.015254498459398746, -0.004087071865797043, -0.001320562674663961, -0.0031597709748893976, -0.0054673426784574986, -0.006928940303623676, -0.056966375559568405, -0.017511986196041107, -0.009671851992607117, -0.005537053104490042, -0.002862881403416395, -0.08972648531198502, -0.0006848612101748586, -1.6207739114761353, -0.3250712752342224, -0.005096657667309046, -1.0728830375228426e-06, -0.0046292515471577644, -2.282623052597046, -0.7790836095809937, -0.0007600279641337693, -0.0006804534932598472, -6.90197994117625e-05, -0.1651661992073059, -0.08396093547344208, -0.00028379703871905804, -0.33687642216682434, -0.0756194069981575, -0.16340681910514832], "finish_reason": "length"}], "metrics": {"energy": 896.752002718925, "energy_per_token": 3.502937510620801, "time": 22.16195, "time_per_token": 0.0865701171875}}
{"outputs": [{"text": "df = dataframe[text_column]\n    df = df.str.lower()\n    df = df.replace(r'\\b(?:\\w+)\\b', lambda x: x.group(0) if x.group(0) not in STOPWORDS else '')\n    df = df.replace('\\d+', ' ')\n    df = df.apply(lambda x: re.sub(r'[^\\w\\s]', '', x))\n\n    vectorizer = CountVectorizer()\n    vectors = vectorizer.fit_transform(df)\n    vectors_df = pd.DataFrame(vectors.toarray(), columns=vectorizer.get_feature_names_out())\n    return vectors_df", "tokens": ["df", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "df", " =", " df", ".", "str", ".", "lower", "()", "\n", "    ", "df", " =", " df", ".", "replace", "(", "r", "'\\", "b", "(", "?", ":\\", "w", "+", ")\\", "b", "'", ",", " lambda", " x", ":", " x", ".", "group", "(", "0", ")", " if", " x", ".", "group", "(", "0", ")", " not", " in", " ST", "OP", "W", "OR", "DS", " else", " '", "')", "\n", "    ", "df", " =", " df", ".", "replace", "('", "\\", "d", "+'", ",", " '", " '", ")", "\n", "    ", "df", " =", " df", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", ")", "\n", "    ", "vectors", "_", "df", " =", " pd", ".", "DataFrame", "(", "vectors", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "return", " vectors", "_", "df"], "logprobs": [-2.5570156574249268, -0.11959538608789444, -0.04516333341598511, -3.3378044463461265e-05, -1.8009741306304932, -0.013940111733973026, -8.821448318485636e-06, -6.913899414939806e-05, -0.0010587330907583237, -0.41734474897384644, -0.2858544886112213, -0.8363814949989319, -0.12965723872184753, -0.11326344311237335, -0.006855419836938381, -1.1303415298461914, -0.0003519630990922451, -1.0664737224578857, -0.0016645636642351747, -0.28366926312446594, -0.09834975004196167, -0.1290726661682129, -0.009676220826804638, -0.0212958175688982, -0.00042226933874189854, -1.6071374416351318, -0.2309293895959854, -0.08312974870204926, -0.2734401226043701, -2.3007843494415283, -2.1275134086608887, -0.08350299298763275, -2.450565814971924, -1.0116934776306152, -0.6260681748390198, -0.4950815439224243, -0.004632692784070969, -0.10758325457572937, -0.00032729512895457447, -0.030551768839359283, -0.06528015434741974, -0.007508627604693174, -0.1792459338903427, -0.014148875139653683, -0.0952971950173378, -0.05803164467215538, -0.027829207479953766, -0.0013135385233908892, -0.0393022857606411, -0.02479446493089199, -0.0005895545473322272, -2.5987286790041253e-05, -0.0005853846669197083, -0.007441657595336437, -8.749579137656838e-05, -0.22461751103401184, -0.00011979816190432757, -0.005160582717508078, -1.1920928244535389e-07, -1.6689160474925302e-05, 0.0, 0.0, -0.012593507766723633, -0.5361559987068176, -0.006331622134894133, -0.03865645080804825, -0.007384149823337793, -0.03337855264544487, -0.0012448427733033895, -0.009483643807470798, -0.00013386306818574667, -0.209680438041687, -1.2629776000976562, -0.877206027507782, -0.18293613195419312, -0.0474240705370903, -1.3351351299206726e-05, -0.15520019829273224, -2.230583429336548, -0.20876550674438477, -0.0344359464943409, -0.008592301979660988, -0.031897976994514465, -0.0012376990634948015, -0.005400354508310556, -5.6622808187967166e-05, -2.702214002609253, -0.001023364719003439, -0.006219555623829365, -0.02705525793135166, -0.00295452494174242, -0.05020622909069061, -1.0371154530730564e-05, -0.006299045868217945, -0.04249825328588486, -0.003100709058344364, -0.15200349688529968, -0.01740667223930359, -0.004850288387387991, -0.00012051333033014089, -0.003975228406488895, -5.006777428206988e-06, -0.01425230037420988, -0.000713213172275573, -5.209310256759636e-05, -0.6561375856399536, -0.00013052565918769687, -0.01514190062880516, -0.01855340413749218, -0.022924287244677544, -1.4052321910858154, -0.00028272447525523603, -0.922105610370636, -0.03277352452278137, -0.001334610627964139, -0.00045563330058939755, -1.9073468138230965e-06, -9.536738616588991e-07, -0.5219231247901917, -0.01056140661239624, -0.032881155610084534, -2.189615249633789, -0.010998930782079697, -0.005975359119474888, -1.6689286894688848e-06, -2.9205850296420977e-05, -0.0015303102554753423, -1.490105023549404e-05, -1.2040065485052764e-05, -0.00022539935889653862, -0.003786182263866067, -0.06701721251010895, -0.12058714032173157, -0.28624001145362854, -2.813340663909912, -1.3851008415222168, -0.16700823605060577, -0.0006820021662861109, -0.0052400389686226845, -4.768370445162873e-07, -0.0009091534884646535, -0.0015372138004750013, -0.005596090108156204, -0.0010183630511164665, -0.05294268578290939, -4.291525328881107e-06, -0.029405411332845688, -0.0014218707801774144, -0.004466913174837828, -0.004011798650026321, -0.009801357984542847, 0.0, -6.6756979322235566e-06, -0.00033968876232393086, -3.576278118089249e-07, -7.629365427419543e-06, 0.0, -2.1815061700181104e-05, -0.3728374242782593, -0.0021151569671928883, -0.0021554825361818075, -0.0025200059171766043, -0.8735774755477905, -0.13536515831947327, -0.00315180909819901, -0.0006188622792251408, -2.038458114839159e-05], "finish_reason": "stop"}], "metrics": {"energy": 588.2055998363497, "energy_per_token": 3.5221892205769447, "time": 14.371472, "time_per_token": 0.08605671856287425}}
{"outputs": [{"text": "# Filter stopwords\n    dataframe = dataframe[dataframe[text_column].map(lambda x: len(x.split()) >= 1)]\n\n    # Convert to lowercase\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: x.lower())\n\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r'[^\\w\\s]', '', x))\n\n    # Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: re.sub(r'\\d+', '', x))\n\n    # Remove stopwords\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: \" \".join([token for token in x.split() if token not in STOPWORDS]))\n\n    # Apply vectorization\n    count_vectorizer = CountVectorizer()\n    vectorized_text = count_vectorizer.fit_transform(dataframe[text_column])", "tokens": ["#", " Filter", " stop", "words", "\n", "    ", "data", "frame", " =", " data", "frame", "[", "data", "frame", "[", "text", "_", "column", "]", ".", "map", "(", "lambda", " x", ":", " len", "(", "x", ".", "split", "())", " >=", " ", "1", ")]", "\n", "\n", "    ", "#", " Convert", " to", " lower", "case", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " x", ".", "lower", "())", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "token", " for", " token", " in", " x", ".", "split", "()", " if", " token", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Apply", " vector", "ization", "\n", "    ", "count", "_", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "ized", "_", "text", " =", " count", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])"], "logprobs": [-0.5974228382110596, -3.680037021636963, -2.3314833641052246, -0.16050365567207336, -0.9884814023971558, -0.004048129543662071, -1.7449822425842285, -0.47826358675956726, -1.4572060108184814, -0.21023191511631012, -0.0006435230607166886, -0.6056899428367615, -1.2351775169372559, -2.0265558760002023e-06, -0.07521125674247742, -0.007500818464905024, -1.1324817933200393e-05, -6.437094270950183e-05, -0.0004911408759653568, -0.034459903836250305, -1.3518273830413818, -0.0005133026279509068, -0.08541175723075867, -0.12204333394765854, -0.0019872693810611963, -1.0451081991195679, -0.14243434369564056, -0.549504280090332, -0.0363696925342083, -0.0026801638305187225, -0.48928332328796387, -1.0415353775024414, -0.00914409477263689, -1.2342393398284912, -0.34023529291152954, -0.026769325137138367, -0.38945239782333374, -0.00021431533969007432, -0.06838160008192062, -2.0159106254577637, -0.8560320734977722, -0.09439219534397125, -0.25061628222465515, -0.49057596921920776, -0.00014911970356479287, -0.05415894463658333, -0.0020499660167843103, -0.03662623092532158, -0.005096301902085543, -7.629365427419543e-06, -2.8490614567999728e-05, -0.004063920583575964, -0.0008405489497818053, -0.009140077978372574, -7.033323527139146e-06, -0.0017014563782140613, -0.0003334919747430831, -2.7418097943154862e-06, -3.3378546504536644e-06, -5.495397272170521e-05, -0.0006164796068333089, -2.4558982849121094, -0.0004801789182238281, -0.11100609600543976, -0.01170363835990429, -0.0012406755704432726, -0.16625180840492249, -0.0017755947774276137, -0.005533733870834112, -0.007393261417746544, -0.0021112312097102404, -0.019752586260437965, -0.0001662831346038729, -0.006369527895003557, -0.16146571934223175, -2.8721399307250977, -0.05576851963996887, -0.22849439084529877, -0.00020787939138244838, -0.06724227219820023, -0.00017069313616957515, -0.005243714898824692, -0.00035613393993116915, -1.311301275563892e-06, -8.4638240878121e-06, -0.00020919041708111763, -0.002120153047144413, -0.004071637522429228, -7.152555099310121e-07, -0.0003591130953282118, -0.00048756631440483034, -2.861018856492592e-06, -1.6093124941107817e-05, -3.85038583772257e-05, -0.0002489972102921456, -0.06253989785909653, -0.0008232779800891876, -0.14902231097221375, -0.00953489076346159, -0.0003349220205564052, -0.030650274828076363, -3.349725011503324e-05, -0.0013873485149815679, -0.08576194196939468, -0.015703117474913597, -0.20681945979595184, -0.007292201276868582, -0.016417302191257477, -0.00037520044133998454, -0.0031068886164575815, -6.270212179515511e-05, -0.014819654636085033, -0.00027569307712838054, -6.675497570540756e-05, -0.12970037758350372, -8.296622399939224e-05, -0.007575474679470062, -0.006168138235807419, -0.002409533131867647, -0.01265601348131895, -0.00014852374442853034, -0.002048181602731347, -0.12165603041648865, -0.5905747413635254, -0.04797814413905144, -5.745722592109814e-05, -0.005795579869300127, -9.775113539944869e-06, -0.0020053531043231487, -6.711257447022945e-05, 0.0, -1.6212332411669195e-05, -3.8265450712060556e-05, -0.00044764988706447184, -0.0005080600967630744, -4.887569048150908e-06, -0.00022432672267314047, -2.5510462364763953e-05, -2.3841855067985307e-07, -1.6569954823353328e-05, -2.145764938177308e-06, -2.825220326485578e-05, -0.051003824919462204, -3.659658250398934e-05, -0.004961678292602301, -0.0018870895728468895, -0.00010299152199877426, -0.07010239362716675, -2.3841855067985307e-07, -0.0005446380819194019, -0.026185370981693268, -0.0033292127773165703, -0.12698380649089813, -0.0021282420493662357, -0.04043060541152954, -1.311301275563892e-06, -0.0027925088070333004, -6.6756979322235566e-06, -8.535020606359467e-05, -0.004033051431179047, -0.0010281282011419535, -0.0038658662233501673, -0.00010895135346800089, -0.01292494498193264, -0.23214980959892273, -0.06479737162590027, -0.12767861783504486, -0.029483890160918236, -0.00017212340026162565, -0.07580562680959702, -0.0003762729174923152, -0.0035159694962203503, -0.00031716562807559967, -2.50339189733495e-06, -1.6331539882230572e-05, -0.0010796914575621486, -0.000993354362435639, -0.0019242119742557406, -3.576278118089249e-07, -0.0005739472107961774, -0.00010346830822527409, -2.3841855067985307e-07, -3.6954811548639555e-06, -0.00012206286191940308, -0.0005749003030359745, -0.0004737447015941143, -0.00024184639914892614, -1.0094642639160156, -0.0031936378218233585, -0.0013236580416560173, -0.0055902814492583275, -2.95634672511369e-05, -1.5120632648468018, -0.0007351318490691483, -5.352353764465079e-05, -7.378782902378589e-05, -2.469092607498169, -2.5706288814544678, -0.003353331470862031, -0.00010930894495686516, -5.3165931603871286e-05, -0.009252762421965599, -0.0001003691868390888, -0.0012371037155389786, -0.04072021320462227, -0.001705383649095893, -0.01097417064011097, -0.05100790411233902, -2.50339189733495e-06, -0.0041359844617545605, 0.0, -6.329813186312094e-05, 0.0, -1.1920928244535389e-07, -0.22846195101737976, -0.0020093980710953474, -0.008157625794410706, -0.00010477947944309562, -0.04248260334134102, -2.01521897315979, -0.4140145480632782, -0.018646663054823875, -0.3796996772289276, -0.0019163592951372266, -2.3030669689178467, -0.18275602161884308, -0.40385639667510986, -0.14001606404781342, -0.0006873629172332585, -0.00034505134681239724, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.23547102510929108, -0.008861619979143143, -0.05355755239725113, -2.9172887802124023, -0.5342488288879395, -0.06222304701805115, -0.4663226902484894, -0.06270729750394821, -0.003159176791086793, -1.311301275563892e-06, -1.311301275563892e-06, 0.0, -7.4741430580616e-05, -0.00041416651220060885, -1.3828182090946939e-05, -0.00018439977429807186, -0.0017035985365509987, -0.006266350392252207, -6.0437283536884934e-05, -0.0064519671723246574, -0.0006494796834886074, -4.887569048150908e-06, -1.3470558769768104e-05, -0.05657397210597992], "finish_reason": "length"}], "metrics": {"energy": 896.0466453142167, "energy_per_token": 3.500182208258659, "time": 22.1213, "time_per_token": 0.086411328125}}
{"outputs": [{"text": "# Preprocessing the text data\n    dataframe[text_column] = dataframe[text_column].astype(str)\n    dataframe[text_column] = dataframe[text_column].str.replace('[^\\w\\s]', '')\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join(x.lower() for x in str(x).split()))\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join(x for x in str(x).split() if x not in STOPWORDS))\n    dataframe[text_column] = dataframe[text_column].str.replace('\\d', '')\n\n    # CountVectorization\n    vec = CountVectorizer()\n    count_matrix = vec.fit_transform(dataframe[text_column])\n    df = pd.DataFrame(count_matrix.toarray(), columns=vec.get_feature_names_out())\n\n    # Return the resulting DataFrame\n    return df<", "tokens": ["#", " Pre", "processing", " the", " text", " data", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "x", ".", "lower", "()", " for", " x", " in", " str", "(", "x", ")", ".", "split", "()))", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "x", " for", " x", " in", " str", "(", "x", ")", ".", "split", "()", " if", " x", " not", " in", " ST", "OP", "W", "OR", "DS", "))", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "d", "'", ",", " '", "')", "\n", "\n", "    ", "#", " Count", "Vector", "ization", "\n", "    ", "vec", " =", " Count", "Vector", "izer", "()", "\n", "    ", "count", "_", "matrix", " =", " vec", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "count", "_", "matrix", ".", "to", "array", "()", ",", " columns", "=", "vec", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "\n", "    ", "#", " Return", " the", " resulting", " Data", "Frame", "\n", "    ", "return", " df", "<"], "logprobs": [-0.5974228382110596, -2.9913907051086426, -1.2479320764541626, -1.9512360095977783, -0.288431853055954, -0.8916800618171692, -0.30621537566185, -0.018069066107273102, -1.2988156080245972, -0.08127981424331665, -0.35145413875579834, -0.04099085554480553, -1.0251946150674485e-05, -4.279521817807108e-05, -0.006905736401677132, -0.010886915028095245, -0.027185315266251564, -4.768370445162873e-07, -0.0025675685610622168, -0.0017213303362950683, -1.1920922133867862e-06, -3.6954811548639555e-06, -0.0018862566212192178, -0.012452472001314163, -2.082810640335083, -1.1920928244535389e-07, -0.238183856010437, -0.03286939114332199, -0.004042430780827999, -0.3251771032810211, -0.0956914871931076, -0.16537901759147644, -0.0029573773499578238, -0.025639651343226433, -0.0031885281205177307, -4.172316494077677e-06, -1.5497195136049413e-06, -0.00838864129036665, -0.004176940768957138, -0.01155835296958685, -7.152555099310121e-07, -0.0012137673329561949, -0.0034761736169457436, -9.536738616588991e-07, -1.8596476365928538e-05, -0.0022137677296996117, -0.004607062321156263, -0.38459640741348267, -0.0002150304353563115, -0.6670460104942322, -0.6726834177970886, -0.29556798934936523, -0.33927151560783386, -0.0007068996201269329, -0.01832015998661518, -0.005064515862613916, -0.0190918929874897, -0.0006618693005293608, -0.00022587609419133514, -0.13074304163455963, -0.08153321593999863, -0.19674579799175262, -0.01098230667412281, -0.0245542973279953, -5.352353764465079e-05, -0.0018779276870191097, -0.0001454247540095821, -1.311301275563892e-06, -1.1920928244535389e-07, -0.0009453595266677439, -0.0007512131123803556, -0.004792275372892618, -7.152555099310121e-07, -0.00025090406415984035, -0.0001494772732257843, 0.0, -1.0728830375228426e-06, -0.00017414960893802345, -0.0004033228906337172, -1.9968427419662476, -0.0014771036803722382, -0.27954164147377014, -0.0040615457110106945, -0.00217760750092566, -0.26055455207824707, -0.0009951406391337514, -9.345571743324399e-05, -9.77468371274881e-05, -0.14716163277626038, -0.05524999275803566, -0.534853458404541, -0.03056032583117485, -6.437280717364047e-06, -0.0035522000398486853, -0.0008743754005990922, -2.3007127310847864e-05, -1.8638877868652344, -0.0001991788885788992, -0.000387831823900342, -0.00027164106722921133, -0.00011944057769142091, -1.5497195136049413e-06, -0.0011433976469561458, -0.014637463726103306, -0.003498388221487403, -0.006048114970326424, -7.510157047363464e-06, -0.00025722055579535663, -2.5152843591058627e-05, -4.768370445162873e-07, -1.1920922133867862e-06, -0.0001012035645544529, -0.0008131535141728818, -0.0003057250869460404, 0.0, -8.070142939686775e-05, -4.362964682513848e-05, 0.0, -1.7046782886609435e-05, -1.6212332411669195e-05, -0.00014888131408952177, -0.2499028891324997, -8.904537389753386e-05, -0.07862795889377594, -8.999896090244874e-05, -8.713819261174649e-05, -0.0005981324939057231, -0.0034098834730684757, -1.8715683836489916e-05, -0.00012575789878610522, -7.629103492945433e-05, -0.010781018063426018, -0.0009629856795072556, -1.490105023549404e-05, -5.960462772236497e-07, -0.022713735699653625, -4.577531944960356e-05, -0.00017832119192462415, -1.5139465176616795e-05, -6.103329360485077e-05, -2.3841830625315197e-06, -0.0005374894244596362, -0.004889436531811953, -0.005865859799087048, -0.0005061537376604974, -0.002333776792511344, -0.005847490392625332, 0.0, -5.61460001335945e-05, 0.0, 0.0, -0.003528561210259795, -0.003703760216012597, -0.025843197479844093, -0.007026840932667255, -8.821448318485636e-06, -0.0007180972606875002, -4.7801782784517854e-05, -5.960462772236497e-07, -4.768370445162873e-07, -9.905801562126726e-05, -0.0007981451926752925, -0.0002734287118073553, -4.768370445162873e-07, -0.00012027494085486978, -2.7894584491150454e-05, -5.960462772236497e-07, -1.156323378381785e-05, -2.8729025871143676e-05, -8.415821503149346e-05, -0.7442948222160339, -0.00013624693383462727, -0.004750275984406471, -0.011151017621159554, -0.08491823822259903, -0.04791451245546341, -0.026538686826825142, -4.529942543740617e-06, -0.0042302412912249565, -0.0016181482933461666, -0.023356785997748375, -0.4819990396499634, -0.0003703146940097213, -0.03385242074728012, -3.6911892890930176, -1.1865817308425903, -0.6831805109977722, -0.6617670655250549, -0.0016105312388390303, -2.4059903621673584, -0.03615344315767288, -0.0017591729993000627, -1.7881377516459906e-06, -7.510157047363464e-06, -0.1713680773973465, -0.035506147891283035, -0.015626367181539536, -1.5199779272079468, -0.3998316526412964, -0.27502763271331787, -0.0017128810286521912, -0.0032763394992798567, -1.680836794548668e-05, -0.0003741279651876539, -0.0008187517523765564, -3.480850500636734e-05, -0.0005890780012123287, -0.011900264769792557, -0.00011669908417388797, -0.006722216960042715, -0.0011181537993252277, -8.4638240878121e-06, -1.764281842042692e-05, -0.05065814405679703, -0.003304499201476574, -0.2427637279033661, -2.2343931198120117, -0.9143466949462891, -0.0031767638865858316, -2.861018856492592e-06, -0.00041654970846138895, -0.0014056811342015862, -0.027203064411878586, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.002997906878590584, -0.026032069697976112, -2.50339189733495e-06, -0.07451274991035461, -0.005117887631058693, -0.005399998743087053, -0.008521858602762222, -0.0020585316233336926, -4.291525328881107e-06, -0.0003623305819928646, 0.0, -1.3589766240329482e-05, 0.0, -0.000364713923772797, -0.6968320608139038, -0.0003592322755139321, -0.005042098928242922, -0.0052243852987885475, -0.5453135967254639, -0.00029559535323642194, -1.5881645679473877, -1.2412234544754028, -1.3269882202148438, -1.6568002700805664, -0.167979896068573, -0.0038130213506519794, -0.10396183282136917, -0.00038771264371462166, -0.008968900889158249, -0.008118723519146442, -1.0638939142227173], "finish_reason": "length"}], "metrics": {"energy": 901.7599870624548, "energy_per_token": 3.522499949462714, "time": 22.465942, "time_per_token": 0.0877575859375}}
{"outputs": [{"text": "# Remove stopwords, numbers, and punctuation\n    stop_word_list = STOPWORDS\n\n    # Lowercase data and remove punctuation\n    clean_text = dataframe[text_column].str.replace(\"[^\\w\\s]\", \"\")\n    clean_text = clean_text.str.lower()\n\n    # Remove stop words from the data\n    clean_text = clean_text.apply(\n        lambda x: \" \".join(d for d in x.split() if d not in stop_word_list)\n    )\n\n    # Create and fit the CountVectorizer\n    count = CountVectorizer().fit(clean_text)\n\n    # Create a vector with the token counts\n    vector = count.transform(clean_text)\n\n    # Array of all the titles (text)\n    data = vector.toarray()\n\n    # Array of all the tokens (text)\n    vocab = count.get_feature_names_out()\n\n    # Create a DataFrame from the array\n    return pd.DataFrame(data=data, columns=vocab)<|end", "tokens": ["#", " Remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", "\n", "    ", "stop", "_", "word", "_", "list", " =", " ST", "OP", "W", "OR", "DS", "\n", "\n", "    ", "#", " Lower", "case", " data", " and", " remove", " punct", "uation", "\n", "    ", "clean", "_", "text", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ")", "\n", "    ", "clean", "_", "text", " =", " clean", "_", "text", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " stop", " words", " from", " the", " data", "\n", "    ", "clean", "_", "text", " =", " clean", "_", "text", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "d", " for", " d", " in", " x", ".", "split", "()", " if", " d", " not", " in", " stop", "_", "word", "_", "list", ")", "\n", "    ", ")", "\n", "\n", "    ", "#", " Create", " and", " fit", " the", " Count", "Vector", "izer", "\n", "    ", "count", " =", " Count", "Vector", "izer", "()", ".", "fit", "(", "clean", "_", "text", ")", "\n", "\n", "    ", "#", " Create", " a", " vector", " with", " the", " token", " counts", "\n", "    ", "vector", " =", " count", ".", "transform", "(", "clean", "_", "text", ")", "\n", "\n", "    ", "#", " Array", " of", " all", " the", " titles", " (", "text", ")", "\n", "    ", "data", " =", " vector", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Array", " of", " all", " the", " tokens", " (", "text", ")", "\n", "    ", "voc", "ab", " =", " count", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " from", " the", " array", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "voc", "ab", ")<", "|", "end"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -0.7296873331069946, -0.10203877091407776, -0.17739567160606384, -0.04769745096564293, -0.03071328066289425, -0.006927045993506908, -0.3673093914985657, -0.004889436531811953, -3.3486509323120117, -1.9069316387176514, -3.108212471008301, -0.15966637432575226, -2.3587164878845215, -0.009437944740056992, -0.5563833117485046, 0.0, -4.4225667807040736e-05, 0.0, 0.0, -0.07818178832530975, -2.308382272720337, -0.00030524839530698955, -1.3892465829849243, -3.4521496295928955, -0.35268351435661316, -4.487124443054199, -1.6601073741912842, -0.22956202924251556, -2.0186808109283447, -0.044534385204315186, -0.11271926015615463, -0.001400919514708221, -4.117383003234863, -0.29664313793182373, -1.5800687074661255, -0.37847304344177246, -0.6403719186782837, -0.0002455409849062562, -0.10438676923513412, -0.004671256057918072, -3.099436753473128e-06, -1.6927575416048057e-05, -0.0016862234333530068, -0.011646964587271214, -0.2690542936325073, -6.97350042173639e-05, -0.8256166577339172, -0.05984960123896599, -0.08286050707101822, -0.5039067268371582, -1.011655569076538, -2.932505594799295e-05, -1.6331539882230572e-05, -0.0005942009738646448, -0.10006216913461685, -1.6331539882230572e-05, -0.024060290306806564, -0.16062863171100616, -0.02013411931693554, -0.3122665286064148, -0.057628631591796875, -0.06494919955730438, -0.0002798642381094396, -0.0003771070914808661, -0.005094166845083237, -0.13328252732753754, -1.1920922133867862e-06, -7.629365427419543e-06, -5.304672595229931e-05, -0.4673130512237549, -1.966933996300213e-05, -0.8425331115722656, -4.2199197196168825e-05, -0.08561225235462189, -0.46075162291526794, -0.00012444675667211413, -0.15739519894123077, -0.5940862894058228, -0.3662351369857788, -0.3903287649154663, -1.4513866901397705, -1.723722219467163, -0.9268465638160706, -0.0655411034822464, -0.0007918321643956006, -0.6298892498016357, -0.010149062611162663, -0.01548000704497099, -0.07455900311470032, -0.3591473400592804, -1.0728830375228426e-06, -7.486063259420916e-05, -0.00046433156239800155, -0.013584080152213573, -0.0013372297398746014, -0.5133136510848999, -0.007976582273840904, -0.003685707226395607, -0.009264337830245495, -0.0018898261478170753, -0.23379401862621307, -0.0006650857976637781, -0.0001292145170737058, -0.00010096516780322418, -1.3280032873153687, -0.45266246795654297, -0.03557207062840462, -3.9934315282152966e-05, -4.529942543740617e-06, -0.3703739047050476, -8.248942322097719e-05, -5.8530047681415454e-05, -0.0008683010237291455, -0.0010776671115309, -0.004766886122524738, -0.0004518203204497695, -8.22540732769994e-06, -0.01611153595149517, -0.0008062449633143842, -9.83428253675811e-05, -6.067568756407127e-05, -6.318072337307967e-06, -0.8953730463981628, -0.0019500303314998746, -0.008705639280378819, -2.0861407392658293e-05, -0.0023706448264420033, -0.06876962631940842, -0.00013040646445006132, -0.06198285147547722, -2.199474811553955, -3.618668556213379, -0.9855048060417175, -0.6324096322059631, -0.48278990387916565, -0.08731940388679504, -0.0011601868318393826, -0.9468461275100708, -0.0009773960337042809, -1.6503856182098389, -2.5476250648498535, -0.001999285537749529, -4.172316494077677e-06, -5.960462772236497e-07, -0.15968263149261475, -0.9750099778175354, -0.005078630056232214, -0.012888111174106598, -0.005295298527926207, -1.2993727978027891e-05, -0.00012444675667211413, -0.0029451351147145033, -0.0029975504148751497, -0.2004346251487732, -6.425174069590867e-05, -0.004478781018406153, -0.7826830148696899, -0.12255441397428513, -0.1033703163266182, -2.7680208683013916, -0.41036760807037354, -0.5844877362251282, -1.8152751922607422, -0.17601324617862701, -0.0004451475979294628, -0.2681773602962494, -0.032342080026865005, -0.0010608765296638012, -1.597391747054644e-05, -0.00021419614495243877, -7.652943895664066e-05, -0.0017088347813114524, -5.960446742392378e-06, -2.098061486321967e-05, -0.0006609162664972246, -0.006115889176726341, -0.05155739188194275, -5.566918844124302e-05, -0.010151422582566738, -2.4715700149536133, -0.04545954614877701, -3.8809564113616943, -0.03279832750558853, -2.5984678268432617, -1.65639328956604, -0.8384050726890564, -0.47154420614242554, -0.009854004718363285, -0.000568228424526751, -0.9755192995071411, -0.1886747032403946, -0.055803582072257996, -0.00019929806876461953, -0.018510574474930763, -2.3841855067985307e-07, -0.00022265815641731024, -0.004304192494601011, -0.1468716263771057, -7.1403817855753e-05, -0.023341063410043716, -3.7023720741271973, -0.08737719058990479, -0.027072545140981674, -0.00867396779358387, -1.1079246997833252, -0.16897426545619965, -3.403266668319702, -0.5393528938293457, -0.0725584328174591, -0.00027259447961114347, -2.299354076385498, -0.004784682299941778, -0.011873052455484867, -0.0562642440199852, -4.1483970562694594e-05, -0.005431181751191616, 0.0, -2.169585604860913e-05, 0.0, -1.0490362910786644e-05, -0.38558900356292725, -2.4914430468925275e-05, -0.07481986284255981, -0.004510823171585798, -0.07818102091550827, -9.131014667218551e-05, -0.09865579009056091, -0.8602221012115479, -0.7887389063835144, -0.5702820420265198, -0.03215716779232025, -2.028979539871216, -0.23195651173591614, -1.1083201169967651, -0.8240854144096375, -0.0009056995622813702, -2.9747352600097656, -0.003219304606318474, -3.0517112463712692e-05, -3.790783375734463e-05, -0.000535821367520839, -0.029671495780348778, -1.2328016757965088, -0.0011513754725456238, -0.004964880645275116, -0.002746740123257041, -0.0030891813803464174, -0.0003343261778354645, -3.576278118089249e-07, -0.6819457411766052, -4.6491513785440475e-06, -4.172316494077677e-06], "finish_reason": "length"}], "metrics": {"energy": 915.5898259820938, "energy_per_token": 3.576522757742554, "time": 22.16167, "time_per_token": 0.0865690234375}}
{"outputs": [{"text": "# Remove stopwords from the text column\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join([token for token in x.split(\" \") if\n                                                                               token not in STOPWORDS]))\n\n    # Remove numbers\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join([token for token in x.split(\" \") if\n                                                                               not re.findall('\\d+', token)]))\n\n    # Remove punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: \" \".join([token for token in x.split(\" \") if\n                                                                               re.findall('[A-Za-z]', token)]))\n\n    # Apply vectorization\n    vectorizer = CountVectorizer()\n    vectorizer.fit(dataframe[text_column])\n    transformed_data = vectorizer.transform(dataframe[text_column])\n\n    # Create a new Data", "tokens": ["#", " Remove", " stop", "words", " from", " the", " text", " column", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "token", " for", " token", " in", " x", ".", "split", "(", "\"", " \"", ")", " if", "\n", "                ", "                ", "                ", "                ", "               ", "token", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "token", " for", " token", " in", " x", ".", "split", "(", "\"", " \"", ")", " if", "\n", "                ", "                ", "                ", "                ", "               ", "not", " re", ".", "find", "all", "('", "\\", "d", "+'", ",", " token", ")]", "))", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "token", " for", " token", " in", " x", ".", "split", "(", "\"", " \"", ")", " if", "\n", "                ", "                ", "                ", "                ", "               ", "re", ".", "find", "all", "('", "[", "A", "-", "Z", "a", "-", "z", "]", "'", ",", " token", ")]", "))", "\n", "\n", "    ", "#", " Apply", " vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "    ", "trans", "formed", "_", "data", " =", " vector", "izer", ".", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Create", " a", " new", " Data"], "logprobs": [-0.5974228382110596, -1.5789207220077515, -0.2224891185760498, -0.11247161030769348, -2.4077630043029785, -0.5206414461135864, -0.7607913017272949, -1.0183095932006836, -0.1783696562051773, -0.0018749530427157879, -0.987124502658844, -0.021730070933699608, -0.25898095965385437, -0.029076265171170235, -9.298280929215252e-06, -3.0397906812140718e-05, -0.00778628047555685, -0.010013110935688019, -0.02478085830807686, -9.536738616588991e-07, -0.004778038710355759, -0.005493544042110443, -1.0728830375228426e-06, -9.536738616588991e-07, -0.0009234455064870417, -0.004322353284806013, -0.2976900637149811, -0.0006731866160407662, -0.5263069868087769, -0.01296860259026289, -0.0014081810368224978, -2.157928466796875, -0.0013774678809568286, -0.0003887851198669523, -5.924526340095326e-05, -0.4013691246509552, -2.232316493988037, -0.007580207195132971, -0.0014000862138345838, -0.000754786713514477, -0.14983397722244263, -0.0005283151986077428, -0.013216273859143257, -1.0987993478775024, -0.0222616046667099, -3.1709168979432434e-05, -0.0009628665866330266, -0.333161324262619, -2.4418680667877197, -0.0030657693278044462, -0.0005762108485214412, -0.0021111122332513332, -0.0531485490500927, -1.4152750968933105, -0.03552697226405144, -0.14486214518547058, -0.00014685506175737828, -0.010538404807448387, 0.0, -3.123234637314454e-05, 0.0, 0.0, -0.1114300787448883, -0.004974489100277424, -0.30453115701675415, -0.00011181206355104223, -0.0034133289009332657, -0.09537868946790695, -0.2097804695367813, -2.359417676925659, -0.00047755756531842053, -0.034712787717580795, -0.00016485285595990717, -0.016829179599881172, -0.0008784249657765031, -2.0265558760002023e-06, -3.6954811548639555e-06, -0.0004711233195848763, -0.0035510121379047632, -0.004663306288421154, -5.960462772236497e-07, -0.0011239885352551937, -0.0010758809512481093, -1.0728830375228426e-06, -5.364403477869928e-06, -7.164221460698172e-05, -0.0003047717036679387, -0.15204353630542755, -0.0002401778765488416, -0.05169494450092316, -0.0267376396805048, -0.00011967896716669202, -1.506183385848999, -0.2546008825302124, -0.00023469554434996098, -1.8596476365928538e-05, -0.16918353736400604, -0.021255789324641228, -0.002217574045062065, -0.000277123210253194, -0.0008431693422608078, -0.031077366322278976, -0.0005666795768775046, -0.000395815703086555, -0.01285539474338293, -0.005785861052572727, -0.00012981049076188356, -0.0008465044084005058, -0.042737919837236404, -0.10396484285593033, -0.00011288482346571982, -4.23184028477408e-05, -0.0002802217786666006, -0.0015442363219335675, -0.013719899579882622, -0.2278980314731598, -0.4824308753013611, -3.015949550899677e-05, -1.4093642234802246, 0.0, -0.6410303115844727, -0.13100974261760712, -0.005254150368273258, -0.10678733885288239, -6.878139538457617e-05, -0.005980454385280609, -0.005384466610848904, -0.002228278899565339, -0.0018385426374152303, -0.028876155614852905, -8.237022848334163e-05, -0.0009357126546092331, -0.031106602400541306, -0.03406098484992981, -0.0764056071639061, -0.13432876765727997, -0.0003299168893136084, -0.058873265981674194, -3.814624506048858e-05, -0.0014023480471223593, -0.00041309406515210867, -1.0728830375228426e-06, -5.960446742392378e-06, -0.0002252801787108183, -0.0010343207977712154, -0.001303299912251532, -3.576278118089249e-07, -0.00043883229955099523, -0.0001565095444675535, -1.1920928244535389e-07, -7.510157047363464e-06, -2.13382354559144e-05, -0.000521523819770664, -0.10247044265270233, -0.0002719986077863723, -0.08553215116262436, -0.008009458892047405, -5.435795901576057e-05, -0.08918046206235886, -0.09999540448188782, -0.00021562635083682835, -4.1960789531003684e-05, -0.06276506930589676, -0.2511841356754303, -0.009127438999712467, -0.00018916724366135895, -0.0003599472693167627, -0.042483288794755936, -0.0005634627304971218, -0.008015844970941544, -0.0012949660886079073, -0.0030265499372035265, -0.00048101297579705715, -0.0011695933062583208, -0.03604789078235626, -0.05280078202486038, -0.00016878610767889768, -1.823885577323381e-05, -5.2689116273541003e-05, -0.001010384177789092, -0.004527555778622627, -2.0822792053222656, -1.6927575416048057e-05, -0.33276331424713135, 0.0, -0.06506392359733582, -1.06589937210083, -0.5058862566947937, -1.6689286894688848e-06, -0.01712886616587639, -0.001764527871273458, -3.3378546504536644e-06, -2.109982233378105e-05, -0.5627967715263367, -0.007535485550761223, -6.01988795096986e-05, -0.002943827537819743, -0.012591388076543808, -0.0007591941393911839, -0.0006235085893422365, -0.022815696895122528, -9.858122211880982e-05, -0.02301177941262722, -1.7832822799682617, -0.520266056060791, -0.013593957759439945, -0.7067412734031677, -0.0014909114688634872, -0.5336406230926514, -0.0468454584479332, -0.0019583588000386953, -0.0006281548412516713, -1.5497195136049413e-06, -2.264974000354414e-06, -0.6562431454658508, -0.034619517624378204, -0.04627892002463341, -1.0477118492126465, -0.20636403560638428, -0.028058970347046852, -0.001277822069823742, -0.06354409456253052, -0.003963591996580362, -0.00014649749209638685, -0.007332674227654934, -0.0007033258443698287, -1.0013530300057027e-05, -5.602820692729438e-06, -0.04848421365022659, -0.009591684676706791, -0.30947965383529663, -2.297654628753662, -0.0072693610563874245, -0.09853199869394302, -0.7473546862602234, -0.053465571254491806, -0.02834395319223404, -1.1920922133867862e-06, -5.376194530981593e-05, -0.0060971686616539955, -0.0015210260171443224, -0.0006132629350759089, 0.0, -0.0007720588473603129, -0.00019262365822214633, -2.50339189733495e-06, -7.867782187531702e-06, -0.0009438112610951066, -0.11410591006278992, -0.3905707895755768, -0.00012015574611723423, -0.05883954465389252, -1.3349051475524902, -0.28698188066482544, -1.5748779773712158, -0.19237880408763885], "finish_reason": "length"}], "metrics": {"energy": 914.3108768205637, "energy_per_token": 3.571526862580327, "time": 22.166628, "time_per_token": 0.086588390625}}
{"outputs": [{"text": "# Preprocessing\n    dataframe['text'] = dataframe[text_column]\n    dataframe['text'] = dataframe['text'].astype(str)\n    dataframe['text'] = dataframe['text'].str.lower()\n    dataframe['text'] = dataframe['text'].str.split()\n    dataframe['text'] = dataframe['text'].apply(lambda x: [item for item in x if item not in STOPWORDS])\n    dataframe['text'] = dataframe['text'].apply(lambda x: [re.sub('[^a-z]', '', word) for word in x])\n    dataframe['text'] = dataframe['text'].apply(lambda x: ' '.join(x))\n\n    # Vectorization\n    vectorizer = CountVectorizer()\n    vectorized_text = vectorizer.fit_transform(dataframe['text'].astype(str))\n\n    # Create a DataFrame with each word as a column and their count as rows\n    vectorized_df = pd.DataFrame(vectorized_text.toarray(), columns=", "tokens": ["#", " Pre", "processing", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "str", ".", "lower", "()", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "str", ".", "split", "()", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " [", "item", " for", " item", " in", " x", " if", " item", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " [", "re", ".", "sub", "('", "[", "^", "a", "-", "z", "]", "'", ",", " ''", ",", " word", ")", " for", " word", " in", " x", "])", "\n", "    ", "data", "frame", "['", "text", "']", " =", " data", "frame", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "x", "))", "\n", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "ized", "_", "text", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "['", "text", "']", ".", "ast", "ype", "(", "str", "))", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " each", " word", " as", " a", " column", " and", " their", " count", " as", " rows", "\n", "    ", "vector", "ized", "_", "df", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", ".", "to", "array", "()", ",", " columns", "="], "logprobs": [-0.5974228382110596, -2.9913907051086426, -1.2479320764541626, -0.7753555774688721, -0.026194659993052483, -1.4688382148742676, -0.1194000095129013, -1.5715291500091553, -0.4606948494911194, -0.2694525420665741, -0.0019060078775510192, -0.024689333513379097, -1.0728830375228426e-06, -0.04814106971025467, -0.003149075899273157, -6.794906312279636e-06, -9.7508447652217e-05, -0.000542493537068367, -2.3613457679748535, -0.09394985437393188, -0.12714704871177673, -0.0026021688245236874, -0.19377681612968445, -0.028285086154937744, -0.01266484148800373, -0.010840100236237049, -0.02005712315440178, -3.576278118089249e-07, -0.03452324494719505, -3.325883881188929e-05, -3.1709168979432434e-05, -0.0015683980891481042, -2.2836039066314697, 0.0, -0.14877332746982574, -0.011823102831840515, -0.002055676421150565, -0.2200239896774292, -0.1309184432029724, -0.12875723838806152, -0.00145948666613549, -0.021997155621647835, -0.010057840496301651, -0.007160240318626165, -0.004850407131016254, -0.017820602282881737, -4.768370445162873e-07, -0.00296106212772429, -6.437280717364047e-06, -5.602679812000133e-05, -0.0018747150897979736, -0.7239664196968079, -9.48860906646587e-05, -0.8319674730300903, -0.00011622230522334576, -0.06622515618801117, -0.048026662319898605, -0.06898327171802521, -0.0001770101225702092, -0.002264199312776327, -0.0012355559738352895, -0.0007035640883259475, -0.0036797686479985714, -0.0057030110619962215, -2.3841855067985307e-07, -0.001277822069823742, -9.775113539944869e-06, -0.00023982033599168062, -0.0002083561266772449, -0.8031585216522217, -6.222531374078244e-05, -2.432521343231201, -0.059602659195661545, -0.027599740773439407, -0.10893427580595016, -0.07452226430177689, -0.0004319211875554174, -0.01237417571246624, -0.007465677335858345, -0.002907218411564827, -0.003533431561663747, -0.015274926088750362, -1.1920928244535389e-07, -0.002678142860531807, -8.821448318485636e-06, -1.5258672647178173e-05, -0.0001854724541772157, -0.035899657756090164, -0.0005247407825663686, -0.23678866028785706, -0.019055752083659172, -0.004904620815068483, -0.016454827040433884, -1.2726891040802002, -0.0017109769396483898, -4.1483970562694594e-05, -0.00016389934171456844, -0.0020616245456039906, -0.00098525604698807, -0.047029949724674225, -0.018523797392845154, -7.033323527139146e-06, -0.003455502912402153, 0.0, -3.838465272565372e-05, 0.0, 0.0, -0.011748881079256535, -0.007395154796540737, -0.0045904493890702724, -0.009867343120276928, -3.969590397900902e-05, -0.0004689785710070282, -0.001065401709638536, -0.0004943578969687223, -0.00013743886665906757, -0.0020503229461610317, 0.0, -0.00030989613151177764, -4.410734163684538e-06, -7.986990567587782e-06, -2.7894584491150454e-05, -0.05421687290072441, -8.916457591112703e-05, -0.03821835666894913, -0.004800105467438698, -0.0003507714136503637, -0.014035800471901894, -0.2858176529407501, -3.099393507000059e-05, -0.002310941694304347, -0.2802885174751282, -0.0943630114197731, -0.09178624302148819, -0.09675560146570206, -3.671578815556131e-05, -7.795983401592821e-05, -1.7291902303695679, -0.0007644353318028152, -8.594620157964528e-05, -0.018826603889465332, -0.00011836781777674332, -1.6411223411560059, -0.003187577472999692, -0.005900109186768532, -7.557583012385294e-05, -2.312633478140924e-05, -0.015094814822077751, -0.017330052331089973, -0.00786635559052229, -0.08070056140422821, -0.03226093947887421, -0.0003259842633269727, -0.005904019810259342, -0.00093606993323192, -0.0004720765573438257, -0.0003532739356160164, -0.00676342286169529, 0.0, -0.0003184764937032014, -1.4543427823809907e-05, -4.887569048150908e-06, -4.970903682988137e-05, -0.032948751002550125, -0.004961085040122271, -0.009646468795835972, -0.0010476582683622837, -0.00047124247066676617, -2.219777822494507, -0.0035766696091741323, -0.00020013237372040749, -4.303362584323622e-05, -0.3867608308792114, -0.025139087811112404, -0.000977157847955823, -0.005618138704448938, -0.2558448314666748, -0.00021514961554203182, -0.013118389062583447, -0.25901904702186584, -0.05660618841648102, -0.04278886318206787, -0.0013581824023276567, -0.4513041079044342, -0.016751108691096306, -0.0011865011183544993, -0.0003541081096045673, -2.145764938177308e-06, -7.152555099310121e-07, -0.30025461316108704, -0.012825501151382923, -0.01289199385792017, -1.0740149021148682, -1.6329082250595093, -0.07313787192106247, -0.39793577790260315, -0.03149538114666939, -0.004305973183363676, -5.602820692729438e-06, -1.0967194612021558e-05, -0.0012835367815569043, -4.410734163684538e-06, -5.054346183896996e-05, -0.00029237763374112546, -0.00352167128585279, -5.757642793469131e-05, -0.010461020283401012, -3.015949550899677e-05, -1.8812122344970703, -0.0010495636379346251, -2.9733877182006836, -4.2199197196168825e-05, -0.13964198529720306, -0.00199250434525311, -0.011973061598837376, -0.07768843322992325, -1.2818684577941895, -0.00015853578224778175, -0.19410665333271027, -1.5382308959960938, -0.5879899859428406, -0.29125139117240906, -0.00310035259462893, -0.37917283177375793, -1.049963116645813, -0.03154608979821205, -0.31893712282180786, -0.020925117656588554, -0.012524169869720936, -0.05040154978632927, -0.0629972368478775, -0.01960986852645874, -0.007346282713115215, -0.006935806944966316, -0.046906426548957825, -0.0008518642862327397, -1.8515819311141968, -0.015982963144779205, -0.0017533419886603951, -0.5257228016853333, -0.00047743841423653066, -0.0006598440813831985, -2.3841830625315197e-06, -0.0015495923580601811, -0.0014587724581360817, -0.03770166635513306, -9.417489309271332e-06, -4.768370445162873e-07, -3.576278118089249e-07, -0.00035041390219703317, -0.045302338898181915, -2.3841855067985307e-07, -0.0036549451760947704, -0.003495180746540427, -0.007286639418452978, -0.0008945039589889348], "finish_reason": "length"}], "metrics": {"energy": 895.9037406101231, "energy_per_token": 3.4996239867582934, "time": 22.16371, "time_per_token": 0.0865769921875}}
{"outputs": [{"text": "# Lower case all text\n    text = dataframe[text_column].str.lower()\n\n    # Remove stopwords from text\n    text = text.apply(lambda x: \" \".join([item for item in x.split(\" \") if item not in STOPWORDS]))\n\n    # Remove numbers from text\n    text = text.apply(lambda x: re.sub(r'\\d+', '', x))\n\n    # Remove punctuations from text\n    text = text.apply(lambda x: re.sub(r'[^\\w\\s]', '', x))\n\n    # Create a text processing pipeline using sklearn CountVectorizer\n    vectorizer = CountVectorizer()\n    vectorizer.fit(text)\n    result = vectorizer.transform(text)\n\n    # Create a dataframe with the word count for each word in the text\n    result_df = pd.DataFrame(result.toarray(), columns=vectorizer.get_feature_names_out())\n\n    return result_df", "tokens": ["#", " Lower", " case", " all", " text", "\n", "    ", "text", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", " from", " text", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "item", " for", " item", " in", " x", ".", "split", "(", "\"", " \"", ")", " if", " item", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", " from", " text", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " punct", "uations", " from", " text", "\n", "    ", "text", " =", " text", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Create", " a", " text", " processing", " pipeline", " using", " sklearn", " Count", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", ")", "\n", "    ", "result", " =", " vector", "izer", ".", "transform", "(", "text", ")", "\n", "\n", "    ", "#", " Create", " a", " data", "frame", " with", " the", " word", " count", " for", " each", " word", " in", " the", " text", "\n", "    ", "result", "_", "df", " =", " pd", ".", "DataFrame", "(", "result", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "\n", "    ", "return", " result", "_", "df"], "logprobs": [-0.5974228382110596, -3.4513421058654785, -1.3762599229812622, -2.234595775604248, -0.8471170663833618, -0.36259254813194275, -0.0009825170272961259, -2.810075044631958, -0.5471148490905762, -0.05118720978498459, -5.209310256759636e-05, -0.03737880289554596, -0.0022131730802357197, -8.940656698541716e-06, -5.483612312673358e-06, -0.0003256267518736422, -0.01574806310236454, -0.09011230617761612, -2.6940935640595853e-05, -0.0053626494482159615, -5.769562994828448e-05, -0.009848575107753277, -0.2189943939447403, -0.00022837892174720764, -0.012632235884666443, -0.23328539729118347, -0.31805890798568726, -0.21493370831012726, -2.944578170776367, -0.6579592823982239, -0.08952376246452332, -0.0007672941428609192, -0.7549249529838562, -0.1035444512963295, -0.09357050806283951, -0.0007053509471006691, -0.1242913007736206, -0.0010397987207397819, -0.22405894100666046, -0.011060593649744987, -0.0007475204183720052, -1.3621445894241333, -0.0021256250329315662, -0.00011669908417388797, -7.366862701019272e-05, -0.6335822343826294, -1.0485984086990356, -0.0017368007684126496, -9.775113539944869e-06, -8.666139910928905e-05, -0.0758746936917305, -1.3470558769768104e-05, -1.597391747054644e-05, -2.5963375568389893, -0.0041675628162920475, -8.940656698541716e-06, -0.00022206225548870862, -0.00444851815700531, -0.00041130665340460837, -0.003622637828812003, -2.002696055569686e-05, -0.0021454906091094017, 0.0, -2.7417760065873154e-05, 0.0, 0.0, -0.0029038903303444386, -0.0022134108003228903, -0.010899060405790806, -0.0001037067049765028, -0.00096941675292328, -0.06756923347711563, -0.33435964584350586, -0.3020390570163727, -0.01367521658539772, -0.017009448260068893, -0.0001481661747675389, -0.051048457622528076, -0.004047298803925514, -0.030980635434389114, -7.486063259420916e-05, -0.09365767985582352, -0.00017820201173890382, -0.0005112771177664399, -0.012491676956415176, -0.00024482590379193425, -0.19978614151477814, -8.583032467868179e-06, -0.0007518087513744831, -0.10677523165941238, -0.05477171391248703, -0.27375131845474243, -0.0015927974600344896, -0.011085116304457188, -0.00019131260341964662, -0.020311806350946426, -0.0001573438785271719, -0.0011152960360050201, -0.09382450580596924, -0.004366388078778982, -0.010514223016798496, -0.00013791563105769455, -0.0002184867626056075, -0.016289588063955307, -0.0570337139070034, -2.8657119274139404, -0.15893995761871338, -0.02195027470588684, -0.019390784204006195, -0.00010215714428341016, -0.05600423738360405, -0.00438668392598629, -0.0017156180692836642, -0.00011657988943625242, -0.033170074224472046, -0.0001567479339428246, -0.007943704724311829, -0.004986943677067757, -0.00017736769223120064, -0.08233388513326645, -3.576278118089249e-07, -0.000785280775744468, -0.02915789559483528, -0.02282501757144928, -0.02612045221030712, -0.00266779912635684, -0.0010476582683622837, -2.3364747903542593e-05, -0.020800312981009483, -1.9073468138230965e-06, -0.0037411716766655445, -3.4689302992774174e-05, -1.0251946150674485e-05, -0.09259765595197678, -4.5060096454108134e-05, -0.0015735160559415817, -0.018411802127957344, -0.003623825730755925, -0.004067600704729557, -0.00011240804451517761, -0.025529494509100914, -2.5204339027404785, -0.8650078773498535, -3.3785879611968994, -1.1170272827148438, -0.2808123230934143, -2.8036251068115234, -1.772350549697876, -1.879014492034912, -0.023474285379052162, -0.005772349424660206, -0.1498996466398239, -0.0010492063593119383, -0.6563769578933716, -0.04541363939642906, -0.002688367385417223, -0.0007743220776319504, -7.152555099310121e-07, 0.0, -0.53276127576828, -0.03332044184207916, -0.58579021692276, -0.5574798583984375, -0.01781509816646576, -0.009234927594661713, -0.0019883401691913605, -0.1404181867837906, -0.02889595925807953, -0.04839585721492767, -0.021633949130773544, -1.2475086450576782, -1.8946528434753418, -0.02912096120417118, -0.27156180143356323, -2.4676019165781327e-05, -0.00016151554882526398, -0.008159990422427654, -0.0003833036171272397, -0.00428223330527544, -0.0011863820254802704, -0.05558168888092041, -0.177900493144989, -0.0001954841281985864, -0.07973183691501617, -1.8480138778686523, -0.19266937673091888, -1.7028868198394775, -0.1370297521352768, -0.9294155836105347, -1.4065275192260742, -2.9408998489379883, -2.038053512573242, -2.611656665802002, -0.0649786964058876, -1.506524920463562, -1.1698378324508667, -0.7052645087242126, -0.4955519139766693, -0.5349512100219727, -0.0007476395112462342, -0.6050098538398743, -2.3199315071105957, -0.11273033171892166, -0.000966915744356811, -0.00444756867364049, -7.629365427419543e-06, -0.0006274400511756539, -0.016165729612112045, -0.2998877167701721, -0.0008457897347398102, -0.1309388428926468, -2.264974000354414e-06, -0.014863581396639347, -0.012646949850022793, -0.014462525025010109, -0.010248654522001743, -0.000667468411847949, 0.0, -5.483612312673358e-06, -0.0012997282901778817, -5.960462772236497e-07, -1.2993727978027891e-05, 0.0, -1.7881377516459906e-06, -0.40217557549476624, -0.00017820201173890382, -0.006047166883945465, -0.007190894801169634, -0.35968220233917236, -9.63164638960734e-05, -0.237792506814003, -0.002613226417452097, -0.0012504386249929667, -2.372236667724792e-05], "finish_reason": "stop"}], "metrics": {"energy": 806.453871741295, "energy_per_token": 3.446384067270491, "time": 20.322, "time_per_token": 0.08684615384615384}}
{"outputs": [{"text": "# Extract text column from DataFrame\n    df = pd.DataFrame(dataframe[text_column].values, columns=[text_column])\n\n    # Remove stopwords, numbers, and punctuation from the text\n    df[text_column] = df[text_column].str.replace(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b\\s*', ' ')\n    df[text_column] = df[text_column].str.replace(r'\\d+', '')\n    df[text_column] = df[text_column].str.replace(r'[^\\w\\s]', '')\n    df[text_column] = df[text_column].str.strip()\n\n    # Apply vectorization process\n    vectorizer = CountVectorizer(max_features=500, min_df=5, max_df=0.8)\n    count_matrix = vectorizer.fit_transform(df[text_column])\n\n    # Convert count matrix to a DataFrame with each word as a column and their count as", "tokens": ["#", " Ext", "ract", " text", " column", " from", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", "frame", "[", "text", "_", "column", "]", ".", "values", ",", " columns", "=[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", " from", " the", " text", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " '", " '", ")", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'\\", "d", "+'", ",", " '", "')", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", "\n", "    ", "df", "[", "text", "_", "column", "]", " =", " df", "[", "text", "_", "column", "]", ".", "str", ".", "strip", "()", "\n", "\n", "    ", "#", " Apply", " vector", "ization", " process", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "max", "_", "features", "=", "5", "0", "0", ",", " min", "_", "df", "=", "5", ",", " max", "_", "df", "=", "0", ".", "8", ")", "\n", "    ", "count", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "df", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Convert", " count", " matrix", " to", " a", " Data", "Frame", " with", " each", " word", " as", " a", " column", " and", " their", " count", " as"], "logprobs": [-0.5974228382110596, -3.796776294708252, -0.21533910930156708, -1.4267024993896484, -1.3361656665802002, -0.5353695154190063, -0.8971295356750488, -0.007363441400229931, -0.14980657398700714, -0.001209600013680756, -2.0028202533721924, -0.13565154373645782, -2.8471882343292236, -0.00024148885859176517, -0.003121505957096815, -0.0647464245557785, -0.02298789843916893, -0.06541784107685089, -0.13280455768108368, -0.008640640415251255, -6.198863957251888e-06, -5.483612312673358e-06, -2.1860780715942383, -0.3103243410587311, -1.8841462135314941, -1.7730076313018799, -0.013081209734082222, -1.159069538116455, -0.4306629002094269, -8.332382276421413e-05, -2.825220326485578e-05, -0.01086804736405611, -0.006111979018896818, -0.12930093705654144, -0.00022396916756406426, -0.01775127463042736, -1.0822807550430298, -0.29485324025154114, -0.10176187008619308, -0.7457966804504395, -0.056402839720249176, -0.12674880027770996, -0.033173996955156326, -0.030382830649614334, -0.007007545791566372, -1.0448460578918457, -1.84088134765625, -0.11502247303724289, -1.0551586151123047, -0.0023333008866757154, -0.21478591859340668, -0.14155259728431702, -0.018458731472492218, -2.0146166207268834e-05, -1.0728830375228426e-06, -0.004980419762432575, -0.0005414212355390191, -0.013625474646687508, -0.005861474666744471, -0.0011819765204563737, -2.264974000354414e-06, -1.7881377516459906e-06, -0.001563994330354035, -0.0039155022241175175, -1.4169608354568481, -0.0001734344696160406, -0.6075825691223145, -0.606550395488739, -0.23340792953968048, -0.19784989953041077, -0.14012736082077026, -2.134544849395752, -0.0018736441852524877, -0.06525591760873795, -0.004099300131201744, -0.014256295748054981, -9.60780744208023e-05, -8.821098163025454e-05, -9.48860906646587e-05, -0.003307826118543744, -0.030100971460342407, 0.0, -1.4424220353248529e-05, 0.0, 0.0, -0.00039057256071828306, -0.00047779586748220026, -0.00025614796322770417, -0.021407606080174446, -0.01068112626671791, -0.033930666744709015, -0.005455012433230877, -0.0005573864909820259, -0.0015455455286428332, -1.645074735279195e-05, -0.25113043189048767, -2.28591251373291, -1.0269386768341064, -0.1572537124156952, -0.005590399727225304, -0.013487289659678936, -0.0022223317064344883, -6.246371776796877e-05, -2.50339189733495e-06, -4.0531076592742465e-06, -0.00013290952483657748, -0.0005872909096069634, -0.002970451721921563, -0.0003620922507252544, -0.00014423283573705703, -1.1920922133867862e-06, -1.8358061424805783e-05, -4.446407547220588e-05, -9.357491217087954e-05, -0.10519436001777649, -7.009260298218578e-05, -0.001328420010395348, -0.6667206883430481, -0.04319767281413078, -0.42454659938812256, -0.39329737424850464, -0.12385609745979309, -9.536697689327411e-06, -0.02487505041062832, -0.4621410667896271, -0.08479876071214676, -0.0012349606258794665, -0.008957440964877605, -0.0006783091812394559, -8.737658936297521e-05, -5.960462772236497e-07, -4.529942543740617e-06, -2.288792165927589e-05, -0.0006542449118569493, -0.003271467750892043, -0.0004625442670658231, -4.7801782784517854e-05, -8.344646857949556e-07, -2.4676019165781327e-05, -4.851700214203447e-05, -0.00013720047718379647, -0.1586741954088211, -3.302042750874534e-05, -0.004881132394075394, -0.10936319828033447, -0.005552820395678282, -0.3744833171367645, -0.02061605639755726, -0.0014537728857249022, -0.0017354916781187057, -0.004403062630444765, -0.00016199229867197573, -0.043764591217041016, -0.0015592334093526006, -2.0861407392658293e-05, -0.0073421411216259, -0.35220620036125183, -0.015613222494721413, -1.4824248552322388, -0.08893563598394394, -0.005834216717630625, -0.00015472168161068112, -2.3841855067985307e-07, -3.4570634852570947e-06, -0.00016509123088326305, -0.001829142333008349, -0.0005200940649956465, -8.046303264563903e-05, -1.7165990357170813e-05, 0.0, -3.2186455882765586e-06, -1.2397689715726301e-05, -5.61460001335945e-05, -0.0050448267720639706, -5.8412379075889476e-06, -2.338517427444458, -0.0011993603548035026, -0.025238361209630966, -0.02832900546491146, -0.00020740265608765185, -0.002968787681311369, -0.9636895656585693, -0.3220510184764862, -0.003887597005814314, -1.2272454500198364, -1.1971403360366821, -0.0005125877796672285, -0.3056582510471344, -0.014637934044003487, -0.0005233110277913511, -0.00044955636258237064, -2.50339189733495e-06, -2.622600959512056e-06, -0.6396307945251465, -3.6739501953125, -2.622600959512056e-06, -0.11123533546924591, -0.0013652060879394412, -1.861755609512329, -0.12282741069793701, -0.3767443001270294, -2.548229217529297, -1.5712476968765259, -3.576278118089249e-07, -7.664863369427621e-05, -0.0015674459282308817, -1.6966910362243652, -0.22630265355110168, -0.09968826174736023, -1.1920922133867862e-06, -3.421248038648628e-05, -0.00043990471749566495, -0.05035371705889702, -0.00011228884250158444, -0.21263068914413452, -0.5226808786392212, -0.04560215398669243, -0.022516194730997086, -3.1901915073394775, -0.026797527447342873, -0.267333447933197, -0.001783329644240439, -0.005005566403269768, -1.1920922133867862e-06, -3.182837463100441e-05, -0.000528076896443963, -8.654219709569588e-05, -6.6756979322235566e-06, -0.0005180685548111796, -0.0032170468475669622, -0.010875359177589417, -0.00043811736395582557, -4.887569048150908e-06, -1.3947389561508317e-05, -0.10979780554771423, -0.024814581498503685, -0.5680428743362427, -0.00016020445036701858, -0.03731047362089157, -0.9614830613136292, -1.1811163425445557, -0.17927025258541107, -0.22773171961307526, -0.7555485367774963, -0.11087678372859955, -0.0008380476501770318, -1.5106557607650757, -0.5879254341125488, -0.01624455116689205, -0.15230736136436462, -0.04686331748962402, -0.009161104448139668, -0.19505125284194946, -0.04331366345286369, -0.020190665498375893, -0.005061906296759844], "finish_reason": "length"}], "metrics": {"energy": 921.560561500549, "energy_per_token": 3.5998459433615198, "time": 22.16707, "time_per_token": 0.0865901171875}}
{"outputs": [{"text": "# Lower case and remove stopwords, numbers, and punctuation.\n    dataframe[text_column] = dataframe[text_column].str.lower()\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: ' '.join([word for word in x.split() if word not in (STOPWORDS)]))\n    dataframe[text_column] = dataframe[text_column].str.replace(\"\\d+\", \"\")\n    dataframe[text_column] = dataframe[text_column].apply(\n        lambda x: re.sub(r'\\W+', ' ', x))\n\n    # Apply vectorization process.\n    vectorizer = CountVectorizer()\n    vectorizer.fit(dataframe[text_column])\n\n    # Convert text into a numeric format.\n    result = pd.DataFrame(vectorizer.transform(\n        dataframe[text_column]).toarray(), columns=vectorizer.get_feature_names())\n\n    return result", "tokens": ["#", " Lower", " case", " and", " remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", ".", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " (", "ST", "OP", "W", "OR", "DS", ")]", "))", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "(", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ")", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " Apply", " vector", "ization", " process", ".", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Convert", " text", " into", " a", " numeric", " format", ".", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "vector", "izer", ".", "transform", "(", "\n", "        ", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " result"], "logprobs": [-0.5974228382110596, -3.4513421058654785, -1.3762599229812622, -2.355109691619873, -0.6986544728279114, -0.2601883113384247, -0.2365519404411316, -1.9709161520004272, -0.1559765636920929, -0.450308620929718, -0.06819276511669159, -0.019650312140583992, -0.023862315341830254, -2.7080564498901367, -0.0425424687564373, -0.007248058449476957, -1.006040334701538, -0.05909667909145355, -0.24072396755218506, -0.1588241159915924, -1.3112935448589269e-05, -7.962863310240209e-05, -0.01076545100659132, -0.003685350762680173, -0.032397594302892685, -2.0265558760002023e-06, -0.005284033250063658, -0.0048620328307151794, -4.0531076592742465e-06, -1.311301275563892e-06, -0.003767655696719885, -0.01317686215043068, -0.3110818564891815, -0.0004817279113922268, -0.03631945699453354, -0.0378776378929615, -0.42137736082077026, -0.06130531430244446, -0.11141984164714813, -0.0017284705536440015, -0.004759767558425665, -0.0008127961773425341, -9.536738616588991e-07, -1.0728830375228426e-06, -0.0017456068890169263, -0.006382438819855452, -0.02188589796423912, -3.576278118089249e-07, -0.0011880489764735103, -0.00463838828727603, -2.9802276912960224e-06, -4.792098479811102e-05, -0.0014243705663830042, -0.0038294093683362007, -0.230840802192688, -0.0015526870265603065, -0.9065244793891907, -0.009116334840655327, -0.0062004816718399525, -0.03085257299244404, -0.0004988856380805373, -0.45680850744247437, -0.0001919085334520787, -0.0001839230244513601, -0.0002760506176855415, -0.3665781021118164, -0.08640824258327484, -0.0029513156041502953, -0.00015138434537220746, -0.0003583981015253812, -0.2195986658334732, -1.3947389561508317e-05, -0.004097044467926025, -0.006059845443814993, -0.04308006912469864, -0.07433990389108658, -0.03639842942357063, -0.0007857572636567056, -1.47856867313385, -0.07347498089075089, 0.0, -2.95634672511369e-05, 0.0, 0.0, -0.16563400626182556, -0.17670820653438568, -0.01512099988758564, -0.014802505262196064, -0.010701765306293964, -2.992108420585282e-05, -0.0007282227743417025, -7.1403817855753e-05, -1.1920928244535389e-07, -4.768370445162873e-07, -0.00024589852546341717, -0.0009893052047118545, -0.006031644530594349, -9.536738616588991e-07, -0.0005117537220939994, -0.00041345154750160873, -3.576278118089249e-07, -6.318072337307967e-06, -0.000303818320389837, -0.001482460182160139, -0.9709067344665527, -0.00010966652916977182, -0.00606861338019371, -0.12763790786266327, -0.20710112154483795, -0.13034328818321228, -0.03579649329185486, -0.26778554916381836, -0.0001419681793777272, -8.106198947643861e-06, -0.002064598724246025, -0.005218337289988995, -0.037181150168180466, -0.025636514648795128, -0.011792119592428207, -0.02229028381407261, -3.707340147229843e-05, -0.0005268854438327253, -6.115249561844394e-05, -9.536738616588991e-07, -4.768370445162873e-07, -2.1934269170742482e-05, -0.00017855956684798002, -0.0075285048224031925, -1.1920928244535389e-07, -0.00020787939138244838, -0.00047886825632303953, -1.1920928244535389e-07, -3.182837463100441e-05, -5.6265202147187665e-05, -0.00033480284037068486, -0.633172869682312, -0.0001627074379939586, -0.656095564365387, -0.0002874914789572358, -6.55629628454335e-05, -0.0012044801842421293, -3.0397906812140718e-05, -0.1437636911869049, -4.529942543740617e-06, -0.0004189328756183386, -0.04432172328233719, -0.007632380351424217, -0.7268199324607849, -0.15280014276504517, -0.0004234609368722886, -3.2186455882765586e-06, -0.07967007905244827, -4.875540980719961e-05, -1.1444026313256472e-05, -0.0026060924865305424, -0.09035934507846832, -0.031317126005887985, -0.1744159609079361, -0.00022206225548870862, -0.02827291749417782, -1.414334774017334, -0.5886872410774231, -0.012732521630823612, -1.2576074600219727, -1.348830223083496, -0.02586875483393669, -0.0007070187130011618, -0.46338745951652527, -0.08146201819181442, -0.004038868937641382, -0.0005149707430973649, -9.536738616588991e-07, -1.4305104514278355e-06, -0.14508849382400513, -0.027258748188614845, -0.03262526914477348, -1.057246208190918, -0.08350397646427155, -0.008752318099141121, -0.0019113620510324836, -0.05275328829884529, -0.004155453760176897, -6.69933797325939e-05, -0.005522590130567551, -0.0008879532688297331, -5.006777428206988e-06, -4.768360213347478e-06, -0.03630911186337471, -0.00837918370962143, -1.6941933631896973, -0.0003084660565946251, -0.6829420924186707, -1.1620780229568481, -0.3495385944843292, -0.38484251499176025, -0.7275406122207642, -0.02117304317653179, -0.030244745314121246, -1.1016976833343506, -0.006539374124258757, -0.0007488307310268283, -1.2034761905670166, -0.05375481769442558, -0.4955862760543823, -5.245195097813848e-06, -0.0022291115019470453, -0.02115226909518242, -0.46851712465286255, -1.4305104514278355e-06, -7.438383181579411e-05, -0.05822712928056717, -0.000959531927946955, -0.2134721726179123, -0.002668155822902918, -0.0055423881858587265, -3.576278118089249e-07, -0.001689555705524981, -0.00034528967808000743, -4.887569048150908e-06, -7.033323527139146e-06, -0.0015593523858115077, -0.00012981049076188356, -0.0069986674934625626, -1.9073468138230965e-06, -0.22194425761699677, -0.004833323881030083, -0.012414796277880669, -0.002036403864622116, -0.0016277885297313333, 0.0, -2.50339189733495e-06, -0.00021717573690693825, -1.1920928244535389e-07, -1.490105023549404e-05, 0.0, -6.318072337307967e-06, -0.46000000834465027, -0.003676443127915263, -0.4561384618282318, -0.00019167017308063805, -0.14602181315422058, -0.003610284999012947], "finish_reason": "stop"}], "metrics": {"energy": 863.5763122138984, "energy_per_token": 3.5684971579086713, "time": 21.026651, "time_per_token": 0.0868869876033058}}
{"outputs": [{"text": "# Convert data to lowercase\n    dataframe[text_column] = dataframe[text_column].str.lower()\n\n    # Remove stopwords, numbers, and punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: ' '.join(re.findall(r'\\b[a-zA-Z]{2,}\\b', x)))\n\n    # Remove numbers and punctuation from the whole dataset\n    dataframe = dataframe.applymap(lambda x: x if isinstance(x, str) else str(x))\n    dataframe = dataframe.applymap(lambda x: re.sub(r'\\d+', '', x))\n    dataframe = dataframe.applymap(lambda x: re.sub(r'[^\\w\\s]', '', x))\n\n    # Convert text data to a numeric format suitable for analysis\n    vectorizer = CountVectorizer(stop_words=STOPWORDS)\n    text_array = vectorizer.fit_transform(dataframe[text_column]).toarray()\n\n    # Create DataFrame", "tokens": ["#", " Convert", " data", " to", " lower", "case", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " stop", "words", ",", " numbers", ",", " and", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "re", ".", "find", "all", "(", "r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "]{", "2", ",", "}\\", "b", "'", ",", " x", ")))", "\n", "\n", "    ", "#", " Remove", " numbers", " and", " punct", "uation", " from", " the", " whole", " dataset", "\n", "    ", "data", "frame", " =", " data", "frame", ".", "apply", "map", "(", "lambda", " x", ":", " x", " if", " isinstance", "(", "x", ",", " str", ")", " else", " str", "(", "x", "))", "\n", "    ", "data", "frame", " =", " data", "frame", ".", "apply", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " x", "))", "\n", "    ", "data", "frame", " =", " data", "frame", ".", "apply", "map", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Convert", " text", " data", " to", " a", " numeric", " format", " suitable", " for", " analysis", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "stop", "_", "words", "=", "ST", "OP", "W", "OR", "DS", ")", "\n", "    ", "text", "_", "array", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Create", " Data", "Frame"], "logprobs": [-0.5974228382110596, -2.7130608558654785, -2.853532314300537, -1.6268919706344604, -0.7704029083251953, -0.15949350595474243, -0.3803844451904297, -0.001167569193057716, -0.24698251485824585, -0.08975503593683243, -0.14764821529388428, -0.015302046202123165, -1.1801649634435307e-05, -4.529942543740617e-06, -0.0016994333127513528, -0.000536655425094068, -0.005632956512272358, -4.6491513785440475e-06, -0.001731802592985332, -0.00041333239641971886, -7.152555099310121e-07, -1.1920922133867862e-06, -8.165503095369786e-05, -0.000321336614433676, -0.08853431046009064, -1.1324817933200393e-05, -0.0029082882683724165, -8.368142152903602e-05, -0.010310481302440166, -0.1631544977426529, -0.0002320735511602834, -0.008558263070881367, -0.1564914882183075, -0.3201481103897095, -0.12708836793899536, -1.4650646448135376, -0.07740812748670578, -0.1679985374212265, -0.036883968859910965, -0.035473473370075226, -0.012933888472616673, -0.23687145113945007, -0.0015055523253977299, -0.7729728817939758, -0.0032637445256114006, -0.008811756037175655, -0.0016946729738265276, -2.50339189733495e-06, -3.433168603805825e-05, -0.0025480680633336306, -0.003874890971928835, -0.02979646995663643, -1.7881233361549675e-05, -0.0011944787111133337, -0.0030794364865869284, -3.576272320060525e-06, -0.00010573305189609528, -0.0016177912475541234, -0.004948511254042387, -0.042459409683942795, -0.0009567927336320281, -1.3217052221298218, -0.027782831341028214, -0.0017303746426478028, -0.44714877009391785, -0.00029213930247351527, -0.0005735897575505078, -0.00023934361524879932, -1.0257750749588013, -1.6113097667694092, -0.00029881304362788796, -0.9014177918434143, 0.0, -0.040931928902864456, -0.01845533773303032, -0.06480575352907181, -0.006791247986257076, -0.005117294378578663, -0.08685174584388733, -9.298280929215252e-06, -7.807903602952138e-05, -0.33807438611984253, -5.638440416078083e-05, -0.008573509752750397, -0.28573909401893616, -0.4961448013782501, -0.004746835678815842, -0.1733407974243164, -5.018585216021165e-05, -0.002385748317465186, -0.0003592322755139321, -0.44445568323135376, -0.08485811948776245, -0.012488262727856636, -0.5633819103240967, -0.00026055757189169526, -0.024995742365717888, -1.4218381643295288, -3.4585025310516357, -1.0616132020950317, -0.1147344782948494, -0.011318874545395374, -1.3037104606628418, -1.1052615642547607, -4.116415977478027, -1.1709246635437012, -0.08408018201589584, -0.0021950930822640657, -0.16061848402023315, -0.008035002276301384, -0.36023879051208496, -0.019678950309753418, -6.318072337307967e-06, -0.17340444028377533, -0.062403604388237, -0.3220924735069275, -5.0424259825376794e-05, -0.032894305884838104, -0.008232468739151955, -0.00017426878912374377, -2.778499126434326, -0.5750666260719299, -0.35092493891716003, -0.0001560327800689265, -0.0021015957463532686, -0.0004316828562878072, -0.5462503433227539, -0.0002044230350293219, -0.07142718136310577, -0.7285755276679993, -0.0007228621980175376, -0.001303895260207355, -0.0229645986109972, -0.1981627494096756, -0.1613631695508957, -0.042359888553619385, -0.00023779425828251988, -0.012178231962025166, -0.002252305392175913, -1.1920928244535389e-07, -0.0013322297018021345, -0.03581846132874489, -0.11820129305124283, -5.61460001335945e-05, -0.04467245191335678, -0.0010334871476516128, -0.0003060825983993709, -0.07567434012889862, -1.3232143828645349e-05, -0.01870645210146904, -0.19086606800556183, -0.011256049387156963, -0.5655317306518555, -0.27132925391197205, -0.17269234359264374, -1.811964830267243e-05, -0.042033836245536804, -0.00011634149996098131, -0.012341795489192009, -0.008652458898723125, -0.01545488741248846, -0.008373863995075226, -0.0027128581423312426, -2.9802276912960224e-06, -0.00020203932945150882, -6.115249561844394e-05, 0.0, -0.00013743886665906757, -0.0002892790944315493, -0.0025031205732375383, -5.722029527532868e-06, -0.0194924995303154, -0.00012790338951162994, -9.775113539944869e-06, -0.0182935893535614, -4.172316494077677e-06, -0.00026008085114881396, -0.2552674114704132, -0.0021802245173603296, -0.17505347728729248, -0.019761351868510246, -0.016959168016910553, -0.0026623301673680544, -0.004959899000823498, -3.528532761265524e-05, -0.01686258614063263, -0.0013935388997197151, -5.722029527532868e-06, -0.03430544584989548, -1.6212332411669195e-05, -0.0005903884884901345, -0.014866869896650314, -0.003099520690739155, -0.13003109395503998, -0.0003516055876389146, -0.021691342815756798, -2.3811395168304443, -0.6202197074890137, -1.9835197925567627, -0.6808774471282959, -1.367856502532959, -0.3661479353904724, -0.09291719645261765, -1.0823653936386108, -0.001057423185557127, -0.01773839257657528, -0.09166551381349564, -0.0013468727702274919, -0.25359249114990234, -0.010334432125091553, -0.0006725909770466387, -0.00047791501856409013, -2.264974000354414e-06, -1.0728830375228426e-06, -0.09242095053195953, -0.32763993740081787, -2.622600959512056e-06, -1.1920928244535389e-07, -0.01427333615720272, -0.023368896916508675, -1.1920928244535389e-07, -9.917721035890281e-05, 0.0, 0.0, -0.12770694494247437, -0.030297599732875824, -0.0318102203309536, -3.384878635406494, -0.07826358824968338, -2.092836856842041, -0.0031867455691099167, -0.44292399287223816, -5.960446742392378e-06, -3.4927710657939315e-05, -0.00181783817242831, -5.364403477869928e-06, -1.823885577323381e-05, -9.119095193454996e-05, -0.009109956212341785, -0.0002307625545654446, -0.007546843495219946, -0.0003455280384514481, -9.298280929215252e-06, -1.2040065485052764e-05, -0.02791036106646061, -0.029339196160435677, -0.007131241727620363, -2.3841830625315197e-06, -0.000228140561375767, -0.0033965774346143007, -0.5985322594642639, -7.712543447269127e-05, -0.07429873198270798, -0.51175856590271, -2.9743669033050537, -0.007155979052186012], "finish_reason": "length"}], "metrics": {"energy": 917.5868064537044, "energy_per_token": 3.584323462709783, "time": 22.077862, "time_per_token": 0.0862416484375}}
{"outputs": [{"text": "# 1. Remove stopwords\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: ' '.join([word for word in x.split() if word not in STOPWORDS]))\n\n    # 2. Remove numbers\n    dataframe[text_column] = dataframe[text_column].str.replace('\\d+', '')\n\n    # 3. Remove punctuation\n    dataframe[text_column] = dataframe[text_column].apply(lambda x: ' '.join(re.findall(r'\\b[a-zA-Z]+\\b', x)))\n\n    # 4. Apply the vectorization process\n    vectorizer = CountVectorizer(token_pattern=r'\\b\\w+\\b', binary=False)\n    vectorized_text = vectorizer.fit_transform(dataframe[text_column])\n\n    # Convert the vectorized text into a DataFrame\n    column_names = vectorizer.get_feature_names_out()\n    result = pd.DataFrame(vectorized_text.toarray(),", "tokens": ["#", " ", "1", ".", " Remove", " stop", "words", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]))", "\n", "\n", "    ", "#", " ", "2", ".", " Remove", " numbers", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "str", ".", "replace", "('", "\\", "d", "+'", ",", " '", "')", "\n", "\n", "    ", "#", " ", "3", ".", " Remove", " punct", "uation", "\n", "    ", "data", "frame", "[", "text", "_", "column", "]", " =", " data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "re", ".", "find", "all", "(", "r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "]", "+\\", "b", "'", ",", " x", ")))", "\n", "\n", "    ", "#", " ", "4", ".", " Apply", " the", " vector", "ization", " process", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " binary", "=", "False", ")", "\n", "    ", "vector", "ized", "_", "text", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n", "\n", "    ", "#", " Convert", " the", " vector", "ized", " text", " into", " a", " Data", "Frame", "\n", "    ", "column", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", ".", "to", "array", "()", ","], "logprobs": [-0.5974228382110596, -3.8859753608703613, -0.3516269326210022, -0.1460166722536087, -1.8901417255401611, -0.28720107674598694, -0.12783315777778625, -0.6348862051963806, -0.020930487662553787, -1.4081207513809204, -0.09844136238098145, -0.21623651683330536, -0.049671199172735214, -1.490105023549404e-05, -2.1934269170742482e-05, -0.015437046065926552, -0.008466895669698715, -0.02333524078130722, -5.960462772236497e-07, -0.004286625422537327, -0.002468160120770335, -9.298280929215252e-06, -7.629365427419543e-06, -0.001096481690183282, -0.005637697875499725, -0.4691169261932373, -0.0012724645202979445, -0.46274372935295105, -0.010106933303177357, -0.0018152202246710658, -0.3256627023220062, -0.00020358874462544918, -0.00048315772437490523, -5.376194530981593e-05, -0.023145044222474098, -0.06536435335874557, -0.004400926176458597, -0.0006310140597634017, -0.001412823679856956, -0.05888967588543892, -9.953480184776708e-05, -0.0425826795399189, -0.004365201108157635, -0.040299855172634125, -0.03097289241850376, -0.12017156928777695, -0.08501098304986954, -0.07493556290864944, 0.0, -1.5139465176616795e-05, 0.0, 0.0, -0.00420780573040247, -0.0038874782621860504, -0.3820590078830719, -0.0004198861715849489, -0.000835903687402606, -0.014365584589540958, -0.006189464125782251, -0.003211105475202203, -0.07354409992694855, -0.14958292245864868, -0.15520039200782776, -0.0003123987407889217, -0.02204659953713417, -7.164221460698172e-05, -0.002506569027900696, -0.00019464982324279845, -2.0265558760002023e-06, -2.288792165927589e-05, -0.0002592465898487717, -0.0021472747903317213, -0.0016576610505580902, -2.3841855067985307e-07, -0.0003256267518736422, -9.142934868577868e-05, -4.768370445162873e-07, -4.6491513785440475e-06, -2.825220326485578e-05, -0.00019405389321036637, -2.0141401290893555, -2.90866428258596e-05, -0.012117933481931686, -1.1324692964553833, -0.4214320480823517, -0.002638075966387987, -0.0033595096319913864, -0.0001264730526600033, -0.09950686991214752, -0.05140940472483635, -0.02089756540954113, -0.012822912074625492, -0.00037293630884960294, -0.0002466136065777391, -0.003544597653672099, -0.008152540773153305, -0.00101383775472641, -0.03854427859187126, -0.03586561605334282, -0.04498191550374031, -0.04984836280345917, -0.00021145492792129517, -0.047690633684396744, -0.0001062098381225951, -0.0009010545909404755, -0.0001294529065489769, -1.7881377516459906e-06, -7.152531907195225e-06, -9.42901024245657e-05, -0.00040189296123571694, -0.0009242791566066444, 0.0, -0.0001961992384167388, -8.797258487902582e-05, 0.0, -8.844937838148326e-05, -2.288792165927589e-05, -0.0002775999018922448, -0.08232224732637405, -0.00028701478731818497, -0.0068917665630578995, -0.007565181702375412, -0.001321038813330233, -1.4240399599075317, -6.758938252460212e-05, -6.007967749610543e-05, -0.00011586471373448148, -0.007199179381132126, -0.00011359999916749075, -1.490105023549404e-05, -0.1982632577419281, 0.0, -0.03748972713947296, -0.005216202698647976, -0.007771731354296207, -0.8486492037773132, -0.09961672127246857, -0.07270332425832748, -6.23445157543756e-05, -1.8358061424805783e-05, -0.0032926176209002733, -2.145764938177308e-06, -0.021049320697784424, -0.05745992809534073, -2.8371408916427754e-05, -6.079655122448457e-06, -0.00011634149996098131, -3.6954195820726454e-05, -0.0034121407661587, -0.004871760495007038, -0.0023858672939240932, -0.00979510135948658, -0.0005193791585043073, -0.013741064816713333, -0.22311589121818542, -0.015099159441888332, -0.010482490994036198, -1.3346740007400513, -3.2958643436431885, -0.11871709674596786, -0.018694166094064713, -0.30729973316192627, -0.4070160984992981, -0.004520554561167955, -0.3722918927669525, -0.015248275361955166, -0.001165664056316018, -0.0004894727608188987, -1.311301275563892e-06, -8.344646857949556e-07, -1.013232946395874, -1.6891767978668213, -0.12830300629138947, -2.884823152271565e-05, -0.023486394435167313, -0.012032191269099712, -0.13262908160686493, -0.007918750867247581, -0.2739739418029785, -0.025007832795381546, -0.0008878341759555042, -3.0636318115284666e-05, -2.021225929260254, -0.00014697425649501383, -1.9837579727172852, -0.0024096521083265543, -1.3929908275604248, -0.25187575817108154, -0.07709562033414841, -0.0731583684682846, -1.1512422561645508, -0.8997214436531067, -0.05959097668528557, -0.5075516104698181, -0.06270068883895874, -0.01418295968323946, -5.245195097813848e-06, -6.079655122448457e-06, -0.003000640543177724, -9.536738616588991e-07, -1.2636104656849056e-05, -0.0004707658663392067, -0.0025284483563154936, -6.472854875028133e-05, -0.003925001714378595, -0.00023016665363684297, -4.768360213347478e-06, -1.3828182090946939e-05, -0.024105791002511978, -0.1270597130060196, -0.29461556673049927, -0.00024125049822032452, -0.0432761050760746, -1.914959192276001, -0.47425082325935364, -0.8722875118255615, -0.003470352618023753, -0.03798632696270943, -1.2433843612670898, -0.019494136795401573, -0.08242006599903107, -0.0027972639072686434, -0.305367112159729, -0.0004320403386373073, -3.939453125, -0.00044645831803791225, -0.006800128147006035, -0.00029345019720494747, -0.0806751623749733, -3.2186455882765586e-06, -1.9073468138230965e-06, -6.949660019017756e-05, 0.0, -1.2159273865108844e-05, 0.0, -8.22540732769994e-06, -0.4163896441459656, -8.523101132595912e-05, -0.0005335576133802533, -0.009936039336025715, -0.016404636204242706, -0.8970775008201599, -0.1858837753534317, -0.0016847953666001558, -9.536738616588991e-07, -0.001699671265669167, -0.003102016169577837, -0.1543620377779007, 0.0, -1.1920928244535389e-07, 0.0, -0.0009623901569284499, -0.08031362295150757, -1.0728830375228426e-06, -0.002193070948123932, -0.006709665060043335], "finish_reason": "length"}], "metrics": {"energy": 899.3857072143564, "energy_per_token": 3.51322541880608, "time": 22.067867, "time_per_token": 0.08620260546875}}
{"outputs": [{"text": "# Select text data\n    text_data = dataframe[text_column]\n    # Preprocessing\n    text_data = text_data.astype(str).str.replace(r\"http\\S+\", \"\")  # Remove urls\n    text_data = text_data.str.replace(r\"\\d+\", \"\")  # Remove numbers\n    text_data = text_data.str.replace(r\"[^\\w\\s]\", \"\")  # Remove punctuation\n    text_data = text_data.apply(\n        lambda x: \" \".join(x for x in x.split() if x not in STOPWORDS))  # Remove stopwords\n    # Vectorization\n    vectorizer = CountVectorizer()\n    vectorizer.fit(text_data)\n    vectorized_text = vectorizer.transform(text_data)\n    vectorized_df = pd.DataFrame(vectorized_text.toarray(), columns=vectorizer.get_feature_names_out())\n    # Return the DataFrame with words as columns and their count as rows\n    return vector", "tokens": ["#", " Select", " text", " data", "\n", "    ", "text", "_", "data", " =", " data", "frame", "[", "text", "_", "column", "]", "\n", "    ", "#", " Pre", "processing", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "ast", "ype", "(", "str", ")", ".", "str", ".", "replace", "(", "r", "\"", "http", "\\", "S", "+", "\"", ",", " \"", "\"", ")", "  ", "#", " Remove", " url", "s", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "str", ".", "replace", "(", "r", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ")", "  ", "#", " Remove", " numbers", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ")", "  ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "data", " =", " text", "_", "data", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "x", " for", " x", " in", " x", ".", "split", "()", " if", " x", " not", " in", " ST", "OP", "W", "OR", "DS", "))", "  ", "#", " Remove", " stop", "words", "\n", "    ", "#", " Vector", "ization", "\n", "    ", "vector", "izer", " =", " Count", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "_", "data", ")", "\n", "    ", "vector", "ized", "_", "text", " =", " vector", "izer", ".", "transform", "(", "text", "_", "data", ")", "\n", "    ", "vector", "ized", "_", "df", " =", " pd", ".", "DataFrame", "(", "vector", "ized", "_", "text", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n", "    ", "#", " Return", " the", " Data", "Frame", " with", " words", " as", " columns", " and", " their", " count", " as", " rows", "\n", "    ", "return", " vector"], "logprobs": [-0.5974228382110596, -3.9739155769348145, -2.8885388374328613, -2.5367796421051025, -2.0219788551330566, -0.0012622254434973001, -0.7516199350357056, -0.7142437696456909, -0.19230838119983673, -0.008328705094754696, -0.041740722954273224, -6.151010165922344e-05, -0.05952785536646843, -0.0037744250148534775, -2.50339189733495e-06, -5.960446742392378e-06, -0.0005962263094261289, -0.1781565099954605, -2.214556932449341, -0.14434696733951569, -2.2669544219970703, -1.273439884185791, -0.5786524415016174, -0.012997078709304333, -0.770270824432373, -0.027404669672250748, -0.04737563803792, -0.07870365679264069, -0.17215247452259064, -4.053033626405522e-05, -0.00013433984713628888, -0.0011275607394054532, -2.467057228088379, -2.0265558760002023e-06, -0.18891137838363647, -0.02086907997727394, -0.004574429709464312, -1.035111427307129, -0.029884520918130875, -0.0004258441040292382, -0.9576148986816406, -0.7013596892356873, -0.2680489122867584, -0.9810200333595276, -0.6931459903717041, -0.009413854219019413, -5.125986263010418e-06, -0.03224720433354378, -0.0017935632495209575, -3.71926071238704e-05, -0.009053017012774944, -0.04799416661262512, -0.19730475544929504, -1.0450180768966675, -0.00030882356804795563, -0.46303224563598633, -1.351241111755371, -0.15405592322349548, -0.06297776103019714, -0.00841783918440342, -0.03820045664906502, -0.00034433635300956666, -0.0006301801186054945, -0.00154971145093441, -0.026361754164099693, -2.8490614567999728e-05, -1.2636104656849056e-05, -0.0004481264913920313, -0.2652970552444458, -7.092700980138034e-05, -0.27443385124206543, -0.12048960477113724, -0.12260725349187851, -0.2911106050014496, -0.847495436668396, -0.6464501023292542, -0.05803603306412697, -0.0057954611256718636, -7.271740287251305e-06, -0.022195732221007347, -0.007816560566425323, -0.013701673597097397, -0.1011613979935646, -2.658331868587993e-05, -0.02634747326374054, -0.1952476054430008, -0.015656057745218277, -0.004973540082573891, -0.06656226515769958, -0.0010053823934867978, -0.0012804412981495261, -0.0019363479223102331, -0.020405836403369904, -1.5616295058862306e-05, -4.0531076592742465e-06, -0.0006023023161105812, -0.18060250580310822, -0.00017796363681554794, -0.1282254159450531, -0.037995051592588425, -0.1586037129163742, -0.07126656174659729, -0.33761104941368103, -0.0161809790879488, -0.0010027624666690826, -0.007556071970611811, -0.001764646964147687, -0.04478906840085983, -1.2636104656849056e-05, -0.006384571082890034, -0.026165513321757317, -0.03863615170121193, -0.06033533439040184, -4.768360213347478e-06, -0.021512966603040695, -0.02794780395925045, -0.04227212816476822, -0.03245783597230911, -0.03775952383875847, -0.14021854102611542, -0.00031931069679558277, -0.0045477296225726604, -0.0040906332433223724, -0.017823413014411926, -5.006777428206988e-06, -1.3828182090946939e-05, -0.0007684853626415133, -2.6280558109283447, -0.00221055606380105, -1.3235355615615845, -0.0028033265843987465, -0.0037529291585087776, -0.04790235310792923, -0.0002109781780745834, -0.21583291888237, -0.001258891774341464, -4.1483970562694594e-05, -0.0001284993631998077, -1.8021374940872192, -1.5765315294265747, -0.06511028110980988, -0.0004611144249793142, -1.8596476365928538e-05, -0.10173807293176651, -0.0011219641892239451, -0.0006861716392450035, -0.017766030505299568, -0.002892598044127226, -0.006624286528676748, -0.07756754010915756, -2.372236667724792e-05, -0.007577722892165184, 0.0, -7.211902266135439e-05, 0.0, 0.0, -0.7113057374954224, -0.08968321979045868, -1.8000440832111053e-05, -0.012577615678310394, -0.03895723447203636, -0.0820716843008995, -0.005499590653926134, -0.177838534116745, -0.21254990994930267, -0.5400030016899109, -0.2758212387561798, -0.12552595138549805, -0.00047183825518004596, -0.5120839476585388, -0.03955050930380821, -0.000993830617517233, -0.0008230397943407297, -4.0531076592742465e-06, -1.0728830375228426e-06, -0.5809143781661987, -0.08057805150747299, -0.004059290047734976, -0.8823975920677185, -0.1947336047887802, -0.021352997049689293, -0.0015044810716062784, -0.04735119268298149, -0.008069058880209923, -5.400034933700226e-05, -2.7418097943154862e-06, -0.029961111024022102, -0.01618766412138939, -0.019653234630823135, -1.767775535583496, -0.42555564641952515, -0.04683544859290123, -0.3824543058872223, -0.15040160715579987, -0.007120233960449696, -6.437280717364047e-06, -3.802703940891661e-05, -0.004642541520297527, -0.0007365613128058612, -0.004036019556224346, -4.768360213347478e-06, -6.6756979322235566e-06, -0.0020361661445349455, -0.023868251591920853, -0.08052603155374527, -1.910813808441162, -0.016735868528485298, -0.0017442979151383042, -2.3140385150909424, -0.0005559567362070084, -0.0013148480793461204, -7.271740287251305e-06, -0.00042250767000950873, -0.001430679694749415, -0.2576364278793335, -5.1377883210079744e-05, -1.311301275563892e-06, -1.1920922133867862e-06, -0.0051826415583491325, -0.07742191851139069, -1.1920922133867862e-06, -0.02820732444524765, -0.0019211184699088335, -0.05094582214951515, -0.0012235306203365326, -0.0002740246127359569, -5.960462772236497e-07, -9.798523387871683e-05, -0.00021598390594590455, -9.536738616588991e-07, -1.0132738680113107e-05, 0.0, -3.099436753473128e-06, -0.4977149963378906, -0.00028832571115344763, -0.0031909046228975058, -0.006838489323854446, -0.18200932443141937, -1.7387816905975342, -0.6247978210449219, -1.8345893621444702, -1.5835332870483398, -0.02310357615351677, -1.1292692422866821, -3.8068437576293945, -0.21861125528812408, -0.07834284007549286, -0.07631106674671173, -0.36319106817245483, -0.16199283301830292, -0.027547787874937057, -0.007506852969527245, -0.06419206410646439, -0.00041130665340460837, -0.007090642582625151, -0.005873207468539476], "finish_reason": "length"}], "metrics": {"energy": 903.8127835807802, "energy_per_token": 3.5305186858624227, "time": 22.288187, "time_per_token": 0.08706323046875}}
