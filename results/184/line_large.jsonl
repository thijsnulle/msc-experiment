{"outputs": [{"text": " re.sub('[%s]' % re.escape(string.punctuation), '', text.lower())", "tokens": [" re", ".", "sub", "('", "[", "%", "s", "]", "'", " %", " re", ".", "escape", "(", "string", ".", "punct", "uation", ")", ",", " ''", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.73714280128479, -5.566918844124302e-05, -0.010152839124202728, -1.2622586488723755, -0.38222503662109375, -2.012786865234375, -0.10647831112146378, -0.11618700623512268, -0.0024760086089372635, -0.0016561138909310102, -0.015575900673866272, -0.0011037455406039953, -0.0011928117601200938, -0.0532776303589344, -0.19914661347866058, -5.936446541454643e-05, -0.0006262486567720771, -8.34461570775602e-06, -0.016523540019989014, -0.008785168640315533, -0.16963326930999756, -0.00018940561858471483, -0.030438337475061417, -2.1519086360931396, -0.02057611756026745, -0.03957755118608475, -0.2592508792877197], "finish_reason": "stop"}, {"text": " re.sub(r'\\d+', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.26985490322113037, -1.5139465176616795e-05, -0.0008208957733586431, -0.15642869472503662, -0.0345628596842289, -0.41463249921798706, -1.496220350265503, -0.026557955890893936, -1.3232143828645349e-05, -0.10748690366744995, -6.639736966462806e-05, -0.0029384789522737265, -0.0011252983240410686, -0.09637904912233353], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.17225533723831177, -2.622600959512056e-06, -0.0006376855308189988, -0.04785144329071045, -0.018871290609240532, -0.8410086035728455, -0.02942231111228466, -0.02665720507502556, -0.0008889061282388866, -0.040674202144145966, -0.00020203932945150882, -0.007191486191004515, -0.0002779574424494058, -3.635817120084539e-05, -0.49851280450820923, -0.0002991705550812185, -0.00011598391574807465, -0.0009557208395563066, -0.0009629856795072556, -0.011273141019046307], "finish_reason": "stop"}, {"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-2.6418282985687256, -0.00038580605178140104, -0.8796600699424744, -0.08558708429336548, -0.006985764019191265], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.018497934564948082, -0.01913001947104931], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004324014764279127, -2.3841855067985307e-07, -0.003792238887399435, -0.0002656822034623474, -4.887569048150908e-06, -4.291525328881107e-06, -1.6689160474925302e-05, -0.00011896379146492109, -0.10059376806020737, -4.124556289752945e-05, -0.09917237609624863, -1.311301275563892e-06, -9.536738616588991e-07, -1.5497195136049413e-06, -0.00015198028995655477, -0.0026277319993823767], "finish_reason": "stop"}, {"text": " CountVectorizer(token_pattern=r\"\\b\\w+\\b\", lowercase=True, max_features=1000000)", "tokens": [" Count", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "\"", "\\", "b", "\\", "w", "+\\", "b", "\"", ",", " lower", "case", "=", "True", ",", " max", "_", "features", "=", "1", "0", "0", "0", "0", "0", "0", ")", "\n"], "logprobs": [-0.000316927267704159, -9.536738616588991e-07, -3.933898824470816e-06, -0.9370089769363403, -1.7667856216430664, -0.07194814831018448, -5.531158240046352e-05, -0.020200595259666443, -0.005235414020717144, -2.492353916168213, -0.2605448067188263, -0.128464475274086, -1.1926729679107666, -0.03029794618487358, -0.013864400796592236, -7.295342220459133e-05, -0.0008378094644285738, -1.477217197418213, -1.411924958229065, -8.702239938429557e-06, -0.0008918836829252541, -1.3378273248672485, -0.9924036860466003, -1.1468831300735474, -1.597391747054644e-05, -1.45267915725708, -0.0011491130571812391, -0.6731786131858826, -0.03514770045876503, -0.027963686734437943, -0.05269142985343933, -0.34272000193595886, -0.749946653842926, -0.5901145935058594, -0.25089940428733826, -0.012768067419528961], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.017561066895723343, -2.50339189733495e-06, -7.986990567587782e-06, -0.00013183678674977273, -6.6756979322235566e-06, -1.585470999998506e-05, -0.0003800861886702478, -0.0073887649923563, -2.002696055569686e-05, -0.004919448867440224, -0.00021228920377325267, -4.0531076592742465e-06, -2.074220174108632e-05, -0.017030542716383934, -0.09030543267726898], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>from sklearn.ensemble import RandomForestClassifier", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "from", " sklearn", ".", "ense", "mble", " import", " Random", "Fore", "st", "Class", "ifier", "\n"], "logprobs": [-0.003403824521228671, -5.364403477869928e-06, -0.002599909668788314, -0.04156623035669327, -0.027206776663661003, -2.145764938177308e-06, -3.099436753473128e-06, -2.3841855067985307e-07, -0.0025542511139065027, -0.2640629708766937, -6.556489552167477e-06, -0.005841446109116077, -0.0016370717203244567, -0.003353568958118558, -0.003547804895788431, -0.0005388000281527638, -2.3841855067985307e-07, -1.0490362910786644e-05, -9.941560711013153e-05, -1.0728830375228426e-06, -8.106198947643861e-06, 0.0, -5.245071224635467e-05, -0.4388822913169861, -0.012706509791314602, -0.0013624681159853935, -0.8822214007377625, -7.033323527139146e-06, -2.264974000354414e-06, -3.2186455882765586e-06, -6.556489552167477e-06, -0.13373659551143646, -2.0421690940856934, -1.8879013061523438, -0.2539738416671753, -2.8319010734558105, -2.861018856492592e-06, -0.009802302345633507, -0.5955105423927307, -0.00814509205520153, -1.1920928244535389e-07, -0.3159191310405731, -4.8993817472364753e-05, -0.059615910053253174], "finish_reason": "stop"}], "metrics": {"energy": 742.3133892002104, "energy_per_token": 4.147002174302852, "time": 19.13601, "time_per_token": 0.10690508379888268}}
{"outputs": [{"text": " text.lower()  # Convert to lowercase", "tokens": [" text", ".", "lower", "()", "  ", "#", " Convert", " to", " lower", "case", "\n"], "logprobs": [-0.7213525176048279, -0.0008347125840373337, -0.07932282984256744, -8.320462075062096e-05, -1.6789140701293945, -9.440929716220126e-05, -0.20631369948387146, -0.3584641218185425, -0.0004646890447475016, -0.006809718441218138, -0.009025254286825657], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.22912509739398956, -1.3351351299206726e-05, -0.0007425173535011709, -0.16949763894081116, -0.024750621989369392, -0.45249703526496887, -0.357658326625824, -0.9560545086860657, -0.0018962513422593474, -1.0307844877243042, -0.00014351768186315894, -1.3470558769768104e-05, -1.966933996300213e-05, -2.4437606043647975e-05, -0.005115396808832884, -0.04214676097035408, 0.0, -1.680836794548668e-05, 0.0, 0.0, -0.00018439977429807186, -0.00015138434537220746, -0.0001333863037871197, -0.002055557444691658, -1.549708758830093e-05, -0.09022101759910583, -0.058279089629650116, -0.00020275443966966122, -3.0517112463712692e-05, -7.986990567587782e-06, -0.053243495523929596, -3.6238969187252223e-05, -0.0028135497123003006, -0.003750553820282221, -0.061505429446697235], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.1473933309316635, -2.7418097943154862e-06, -0.0007084482349455357, -0.06269095093011856, -0.011643076315522194, -0.7898238301277161, -0.03184959664940834, -0.028188548982143402, -0.0012512720422819257, -0.07000748068094254, -0.0001419681793777272, -0.007961089722812176, -0.0002324311062693596, -2.7417760065873154e-05, -0.5272254943847656, -0.0003575639275368303, -0.0001230164198204875, -0.0011604249011725187, -0.0010126468259841204, -0.008900374174118042], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.6846638321876526, -0.0004101150552742183, -0.00031883400515653193, -8.594620157964528e-05, -0.15284506976604462, -0.018618931993842125, -0.0017625049222260714, -1.0132738680113107e-05, -1.2636104656849056e-05, -0.002183198230341077, -0.00012754580529872328, -0.00025376438861712813, -0.08472089469432831, -0.0021824846044182777, -0.005482992623001337, -0.01572611927986145, -1.4185804502631072e-05, -0.015012380667030811, 0.0, -2.109982233378105e-05, 0.0, 0.0, -0.014733555726706982, -0.0019860798493027687], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.019956400617957115, -0.018247472122311592], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004117939155548811, -3.576278118089249e-07, -0.003706966992467642, -0.00018523407925385982, -3.576272320060525e-06, -3.576272320060525e-06, -1.3470558769768104e-05, -0.00015007323236204684, -0.06099895387887955, -4.5298504119273275e-05, -0.1075403243303299, -1.5497195136049413e-06, -8.344646857949556e-07, -1.9073468138230965e-06, -0.00014304091746453196, -0.002214124659076333], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0002592465898487717, -8.344646857949556e-07, -3.4570634852570947e-06, -0.4780772626399994, -0.006678167264908552], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.0173032209277153, -2.50339189733495e-06, -8.34461570775602e-06, -8.320462075062096e-05, -4.529942543740617e-06, -2.706014311115723e-05, -0.0004568248405121267, -0.008945271372795105, -1.3828182090946939e-05, -0.004390006884932518, -0.00021860594279132783, -3.4570634852570947e-06, -2.2649508537142538e-05, -0.014951431192457676, -0.08448155224323273], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>from typing import Any", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " Any", "\n"], "logprobs": [-0.0030001651030033827, -5.8412379075889476e-06, -0.0018851857166737318, -0.03476828336715698, -0.02995012141764164, -2.50339189733495e-06, -2.9802276912960224e-06, -2.3841855067985307e-07, -0.002822346519678831, -0.22478805482387543, -8.106198947643861e-06, -0.0065776268020272255, -0.0019101722864434123, -0.003371628001332283, -0.003980927634984255, -0.0007173825288191438, -1.1920928244535389e-07, -1.156323378381785e-05, -0.00010489867418073118, -8.344646857949556e-07, -8.821448318485636e-06, 0.0, -3.564294092939235e-05, -0.45889511704444885, -0.0032799041364341974, -0.001364372787065804, -0.9671633243560791, -8.22540732769994e-06, -1.7881377516459906e-06, -2.7418097943154862e-06, -1.0609570381348021e-05, -0.13520856201648712, -1.8626058101654053, -2.079195499420166, -0.0008102948195300996, -2.0804455280303955, -0.916553258895874], "finish_reason": "stop"}], "metrics": {"energy": 680.2980439729689, "energy_per_token": 4.123018448321024, "time": 17.649525, "time_per_token": 0.10696681818181819}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r\"[\\[\\]()\\.;,-\\d]+\", \" \", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "[\\", "[\\", "]", "()\\", ".", ";", ",", "-\\", "d", "]+", "\"", ",", " \"", " \"", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -2.1086299419403076, -3.6180872917175293, -3.3599462509155273, -0.5308554768562317, -2.820213556289673, -1.0098094940185547, -2.3673510551452637, -1.5940920114517212, -1.9688818454742432, -0.4760916531085968, -0.5104330778121948, -0.012664252892136574, -0.00014745102089364082, -0.07184120267629623, -0.2636460065841675, -0.0027611248660832644, -0.024362238124012947, -0.014959181658923626, -0.1119333952665329], "finish_reason": "stop"}, {"text": " re.sub(r'\\W', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.1654883325099945, -2.861018856492592e-06, -0.0009444067254662514, -0.05213192477822304, -0.015150472521781921, -0.7464105486869812, -0.307068794965744, -1.9118225574493408, -0.0003152588615193963, -0.012426923029124737, -8.594620157964528e-05, -1.9550132492440753e-05, -0.0011255365097895265, -0.0019231411861255765, -0.010448869317770004], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split(' ') if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "('", " '", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5116192698478699, -0.0004667146422434598, -0.0003748429589904845, -9.655486064730212e-05, -0.11466602236032486, -0.024174679070711136, -0.0016707521863281727, -1.0609570381348021e-05, -1.537788011773955e-05, -0.0023824183735996485, -0.00010978573118336499, -0.0003292018664069474, -2.6358392238616943, -0.00014673586701974273, -0.00035041390219703317, -0.007958370260894299, -0.0032955880742520094, -0.04229898378252983, -1.811964830267243e-05, -0.013346497900784016, 0.0, -1.645074735279195e-05, 0.0, 0.0, -0.051913175731897354, -0.0016233850037679076], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.025495680049061775, -0.016436534002423286], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(lambda x: preprocess_text(x))", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " pre", "process", "_", "text", "(", "x", "))", "\n"], "logprobs": [-0.0048093595542013645, -3.576278118089249e-07, -0.004042549524456263, -0.0001705739414319396, -2.3841830625315197e-06, -2.7418097943154862e-06, -1.7046782886609435e-05, -0.00015662873920518905, -0.11459310352802277, -4.6967357775429264e-05, -2.1478867530822754, -0.05071616172790527, -0.0015141224721446633, -0.006582719273865223, -4.768370445162873e-07, -1.6689286894688848e-06, -3.099436753473128e-06, -0.0004605186404660344, -0.03866080939769745, -0.012091080658137798, -0.0015335239004343748], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=False)", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n"], "logprobs": [-0.00028796817059628665, -7.152555099310121e-07, -4.768360213347478e-06, -0.9879781007766724, -2.1784749031066895, -0.0006039702566340566, -1.680836794548668e-05, -0.0031226943247020245, -0.47608956694602966, -0.16790461540222168, -0.05632587894797325], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.019320746883749962, -2.7418097943154862e-06, -9.179073458653875e-06, -0.00012158608296886086, -3.814689989667386e-06, -4.458328112377785e-05, -0.000356253091013059, -0.009208115749061108, -1.3708974620385561e-05, -0.004144650883972645, -0.0002734287118073553, -2.861018856492592e-06, -2.9205850296420977e-05, -0.015348300337791443, -0.1006728932261467], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|># Example of the Shapiro-Wilk Normality Test", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "#", " Example", " of", " the", " Sh", "apiro", "-", "W", "ilk", " Norm", "ality", " Test", "\n"], "logprobs": [-0.003132795449346304, -5.006777428206988e-06, -0.0029415693134069443, -0.03138621523976326, -0.024134650826454163, -2.0265558760002023e-06, -3.6954811548639555e-06, -2.3841855067985307e-07, -0.0029173216316848993, -0.19786594808101654, -7.629365427419543e-06, -0.007010860368609428, -0.0015845850575715303, -0.0029123295098543167, -0.0032619622070342302, -0.0005318895564414561, -2.3841855067985307e-07, -8.702239938429557e-06, -0.00010525626566959545, -8.344646857949556e-07, -8.583032467868179e-06, 0.0, -7.664863369427621e-05, -0.31326261162757874, -0.0022136487532407045, -0.001524953986518085, -0.920285701751709, -8.22540732769994e-06, -2.7418097943154862e-06, -3.4570634852570947e-06, -1.07287787614041e-05, -0.13065937161445618, -1.1270254850387573, -4.561960220336914, -1.8612695932388306, -3.0436606407165527, -0.25172656774520874, -0.0015808953903615475, -1.2516897186287679e-05, -0.0013850866816937923, -0.0033030735794454813, -0.0020435419864952564, -6.067568756407127e-05, -0.00022301571152638644, -0.01911703683435917], "finish_reason": "stop"}], "metrics": {"energy": 697.8349611539845, "energy_per_token": 4.255091226548686, "time": 17.87403, "time_per_token": 0.10898798780487806}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " \" \".join(filter(lambda x: x not in STOPWORDS, text.split()))", "tokens": [" \"", " \"", ".", "join", "(", "filter", "(", "lambda", " x", ":", " x", " not", " in", " ST", "OP", "W", "OR", "DS", ",", " text", ".", "split", "()))", "\n"], "logprobs": [-3.109818458557129, -0.41072237491607666, -5.531158240046352e-05, -3.933898824470816e-06, -0.16348618268966675, -2.099557876586914, -0.00020466140995267779, -0.003013238776475191, -0.05193230137228966, -0.00019178935326635838, -0.03949378803372383, -0.0014803176745772362, -1.3708974620385561e-05, -0.001922665280289948, 0.0, -0.0001752223033690825, 0.0, 0.0, -0.009659456089138985, -0.005428217351436615, -0.000631848000921309, -1.6927575416048057e-05, -0.0055924151092767715, -0.0831039696931839], "finish_reason": "stop"}, {"text": " re.sub(r\"[^\\w\\s]\", \" \", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", " \"", ",", " text", ")", "\n"], "logprobs": [-0.16600626707077026, -2.9802276912960224e-06, -0.0009658439084887505, -0.06622526794672012, -0.015008270740509033, -2.9635438919067383, -0.2732168138027191, -0.7727075219154358, -0.003932719584554434, -0.019770467653870583, -0.025814272463321686, -0.02690696343779564, -3.302042750874534e-05, -0.3295239508152008, -0.8358289003372192, -0.0001951265730895102, -0.0034956559538841248, -0.006259834859520197, -0.011010839603841305], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5143033862113953, -0.00044955636258237064, -0.0004303721070755273, -7.545663538621739e-05, -0.15679839253425598, -0.027362333610653877, -0.0019953595474362373, -8.34461570775602e-06, -1.6212332411669195e-05, -0.00217475276440382, -0.00014447122521232814, -0.00035494225448928773, -0.12083151936531067, -0.0024379552341997623, -0.0045904493890702724, -0.020442044362425804, -1.2755313036905136e-05, -0.021438060328364372, 0.0, -2.2649508537142538e-05, 0.0, 0.0, -0.01161255780607462, -0.0014836505288258195], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02169974148273468, -0.021365949884057045], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.005091439001262188, -3.576278118089249e-07, -0.003765280358493328, -0.00022825974156148732, -2.9802276912960224e-06, -4.410734163684538e-06, -1.6569954823353328e-05, -0.00019167017308063805, -0.09667724370956421, -3.683499380713329e-05, -0.11018215119838715, -1.0728830375228426e-06, -7.152555099310121e-07, -3.2186455882765586e-06, -0.00015269544383045286, -0.002629753202199936], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00029059001826681197, -7.152555099310121e-07, -5.006777428206988e-06, -0.4628536105155945, -0.007123193237930536], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.0150444395840168, -3.3378546504536644e-06, -9.298280929215252e-06, -0.00017176583060063422, -4.0531076592742465e-06, -1.4185804502631072e-05, -0.00048458753735758364, -0.007598781492561102, -1.4185804502631072e-05, -0.0036393855698406696, -0.00018249277491122484, -3.4570634852570947e-06, -2.1576648578047752e-05, -0.015496674925088882, -0.07749903202056885], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0038676473777741194, -5.006777428206988e-06, -0.0015217402251437306, -0.03393654152750969, -0.026457538828253746, -2.7418097943154862e-06, -2.9802276912960224e-06, -2.3841855067985307e-07, -0.0024375985376536846, -0.23545944690704346, -5.722029527532868e-06, -0.0047732931561768055, -0.0021034989040344954, -0.003977959044277668, -0.003461561631411314, -0.0007728926721028984, -1.1920928244535389e-07, -9.65590606938349e-06, -0.00012861855793744326, -7.152555099310121e-07, -9.775113539944869e-06, 0.0, -4.708655978902243e-05, -0.41027435660362244, -0.0028255560901015997, -0.0012155532604083419, -0.794230580329895], "finish_reason": "stop"}], "metrics": {"energy": 575.4331735935208, "energy_per_token": 4.2002421430184, "time": 15.341836, "time_per_token": 0.11198420437956205}}
{"outputs": [{"text": " re.sub('[^a-zA-Z]', ' ', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.8629174828529358, -7.30726242181845e-05, -0.007830636575818062, -1.4060816764831543, -0.3395938575267792, -0.41948753595352173, -0.21764099597930908, -4.076874756719917e-05, -4.9828242481453344e-05, -0.0637984573841095, -1.4424220353248529e-05, -0.0022954801097512245, -0.3587762713432312, -0.0022011594846844673, -9.798523387871683e-05, -0.05015181005001068, -0.0001679517881711945, -7.772143726469949e-05, -0.4937627613544464, -0.012307177297770977, -0.23429200053215027], "finish_reason": "stop"}, {"text": " re.sub(r'\\b\\w{2}\\b', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "2", "}\\", "b", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.3145172894001007, -1.6212332411669195e-05, -0.00105015910230577, -0.1763269007205963, -0.023973120376467705, -0.4366661608219147, -0.26889514923095703, -2.3509011268615723, -0.0603310726583004, -0.14129967987537384, -2.9468207359313965, -1.8337328433990479, -0.013309326022863388, -0.025835879147052765, -0.000626367807853967, -0.21922831237316132, -0.0002892790944315493, -0.025965051725506783, -0.0028269824106246233, -0.28814995288848877], "finish_reason": "stop"}, {"text": " re.sub('\\W+', ' ', text)", "tokens": [" re", ".", "sub", "('", "\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.16847316920757294, -2.264974000354414e-06, -0.000559292733669281, -2.795254945755005, -1.0599385499954224, -0.14898359775543213, -0.06878731399774551, -0.00012265883560758084, -0.02103227935731411, -0.0014248467050492764, -9.023735765367746e-05, -0.0015955348499119282, -0.0030478236731141806, -0.01654171571135521], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.3011717796325684, -1.1324817933200393e-05, -0.0005553610390052199, -0.04731014743447304, -0.006254148669540882, -0.06845574826002121, -0.2722282111644745, -1.293404459953308, -0.0029771076515316963, -1.4700813293457031, -0.00046588058467023075, -0.0008255410939455032, -0.00015567521040793508, -0.00010430268594063818, -0.00011085849109804258, -0.0032051641028374434, -0.09238334745168686, 0.0, -2.932505594799295e-05, 0.0, 0.0, -0.00015472168161068112, -0.00031454383861273527, -3.45700973412022e-05, -0.000521523819770664, -2.7417760065873154e-05, -0.09634072333574295, -0.002541647292673588, -0.00010990492592100054, -5.3165931603871286e-05, -7.986990567587782e-06, -0.011318521574139595, -3.135155202471651e-05, -0.0026760026812553406, -0.006916864775121212, -0.006383031141012907], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.027665723115205765, -0.017674680799245834], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004612520802766085, -3.576278118089249e-07, -0.0042838952504098415, -0.0002485204895492643, -2.3841830625315197e-06, -3.6954811548639555e-06, -1.8715683836489916e-05, -0.00014959646796341985, -0.0884154811501503, -4.7205765440594405e-05, -0.12351490557193756, -9.536738616588991e-07, -7.152555099310121e-07, -1.4305104514278355e-06, -0.00013267113536130637, -0.0021346656139940023], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00026246439665555954, -8.344646857949556e-07, -3.4570634852570947e-06, -0.45573103427886963, -0.006699363235384226], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.018646663054823875, -1.6689286894688848e-06, -1.1205610462639015e-05, -0.00011240804451517761, -5.722029527532868e-06, -2.5987286790041253e-05, -0.0003123987407889217, -0.007409709505736828, -1.645074735279195e-05, -0.0043173679150640965, -0.00021002470748499036, -3.3378546504536644e-06, -2.276871418871451e-05, -0.018236469477415085, -0.06234581395983696], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>def task_func(dataframe, column_name):", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "data", "frame", ",", " column", "_", "name", "):", "\n"], "logprobs": [-0.0031974404118955135, -5.960446742392378e-06, -0.0014212755486369133, -0.0452246330678463, -0.028350675478577614, -2.50339189733495e-06, -3.099436753473128e-06, -5.960462772236497e-07, -0.002244455274194479, -0.37841489911079407, -9.179073458653875e-06, -0.005804350133985281, -0.0021423976868391037, -0.0035622967407107353, -0.004111053422093391, -0.000646501372102648, -2.3841855067985307e-07, -8.4638240878121e-06, -0.00011801023356383666, -8.344646857949556e-07, -9.536697689327411e-06, 0.0, -5.519237674889155e-05, -0.37075263261795044, -0.007959078997373581, -0.001408895361237228, -0.9825421571731567, -7.748573807475623e-06, -2.0265558760002023e-06, -3.6954811548639555e-06, -9.536697689327411e-06, -0.14554990828037262, -1.803337812423706, -0.45793333649635315, -0.03154966980218887, -0.16278299689292908, -0.07296666502952576, -2.3470311164855957, -0.14831607043743134, -0.09824418276548386, -1.4863085746765137, -0.4703390896320343, -0.4329284727573395, -0.36855605244636536, -0.0017259714659303427], "finish_reason": "stop"}], "metrics": {"energy": 727.7410150537482, "energy_per_token": 4.18241962674568, "time": 18.714678, "time_per_token": 0.10755562068965517}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'\\d+', '', text)  # Remove numbers", "tokens": [" re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "  ", "#", " Remove", " numbers", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -0.38600414991378784, -1.4449700117111206, -0.02735201083123684, -1.9311717551317997e-05, -0.10381022840738297, -6.389413465512916e-05, -0.0030204886570572853, -0.0009460740839131176, -2.279301404953003, -0.0002431573811918497, -0.22097311913967133, -0.061189599335193634, -0.02291368506848812], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.1669616401195526, -2.3841830625315197e-06, -0.0008831891464069486, -0.06559547781944275, -0.011485408060252666, -0.7201899290084839, -0.030811654403805733, -0.028705891221761703, -0.0012462714221328497, -0.04068438708782196, -0.00021646064124070108, -0.005765711888670921, -0.00029213930247351527, -3.1470757676288486e-05, -0.6869849562644958, -2.4199192921514623e-05, -0.0008468617452308536, -0.0011512563796713948, -0.004303361754864454], "finish_reason": "stop"}, {"text": " re.sub(r'\\s+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-1.3475511074066162, -1.0132738680113107e-05, -0.0007549058645963669, -0.04326491430401802, -0.007002692203968763, -0.06604974716901779, -1.434360146522522, -0.2568437457084656, -1.6569954823353328e-05, -0.0022500455379486084, -7.819823804311454e-05, -3.8742269680369645e-05, -0.00033182359766215086, -0.0014411549782380462, -0.0051378123462200165], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02064817026257515, -0.01975083351135254], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004288643132895231, -2.3841855067985307e-07, -0.004166731610894203, -0.00021217002358753234, -4.291525328881107e-06, -4.291525328881107e-06, -1.6927575416048057e-05, -0.00015233787416946143, -0.11139285564422607, -4.6967357775429264e-05, -0.10161197185516357, -1.1920922133867862e-06, -9.536738616588991e-07, -4.0531076592742465e-06, -0.00016830935783218592, -0.0024311768356710672], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.000291662581730634, -9.536738616588991e-07, -6.318072337307967e-06, -0.38782158493995667, -0.005329567473381758], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.015325055457651615, -2.3841830625315197e-06, -8.4638240878121e-06, -9.226373367710039e-05, -5.483612312673358e-06, -2.1815061700181104e-05, -0.0003723404952324927, -0.007466624025255442, -1.3112935448589269e-05, -0.004102268256247044, -0.00022480344341602176, -4.172316494077677e-06, -2.7894584491150454e-05, -0.01500533428043127, -0.06344553828239441], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>import datetime", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "import", " datetime", "\n"], "logprobs": [-0.0025258325040340424, -5.006777428206988e-06, -0.00215512583963573, -0.045030124485492706, -0.02739272452890873, -2.3841830625315197e-06, -4.0531076592742465e-06, -4.768370445162873e-07, -0.002865734277293086, -0.29591745138168335, -8.940656698541716e-06, -0.005160108674317598, -0.0016470688860863447, -0.0028212766628712416, -0.003491854527965188, -0.0006394725642167032, -2.3841855067985307e-07, -8.821448318485636e-06, -0.0001070442158379592, -8.344646857949556e-07, -9.894321920000948e-06, 0.0, -8.380061626667157e-05, -0.42174991965293884, -0.002875956939533353, -0.0012165057705715299, -0.9660897254943848, -6.9141146923357155e-06, -2.264974000354414e-06, -3.814689989667386e-06, -9.65590606938349e-06, -0.13356314599514008, -1.2158732414245605, -4.35540771484375, -0.14848163723945618], "finish_reason": "stop"}], "metrics": {"energy": 550.0788777408595, "energy_per_token": 4.231375982621996, "time": 14.509011, "time_per_token": 0.11160777692307691}}
{"outputs": [{"text": " str(text).lower()", "tokens": [" str", "(", "text", ")", ".", "lower", "()", "\n"], "logprobs": [-2.6404483318328857, -0.006153921131044626, -0.0029771076515316963, -0.007352791260927916, -0.4847300350666046, -0.02157830074429512, -0.00013958434283267707, -0.42009493708610535], "finish_reason": "stop"}, {"text": " re.sub('[^a-zA-Z ]+', '', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", " ]", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -1.935202956199646, -0.7845944762229919, -0.29278749227523804, -0.0343654565513134, -1.6212332411669195e-05, -9.965400386136025e-05, -0.6739798784255981, -3.635817120084539e-05, -0.0021018334664404392, -1.9738764762878418, -1.2440720796585083, -0.0001137191939051263, -0.347062349319458, -0.00011431517486926168, -0.004728682804852724, -0.0018455630633980036, -0.1064135804772377], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.13885530829429626, -2.7418097943154862e-06, -0.0008592489175498486, -0.06325498223304749, -0.01585308276116848, -0.8758203983306885, -0.3041194677352905, -0.1563599854707718, -4.672895011026412e-05, -0.008034883998334408, -0.0009074860718101263, -3.85038583772257e-05, -0.00029130507027730346, -0.0038043521344661713, -0.007192433346062899], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(?:{})\\b'.format('|'.join(STOPWORDS)), '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "(", "?", ":", "{", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.2687349319458008, -9.894321920000948e-06, -0.0005895545473322272, -0.057184137403964996, -0.007188409101217985, -0.054346609860658646, -0.17487294971942902, -2.000551462173462, -0.010621326975524426, -0.21463145315647125, -0.000522357877343893, -0.0661664679646492, -0.0004690977220889181, -0.000990734319202602, -0.0001734344696160406, -2.7894584491150454e-05, -0.0015649464912712574, -1.823885577323381e-05, -1.4066597032069694e-05, -3.099436753473128e-06, -5.245195097813848e-06, -0.0007815881981514394, -0.04318077489733696, 0.0, -2.610649426060263e-05, 0.0, 0.0, -0.011793062090873718, -2.1815061700181104e-05, -0.031318165361881256, -3.528532761265524e-05, -0.001379848807118833, -0.014760924503207207, -0.013672629371285439], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02517605572938919, -0.017627011984586716], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(lambda x: preprocess_text(x))", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " pre", "process", "_", "text", "(", "x", "))", "\n"], "logprobs": [-0.004369236528873444, -3.576278118089249e-07, -0.003923933021724224, -0.00018845213344320655, -2.7418097943154862e-06, -2.9802276912960224e-06, -1.490105023549404e-05, -0.00015376816736534238, -0.08227218687534332, -3.8980677345534787e-05, -2.0893898010253906, -0.0563744455575943, -0.0018355678766965866, -0.0063912044279277325, -3.576278118089249e-07, -1.5497195136049413e-06, -4.529942543740617e-06, -0.0004067785630468279, -0.04465523734688759, -0.013925181701779366, -0.001916716224513948], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00030214988510124385, -8.344646857949556e-07, -3.576272320060525e-06, -0.46505099534988403, -0.00817157793790102], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.013737302273511887, -2.0265558760002023e-06, -1.168244216387393e-05, -8.797258487902582e-05, -3.814689989667386e-06, -1.9311717551317997e-05, -0.0003178806509822607, -0.008004137314856052, -1.2636104656849056e-05, -0.00415070541203022, -0.00023982033599168062, -3.4570634852570947e-06, -3.0874729418428615e-05, -0.014575433917343616, -0.09584715217351913], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.002755180699750781, -5.483612312673358e-06, -0.0021466801408678293, -0.037487201392650604, -0.022645212709903717, -2.622600959512056e-06, -3.099436753473128e-06, -4.768370445162873e-07, -0.0033837463706731796, -0.27170154452323914, -5.602820692729438e-06, -0.0060658883303403854, -0.0018446111353114247, -0.003353925421833992, -0.003780125407502055, -0.0006111184484325349, -1.1920928244535389e-07, -9.179073458653875e-06, -0.00012051333033014089, -1.4305104514278355e-06, -1.1444026313256472e-05, 0.0, -4.458328112377785e-05, -0.43035441637039185, -0.004483409225940704, -0.0015306673012673855, -0.7866529822349548], "finish_reason": "stop"}], "metrics": {"energy": 626.0651445884708, "energy_per_token": 4.258946561826332, "time": 16.41323, "time_per_token": 0.11165462585034013}}
{"outputs": [{"text": " re.sub('\\W', ' ', text)  # Remove non-alphanumeric characters", "tokens": [" re", ".", "sub", "('", "\\", "W", "'", ",", " '", " '", ",", " text", ")", "  ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -1.3213117122650146, -1.3186801671981812, -1.259738564491272, -0.483097106218338, -0.0005800233921036124, -0.08830395340919495, -0.0004020121123176068, -0.00010978573118336499, -0.13527759909629822, -0.05701502040028572, -1.1461670398712158, -0.0002026352594839409, -0.757927656173706, -0.9420515298843384, -0.025421420112252235, -0.37903544306755066, -7.760223525110632e-05, -0.00012289722508285195, -0.0642288401722908, -0.1561373919248581], "finish_reason": "stop"}, {"text": " re.sub('[^a-zA-Z]', ' ', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -1.935202956199646, -0.7845944762229919, -0.29278749227523804, -0.0343654565513134, -1.6212332411669195e-05, -9.965400386136025e-05, -0.6739798784255981, -3.635817120084539e-05, -0.0021018334664404392, -0.3754458725452423, -0.0024806461296975613, -0.00012206286191940308, -0.04920578747987747, -0.00021455370006151497, -0.00017617580306250602, -0.0237719863653183, -0.0012418661499395967, -0.14636561274528503], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.13885530829429626, -2.7418097943154862e-06, -0.0008592489175498486, -0.06325498223304749, -0.01585308276116848, -0.8758203983306885, -0.3041194677352905, -0.1563599854707718, -4.672895011026412e-05, -0.008034883998334408, -0.0009074860718101263, -3.85038583772257e-05, -0.00029130507027730346, -0.0038043521344661713, -0.007192433346062899], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.6112833619117737, -0.0004228651523590088, -0.0002366024418734014, -7.962863310240209e-05, -0.203154057264328, -0.02360597252845764, -0.0014113951474428177, -9.65590606938349e-06, -1.585470999998506e-05, -0.001906840712763369, -0.00011288482346571982, -0.00030048147891648114, -0.06923391669988632, -0.001886494574137032, -0.00495005352422595, -0.016852272674441338, -1.3947389561508317e-05, -0.01914370246231556, 0.0, -2.13382354559144e-05, 0.0, 0.0, -0.011884715408086777, -0.0015313815092667937], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.028255419805645943, -0.01979442685842514], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.0044692871160805225, -7.152555099310121e-07, -0.003469996154308319, -0.00016127715934999287, -2.3841830625315197e-06, -3.576272320060525e-06, -1.728519782773219e-05, -0.00013815402053296566, -0.10932867974042892, -3.802703940891661e-05, -0.12463896721601486, -1.311301275563892e-06, -8.344646857949556e-07, -2.50339189733495e-06, -0.0001573438785271719, -0.002166188322007656], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=False)", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n"], "logprobs": [-0.0003293210465926677, -8.344646857949556e-07, -2.3841830625315197e-06, -0.8616026639938354, -2.362227439880371, -0.0005345107638277113, -1.6212332411669195e-05, -0.0037450906820595264, -0.5670329332351685, -0.16128972172737122, -0.05803636834025383], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.017861705273389816, -1.9073468138230965e-06, -7.390948667307384e-06, -0.00012420836719684303, -3.814689989667386e-06, -2.1457441107486375e-05, -0.0003054867556784302, -0.008109500631690025, -2.2172682292875834e-05, -0.003865747479721904, -0.00018857131362892687, -3.4570634852570947e-06, -2.5987286790041253e-05, -0.01987132616341114, -0.08190760016441345], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.002423684811219573, -4.291525328881107e-06, -0.0021548878867179155, -0.038468342274427414, -0.029030989855527878, -2.622600959512056e-06, -3.099436753473128e-06, -3.576278118089249e-07, -0.002506212331354618, -0.19250930845737457, -8.106198947643861e-06, -0.005369052290916443, -0.0017281135078519583, -0.0034050126560032368, -0.0034878156147897243, -0.0006107610533945262, -1.1920928244535389e-07, -8.940656698541716e-06, -6.83045873302035e-05, -1.0728830375228426e-06, -8.106198947643861e-06, 0.0, -6.496695277746767e-05, -0.3624131977558136, -0.0038650347851216793, -0.0015689932042732835, -0.8293006420135498], "finish_reason": "stop"}], "metrics": {"energy": 638.029597468376, "energy_per_token": 4.143049334210233, "time": 16.827642, "time_per_token": 0.1092704025974026}}
{"outputs": [{"text": " re.sub('[^A-Za-z ]', '', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "A", "-", "Z", "a", "-", "z", " ]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -1.3213117122650146, -0.3513892889022827, -0.4692893922328949, -1.4252721071243286, -0.00014077626110520214, -0.0050587039440870285, -0.0011448265286162496, -1.0371154530730564e-05, -1.5258672647178173e-05, -2.1621899604797363, -1.510615348815918, -7.664863369427621e-05, -0.12863147258758545, -0.00015293381875380874, -0.04784553498029709, -0.0307515449821949, -0.32747146487236023], "finish_reason": "stop"}, {"text": " re.sub('[^a-z ]+', '', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", " ]", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -1.935202956199646, -0.7845944762229919, -0.29278749227523804, -0.0343654565513134, -1.6212332411669195e-05, -9.965400386136025e-05, -2.152674674987793, -1.1095300912857056, -9.512448741588742e-05, -0.19874192774295807, -0.00036840804386883974, -0.001505909371189773, -0.004849695134907961, -0.13599538803100586], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.13885530829429626, -2.7418097943154862e-06, -0.0008592489175498486, -0.06325498223304749, -0.01585308276116848, -0.8758203983306885, -0.3041194677352905, -0.1563599854707718, -4.672895011026412e-05, -0.008034883998334408, -0.0009074860718101263, -3.85038583772257e-05, -0.00029130507027730346, -0.0038043521344661713, -0.007192433346062899], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.6112833619117737, -0.0004228651523590088, -0.0002366024418734014, -7.962863310240209e-05, -0.203154057264328, -0.02360597252845764, -0.0014113951474428177, -9.65590606938349e-06, -1.585470999998506e-05, -0.001906840712763369, -0.00011288482346571982, -0.00030048147891648114, -0.06923391669988632, -0.001886494574137032, -0.00495005352422595, -0.016852272674441338, -1.3947389561508317e-05, -0.01914370246231556, 0.0, -2.13382354559144e-05, 0.0, 0.0, -0.011884715408086777, -0.0015313815092667937], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.028255419805645943, -0.01979442685842514], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(lambda x: preprocess_text(x))", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " pre", "process", "_", "text", "(", "x", "))", "\n"], "logprobs": [-0.0044692871160805225, -7.152555099310121e-07, -0.003469996154308319, -0.00016127715934999287, -2.3841830625315197e-06, -3.576272320060525e-06, -1.728519782773219e-05, -0.00013815402053296566, -0.10932867974042892, -3.802703940891661e-05, -2.1593832969665527, -0.05826053023338318, -0.0013400870375335217, -0.00619503203779459, -4.768370445162873e-07, -8.344646857949556e-07, -2.145764938177308e-06, -0.0004219118563923985, -0.05342726409435272, -0.01555665209889412, -0.0017288275994360447], "finish_reason": "stop"}, {"text": " CountVectorizer(decode_error='ignore')", "tokens": [" Count", "Vector", "izer", "(", "decode", "_", "error", "='", "ignore", "')", "\n"], "logprobs": [-0.0002615109842736274, -8.344646857949556e-07, -2.9802276912960224e-06, -0.973218560218811, -3.677175521850586, -5.006777428206988e-06, -0.005109941121190786, -0.1246107667684555, -0.008247839286923409, -0.20178011059761047, -0.010390826500952244], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01816307194530964, -1.4305104514278355e-06, -8.106198947643861e-06, -9.77468371274881e-05, -6.556489552167477e-06, -2.4437606043647975e-05, -0.0003687655262183398, -0.007063536439090967, -1.7762025890988298e-05, -0.004824782256036997, -0.0002177716523874551, -3.099436753473128e-06, -2.4676019165781327e-05, -0.016255928203463554, -0.08826902508735657], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>#!/usr/bin/env python", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.003249248256906867, -4.887569048150908e-06, -0.0018768567824736238, -0.04231829568743706, -0.023957641795277596, -2.264974000354414e-06, -2.3841830625315197e-06, -2.3841855067985307e-07, -0.0019921474158763885, -0.21447937190532684, -5.722029527532868e-06, -0.004845780320465565, -0.0020214139949530363, -0.003024172969162464, -0.003542221849784255, -0.0006268443539738655, -1.1920928244535389e-07, -8.821448318485636e-06, -0.0001062098381225951, -7.152555099310121e-07, -8.583032467868179e-06, 0.0, -4.8874615458771586e-05, -0.3536965847015381, -0.0017150230705738068, -0.0014886498684063554, -1.0071265697479248, -6.9141146923357155e-06, -2.145764938177308e-06, -4.172316494077677e-06, -9.417489309271332e-06, -0.1579475700855255, -0.9821590185165405, -1.6270211935043335, -0.06475380063056946, -0.1624663770198822, -4.31528314948082e-05, -0.0059088789857923985, -0.0008206575294025242, -0.05230842903256416, -0.003603752003982663, -0.8149438500404358], "finish_reason": "stop"}], "metrics": {"energy": 702.0512378091815, "energy_per_token": 4.203899627599889, "time": 18.08857, "time_per_token": 0.10831479041916169}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -0.38600414991378784, -0.3030766248703003, -1.1023696660995483, -0.002031407319009304, -0.5300559401512146, -0.002439501229673624, -0.0009495278936810791, -2.3364747903542593e-05, -3.0397906812140718e-05, -6.246371776796877e-05, -0.010594198480248451, -0.06788183003664017, 0.0, -1.4305012882687151e-05, 0.0, 0.0, -0.00015400654228869826, -0.0002057340752799064, -1.3828182090946939e-05, -0.0018289043800905347, -1.3351351299206726e-05, -0.06596571952104568, -0.018055953085422516, -0.0002669931564014405, -3.0636318115284666e-05, -8.34461570775602e-06, -0.014197062700986862, -3.886147169396281e-05, -0.002453771186992526, -0.004910314455628395, -0.05652124807238579], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.157626673579216, -2.3841830625315197e-06, -0.0007583603146485984, -0.044829532504081726, -0.014941096305847168, -0.7747935056686401, -0.03432952240109444, -0.023501647636294365, -0.001358896610327065, -0.04167921096086502, -0.0002037079248111695, -0.008521740324795246, -0.00020823694649152458, -4.672895011026412e-05, -0.478931188583374, -0.00034171465085819364, -0.00016509123088326305, -0.0011241076281294227, -0.0010237219976261258, -0.008243818767368793], "finish_reason": "stop"}, {"text": " re.sub(r'\\b[a-z]\\b', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "[", "a", "-", "z", "]\\", "b", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.281982421875, -1.0967194612021558e-05, -0.000940476544201374, -0.04060117527842522, -0.007282497361302376, -0.06298940628767014, -0.2431880086660385, -2.44403076171875, -0.268776535987854, -5.411955135059543e-05, -9.953480184776708e-05, -2.2411820888519287, -0.009160867892205715, -0.00031704644788987935, -8.22540732769994e-06, -0.010815453715622425, -1.1444026313256472e-05, -0.001168402610346675, -0.008645131252706051, -0.024041669443249702], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.026938410475850105, -0.01712464727461338], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.00523150060325861, -3.576278118089249e-07, -0.004146550316363573, -0.00016759421851020306, -2.7418097943154862e-06, -3.6954811548639555e-06, -1.549708758830093e-05, -0.00015472168161068112, -0.08184082061052322, -5.2689116273541003e-05, -0.14302748441696167, -1.0728830375228426e-06, -8.344646857949556e-07, -2.0265558760002023e-06, -0.00016044282529037446, -0.0030122878961265087], "finish_reason": "stop"}, {"text": " CountVectorizer(binary=True)", "tokens": [" Count", "Vector", "izer", "(", "binary", "=", "True", ")", "\n"], "logprobs": [-0.0003359945258125663, -8.344646857949556e-07, -4.0531076592742465e-06, -1.0689266920089722, -1.6978707313537598, -0.005129984579980373, -0.12968404591083527, -0.07870475947856903, -0.019628804177045822], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.015074735507369041, -2.264974000354414e-06, -9.059865078597795e-06, -0.00013743886665906757, -4.0531076592742465e-06, -3.957670196541585e-05, -0.0004228651523590088, -0.00801052339375019, -1.8715683836489916e-05, -0.004371254239231348, -0.00020203932945150882, -3.576272320060525e-06, -3.0636318115284666e-05, -0.01893305405974388, -0.06344206631183624], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())"], "logprobs": [-0.0027650478295981884, -5.960446742392378e-06, -0.0026927662547677755, -0.042408108711242676, -0.026376616209745407, -3.2186455882765586e-06, -2.861018856492592e-06, -3.576278118089249e-07, -0.0034483750350773335, -0.23756054043769836, -6.6756979322235566e-06, -0.0056545305997133255, -0.002157385926693678, -0.0031059379689395428, -0.0037653991021215916, -0.0005579821881838143, -2.3841855067985307e-07, -9.298280929215252e-06, -9.440929716220126e-05, -8.344646857949556e-07, -8.583032467868179e-06, 0.0, -4.8397800128441304e-05, -0.40394043922424316, -0.0038975717034190893, -0.001510551548562944], "finish_reason": "stop"}], "metrics": {"energy": 619.015653295517, "energy_per_token": 4.154467471781993, "time": 16.603268, "time_per_token": 0.1114313288590604}}
{"outputs": [{"text": " re.sub(r\"[0-9]+\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "0", "-", "9", "]+", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.8629174828529358, -7.30726242181845e-05, -0.007830636575818062, -0.2935061454772949, -0.023479407653212547, -2.192439556121826, -0.9651712775230408, -1.779396414756775, -0.0008231588872149587, -0.00016127715934999287, -0.3099626898765564, -0.008743809536099434, -4.351044481154531e-05, -0.04200423136353493, -0.05167694389820099, -1.8954096958623268e-05, -0.09862014651298523, -0.0960083082318306, -0.2154925912618637], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.3145172894001007, -1.6212332411669195e-05, -0.00105015910230577, -0.1763269007205963, -0.023973120376467705, -0.4366661608219147, -0.26889514923095703, -1.0490461587905884, -0.0023855105973780155, -1.0253322124481201, -0.00016068121476564556, -2.098061486321967e-05, -2.658331868587993e-05, -2.6464111215318553e-05, -0.005178371910005808, -0.04726409912109375, 0.0, -1.764281842042692e-05, 0.0, 0.0, -0.00015901254664640874, -0.00015221867943182588, -0.00012468514614738524, -0.0011268462985754013, -1.4185804502631072e-05, -0.06280268728733063, -0.03369210660457611, -0.0002307625545654446, -3.302042750874534e-05, -8.106198947643861e-06, -0.04584255814552307, -3.2305197237292305e-05, -0.002164641860872507, -0.004964643623679876, -0.053876932710409164], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.16847316920757294, -2.264974000354414e-06, -0.000559292733669281, -0.06338992714881897, -0.011349166743457317, -0.8374199271202087, -0.22485744953155518, -0.13229316473007202, -4.446407547220588e-05, -0.009835118427872658, -0.0009810879128053784, -4.160317621426657e-05, -0.0002932118659373373, -0.003729770192876458, -0.007973744533956051], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.6362723708152771, -0.000497336674015969, -0.0004318020073696971, -7.724463648628443e-05, -0.09384708106517792, -0.031003635376691818, -0.0014968630857765675, -7.748573807475623e-06, -1.490105023549404e-05, -0.00227656913921237, -0.00010013079008786008, -0.0003972456615883857, -0.06423241645097733, -0.0026473496109247208, -0.00357512547634542, -0.015541980974376202, -1.3470558769768104e-05, -0.014865931123495102, 0.0, -1.9192511899746023e-05, 0.0, 0.0, -0.014203409664332867, -0.0018306892598047853], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02005057968199253, -0.01886088028550148], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004436056595295668, -1.1920928244535389e-07, -0.004300869069993496, -0.000196556793525815, -2.9802276912960224e-06, -2.861018856492592e-06, -1.6689160474925302e-05, -0.00013791563105769455, -0.08419853448867798, -5.23315102327615e-05, -0.12814855575561523, -8.344646857949556e-07, -7.152555099310121e-07, -2.264974000354414e-06, -0.00017498392844572663, -0.0020154656376689672], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003321811091154814, -8.344646857949556e-07, -3.4570634852570947e-06, -0.5221370458602905, -0.007351253181695938], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.015723420307040215, -2.145764938177308e-06, -8.940656698541716e-06, -0.00010859376925509423, -5.006777428206988e-06, -1.4066597032069694e-05, -0.000356253091013059, -0.006738794036209583, -1.168244216387393e-05, -0.004715749993920326, -0.00029392691794782877, -3.6954811548639555e-06, -4.1126360883936286e-05, -0.016393613070249557, -0.09967304766178131], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0032150268089026213, -5.364403477869928e-06, -0.0019039851613342762, -0.03693819418549538, -0.03727969527244568, -2.861018856492592e-06, -3.576272320060525e-06, -7.152555099310121e-07, -0.0035922301467508078, -0.21804635226726532, -8.22540732769994e-06, -0.004897858947515488, -0.0016380238812416792, -0.0024062031880021095, -0.0040738931857049465, -0.0006824786541983485, -1.1920928244535389e-07, -1.07287787614041e-05, -0.00012718822108581662, -8.344646857949556e-07, -8.940656698541716e-06, 0.0, -8.105902816168964e-05, -0.3398451805114746, -0.011104214936494827, -0.0013136576162651181, -0.7351016998291016], "finish_reason": "stop"}], "metrics": {"energy": 626.4266509990691, "energy_per_token": 3.9647256392346146, "time": 16.827646, "time_per_token": 0.10650408860759494}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r\"\\b\" + \"|\".join(STOPWORDS) + r\"\\b\\s*\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "\\", "b", "\"", " +", " \"", "|", "\"", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "\"", "\\", "b", "\\", "s", "*", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -2.1086299419403076, -1.4612174034118652, -1.285146951675415, -1.539729356765747, -0.024072974920272827, -0.17910802364349365, -0.01502964273095131, -1.6569954823353328e-05, -2.288792165927589e-05, -3.099393507000059e-05, -0.02757585234940052, -0.047079648822546005, -1.1920928244535389e-07, -2.1934269170742482e-05, 0.0, 0.0, -0.001759410952217877, -0.0004564673872664571, -0.007711403537541628, -0.00017581824795342982, -0.005364428274333477, -0.003153472673147917, -1.254207730293274, -0.021999605000019073, -0.032032717019319534, -0.00014125302550382912, -0.00019691436318680644, -0.009371694177389145, -0.09357083588838577, -7.30726242181845e-05, -0.005850452929735184, -0.004283776506781578, -0.09495608508586884], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.1654883325099945, -2.861018856492592e-06, -0.0009444067254662514, -0.05213192477822304, -0.015150472521781921, -0.7359315752983093, -0.03173226863145828, -0.026234259828925133, -0.0014210374793037772, -0.045691102743148804, -0.00020037073409184813, -0.006473049987107515, -0.00028236693469807506, -2.9801878554280847e-05, -0.9144970178604126, -2.4199192921514623e-05, -0.0006210067658685148, -0.0013713965890929103, -0.004266090225428343], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.4828632175922394, -0.00047159992391243577, -0.00040737437666393816, -8.642300235806033e-05, -0.10003455728292465, -0.023798177018761635, -0.0016111262375488877, -1.0371154530730564e-05, -1.9430925021879375e-05, -0.0026410482823848724, -0.00012718822108581662, -0.00025781645672395825, -0.05141744390130043, -0.0024169061798602343, -0.004617623053491116, -0.015424837358295918, -1.537788011773955e-05, -0.015170549973845482, 0.0, -2.2411095415009186e-05, 0.0, 0.0, -0.012945421040058136, -0.0016229089815169573], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02246933802962303, -0.020032351836562157], "finish_reason": "stop"}, {"text": " dataframe[text_column].astype(str)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "ast", "ype", "(", "str", ")", "\n"], "logprobs": [-0.004296951927244663, -5.960462772236497e-07, -0.0035200081765651703, -0.0002101439022226259, -3.2186455882765586e-06, -2.9802276912960224e-06, -1.8954096958623268e-05, -0.00013958434283267707, -2.887672185897827, -9.536738616588991e-07, -0.05892710015177727, -0.006860510911792517, -0.0017146660247817636, -0.34604761004447937], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00032574593205936253, -8.344646857949556e-07, -4.172316494077677e-06, -0.5328149795532227, -0.008252568542957306], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.013700498268008232, -2.50339189733495e-06, -9.179073458653875e-06, -8.809178689261898e-05, -4.529942543740617e-06, -1.0490362910786644e-05, -0.00033063191222026944, -0.00865045003592968, -1.8715683836489916e-05, -0.00431784288957715, -0.00022420754248742014, -3.4570634852570947e-06, -2.1934269170742482e-05, -0.020945662632584572, -0.09785100817680359], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.002862881403416395, -7.390948667307384e-06, -0.0016914597945287824, -0.049316998571157455, -0.02835588902235031, -2.3841830625315197e-06, -2.861018856492592e-06, -2.3841855067985307e-07, -0.0027014450170099735, -0.2796958386898041, -4.887569048150908e-06, -0.005470662377774715, -0.0017653609393164515, -0.0038361784536391497, -0.0036228755488991737, -0.0005791893927380443, -1.1920928244535389e-07, -1.156323378381785e-05, -0.00011872540198964998, -8.344646857949556e-07, -9.65590606938349e-06, 0.0, -5.411955135059543e-05, -1.2441024780273438, -1.045481562614441], "finish_reason": "stop"}], "metrics": {"energy": 624.2138972997662, "energy_per_token": 4.246353042855553, "time": 16.40479, "time_per_token": 0.11159721088435373}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'\\b{}\\b'.format(r'|'.join(STOPWORDS)), r'', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "{}\\", "b", "'", ".", "format", "(", "r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " r", "''", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -0.38600414991378784, -0.3030766248703003, -1.7593902349472046, -0.0015024575404822826, -0.0013711584033444524, -2.884823152271565e-05, -1.07287787614041e-05, -0.11919897794723511, -0.18192216753959656, -0.15175452828407288, -0.00415486004203558, -9.440929716220126e-05, -2.825220326485578e-05, -2.169585604860913e-05, -0.005406401585787535, -0.04610510170459747, 0.0, -1.6689160474925302e-05, 0.0, 0.0, -0.001940036192536354, -0.0001248043408850208, -0.3900322914123535, -0.07444204390048981, -2.9682672902708873e-05, -0.007718855980783701, -0.014563098549842834, -0.09008114784955978], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.157626673579216, -2.3841830625315197e-06, -0.0007583603146485984, -0.044829532504081726, -0.014941096305847168, -0.7747935056686401, -0.03432952240109444, -0.023501647636294365, -0.001358896610327065, -0.04167921096086502, -0.0002037079248111695, -0.008521740324795246, -0.00020823694649152458, -4.672895011026412e-05, -0.478931188583374, -0.00034171465085819364, -0.00016509123088326305, -0.0011241076281294227, -0.0010237219976261258, -0.008243818767368793], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5962868332862854, -0.0005311747081577778, -0.00033361115492880344, -7.974783511599526e-05, -0.10874588787555695, -0.03325898200273514, -0.0021220564376562834, -8.940656698541716e-06, -1.8358061424805783e-05, -0.0017206162447109818, -0.00015186110977083445, -0.0004166688595432788, -0.08510404825210571, -0.00231581786647439, -0.004706495441496372, -0.016804680228233337, -1.4185804502631072e-05, -0.019716937094926834, 0.0, -1.9907753085135482e-05, 0.0, 0.0, -0.012635060586035252, -0.0017913023475557566], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02350863441824913, -0.01730884611606598], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.0037975830491632223, -3.576278118089249e-07, -0.003886647056788206, -0.0002294515579706058, -4.172316494077677e-06, -4.6491513785440475e-06, -1.6689160474925302e-05, -0.0001426833332516253, -0.1177717000246048, -4.8993817472364753e-05, -0.1005815863609314, -1.1920922133867862e-06, -9.536738616588991e-07, -1.7881377516459906e-06, -0.0001501924270996824, -0.0024136954452842474], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0002637753786984831, -7.152555099310121e-07, -5.125986263010418e-06, -0.5454689860343933, -0.006601667497307062], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.014634409919381142, -2.7418097943154862e-06, -9.059865078597795e-06, -0.00020919041708111763, -3.4570634852570947e-06, -3.4927710657939315e-05, -0.0003519630990922451, -0.007784506306052208, -1.728519782773219e-05, -0.004202463664114475, -0.00023338454775512218, -3.6954811548639555e-06, -2.3841574147809297e-05, -0.018203575164079666, -0.09921404719352722], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>import math", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "import", " math", "\n"], "logprobs": [-0.003399428678676486, -5.602820692729438e-06, -0.0017072877380996943, -0.046247731894254684, -0.019622843712568283, -2.622600959512056e-06, -3.814689989667386e-06, -5.960462772236497e-07, -0.002555915853008628, -0.30603262782096863, -5.483612312673358e-06, -0.005041742697358131, -0.0017176411347463727, -0.0033142422325909138, -0.0034288919996470213, -0.0007234578370116651, -1.1920928244535389e-07, -8.583032467868179e-06, -8.391981828026474e-05, -7.152555099310121e-07, -8.34461570775602e-06, 0.0, -3.862306402879767e-05, -0.31633493304252625, -0.0015145984943956137, -0.0015803002752363682, -0.879375696182251, -6.556489552167477e-06, -2.0265558760002023e-06, -3.576272320060525e-06, -6.437280717364047e-06, -0.12975651025772095, -1.2893290519714355, -3.2475461959838867, -0.03186264634132385], "finish_reason": "stop"}], "metrics": {"energy": 638.788442733765, "energy_per_token": 4.121215759572677, "time": 16.824911, "time_per_token": 0.10854781290322581}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7632279992103577, -0.0008516260422766209, -0.04821990802884102, -8.83301836438477e-05, -0.23977044224739075], "finish_reason": "stop"}, {"text": " re.sub(r'\\d+', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.2995528280735016, -1.5139465176616795e-05, -0.0008735416340641677, -0.1390615552663803, -0.024151058867573738, -0.40262675285339355, -1.6598912477493286, -0.03597072884440422, -1.645074735279195e-05, -0.09072118252515793, -8.010543388081715e-05, -0.004032220225781202, -0.0012532960390672088, -0.11243177205324173], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.12910912930965424, -2.622600959512056e-06, -0.0008316157618537545, -0.06499310582876205, -0.013000138103961945, -0.6326214671134949, -0.03197753056883812, -0.019837435334920883, -0.0011247029760852456, -0.059459563344717026, -0.0001971527235582471, -0.00794796273112297, -0.00026055757189169526, -3.957670196541585e-05, -0.4485205411911011, -0.00035363141796551645, -0.00012778419477399439, -0.0010788579238578677, -0.0008861667010933161, -0.008027315139770508], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5771532654762268, -0.0004033228906337172, -0.00032419670606032014, -8.49926145747304e-05, -0.10011620819568634, -0.02965020202100277, -0.0016617074143141508, -9.059865078597795e-06, -1.3828182090946939e-05, -0.0022708598989993334, -0.00012766500003635883, -0.0003912875254172832, -0.06105155125260353, -0.0018744770204648376, -0.005361108109354973, -0.02213883399963379, -1.2397689715726301e-05, -0.013388137333095074, 0.0, -2.6225699912174605e-05, 0.0, 0.0, -0.012695210054516792, -0.0015995815629139543], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.020247790962457657, -0.019915033131837845], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004131116904318333, -3.576278118089249e-07, -0.0037288200110197067, -0.00023505308490712196, -2.622600959512056e-06, -3.3378546504536644e-06, -1.764281842042692e-05, -0.00016175392374861985, -0.08171635866165161, -4.565611743601039e-05, -0.17256635427474976, -1.7881377516459906e-06, -7.152555099310121e-07, -1.0728830375228426e-06, -0.00015472168161068112, -0.002434863243252039], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0002964295563288033, -8.344646857949556e-07, -5.125986263010418e-06, -0.4959414005279541, -0.006217068061232567], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.013983960263431072, -1.9073468138230965e-06, -9.417489309271332e-06, -0.00015293381875380874, -5.125986263010418e-06, -1.4662635294371285e-05, -0.00035148640745319426, -0.007192906457930803, -1.8715683836489916e-05, -0.005237311124801636, -0.000226472009671852, -3.4570634852570947e-06, -2.8729025871143676e-05, -0.016647472977638245, -0.0881560668349266], "finish_reason": "stop"}, {"text": " pd.DataFrame.sparse.from_spmatrix(vectorized_data, columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", ".", "sparse", ".", "from", "_", "sp", "matrix", "(", "vector", "ized", "_", "data", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003503258805721998, -5.483612312673358e-06, -0.0022975020110607147, -2.699012279510498, -0.00454559363424778, -2.90866428258596e-05, -0.00030524839530698955, -3.576278118089249e-07, -5.090107151772827e-05, -0.0026824227534234524, -0.00032455421751365066, -0.01909797452390194, -1.7046782886609435e-05, -5.364403477869928e-06, -1.1920922133867862e-06, -0.5169293880462646, -0.03206723928451538, -0.00772465206682682, -0.0010461101774126291, -6.437280717364047e-06, -2.0146166207268834e-05, -0.0006123098428361118, -7.152555099310121e-07, -1.966933996300213e-05, 0.0, -8.4638240878121e-06, -0.31534555554389954, -0.0027380618266761303, -0.010819581337273121, -0.9440851807594299], "finish_reason": "stop"}], "metrics": {"energy": 541.3432444705965, "energy_per_token": 4.132391179164858, "time": 14.519621, "time_per_token": 0.11083680152671756}}
{"outputs": [{"text": " re.sub(r'\\b[^\\s]+\\b', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "[", "^\\", "s", "]", "+\\", "b", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -0.32220813632011414, -0.027315936982631683, -0.6514107584953308, -0.6042223572731018, -2.084702968597412, -1.8062036037445068, -2.4694600105285645, -0.1522536277770996, -0.14648506045341492, -0.011457006447017193, -0.0059943185187876225, -0.0004325169720686972, -2.2394375801086426, -0.000263894529780373, -0.0676659420132637, -0.09888884425163269, -0.4423985481262207], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-2.133302688598633, -7.021180499577895e-05, -0.002630704315379262, -0.00011789103882620111, -0.17471849918365479, -0.03667139261960983, -0.0019296851241961122, -6.198863957251888e-06, -1.5735502529423684e-05, -0.016420351341366768, -2.5748875486897305e-05, -5.411955135059543e-05, -0.042984381318092346, -0.003351073944941163, -0.015522731468081474, -0.04389979690313339, -2.5987286790041253e-05, -0.012953540310263634, 0.0, -2.13382354559144e-05, 0.0, 0.0, -0.007188764400780201, -0.05558428168296814], "finish_reason": "stop"}, {"text": " re.sub(r\"[^a-zA-Z]+\", ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "]+", "\"", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.15962359309196472, -2.7418097943154862e-06, -0.0008043391280807555, -0.0654323548078537, -0.013818430714309216, -3.075990676879883, -0.2909758687019348, -1.040830373764038, -0.9067466855049133, -5.340433563105762e-05, -2.4437606043647975e-05, -0.7862713932991028, -9.107174992095679e-05, -0.021069515496492386, -1.2990275621414185, -0.01641085185110569, -4.935142715112306e-05, -0.7745556235313416, -0.0018842339050024748, -0.00013267113536130637, -0.0016251702327281237, -0.0008671099785715342, -0.0185165423899889], "finish_reason": "stop"}, {"text": " text.strip()", "tokens": [" text", ".", "strip", "()", "\n"], "logprobs": [-2.4972453117370605, -0.00032360086333937943, -0.5391843318939209, -0.004741496406495571, -0.1418791115283966], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.019309990108013153, -0.017095234245061874], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004750394728034735, -4.768370445162873e-07, -0.003827984444797039, -0.00020072828920092434, -3.099436753473128e-06, -3.576272320060525e-06, -1.6569954823353328e-05, -0.00012206286191940308, -0.09722200781106949, -4.51792984677013e-05, -0.14788338541984558, -1.311301275563892e-06, -4.768370445162873e-07, -2.0265558760002023e-06, -0.00014900050882715732, -0.002602525521069765], "finish_reason": "stop"}, {"text": " CountVectorizer(token_pattern=r'\\b[^\\d\\W]+\\b')", "tokens": [" Count", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "'\\", "b", "[", "^\\", "d", "\\", "W", "]", "+\\", "b", "')", "\n"], "logprobs": [-0.0002760506176855415, -7.152555099310121e-07, -2.861018856492592e-06, -0.8802787065505981, -1.7942397594451904, -0.07294826954603195, -3.9457496313843876e-05, -0.015543858520686626, -0.005103536881506443, -0.2670629620552063, -0.0650174543261528, -0.7568601369857788, -0.011735686101019382, -0.014586242847144604, -0.0003327769518364221, -2.288792165927589e-05, -0.08931936323642731, -0.00027247529942542315, -2.145764938177308e-06, -0.05747039616107941, -0.03296178579330444], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01715570129454136, -3.2186455882765586e-06, -8.702239938429557e-06, -0.00010680581908673048, -5.364403477869928e-06, -1.7523612768854946e-05, -0.0003885467885993421, -0.009063412435352802, -2.0146166207268834e-05, -0.004009423777461052, -0.00023338454775512218, -3.099436753473128e-06, -4.100715523236431e-05, -0.014977972023189068, -0.09572431445121765], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())"], "logprobs": [-0.002925166627392173, -5.8412379075889476e-06, -0.0012222208315506577, -0.04129837453365326, -0.027107004076242447, -2.145764938177308e-06, -3.3378546504536644e-06, -2.3841855067985307e-07, -0.0030699288472533226, -0.1872866302728653, -7.152531907195225e-06, -0.006168967578560114, -0.0017078827368095517, -0.003724069334566593, -0.0044141001999378204, -0.0005843124235980213, -2.3841855067985307e-07, -1.0013530300057027e-05, -7.939023635117337e-05, -8.344646857949556e-07, -1.0132738680113107e-05, 0.0, -3.2305197237292305e-05, -0.47832363843917847, -0.004552239086478949, -0.001046586548909545], "finish_reason": "stop"}], "metrics": {"energy": 673.3207722911836, "energy_per_token": 4.429741922968313, "time": 17.55309, "time_per_token": 0.1154808552631579}}
{"outputs": [{"text": " re.sub(r'[^\\w\\s]', '', text.lower())", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ".", "lower", "())", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -0.32220813632011414, -0.027315936982631683, -1.040780782699585, -0.07419037818908691, -0.3757283091545105, -0.000699156429618597, -0.010392949916422367, -8.082063141046092e-05, -0.015111489221453667, -0.001487578614614904, -9.226373367710039e-05, -0.20042701065540314, -6.12716976320371e-05, -0.032729800790548325, -0.5262214541435242, -0.001347944256849587, -0.002647468587383628, -0.5449365377426147], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -1.189269781112671, -0.0016454027500003576, -0.5189138054847717, -0.004767360631376505, -0.0008169650682248175, -2.90866428258596e-05, -3.540453326422721e-05, -4.970903682988137e-05, -0.005781475454568863, -0.08913804590702057, 0.0, -1.585470999998506e-05, 0.0, 0.0, -0.00015448330668732524, -0.00021860594279132783, -1.9311717551317997e-05, -0.0019427727675065398, -1.156323378381785e-05, -0.07740757614374161, -0.019298061728477478, -0.00024125049822032452, -2.9205850296420977e-05, -8.583032467868179e-06, -0.017747409641742706, -3.480850500636734e-05, -0.0034522954374551773, -0.005498760379850864, -0.06622225046157837], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -0.06758171319961548, -0.017439475283026695, -0.6600953936576843, -0.028217986226081848, -0.026272578164935112, -0.0008442413527518511, -0.05131722614169121, -9.333651541965082e-05, -0.006595154292881489, -0.00022075122979003936, -2.95634672511369e-05, -0.7394225597381592, -0.0002735478919930756, -0.00011228884250158444, -0.0009834696538746357, -0.000724887300748378, -0.008496328257024288], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.232745885848999, -1.1801649634435307e-05, -0.0006038511055521667, -0.06133188679814339, -0.005074122920632362, -0.07598518580198288, -0.16184653341770172, -1.0289393663406372, -0.00296652945689857, -0.20990601181983948, -0.0001234931987710297, -4.076874756719917e-05, -8.821448318485636e-06, -3.325883881188929e-05, -0.0022508781403303146, -0.051605962216854095, 0.0, -1.7881233361549675e-05, 0.0, 0.0, -0.00013886917440686375, -0.00019905969384126365, -0.00031120702624320984, -0.0001560327800689265, -4.0531076592742465e-06, -0.033316634595394135, -0.004277841653674841, -7.70062324590981e-05, -2.8371408916427754e-05, -4.0531076592742465e-06, -0.05997456610202789, -3.4450891689630225e-05, -0.00224956963211298, -0.00504648732021451, -0.005327077116817236], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.024014435708522797, -0.01785280555486679], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004530522506684065, -2.3841855067985307e-07, -0.003488528309389949, -0.0001722425949992612, -2.7418097943154862e-06, -3.814689989667386e-06, -1.537788011773955e-05, -0.00015472168161068112, -0.10360851138830185, -4.4225667807040736e-05, -0.16205264627933502, -1.311301275563892e-06, -8.344646857949556e-07, -2.7418097943154862e-06, -0.0001720042055239901, -0.0025751783978194], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003133521240670234, -7.152555099310121e-07, -3.3378546504536644e-06, -0.439862459897995, -0.007727136369794607], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01644486002624035, -2.50339189733495e-06, -7.629365427419543e-06, -0.0001541257370263338, -4.410734163684538e-06, -2.0265373677830212e-05, -0.00033790123416110873, -0.006799299269914627, -1.4543427823809907e-05, -0.004918262362480164, -0.00019810620869975537, -3.576272320060525e-06, -2.0861407392658293e-05, -0.015349004417657852, -0.08660974353551865], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())"], "logprobs": [-0.002953574061393738, -5.483612312673358e-06, -0.0024240415077656507, -0.043740514665842056, -0.024697473272681236, -1.9073468138230965e-06, -3.2186455882765586e-06, -2.3841855067985307e-07, -0.0025799344293773174, -0.2642078995704651, -7.390948667307384e-06, -0.004079235717654228, -0.00167444150429219, -0.0036434237845242023, -0.003132082289084792, -0.0006220789509825408, -1.1920928244535389e-07, -1.0371154530730564e-05, -9.583967766957358e-05, -8.344646857949556e-07, -7.867782187531702e-06, 0.0, -4.7801782784517854e-05, -0.3946725130081177, -0.0032985585276037455, -0.001347229932434857], "finish_reason": "stop"}], "metrics": {"energy": 729.2095041818628, "energy_per_token": 4.143235819215129, "time": 19.099602, "time_per_token": 0.10852046590909091}}
{"outputs": [{"text": " re.sub('[%s]' % re.escape(string.punctuation), '', text)  # remove punctuation", "tokens": [" re", ".", "sub", "('", "[", "%", "s", "]", "'", " %", " re", ".", "escape", "(", "string", ".", "punct", "uation", ")", ",", " ''", ",", " text", ")", "  ", "#", " remove", " punct", "uation", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -1.3213117122650146, -0.3513892889022827, -2.072700023651123, -0.17103378474712372, -0.16167770326137543, -0.002753873122856021, -0.0012284121476113796, -0.025618504732847214, -0.0008091036579571664, -0.0015555436257272959, -0.06829019635915756, -0.2545924782752991, -6.317892984952778e-05, -0.0012710357550531626, -9.298280929215252e-06, -0.014663191512227058, -0.008240390568971634, -0.13888871669769287, -0.0001967951684491709, -0.042701367288827896, -0.11048310250043869, -1.781124234199524, -0.0002828436263371259, -1.6134649515151978, -0.01937079057097435, -0.01772422157227993, -0.06074141338467598], "finish_reason": "stop"}, {"text": " re.sub(r'\\b{}\\b'.format('|'.join(STOPWORDS)), '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "{}\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -1.3650434017181396, -0.0015764916315674782, -0.0011676882859319448, -2.610649426060263e-05, -1.1205610462639015e-05, -2.0262815952301025, -0.049759332090616226, -0.00010859376925509423, -4.625213477993384e-05, -3.3378044463461265e-05, -0.004074724391102791, -0.02696138620376587, 0.0, -1.883488948806189e-05, 0.0, 0.0, -0.0016870565013960004, -0.00030858523678034544, -0.5539215207099915, -0.0002215855201939121, -0.006016595754772425, -0.01159865316003561, -0.09143185615539551], "finish_reason": "stop"}, {"text": " re.sub(r'\\s+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -0.06758171319961548, -0.017439475283026695, -0.8322717547416687, -2.6432323455810547, -1.0337636470794678, -5.602820692729438e-06, -0.011575675569474697, -0.00028200942324474454, -3.766942609217949e-05, -0.0012885371688753366, -0.015511933714151382, -0.03995388746261597], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5754241943359375, -0.00040904260822571814, -0.00029702542815357447, -9.870042413240299e-05, -0.12832650542259216, -0.022752422839403152, -0.0016859853640198708, -1.156323378381785e-05, -2.074220174108632e-05, -0.002644971711561084, -0.0001445904199499637, -0.00035279724397696555, -0.06911855936050415, -0.0022812075912952423, -0.005263874307274818, -0.016697298735380173, -1.2516897186287679e-05, -0.013317207805812359, 0.0, -2.52720492426306e-05, 0.0, 0.0, -0.011924766935408115, -0.002045445377007127], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.022985568270087242, -0.018094705417752266], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004254575818777084, -3.576278118089249e-07, -0.004290542099624872, -0.00020895205670967698, -3.099436753473128e-06, -3.576272320060525e-06, -2.0861407392658293e-05, -0.0001311216183239594, -0.0972302258014679, -4.9828242481453344e-05, -0.08891720324754715, -1.1920922133867862e-06, -8.344646857949556e-07, -1.311301275563892e-06, -0.0001752223033690825, -0.002353756921365857], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00023624490131624043, -7.152555099310121e-07, -5.006777428206988e-06, -0.44245070219039917, -0.009786837734282017], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.024266136810183525, -1.4305104514278355e-06, -9.775113539944869e-06, -8.320462075062096e-05, -5.602820692729438e-06, -1.4543427823809907e-05, -0.0002821285743266344, -0.005904967896640301, -1.847726889536716e-05, -0.004270244389772415, -0.00020489977032411844, -3.4570634852570947e-06, -2.6702524337451905e-05, -0.015529656782746315, -0.10974674671888351], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|>def task_func(n):", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "n", "):", "\n"], "logprobs": [-0.0033962209708988667, -5.364403477869928e-06, -0.0015410225605592132, -0.04833713546395302, -0.028368288651108742, -2.861018856492592e-06, -2.622600959512056e-06, -2.3841855067985307e-07, -0.0023479294031858444, -0.26312586665153503, -1.0132738680113107e-05, -0.004993704613298178, -0.0018252156442031264, -0.0031553739681839943, -0.0031960143242031336, -0.0005684667266905308, -2.3841855067985307e-07, -9.179073458653875e-06, -0.00012289722508285195, -8.344646857949556e-07, -8.106198947643861e-06, 0.0, -3.8265450712060556e-05, -0.3935370445251465, -0.006772184744477272, -0.001498172408901155, -0.9616132378578186, -6.794906312279636e-06, -2.0265558760002023e-06, -3.3378546504536644e-06, -1.2040065485052764e-05, -0.14280758798122406, -1.8942373991012573, -0.5348674654960632, -0.033715736120939255, -0.15385377407073975, -0.06727392226457596, -2.872436046600342, -0.4457900822162628, -0.0034387523774057627], "finish_reason": "stop"}], "metrics": {"energy": 743.5677775669097, "energy_per_token": 4.200947895858247, "time": 18.884024, "time_per_token": 0.1066894011299435}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub('[^a-zA-Z]', ' ', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -1.9708484411239624, -0.8954184651374817, -0.31818249821662903, -0.03506782278418541, -2.0265373677830212e-05, -8.594620157964528e-05, -0.5880245566368103, -3.2305197237292305e-05, -0.002261701738461852, -0.44809454679489136, -0.0020477056968957186, -0.00011264643399044871, -0.051597245037555695, -0.00018344627460464835, -0.00018380382971372455, -0.02375277876853943, -0.0014227039646357298, -0.13706041872501373], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.1927839070558548, -2.622600959512056e-06, -0.0008232779800891876, -0.053746119141578674, -0.012428571470081806, -0.8225645422935486, -0.03749064728617668, -0.028717242181301117, -0.0011027929140254855, -0.0387042760848999, -0.00014602071314584464, -0.0073568145744502544, -0.00022420754248742014, -3.182837463100441e-05, -0.5408541560173035, -0.00025102324434556067, -0.00011514954530866817, -0.001141730579547584, -0.0009779914980754256, -0.009167009964585304], "finish_reason": "stop"}, {"text": " \" \".join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" \"", " \"", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-3.0548415184020996, -0.010674521327018738, -0.0003045333724003285, -2.8013790142722428e-05, -0.9105885028839111, -0.19830794632434845, -0.0037789377383887768, -3.302042750874534e-05, -1.6569954823353328e-05, -0.013257801532745361, -0.00016389934171456844, -0.0011536378879100084, -0.12713508307933807, -0.0032719431910663843, -0.019385874271392822, -0.009945246390998363, -2.0265373677830212e-05, -0.020724302157759666, 0.0, -3.302042750874534e-05, 0.0, 0.0, -0.012339441105723381, -0.003765042871236801], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.0228724405169487, -0.012449999339878559], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.00427712919190526, -3.576278118089249e-07, -0.004005505703389645, -0.0001967951684491709, -2.50339189733495e-06, -3.576272320060525e-06, -1.6569954823353328e-05, -0.0001282609737245366, -0.08544984459877014, -5.328513361746445e-05, -0.15041525661945343, -1.1920922133867862e-06, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.00016664070426486433, -0.002714403672143817], "finish_reason": "stop"}, {"text": " CountVectorizer(max_features=5000)", "tokens": [" Count", "Vector", "izer", "(", "max", "_", "features", "=", "5", "0", "0", "0", ")", "\n"], "logprobs": [-0.0002960720448754728, -8.344646857949556e-07, -2.3841830625315197e-06, -0.9337141513824463, -2.807276725769043, -2.3841830625315197e-06, -0.08185762912034988, -0.005015767179429531, -1.6579653024673462, -0.05134734883904457, -0.2562512457370758, -0.518066942691803, -0.31263571977615356, -0.04174289479851723], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.019260292872786522, -1.5497195136049413e-06, -8.940656698541716e-06, -7.974783511599526e-05, -6.079655122448457e-06, -2.52720492426306e-05, -0.00036173476837575436, -0.009694165550172329, -1.9788545614574105e-05, -0.005521997343748808, -0.00022766382608097047, -3.6954811548639555e-06, -2.253030106658116e-05, -0.0181181188672781, -0.08416390419006348], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())<|endoftext|># 1. Import the fractions module and create a Fraction from the float 2.25. You can find information on how to create fractions in the documentation.", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "#", " ", "1", ".", " Import", " the", " fractions", " module", " and", " create", " a", " F", "raction", " from", " the", " float", " ", "2", ".", "2", "5", ".", " You", " can", " find", " information", " on", " how", " to", " create", " fractions", " in", " the", " documentation", ".", "\n"], "logprobs": [-0.0038395035080611706, -5.006777428206988e-06, -0.0015949398512020707, -0.041063740849494934, -0.03499358147382736, -2.0265558760002023e-06, -3.2186455882765586e-06, -3.576278118089249e-07, -0.002495510270819068, -0.2477639615535736, -7.867782187531702e-06, -0.0050531295128166676, -0.001904699020087719, -0.0026670859660953283, -0.0035922301467508078, -0.0004822045157197863, -1.1920928244535389e-07, -1.2159273865108844e-05, -0.00010835537250386551, -7.152555099310121e-07, -9.775113539944869e-06, 0.0, -8.40390202938579e-05, -0.3131667375564575, -0.004778987728059292, -0.0015749443555250764, -0.956457793712616, -7.033323527139146e-06, -2.145764938177308e-06, -2.7418097943154862e-06, -1.0371154530730564e-05, -0.13634337484836578, -1.091618537902832, -3.0931448936462402, -1.2313882112503052, -0.8795433044433594, -3.867983818054199, -1.2439887523651123, -2.955955982208252, -0.008783986791968346, -0.013213451020419598, -0.2965117394924164, -8.106198947643861e-06, -0.0022072256542742252, -0.0005204515182413161, -0.0001461399078834802, -6.735097849741578e-05, -0.04533526301383972, -0.005205766763538122, -5.876845170860179e-05, -9.536738616588991e-07, -0.01862489804625511, 0.0, -0.14243453741073608, -0.24683025479316711, -8.702239938429557e-06, -0.010983956977725029, -0.6674571633338928, -0.016720745712518692, -0.06010333076119423, -0.0035179888363927603, -0.029831646010279655, -0.01758226752281189, -0.0003123987407889217, -2.3841855067985307e-07, -0.12350331246852875, -0.06427545845508575, -0.00035398892941884696], "finish_reason": "stop"}], "metrics": {"energy": 806.2852459182735, "energy_per_token": 4.358298626585262, "time": 19.902794, "time_per_token": 0.10758267027027027}}
{"outputs": [{"text": " re.sub(r\"http\\S+\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "http", "\\", "S", "+", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -0.32220813632011414, -0.027315936982631683, -2.2042367458343506, -2.2536780834198, -0.005450388882309198, -4.291525328881107e-06, -0.20637674629688263, -0.0009816833771765232, -4.339123915997334e-05, -0.024498462677001953, -0.025991417467594147, -2.825220326485578e-05, -0.057157002389431, -0.015073091723024845, -0.594972550868988], "finish_reason": "stop"}, {"text": " re.sub('[^a-z ]', '', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", " ]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -1.935202956199646, -0.7845944762229919, -0.29278749227523804, -0.0343654565513134, -1.6212332411669195e-05, -9.965400386136025e-05, -2.152674674987793, -0.4018465280532837, -0.00017379203927703202, -0.1358785331249237, -0.0002740246127359569, -0.001512932125478983, -0.002334371441975236, -0.10999571532011032], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.13885530829429626, -2.7418097943154862e-06, -0.0008592489175498486, -0.06325498223304749, -0.01585308276116848, -0.6258089542388916, -0.02815343253314495, -0.021750016137957573, -0.0015567338559776545, -0.05597696080803871, -0.0002094287920044735, -0.006616115104407072, -0.00036066226311959326, -3.361645576660521e-05, -0.4302879869937897, -0.0003196682082489133, -0.00011860620725201443, -0.0012193633010610938, -0.0007641970878466964, -0.009170790202915668], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5103393197059631, -0.00041416651220060885, -0.0005538121913559735, -8.475421054754406e-05, -0.12135905772447586, -0.021992841735482216, -0.001490316353738308, -9.894321920000948e-06, -1.4185804502631072e-05, -0.001950387260876596, -0.0001541257370263338, -0.0002733095607254654, -0.06625606119632721, -0.002170589519664645, -0.004509399179369211, -0.02025258168578148, -1.537788011773955e-05, -0.016702456399798393, 0.0, -2.2172682292875834e-05, 0.0, 0.0, -0.010757314041256905, -0.0015235256869345903], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.018963349983096123, -0.018053963780403137], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004506669472903013, -7.152555099310121e-07, -0.003855534829199314, -0.0001902399235405028, -2.7418097943154862e-06, -3.099436753473128e-06, -1.6569954823353328e-05, -0.00012170527770649642, -0.10605812072753906, -4.9232225137529895e-05, -0.12104267627000809, -1.1920922133867862e-06, -1.0728830375228426e-06, -2.145764938177308e-06, -0.00013040646445006132, -0.0022832294926047325], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00033206192892976105, -9.536738616588991e-07, -3.3378546504536644e-06, -0.5057046413421631, -0.007615581154823303], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.016120921820402145, -2.0265558760002023e-06, -8.106198947643861e-06, -8.296622399939224e-05, -5.006777428206988e-06, -1.3112935448589269e-05, -0.00034540885826572776, -0.007827561348676682, -1.4781842764932662e-05, -0.004484358709305525, -0.0002613918040879071, -4.172316494077677e-06, -2.4437606043647975e-05, -0.018103718757629395, -0.10533373802900314], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.todense(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0023313979618251324, -4.768360213347478e-06, -0.002587187336757779, -0.05193309485912323, -0.025521593168377876, -2.9802276912960224e-06, -2.622600959512056e-06, -3.576278118089249e-07, -0.0026060924865305424, -1.5632750988006592, -8.4638240878121e-06, -9.393251093570143e-05, -0.006627957336604595, -0.003812665119767189, -0.012625172734260559, -0.005022053606808186, -0.0014419882791116834, -4.768370445162873e-07, -8.34461570775602e-06, -0.00013851160474587232, -1.1920922133867862e-06, -1.168244216387393e-05, 0.0, -3.2543604902457446e-05, -0.17419806122779846, -0.00546663161367178, -0.0037491286639124155, -0.8964477777481079], "finish_reason": "stop"}], "metrics": {"energy": 613.0884048099522, "energy_per_token": 4.22819589524105, "time": 16.223446, "time_per_token": 0.11188583448275861}}
{"outputs": [{"text": " text.lower()  # Convert to lowercase", "tokens": [" text", ".", "lower", "()", "  ", "#", " Convert", " to", " lower", "case", "\n"], "logprobs": [-0.7632279992103577, -0.0008516260422766209, -0.04821990802884102, -8.83301836438477e-05, -1.6875815391540527, -0.00011431517486926168, -0.15713350474834442, -0.34676894545555115, -0.0004086851258762181, -0.005238022655248642, -0.011723785661160946], "finish_reason": "stop"}, {"text": " re.sub('[^a-zA-Z]', ' ', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.2995528280735016, -1.5139465176616795e-05, -0.0008735416340641677, -2.0671887397766113, -0.8068098425865173, -0.31546303629875183, -0.028252175077795982, -1.7165990357170813e-05, -0.00010108436981681734, -0.5909376740455627, -3.3378044463461265e-05, -0.0016683719586580992, -0.3953377902507782, -0.0023606547620147467, -0.00011538793478393927, -0.0429726205766201, -0.00018904806347563863, -0.00017677174764685333, -0.019696015864610672, -0.0011722128838300705, -0.13994020223617554], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-2.6322314739227295, -0.00012706902634818107, -0.00043585337698459625, -3.659658250398934e-05, -0.2265370637178421, -0.02079284004867077, -0.0012554391287267208, -5.8412379075889476e-06, -1.168244216387393e-05, -0.0022347019985318184, -2.5033637939486653e-05, -9.381330892210826e-05, -0.014710062183439732, -0.0018588898237794638, -0.004796071909368038, -0.009814225137233734, -8.106198947643861e-06, -0.011901088990271091, 0.0, -2.6940935640595853e-05, 0.0, 0.0, -0.005594548769295216, -0.0036322588566690683], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5910276770591736, -0.0005231918767094612, -0.00042429505265317857, -7.986703712958843e-05, -0.14359301328659058, -0.027322083711624146, -0.0017233534017577767, -9.894321920000948e-06, -1.7523612768854946e-05, -0.0023664822801947594, -0.00014649749209638685, -0.000358159770257771, -0.07494131475687027, -0.0023042813409119844, -0.004954798147082329, -0.014725685119628906, -1.2040065485052764e-05, -0.017187340185046196, 0.0, -2.1576648578047752e-05, 0.0, 0.0, -0.013989603146910667, -0.0016318351263180375], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02182070165872574, -0.02243938110768795], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.00496191531419754, -4.768370445162873e-07, -0.0040800669230520725, -0.00017271934484597296, -2.622600959512056e-06, -3.933898824470816e-06, -1.7523612768854946e-05, -0.00013565097469836473, -0.07392812520265579, -5.304672595229931e-05, -0.1295429915189743, -8.344646857949556e-07, -7.152555099310121e-07, -1.4305104514278355e-06, -0.00015043080202303827, -0.0025581750087440014], "finish_reason": "stop"}, {"text": " CountVectorizer(token_pattern=r'\\b\\w+\\b', min_df=1)", "tokens": [" Count", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "'\\", "b", "\\", "w", "+\\", "b", "'", ",", " min", "_", "df", "=", "1", ")", "\n"], "logprobs": [-0.00028546550311148167, -7.152555099310121e-07, -3.6954811548639555e-06, -0.9009075164794922, -1.7491307258605957, -0.093679279088974, -6.09140915912576e-05, -0.02521894872188568, -0.005681793671101332, -0.20787522196769714, -0.09629059582948685, -0.6222575306892395, -0.06573501974344254, -0.0017246623756363988, -2.7656173188006505e-05, -2.4199953079223633, -0.00016151554882526398, -1.4166972637176514, -1.6689286894688848e-06, -1.5258672647178173e-05, -0.0010740946745499969, -0.7378538846969604, -0.4482138156890869, -0.018030663952231407], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.016661658883094788, -2.50339189733495e-06, -7.033323527139146e-06, -8.40390202938579e-05, -5.006777428206988e-06, -4.1960789531003684e-05, -0.00036399890086613595, -0.008501292206346989, -1.883488948806189e-05, -0.0043173679150640965, -0.00022802136663813144, -3.576272320060525e-06, -2.706014311115723e-05, -0.017145154997706413, -0.09522219747304916], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())"], "logprobs": [-0.004182401578873396, -4.768360213347478e-06, -0.002344123786315322, -0.032104987651109695, -0.02843572571873665, -2.50339189733495e-06, -2.861018856492592e-06, -3.576278118089249e-07, -0.002353756921365857, -0.25613442063331604, -9.775113539944869e-06, -0.00641145883128047, -0.0019612142350524664, -0.0037738310638815165, -0.003680718829855323, -0.0006304183625616133, -1.1920928244535389e-07, -8.583032467868179e-06, -0.0001436368766007945, -7.152555099310121e-07, -8.22540732769994e-06, 0.0, -7.83174327807501e-05, -0.3624749183654785, -0.0019721598364412785, -0.0014691284159198403], "finish_reason": "stop"}], "metrics": {"energy": 658.0444670991898, "energy_per_token": 4.037082620240428, "time": 17.858027, "time_per_token": 0.10955844785276074}}
{"outputs": [{"text": " str(text).lower()  # Convert to lowercase", "tokens": [" str", "(", "text", ")", ".", "lower", "()", "  ", "#", " Convert", " to", " lower", "case", "\n"], "logprobs": [-2.6404483318328857, -0.006153921131044626, -0.0029771076515316963, -0.007352791260927916, -0.4847300350666046, -0.02157830074429512, -0.00013958434283267707, -1.5999197959899902, -0.00011693747364915907, -0.2701612114906311, -0.40087056159973145, -0.003969528712332249, -0.009400037117302418, -0.010147410444915295], "finish_reason": "stop"}, {"text": " re.sub(r'\\b{}\\b'.format(r'|'.join(STOPWORDS)), r'', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "{}\\", "b", "'", ".", "format", "(", "r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " r", "''", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -1.3650434017181396, -0.0015764916315674782, -0.0011676882859319448, -2.610649426060263e-05, -1.1205610462639015e-05, -0.14140534400939941, -0.19896255433559418, -0.10082993656396866, -0.0031911423429846764, -8.451581379631534e-05, -2.288792165927589e-05, -2.2053474822314456e-05, -0.0052001927979290485, -0.04352083429694176, 0.0, -2.098061486321967e-05, 0.0, 0.0, -0.001896846224553883, -0.00015805903240107, -0.3098604679107666, -0.07641565799713135, -2.6702524337451905e-05, -0.008367598988115788, -0.012264550663530827, -0.09381137788295746], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -0.06758171319961548, -0.017439475283026695, -0.6600953936576843, -0.028217986226081848, -0.026272578164935112, -0.0008442413527518511, -0.05131722614169121, -9.333651541965082e-05, -0.006595154292881489, -0.00022075122979003936, -2.95634672511369e-05, -0.7394225597381592, -0.0002735478919930756, -0.00011228884250158444, -0.0009834696538746357, -0.000724887300748378, -0.008496328257024288], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(?:{})\\b'.format('|'.join(STOPWORDS)), '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "(", "?", ":", "{", "})\\", "b", "'", ".", "format", "('", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.232745885848999, -1.1801649634435307e-05, -0.0006038511055521667, -0.06133188679814339, -0.005074122920632362, -0.07598518580198288, -0.16184653341770172, -2.156031608581543, -0.007564235478639603, -0.10379432141780853, -0.0004175029753241688, -0.05576851963996887, -0.0004418112221173942, -0.0008170842193067074, -0.00012516192509792745, -2.825220326485578e-05, -0.002273238729685545, -1.4543427823809907e-05, -1.4185804502631072e-05, -2.9802276912960224e-06, -4.768360213347478e-06, -0.0006164796068333089, -0.03379745036363602, 0.0, -3.0874729418428615e-05, 0.0, 0.0, -0.006830083206295967, -2.706014311115723e-05, -0.020649220794439316, -2.610649426060263e-05, -0.0012819890398532152, -0.011355767026543617, -0.011990847997367382], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.024014435708522797, -0.01785280555486679], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004530522506684065, -2.3841855067985307e-07, -0.003488528309389949, -0.0001722425949992612, -2.7418097943154862e-06, -3.814689989667386e-06, -1.537788011773955e-05, -0.00015472168161068112, -0.10360851138830185, -4.4225667807040736e-05, -0.16205264627933502, -1.311301275563892e-06, -8.344646857949556e-07, -2.7418097943154862e-06, -0.0001720042055239901, -0.0025751783978194], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003133521240670234, -7.152555099310121e-07, -3.3378546504536644e-06, -0.439862459897995, -0.007727136369794607], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01644486002624035, -2.50339189733495e-06, -7.629365427419543e-06, -0.0001541257370263338, -4.410734163684538e-06, -2.0265373677830212e-05, -0.00033790123416110873, -0.006799299269914627, -1.4543427823809907e-05, -0.004918262362480164, -0.00019810620869975537, -3.576272320060525e-06, -2.0861407392658293e-05, -0.015349004417657852, -0.08660974353551865], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.todense(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.002953574061393738, -5.483612312673358e-06, -0.0024240415077656507, -0.043740514665842056, -0.024697473272681236, -1.9073468138230965e-06, -3.2186455882765586e-06, -2.3841855067985307e-07, -0.0025799344293773174, -1.4837779998779297, -8.702239938429557e-06, -0.00013159839727450162, -0.00582592049613595, -0.003629883285611868, -0.009173034690320492, -0.004717529751360416, -0.0012546057114377618, -1.1920928244535389e-07, -1.0847986231965479e-05, -0.00023934361524879932, -1.1920922133867862e-06, -1.168244216387393e-05, 0.0, -4.51792984677013e-05, -0.25876855850219727, -0.004324252251535654, -0.0043716104701161385, -0.8519600033760071], "finish_reason": "stop"}], "metrics": {"energy": 707.9615693283077, "energy_per_token": 4.239290834301244, "time": 18.308113, "time_per_token": 0.10962941916167664}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'\\d+', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -0.38600414991378784, -1.4449700117111206, -0.02735201083123684, -1.9311717551317997e-05, -0.10381022840738297, -6.389413465512916e-05, -0.0030204886570572853, -0.0009460740839131176, -0.12189940363168716], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.1669616401195526, -2.3841830625315197e-06, -0.0008831891464069486, -0.06559547781944275, -0.011485408060252666, -0.7201899290084839, -0.030811654403805733, -0.028705891221761703, -0.0012462714221328497, -0.04068438708782196, -0.00021646064124070108, -0.005765711888670921, -0.00029213930247351527, -3.1470757676288486e-05, -0.6869849562644958, -2.4199192921514623e-05, -0.0008468617452308536, -0.0011512563796713948, -0.004303361754864454], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5437372326850891, -0.0004021312633994967, -0.00037329382030293345, -8.022463589441031e-05, -0.11862912029027939, -0.026024751365184784, -0.0020285521168261766, -1.0490362910786644e-05, -1.537788011773955e-05, -0.0022075825836509466, -0.0001045410826918669, -0.0002714027068577707, -0.08629670739173889, -0.002495629247277975, -0.005659390240907669, -0.021919019520282745, -1.2874520507466514e-05, -0.013759994879364967, 0.0, -1.8358061424805783e-05, 0.0, 0.0, -0.012645772658288479, -0.0016770598012953997], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.021164290606975555, -0.0159525778144598], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.003682143986225128, -2.3841855067985307e-07, -0.0039527867920696735, -0.0002037079248111695, -3.4570634852570947e-06, -3.4570634852570947e-06, -1.7404405298293568e-05, -0.00013457823661156, -0.08692245185375214, -4.911301948595792e-05, -0.11642429232597351, -1.311301275563892e-06, -8.344646857949556e-07, -2.145764938177308e-06, -0.0001530530134914443, -0.0025631689932197332], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003694805200211704, -7.152555099310121e-07, -3.814689989667386e-06, -0.5255157947540283, -0.0072242701426148415], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.016766581684350967, -2.622600959512056e-06, -9.65590606938349e-06, -0.00011955977242905647, -6.9141146923357155e-06, -2.1934269170742482e-05, -0.0002874914789572358, -0.00688466290012002, -1.7404405298293568e-05, -0.0038012643344700336, -0.0002401778765488416, -3.3378546504536644e-06, -2.253030106658116e-05, -0.0159712303429842, -0.07593369483947754], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0028720342088490725, -5.364403477869928e-06, -0.002095528645440936, -0.027832569554448128, -0.03442327678203583, -2.7418097943154862e-06, -3.2186455882765586e-06, -4.768370445162873e-07, -0.0026662535965442657, -0.22632746398448944, -6.6756979322235566e-06, -0.004984215367585421, -0.0018156962469220161, -0.003037959337234497, -0.00318211130797863, -0.0005855038180015981, -1.1920928244535389e-07, -1.1444026313256472e-05, -7.402622577501461e-05, -1.0728830375228426e-06, -9.179073458653875e-06, 0.0, -5.4834770708112046e-05, -0.37792879343032837, -0.0032151455525308847, -0.0014761515194550157, -0.8368338346481323], "finish_reason": "stop"}], "metrics": {"energy": 534.8463859825133, "energy_per_token": 4.211388866004042, "time": 14.381658, "time_per_token": 0.11324140157480315}}
{"outputs": [{"text": " re.sub(r'\\b\\w{1,3}\\b', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "1", ",", "3", "}\\", "b", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -0.32220813632011414, -0.027315936982631683, -0.6514107584953308, -0.6042223572731018, -1.1084572076797485, -0.11569538712501526, -0.4239170253276825, -0.08886855840682983, -0.007106977514922619, -0.995714545249939, -0.0001991788885788992, -0.0018913729581981897, -0.012381240725517273, -3.707340147229843e-05, -0.5484543442726135, -5.900685573578812e-05, -0.02915685437619686, -0.0746595710515976, -0.3135777711868286], "finish_reason": "stop"}, {"text": " re.sub(r'\\b\\w{1,3}\\b', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "1", ",", "3", "}\\", "b", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -2.0979535579681396, -0.06313411891460419, -0.16817477345466614, -0.07393433153629303, -0.004909247159957886, -1.3925310373306274, -7.748303323751315e-05, -0.0012549628736451268, -0.06244313716888428, -8.999896090244874e-05, -0.9226238131523132, -0.0038525662384927273, -0.00010287232726113871, -0.0024323659017682076, -0.00021073981770314276, -0.2817780673503876], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -0.06758171319961548, -0.017439475283026695, -0.6600953936576843, -0.028217986226081848, -0.026272578164935112, -0.0008442413527518511, -0.05131722614169121, -9.333651541965082e-05, -0.006595154292881489, -0.00022075122979003936, -2.95634672511369e-05, -0.6596572399139404, -2.7894584491150454e-05, -0.0006561510381288826, -0.0012250783620402217, -0.004609198309481144], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5943983197212219, -0.0005029367166571319, -0.0002668739762157202, -0.00011634149996098131, -0.132912278175354, -0.02414942905306816, -0.0017177602276206017, -7.748573807475623e-06, -1.4662635294371285e-05, -0.002345907734706998, -0.00017021637177094817, -0.00021073981770314276, -0.08980963379144669, -0.0020499660167843103, -0.004112715367227793, -0.016968192532658577, -9.894321920000948e-06, -0.013582903891801834, 0.0, -1.9192511899746023e-05, 0.0, 0.0, -0.010417135432362556, -0.0018587708473205566], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02293628640472889, -0.016492702066898346], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004500736016780138, -3.576278118089249e-07, -0.0035475671757012606, -0.0001934579631779343, -3.576272320060525e-06, -3.2186455882765586e-06, -1.6569954823353328e-05, -0.00017355366435367614, -0.09597841650247574, -4.160317621426657e-05, -0.10850891470909119, -1.311301275563892e-06, -7.152555099310121e-07, -2.50339189733495e-06, -0.0001578206429257989, -0.002312725642696023], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=True, token_pattern='[^ ]+')", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "True", ",", " token", "_", "pattern", "='", "[", "^", " ]", "+", "')", "\n"], "logprobs": [-0.00029881304362788796, -7.152555099310121e-07, -5.245195097813848e-06, -0.8648672699928284, -2.3222429752349854, -0.00041797960875555873, -1.6689160474925302e-05, -0.0029898248612880707, -0.9709404706954956, -0.8185522556304932, -1.6164567470550537, -0.012761122547090054, -0.0001248043408850208, -1.7392871379852295, -0.5793682932853699, -0.19387128949165344, -0.07808565348386765, -0.16427434980869293, -0.00114125432446599, -0.02336551994085312], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.012185415253043175, -2.50339189733495e-06, -8.34461570775602e-06, -0.0001287377526750788, -4.529942543740617e-06, -1.7762025890988298e-05, -0.00047565114800818264, -0.008897657506167889, -1.5616295058862306e-05, -0.004503702744841576, -0.00021598390594590455, -3.099436753473128e-06, -2.7656173188006505e-05, -0.016916504129767418, -0.061311591416597366], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.003344539552927017, -5.602820692729438e-06, -0.0017295415746048093, -0.028782108798623085, -0.02514524944126606, -2.861018856492592e-06, -3.814689989667386e-06, -4.768370445162873e-07, -0.0027291453443467617, -0.26162394881248474, -1.1920858014491387e-05, -0.004095382057130337, -0.002087915316224098, -0.0038359409663826227, -0.003639147849753499, -0.0007278653793036938, -2.3841855067985307e-07, -7.271740287251305e-06, -8.67805938469246e-05, -8.344646857949556e-07, -1.0490362910786644e-05, 0.0, -9.63164638960734e-05, -0.3300665616989136, -0.004978403449058533, -0.0013323486782610416, -0.7717199325561523], "finish_reason": "stop"}], "metrics": {"energy": 682.3845857868195, "energy_per_token": 4.06181301063583, "time": 18.072823, "time_per_token": 0.10757632738095238}}
{"outputs": [{"text": " re.sub(r\"[^A-Za-z0-9]+\", ' ', text).lower()", "tokens": [" re", ".", "sub", "(", "r", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "]+", "\"", ",", " '", " '", ",", " text", ")", ".", "lower", "()", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -0.32220813632011414, -0.027315936982631683, -2.2042367458343506, -0.9146983623504639, -0.45360100269317627, -1.405726671218872, -7.915183232398704e-05, -0.003933788277208805, -0.001604342251084745, -1.537788011773955e-05, -1.4185804502631072e-05, -1.5346777439117432, -0.000727508042473346, -9.870042413240299e-05, -0.966086208820343, -0.14643491804599762, -7.712543447269127e-05, -0.8709747195243835, -0.00023588736075907946, -0.00019441144831944257, -0.02742462046444416, -0.038994841277599335, -1.8977923393249512, -0.12463623285293579, -0.0002554328821133822, -0.4466746747493744], "finish_reason": "stop"}, {"text": " re.sub(r'\\b{}\\b'.format(r'|'.join(STOPWORDS)), r' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "{}\\", "b", "'", ".", "format", "(", "r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", "))", ",", " r", "'", " '", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -1.3650434017181396, -0.0015764916315674782, -0.0011676882859319448, -2.610649426060263e-05, -1.1205610462639015e-05, -0.14140534400939941, -0.19896255433559418, -0.10082993656396866, -0.0031911423429846764, -8.451581379631534e-05, -2.288792165927589e-05, -2.2053474822314456e-05, -0.0052001927979290485, -0.04352083429694176, 0.0, -2.098061486321967e-05, 0.0, 0.0, -0.001896846224553883, -0.00015805903240107, -0.3098604679107666, -2.9932475090026855, -0.5282322764396667, -0.0004618293314706534, -0.030748654156923294, -0.008356841281056404, -0.0985095351934433], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -0.06758171319961548, -0.017439475283026695, -0.8322717547416687, -0.32319265604019165, -0.12743349373340607, -4.1126360883936286e-05, -0.009303313679993153, -0.0006842655711807311, -3.862306402879767e-05, -0.00029225845355540514, -0.0032452084124088287, -0.006740451790392399], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.3102166652679443, -1.1801649634435307e-05, -0.0007649118197150528, -0.07786059379577637, -0.009702547453343868, -0.07565068453550339, -0.2986885607242584, -1.0184553861618042, -0.004733784589916468, -0.19659195840358734, -0.00012039413559250534, -5.757642793469131e-05, -1.3828182090946939e-05, -3.0040289857424796e-05, -0.0034917357843369246, -0.05023105815052986, 0.0, -2.5748875486897305e-05, 0.0, 0.0, -0.00012444675667211413, -0.00022837892174720764, -0.00029738296871073544, -0.00019774865359067917, -6.556489552167477e-06, -0.04241439327597618, -0.0041466690599918365, -5.900685573578812e-05, -4.5536911784438416e-05, -5.8412379075889476e-06, -0.02727394551038742, -2.9682672902708873e-05, -0.0030295210890471935, -0.005556732416152954, -0.006320131942629814], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.023519696667790413, -0.016259681433439255], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.0039552804082632065, -2.3841855067985307e-07, -0.003654232481494546, -0.00014685506175737828, -4.0531076592742465e-06, -3.576272320060525e-06, -1.7404405298293568e-05, -0.0001472126314183697, -0.07646381109952927, -4.9470632802695036e-05, -0.09683675318956375, -1.311301275563892e-06, -7.152555099310121e-07, -1.311301275563892e-06, -0.00015639036428183317, -0.0023228349164128304], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00030357998912222683, -8.344646857949556e-07, -4.410734163684538e-06, -0.5101819038391113, -0.007321550045162439], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.016111770644783974, -1.4305104514278355e-06, -7.867782187531702e-06, -9.214453893946484e-05, -4.529942543740617e-06, -1.3470558769768104e-05, -0.0003738896339200437, -0.008210832253098488, -1.3708974620385561e-05, -0.004845661576837301, -0.00018165845540352166, -2.9802276912960224e-06, -2.658331868587993e-05, -0.017013901844620705, -0.07559995353221893], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names())<|endoftext|>import pytest", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "<", "|", "end", "of", "text", "|>", "import", " py", "test", "\n"], "logprobs": [-0.003629170823842287, -4.0531076592742465e-06, -0.0017266854410991073, -0.04209841787815094, -0.019753988832235336, -2.50339189733495e-06, -3.3378546504536644e-06, -3.576278118089249e-07, -0.0029193423688411713, -0.2604900598526001, -6.556489552167477e-06, -0.006360051687806845, -0.0018656720640137792, -0.0031097407918423414, -0.004045161418616772, -0.0004698126285802573, -1.1920928244535389e-07, -1.0013530300057027e-05, -9.095255518332124e-05, -8.344646857949556e-07, -9.179073458653875e-06, 0.0, -8.11782301752828e-05, -1.1788084506988525, -1.0284638404846191, -5.8412379075889476e-06, -1.9073468138230965e-06, -3.576272320060525e-06, -6.9141146923357155e-06, -0.15342256426811218, -1.2328499555587769, -4.2462158203125, -0.1930270940065384, -0.007378588430583477], "finish_reason": "stop"}], "metrics": {"energy": 742.5007486877444, "energy_per_token": 4.013517560474294, "time": 19.287352, "time_per_token": 0.10425595675675675}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'[0-9]+', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "0", "-", "9", "]+", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -1.7804744243621826, -0.2840751111507416, -2.6241135597229004, -0.0009689403814263642, -4.827859811484814e-05, -0.18112899363040924, -0.013957862742245197, -2.7894584491150454e-05, -0.06587543338537216, -1.883488948806189e-05, -0.009261621162295341, -0.0008001701789908111, -0.12395046651363373], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.1654883325099945, -2.861018856492592e-06, -0.0009444067254662514, -0.05213192477822304, -0.015150472521781921, -0.7359315752983093, -0.03173226863145828, -0.026234259828925133, -0.0014210374793037772, -0.045691102743148804, -0.00020037073409184813, -0.006473049987107515, -0.00028236693469807506, -2.9801878554280847e-05, -0.9144970178604126, -2.4199192921514623e-05, -0.0006210067658685148, -0.0013713965890929103, -0.004266090225428343], "finish_reason": "stop"}, {"text": " re.sub(r'\\b\\w{1,2}\\b', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "1", ",", "2", "}\\", "b", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.5231235027313232, -1.1086402082582936e-05, -0.0007433511782437563, -0.0455416738986969, -0.008390177972614765, -0.07046941667795181, -0.2661164104938507, -1.8822541236877441, -0.01698506996035576, -0.0002650863316375762, -0.02168457768857479, -0.004540728405117989, -0.3952142298221588, -0.0009816833771765232, -0.00046826363541185856, -0.00011908298620255664, -1.490105023549404e-05, -0.07351020723581314, -5.960446742392378e-06, -0.0012522244360297918, -0.0032434258610010147, -0.022471435368061066], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.023020517081022263, -0.016267186030745506], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.00455627404153347, -3.576278118089249e-07, -0.0032221563160419464, -0.00019488819816615433, -3.576272320060525e-06, -3.099436753473128e-06, -2.038458114839159e-05, -0.00013481661153491586, -0.07070336490869522, -4.053033626405522e-05, -0.19734585285186768, -1.0728830375228426e-06, -1.0728830375228426e-06, -2.622600959512056e-06, -0.00014804698002990335, -0.002371001522988081], "finish_reason": "stop"}, {"text": " CountVectorizer(lowercase=False)", "tokens": [" Count", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", "\n"], "logprobs": [-0.000337305391440168, -9.536738616588991e-07, -4.172316494077677e-06, -0.8669815063476562, -2.3053739070892334, -0.0005022218101657927, -1.3470558769768104e-05, -0.0034632247406989336, -0.5808775424957275, -0.20215357840061188, -0.05574101209640503], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.022751841694116592, -1.9073468138230965e-06, -7.390948667307384e-06, -0.00013064485392533243, -4.0531076592742465e-06, -3.766942609217949e-05, -0.0003700763627421111, -0.008596793748438358, -1.9550132492440753e-05, -0.004526962526142597, -0.0002196785935666412, -3.576272320060525e-06, -2.90866428258596e-05, -0.01570194400846958, -0.08052009344100952], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())"], "logprobs": [-0.0030657693278044462, -5.125986263010418e-06, -0.002246358199045062, -0.05685150995850563, -0.03142572194337845, -3.576272320060525e-06, -3.099436753473128e-06, -3.576278118089249e-07, -0.002934794407337904, -0.24582752585411072, -6.556489552167477e-06, -0.005329092964529991, -0.0017650038935244083, -0.004277604166418314, -0.0031087901443243027, -0.0005235493299551308, -1.1920928244535389e-07, -1.1086402082582936e-05, -9.97731985989958e-05, -1.0728830375228426e-06, -7.986990567587782e-06, 0.0, -4.017272294731811e-05, -0.3578393757343292, -0.008334734477102757, -0.0013013951247557998], "finish_reason": "stop"}], "metrics": {"energy": 573.7571679477694, "energy_per_token": 4.281769910057981, "time": 15.395997, "time_per_token": 0.1148955}}
{"outputs": [{"text": " text.lower()", "tokens": [" text", ".", "lower", "()", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -0.29566478729248047], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + r'|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " r", "'", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -0.38600414991378784, -0.3030766248703003, -1.1023696660995483, -0.002031407319009304, -0.5300559401512146, -0.002439501229673624, -0.0009495278936810791, -2.3364747903542593e-05, -3.0397906812140718e-05, -6.246371776796877e-05, -0.010594198480248451, -0.06788183003664017, 0.0, -1.4305012882687151e-05, 0.0, 0.0, -0.00015400654228869826, -0.0002057340752799064, -1.3828182090946939e-05, -0.0018289043800905347, -1.3351351299206726e-05, -0.06596571952104568, -0.018055953085422516, -0.0002669931564014405, -3.0636318115284666e-05, -8.34461570775602e-06, -0.014197062700986862, -3.886147169396281e-05, -0.002453771186992526, -0.004910314455628395, -0.05652124807238579], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.157626673579216, -2.3841830625315197e-06, -0.0007583603146485984, -0.044829532504081726, -0.014941096305847168, -0.7747935056686401, -0.03432952240109444, -0.023501647636294365, -0.001358896610327065, -0.04167921096086502, -0.0002037079248111695, -0.008521740324795246, -0.00020823694649152458, -4.672895011026412e-05, -0.478931188583374, -0.00034171465085819364, -0.00016509123088326305, -0.0011241076281294227, -0.0010237219976261258, -0.008243818767368793], "finish_reason": "stop"}, {"text": " text.split()", "tokens": [" text", ".", "split", "()", "\n"], "logprobs": [-2.525768280029297, -0.0003987947420682758, -0.7445629835128784, -0.1207839772105217, -0.00643337145447731], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.026938410475850105, -0.01712464727461338], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.00523150060325861, -3.576278118089249e-07, -0.004146550316363573, -0.00016759421851020306, -2.7418097943154862e-06, -3.6954811548639555e-06, -1.549708758830093e-05, -0.00015472168161068112, -0.08184082061052322, -5.2689116273541003e-05, -0.14302748441696167, -1.0728830375228426e-06, -8.344646857949556e-07, -2.0265558760002023e-06, -0.00016044282529037446, -0.0030122878961265087], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003359945258125663, -8.344646857949556e-07, -4.0531076592742465e-06, -0.42072951793670654, -0.006564125884324312], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.018920771777629852, -2.0265558760002023e-06, -7.867782187531702e-06, -0.00012289722508285195, -5.364403477869928e-06, -2.586808113846928e-05, -0.00034957972820848227, -0.00872679241001606, -1.847726889536716e-05, -0.004806512035429478, -0.0002302858338225633, -4.0531076592742465e-06, -2.9801878554280847e-05, -0.01607787050306797, -0.09730875492095947], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.todense(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.0025953915901482105, -6.198863957251888e-06, -0.0024414039216935635, -0.041842248290777206, -0.021962987259030342, -3.099436753473128e-06, -3.2186455882765586e-06, -5.960462772236497e-07, -0.003375786356627941, -1.7785454988479614, -8.702239938429557e-06, -0.00012420836719684303, -0.005764882545918226, -0.004316655918955803, -0.012662016786634922, -0.005862304475158453, -0.0011208925861865282, -3.576278118089249e-07, -9.059865078597795e-06, -0.0002138386043952778, -1.1920922133867862e-06, -1.1801649634435307e-05, 0.0, -2.729855441430118e-05, -0.19508714973926544, -0.005499827675521374, -0.003323628567159176, -0.8958664536476135], "finish_reason": "stop"}], "metrics": {"energy": 568.4903232650754, "energy_per_token": 4.306744873220268, "time": 14.982122, "time_per_token": 0.11350092424242425}}
{"outputs": [{"text": " re.sub(r'\\d+', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.8629174828529358, -7.30726242181845e-05, -0.007830636575818062, -0.2935061454772949, -0.023479407653212547, -0.741023600101471, -0.8825118541717529, -0.05877682566642761, -1.811964830267243e-05, -0.06981316953897476, -6.818538531661034e-05, -0.14225949347019196, -0.026474952697753906, -0.22960031032562256], "finish_reason": "stop"}, {"text": " text.replace('\\n', ' ')", "tokens": [" text", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n"], "logprobs": [-2.6758949756622314, -0.0017935632495209575, -0.4229978919029236, -0.6733830571174622, -0.3251001238822937, -0.08394339680671692, -0.010666146874427795, -0.00027021096320822835, -0.02103741466999054, -0.17615340650081635, -0.00047219570842571557, -0.13781940937042236], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-2.488631010055542, -0.00015555603022221476, -0.0005617947317659855, -3.93382906622719e-05, -0.16173246502876282, -0.024730386212468147, -0.0014479401288554072, -6.198863957251888e-06, -1.0251946150674485e-05, -0.0023396043106913567, -6.723177648382261e-05, -6.83045873302035e-05, -0.012776894494891167, -0.0016254083020612597, -0.005865859799087048, -0.01575181819498539, -1.0013530300057027e-05, -0.014820358715951443, 0.0, -1.847726889536716e-05, 0.0, 0.0, -0.004797614179551601, -0.004218489397317171], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.7020152807235718, -0.0004914983292110264, -0.00037901371251791716, -8.546940807718784e-05, -0.16989129781723022, -0.02338322065770626, -0.002045802306383848, -1.0371154530730564e-05, -1.3112935448589269e-05, -0.0023284247145056725, -0.0001113352773245424, -0.0004233417857903987, -0.07213083654642105, -0.0024613819550722837, -0.0039474437944591045, -0.016027426347136497, -1.1444026313256472e-05, -0.021983861923217773, 0.0, -2.0861407392658293e-05, 0.0, 0.0, -0.011316989548504353, -0.001857937895692885], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02633051946759224, -0.02172062173485756], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.003883084747940302, -3.576278118089249e-07, -0.0038659849669784307, -0.00025054652360267937, -2.861018856492592e-06, -3.4570634852570947e-06, -2.1219027985353023e-05, -0.0001280225842492655, -0.09711286425590515, -4.5060096454108134e-05, -0.17692315578460693, -1.311301275563892e-06, -9.536738616588991e-07, -1.5497195136049413e-06, -0.00014494798961095512, -0.002281088614836335], "finish_reason": "stop"}, {"text": " CountVectorizer(token_pattern=r'\\b[^\\d\\W]+\\b')", "tokens": [" Count", "Vector", "izer", "(", "token", "_", "pattern", "=", "r", "'\\", "b", "[", "^\\", "d", "\\", "W", "]", "+\\", "b", "')", "\n"], "logprobs": [-0.0003432638186495751, -7.152555099310121e-07, -5.960446742392378e-06, -0.8768941164016724, -1.6278996467590332, -0.08243191987276077, -3.707340147229843e-05, -0.020524147897958755, -0.0047325980849564075, -0.30830445885658264, -0.089178167283535, -0.7661192417144775, -0.011761605739593506, -0.026465896517038345, -0.0004573014739435166, -6.592056161025539e-05, -0.14761190116405487, -0.00024816294899210334, -2.622600959512056e-06, -0.061623796820640564, -0.03443249315023422], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.020931188017129898, -1.311301275563892e-06, -7.748573807475623e-06, -8.439661905867979e-05, -4.172316494077677e-06, -1.168244216387393e-05, -0.0003177614707965404, -0.00814745668321848, -1.6212332411669195e-05, -0.004731055814772844, -0.0002004899288294837, -4.0531076592742465e-06, -2.634490556374658e-05, -0.018403375521302223, -0.10266248881816864], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())"], "logprobs": [-0.0033633115235716105, -4.768360213347478e-06, -0.0016840812750160694, -0.03637475147843361, -0.035707928240299225, -3.2186455882765586e-06, -3.3378546504536644e-06, -3.576278118089249e-07, -0.0023353227879852057, -0.2501859664916992, -7.867782187531702e-06, -0.006342046428471804, -0.001990719698369503, -0.0035070599988102913, -0.004155453760176897, -0.0005657264264300466, -1.1920928244535389e-07, -9.059865078597795e-06, -8.284702198579907e-05, -7.152555099310121e-07, -8.34461570775602e-06, 0.0, -3.40932747349143e-05, -1.211602807044983], "finish_reason": "stop"}], "metrics": {"energy": 640.573189626694, "energy_per_token": 4.214297300175619, "time": 17.047174, "time_per_token": 0.11215246052631578}}
{"outputs": [{"text": " text.lower()  # Convert to lowercase", "tokens": [" text", ".", "lower", "()", "  ", "#", " Convert", " to", " lower", "case", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -1.481684684753418, -0.0001003691868390888, -0.16292177140712738, -0.31392690539360046, -0.0003700763627421111, -0.005956635810434818, -0.009633835405111313], "finish_reason": "stop"}, {"text": " re.sub(r\"\\d+\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -2.1086299419403076, -1.4612174034118652, -0.4444335103034973, -0.03826608881354332, -0.0053695267997682095, -2.5510462364763953e-05, -0.015514515340328217, -0.025747239589691162, -9.894321920000948e-06, -0.003914196044206619, -0.0005665604257956147, -0.1733337789773941], "finish_reason": "stop"}, {"text": " re.sub(r'[^\\w\\s]', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.1654883325099945, -2.861018856492592e-06, -0.0009444067254662514, -0.05213192477822304, -0.015150472521781921, -0.7359315752983093, -0.03173226863145828, -0.026234259828925133, -0.0014210374793037772, -0.045691102743148804, -0.00020037073409184813, -0.006473049987107515, -0.00028236693469807506, -2.9801878554280847e-05, -0.9144970178604126, -2.4199192921514623e-05, -0.0006210067658685148, -0.0013713965890929103, -0.004266090225428343], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.4828632175922394, -0.00047159992391243577, -0.00040737437666393816, -8.642300235806033e-05, -0.10003455728292465, -0.023798177018761635, -0.0016111262375488877, -1.0371154530730564e-05, -1.9430925021879375e-05, -0.0026410482823848724, -0.00012718822108581662, -0.00025781645672395825, -0.05141744390130043, -0.0024169061798602343, -0.004617623053491116, -0.015424837358295918, -1.537788011773955e-05, -0.015170549973845482, 0.0, -2.2411095415009186e-05, 0.0, 0.0, -0.012945421040058136, -0.0016229089815169573], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.02246933802962303, -0.020032351836562157], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(lambda x: preprocess_text(x))", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " pre", "process", "_", "text", "(", "x", "))", "\n"], "logprobs": [-0.004296951927244663, -5.960462772236497e-07, -0.0035200081765651703, -0.0002101439022226259, -3.2186455882765586e-06, -2.9802276912960224e-06, -1.8954096958623268e-05, -0.00013958434283267707, -0.09877761453390121, -4.672895011026412e-05, -1.9246684312820435, -0.050385795533657074, -0.001342587056569755, -0.005298618692904711, -4.768370445162873e-07, -1.311301275563892e-06, -2.3841830625315197e-06, -0.00039617318543605506, -0.046515632420778275, -0.013481761328876019, -0.0018760239472612739], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.0003588747640606016, -9.536738616588991e-07, -3.576272320060525e-06, -0.49601560831069946, -0.00682795187458396], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01869802735745907, -2.3841830625315197e-06, -8.583032467868179e-06, -9.667406266089529e-05, -4.291525328881107e-06, -4.494089080253616e-05, -0.0004447901446837932, -0.010005085729062557, -1.8358061424805783e-05, -0.004096450749784708, -0.00023862851958256215, -4.0531076592742465e-06, -3.075552376685664e-05, -0.018784604966640472, -0.08964169770479202], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n"], "logprobs": [-0.0026984727010130882, -5.245195097813848e-06, -0.0012967520160600543, -0.034906093031167984, -0.027361638844013214, -1.9073468138230965e-06, -2.264974000354414e-06, -4.768370445162873e-07, -0.0027624324429780245, -0.2726057767868042, -7.986990567587782e-06, -0.00684073893353343, -0.0021075436379760504, -0.0027196346782147884, -0.00378119433298707, -0.0004916174802929163, -1.1920928244535389e-07, -1.0490362910786644e-05, -8.272782724816352e-05, -1.0728830375228426e-06, -8.702239938429557e-06, 0.0, -5.07818695041351e-05, -1.1913517713546753, -1.0297927856445312], "finish_reason": "stop"}], "metrics": {"energy": 583.5067195816039, "energy_per_token": 4.197890068932402, "time": 15.561852, "time_per_token": 0.11195576978417267}}
{"outputs": [{"text": " text.lower()  # Convert text to lowercase", "tokens": [" text", ".", "lower", "()", "  ", "#", " Convert", " text", " to", " lower", "case", "\n"], "logprobs": [-0.7116954326629639, -0.0007538337376900017, -0.04892146587371826, -8.868777513271198e-05, -1.481684684753418, -0.0001003691868390888, -0.16292177140712738, -1.4716227054595947, -0.00032026408007368445, -0.00010442188795423135, -0.004612639080733061, -0.020550308749079704], "finish_reason": "stop"}, {"text": " re.sub(r\"http\\S+|www\\S+|pic\\S+\", \"\", text)", "tokens": [" re", ".", "sub", "(", "r", "\"", "http", "\\", "S", "+|", "www", "\\", "S", "+|", "pic", "\\", "S", "+", "\"", ",", " \"", "\"", ",", " text", ")", "\n"], "logprobs": [-0.2814036011695862, -1.3351351299206726e-05, -0.0009112972766160965, -0.15424004197120667, -0.023050805553793907, -2.1086299419403076, -1.6181349754333496, -0.002061267616227269, -7.271740287251305e-06, -1.8292423486709595, -0.016385169699788094, -0.01835433579981327, -0.0002571013756096363, -0.7284535765647888, -0.629442572593689, -0.2467913180589676, -0.0009245174005627632, -0.03395647928118706, -0.46283912658691406, -7.73638384998776e-05, -0.05702921003103256, -0.049377478659152985, -0.00010418349120300263, -0.031851790845394135, -0.012366404756903648, -0.5114439725875854], "finish_reason": "stop"}, {"text": " re.sub(r'\\W+', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.1654883325099945, -2.861018856492592e-06, -0.0009444067254662514, -0.05213192477822304, -0.015150472521781921, -0.7464105486869812, -0.307068794965744, -0.17948266863822937, -4.9828242481453344e-05, -0.009034468792378902, -0.0011087467428296804, -4.1126360883936286e-05, -0.0002884448622353375, -0.0037130240816622972, -0.007696143351495266], "finish_reason": "stop"}, {"text": " ' '.join([word for word in text.split() if word not in STOPWORDS])", "tokens": [" '", " '", ".", "join", "([", "word", " for", " word", " in", " text", ".", "split", "()", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "])", "\n"], "logprobs": [-0.5702469944953918, -0.0004694551753345877, -0.0004328744253143668, -9.059495641849935e-05, -0.1323162466287613, -0.026271533221006393, -0.0015392372151836753, -1.2993727978027891e-05, -1.4662635294371285e-05, -0.0019547895062714815, -0.00014399446081370115, -0.0004919749335385859, -0.07250998169183731, -0.002174158114939928, -0.005526976194232702, -0.018599390983581543, -1.1205610462639015e-05, -0.011489061638712883, 0.0, -2.2411095415009186e-05, 0.0, 0.0, -0.01273193396627903, -0.0019645453430712223], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.023757783696055412, -0.018429825082421303], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(lambda x: preprocess_text(x))", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "lambda", " x", ":", " pre", "process", "_", "text", "(", "x", "))", "\n"], "logprobs": [-0.004599349107593298, -3.576278118089249e-07, -0.004650965798646212, -0.0002113357331836596, -2.7418097943154862e-06, -2.7418097943154862e-06, -1.4305012882687151e-05, -0.0001357701694360003, -0.08654665946960449, -4.053033626405522e-05, -2.0867528915405273, -0.062401365488767624, -0.001468533300794661, -0.005806365050375462, -4.768370445162873e-07, -1.1920922133867862e-06, -1.6689286894688848e-06, -0.0005036516231484711, -0.04959031566977501, -0.013256036676466465, -0.0014791273279115558], "finish_reason": "stop"}, {"text": " CountVectorizer(binary=True)", "tokens": [" Count", "Vector", "izer", "(", "binary", "=", "True", ")", "\n"], "logprobs": [-0.0002747396647464484, -7.152555099310121e-07, -3.3378546504536644e-06, -0.8977438807487488, -1.3815886974334717, -0.005836112890392542, -0.1273215115070343, -0.09132903814315796, -0.026186415925621986], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column]).toarray()", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", ".", "to", "array", "()", "\n"], "logprobs": [-0.015043734572827816, -2.861018856492592e-06, -9.417489309271332e-06, -0.0001311216183239594, -4.172316494077677e-06, -2.372236667724792e-05, -0.00047708096099086106, -0.009108657017350197, -1.6331539882230572e-05, -0.004839492961764336, -0.0002047805901383981, -3.3378546504536644e-06, -2.3483953555114567e-05, -0.019200420007109642, -2.669971227645874, -0.16019098460674286, -7.724463648628443e-05, -0.00022933237778488547, -0.0041315918788313866], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.toarray(), columns=vectorizer.get_feature_names_out())", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "to", "array", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "\n"], "logprobs": [-0.005127612501382828, -6.794906312279636e-06, -0.0012171011185273528, -0.03864406421780586, -0.029974762350320816, -3.576272320060525e-06, -2.7418097943154862e-06, -3.576278118089249e-07, -0.0026814716402441263, -0.2252194583415985, -6.556489552167477e-06, -0.006521253846585751, -0.0017792837461456656, -0.004403418395668268, -0.0032289293594658375, -0.000535821367520839, -2.3841855067985307e-07, -1.0967194612021558e-05, -0.00013386306818574667, -9.536738616588991e-07, -1.2278481335670222e-05, 0.0, -8.225102646974847e-05, -0.43386900424957275, -0.004724530037492514, -0.0018811402842402458, -0.9843464493751526], "finish_reason": "stop"}], "metrics": {"energy": 642.3706418781278, "energy_per_token": 4.144326721794373, "time": 16.822685, "time_per_token": 0.10853345161290323}}
{"outputs": [{"text": " re.sub('\\d+', '', text)", "tokens": [" re", ".", "sub", "('", "\\", "d", "+'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-0.9168269634246826, -6.758938252460212e-05, -0.00839963462203741, -1.3213117122650146, -1.3186801671981812, -0.4965244233608246, -0.0931260734796524, -3.528532761265524e-05, -0.08424324542284012, -6.55629628454335e-05, -0.05631359666585922, -0.05167807638645172, -0.29623448848724365], "finish_reason": "stop"}, {"text": " re.sub(r'\\b\\w{1,2}\\b', ' ', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "\\", "w", "{", "1", ",", "2", "}\\", "b", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.23653613030910492, -1.5020257706055418e-05, -0.0007649118197150528, -0.16083469986915588, -0.024453677237033844, -0.400166779756546, -0.2835642993450165, -2.0979535579681396, -0.06313411891460419, -0.16817477345466614, -0.07393433153629303, -0.004909247159957886, -0.3194642961025238, -0.0001382732152706012, -0.004311551805585623, -0.04312962666153908, -3.6477376852417365e-05, -0.6123179197311401, -0.0024430686607956886, -0.00021419614495243877, -0.00447189761325717, -0.00029595286468975246, -0.330814927816391], "finish_reason": "stop"}, {"text": " re.sub('[^a-zA-Z]', ' ', text)", "tokens": [" re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " '", " '", ",", " text", ")", "\n"], "logprobs": [-0.14233259856700897, -2.0265558760002023e-06, -0.0010726656764745712, -2.7311062812805176, -0.6647499799728394, -2.0631256103515625, -0.07963155210018158, -4.875540980719961e-05, -3.969590397900902e-05, -0.18572112917900085, -1.0013530300057027e-05, -0.009363426826894283, -0.4343315362930298, -0.0024159548338502645, -5.6265202147187665e-05, -0.06718486547470093, -0.0004319211875554174, -9.476689592702314e-05, -0.0024650683626532555, -0.0006529344827868044, -0.010835855267941952], "finish_reason": "stop"}, {"text": " re.sub(r'\\b(' + '|'.join(STOPWORDS) + r')\\b\\s*', '', text)", "tokens": [" re", ".", "sub", "(", "r", "'\\", "b", "('", " +", " '", "|", "'", ".", "join", "(", "ST", "OP", "W", "OR", "DS", ")", " +", " r", "')\\", "b", "\\", "s", "*", "'", ",", " ''", ",", " text", ")", "\n"], "logprobs": [-1.3338934183120728, -1.1324817933200393e-05, -0.0007179781678132713, -0.045258358120918274, -0.006694508250802755, -0.0791589617729187, -0.2679145932197571, -1.1405553817749023, -0.00380340195260942, -0.18939760327339172, -9.572047565598041e-05, -5.411955135059543e-05, -1.680836794548668e-05, -3.242440288886428e-05, -0.0030831205658614635, -0.030249718576669693, 0.0, -1.811964830267243e-05, 0.0, 0.0, -0.00016258825780823827, -0.00021371940965764225, -0.00024339574156329036, -0.00020394629973452538, -6.198863957251888e-06, -0.042805079370737076, -0.0020687624346464872, -3.158996332786046e-05, -5.590759246842936e-05, -5.483612312673358e-06, -0.033713776618242264, -3.7431014789035544e-05, -0.0037247820291668177, -0.0051108901388943195, -0.005995384883135557], "finish_reason": "stop"}, {"text": " text", "tokens": [" text", "\n"], "logprobs": [-0.026311710476875305, -0.015831023454666138], "finish_reason": "stop"}, {"text": " dataframe[text_column].apply(preprocess_text)", "tokens": [" data", "frame", "[", "text", "_", "column", "]", ".", "apply", "(", "pre", "process", "_", "text", ")", "\n"], "logprobs": [-0.004475102294236422, -3.576278118089249e-07, -0.003584034275263548, -0.0002060916303889826, -3.099436753473128e-06, -4.6491513785440475e-06, -1.847726889536716e-05, -0.00014423283573705703, -0.07873903214931488, -5.185469490243122e-05, -0.1175699234008789, -1.311301275563892e-06, -9.536738616588991e-07, -1.9073468138230965e-06, -0.00017248096992261708, -0.002785851713269949], "finish_reason": "stop"}, {"text": " CountVectorizer()", "tokens": [" Count", "Vector", "izer", "()", "\n"], "logprobs": [-0.00025567124248482287, -7.152555099310121e-07, -3.2186455882765586e-06, -0.34254735708236694, -0.0072642723098397255], "finish_reason": "stop"}, {"text": " vectorizer.fit_transform(dataframe[text_column])", "tokens": [" vector", "izer", ".", "fit", "_", "transform", "(", "data", "frame", "[", "text", "_", "column", "])", "\n"], "logprobs": [-0.01752944104373455, -2.622600959512056e-06, -8.583032467868179e-06, -0.00013243274588603526, -4.887569048150908e-06, -2.396077979938127e-05, -0.00037889453233219683, -0.008379656821489334, -1.4662635294371285e-05, -0.0047143264673650265, -0.00019500737835187465, -3.3378546504536644e-06, -2.407998726994265e-05, -0.017510464414954185, -0.08333146572113037], "finish_reason": "stop"}, {"text": " pd.DataFrame(vectorized_data.todense(), columns=vectorizer.get_feature_names_out())<|endoftext|>import numpy as np", "tokens": [" pd", ".", "DataFrame", "(", "vector", "ized", "_", "data", ".", "t", "od", "ense", "()", ",", " columns", "=", "vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.002639264799654484, -5.245195097813848e-06, -0.0021899782586842775, -0.034178730100393295, -0.023397311568260193, -3.3378546504536644e-06, -3.3378546504536644e-06, -3.576278118089249e-07, -0.0023316359147429466, -1.629095196723938, -8.106198947643861e-06, -9.07141511561349e-05, -0.007171484176069498, -0.0041285050101578236, -0.009952091611921787, -0.004567903000861406, -0.0017201402224600315, -2.3841855067985307e-07, -1.0490362910786644e-05, -0.0002044230350293219, -1.1920922133867862e-06, -1.2993727978027891e-05, 0.0, -4.005352093372494e-05, -0.189205139875412, -0.006403760053217411, -0.004351432900875807, -0.9176973700523376, -5.8412379075889476e-06, -1.6689286894688848e-06, -4.0531076592742465e-06, -6.318072337307967e-06, -0.1229037418961525, -1.2125054597854614, -2.0236940383911133, -0.016357140615582466, -0.00451604463160038, -0.006288266275078058], "finish_reason": "stop"}], "metrics": {"energy": 705.1596257057196, "energy_per_token": 4.197378724438807, "time": 18.50214, "time_per_token": 0.11013178571428572}}
