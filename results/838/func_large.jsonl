{"outputs": [{"text": "# Define a function to remove non-alphanumeric characters and convert to lowercase\n    def remove_non_alphanumeric(string):\n        return re.sub(r'[^a-zA-Z0-9 ]', '', string).lower()\n\n    # Define a function to remove punctuation\n    def remove_punctuation(string):\n        return re.sub(r'[^\\w\\s]', '', string)\n\n    # Create a PorterStemmer object\n    stemmer = PorterStemmer()\n\n    # Apply functions to each entry in the series, and stem each word to its root form\n    processed_series = text_series.apply(remove_non_alphanumeric).apply(remove_punctuation)\n    stemmed_series = processed_series.apply(\n        lambda x: ' '.join([stemmer.stem(word) for word in x.split()])\n    )\n    return stemmed_series", "tokens": ["#", " Define", " a", " function", " to", " remove", " non", "-", "al", "phan", "umeric", " characters", " and", " convert", " to", " lower", "case", "\n", "    ", "def", " remove", "_", "non", "_", "al", "phan", "umeric", "(", "string", "):", "\n", "        ", "return", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " ''", ",", " string", ")", ".", "lower", "()", "\n", "\n", "    ", "#", " Define", " a", " function", " to", " remove", " punct", "uation", "\n", "    ", "def", " remove", "_", "punct", "uation", "(", "string", "):", "\n", "        ", "return", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " string", ")", "\n", "\n", "    ", "#", " Create", " a", " Porter", "St", "em", "mer", " object", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Apply", " functions", " to", " each", " entry", " in", " the", " series", ",", " and", " stem", " each", " word", " to", " its", " root", " form", "\n", "    ", "processed", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "remove", "_", "non", "_", "al", "phan", "umeric", ")", ".", "apply", "(", "remove", "_", "punct", "uation", ")", "\n", "    ", "stem", "med", "_", "series", " =", " processed", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "])", "\n", "    ", ")", "\n", "    ", "return", " stem", "med", "_", "series", "\n", "\n", "if"], "logprobs": [-0.7937904596328735, -2.719898223876953, -0.6558129191398621, -1.0216407775878906, -0.1761111170053482, -2.2390947341918945, -0.3639496862888336, -0.015255671925842762, -0.06293780356645584, -0.0006007535266689956, -0.000927137560211122, -0.06778213381767273, -2.250307321548462, -2.1750946044921875, -0.10008859634399414, -0.0012617491884157062, -0.030234450474381447, -0.0703333169221878, -0.011326889507472515, -0.23334959149360657, -1.0171425342559814, -0.0057420069351792336, -0.09917766600847244, -0.0799919068813324, -0.15224185585975647, -0.11729643493890762, -0.05862754210829735, -0.1983935832977295, -2.5963516235351562, -0.04958271607756615, -0.0019258777610957623, -0.014131597243249416, -0.4919145107269287, -0.03213788941502571, -4.708655978902243e-05, -0.003371984465047717, -0.1279076337814331, -0.025726791471242905, -0.5501627326011658, -0.018615538254380226, -0.20564933121204376, -0.17341506481170654, -3.6954811548639555e-06, -0.0001370812824461609, -0.07740923017263412, -6.794906312279636e-06, -0.001261630211956799, -0.0856907069683075, -0.0001515035255579278, -5.793403761344962e-05, -1.1536649465560913, -0.48919370770454407, -0.00013374387344811112, -0.2127654105424881, -0.00022980909852776676, -0.004830001853406429, -0.43006375432014465, -0.0323123037815094, -0.010679592378437519, -6.05564855504781e-05, -0.02180308848619461, -0.03519511595368385, -0.0023959758691489697, -0.02648354321718216, -0.8347302079200745, -0.15167555212974548, -0.05391782149672508, -0.02459128573536873, -0.19545282423496246, -0.026290113106369972, -0.007747955620288849, -0.596692681312561, -0.0007578838267363608, -0.029886487871408463, -0.004532658960670233, -7.247662142617628e-05, -0.0022454068530350924, -0.021893596276640892, -0.0038138525560498238, -0.02391190081834793, -0.002257657703012228, -0.00027616979787126184, -0.0010219357209280133, -0.09097503870725632, -0.15659597516059875, -1.0967194612021558e-05, -0.0002802217786666006, -0.00827786885201931, -0.0029912511818110943, -0.014827406033873558, -0.006937700789421797, -0.09292479604482651, -0.001208766596391797, -0.02122579514980316, -0.00010084597306558862, -0.006578811444342136, -0.0002108589978888631, -1.9907753085135482e-05, -0.04293527826666832, -2.47952248173533e-05, -0.00043883229955099523, -0.009711284190416336, -0.02016391046345234, -0.005307156592607498, -0.0008122005965560675, -0.02282629907131195, -2.1207661628723145, -0.6248933672904968, -1.0394119024276733, -0.017382889986038208, -5.471556869451888e-05, -4.362964682513848e-05, -0.10652878880500793, -0.3032276928424835, -0.00018142008048016578, -0.5066522359848022, -0.0017971331253647804, -0.000977038755081594, -0.0017027654685080051, -3.3378546504536644e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.0003409996279515326, -0.0007780147134326398, -0.007736362982541323, -0.0004850641416851431, -0.00498504564166069, -0.9602957963943481, -2.041454792022705, -0.06600477546453476, -0.5167707204818726, -1.5682587623596191, -0.22260649502277374, -0.06537183374166489, -1.587737798690796, -3.102543592453003, -1.9925308227539062, -0.6105102896690369, -0.34110307693481445, -0.020381657406687737, -1.2274707555770874, -0.03849610313773155, -0.0217264536768198, -0.06113038957118988, -0.07580374926328659, -0.0011398254428058863, -1.9506182670593262, -0.05625421181321144, -0.19565272331237793, -0.0004670721245929599, -0.10397493839263916, -1.9430925021879375e-05, -4.911301948595792e-05, -0.013352026231586933, -0.016667990013957024, -0.001515431678853929, -0.10021812468767166, -1.0728830375228426e-06, -0.0069295321591198444, -6.079655122448457e-06, -9.536697689327411e-06, -1.1920928244535389e-07, -8.4638240878121e-06, -0.012432221323251724, -0.17019300162792206, -0.01866140589118004, -0.00013255194062367082, -0.0019318267004564404, -9.536738616588991e-07, -2.2053474822314456e-05, -6.437280717364047e-06, -0.01307273842394352, -1.512239933013916, -0.0741552859544754, -2.283435344696045, -0.03494005277752876, -0.0021814140491187572, -0.03713279590010643, -0.0006331584881991148, -0.03319140896201134, -4.0531076592742465e-06, -0.00010764019680209458, -0.0003629264247138053, -0.02356790006160736, -0.0034982694778591394, -2.1773102283477783, -0.02672440931200981, -0.0008394769974984229, -0.10508383065462112, -0.0006663962849415839, -0.18925100564956665, -1.4424220353248529e-05, -7.950943836476654e-05, -5.4238757002167404e-05, -0.08412390947341919, -0.009572084993124008, -0.00012110930401831865, -1.6331539882230572e-05, -2.8609820219571702e-05, -0.0007291757501661777, -0.13807415962219238, -0.006287792231887579, -0.0034595420584082603, -5.674201020156033e-05, -2.407998726994265e-05, -0.007115144282579422, -8.785339014139026e-05, -0.00228537037037313, -0.021194634959101677, -0.46047544479370117, -0.017172692343592644, -0.044552743434906006, -5.352353764465079e-05, -0.008240035735070705, -1.6075708866119385, -0.0523974634706974, -0.004134797025471926, -1.6569954823353328e-05, -1.0132738680113107e-05, -0.0002557904226705432, -1.0281739234924316, -0.020801598206162453, -0.8733670711517334], "finish_reason": "stop"}], "metrics": {"energy": 777.9765457296363, "energy_per_token": 3.488684061567876, "time": 19.1088, "time_per_token": 0.0856896860986547}}
{"outputs": [{"text": "# Instantiate the PorterStemmer\n    stemmer = PorterStemmer()\n\n    # Define a regular expression to remove non-alphanumeric characters except spaces\n    non_alpha = re.compile(r'[^a-zA-Z0-9\\s]+')\n\n    # Define a regular expression to remove punctuation\n    punctuation = re.compile(r'[^\\w\\s]')\n\n    # Define a regular expression to remove all numbers\n    numbers = re.compile(r'\\d+')\n\n    # Create a copy of the input Series to avoid modifying the original data\n    data = text_series.copy()\n\n    # Remove non-alphanumeric characters and punctuation, lowercase all letters, and stem each word\n    data = data.str.replace(non_alpha, ' ').str.replace(punctuation, ' ').str.lower().apply(lambda x: ' '.join([stemmer.stem(word) for word in x.split()]))\n\n    # Remove numbers from the resulting strings\n    data = data.apply(lambda x: numbers.sub('', x", "tokens": ["#", " Instant", "iate", " the", " Porter", "St", "em", "mer", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Define", " a", " regular", " expression", " to", " remove", " non", "-", "al", "phan", "umeric", " characters", " except", " spaces", "\n", "    ", "non", "_", "alpha", " =", " re", ".", "compile", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]+", "')", "\n", "\n", "    ", "#", " Define", " a", " regular", " expression", " to", " remove", " punct", "uation", "\n", "    ", "punct", "uation", " =", " re", ".", "compile", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "')", "\n", "\n", "    ", "#", " Define", " a", " regular", " expression", " to", " remove", " all", " numbers", "\n", "    ", "numbers", " =", " re", ".", "compile", "(", "r", "'\\", "d", "+", "')", "\n", "\n", "    ", "#", " Create", " a", " copy", " of", " the", " input", " Series", " to", " avoid", " modifying", " the", " original", " data", "\n", "    ", "data", " =", " text", "_", "series", ".", "copy", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " and", " punct", "uation", ",", " lower", "case", " all", " letters", ",", " and", " stem", " each", " word", "\n", "    ", "data", " =", " data", ".", "str", ".", "replace", "(", "non", "_", "alpha", ",", " '", " '", ")", ".", "str", ".", "replace", "(", "punct", "uation", ",", " '", " '", ")", ".", "str", ".", "lower", "()", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "]))", "\n", "\n", "    ", "#", " Remove", " numbers", " from", " the", " resulting", " strings", "\n", "    ", "data", " =", " data", ".", "apply", "(", "lambda", " x", ":", " numbers", ".", "sub", "('", "'", ",", " x"], "logprobs": [-0.7937904596328735, -4.509895324707031, -0.009367087855935097, -0.7012718319892883, -0.7549716830253601, -0.06923402845859528, -0.000714523543138057, -0.0002397011558059603, -0.9066972732543945, -0.00158410903532058, -0.7147783041000366, -0.03337935730814934, -0.008604357950389385, -0.0036270327400416136, -8.344646857949556e-07, -7.152555099310121e-07, -7.152555099310121e-07, -0.0009385710000060499, -0.004585821647197008, -0.20467913150787354, -0.0009865660686045885, -0.15581345558166504, -1.1259196996688843, -0.5772260427474976, -1.2578697204589844, -0.003741765394806862, -0.6410195231437683, -1.0237077474594116, -0.38358446955680847, -0.00704672746360302, -0.04773950204253197, -0.00023934361524879932, -0.0005738280597142875, -0.05210442841053009, -1.8150303363800049, -0.18220843374729156, -0.12040971219539642, -0.0009026029147207737, -1.5607789754867554, -0.07557917386293411, -1.91022527217865, -1.3813841342926025, -0.06229305639863014, -2.8132995794294402e-05, -8.237022848334163e-05, -0.618326723575592, -1.0064138174057007, -1.0369038581848145, -0.01251816563308239, -0.07682917267084122, -0.14113986492156982, -2.0265373677830212e-05, -0.00031025364296510816, -0.08377698808908463, -2.1457441107486375e-05, -0.002619765931740403, -0.20443478226661682, -0.00013851160474587232, -0.00014101465058047324, -0.20891691744327545, -0.030459729954600334, -1.0487223863601685, -0.008751372806727886, -0.009889534674584866, -0.050523169338703156, -0.00040368037298321724, -0.16632317006587982, -0.6361920833587646, -0.06609471887350082, -0.20208141207695007, -0.00044967554276809096, -0.012459653429687023, -0.05768197029829025, -0.061074092984199524, -0.023026809096336365, -0.17266656458377838, -0.000270091783022508, -0.490313321352005, -0.6902009844779968, -0.0666993260383606, -0.020323721691966057, -5.960462772236497e-07, -4.684815212385729e-05, -0.05954021215438843, -0.004658441059291363, -0.03364081308245659, -0.17509791254997253, -0.1937602162361145, -0.026087701320648193, -0.0011174393584951758, -0.00016497205069754273, -0.2142188400030136, -0.0037408152129501104, -0.004222288262099028, -0.011724492534995079, -0.0005368936690501869, -0.1107529029250145, -1.0298373699188232, -0.20584525167942047, -1.5811891555786133, -0.0004714807728305459, -0.03413022682070732, -0.7911320924758911, -3.474585771560669, -2.15564227104187, -0.3644833564758301, -0.0011174393584951758, -0.6760757565498352, -0.017743896692991257, -0.0030718303751200438, -7.152555099310121e-07, -1.4185804502631072e-05, -0.006479919422417879, -0.0012738931691274047, -0.4605296850204468, -0.006489038933068514, -0.44817230105400085, -0.0035912799648940563, -0.00026925752172246575, -0.006173943635076284, -0.0011102947173640132, -0.18164674937725067, -2.8815884590148926, -0.5621880888938904, -1.888115644454956, -0.002852421021088958, -0.01336037740111351, -0.2896333932876587, -0.8952467441558838, -1.4839377403259277, -0.15312035381793976, -0.3157558739185333, -0.5394020080566406, -0.053476762026548386, -0.30614814162254333, -0.007898526266217232, -0.0016856284346431494, -3.79803204536438, -0.2472989857196808, -0.010321454145014286, -5.185469490243122e-05, -1.7046782886609435e-05, -0.006319776643067598, -0.004285438451915979, -0.004098943900316954, -0.0041287424974143505, -0.02515571191906929, -0.0005778788472525775, -0.024343157187104225, -3.319303512573242, -0.9555267095565796, -0.002321407664567232, -0.04209304600954056, -0.00010895135346800089, -0.00013314791431184858, -0.014912322163581848, -2.4303717613220215, -1.6640591621398926, -0.0024081061128526926, -0.7075278162956238, -2.1366660594940186, -0.030295055359601974, -1.274726390838623, -0.09719972312450409, -0.09301745891571045, -0.37245306372642517, -0.2660403847694397, -0.19873929023742676, -0.007938619703054428, -0.14500796794891357, -0.0020831567235291004, -0.33778223395347595, -0.023756619542837143, -0.12883679568767548, -0.003107126336544752, -0.757318913936615, -0.00044705410255119205, -0.3881677985191345, -0.01333861704915762, -0.037687547504901886, -7.986990567587782e-06, -1.4185804502631072e-05, -0.0004003438516519964, -0.09447896480560303, -0.0652245357632637, -0.13380062580108643, -0.842911958694458, -0.033875469118356705, -0.0007023728103376925, -0.2043200135231018, -0.008656949736177921, -0.05863451212644577, -2.3841855067985307e-07, -0.00022146634000819176, -0.010293608531355858, -0.41862884163856506, -0.00995598640292883, -0.0431305393576622, -0.016505718231201172, -0.0006612736615352333, -1.1087925434112549, -0.005159040912985802, -0.24651792645454407, -0.5262489318847656, -0.0018417553510516882, -0.291126549243927, -0.05009092390537262, -0.007378824986517429, -0.2842468321323395, -5.61460001335945e-05, -0.0004295380203984678, -7.509902934543788e-05, -0.14707128703594208, -0.008437107317149639, -0.00016342257731594145, -9.011816291604191e-05, -5.1973900554003194e-05, -0.0014373458689078689, -0.37984955310821533, -0.003235583659261465, -0.008334379643201828, -0.0002719986077863723, -0.00010239553375868127, -0.006784380413591862, -0.00033802041434682906, -0.0011954312212765217, -0.01252911426126957, -0.02358711138367653, -0.04111030697822571, -0.05170445144176483, -0.0007385863573290408, -0.2720757722854614, -0.5268070101737976, -1.106060266494751, -1.0999855995178223, -0.3887804448604584, -2.0600523948669434, -1.092372179031372, -0.08802322298288345, -0.000589792791288346, -0.02780601941049099, -0.009408185258507729, -0.001312348060309887, -5.245071224635467e-05, -1.8712177276611328, -0.0004487222759053111, -0.0035922301467508078, -0.009226895868778229, -0.0024408092722296715, -0.5944419503211975, -3.480850500636734e-05, -4.8040190449682996e-05, -0.051894161850214005, -0.49378931522369385, -0.00019167017308063805, -0.013278976082801819], "finish_reason": "length"}], "metrics": {"energy": 910.551138761521, "energy_per_token": 3.5568403857871913, "time": 21.86253, "time_per_token": 0.0854005078125}}
{"outputs": [{"text": "# Initialize the PorterStemmer\n    ps = PorterStemmer()\n\n    # Define the pattern for non-alphanumeric characters (except spaces) and punctuation\n    pattern = r\"[^a-zA-Z0-9\\s]|[\\n\\t]\"\n\n    # Create a function to apply the processing logic to each string in the Series\n    def process_string(text):\n        # Lowercase the string\n        text = text.lower()\n        # Remove non-alphanumeric characters (except spaces)\n        text = re.sub(pattern, '', text)\n        # Remove punctuation\n        text = re.sub(r\"\\W\", \" \", text)\n        # Remove extra spaces\n        text = re.sub(r\"\\s+\", \" \", text).strip()\n        # Stem each word using the PorterStemmer\n        text = ' '.join([ps.stem(word) for word in text.split()])\n        return text\n\n    # Apply the process_string function to each string in the Series\n    processed_series = text_series.apply(process", "tokens": ["#", " Initialize", " the", " Porter", "St", "em", "mer", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Define", " the", " pattern", " for", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", " and", " punct", "uation", "\n", "    ", "pattern", " =", " r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "|", "[\\", "n", "\\", "t", "]\"", "\n", "\n", "    ", "#", " Create", " a", " function", " to", " apply", " the", " processing", " logic", " to", " each", " string", " in", " the", " Series", "\n", "    ", "def", " process", "_", "string", "(", "text", "):", "\n", "        ", "#", " Lower", "case", " the", " string", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "        ", "text", " =", " re", ".", "sub", "(", "pattern", ",", " ''", ",", " text", ")", "\n", "        ", "#", " Remove", " punct", "uation", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "W", "\"", ",", " \"", " \"", ",", " text", ")", "\n", "        ", "#", " Remove", " extra", " spaces", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "\"", "\\", "s", "+", "\"", ",", " \"", " \"", ",", " text", ")", ".", "strip", "()", "\n", "        ", "#", " St", "em", " each", " word", " using", " the", " Porter", "St", "em", "mer", "\n", "        ", "text", " =", " '", " '", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " text", ".", "split", "()", "])", "\n", "        ", "return", " text", "\n", "\n", "    ", "#", " Apply", " the", " process", "_", "string", " function", " to", " each", " string", " in", " the", " Series", "\n", "    ", "processed", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "process"], "logprobs": [-0.7937904596328735, -2.7779998779296875, -0.6256853938102722, -0.8358305096626282, -0.037567805498838425, -0.0004148814477957785, -5.924526340095326e-05, -0.7585509419441223, -0.0016486160457134247, -1.6049730777740479, -0.005611737724393606, -0.003568592481315136, -2.0265558760002023e-06, 0.0, -2.3841855067985307e-07, -0.000530936405993998, -0.0026280886959284544, -0.11411282420158386, -0.0009014118695631623, -0.1251583993434906, -0.8376154899597168, -1.1302008628845215, -2.138617515563965, -1.4790092706680298, -0.7572588324546814, -0.005342017859220505, -0.039908070117235184, -0.00032884435495361686, -0.0007412070408463478, -0.10199301689863205, -0.7772053480148315, -0.09808295220136642, -0.1013154536485672, -0.01624877378344536, -0.31849023699760437, -0.029973605647683144, -0.022855078801512718, -0.04219384863972664, -0.001279965159483254, -0.13867683708667755, -0.019121013581752777, -0.5143678188323975, -0.9899984002113342, -0.1499672681093216, -0.20608992874622345, -0.03466695919632912, -9.536697689327411e-06, -4.7444173105759546e-05, -0.009109719656407833, -5.364403477869928e-06, -0.001994169782847166, -0.07713005691766739, -0.00011801023356383666, -5.018585216021165e-05, -0.2980911135673523, -0.017510464414954185, -1.6009961366653442, -0.11024001985788345, -0.9523536562919617, -3.2155823707580566, -0.4645390808582306, -0.4219236373901367, -1.3064953088760376, -0.01328521128743887, -0.06614325940608978, -0.00025960413040593266, -0.06574138253927231, -2.6273210048675537, -0.20420709252357483, -1.092494249343872, -0.32903870940208435, -1.1843957901000977, -0.42904892563819885, -1.5969202518463135, -2.8517305850982666, -0.1697596311569214, -0.038659434765577316, -0.9455606341362, -0.3917863368988037, -0.006682429928332567, -0.42258480191230774, -0.008721002377569675, -0.005652752239257097, -0.022978344932198524, -0.1296163946390152, -0.05737258493900299, -0.4859749972820282, -0.0007581220706924796, -1.4982259273529053, -0.09841273725032806, -0.00021753329201601446, -0.05783623456954956, -0.027018476277589798, -0.8344628810882568, -0.008852757513523102, -0.7576334476470947, -1.1766865253448486, -0.16500166058540344, -0.00024148885859176517, -0.2067348212003708, -0.020947063341736794, -0.02177194505929947, -4.160317621426657e-05, -0.002733425237238407, -5.721882189391181e-05, -0.0038175340741872787, -0.5430585741996765, -0.0012661544606089592, -0.11926437169313431, -0.16800236701965332, -0.0004363300104159862, -0.0029558322858065367, -5.8412379075889476e-06, -2.884823152271565e-05, -0.027844974771142006, -0.26204055547714233, -0.003601732663810253, -0.0060310522094368935, -0.02002464048564434, -1.5967278480529785, -0.0005256939912214875, -0.03539247065782547, -0.0038182465359568596, -0.008357314392924309, -3.755022044060752e-05, -0.00017128908075392246, -0.00025614796322770417, -0.004480323754251003, -0.0022689569741487503, -1.1412804126739502, -0.00017998983094003052, -0.005823076236993074, -0.007120115682482719, -0.009691095910966396, -0.0049674902111291885, -0.005292689893394709, -0.4198276698589325, -0.08713826537132263, -0.0038104087579995394, -0.2646466791629791, -0.0012400802224874496, -0.05657340958714485, -0.00294263893738389, -0.4782848656177521, -3.325883881188929e-05, -0.00043883229955099523, -0.13534246385097504, -0.06981406360864639, -0.5026348829269409, -2.498361349105835, -1.4583252668380737, -0.20166856050491333, -0.0002991705550812185, -1.098427653312683, -0.042122531682252884, -0.00011538793478393927, -0.006905736401677132, -0.020202580839395523, -0.009052425622940063, -0.016817575320601463, -0.0032342765480279922, -2.3981497287750244, -1.0462361574172974, -0.31266719102859497, -0.11758189648389816, -0.0004111875023227185, -0.015407112427055836, -0.0011035073548555374, -0.22220487892627716, -5.960446742392378e-06, -6.174850568640977e-05, -0.1006258949637413, -0.1204317957162857, -0.026981228962540627, -0.021994590759277344, -0.009537606500089169, -0.13206765055656433, -0.00273199868388474, -5.757642793469131e-05, -0.010414893738925457, -0.0002579356369096786, -4.8993817472364753e-05, -0.0004766043566633016, -0.013641467317938805, -2.1466169357299805, -0.005996569991111755, -0.0004471732536330819, -0.00204449356533587, -0.027209561318159103, -0.005018969532102346, -0.8882918953895569, -1.549708758830093e-05, -0.19973556697368622, -0.005021579097956419, -2.4895641803741455, -0.18618673086166382, -0.028824616223573685, -0.012080127373337746, -4.935142715112306e-05, -0.00015484087634831667, -0.023419437929987907, -0.0006074252305552363, -0.7697147727012634, -0.03192649781703949, -1.1382958889007568, -2.52720492426306e-05, -6.592056161025539e-05, -0.00013672371278516948, -0.27707821130752563, -0.010635598562657833, -9.775113539944869e-06, -1.7523612768854946e-05, -0.0005820487276650965, -0.008180445991456509, -0.00379116996191442, -0.005760141648352146, -2.4437606043647975e-05, -2.253030106658116e-05, -0.006979963276535273, -0.0006481691962108016, -0.0005650115781463683, -0.06393813341856003, -0.003129943273961544, -0.004131948109716177, -0.08654370903968811, -0.2216167002916336, -0.0012567488010972738, -0.0017675028648227453, -0.017035817727446556, -0.0010419422760605812, -0.0225853081792593, -0.02304859273135662, -0.0022998806089162827, -1.7179139852523804, -0.0025279729161411524, -0.004291254561394453, -0.044036123901605606, -0.007316224742680788, -0.0304502472281456, -0.08606583625078201, -0.005163785070180893, -0.0008665143977850676, -0.1025112196803093, -0.2497265636920929, -0.0007574073388241231, -1.124371886253357, -0.015371543355286121, -0.06044060364365578, -0.0001209901092806831, -0.004065938759595156, -0.00019202772818971425, -3.242440288886428e-05, -6.723177648382261e-05, -0.014492369256913662, -2.0146166207268834e-05, -0.04894053936004639], "finish_reason": "length"}], "metrics": {"energy": 924.0846522903436, "energy_per_token": 3.6097056730091546, "time": 21.632418, "time_per_token": 0.0845016328125}}
{"outputs": [{"text": "# lower case\n    text_series = text_series.str.lower()\n    # remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.replace(r\"[^a-z0-9 ]\", \"\", regex=True)\n    # remove punctuation\n    text_series = text_series.str.replace(r\"[^\\w\\s]\", \"\", regex=True)\n    # stem words\n    ps = PorterStemmer()\n    text_series = text_series.apply(\n        lambda x: \" \".join([ps.stem(word) for word in x.split()])\n    )\n\n    return text_series", "tokens": ["#", " lower", " case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "#", " remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", "\"", ",", " regex", "=", "True", ")", "\n", "    ", "#", " remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ",", " regex", "=", "True", ")", "\n", "    ", "#", " stem", " words", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "])", "\n", "    ", ")", "\n", "\n", "    ", "return", " text", "_", "series", "\n", "\n", "def"], "logprobs": [-0.7937904596328735, -2.717041015625, -1.6924254894256592, -1.1849199533462524, -0.0034222390968352556, -0.40497782826423645, -0.11159844696521759, -0.05528315529227257, -0.0538160465657711, -0.010961436666548252, -4.792098479811102e-05, -1.2397689715726301e-05, -0.00021669900161214173, -0.04897357150912285, -5.447716102935374e-05, -0.002961775055155158, -0.00022098960471339524, -0.0059593613259494305, -0.9104117751121521, -0.013154979795217514, -0.4649128317832947, -0.19577662646770477, -0.29187044501304626, -0.08631835877895355, -0.0018502036109566689, -0.01771848276257515, -0.4633573591709137, -0.849432110786438, -0.05166007578372955, -0.18461890518665314, -0.015516393817961216, -0.06135318800806999, -0.0010600429959595203, -0.08176524937152863, -0.0005520250415429473, -0.001843778183683753, -0.0015826807357370853, -0.008236134424805641, -3.576272320060525e-06, -7.748573807475623e-06, -0.00018261195509694517, -0.7237365245819092, -3.969590397900902e-05, -0.0019631178583949804, -0.050837401300668716, -0.0637546107172966, -0.6495293974876404, -0.24192558228969574, -0.23267704248428345, -0.07599855214357376, -1.7165990357170813e-05, -0.0004798214649781585, -0.7417923212051392, -0.0005660838796757162, -3.4689302992774174e-05, -0.2346215546131134, -0.5524289608001709, -0.0002924968139268458, -0.11828644573688507, -0.39552226662635803, -0.6032650470733643, -0.004647643771022558, -0.00800993200391531, -0.00342295179143548, -0.005294705741107464, -0.005152518395334482, -0.006163636222481728, -0.012332376092672348, -0.10280114412307739, -0.049733132123947144, -0.020892195403575897, -0.05992494150996208, -0.0007497837068513036, -0.10285836458206177, -0.0006273209000937641, -0.003536044852808118, -0.0008249455713666975, -0.0029705704655498266, -1.0967194612021558e-05, -0.00014161060971673578, -8.21318244561553e-05, -0.015500548295676708, -3.93382906622719e-05, -0.009448453783988953, -0.005488683469593525, -0.058049190789461136, -0.05646097660064697, -0.13489538431167603, -0.13174031674861908, -0.0020793499425053596, -0.022293781861662865, -0.0005956306122243404, -0.003651975654065609, -4.672895011026412e-05, -0.007130058016628027, -0.06754115223884583, -0.01568445935845375, -0.0002388668799540028, -0.0002840353990904987, -0.0002653246629051864, -0.0003274143091402948, -0.005833505652844906, -0.06696615368127823, -0.025148505344986916, -0.8807054162025452, -1.065903663635254, -0.47268709540367126, -0.0047401911579072475, -0.9272865056991577, -0.0032624374143779278, -0.00226788641884923, -9.059865078597795e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0007846852531656623, -0.01459141168743372, -0.014683748595416546, -0.15822084248065948, -0.0019546705298125744, -0.019596073776483536, -0.008475287817418575, -0.022282473742961884, -2.8013790142722428e-05, -1.490105023549404e-05, -0.00012432756193447858, -0.08866675943136215, -0.00035601475974544883, -1.9735950231552124, -0.0054106698371469975, -0.0036301210056990385, -0.051285967230796814, -0.0003997480380348861, -0.02029568701982498, -0.002900443272665143, -7.056941103655845e-05, -4.255681051290594e-05, -0.17492689192295074, -0.003962285816669464, -2.7418097943154862e-06, -4.660974445869215e-05, -0.0012703214306384325, -0.4568529725074768, -0.003386122640222311, -0.0030774159822613, -0.00011145447206217796, -9.894321920000948e-06, -0.05416063964366913, -0.0002388668799540028, -0.0027128581423312426, -0.06012679263949394, -0.04208653047680855, -0.009006470441818237, -0.0018983930349349976, -2.2291887944447808e-05, -0.005552939139306545, -1.4172468185424805, -0.0002623452164698392, -0.057713139802217484, -0.002166901947930455, -6.318072337307967e-06, -9.095255518332124e-05, -1.2689111232757568, -0.005197109654545784, -0.973362386226654], "finish_reason": "stop"}], "metrics": {"energy": 564.3389567127231, "energy_per_token": 3.4410911994678237, "time": 13.874196, "time_per_token": 0.08459875609756097}}
{"outputs": [{"text": "# Define a regular expression pattern to match any character that is not a letter, number, or space\n    pattern = re.compile(r\"[^\\w\\s]\")\n\n    # Initialize a PorterStemmer object from the NLTK module\n    porter = PorterStemmer()\n\n    # Define a function that will be applied to each entry in the input Series\n    def process_text(entry):\n        # Convert all letters to lowercase\n        entry = entry.lower()\n        # Use the regular expression pattern to remove any non-alphanumeric characters, except spaces\n        entry = pattern.sub(' ', entry)\n        # Remove punctuation using the string translate() method\n        entry = entry.translate(str.maketrans(\"\", \"\", string.punctuation))\n        # Split the entry into words and apply the Porter stemmer to each word\n        words = entry.split()\n        # Join the stemmed words back together into a single string, separated by spaces\n        return ' '.join([porter.stem(word) for word in words])\n\n    # Apply the processing function to each entry in the input Series\n    output", "tokens": ["#", " Define", " a", " regular", " expression", " pattern", " to", " match", " any", " character", " that", " is", " not", " a", " letter", ",", " number", ",", " or", " space", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ")", "\n", "\n", "    ", "#", " Initialize", " a", " Porter", "St", "em", "mer", " object", " from", " the", " N", "LT", "K", " module", "\n", "    ", "porter", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Define", " a", " function", " that", " will", " be", " applied", " to", " each", " entry", " in", " the", " input", " Series", "\n", "    ", "def", " process", "_", "text", "(", "entry", "):", "\n", "        ", "#", " Convert", " all", " letters", " to", " lower", "case", "\n", "        ", "entry", " =", " entry", ".", "lower", "()", "\n", "        ", "#", " Use", " the", " regular", " expression", " pattern", " to", " remove", " any", " non", "-", "al", "phan", "umeric", " characters", ",", " except", " spaces", "\n", "        ", "entry", " =", " pattern", ".", "sub", "('", " '", ",", " entry", ")", "\n", "        ", "#", " Remove", " punct", "uation", " using", " the", " string", " translate", "()", " method", "\n", "        ", "entry", " =", " entry", ".", "translate", "(", "str", ".", "mak", "et", "rans", "(", "\"", "\"", ",", " \"", "\"", ",", " string", ".", "punct", "uation", "))", "\n", "        ", "#", " Split", " the", " entry", " into", " words", " and", " apply", " the", " Porter", " stem", "mer", " to", " each", " word", "\n", "        ", "words", " =", " entry", ".", "split", "()", "\n", "        ", "#", " Join", " the", " stem", "med", " words", " back", " together", " into", " a", " single", " string", ",", " separated", " by", " spaces", "\n", "        ", "return", " '", " '", ".", "join", "([", "porter", ".", "stem", "(", "word", ")", " for", " word", " in", " words", "])", "\n", "\n", "    ", "#", " Apply", " the", " processing", " function", " to", " each", " entry", " in", " the", " input", " Series", "\n", "    ", "output"], "logprobs": [-0.7937904596328735, -2.719898223876953, -0.6558129191398621, -0.9463691115379333, -0.0026824227534234524, -0.7874711751937866, -0.08543331921100616, -0.5587935447692871, -2.7404732704162598, -1.4811261892318726, -0.031024321913719177, -0.06040659919381142, -0.02230159379541874, -0.40689706802368164, -0.1459173560142517, -0.49892351031303406, -1.0389331579208374, -0.03387662023305893, -0.07369393855333328, -0.09724947810173035, -0.2122783660888672, -0.003711004974320531, -0.4377957880496979, -0.008952242322266102, -0.6155481338500977, -1.8000440832111053e-05, -2.1815061700181104e-05, -0.1510447859764099, -0.11917908489704132, -0.5770630836486816, -0.2479851096868515, -0.6126968860626221, -0.0048055630177259445, -0.05740004777908325, -0.004269769880920649, -0.07165180146694183, -0.0034878156147897243, -0.009935213252902031, -0.32637789845466614, -0.0007490689749829471, -0.05050390213727951, -1.5012047290802002, -0.8801451921463013, -0.3584846258163452, -0.01211604941636324, -2.062299427052494e-05, -2.3245540432981215e-05, -0.1290634423494339, -0.6706267595291138, -0.2890275716781616, -0.23919783532619476, -0.0004478881892282516, -0.000964533886872232, -2.9699368476867676, -0.11615622788667679, -0.00021181246847845614, -2.015552520751953, -0.4510646462440491, -0.0017065736465156078, -1.1920922133867862e-06, -4.768370445162873e-07, -2.7418097943154862e-06, -0.00019608005823101848, -0.000739658426027745, -0.00687649380415678, -0.0004589696181938052, -0.06340693682432175, -1.024336814880371, -0.2373637706041336, -0.3359687030315399, -0.9771836996078491, -2.008613109588623, -0.6351098418235779, -0.12071414291858673, -0.021661946550011635, -0.041799262166023254, -1.5422025918960571, -0.04868395999073982, -0.01353986095637083, -1.3992149829864502, -0.16283921897411346, -0.08352886885404587, -0.0024643549695611, -0.03609388694167137, -0.6363675594329834, -0.14544518291950226, -0.44717782735824585, -0.015395843423902988, -1.7921273708343506, -0.046734314411878586, -0.0006478118011727929, -0.09002427756786346, -0.03481549024581909, -0.7419226765632629, -1.8929532766342163, -0.5680995583534241, -0.26409026980400085, -0.0017266854410991073, -0.00989366602152586, -0.11819504201412201, -0.0003947432560380548, -0.39553573727607727, -0.04939461126923561, -0.026109768077731133, -4.7801782784517854e-05, -0.0033433514181524515, -4.7205765440594405e-05, -0.0014554394874721766, -0.42659443616867065, -0.0009485750924795866, -3.041189432144165, -0.08097544312477112, -0.3688447177410126, -0.00043394684325903654, -0.4990331530570984, -0.022425509989261627, -0.3428307771682739, -0.4199993908405304, -0.5718772411346436, -0.0006079017766751349, -0.11716783046722412, -1.8715683836489916e-05, -0.00012313561455812305, -0.481616735458374, -3.0821330547332764, -0.18147295713424683, -0.11216892302036285, -0.013884857296943665, -0.0002451834443490952, -0.054998189210891724, -0.0010631391778588295, -0.21660010516643524, -1.3112935448589269e-05, -5.304672595229931e-05, -1.2529126405715942, -1.0379180908203125, -0.0002196785935666412, -0.0034282978158444166, -0.0008476955117657781, -0.01496411394327879, -0.006182592362165451, -0.003303786274045706, -0.6274838447570801, -0.697937548160553, -0.002315223217010498, -2.6248207092285156, -0.31040823459625244, -1.8818575143814087, -2.559535026550293, -1.8271018266677856, -0.03146384283900261, -0.0748528316617012, -0.0005771639989688993, -0.09654001146554947, -0.0009733468177728355, -0.024566510692238808, -7.283422019099817e-05, -0.003602326614782214, -0.01265848521143198, -0.1657678335905075, -4.053033626405522e-05, -5.376194530981593e-05, -4.6491513785440475e-06, -1.645074735279195e-05, -1.0228140354156494, -0.10532312095165253, -0.011216089129447937, -0.00015746307326480746, -0.022738905623555183, -0.0009179668850265443, -0.0005480932886712253, -0.03071536123752594, -0.0001867835089797154, -3.242440288886428e-05, -1.4305104514278355e-06, -0.00248659192584455, -0.0024340308737009764, -0.014916198328137398, -0.0020362851209938526, -0.6441738605499268, -0.20072676241397858, -0.4789413809776306, -0.021286247298121452, -0.45356863737106323, -1.7039114236831665, -1.0977590084075928, -0.32243794202804565, -1.1808390617370605, -2.6317338943481445, -0.014280387200415134, -0.03897454962134361, -0.0025159630458801985, -0.04942002519965172, -0.0745699554681778, -0.00022027450904715806, -0.5830581784248352, -0.010316262021660805, -0.6788018941879272, -2.932505594799295e-05, -0.0030119314324110746, -0.04020595923066139, -0.007178112398833036, -0.0015173362335190177, -2.9085683822631836, -1.271955966949463, -0.010553739964962006, -0.053689293563365936, -0.0005937243695370853, -0.0018441352294757962, -0.08129508793354034, -0.9589471817016602, -0.41052645444869995, -0.015309324488043785, -0.08402471989393234, -0.02457895688712597, -2.016566276550293, -0.78047114610672, -0.0003097769513260573, -0.052239980548620224, -0.0064792088232934475, -0.0002464944263920188, -1.4665035009384155, -0.4928022027015686, -1.490105023549404e-05, -0.0001408954558428377, -6.747018051100895e-05, -0.12308294326066971, -0.002546284580603242, -9.238292841473594e-05, -1.966933996300213e-05, -0.0011104138102382421, -0.030643800273537636, -0.002892598044127226, -0.00423392141237855, -4.446407547220588e-05, -1.9311717551317997e-05, -0.0010155049385502934, -0.0027285509277135134, -0.0020648366771638393, -0.01636699214577675, -0.0018086755881085992, -0.014030275866389275, -0.0396052822470665, -0.006167072337120771, -1.9380097389221191, -0.00975579023361206, -0.006735597271472216, -0.039627622812986374, -0.00974776316434145, -0.011697040870785713, -0.0004499138449318707, -0.02543269284069538, -0.004188456106930971, -0.8193284869194031, -0.00044824567157775164, -1.3084908723831177], "finish_reason": "length"}], "metrics": {"energy": 894.3925433921819, "energy_per_token": 3.4937208726257105, "time": 21.6406, "time_per_token": 0.08453359375}}
{"outputs": [{"text": "# Lowercase all letters\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.replace(r\"[^a-z0-9 ]\", \"\")\n\n    # Remove punctuation\n    # punctuation = string.punctuation\n    # text_series = text_series.str.replace(rf\"[{punctuation}]\", \"\")\n\n    # Remove punctuation, except spaces\n    text_series = text_series.str.replace(r\"[^a-z0-9 ]\", \"\")\n\n    # Remove numbers\n    # text_series = text_series.str.replace(r\"[0-9]+\", \"\")\n\n    # Remove all words containing numbers\n    # text_series = text_series.str.split().apply(lambda x: \" \".join([word for word in x if not any(c.isdigit() for c in word)]))\n\n    # Remove all words containing non-alphanumeric characters\n    # text_series =", "tokens": ["#", " Lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "#", " punct", "uation", " =", " string", ".", "punct", "uation", "\n", "    ", "#", " text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "rf", "\"", "[{", "punct", "uation", "}]", "\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", ",", " except", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " Remove", " numbers", "\n", "    ", "#", " text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "0", "-", "9", "]+", "\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " Remove", " all", " words", " containing", " numbers", "\n", "    ", "#", " text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "split", "()", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "word", " for", " word", " in", " x", " if", " not", " any", "(", "c", ".", "is", "digit", "()", " for", " c", " in", " word", ")]", "))", "\n", "\n", "    ", "#", " Remove", " all", " words", " containing", " non", "-", "al", "phan", "umeric", " characters", "\n", "    ", "#", " text", "_", "series", " ="], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -0.17900756001472473, -0.003421407425776124, -0.21163520216941833, -0.11638980358839035, -0.04013770818710327, -0.03661864623427391, -0.006837778724730015, -5.054346183896996e-05, -1.2516897186287679e-05, -0.00015245705435518175, -0.020135872066020966, -1.7762025890988298e-05, -0.0015425699530169368, -5.471556869451888e-05, -0.0025662605185061693, -0.27608591318130493, -0.0008794969180598855, -0.0025903978385031223, -0.10046375542879105, -0.12845808267593384, -0.011263475753366947, -0.019730612635612488, -0.00016509123088326305, -0.0010287236655130982, -0.04388975724577904, -0.3756629526615143, -0.02165856398642063, -0.044927552342414856, -0.01274158526211977, -0.06798875331878662, -0.001073022955097258, -0.18367628753185272, -0.0003798478574026376, -0.002618101192638278, -0.001073142047971487, -0.0043542818166315556, -3.2186455882765586e-06, -6.794906312279636e-06, -9.83428253675811e-05, -0.7314687371253967, -2.1815061700181104e-05, -0.0012978235026821494, -0.02475527487695217, -0.05589275807142258, -0.49691158533096313, -0.14142687618732452, -0.13958857953548431, -0.033605773001909256, -7.510157047363464e-06, -0.00027855331427417696, -0.7627105116844177, -0.00022015532886143774, -2.288792165927589e-05, -0.24768765270709991, -0.6226173043251038, -0.00015567521040793508, -0.08324164152145386, -0.5129889845848083, -1.1930900812149048, -0.005977017804980278, -0.010231073014438152, -0.0005156855913810432, -0.00431238254532218, -0.10331065207719803, -0.03144720941781998, -0.007676269393414259, -0.09120935201644897, -0.0010377742582932115, -2.9625651836395264, -2.1626176834106445, -0.05375075340270996, -0.4343646466732025, -1.3272075653076172, -0.00020740265608765185, -0.0006192197324708104, -0.00013565097469836473, -0.719469428062439, -0.008109737187623978, -0.13659870624542236, -0.1626569628715515, -0.022941414266824722, -0.006481695920228958, -0.0033635490108281374, -0.0074653225019574165, -0.0005974177038297057, -0.0008361419313587248, -0.0004670721245929599, -0.15584875643253326, -0.00018439977429807186, -0.7002847194671631, -0.022079017013311386, -1.1086724996566772, -0.15869790315628052, -0.00558494683355093, -0.9359939098358154, -0.000680691737215966, -0.012411382049322128, -0.02910660207271576, -0.0002706876548472792, -0.01231589075177908, -0.016836682334542274, -0.022516310214996338, -0.025074567645788193, -0.06004675105214119, -0.0005429700831882656, -0.01833818480372429, -2.037241220474243, -0.578410267829895, -0.004562088754028082, -3.744035005569458, -1.295563817024231, -1.1607588529586792, -0.10679205507040024, -0.002382180653512478, -0.43432775139808655, -0.00033766290289349854, -0.000736918649636209, -0.0004903068183921278, -0.00214406312443316, -2.5033637939486653e-05, -4.410734163684538e-06, -0.0002335037279408425, -0.190564826130867, -5.209310256759636e-05, -0.03210360184311867, -0.005834097974002361, -0.0649309903383255, -0.025489985942840576, -0.05451730266213417, -0.2740079462528229, -0.0206808652728796, -2.9802276912960224e-06, -4.2437604861333966e-05, -0.009910662658512592, -7.629365427419543e-06, -0.00010978573118336499, -0.15095007419586182, -0.01927713118493557, -1.645074735279195e-05, -0.0032299987506121397, -0.05720879137516022, -0.013420365750789642, -0.004611808806657791, -0.011092661879956722, -0.00035124807618558407, -0.014873565174639225, -3.03334903717041, -1.8976644277572632, -0.37572240829467773, -0.001158400671556592, -0.5715996623039246, -0.07341837882995605, -0.004318317398428917, -0.0014803176745772362, -0.0008074360666796565, -0.0029702140018343925, -8.904537389753386e-05, -0.00012265883560758084, -0.00019905969384126365, -0.03130060434341431, -6.151010165922344e-05, -0.000849601230584085, -0.005366799421608448, -0.021148649975657463, -0.06350639462471008, -0.4869723320007324, -0.07150387018918991, -0.000259723310591653, -2.4914430468925275e-05, -0.704939603805542, -0.0014250847743824124, -6.723177648382261e-05, -0.0021167034283280373, -0.00227656913921237, -0.002756607485935092, -0.007707381621003151, -0.02602742426097393, -0.0005663221818394959, -0.012837388552725315, -1.2808234691619873, -3.3626906871795654, -2.551280975341797, -1.1709297895431519, -0.04907061904668808, -0.09320155531167984, -0.0004447901446837932, -1.2419815063476562, -0.15573449432849884, -0.000764673575758934, -0.00043108707177452743, -0.0008991489303298295, -0.003575362963601947, -5.1377883210079744e-05, -4.935142715112306e-05, -0.0011273226700723171, -0.794922947883606, -2.8013790142722428e-05, -0.627086341381073, -0.0317206047475338, -0.052481282502412796, -0.05340274050831795, -0.00025614796322770417, -0.04394303634762764, -0.05672727897763252, -0.0012355559738352895, -0.5676167011260986, -0.00272617326118052, -0.0003090619284193963, -3.886147169396281e-05, -0.13460305333137512, -0.1199517771601677, -0.0015389991458505392, -0.00015352977789007127, -8.237022848334163e-05, -0.0004153581103309989, -0.0027249844279140234, -0.014715113677084446, -0.004933446180075407, -0.07154526561498642, -2.342747211456299, -0.002255040919408202, -2.5510462364763953e-05, -0.0008435266790911555, -2.3245540432981215e-05, -0.0002926159941125661, -0.00020108585886191577, -0.00013863079948350787, -0.0011793570592999458, -0.0012835367815569043, -0.0008195855189114809, -0.006156172137707472, -0.020884374156594276, -0.0005497612874023616, -0.01800397038459778, -0.7964752316474915, -0.839016318321228, -0.2018256038427353, -0.4077340364456177, -1.5758360624313354, -0.022909024730324745, -0.3567602336406708, -0.0018394945655018091, -0.000668659748043865, -0.009067192673683167, -0.2361927032470703, -0.0011508992174640298, -0.08188717067241669, -0.02655993029475212, -7.998623186722398e-05, -0.00015662873920518905, -0.00036793138133361936], "finish_reason": "length"}], "metrics": {"energy": 984.0898696546559, "energy_per_token": 3.8441010533384996, "time": 23.71988, "time_per_token": 0.09265578125}}
{"outputs": [{"text": "text_series = text_series.astype(str)\n    text_series = text_series.str.lower()\n    text_series = text_series.str.replace(\"[^A-Za-z0-9 ]\", \" \")\n    text_series = text_series.str.replace(r\"[^\\w\\s]\", \"\")\n    text_series = text_series.str.split()\n\n    ps = PorterStemmer()\n    text_series = text_series.apply(\n        lambda x: [ps.stem(word) for word in x]\n    )\n    text_series = text_series.str.join(\" \")\n    return text_series", "tokens": ["text", "_", "series", " =", " text", "_", "series", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "\"", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", " \"", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "split", "()", "\n", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " [", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", "]", "\n", "    ", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "join", "(", "\"", " \"", ")", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-1.922326683998108, -0.11127416044473648, -0.0755447968840599, -0.06722789257764816, -0.0335623174905777, -0.00016020445036701858, -0.00010716341057559475, -0.001689555705524981, -1.4370784759521484, -5.960462772236497e-07, -0.16376027464866638, -0.04244786873459816, -0.009794747456908226, -0.37716370820999146, -0.16257551312446594, -0.5809671878814697, -0.015437280759215355, -0.01758871041238308, -0.015758858993649483, -0.026555867865681648, -2.634490556374658e-05, -2.50339189733495e-06, -0.0005525015876628458, -0.05882302299141884, -0.0002146728802472353, -0.14908598363399506, -0.0023818237241357565, -0.10840035229921341, -0.107437863945961, -0.12620151042938232, -0.000403084559366107, -0.0018760239472612739, -0.0028360167052596807, -0.01068372093141079, -4.9828242481453344e-05, -5.8412379075889476e-06, -0.00022027450904715806, -0.5523093342781067, -0.00021407696476671845, -0.00744272256270051, -0.14709660410881042, -1.6122655868530273, -0.09648545831441879, -0.148398295044899, -2.634087085723877, -3.9219088648678735e-05, -0.009717659093439579, -0.007014293223619461, -7.748573807475623e-06, -2.7417760065873154e-05, -0.40260446071624756, -0.005416953936219215, -3.373566141817719e-05, -0.49181127548217773, -0.6905249953269958, -0.0005131834768690169, -0.04632319137454033, -1.775416612625122, -0.30113837122917175, -0.09030510485172272, -0.018194211646914482, -0.053913190960884094, -0.00010287232726113871, -0.0012943708570674062, -0.0008978387922979891, -0.003446949413046241, -3.4570634852570947e-06, -4.005352093372494e-05, -5.221230458118953e-05, -0.10941405594348907, -7.92710343375802e-05, -0.007377404719591141, -0.02189791016280651, -1.3645823001861572, -0.26203304529190063, -0.548068642616272, -0.24843600392341614, -0.002253494691103697, -0.025486962869763374, -0.004414575174450874, -0.051968518644571304, -0.00033480284037068486, -0.038986243307590485, -0.14845521748065948, -0.05334905907511711, -0.02228468842804432, -0.28046727180480957, -1.09372079372406, -0.0009336879593320191, -0.009494625963270664, -0.011774329468607903, -0.011125789023935795, -1.7404405298293568e-05, -8.546940807718784e-05, -0.000342191313393414, -0.8500672578811646, -0.00021419614495243877, -1.4398484230041504, -0.014474392868578434, -0.08135630190372467, -1.3976033926010132, -0.0009996660519391298, -0.8787524700164795, -0.005333836190402508, -0.0015448314370587468, -6.437280717364047e-06, -2.3841855067985307e-07, 0.0, -0.0009802542626857758, -0.011437678709626198, -0.16921594738960266, -0.38239216804504395, -0.005135321523994207, -0.07471267133951187, -0.02100776508450508, -0.06345190852880478, -1.490105023549404e-05, -5.8887653722194955e-05, -7.056941103655845e-05, -0.052007902413606644, -0.0012625826057046652, -1.939735770225525, -0.007948435842990875, -0.002169043058529496, -0.16457027196884155, -0.005821653641760349, -0.984874427318573, -0.016153531149029732, -1.5258672647178173e-05, -0.00011062010162277147, -0.0018115314887836576, -0.030931979417800903, -0.003101659705862403, -0.025224529206752777, -0.0003215749457012862, -1.0490362910786644e-05, -0.0030397421214729548, -0.0716058611869812, -0.043901391327381134, -0.019382014870643616, -2.0146166207268834e-05, -0.5645022988319397, -0.3197227716445923, -0.049142349511384964, -0.00026294111739844084, -0.0023274733684957027, -0.000743708573281765, -0.003980452660471201, -1.0728830375228426e-06, -4.0531076592742465e-06, -3.0397906812140718e-05, -0.04041332006454468, -1.6569954823353328e-05, -0.00014506718434859067, -0.010629937052726746, -0.0069275195710361, -0.00022349244682118297, -0.00010215714428341016, -0.002550921868532896, -0.9680522680282593, -0.09688263386487961, -0.0025424794293940067, -1.07287787614041e-05, -0.00013016807497479022], "finish_reason": "stop"}], "metrics": {"energy": 591.5095302124021, "energy_per_token": 3.606765428124403, "time": 14.490746, "time_per_token": 0.08835820731707317}}
{"outputs": [{"text": "# Lowercase all letters\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters\n    # (except spaces), since some tweets have non-ascii characters in them.\n    # Also remove punctuation.\n    text_series = text_series.str.replace(r'[^a-z0-9 ]+', ' ', regex=True)\n\n    # Tokenize and stem the text\n    porter_stemmer = PorterStemmer()\n    tokenized_text = text_series.str.split()\n    stemmed_text = tokenized_text.apply(lambda tokens: [porter_stemmer.stem(token) for token in tokens])\n\n    # Concatenate the stemmed tokens back into strings\n    processed_text = stemmed_text.str.join(' ')\n\n    return processed_text", "tokens": ["#", " Lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", "\n", "    ", "#", " (", "except", " spaces", ")", ",", " since", " some", " tweets", " have", " non", "-", "ascii", " characters", " in", " them", ".", "\n", "    ", "#", " Also", " remove", " punct", "uation", ".", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "+'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Token", "ize", " and", " stem", " the", " text", "\n", "    ", "porter", "_", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "token", "ized", "_", "text", " =", " text", "_", "series", ".", "str", ".", "split", "()", "\n", "    ", "stem", "med", "_", "text", " =", " token", "ized", "_", "text", ".", "apply", "(", "lambda", " tokens", ":", " [", "porter", "_", "stem", "mer", ".", "stem", "(", "token", ")", " for", " token", " in", " tokens", "])", "\n", "\n", "    ", "#", " Con", "cat", "en", "ate", " the", " stem", "med", " tokens", " back", " into", " strings", "\n", "    ", "processed", "_", "text", " =", " stem", "med", "_", "text", ".", "str", ".", "join", "('", " '", ")", "\n", "\n", "    ", "return", " processed", "_", "text"], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -0.17900756001472473, -0.003421407425776124, -0.21163520216941833, -0.11638980358839035, -0.04013770818710327, -0.03661864623427391, -0.006837778724730015, -5.054346183896996e-05, -1.2516897186287679e-05, -0.00015245705435518175, -0.020135872066020966, -1.7762025890988298e-05, -0.0015425699530169368, -5.471556869451888e-05, -0.0025662605185061693, -0.27608591318130493, -0.0008794969180598855, -0.0025903978385031223, -0.10046375542879105, -0.12845808267593384, -0.011263475753366947, -0.019730612635612488, -0.00016509123088326305, -0.0010287236655130982, -0.04388975724577904, -3.331713914871216, -0.0012534151319414377, -2.1475586891174316, -1.471198320388794, -0.39011695981025696, -0.1273757666349411, -0.4853493571281433, -2.4501984119415283, -3.9570069313049316, -3.775541305541992, -3.1151905059814453, -1.274322748184204, -2.9492716789245605, -0.09360199421644211, -2.8055007457733154, -0.1894664466381073, -1.3290767669677734, -0.09734746813774109, -0.5655038356781006, -0.017294669523835182, -0.008016199804842472, -1.4572932720184326, -2.2743351459503174, -0.8238381147384644, -0.35521984100341797, -0.05937149375677109, -1.6162135601043701, -0.04355895146727562, -0.015046787448227406, -0.45854684710502625, -0.001292942208237946, -0.013095092959702015, -0.002075186464935541, -0.02111176773905754, -7.033323527139146e-06, -9.059495641849935e-05, -0.0008456706418655813, -1.2857712507247925, -0.0002101439022226259, -0.002489208010956645, -0.10617444664239883, -0.14382760226726532, -0.6242746710777283, -0.012185179628431797, -0.5214305520057678, -0.1685379296541214, -1.8715683836489916e-05, -0.0012546057114377618, -0.9080221056938171, -0.0017203782917931676, -4.0649541915627196e-05, -0.4055822491645813, -0.6994842290878296, -0.00029595286468975246, -0.34202131628990173, -0.09868473559617996, -0.36881059408187866, -0.008098030462861061, -0.0048715234734117985, -0.002852421021088958, -0.004778987728059292, -0.030808301642537117, -0.10379055887460709, -0.0007849234389141202, -0.03593818470835686, -4.008586883544922, -0.05190434679389, -2.758270263671875, -0.28617867827415466, -2.471679210662842, -0.7461403012275696, -0.37462183833122253, -0.005353874992579222, -2.3843977451324463, -1.2221503257751465, -0.0007950482540763915, -0.006795273628085852, -0.006300586275756359, -0.007671537809073925, -5.6622808187967166e-05, 0.0, 0.0, -0.004017972387373447, -0.00730711268261075, -0.12215875834226608, -2.7483487129211426, -0.41825032234191895, -0.06956089287996292, -0.43242305517196655, -0.24027764797210693, -0.5127630233764648, -0.00018785618885885924, -0.00019476900342851877, -0.0008431693422608078, -0.2102092206478119, -3.528532761265524e-05, -0.05827504023909569, -0.04750387370586395, -0.3110605478286743, -0.0402335561811924, -0.2024218589067459, -0.01764797605574131, -0.0022461204789578915, -0.11841702461242676, -0.004604214336723089, -0.1308862268924713, -1.5616295058862306e-05, -4.768370445162873e-07, -7.152555099310121e-07, -0.00019894051365554333, -0.016797998920083046, -0.002142516663298011, -0.4103970229625702, -1.6903090476989746, -0.013763993047177792, -0.14870049059391022, -0.008820735849440098, -1.7881377516459906e-06, -6.556489552167477e-06, -7.152555099310121e-07, -0.00010692501382436603, -0.0004972175229340792, -0.00019774865359067917, -0.386457622051239, -0.003679293440654874, -0.015258019790053368, -0.0009707267745397985, -0.00038532938924618065, -0.0004954302567057312, -0.001576015492901206, -0.002514179330319166, -0.1916535347700119, -0.0002337421028641984, -0.04274899885058403, -3.228303909301758, -0.012473075650632381, -0.023376118391752243, -0.004102980252355337, -0.31290575861930847, -0.16317829489707947, -0.009059513919055462, -0.5080536603927612, -0.594396710395813, -0.1758417934179306, -0.679892897605896, -0.05643461272120476, -0.00048315772437490523, -1.4052248001098633, -0.004042430780827999, -0.12022696435451508, -0.0373762771487236, -0.008484389632940292, -8.344646857949556e-07, -1.1920922133867862e-06, -7.152555099310121e-07, -8.189342770492658e-05, -0.06166033819317818, -1.7881377516459906e-06, -1.2159273865108844e-05, -0.33507710695266724, -0.00045003299601376057, -9.476689592702314e-05, -0.0070726508274674416, -0.13581401109695435, -0.00012385078298393637, -0.12009789049625397, -0.0037100547924637794, -6.437280717364047e-06, -1.8358061424805783e-05], "finish_reason": "stop"}], "metrics": {"energy": 735.8576291027066, "energy_per_token": 3.697777030666867, "time": 16.812511, "time_per_token": 0.08448497989949749}}
{"outputs": [{"text": "# Lower case all letters\n    text_series = text_series.str.lower()\n\n    # Replace non-alphanumeric characters except spaces by ''\n    text_series = text_series.apply(lambda x: re.sub(r'[^a-zA-Z0-9 ]', '', x))\n\n    # Replace punctuation by spaces\n    text_series = text_series.apply(lambda x: re.sub(r'[^\\w\\s]', ' ', x))\n\n    # Stem words to their root form\n    ps = PorterStemmer()\n    text_series = text_series.apply(lambda x: \" \".join([ps.stem(word) for word in x.split()]))\n\n    return text_series", "tokens": ["#", " Lower", " case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Replace", " non", "-", "al", "phan", "umeric", " characters", " except", " spaces", " by", " ''", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Replace", " punct", "uation", " by", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " St", "em", " words", " to", " their", " root", " form", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "]))", "\n", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7937904596328735, -1.8074073791503906, -2.919942855834961, -0.8197250962257385, -0.16270701587200165, -0.15701135993003845, -0.0033918251283466816, -0.24829085171222687, -0.10330893099308014, -0.03430752083659172, -0.04794939607381821, -0.009502419270575047, -4.410646579344757e-05, -1.6927575416048057e-05, -0.00018273114983458072, -0.04556707292795181, -2.3603161025675945e-05, -0.002169043058529496, -0.00012540031457319856, -0.0041466690599918365, -0.34611019492149353, -0.0009115354623645544, -0.0035543381236493587, -2.9001803398132324, -0.9945908188819885, -0.1430942267179489, -0.063716359436512, -0.0012063853209838271, -0.010575561784207821, -0.14054498076438904, -2.6904704570770264, -0.4522310197353363, -2.200075387954712, -2.338587999343872, -0.054608508944511414, -0.001165783149190247, -0.1858929842710495, -0.00040642108069732785, -0.0016820580931380391, -0.0019169541774317622, -0.0034797375556081533, -4.768360213347478e-06, -3.480850500636734e-05, -0.00015400654228869826, -0.4385678768157959, -0.0005165196489542723, -0.15319307148456573, -0.08755511790513992, -0.005565623752772808, -0.009191107004880905, -8.082063141046092e-05, -0.0028700134716928005, -0.10506977140903473, -0.01795467734336853, -0.3377525508403778, -0.01122516579926014, -0.10238328576087952, -0.17309598624706268, -5.125986263010418e-06, -0.0003632839070633054, -0.08950447291135788, -3.981510963058099e-05, -0.00443368311971426, -0.14773789048194885, -0.0004818470624741167, -5.686121585313231e-05, -1.5536032915115356, -0.5069189667701721, -0.0001429217227268964, -0.060962166637182236, -0.000409161759307608, -0.01710425689816475, -0.005973344668745995, -0.0036412859335541725, -0.013036026619374752, -0.0010621865512803197, -0.008460157550871372, -1.139955997467041, -0.14068779349327087, -0.03107493929564953, -0.4088456332683563, -2.849905252456665, -0.10719180107116699, -0.0004949536523781717, -0.09645027667284012, -0.0005590544897131622, -0.00205972115509212, -0.0006773561472073197, -0.0009632238652557135, -1.07287787614041e-05, -7.211902266135439e-05, -0.00010191874753218144, -1.1748319864273071, -0.00011908298620255664, -0.024229368194937706, -0.010268004611134529, -0.001734420657157898, -0.035600483417510986, -1.4543427823809907e-05, -0.00015627116954419762, -0.014939099550247192, -0.0050779180601239204, -0.042196933180093765, -0.03304551914334297, -0.07915081083774567, -0.0011609011562541127, -0.0945189893245697, -0.00030870441696606576, -0.00708247534930706, -0.0007462101057171822, -7.533743337262422e-05, -0.05139830708503723, -7.366862701019272e-05, -0.0001137191939051263, -0.001158162602223456, -0.00511753186583519, -0.0019433676498010755, -0.005577596835792065, -0.0008942657150328159, -0.030040472745895386, -1.0293015241622925, -0.0014829363208264112, -2.0189032554626465, -0.5085086226463318, -0.39495453238487244, -0.06728072464466095, -0.1228354275226593, -0.0984795019030571, -0.0021203910000622272, -1.1043381690979004, -0.003356776898726821, -0.0012203158112242818, -2.861018856492592e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0009581027552485466, -0.015729757025837898, -0.025000624358654022, -0.056369487196207047, -0.0004334702098276466, -0.00774275092408061, -0.003867291146889329, -0.003836297197267413, -3.4570634852570947e-06, -5.602820692729438e-06, -0.00014852374442853034, -0.02388675883412361, -0.0006650857976637781, -0.11979580670595169, -0.009256778284907341, -0.00215798057615757, -0.9172700643539429, -0.002520957263186574, -0.0001510267611593008, -0.00016008525562938303, -0.14816436171531677, -0.0023180777207016945, -5.245195097813848e-06, -2.682172998902388e-05, -0.0006481691962108016, -0.11598087847232819, -0.0027560130693018436, -0.005578070878982544, -0.000613143783994019, -7.83174327807501e-05, -0.027173597365617752, -0.00038211196078918874, -0.0012663925299420953, -0.022587057203054428, -0.02274916134774685, -0.003913483582437038, -0.048897288739681244, -0.0002369599969824776, -0.09431713074445724, -0.004683239851146936, -1.5735502529423684e-05, -9.727005090098828e-05, -0.9068430066108704, -3.933898824470816e-06, -6.794906312279636e-06, -1.6689286894688848e-06, -7.867782187531702e-06, -0.12489687651395798], "finish_reason": "stop"}], "metrics": {"energy": 646.5585364685064, "energy_per_token": 3.533106756658505, "time": 15.333375, "time_per_token": 0.0837889344262295}}
{"outputs": [{"text": "# Lowercase all letters and remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.lower().str.replace(r\"[^\\w ]+\", \"\", regex=True)\n\n    # Remove punctuation\n    text_series = text_series.str.replace(r\"[^\\w ]\", \"\", regex=True)\n\n    # Stem each word to its root form\n    porter_stemmer = PorterStemmer()\n    text_series = text_series.apply(\n        lambda x: \" \".join([porter_stemmer.stem(word) for word in x.split()])\n    )\n\n    return text_series", "tokens": ["#", " Lower", "case", " all", " letters", " and", " remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", " ]", "+", "\"", ",", " \"", "\"", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", " ]", "\"", ",", " \"", "\"", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " St", "em", " each", " word", " to", " its", " root", " form", "\n", "    ", "porter", "_", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "porter", "_", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "])", "\n", "    ", ")", "\n", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -3.036473274230957, -0.5459577441215515, -0.18502220511436462, -0.012080362997949123, -0.0314231812953949, -0.0001820160250645131, -0.00237266649492085, -0.0674847736954689, -0.40724727511405945, -0.020977064967155457, -0.03192141652107239, -0.016059335321187973, -0.0917138084769249, -0.004745767917484045, -0.6192656755447388, -0.11416525393724442, -0.05771718919277191, -0.04048784822225571, -0.03277433291077614, -4.172238186583854e-05, -2.288792165927589e-05, -0.0012132910778746009, -0.08416478335857391, -7.271502545336261e-05, -0.07741320133209229, -0.003729770192876458, -1.2064578533172607, -0.10198935866355896, -9.786603914108127e-05, -0.015062171034514904, -0.13035783171653748, -0.045136213302612305, -1.2715821266174316, -0.06323293596506119, -2.0151140689849854, -0.015278448350727558, -0.5512893199920654, -0.0669848844408989, -0.0003793711948674172, -0.00014494798961095512, -0.04477652907371521, -0.029593611136078835, -1.0147603750228882, -0.009156497195363045, -0.0016746795736253262, -0.0012134101707488298, -0.0019832244142889977, -0.018003618344664574, -0.15463301539421082, -0.0009706076816655695, -0.016091711819171906, -0.18470849096775055, -0.04415258392691612, -0.005938741844147444, -0.27015021443367004, -0.0006516240537166595, -0.2728378474712372, -0.0008298290777020156, -0.0029037713538855314, -0.0011360150529071689, -0.00425255810841918, -5.364403477869928e-06, -0.0004687402688432485, -9.131014667218551e-05, -0.01198542956262827, -8.105902816168964e-05, -0.004005268216133118, -0.002150248736143112, -0.012423861771821976, -0.08284174650907516, -0.09225878119468689, -0.0019847711082547903, -0.00027176024741493165, -0.05773283168673515, -0.3778992295265198, -0.00013731967192143202, -0.0010600429959595203, -0.026717793196439743, -0.04588377848267555, -0.00034683887497521937, -7.819823804311454e-05, -0.0006039702566340566, -0.0003897384158335626, -0.009408657439053059, -0.008244646713137627, -0.0005808573332615197, -0.022956907749176025, -0.8433646559715271, -0.0002708068350329995, -0.5250605940818787, -0.008651277050375938, -0.2668292820453644, -0.03716116398572922, -0.0071441433392465115, -0.013644642196595669, -0.20163260400295258, -0.0025557968765497208, -1.5793983936309814, -0.6898199915885925, -0.00022659118985757232, -0.015234891325235367, -0.003328143386170268, -0.0029456105548888445, -2.1457441107486375e-05, -4.768370445162873e-07, 0.0, -0.0009775151265785098, -0.003683806862682104, -0.06017034500837326, -0.10768601298332214, -0.0011530425399541855, -0.014850074425339699, -0.005694476887583733, -0.018111446872353554, -1.0371154530730564e-05, -1.4185804502631072e-05, -0.00018785618885885924, -0.21041351556777954, -0.0004076126788277179, -0.28765028715133667, -0.004185013473033905, -0.002001427114009857, -0.136530801653862, -0.0001823735801735893, -0.011227641254663467, -0.012066347524523735, -5.400034933700226e-05, -2.706014311115723e-05, -0.3654698133468628, -0.0013947292463853955, -1.4066597032069694e-05, -1.6689286894688848e-06, -2.3841855067985307e-07, -2.1934269170742482e-05, -1.5020257706055418e-05, -0.0010656398953869939, -0.3798031806945801, -0.002711193636059761, -0.0008450751192867756, -9.238292841473594e-05, -1.847726889536716e-05, -0.06017685681581497, -0.000454799213912338, -0.0004231034545227885, -0.04563894122838974, -0.013068148866295815, -0.005075901746749878, -0.000824230897706002, -2.884823152271565e-05, -0.0023110604379326105, -0.05572150647640228, -0.00010013079008786008, -0.08655475080013275, -0.0011361341457813978, -5.8412379075889476e-06, -3.2305197237292305e-05], "finish_reason": "stop"}], "metrics": {"energy": 588.8706690731051, "energy_per_token": 3.657581795485125, "time": 13.460911, "time_per_token": 0.08360814285714285}}
{"outputs": [{"text": "text_series = text_series.str.lower()  # convert all letters to lowercase\n    text_series = text_series.str.replace(r'\\W', ' ', regex=True)  # remove non-alphanumeric characters\n    text_series = text_series.str.replace(r'[^\\w\\s]', ' ', regex=True)  # remove punctuation\n\n    ps = PorterStemmer()  # initialize stemmer object\n    text_series = text_series.str.split()  # split each string into words\n    text_series = text_series.apply(lambda x: [ps.stem(word) for word in x])  # stem each word\n    text_series = text_series.str.join(' ')  # join the words back into strings\n    return text_series\n\ninput_series = pd.Series([\"This is a sample text.\", \"Another example!\"])\noutput_series = task_func(input_series)\nprint(output_series.iloc[0])\nprint(output_series.iloc[1])<|endof", "tokens": ["text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "  ", "#", " convert", " all", " letters", " to", " lower", "case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'\\", "W", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "  ", "#", " remove", " non", "-", "al", "phan", "umeric", " characters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "  ", "#", " remove", " punct", "uation", "\n", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "  ", "#", " initialize", " stem", "mer", " object", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "split", "()", "  ", "#", " split", " each", " string", " into", " words", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " [", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", "])", "  ", "#", " stem", " each", " word", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "join", "('", " '", ")", "  ", "#", " join", " the", " words", " back", " into", " strings", "\n", "    ", "return", " text", "_", "series", "\n", "\n", "input", "_", "series", " =", " pd", ".", "Series", "([", "\"", "This", " is", " a", " sample", " text", ".", "\"", ",", " \"", "Another", " example", "!", "\"", "])", "\n", "output", "_", "series", " =", " task", "_", "func", "(", "input", "_", "series", ")", "\n", "print", "(", "output", "_", "series", ".", "il", "oc", "[", "0", "])", "\n", "print", "(", "output", "_", "series", ".", "il", "oc", "[", "1", "])", "<", "|", "end", "of"], "logprobs": [-1.922326683998108, -0.11127416044473648, -0.0755447968840599, -0.06722789257764816, -0.0335623174905777, -0.00016020445036701858, -0.00010716341057559475, -0.001689555705524981, -0.5196074843406677, -0.0005292683490552008, -0.09806522727012634, -0.0014286560472100973, -2.199899673461914, -0.0006075443816371262, -1.8064703941345215, -0.6347576379776001, -0.2923232614994049, -0.032961323857307434, -0.002035809215158224, -0.03432721644639969, -0.014044851064682007, -0.28949007391929626, -0.22530671954154968, -0.0008033862104639411, -0.0040090675465762615, -0.003046635305508971, -0.014626186341047287, -2.610649426060263e-05, -0.00034814971149899065, -0.0006212450098246336, -0.6629170179367065, -0.0006555553991347551, -0.012287159450352192, -0.12168727070093155, -0.25994566082954407, -2.254612684249878, -0.009718367829918861, -0.5569695234298706, -0.0009085579658858478, -0.060140036046504974, -0.002097907941788435, -1.6382609605789185, -0.2563469111919403, -0.00444756867364049, -0.006329253315925598, -0.004519723821431398, -0.0863880142569542, -2.8609820219571702e-05, -1.2931740283966064, -0.1419684886932373, -0.004994534887373447, -0.014501298777759075, -0.0003280101518612355, -0.0015380469849333167, -0.11563029140233994, -1.7120118141174316, -0.03291541710495949, -0.1317424178123474, -0.00016008525562938303, -0.0033585589844733477, -0.0009900197619572282, -0.003962998278439045, -1.9788545614574105e-05, -0.0005060345865786076, -6.937739817658439e-05, -0.11007793992757797, -5.9960475482512265e-05, -0.0156122837215662, -0.07899440079927444, -0.014091163873672485, -0.5886278748512268, -0.055811814963817596, -0.12824910879135132, -0.0044105397537350655, -0.030264753848314285, -0.005565979517996311, -0.033041831105947495, -0.0003588747640606016, -2.884823152271565e-05, -0.5778110027313232, -0.02352563478052616, -0.058335091918706894, -0.008355304598808289, -0.0002711643755901605, -0.0009129646932706237, -0.00041559641249477863, -0.03645222261548042, -3.349725011503324e-05, -0.025943562388420105, -0.010504904203116894, -0.0061109126545488834, -0.0862608402967453, -1.5264995098114014, -0.0011897159274667501, -1.5706777572631836, -0.004507144447416067, -0.002373974770307541, -2.622600959512056e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0009037939016707242, -1.0530860424041748, -1.4543427823809907e-05, -0.9963369369506836, -3.054018497467041, -0.0009815642843022943, -2.740222692489624, -0.07420122623443604, -0.37030699849128723, -0.5299202799797058, -0.0030523398891091347, -0.0378466472029686, -0.012045853771269321, -0.04576968029141426, -2.861018856492592e-06, -1.1444026313256472e-05, -0.00015686711412854493, -1.6180915832519531, -0.00017331528943032026, -0.10417700558900833, -0.013963505625724792, -0.419760525226593, -2.4199192921514623e-05, -0.08142641186714172, -0.3821218013763428, -0.42576998472213745, -0.09335380047559738, -1.2107114791870117, -0.04777894169092178, -0.022658847272396088, -0.05058754235506058, -3.8265450712060556e-05, -0.001627312507480383, -0.004126961808651686, -0.016004549339413643, -2.264974000354414e-06, -4.291525328881107e-06, -5.1377883210079744e-05, -0.059750113636255264, -0.001392586505971849, -0.08800400793552399, -0.08672922104597092, -0.004886826500296593, -0.21777485311031342, -0.006005694158375263, -1.1920858014491387e-05, -3.683499380713329e-05, -0.0008849757141433656, -0.43679147958755493, -0.001791778369806707, -0.003649837803095579, -0.00028320116689428687, -4.005352093372494e-05, -0.0013017522869631648, -0.0065771532244980335, -0.017721762880682945, -1.1324817933200393e-05, -1.5544607639312744, -0.036608416587114334, -0.0012884180760011077, -0.5984000563621521, -0.051857829093933105, -0.013990425504744053, -2.3245540432981215e-05, -0.00045134371612221, -0.00013493580627255142, -0.0005757343024015427, -3.576278118089249e-07, -6.794906312279636e-06, -1.2159273865108844e-05, -0.06393992900848389, -1.1324817933200393e-05, -3.1470757676288486e-05, -0.12413379549980164, -0.00020382710499688983, -0.00010990492592100054, -0.019732482731342316, -3.4570634852570947e-06, -0.21809044480323792, -0.5955625772476196, -1.1668779850006104, -0.10750328004360199, -0.07922603189945221, -0.5629888772964478, -0.010514458641409874, -1.8395323753356934, -0.04801734536886215, -0.0022904847282916307, -1.07287787614041e-05, -6.913899414939806e-05, -0.9775986075401306, -0.01384382601827383, -3.0072970390319824, -0.010680418461561203, -0.11283469945192337, -0.007106977514922619, -0.01086804736405611, -2.634490556374658e-05, -0.00919583160430193, -0.04244706779718399, -0.014950374141335487, -0.08432871103286743, -0.002027838258072734, -0.003998500294983387, -0.010379382409155369, -0.0049055698327720165, -0.021345412358641624, -0.006989789195358753, -0.004169343505054712, -0.00929244700819254, -0.011992850340902805, -0.002201516181230545, -0.0036022078711539507, -0.0025858795270323753, -0.018669595941901207, -0.030032142996788025, -0.061680957674980164, -0.0031172276940196753, -0.0013466347008943558, -0.0007334641413763165, -0.004707800690084696, -0.00038675934774801135, -0.001111009274609387, -0.0003513672563713044, -0.00043561504571698606, -1.4662635294371285e-05, -3.075552376685664e-05, -0.016674436628818512, -0.014742952771484852, -0.09736369550228119, -0.004411251749843359, -0.01763239875435829, -1.811964830267243e-05, -0.00021455370006151497, -0.185854971408844, -0.009371339343488216, -1.6689286894688848e-06, -0.0002698534226510674, -0.006452204193919897, -0.0029404994565993547, -0.5213516354560852, -0.08956856280565262, -0.0009538153535686433, -0.0006881968001835048, -3.2186455882765586e-06, -5.245195097813848e-06, -0.00046921687317080796, -9.274052717955783e-05, 0.0, -0.00013350549852475524, -0.0003405229654163122, -0.001210671616718173, -0.6517772674560547, -7.986990567587782e-06, -1.0371154530730564e-05, -3.933898824470816e-06], "finish_reason": "length"}], "metrics": {"energy": 931.9822230720522, "energy_per_token": 3.640555558875204, "time": 21.853392, "time_per_token": 0.0853648125}}
{"outputs": [{"text": "# lower case\n    text_series = text_series.str.lower()\n\n    # remove all non-alphanumeric characters except spaces\n    text_series = text_series.apply(lambda x: re.sub(r\"[^a-z0-9 ]\", \"\", x))\n\n    # remove punctuation\n    text_series = text_series.str.replace(r\"[^\\w\\s]\", \"\")\n\n    # remove numbers\n    text_series = text_series.str.replace(r\"\\d+\", \"\")\n\n    # remove multiple spaces\n    text_series = text_series.str.replace(r\"\\s+\", \" \")\n\n    # remove leading and trailing spaces\n    text_series = text_series.str.strip()\n\n    # remove empty rows\n    text_series = text_series.replace(r\"^\\s*\", \"\", regex=True)\n    text_series.reset_index(drop=True, inplace=True)\n\n    # initialize stemmer\n    stemmer = PorterStemmer()\n\n", "tokens": ["#", " lower", " case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " remove", " all", " non", "-", "al", "phan", "umeric", " characters", " except", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", "\"", ",", " x", "))", "\n", "\n", "    ", "#", " remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " remove", " numbers", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "\\", "d", "+", "\"", ",", " \"", "\"", ")", "\n", "\n", "    ", "#", " remove", " multiple", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "\\", "s", "+", "\"", ",", " \"", " \"", ")", "\n", "\n", "    ", "#", " remove", " leading", " and", " trailing", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "strip", "()", "\n", "\n", "    ", "#", " remove", " empty", " rows", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "replace", "(", "r", "\"", "^\\", "s", "*", "\"", ",", " \"", "\"", ",", " regex", "=", "True", ")", "\n", "    ", "text", "_", "series", ".", "reset", "_", "index", "(", "drop", "=", "True", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "#", " initialize", " stem", "mer", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "\n"], "logprobs": [-0.7937904596328735, -2.717041015625, -1.6924254894256592, -1.1849199533462524, -0.0034222390968352556, -0.40497782826423645, -0.11159844696521759, -0.05528315529227257, -0.0538160465657711, -0.010961436666548252, -4.792098479811102e-05, -1.2397689715726301e-05, -0.00021669900161214173, -0.04897357150912285, -5.447716102935374e-05, -0.002961775055155158, -0.00022098960471339524, -0.0059593613259494305, -0.5155810713768005, -0.0010383697226643562, -0.006110675632953644, -0.4861912131309509, -2.9312543869018555, -0.24225319921970367, -0.23459270596504211, -0.11345534026622772, -0.001589583931490779, -0.01567225344479084, -0.31833815574645996, -0.7762702107429504, -0.3117928206920624, -0.15126872062683105, -0.0022858462762087584, -0.1894669383764267, -0.0008784249657765031, -0.004867489915341139, -0.0019255208317190409, -0.008394906297326088, -5.960446742392378e-06, -2.455681169521995e-05, -0.00016091958968900144, -0.5693264603614807, -0.0004502712981775403, -0.1973806917667389, -0.05035904422402382, -0.0033521433360874653, -0.03134705126285553, -5.173549288883805e-05, -0.0015547104412689805, -0.049702391028404236, -0.009347247891128063, -1.7358734607696533, -0.1454624980688095, -0.07082942128181458, -0.05017561838030815, -6.556489552167477e-06, -0.0003933132975362241, -1.5710875988006592, -0.0002196785935666412, -2.396077979938127e-05, -0.27566206455230713, -0.6935178637504578, -0.00017557987303007394, -0.10593235492706299, -0.09621144831180573, -0.00029559535323642194, -0.01191216241568327, -0.014818127267062664, -0.005207308568060398, -0.018594827502965927, -0.0007672941428609192, -0.004981961566954851, -0.11586908996105194, -0.11484118551015854, -0.03244698792695999, -0.12416885793209076, -0.0013072286965325475, -0.14263178408145905, -0.0004042761866003275, -0.0027557751163840294, -0.0010313435923308134, -0.0013140147784724832, -3.3378546504536644e-06, -1.0013530300057027e-05, -0.000125281119835563, -0.30384501814842224, -0.00011979816190432757, -0.021467696875333786, -0.06819276511669159, -0.11310184746980667, -0.8637640476226807, -0.14601604640483856, -0.051967497915029526, -0.0006353028584271669, -0.0069747548550367355, -0.00012444675667211413, -0.010719221085309982, -9.595887240720913e-05, -0.02332918532192707, -0.1097862720489502, -0.25170254707336426, -0.009598060511052608, -0.015001107007265091, -0.0004832768754567951, -0.015613339841365814, -2.3177127838134766, -2.28318190574646, -0.18976083397865295, -0.0014730566181242466, -0.021806703880429268, -0.00012659224739763886, -0.00012158608296886086, -0.0003430254873819649, -0.0003332536434754729, -6.437280717364047e-06, -2.622600959512056e-06, -2.4914430468925275e-05, -0.04485027864575386, -3.2186455882765586e-06, -0.00017188502533826977, -0.0015198357868939638, -0.03482884541153908, -0.015933923423290253, -0.19678212702274323, -0.00040558696491643786, -0.3307153284549713, -0.0012246021069586277, -1.07287787614041e-05, -0.0007454953738488257, -0.0013873485149815679, -0.002785970689728856, -0.002611918607726693, -0.009147756733000278, -0.0009731086320243776, -0.01929759420454502, -0.9878093600273132, -2.690778970718384, -0.11274109035730362, -0.08820386976003647, -0.0004233417857903987, -0.004767716862261295, -5.8053239627042785e-05, -7.819823804311454e-05, -0.0001770101225702092, -0.00017712931730784476, -2.3841830625315197e-06, -4.0531076592742465e-06, -1.9907753085135482e-05, -0.010405809618532658, -3.576272320060525e-06, -0.0006151691195555031, -0.000675807474181056, -0.03631049022078514, -0.0013019903562963009, -0.053341034799814224, -0.0005072260973975062, -0.3584168255329132, -0.0002694958820939064, -1.0847986231965479e-05, -0.0004027270770166069, -0.0002632986579556018, -0.10412265360355377, -0.06471201032400131, -0.012882108800113201, -0.0005938435206189752, -0.028327034786343575, -1.0446555614471436, -1.051666021347046, -0.10148768872022629, -0.002379445359110832, -0.040081363171339035, -0.00782886240631342, -0.00041571559268049896, -0.003792001400142908, -3.45700973412022e-05, -4.8993817472364753e-05, -0.0003399271226953715, -0.00018106251081917435, -3.099436753473128e-06, -3.933898824470816e-06, -2.0265373677830212e-05, -0.003583440324291587, -5.722029527532868e-06, -0.0834902673959732, -0.0005953923100605607, -0.0004101150552742183, -0.006739622913300991, -0.0008339979685842991, -0.05495486035943031, -2.3849477767944336, -1.543140172958374, -0.6619645357131958, -0.023438885807991028, -0.001117082079872489, -0.012246180325746536, -5.9960475482512265e-05, -0.00032145579461939633, -0.11416164040565491, -0.00044264530879445374, -4.0531076592742465e-06, -6.079655122448457e-06, -0.21902455389499664, -0.9174396991729736, -0.02070235088467598, -0.09001447260379791, -0.008652458898723125, -0.13042385876178741, -1.0728830375228426e-06, -0.1356274038553238, -1.8611335754394531, -8.34461570775602e-06, -0.004509161692112684, -0.006895910017192364, -0.01651884987950325, -0.00012218205665703863, -0.014706303365528584, -0.00028880240279249847, -0.0006409021443687379, -0.010817458853125572, -2.905169725418091, -0.06915871798992157, -0.00028320116689428687, -0.0010681406129151583, -1.0217703580856323, -1.1714303493499756, -2.1934269170742482e-05, -3.576278118089249e-07, -0.00151078961789608, -0.000310730334604159, -0.002905197674408555, -0.0007061848300509155, -0.012312829494476318, -0.00030620177858509123, -1.0728830375228426e-06, -0.0006428082706406713, -0.00017677174764685333, -0.00012110930401831865, -0.0073912497609853745, -0.021848460659384727, -0.0007746794726699591, -0.1147015243768692, -3.179161548614502, -1.3428385257720947, -0.00437980005517602, -0.031116193160414696, -0.0004904259694740176, -0.280217707157135, -0.006111860740929842, -0.00144710682798177, -0.0026653024833649397, -3.576272320060525e-06, 0.0, -1.311301275563892e-06, -0.0006736631621606648, -0.001935396110638976, -0.11655203998088837], "finish_reason": "length"}], "metrics": {"energy": 894.3633612222671, "energy_per_token": 3.493606879774481, "time": 21.85504, "time_per_token": 0.08537125}}
{"outputs": [{"text": "# lowercase all letters\n    text_series = text_series.str.lower()\n\n    # remove non-alphanumeric characters (except spaces)\n    text_series = text_series.apply(lambda x: re.sub(r'\\W+', ' ', x))\n\n    # remove punctuation\n    text_series = text_series.str.replace('[^\\w\\s]', '')\n\n    # stem words\n    stemmer = PorterStemmer()\n    text_series = text_series.apply(lambda x: ' '.join([stemmer.stem(y) for y in x.split()]))\n\n    # remove leading/trailing whitespaces\n    text_series = text_series.str.strip()\n\n    return text_series", "tokens": ["#", " lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " x", "))", "\n", "\n", "    ", "#", " remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", "\n", "\n", "    ", "#", " stem", " words", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "y", ")", " for", " y", " in", " x", ".", "split", "()", "]))", "\n", "\n", "    ", "#", " remove", " leading", "/", "tra", "iling", " whites", "paces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "strip", "()", "\n", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7937904596328735, -2.717041015625, -0.4057547450065613, -0.7934550046920776, -0.10694513469934464, -0.13481371104717255, -0.0029404994565993547, -0.2222520411014557, -0.11215272545814514, -0.048738233745098114, -0.04328295215964317, -0.006092310883104801, -4.792098479811102e-05, -1.2278481335670222e-05, -0.00017438798386137933, -0.03289845958352089, -2.3245540432981215e-05, -0.0012769886525347829, -9.30981186684221e-05, -0.002862881403416395, -0.3572032153606415, -0.0011437548091635108, -0.004188337363302708, -0.35256755352020264, -0.16836348176002502, -0.03922480344772339, -0.025322746485471725, -0.00032658010604791343, -0.0022505212109535933, -0.09104055911302567, -0.3540979027748108, -0.02614867314696312, -0.05914421007037163, -0.009965664707124233, -0.07388971000909805, -0.0010594476480036974, -0.22030310332775116, -0.0005822870298288763, -0.003530818037688732, -0.001046229270286858, -0.007201191503554583, -2.7418097943154862e-06, -4.410646579344757e-05, -0.00013457823661156, -0.5371364951133728, -0.00031513971043750644, -0.2542790472507477, -0.04400292783975601, -0.0028036832809448242, -0.036063872277736664, -5.8410845667822286e-05, -0.0019016055157408118, -0.055643480271101, -0.009058450348675251, -2.162147045135498, -0.09563049674034119, -0.3650100827217102, -0.0002628219372127205, -0.058587633073329926, -0.00014661667228210717, -0.0002097863471135497, -0.008175242692232132, -0.09096263349056244, -0.007435977924615145, -0.011991319246590137, -0.0011037455406039953, -0.004536456428468227, -0.06134141609072685, -0.01784484274685383, -0.010805783793330193, -0.08348533511161804, -0.0008056493825279176, -0.11456897109746933, -0.0006193388253450394, -0.0030175175052136183, -0.0010389650706201792, -0.0010091932490468025, -2.372236667724792e-05, -1.0728830375228426e-06, -9.77468371274881e-05, -0.09133829176425934, -0.00010609064338495955, -0.03437525033950806, -1.9175878763198853, -0.05904431268572807, -0.035151269286870956, -0.0009966888464987278, -0.004615487065166235, -0.0013983005192130804, -0.01106483768671751, -0.0003897384158335626, -0.00014625910262111574, -0.23599539697170258, -0.045790404081344604, -0.010725235566496849, -0.010929600335657597, -0.0007742029847577214, -0.01044214516878128, -0.9536709785461426, -1.6318858861923218, -1.2390775680541992, -0.002423090161755681, -1.157416582107544, -0.029049864038825035, -0.0016041041817516088, -0.0035870037972927094, -4.768360213347478e-06, -4.768370445162873e-07, -3.576278118089249e-07, -0.0004544417606666684, -0.005259842611849308, -0.02341780811548233, -0.0773739218711853, -0.000614335120189935, -0.008089279755949974, -0.003108908887952566, -0.005441022105515003, -5.722029527532868e-06, -5.960446742392378e-06, -0.0001323135511483997, -0.026021849364042282, -0.0004990047891624272, -0.3301769196987152, -0.007971852086484432, -0.001095886342227459, -0.24050851166248322, -7.760223525110632e-05, -0.00016091958968900144, -6.258291978156194e-05, -0.09960518032312393, -0.0009890670189633965, -7.152531907195225e-06, -2.4676019165781327e-05, -1.9788545614574105e-05, -0.0003667397249955684, -0.9544776082038879, -0.0028962830547243357, -0.005143979098647833, -0.000565249880310148, -5.090107151772827e-05, -0.013645348139107227, -9.738924563862383e-05, -0.0004502712981775403, -0.0262607354670763, -0.0072576445527374744, -0.0020808966364711523, -0.04851521924138069, -0.0001911934232339263, -2.60786771774292, -1.0080571174621582, -2.2542977333068848, -1.8337841033935547, -0.01588335447013378, -0.0003510097449179739, -0.5024726986885071, -1.153883457183838, -0.05114620923995972, -0.0004503904783632606, -0.014543360099196434, -3.5523738915799186e-05, -8.821098163025454e-05, -0.0024205928202718496, -0.0005443998379632831, -1.6689286894688848e-06, -1.3232143828645349e-05, -3.480850500636734e-05, -0.0199152659624815, -3.3378546504536644e-06, -0.00967350509017706, -0.0006860524881631136, -0.0009153467253781855, -0.02929891087114811, -0.00017915551143232733, -0.06047651171684265, -0.003351073944941163, -6.794906312279636e-06, -6.794698856538162e-05, -0.9152593016624451, -4.172316494077677e-06, -3.3378546504536644e-06, -1.6689286894688848e-06, -1.1920858014491387e-05, -0.12315240502357483], "finish_reason": "stop"}], "metrics": {"energy": 639.5051202249527, "energy_per_token": 3.4945634984970098, "time": 15.562081, "time_per_token": 0.08503869398907103}}
{"outputs": [{"text": "# Lowercase all letters\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters (except spaces)\n    text_series = text_series.apply(lambda x: re.sub(r'[^a-zA-Z0-9\\s]', '', x))\n\n    # Remove punctuation\n    text_series = text_series.str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Initialize the stemmer\n    stemmer = PorterStemmer()\n\n    # Iterate over each string in the Series\n    for index, entry in text_series.items():\n\n        # Split the string into words\n        words = entry.split()\n\n        # Stem each word\n        stemmed_words = [stemmer.stem(word) for word in words]\n\n        # Join the stemmed words back into a string\n        text_series.iloc[index] = ' '.join(stemmed_words)\n\n    return text_series", "tokens": ["#", " Lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Initialize", " the", " stem", "mer", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " string", " in", " the", " Series", "\n", "    ", "for", " index", ",", " entry", " in", " text", "_", "series", ".", "items", "():", "\n", "\n", "        ", "#", " Split", " the", " string", " into", " words", "\n", "        ", "words", " =", " entry", ".", "split", "()", "\n", "\n", "        ", "#", " St", "em", " each", " word", "\n", "        ", "stem", "med", "_", "words", " =", " [", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " words", "]", "\n", "\n", "        ", "#", " Join", " the", " stem", "med", " words", " back", " into", " a", " string", "\n", "        ", "text", "_", "series", ".", "il", "oc", "[", "index", "]", " =", " '", " '", ".", "join", "(", "stem", "med", "_", "words", ")", "\n", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -0.17900756001472473, -0.003421407425776124, -0.21163520216941833, -0.11638980358839035, -0.04013770818710327, -0.03661864623427391, -0.006837778724730015, -5.054346183896996e-05, -1.2516897186287679e-05, -0.00015245705435518175, -0.020135872066020966, -1.7762025890988298e-05, -0.0015425699530169368, -5.471556869451888e-05, -0.0025662605185061693, -0.27608591318130493, -0.0008794969180598855, -0.0025903978385031223, -0.10046375542879105, -0.12845808267593384, -0.011263475753366947, -0.019730612635612488, -0.00016509123088326305, -0.0010287236655130982, -0.04388975724577904, -0.3756629526615143, -0.02165856398642063, -0.044927552342414856, -0.01274158526211977, -0.06798875331878662, -0.001073022955097258, -0.18367628753185272, -0.0003798478574026376, -0.002618101192638278, -0.001073142047971487, -0.0043542818166315556, -3.2186455882765586e-06, -6.794906312279636e-06, -9.83428253675811e-05, -0.7042890191078186, -0.0002325502864550799, -0.15038427710533142, -0.05373527482151985, -0.0015195977175608277, -0.025931481271982193, -4.684815212385729e-05, -0.0012672259472310543, -0.05307450518012047, -0.0070731244049966335, -0.33334115147590637, -0.00793885625898838, -0.17935624718666077, -0.0891396775841713, -3.099436753473128e-06, -0.0003844952443614602, -0.09876595437526703, -2.455681169521995e-05, -0.0010661162668839097, -0.11089161783456802, -0.00011014331539627165, -2.884823152271565e-05, -0.4326840937137604, -0.0207720585167408, -0.12350963056087494, -0.0004204819560982287, -0.00015186110977083445, -0.14903268218040466, -0.0002656822034623474, -0.017995422706007957, -0.013081797398626804, -0.003449206706136465, -0.008600102737545967, -0.0010250320192426443, -0.003481163177639246, -0.0720001757144928, -0.020188095048069954, -0.007524008862674236, -0.10159431397914886, -0.000964533886872232, -0.19659391045570374, -0.0010530170984566212, -0.0024078681599348783, -0.0005712069687433541, -0.0007128558354452252, -7.510157047363464e-06, -2.3841830625315197e-06, -8.11782301752828e-05, -0.3261159360408783, -8.713819261174649e-05, -0.04195107892155647, -0.06253239512443542, -0.02723485231399536, -0.026625631377100945, -0.0048596602864563465, -0.010424213483929634, -0.0005347490659914911, -0.0008956949459388852, -2.706014311115723e-05, -0.012911176308989525, -6.854299135738984e-05, -6.0437283536884934e-05, -0.25857335329055786, -0.00034433635300956666, -0.0013365155318751931, -0.0016795588890090585, -0.0013548490824177861, -0.0003321811091154814, -0.0059018866159021854, -0.008753618225455284, -0.0008104139124043286, -0.00519319623708725, -3.107365131378174, -0.3903854787349701, -0.30438706278800964, -0.00026794656878337264, -0.036260250955820084, -0.00020883286197204143, -0.13936036825180054, -0.0014096095692366362, -0.0007697956170886755, -0.0029302777256816626, -8.34461570775602e-06, -1.1920928244535389e-07, -4.768370445162873e-07, -0.0003259842633269727, -0.0012940136948600411, -0.027570633217692375, -0.0003407612966839224, -0.005727783776819706, -3.1290111541748047, -0.005446713417768478, -0.4390118718147278, -0.4922869801521301, -1.5106908082962036, -0.337368369102478, -0.016951080411672592, -0.6353057622909546, -0.475500226020813, -0.0007826602668501437, -0.13184115290641785, -1.219669222831726, -0.01011696457862854, -3.5323781967163086, -0.004671849310398102, -0.18127010762691498, -3.6954811548639555e-06, -1.1920858014491387e-05, -2.1576648578047752e-05, -0.43914535641670227, -4.1483970562694594e-05, -0.0005822870298288763, -1.651511311531067, -0.011963991448283195, -0.02067093923687935, -0.5403122305870056, -0.343782514333725, -0.383759081363678, -0.027254223823547363, -0.30268019437789917, -0.12389370054006577, -0.00045015214709565043, -0.07574639469385147, -0.014328569173812866, -0.006228203885257244, -4.017272294731811e-05, -0.0019595485646277666, -0.03534575551748276, -0.001954194623976946, -0.026485633105039597, -0.0005125877796672285, -0.0034547902178019285, -0.6984883546829224, -1.6927575416048057e-05, -0.03721170127391815, -0.002219476969912648, -1.2469983100891113, -0.0001879753835964948, -0.518945574760437, -0.03434599190950394, -0.01175807137042284, -0.004528030753135681, -0.00024041623692028224, -0.10688172280788422, -0.001693958998657763, -6.353653589030728e-05, -1.2040065485052764e-05, -6.41325386823155e-05, -0.0003778220561798662, -0.0021509623620659113, -0.0026821850333362818, -0.002102547325193882, -8.106198947643861e-06, -1.07287787614041e-05, -5.1020273531321436e-05, -0.0021734442561864853, -0.0002809368306770921, -0.004469405394047499, -0.0008914072532206774, -0.0006820021662861109, -0.776205837726593, -0.01325933076441288, -0.019073881208896637, -0.00016437610611319542, -0.00037674958002753556, -0.5631043910980225, -0.11719413101673126, -0.022133586928248405, -0.8814037442207336, -0.07297609001398087, -0.000179036331246607, -0.14772647619247437, -0.004335290752351284, -0.0009047467028722167, -0.19615674018859863, -1.2569221258163452, 0.0, -5.435795901576057e-05, -0.0002320735511602834, -0.00041237910045310855, -5.578839045483619e-05, -0.1231803372502327, -1.0251946150674485e-05, -8.082063141046092e-05, -4.911301948595792e-05, -0.0003895000845659524, -0.0005123494775034487, -4.768370445162873e-07, -2.0265558760002023e-06, -9.536738616588991e-07, -0.0005050813779234886, -0.0033079448621720076, -0.010179507546126842, -0.0010569468140602112, -0.09568954259157181, -0.0017792837461456656, -1.966933996300213e-05, -5.829164365422912e-05, -1.157217025756836, -5.960446742392378e-06, -4.410734163684538e-06, -1.0728830375228426e-06, -1.2516897186287679e-05, -2.0703518390655518, -0.0014178233686834574], "finish_reason": "stop"}], "metrics": {"energy": 910.0004423999784, "energy_per_token": 3.654620250602323, "time": 21.222208, "time_per_token": 0.08522975100401606}}
{"outputs": [{"text": "# lowercase, replace non-alphanumeric (except spaces), remove punctuation and stem\n    # the output of this function is a pandas.Series\n    return text_series.str.lower()\\\n        .str.replace(r'[^a-zA-Z0-9\\s]', r'')\\\n        .str.replace(r'\\s+', r' ')\\\n        .str.replace(r'^\\s+|\\s+$', r'')\\\n        .str.split()\\\n        .apply(lambda words: \" \".join([PorterStemmer().stem(word) for word in words]))", "tokens": ["#", " lower", "case", ",", " replace", " non", "-", "al", "phan", "umeric", " (", "except", " spaces", ")", ",", " remove", " punct", "uation", " and", " stem", "\n", "    ", "#", " the", " output", " of", " this", " function", " is", " a", " pandas", ".", "Series", "\n", "    ", "return", " text", "_", "series", ".", "str", ".", "lower", "()\\", "\n", "        ", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "'", ",", " r", "''", ")\\", "\n", "        ", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " r", "'", " '", ")\\", "\n", "        ", ".", "str", ".", "replace", "(", "r", "'^", "\\", "s", "+", "|\\", "s", "+", "$'", ",", " r", "''", ")\\", "\n", "        ", ".", "str", ".", "split", "()\\", "\n", "        ", ".", "apply", "(", "lambda", " words", ":", " \"", " \"", ".", "join", "([", "P", "orter", "St", "em", "mer", "()", ".", "stem", "(", "word", ")", " for", " word", " in", " words", "]))", "\n", "\n", "if"], "logprobs": [-0.7937904596328735, -2.717041015625, -0.4057547450065613, -3.309164047241211, -2.8484413623809814, -0.5662049055099487, -0.1240268126130104, -0.128213569521904, -0.004365913104265928, -0.05473921075463295, -2.523580312728882, -0.11402348428964615, -0.31148040294647217, -0.009383031167089939, -0.4085834324359894, -0.5747008323669434, -0.048000868409872055, -0.04158635810017586, -2.1647403240203857, -0.2896014451980591, -0.7241100072860718, -0.01704847440123558, -2.6388442516326904, -3.730422019958496, -2.8630318641662598, -1.5839266777038574, -1.628068208694458, -1.3599374294281006, -0.38205665349960327, -0.26619258522987366, -0.9883466958999634, -2.0239288806915283, -0.023169271647930145, -0.8318259119987488, -0.07761287689208984, -1.3113014698028564, -0.06953709572553635, -0.00014554394874721766, -6.532455881824717e-05, -0.028339434415102005, -0.20112226903438568, -0.0007743220776319504, -0.030669350177049637, -1.6421031951904297, -6.353653589030728e-05, -0.47791486978530884, -0.002591111231595278, -0.21033470332622528, -0.0009196343016810715, -0.00643337145447731, -0.23492848873138428, -0.04317986220121384, -0.19415897130966187, -0.011629054322838783, -0.33514103293418884, -0.13256654143333435, -1.1801649634435307e-05, -0.00030191155383363366, -0.11796676367521286, -3.3854863431770355e-05, -0.0005199749139137566, -0.36967772245407104, -0.00036971885128878057, -5.411955135059543e-05, -0.5859211087226868, -0.03939213976264, -0.09368861466646194, -0.000674616196192801, -0.0006663962849415839, -1.8963727951049805, -0.32627105712890625, -2.248872756958008, -0.0004020121123176068, -0.01194373145699501, -0.0007073761080391705, -0.03159702569246292, -0.0011747133685275912, -0.02586236596107483, -0.04255446419119835, -0.009665004909038544, -0.37919870018959045, -0.3502149283885956, -0.19853365421295166, -5.578839045483619e-05, -0.06121426820755005, -0.027316631749272346, -0.01729513704776764, -0.2520469129085541, -0.00027569307712838054, -0.002625472843647003, -0.0017650038935244083, -0.5701115727424622, -0.0015404274454340339, -0.5320124626159668, -0.023685375228524208, -0.005956872832030058, -0.26791074872016907, -0.0005814530304633081, -0.0003797286772169173, -0.2936549484729767, -0.0013849677052348852, -5.125986263010418e-06, -0.006622036453336477, -0.0053679849952459335, -0.00016842853801790625, -0.021712690591812134, -0.10063742846250534, -0.14699235558509827, -0.0002300474588992074, -0.00693095289170742, -0.003962167073041201, -2.2021007537841797, -0.0025253568310290575, -0.35402268171310425, -1.357534408569336, -0.00010239553375868127, -0.0014382981462404132, -0.0011243456974625587, -0.03843829035758972, -0.01044851541519165, -0.0484095998108387, -2.8376412391662598, -0.034791313111782074, -2.6024069786071777, -0.025292061269283295, -0.0007805161876603961, -0.00010656742961145937, -0.09730442613363266, -0.09075058251619339, -2.264974000354414e-06, -2.372236667724792e-05, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.0038376033771783113, -0.00022575691400561482, -8.654219709569588e-05, -0.002752208849415183, -0.10110526531934738, -0.009018165990710258, -0.007269952911883593, -0.00013457823661156, -4.4225667807040736e-05, -0.00032443503732793033, -0.5896890759468079, -0.9215940237045288, -0.04175890237092972, -1.0562644004821777], "finish_reason": "stop"}], "metrics": {"energy": 522.1476702537532, "energy_per_token": 3.552024967712607, "time": 12.399081, "time_per_token": 0.08434748979591837}}
{"outputs": [{"text": "# Remove non-alphanumeric characters (except spaces)\n    clean_text = [re.sub(r'[^a-zA-Z0-9 ]', ' ', str(text)) for text in text_series]\n\n    # Convert to lowercase\n    lower_case = [text.lower() for text in clean_text]\n\n    # Remove punctuation\n    no_punc = [re.sub(r'[^\\w\\s]', ' ', text) for text in lower_case]\n\n    # Apply Porter Stemmer\n    porter = PorterStemmer()\n    stem = [porter.stem(word) for text in no_punc for word in text.split()]\n\n    # Join list of words into single strings\n    join_words = [' '.join(text) for text in stem]\n\n    # Convert the list to a pandas Series\n    result_series = pd.Series(join_words)\n\n    return result_series", "tokens": ["#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "clean", "_", "text", " =", " [", "re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " '", " '", ",", " str", "(", "text", "))", " for", " text", " in", " text", "_", "series", "]", "\n", "\n", "    ", "#", " Convert", " to", " lower", "case", "\n", "    ", "lower", "_", "case", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " clean", "_", "text", "]", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "no", "_", "p", "unc", " =", " [", "re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " lower", "_", "case", "]", "\n", "\n", "    ", "#", " Apply", " Porter", " St", "em", "mer", "\n", "    ", "porter", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "stem", " =", " [", "porter", ".", "stem", "(", "word", ")", " for", " text", " in", " no", "_", "p", "unc", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "\n", "    ", "#", " Join", " list", " of", " words", " into", " single", " strings", "\n", "    ", "join", "_", "words", " =", " ['", " '", ".", "join", "(", "text", ")", " for", " text", " in", " stem", "]", "\n", "\n", "    ", "#", " Convert", " the", " list", " to", " a", " pandas", " Series", "\n", "    ", "result", "_", "series", " =", " pd", ".", "Series", "(", "join", "_", "words", ")", "\n", "\n", "    ", "return", " result", "_", "series"], "logprobs": [-0.7937904596328735, -3.3861312866210938, -0.44961872696876526, -0.01922614686191082, -0.07749781757593155, -0.0004407388041727245, -0.0009473841637372971, -0.09699894487857819, -0.7214792966842651, -0.03264857828617096, -0.066131092607975, -0.011708351783454418, -0.6493763327598572, -0.006195743102580309, -3.3904590606689453, -0.0451938696205616, -0.20778603851795197, -0.1645260900259018, -3.037078857421875, -0.07599259167909622, -0.00010072677832795307, -0.005310950800776482, -0.1175442710518837, -0.02155088447034359, -0.5440680980682373, -0.02403910830616951, -0.17135421931743622, -0.21688583493232727, -9.894321920000948e-06, -0.00023922442051116377, -0.02497597597539425, -1.4305012882687151e-05, -0.0014357983600348234, -0.6863377690315247, -0.0001951265730895102, -1.1920858014491387e-05, -1.0564055442810059, -0.39959025382995605, -0.0003337303060106933, -1.693856954574585, -0.0011561383726075292, -0.00032085992279462516, -2.1429622173309326, -0.012011932209134102, -0.5429046750068665, -0.036571066826581955, -0.04085548594594002, -0.0003871168300975114, -6.5205356804654e-05, -0.003318044124171138, -0.0006368515896610916, -9.941560711013153e-05, -0.07614316791296005, -0.003953974228352308, -0.24662496149539948, -0.0014068715972825885, -0.023091228678822517, -1.1297715902328491, -0.540945291519165, -0.004788597580045462, -0.042298756539821625, -0.35073912143707275, -0.00016640232934150845, -1.6530981063842773, -0.042257729917764664, -1.709702730178833, -0.6534485220909119, -0.0219415295869112, -0.21608363091945648, -0.010088523849844933, -0.005273360759019852, -8.737658936297521e-05, -0.008727147243916988, -5.030505417380482e-05, -2.074220174108632e-05, -0.0006642519147135317, -4.6491513785440475e-06, -2.861018856492592e-06, -0.0008366183610633016, -0.00045908879837952554, -0.004919448867440224, -0.0004646890447475016, -0.00840743724256754, -0.13847394287586212, -0.06409949064254761, -0.015171137638390064, -0.09529101848602295, -0.00040999590419232845, -1.2637494802474976, -0.0004349001101218164, -1.6868003606796265, -0.030938219279050827, -0.013878626748919487, -0.059268251061439514, -0.20987334847450256, -1.728519782773219e-05, -0.0016481400234624743, -0.019633596763014793, -0.005210747476667166, -0.02071414329111576, -0.0058212983421981335, -0.07002425938844681, -0.00030191155383363366, -0.09714975208044052, -0.00020418466010596603, -0.004354875069111586, -0.00016223068814724684, -5.829164365422912e-05, -0.8627536296844482, -7.259582343976945e-05, -8.356221951544285e-05, -0.24147024750709534, -0.004691545385867357, -0.0060248905792832375, -3.71926071238704e-05, -3.302042750874534e-05, -0.00048423008411191404, -1.0728830375228426e-06, -2.264974000354414e-06, -0.00010013079008786008, -0.002604427980259061, -0.0059415861032903194, -0.0004407388041727245, -0.021757831797003746, -2.689087152481079, -2.2573935985565186, -1.790602445602417, -0.00013076403411105275, -0.40229660272598267, -0.48994186520576477, -0.001213648240081966, -1.7252578735351562, -0.1854739785194397, -0.0025699466932564974, -2.264974000354414e-06, -1.1920928244535389e-07, 0.0, -0.0007488307310268283, -0.0049104331992566586, -0.022397417575120926, -0.23835641145706177, -2.624995231628418, -0.06652768701314926, -0.2739759385585785, -5.757642793469131e-05, -7.83174327807501e-05, -0.0015222163638100028, -0.0208111722022295, -0.0026787372771650553, -0.015315194614231586, -0.07753477990627289, -0.0010749283246695995, -0.0006146925734356046, -1.1920922133867862e-06, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.0016148157883435488, -0.0004664763400796801, -7.903263758635148e-05, -0.014028042554855347, -0.0005532164941541851, -0.0004124982515349984, -0.03366110101342201, -0.004966778680682182, -0.004134085029363632, -0.2674636244773865, -0.0004258441040292382, -0.18595048785209656, -0.9020230770111084, -3.7511961460113525, -0.18199381232261658, -0.6965221166610718, -1.5677708387374878, -1.5105470418930054, -1.2920290231704712, -0.14187952876091003, -0.0004159538948442787, -3.175790786743164, -0.5995845198631287, -1.5084083080291748, -0.0033475097734481096, -0.9329915642738342, -0.000196556793525815, -0.000446696620201692, -0.0002469711471349001, -0.040732573717832565, -0.7331441640853882, -0.05466054379940033, -0.0026145342271775007, -0.0001774868869688362, -7.986990567587782e-06, -0.055797722190618515, -0.005613515619188547, -0.0020502039697021246, -0.042029839009046555, -0.0005520250415429473, -0.6141414642333984, -1.0272305011749268, -2.5585556030273438, -0.6424572467803955, -0.9240813851356506, -0.02151973359286785, -0.8062663674354553, -0.08841373771429062, -0.5690354108810425, -0.000686767278239131, -2.071584939956665, -1.1738641262054443, -0.01102251186966896, -0.0003469580551609397, -0.0025100174825638533, -1.2397689715726301e-05, -0.0031571565195918083, -0.003325291909277439, -0.0030490122735500336, -1.0013530300057027e-05, -1.3470558769768104e-05, -0.04439789801836014, -0.0016189813613891602, -0.17236801981925964, -0.00027247529942542315, -0.05095601826906204, -0.0019502682844176888, -4.9232225137529895e-05, -0.000278195773717016], "finish_reason": "stop"}], "metrics": {"energy": 779.2722063198092, "energy_per_token": 3.4634320280880413, "time": 19.123789, "time_per_token": 0.08499461777777777}}
{"outputs": [{"text": "# Lowercase all letters\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.replace(r\"[^a-z0-9 ]\", \" \", regex=True)\n\n    # Remove punctuation\n    text_series = text_series.str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Apply stemming using the PorterStemmer from NLTK\n    stemmer = PorterStemmer()\n    text_series = text_series.apply(lambda x: ' '.join([stemmer.stem(word) for word in x.split()]))\n\n    # Remove leading/trailing whitespaces\n    text_series = text_series.str.strip()\n\n    return text_series", "tokens": ["#", " Lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "\"", ",", " \"", " \"", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Apply", " stemming", " using", " the", " Porter", "St", "em", "mer", " from", " N", "LT", "K", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "]))", "\n", "\n", "    ", "#", " Remove", " leading", "/", "tra", "iling", " whites", "paces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "strip", "()", "\n", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -0.17900756001472473, -0.003421407425776124, -0.21163520216941833, -0.11638980358839035, -0.04013770818710327, -0.03661864623427391, -0.006837778724730015, -5.054346183896996e-05, -1.2516897186287679e-05, -0.00015245705435518175, -0.020135872066020966, -1.7762025890988298e-05, -0.0015425699530169368, -5.471556869451888e-05, -0.0025662605185061693, -0.27608591318130493, -0.0008794969180598855, -0.0025903978385031223, -0.10046375542879105, -0.12845808267593384, -0.011263475753366947, -0.019730612635612488, -0.00016509123088326305, -0.0010287236655130982, -0.04388975724577904, -0.3756629526615143, -0.02165856398642063, -0.044927552342414856, -0.01274158526211977, -0.06798875331878662, -0.001073022955097258, -0.18367628753185272, -0.0003798478574026376, -0.002618101192638278, -0.001073142047971487, -0.0043542818166315556, -3.2186455882765586e-06, -6.794906312279636e-06, -9.83428253675811e-05, -0.7314687371253967, -2.1815061700181104e-05, -0.0012978235026821494, -0.02475527487695217, -0.05589275807142258, -0.49691158533096313, -0.14142687618732452, -0.13958857953548431, -0.033605773001909256, -7.510157047363464e-06, -0.00027855331427417696, -0.7627105116844177, -0.00022015532886143774, -2.288792165927589e-05, -0.24768765270709991, -0.6226173043251038, -0.00015567521040793508, -0.08324164152145386, -0.9141082167625427, -0.19913029670715332, -0.0021177739836275578, -0.003628814360126853, -0.002632131101563573, -0.0010852882405743003, -0.0068853734992444515, -0.016117166727781296, -0.0004938812926411629, -0.005451930221170187, -0.125523641705513, -0.05120714381337166, -0.007750912569463253, -0.11302657425403595, -0.001167211914435029, -0.1984737366437912, -0.0010299145942553878, -0.004931192379444838, -0.000550357042811811, -0.0027589849196374416, -2.3841830625315197e-06, -8.475421054754406e-05, -7.10462118149735e-05, -0.012613872066140175, -4.458328112377785e-05, -0.011943378485739231, -0.0029130426701158285, -0.037767790257930756, -2.6698615550994873, -0.025234408676624298, -0.0732923150062561, -0.002950840163975954, -0.0025247621815651655, -0.0002051381452474743, -0.007764042820781469, -0.0001597276859683916, -0.00013505500101018697, -0.5131704807281494, -0.0006923662149347365, -0.0045370496809482574, -0.002678142860531807, -0.001095290994271636, -0.00022671037004329264, -0.007392078172415495, -0.010592193342745304, -0.0008611546363681555, -0.01668674685060978, -2.349055767059326, -0.643549919128418, -2.8476452827453613, -1.1110999584197998, -0.29217329621315, -0.07306728512048721, -3.1470757676288486e-05, -0.00014602071314584464, -1.33775794506073, -0.4707542955875397, -0.0004981707315891981, -6.890059739816934e-05, -0.03459786996245384, -0.002420830773189664, -0.6165215373039246, -0.012983311899006367, -0.0009351171320304275, -0.0026875350158661604, -4.887569048150908e-06, -5.960462772236497e-07, -4.768370445162873e-07, -0.000366263062460348, -0.002761362586170435, -0.05247879400849342, -0.0802038311958313, -0.0006382812280207872, -0.008388996124267578, -0.006149656139314175, -0.01252405159175396, -9.298280929215252e-06, -9.179073458653875e-06, -6.711257447022945e-05, -0.09732595086097717, -0.0005141366855241358, -0.057276900857686996, -0.04069652035832405, -0.0010436094598844647, -0.9805757403373718, -3.814624506048858e-05, -0.00012396997772157192, -0.00011455356434453279, -0.059409014880657196, -0.0010786197381094098, -2.264974000354414e-06, -1.764281842042692e-05, -9.417489309271332e-06, -0.0006254147156141698, -0.2149689942598343, -0.0014662717003375292, -0.0044086407870054245, -0.0003084660565946251, -4.51792984677013e-05, -0.015404295176267624, -0.00019524575327523053, -0.0004609952447935939, -0.004261223133653402, -0.01559291873127222, -0.0016520674107596278, -0.0223335362970829, -0.00024244230007752776, -2.417820692062378, -0.6981369853019714, -1.0961778163909912, -1.575818419456482, -0.004496107809245586, -8.594620157964528e-05, -0.39530807733535767, -0.838508129119873, -0.10304894298315048, -0.00037305548903532326, -0.010838567279279232, -4.494089080253616e-05, -6.878139538457617e-05, -0.0010032388381659985, -0.00022706791060045362, -2.9802276912960224e-06, -1.2636104656849056e-05, -1.645074735279195e-05, -0.007504960056394339, -1.4305104514278355e-06, -0.013616655021905899, -0.0003951007383875549, -0.0007346553611569107, -0.01218494400382042, -0.00021634146105498075, -0.058444052934646606, -0.0018474669195711613, -6.198863957251888e-06, -0.00012957210128661245], "finish_reason": "stop"}], "metrics": {"energy": 711.0412203693387, "energy_per_token": 3.59111727459262, "time": 16.823393, "time_per_token": 0.08496663131313131}}
{"outputs": [{"text": "# Step 1: Conversion to lowercase\n    text_series = text_series.str.lower()\n\n    # Step 2: Removal of non-alphanumeric characters (except spaces)\n    text_series = text_series.apply(\n        lambda x: re.sub(r'[^a-z0-9 ]', '', x)\n    )\n\n    # Step 3: Removal of punctuation\n    text_series = text_series.str.replace(\n        r'[^\\w\\s]', ''\n    )\n\n    # Step 4: Stemming each word to its root form\n    porter_stemmer = PorterStemmer()\n    text_series = text_series.apply(\n        lambda x: ' '.join([porter_stemmer.stem(word) for word in x.split()])\n    )\n    return text_series", "tokens": ["#", " Step", " ", "1", ":", " Con", "version", " to", " lower", "case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Rem", "oval", " of", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "0", "-", "9", " ]", "'", ",", " ''", ",", " x", ")", "\n", "    ", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Rem", "oval", " of", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "\n", "        ", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", "\n", "    ", ")", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " St", "em", "ming", " each", " word", " to", " its", " root", " form", "\n", "    ", "porter", "_", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " '", " '", ".", "join", "([", "porter", "_", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "])", "\n", "    ", ")", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-0.7937904596328735, -3.7590713500976562, -0.02989100106060505, -0.033600009977817535, -0.0709412544965744, -3.6594901084899902, -1.2102700471878052, -0.10759235173463821, -0.09949823468923569, -0.07993633300065994, -0.11786070466041565, -0.006265521049499512, -0.35168805718421936, -0.09975041449069977, -0.06496283411979675, -0.06098302826285362, -0.007203913759440184, -2.3603161025675945e-05, -8.702239938429557e-06, -0.00013350549852475524, -0.05477510020136833, -1.8954096958623268e-05, -0.002484927186742425, -3.45700973412022e-05, -0.018929896876215935, -0.09713384509086609, -0.0008164886385202408, -0.0021084952168166637, -0.01102333702147007, -0.0005438040825538337, -0.007461891043931246, -0.012114282697439194, -0.41154271364212036, -0.4722383916378021, -0.0018881603609770536, -0.10424575209617615, -0.0065508619882166386, -0.028078557923436165, -0.00011252723925281316, -0.0007269124034792185, -0.0413205660879612, -0.50980544090271, -0.04058286175131798, -0.07091737538576126, -0.011168228462338448, -0.055918458849191666, -0.0013672299683094025, -0.2824428379535675, -0.00044907975825481117, -0.002354232594370842, -0.0010149095905944705, -0.003337767207995057, -4.6491513785440475e-06, -5.006777428206988e-06, -8.320462075062096e-05, -0.3678741157054901, -0.00028772983932867646, -1.5901461839675903, -0.009014385752379894, -0.0048626260831952095, -0.1316523402929306, -0.0006871246150694788, -0.09402462095022202, -4.1960789531003684e-05, -0.0021214615553617477, -0.023539258167147636, -0.03577751666307449, -1.554155707359314, -0.010325700975954533, -0.16104000806808472, -0.12651920318603516, -4.6491513785440475e-06, -0.00027938754647038877, -2.1139791011810303, -0.0001045410826918669, -5.149708886165172e-05, -0.44071757793426514, -1.0745397806167603, -0.0007965967524796724, -0.2117714136838913, -0.00012146688823122531, -0.03498172387480736, -0.5087363719940186, -0.21320125460624695, -0.028073342517018318, -3.349725011503324e-05, -0.0033776871860027313, -0.010362629778683186, -0.0010269373888149858, -0.0018582948250696063, -0.014350426383316517, -0.0004210777406115085, -0.016859890893101692, -0.004557223059237003, -0.056855786591768265, -0.01378045417368412, -0.0006915323319844902, -0.01753084547817707, -0.009414798580110073, -0.10635345429182053, -0.001540784491226077, -0.2887369990348816, -0.00032205163734033704, -0.003033443121239543, -0.0006653240998275578, -0.0006885541952215135, -5.602820692729438e-06, -5.280832192511298e-05, -8.391981828026474e-05, -1.3432137966156006, -0.00013672371278516948, -0.02512676641345024, -0.04366109147667885, -2.0412583351135254, -0.006905973423272371, -0.058681052178144455, -0.05511067435145378, -0.01802164874970913, -0.09701430797576904, -0.007253857795149088, -0.027495251968503, -0.00021026308240834624, -0.035462312400341034, -0.0010459910845384002, -8.594620157964528e-05, -0.6794720888137817, -0.3869472146034241, -0.006746135652065277, -2.8609820219571702e-05, -0.006822623778134584, -0.01418060902506113, -0.0007934997556731105, -0.00715680792927742, -0.0707445740699768, -0.0005240259342826903, -0.004794529639184475, -0.003305212128907442, -0.26903918385505676, -0.001060757553204894, -0.007951037026941776, -2.349470615386963, -0.0058147800154984, -0.17660409212112427, -0.050181176513433456, -0.008750781416893005, -0.036436937749385834, -0.13896425068378448, -0.009506315924227238, -1.544407844543457, -0.5550212860107422, -0.00032181330607272685, -0.01820182055234909, -0.0030053947120904922, -0.0017535799415782094, -8.106198947643861e-06, -3.576278118089249e-07, 0.0, -0.0027694464661180973, -0.003969766199588776, -0.0727623999118805, -0.11297845095396042, -0.0002469711471349001, -0.006684442982077599, -0.003993394784629345, -0.003036176785826683, -1.9073468138230965e-06, -9.65590606938349e-06, -0.00012265883560758084, -0.05599330738186836, -8.082063141046092e-05, -0.008303405717015266, -0.0023283057380467653, -0.0027487610932439566, -0.028693033382296562, -0.0003296785580459982, -0.3275687098503113, -3.397406908334233e-05, -0.0002335037279408425, -0.00014506718434859067, -1.0182218551635742, -0.028592944145202637, -2.0146166207268834e-05, -2.145764938177308e-06, -5.960462772236497e-07, -5.6503606174374e-05, -0.0002485204895492643, -0.0010213402565568686, -0.19941169023513794, -0.004179552663117647, -0.030471639707684517, -0.0010456338059157133, -0.00032264748006127775, -0.012027597054839134, -0.000979420612566173, -0.0012281740782782435, -0.018697792664170265, -0.00199167151004076, -0.0036473434884101152, -0.0037349958438426256, -4.2199197196168825e-05, -0.0011379201896488667, -2.9909937381744385, -0.043770525604486465, -0.0027951241936534643, -1.3828182090946939e-05, -0.00013767725613433868], "finish_reason": "stop"}], "metrics": {"energy": 784.1080341148385, "energy_per_token": 3.806349680169119, "time": 18.07327, "time_per_token": 0.08773432038834952}}
{"outputs": [{"text": "text_series = text_series.apply(str)\n    text_series = text_series.str.lower()\n    text_series = text_series.str.replace(r'[^\\w\\s]', ' ', regex=True)\n    text_series = text_series.str.replace(r'\\d', '', regex=True)\n    text_series = text_series.str.replace(r'\\s+', ' ', regex=True)\n    ps = PorterStemmer()\n    text_series = text_series.apply(lambda x: ' '.join([ps.stem(word) for word in x.split()]))\n    return text_series", "tokens": ["text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "str", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'\\", "d", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "]))", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-1.922326683998108, -0.11127416044473648, -0.0755447968840599, -0.06722789257764816, -0.0335623174905777, -0.00016020445036701858, -0.00010716341057559475, -0.001689555705524981, -2.992034912109375, -0.0037303639110177755, -1.6170481443405151, -1.1721470355987549, -0.48133522272109985, -0.14859898388385773, -0.45469844341278076, -0.015717318281531334, -0.020852968096733093, -0.018529415130615234, -0.014769147150218487, -2.312633478140924e-05, -1.3351351299206726e-05, -0.0005209281225688756, -0.19481326639652252, -0.00038366109947673976, -0.2656460702419281, -0.0006565084331668913, -0.08764708042144775, -0.1252535879611969, -0.15474729239940643, -0.00048375347978435457, -0.0029962430708110332, -0.002339128637686372, -0.007071230560541153, -3.099393507000059e-05, -9.655486064730212e-05, -0.00014006110723130405, -0.4454821050167084, -0.00029762129997834563, -0.008939363993704319, -0.21625831723213196, -0.18720746040344238, -1.211759328842163, -0.0235641747713089, -0.37711718678474426, -0.008816837333142757, -0.08967144787311554, -0.003963710740208626, -0.12102968245744705, -0.000681883015204221, -0.0003968881501350552, -0.6581035256385803, -1.0772579908370972, -1.8613812923431396, -0.027746541425585747, -0.006162214558571577, -0.011793768964707851, -0.001450320822186768, -0.07885625958442688, -0.011781633831560612, -0.08725768327713013, -0.0001864259538706392, -0.001896846224553883, -0.0007546676206402481, -0.0028249616734683514, -4.0531076592742465e-06, -4.172316494077677e-06, -7.581423415103927e-05, -0.13389301300048828, -5.209310256759636e-05, -0.015221976675093174, -0.05557649955153465, -0.00871213898062706, -0.3217169940471649, -0.2027122527360916, -0.3218289017677307, -3.433168603805825e-05, -0.19774504005908966, -0.00010549465514486656, -0.0004433602443896234, -0.00012540031457319856, -0.00024673278676345944, -0.00017248096992261708, -0.024199580773711205, -0.07873649150133133, -0.3863152861595154, -0.003821690334007144, -0.0036012576892971992, -0.0031923307105898857, -0.002970332745462656, -1.0490362910786644e-05, -1.5258672647178173e-05, -9.059495641849935e-05, -0.319705992937088, -6.532455881824717e-05, -0.09158926457166672, -0.05578870326280594, -0.023334775120019913, -0.47161561250686646, -0.33809521794319153, -0.3891480565071106, -3.6477376852417365e-05, -0.0026830171700567007, -0.0001282609737245366, -0.013320619240403175, -0.0005781171494163573, -0.00014602071314584464, -0.00019560330838430673, -0.00020108585886191577, -0.059776052832603455, -0.26970353722572327, -1.5767979621887207, -0.003144678892567754, -0.003159533254802227, -2.145764938177308e-06, 0.0, 0.0, -0.0012698451755568385, -0.004877098836004734, -0.041623521596193314, -0.20816220343112946, -0.0031209117732942104, -0.03617873787879944, -0.0069349780678749084, -0.02357081137597561, -1.7762025890988298e-05, -5.972207145532593e-05, -6.997340824455023e-05, -0.11864573508501053, -0.0009975224966183305, -0.08578119426965714, -0.023526333272457123, -0.003186270361766219, -0.2124321311712265, -4.458328112377785e-05, -0.0001147919538198039, -0.00013672371278516948, -0.07064760476350784, -0.003515019081532955, -5.960446742392378e-06, -2.1934269170742482e-05, -0.0006915323319844902, -0.10696891695261002, -0.0029601112473756075, -0.005043877754360437, -0.0005243833875283599, -0.00019834458362311125, -0.04246900603175163, -0.00012659224739763886, -0.0009666775586083531, -0.016851333901286125, -0.02490888722240925, -0.0027982147876173258, -0.18581536412239075, -0.07312911748886108, -0.0022903657518327236, -8.22540732769994e-06, -3.93382906622719e-05], "finish_reason": "stop"}], "metrics": {"energy": 589.4983718414305, "energy_per_token": 3.754766699626946, "time": 13.864256, "time_per_token": 0.08830736305732484}}
{"outputs": [{"text": "ps = PorterStemmer()\n    text_series = text_series.str.lower()\n    text_series = text_series.apply(lambda x: re.sub('[^A-Za-z ]+', \" \", x))\n    text_series = text_series.apply(lambda x: re.sub('[!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]+', \"\", x))\n    text_series = text_series.apply(lambda x: [ps.stem(word) for word in x.split()])\n    text_series = text_series.apply(lambda x: ' '.join(x))\n\n    return text_series", "tokens": ["ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "A", "-", "Z", "a", "-", "z", " ]", "+'", ",", " \"", " \"", ",", " x", "))", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "!", "\"", "#", "$", "%", "&\\", "'", "()", "*", "+", ",", "-", ".", "/", ":", ";<", "=>", "?", "@", "[\\\\", "]^", "_", "`", "{|", "}~", "]+", "'", ",", " \"", "\"", ",", " x", "))", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " [", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "])", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "x", "))", "\n", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.965488076210022, -0.014607389457523823, -0.003288221312686801, -2.50339189733495e-06, 0.0, 0.0, -0.0016313589876517653, -0.04605740308761597, -0.22977814078330994, -1.1394211053848267, -0.23115703463554382, -0.08215579390525818, -0.04873516783118248, -0.04093364626169205, -0.0001411338453181088, -4.7205765440594405e-05, -0.0018314032349735498, -0.43612316250801086, -0.0005436849314719439, -0.12635941803455353, -0.0036757304333150387, -0.16837939620018005, -0.02523161843419075, -0.17240925133228302, -0.002008446492254734, -0.010660839267075062, -0.007941693998873234, -0.025964470580220222, -3.9457496313843876e-05, -0.00038580605178140104, -0.0003408804477658123, -0.4352956712245941, -0.0009223736124113202, -0.1521238088607788, -0.06054484844207764, -0.007710930425673723, -0.08767776191234589, -0.00016032364510465413, -0.01163011509925127, -0.6360238194465637, -0.09067513048648834, -0.03469505533576012, -2.680230140686035, -7.795983401592821e-05, -0.002338058315217495, -0.0038602848071604967, -3.099436753473128e-06, -4.0411134250462055e-05, -0.4758167862892151, -0.3120478093624115, -0.00021801002731081098, -3.4016075134277344, -1.332516074180603, -0.0010719512356445193, -0.03129875659942627, -0.026849403977394104, -0.05036051943898201, -0.010155080817639828, -0.06869260966777802, -0.000931544229388237, -0.007638650014996529, -0.004339682403951883, -0.01166452094912529, -5.602820692729438e-06, -8.702239938429557e-06, -0.00028796817059628665, -0.4178208112716675, -0.00130282377358526, -0.06439070403575897, -0.019662119448184967, -0.010941156186163425, -0.9810296893119812, -1.07287787614041e-05, -0.00835589598864317, -0.615006685256958, -0.4197726845741272, -1.4815391302108765, -0.4507739245891571, -0.025499513372778893, -0.020084815099835396, -0.0022176930215209723, -0.020659612491726875, -0.023690147325396538, -0.002816283842548728, -0.014405302703380585, -0.0016776548000052571, -0.00838178489357233, -0.050315629690885544, -0.020773809403181076, -0.010549139231443405, -0.001988816075026989, -0.0013098479248583317, -0.00022980909852776676, -0.0026629245840013027, -0.00427143182605505, -0.4741598665714264, -8.654219709569588e-05, -0.045114222913980484, -0.0010704031446948647, -0.015210704877972603, -0.004131235647946596, -0.5862418413162231, -0.004377426113933325, -0.0005576247931458056, -0.2570075988769531, -1.06708824634552, -0.001150065683759749, -0.003957061562687159, -0.0029113786295056343, -0.005144572351127863, -0.05015487223863602, -0.12199860066175461, -0.0013511584838852286, -0.008568664081394672, -0.009118934161961079, -0.018170565366744995, -9.65590606938349e-06, -8.702239938429557e-06, -0.0004239375703036785, -0.0978853777050972, -0.0004633783537428826, -0.051216091960668564, -0.017814045771956444, -0.010168415494263172, -2.6601548194885254, -0.06510704010725021, -3.290122185717337e-05, -5.090107151772827e-05, -0.0016164820408448577, -0.11928786337375641, -0.007399414665997028, -0.010468924418091774, -0.0006549597019329667, -5.793403761344962e-05, -0.0936720073223114, -0.004731649067252874, -0.0041467878036201, -0.05184447392821312, -0.03789106756448746, -0.05113193765282631, -0.02315133437514305, -0.18654875457286835, -0.00014029949670657516, -0.0018617454916238785, -0.0014812698354944587, -0.013822546228766441, -1.9073468138230965e-06, -2.4914430468925275e-05, -5.209310256759636e-05, -0.10136327892541885, -0.04526929557323456, -0.0318402424454689, -0.00980454497039318, -0.012345092371106148, -1.017557144165039, -0.0002401778765488416, -0.00022837892174720764, -0.00016080040950328112, -0.06371065974235535, -0.030297251418232918, -0.009201619774103165, -0.0035153755452483892, -1.4535733461380005, -0.0007672941428609192, -0.022108634933829308, -0.01145806722342968, -7.033323527139146e-06, -4.637133679352701e-05, -0.9310382008552551, -4.0531076592742465e-06, -7.867782187531702e-06, -1.1920922133867862e-06, -4.6491513785440475e-06, -0.1100541278719902], "finish_reason": "stop"}], "metrics": {"energy": 594.6415599861142, "energy_per_token": 3.4174802298052542, "time": 14.705538, "time_per_token": 0.08451458620689656}}
{"outputs": [{"text": "# Lowercase all letters\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Remove punctuation\n    text_series = text_series.str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Stem each word to its root form\n    ps = PorterStemmer()\n    text_series = text_series.str.split().apply(lambda x: \" \".join([ps.stem(word) for word in x]))\n\n    return text_series", "tokens": ["#", " Lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " St", "em", " each", " word", " to", " its", " root", " form", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "split", "()", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", "]))", "\n", "\n", "    ", "return", " text", "_", "series", "\n", "\n", "if"], "logprobs": [-0.7937904596328735, -1.8074073791503906, -0.11667817831039429, -0.5314844846725464, -0.12859414517879486, -0.17900756001472473, -0.003421407425776124, -0.21163520216941833, -0.11638980358839035, -0.04013770818710327, -0.03661864623427391, -0.006837778724730015, -5.054346183896996e-05, -1.2516897186287679e-05, -0.00015245705435518175, -0.020135872066020966, -1.7762025890988298e-05, -0.0015425699530169368, -5.471556869451888e-05, -0.0025662605185061693, -0.27608591318130493, -0.0008794969180598855, -0.0025903978385031223, -0.10046375542879105, -0.12845808267593384, -0.011263475753366947, -0.019730612635612488, -0.00016509123088326305, -0.0010287236655130982, -0.04388975724577904, -0.3756629526615143, -0.02165856398642063, -0.044927552342414856, -0.01274158526211977, -0.06798875331878662, -0.001073022955097258, -0.18367628753185272, -0.0003798478574026376, -0.002618101192638278, -0.001073142047971487, -0.0043542818166315556, -3.2186455882765586e-06, -6.794906312279636e-06, -9.83428253675811e-05, -0.7314687371253967, -2.1815061700181104e-05, -0.0012978235026821494, -0.02475527487695217, -0.05589275807142258, -1.1820425987243652, -0.003680718829855323, -1.1168508529663086, -0.003840809687972069, -0.3242063522338867, -0.004474389832466841, -0.3757411539554596, -0.0005595310358330607, -0.0002019201492657885, -0.32181739807128906, -0.0008208957733586431, -0.006782012525945902, -0.0032198987901210785, -0.0024563875049352646, -0.00034195298212580383, -0.017239365726709366, -0.06307379901409149, -0.0006586528033949435, -0.005219404585659504, -0.08183170109987259, -0.0401030108332634, -0.008893167600035667, -0.07671192288398743, -0.0010946955299004912, -0.17259404063224792, -0.0004433602443896234, -0.0025242867413908243, -0.0006685405969619751, -0.0019778707064688206, -5.245195097813848e-06, -0.00022980909852776676, -4.2914423829643056e-05, -0.005842749495059252, -1.8000440832111053e-05, -0.01415298879146576, -0.006848552729934454, -0.007994202896952629, -0.021233264356851578, -0.009777157567441463, -0.006104751490056515, -0.0004489606071729213, -0.010312958620488644, -2.13382354559144e-05, -0.028004489839076996, -0.0005411829333752394, -1.5616295058862306e-05, -0.10757382959127426, -4.8040190449682996e-05, -0.0003103728231508285, -0.0002706876548472792, -0.0011641160817816854, -0.00019178935326635838, -0.0037696745712310076, -0.011788466945290565, -0.0009059377480298281, -0.012357338331639767, -0.6964484453201294, -0.0002817710628733039, -0.49474966526031494, -0.004067007452249527, -0.2268606424331665, -0.03314908593893051, -0.004333154298365116, -0.015675539150834084, -0.11827776581048965, -0.0037783440202474594, -0.9804407954216003, -0.001782139646820724, -0.0018101035384461284, -7.390948667307384e-06, -1.0728830375228426e-06, 0.0, -0.0006428082706406713, -0.010932430624961853, -0.02790989726781845, -0.10296204686164856, -0.000979539705440402, -0.013288387097418308, -0.004746598191559315, -0.011860447935760021, -4.172316494077677e-06, -1.2397689715726301e-05, -0.00010787858627736568, -2.361623525619507, -5.829164365422912e-05, -0.08821500092744827, -0.0034947055391967297, -0.07533121854066849, -0.029671495780348778, -0.006401983089745045, -0.03684214502573013, -0.05487102270126343, -0.003905527526512742, -2.1989097595214844, -0.003426040755584836, -0.00019536493346095085, -0.00011014331539627165, -0.03389966860413551, -0.00105408881790936, -5.125986263010418e-06, -4.2199197196168825e-05, -0.00019333878299221396, -0.04611478000879288, -0.0018379476387053728, -0.0012221018550917506, -0.0006030171643942595, -3.516612196108326e-05, -0.0002731903805397451, -0.004682884085923433, -0.0015219782944768667, -0.028122371062636375, -0.00020287363440729678, -0.08976975083351135, -0.005561711732298136, -1.4305012882687151e-05, -0.00011205045302631333, -1.020084261894226, -0.012371114455163479, -0.9404293298721313], "finish_reason": "stop"}], "metrics": {"energy": 606.2859552326205, "energy_per_token": 3.608844971622741, "time": 14.285397, "time_per_token": 0.085032125}}
{"outputs": [{"text": "# Define a regular expression to match non-alphanumeric characters that are not spaces\n    non_alphanumeric_pattern = r'\\b[a-zA-Z]*[^a-zA-Z\\s]+\\b'\n\n    # Create an instance of the NLTK's PorterStemmer\n    stemmer = PorterStemmer()\n\n    # Process the text data by lowercasing all letters, removing non-alphanumeric characters\n    # (except spaces), removing punctuation, and stemming each word to its root form.\n    return text_series.str.lower() \\\n        .str.replace(non_alphanumeric_pattern, '') \\\n        .str.replace(r'[^\\w\\s]', '', regex=True) \\\n        .apply(lambda s: ' '.join([stemmer.stem(word) for word in s.split()]))", "tokens": ["#", " Define", " a", " regular", " expression", " to", " match", " non", "-", "al", "phan", "umeric", " characters", " that", " are", " not", " spaces", "\n", "    ", "non", "_", "al", "phan", "umeric", "_", "pattern", " =", " r", "'\\", "b", "[", "a", "-", "z", "A", "-", "Z", "]", "*[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "+\\", "b", "'", "\n", "\n", "    ", "#", " Create", " an", " instance", " of", " the", " N", "LT", "K", "'", "s", " Porter", "St", "em", "mer", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "    ", "#", " Process", " the", " text", " data", " by", " lower", "c", "asing", " all", " letters", ",", " removing", " non", "-", "al", "phan", "umeric", " characters", "\n", "    ", "#", " (", "except", " spaces", ")", ",", " removing", " punct", "uation", ",", " and", " stemming", " each", " word", " to", " its", " root", " form", ".", "\n", "    ", "return", " text", "_", "series", ".", "str", ".", "lower", "()", " \\", "\n", "        ", ".", "str", ".", "replace", "(", "non", "_", "al", "phan", "umeric", "_", "pattern", ",", " '", "')", " \\", "\n", "        ", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", " \\", "\n", "        ", ".", "apply", "(", "lambda", " s", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " s", ".", "split", "()", "]))", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.7937904596328735, -2.719898223876953, -0.6558129191398621, -0.9463691115379333, -0.0026824227534234524, -0.7194398641586304, -0.7433460354804993, -0.3213166296482086, -0.007540218066424131, -0.04873562231659889, -0.0004029654082842171, -0.00032395837479270995, -0.04449447989463806, -2.3237807750701904, -0.05260242149233818, -0.053390875458717346, -0.10982824862003326, -0.390819787979126, -0.0023432911839336157, -0.924835205078125, -0.06736508756875992, -0.24721519649028778, -0.17307493090629578, -0.09965330362319946, -0.35152551531791687, -1.0204578638076782, -0.0016321921721100807, -1.2319715023040771, -2.6083147525787354, -0.928731381893158, -0.06502125412225723, -3.2711639404296875, -4.2437604861333966e-05, -0.00012742661056108773, -0.045031603425741196, -2.8371408916427754e-05, -0.0020329540129750967, -2.9168827533721924, -0.024548830464482307, -0.0575275681912899, -0.06331216543912888, -1.311301275563892e-06, -1.1205610462639015e-05, -0.00022802136663813144, -1.1920928244535389e-07, -2.3841574147809297e-05, -0.36222177743911743, -0.06204750016331673, -0.9772365093231201, -0.03134820610284805, -2.3465585708618164, -0.03903210163116455, -0.0027887048199772835, -0.2204676866531372, -0.0007269124034792185, -0.056690674275159836, -2.2662951946258545, -1.221612811088562, -0.5563379526138306, -0.00029404606902971864, -0.09719064086675644, -2.5346176624298096, -0.0006668727728538215, -0.00027211778797209263, -0.32054218649864197, -2.0503786799963564e-05, -0.01152771431952715, -0.014333739876747131, -0.00010561384988250211, -6.472854875028133e-05, -0.45376646518707275, -0.0005190217634662986, -0.2438592165708542, -0.0038678848650306463, -0.001696577062830329, -0.0037209815345704556, -2.0265558760002023e-06, -4.768370445162873e-07, -4.0531076592742465e-06, -0.0007394201820716262, -0.0006911749369464815, -0.013201333582401276, -0.00037543877260759473, -0.09995894879102707, -3.115781307220459, -0.7448949813842773, -0.4979828894138336, -0.3998798429965973, -1.080110788345337, -0.8464635014533997, -0.005417190957814455, -2.1457441107486375e-05, -1.493160367012024, -0.034032758325338364, -0.045600902289152145, -0.03781026229262352, -0.1087779700756073, -0.0015413797227665782, -0.002017844934016466, -1.6569954823353328e-05, -0.0001641377166379243, -0.0789090245962143, -1.9607927799224854, -0.0001842805795604363, -0.0015395942609757185, -0.26580125093460083, -0.007295988500118256, -0.004855864215642214, -0.004105235915631056, -0.08589202165603638, -0.12741796672344208, -0.005631889682263136, -0.0006607971154153347, -0.01700335368514061, -0.01707601360976696, -0.03514022007584572, -0.007557610049843788, -0.0006092122639529407, -0.05123874172568321, -0.004591992124915123, -0.0038834409788250923, -0.0030915583483874798, -1.6810330152511597, -0.008485334925353527, -0.00795943383127451, -2.1819722652435303, -0.05240866169333458, -6.55629628454335e-05, -4.2914423829643056e-05, -0.04110492765903473, -0.13717442750930786, -0.0021418030373752117, -0.2435314655303955, -0.37191227078437805, -1.2795631885528564, -5.376194530981593e-05, -0.14060764014720917, -0.0011017211945727468, -0.17224359512329102, -0.00020656836568377912, -0.004704359918832779, -0.009816113859415054, -0.02350502461194992, -1.5139465176616795e-05, -2.47952248173533e-05, -4.172316494077677e-06, -2.3483953555114567e-05, -1.07287787614041e-05, -8.34461570775602e-06, -0.00048137042904272676, -0.2807498276233673, -0.7152829766273499, -0.008020575158298016, -4.053033626405522e-05, -0.00039736481267027557, -0.00020752183627337217, -0.006402457132935524, -0.0005787128466181457, -0.004435344599187374, -0.19324761629104614, -0.024659791961312294, -0.28138217329978943, -0.04770233854651451, -0.046938277781009674, -0.012428571470081806, -0.013388843275606632, -0.00014900050882715732, -0.04229281470179558, -0.0022526620887219906, -8.713819261174649e-05, -2.2167835235595703, -0.0009129646932706237, -0.006163991522043943, -0.003082526382058859, -0.0035337877925485373, -0.005309646483510733, -0.010226943530142307, -0.00035482310340739787, -0.00044967554276809096, -0.0007066613179631531, -0.3868185579776764, -0.0020674539264291525, -0.013649346306920052, -1.9372906684875488, -0.0025754161179065704, -0.050876375287771225, -3.802703940891661e-05, -0.00018463814922142774, -0.00013207517622504383, -0.409320205450058, -0.004895960912108421, -0.0001370812824461609, -7.724463648628443e-05, -2.4437606043647975e-05, -0.0013906818348914385, -0.15431728959083557, -0.0017188312485814095, -0.004674696829169989, -9.464769391342998e-05, -2.6225699912174605e-05, -0.012275619432330132, -6.12716976320371e-05, -0.0012181727215647697, -0.012168928049504757, -0.03527061268687248, -0.9896369576454163, -1.6093124941107817e-05, -2.861018856492592e-06, -2.50339189733495e-06, -9.894321920000948e-06, -2.1060476303100586, -0.000990615226328373], "finish_reason": "stop"}], "metrics": {"energy": 757.3015549087526, "energy_per_token": 3.5721771457960028, "time": 18.066992, "time_per_token": 0.08522166037735848}}
{"outputs": [{"text": "# Create a regex pattern to match all non-alphanumeric characters (except spaces)\n    pattern = r'\\W+'\n\n    # Define a function to preprocess text\n    def preprocess_text(text):\n        # Replace all non-alphanumeric characters (except spaces) with an empty string\n        text = re.sub(pattern, ' ', text)\n        # Remove leading and trailing whitespaces\n        text = text.strip()\n        # Lowercase the text\n        text = text.lower()\n        # Remove punctuation\n        text = text.replace('\\n', ' ')\n        text = text.translate(str.maketrans('', '', string.punctuation))\n\n        # Remove numbers\n        text = ''.join([i for i in text if not i.isdigit()])\n\n        # Initialize stemmer\n        porter = PorterStemmer()\n\n        # Split text into individual words and stem each word\n        words = text.split()\n        words = [porter.stem(word) for word in words]\n        # Join the stemmed words back into a string\n        text = ' '.", "tokens": ["#", " Create", " a", " regex", " pattern", " to", " match", " all", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "pattern", " =", " r", "'\\", "W", "+'", "\n", "\n", "    ", "#", " Define", " a", " function", " to", " pre", "process", " text", "\n", "    ", "def", " pre", "process", "_", "text", "(", "text", "):", "\n", "        ", "#", " Replace", " all", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", " with", " an", " empty", " string", "\n", "        ", "text", " =", " re", ".", "sub", "(", "pattern", ",", " '", " '", ",", " text", ")", "\n", "        ", "#", " Remove", " leading", " and", " trailing", " whites", "paces", "\n", "        ", "text", " =", " text", ".", "strip", "()", "\n", "        ", "#", " Lower", "case", " the", " text", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "        ", "#", " Remove", " punct", "uation", "\n", "        ", "text", " =", " text", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n", "        ", "text", " =", " text", ".", "translate", "(", "str", ".", "mak", "et", "rans", "('", "'", ",", " ''", ",", " string", ".", "punct", "uation", "))", "\n", "\n", "        ", "#", " Remove", " numbers", "\n", "        ", "text", " =", " ''", ".", "join", "([", "i", " for", " i", " in", " text", " if", " not", " i", ".", "is", "digit", "()", "])", "\n", "\n", "        ", "#", " Initialize", " stem", "mer", "\n", "        ", "porter", " =", " Porter", "St", "em", "mer", "()", "\n", "\n", "        ", "#", " Split", " text", " into", " individual", " words", " and", " stem", " each", " word", "\n", "        ", "words", " =", " text", ".", "split", "()", "\n", "        ", "words", " =", " [", "porter", ".", "stem", "(", "word", ")", " for", " word", " in", " words", "]", "\n", "        ", "#", " Join", " the", " stem", "med", " words", " back", " into", " a", " string", "\n", "        ", "text", " =", " '", " '", "."], "logprobs": [-0.7937904596328735, -2.1841812133789062, -0.6195172667503357, -2.365011215209961, -0.14844340085983276, -0.2923966646194458, -0.5038140416145325, -1.2331743240356445, -0.06130923703312874, -0.0075927479192614555, -0.05800779536366463, -0.0005407063290476799, -0.00033158526639454067, -0.07751557976007462, -1.1506332159042358, -0.0404834970831871, -0.07575689256191254, -0.018549658358097076, -0.27382200956344604, -0.002432247158139944, -0.5314729809761047, -0.006598114967346191, -1.7471420764923096, -2.7745413780212402, -0.3809249997138977, -0.6497251987457275, -0.010491455905139446, -0.2830888330936432, -0.0006648475537076592, -0.04207361489534378, -2.4886722564697266, -0.5215392112731934, -0.3248153626918793, -0.22089779376983643, -2.7988345623016357, -0.09693533182144165, -1.4172917604446411, -0.5156211853027344, -0.0034395840484648943, -0.025775006040930748, -0.1235170066356659, -0.017790038138628006, -0.29392099380493164, -0.015642210841178894, -0.005193670280277729, -0.06679478287696838, -0.05293940380215645, -0.00031013446277938783, -0.05347630754113197, -0.06209971010684967, -3.5847625732421875, -0.7480990886688232, -0.12970006465911865, -0.0025321345310658216, -0.02609316073358059, -1.8954096958623268e-05, -0.00017975145601667464, -0.010968510992825031, -0.4095461368560791, -0.01121950801461935, -0.009265872649848461, -0.0019804879557341337, -0.0794781967997551, -2.307983636856079, -0.019984561949968338, -0.014518335461616516, -0.08240798860788345, -0.0018330690218135715, -0.5018351674079895, -0.044238582253456116, -0.005030712112784386, -4.339123915997334e-05, -0.0003700763627421111, -0.0015240018256008625, -0.007869903929531574, -0.005387430544942617, -0.22175489366054535, -0.00023576818057335913, -0.00012087091454304755, -0.01759796403348446, -0.029165074229240417, -0.05924375727772713, -0.38375869393348694, -0.01278678048402071, -1.8355631828308105, -2.5231211185455322, -0.3162257969379425, -0.0015674459282308817, -1.0142133235931396, -0.7911202311515808, -0.15586671233177185, -0.0004978132783435285, -0.019501851871609688, -0.0033034298103302717, -0.03907165303826332, -3.8980677345534787e-05, -0.002150129759684205, -0.0025399825535714626, -0.006245145108550787, -0.03863316774368286, -0.008093300275504589, -1.131119966506958, -0.03606468066573143, -1.0214476585388184, -0.10108435899019241, -0.07274522632360458, -0.00024768622824922204, -0.010656947270035744, -0.0021214615553617477, -0.002683611586689949, -1.3828182090946939e-05, -0.0004574206250254065, -1.9430925021879375e-05, -0.0002873722987715155, -0.0648501068353653, -0.029189620167016983, -3.0021748542785645, -0.4804106652736664, -0.03670173138380051, -0.42496457695961, -0.0007185738068073988, -0.08548902720212936, -0.009205162525177002, -0.34983059763908386, -0.0008733034483157098, -1.6250299215316772, -0.550885021686554, -3.374027967453003, -0.2907249927520752, -0.006901237647980452, -0.000379132863599807, -0.02237013913691044, -0.3688562512397766, -0.0007537146448157728, -0.5519633889198303, -0.03557172417640686, -0.4892250597476959, -0.00641607865691185, -0.345358669757843, -0.0006543640629388392, -1.6316062211990356, -0.00839998945593834, -0.05711241811513901, -2.682172998902388e-05, -7.152531907195225e-06, -5.960446742392378e-06, -1.2993727978027891e-05, -0.5900464653968811, -0.021403755992650986, -3.111314072157256e-05, -0.010091237723827362, -4.994744449504651e-05, -0.03513135761022568, -0.00010883215873036534, -0.00017021637177094817, -2.3841855067985307e-07, -0.005887902807444334, -0.013133919797837734, -2.332073211669922, -0.001709667849354446, -0.07860051840543747, -4.512634754180908, -3.3547191619873047, -0.6328952312469482, -0.005185250658541918, -0.05450692027807236, -0.0029459670186042786, -0.7235921025276184, -1.7046782886609435e-05, -1.764281842042692e-05, -0.1886908859014511, -0.16530151665210724, -0.0021728496067225933, -8.34461570775602e-06, -1.823885577323381e-05, -0.00019226610311307013, -0.00028451209072954953, -0.004618216305971146, -0.00025090406415984035, -3.397406908334233e-05, -1.5497195136049413e-06, -7.033323527139146e-06, -2.47952248173533e-05, -0.001190787530504167, -0.004777801223099232, -0.21112793684005737, -0.00278501957654953, -0.023495594039559364, -2.719655752182007, -2.7223360538482666, -0.0018468719208613038, -0.07223375886678696, -0.000824230897706002, -2.6101887226104736, -0.4082844853401184, -0.0008577005355618894, -8.821448318485636e-06, -1.1920928244535389e-07, -5.960462772236497e-07, -0.00018439977429807186, -0.00041309406515210867, -0.7001209855079651, -0.0008288762182928622, -0.018085572868585587, -1.6434186697006226, -2.0641348361968994, -0.08111241459846497, -2.8357319831848145, -0.02767140418291092, -1.606391191482544, -0.6192111968994141, -0.09248605370521545, -0.021344361826777458, -0.2671074867248535, -0.0005210472736507654, -0.3675282299518585, -0.023148423060774803, -0.2365073412656784, -4.136476854910143e-05, -0.0012784174177795649, -0.14190705120563507, -0.00612560473382473, -0.027511488646268845, -1.2322282791137695, -0.05704711377620697, -0.0026145342271775007, -0.02461850270628929, -7.390948667307384e-06, -7.784063927829266e-05, -0.0004368066438473761, -0.004991213791072369, -0.012014051899313927, -0.02212437614798546, -2.0503786799963564e-05, -1.0371154530730564e-05, -0.0004737447015941143, -0.013133684173226357, -0.0011266082292422652, -0.9937797784805298, -0.13606062531471252, -0.07735703885555267, -0.31688058376312256, -0.14625172317028046, -0.004563868511468172, -0.001924568903632462, -0.18575012683868408, -0.09194653481245041, -0.01342801097780466, -1.9369392395019531, -0.09644854068756104, -0.0021997320000082254, -0.17165769636631012, -0.007670591119676828, -0.07053674012422562, -4.7801782784517854e-05, -0.00010871296399272978], "finish_reason": "length"}], "metrics": {"energy": 913.308078733444, "energy_per_token": 3.5676096825525154, "time": 21.84476, "time_per_token": 0.08533109375}}
{"outputs": [{"text": "text_series = text_series.astype(str)\n    text_series = text_series.str.lower()\n    text_series = text_series.apply(\n        lambda x: re.sub(\"[^a-zA-Z0-9 ]\", \"\", x)\n    )\n    text_series = text_series.apply(\n        lambda x: re.sub(\"[!-/:*;@#-~]\", \"\", x)\n    )\n    text_series = text_series.apply(lambda x: \" \".join(PorterStemmer().stem(word) for word in x.split()))\n    return text_series", "tokens": ["text", "_", "series", " =", " text", "_", "series", ".", "ast", "ype", "(", "str", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "\"", ",", " \"", "\"", ",", " x", ")", "\n", "    ", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "\"", "[", "!", "-", "/", ":", "*", ";", "@", "#", "-", "~", "]\"", ",", " \"", "\"", ",", " x", ")", "\n", "    ", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "(", "P", "orter", "St", "em", "mer", "()", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()))", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.922326683998108, -0.11127416044473648, -0.0755447968840599, -0.06722789257764816, -0.0335623174905777, -0.00016020445036701858, -0.00010716341057559475, -0.001689555705524981, -1.4370784759521484, -5.960462772236497e-07, -0.16376027464866638, -0.04244786873459816, -0.009794747456908226, -0.37716370820999146, -0.16257551312446594, -0.5809671878814697, -0.015437280759215355, -0.01758871041238308, -0.015758858993649483, -0.026555867865681648, -2.634490556374658e-05, -2.50339189733495e-06, -0.0005525015876628458, -0.05882302299141884, -0.0002146728802472353, -0.14908598363399506, -0.0023818237241357565, -0.10840035229921341, -0.107437863945961, -0.12620151042938232, -0.000403084559366107, -0.0018760239472612739, -0.0028360167052596807, -0.01068372093141079, -4.9828242481453344e-05, -5.8412379075889476e-06, -0.00022027450904715806, -0.9528449177742004, -0.0007904027588665485, -1.3942747116088867, -0.018498051911592484, -0.006302718538790941, -0.060779329389333725, -0.0021657124161720276, -0.08112461864948273, -8.046303264563903e-05, -0.005944074597209692, -0.028400616720318794, -2.7581944465637207, -0.09154532104730606, -0.025758856907486916, -0.18138258159160614, -1.168244216387393e-05, -0.00016330339713022113, -0.08841285854578018, -2.098061486321967e-05, -0.0023262840695679188, -0.19457994401454926, -0.00018404220463708043, -3.58813522325363e-05, -1.6511497497558594, -0.44360703229904175, -9.953480184776708e-05, -0.009331068024039268, -0.08501295000314713, -3.909988299710676e-05, -0.022913102060556412, -0.3429022431373596, -0.22734907269477844, -0.029543844982981682, -2.5987286790041253e-05, -0.38400864601135254, -0.03143346309661865, -0.10382075607776642, -0.00025281094713136554, -0.001974539365619421, -0.001082192175090313, -0.002919223625212908, -1.311301275563892e-06, -2.9802276912960224e-06, -7.676783570786938e-05, -0.3839353024959564, -0.0002485204895492643, -0.24550993740558624, -0.0021786780562251806, -0.0012273406609892845, -0.013698616065084934, -0.0003159739135298878, -0.6278701424598694, -1.8715683836489916e-05, -0.0006242233794182539, -0.006367632653564215, -0.17265604436397552, -0.3927019536495209, -1.597929835319519, -3.0953142642974854, -0.27769380807876587, -1.4761326313018799, -3.4298598766326904, -0.3003544807434082, -0.19855770468711853, -0.579677402973175, -2.1635994911193848, -1.8460359573364258, -0.24578043818473816, -0.00032491172896698117, -0.0030750392470508814, -0.02534087747335434, -3.325883881188929e-05, -0.0015162649797275662, -0.010760144330561161, -0.016086433082818985, -0.0062485807575285435, -3.0874729418428615e-05, -0.011620806530117989, -0.13504807651042938, -1.6676836013793945, -0.003000640543177724, -0.019045459106564522, -0.010356730781495571, -0.012002626433968544, -5.221230458118953e-05, -4.5060096454108134e-05, -0.0005336767644621432, -0.7429922819137573, -0.0014350840356200933, -1.7712643146514893, -0.013329794630408287, -0.0020943391136825085, -0.8138828873634338, -0.020658796653151512, -0.000745137978810817, -0.00013815402053296566, -0.22614197432994843, -1.381657361984253, -0.00028880240279249847, -0.00046659549116156995, -1.1920928244535389e-07, -2.4318398573086597e-05, -0.021543651819229126, -0.0008131535141728818, -0.0002277830062666908, -0.0012285312404856086, -0.6967788338661194, -0.0023941919207572937, -0.03116033598780632, -0.0020485385321080685, -0.0007969540893100202, -0.042398739606142044, -0.003582846373319626, -0.003306756727397442, -0.11616726964712143, -0.02012021653354168, -0.27110913395881653, -0.056040309369564056, -0.003574056550860405, -9.059865078597795e-06, -7.629103492945433e-05, -0.8128545880317688, -5.364403477869928e-06, -5.8412379075889476e-06, -1.311301275563892e-06, -8.106198947643861e-06, -0.1349404752254486], "finish_reason": "stop"}], "metrics": {"energy": 568.2544962844846, "energy_per_token": 3.4649664407590524, "time": 13.87221, "time_per_token": 0.08458664634146341}}
{"outputs": [{"text": "ps = PorterStemmer()\n    # remove non-alphanumeric characters except spaces\n    text_series = text_series.apply(lambda x: re.sub(r'[^a-zA-Z\\s]', '', x))\n    # remove punctuation\n    text_series = text_series.apply(lambda x: re.sub(r'[^\\w\\s]', '', x))\n    # lowercase all letters\n    text_series = text_series.str.lower()\n    # apply stemming to each word\n    text_series = text_series.apply(lambda x: ' '.join(\n        [ps.stem(word) for word in x.split()]))\n    return text_series", "tokens": ["ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "#", " remove", " non", "-", "al", "phan", "umeric", " characters", " except", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "#", " remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "#", " lower", "case", " all", " letters", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "    ", "#", " apply", " stemming", " to", " each", " word", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(", "\n", "        ", "[", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", ".", "split", "()", "]))", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-1.965488076210022, -0.014607389457523823, -0.003288221312686801, -2.50339189733495e-06, 0.0, 0.0, -0.0016313589876517653, -0.04605740308761597, -0.22977814078330994, -2.3125414848327637, -3.3909835815429688, -0.6913103461265564, -0.14082305133342743, -0.13260401785373688, -0.002133833011612296, -0.011132391169667244, -0.2435825765132904, -1.8720741271972656, -0.3560991883277893, -0.25672322511672974, -0.009032106027007103, -0.6727738976478577, -0.10613971203565598, -0.07118452340364456, -0.026791028678417206, -0.024781206622719765, -6.913899414939806e-05, -1.7881233361549675e-05, -0.000992997083812952, -0.9956751465797424, -0.000865561596583575, -0.22001968324184418, -0.030523788183927536, -0.0029246911872178316, -0.024579305201768875, -0.00010942813969450071, -0.0030896568205207586, -0.11313676834106445, -0.02087806910276413, -0.5462599396705627, -0.042463865131139755, -0.300053209066391, -0.0900813639163971, -6.9141146923357155e-06, -0.000285227142740041, -0.007648705970495939, -1.168244216387393e-05, -0.0002658013836480677, -1.3665363788604736, -0.02843746356666088, -0.27065280079841614, -0.0005445189890451729, -0.0003095386200584471, -0.20258784294128418, -0.00045908879837952554, -0.040254853665828705, -0.08450521528720856, -0.005748051684349775, -0.06524519622325897, -0.18654578924179077, -0.6817513704299927, -0.051225606352090836, -0.03529719263315201, -0.1264612227678299, -0.0006460248259827495, -0.05253048613667488, -0.0005368936690501869, -0.0010024051880463958, -0.0010000233305618167, -0.0010180057724937797, -2.9802276912960224e-06, -7.152555099310121e-07, -4.2914423829643056e-05, -0.15730005502700806, -0.00020287363440729678, -0.045939795672893524, -0.0010312244994565845, -0.0006463822210207582, -0.1337132304906845, -6.6756979322235566e-06, -0.0005903884884901345, -0.00888714101165533, -0.011275616474449635, -0.022430988028645515, -0.012670962139964104, -0.0592833049595356, -0.00035422726068645716, -0.0023611304350197315, -0.00014697425649501383, -0.010631588287651539, -0.00011038171214750037, -3.6238969187252223e-05, -0.024310000240802765, -2.8132995794294402e-05, -0.0008454324561171234, -0.004606824833899736, -0.002015108708292246, -0.007654265966266394, -0.02111561968922615, -0.9297630190849304, -0.11219897121191025, -0.9672548770904541, -0.07947313040494919, -0.025237547233700752, -0.0002882065309677273, -0.004751462489366531, -9.405170567333698e-05, -0.00015031162183731794, -0.0015986294019967318, -0.0007712250226177275, -4.8874615458771586e-05, -4.768370445162873e-07, -5.2569914259947836e-05, -0.1474471241235733, -7.152531907195225e-06, -0.0004700509598478675, -2.2053474822314456e-05, -0.004893707111477852, -0.026992252096533775, -0.014598695561289787, -2.576467990875244, -0.707378089427948, -0.6137888431549072, -0.040841296315193176, -0.008762952871620655, -0.3029633164405823, -0.002600979758426547, -0.15862303972244263, -0.0003299168893136084, -0.007717081345617771, -0.005741769913583994, -0.009472071193158627, -1.537788011773955e-05, -1.7881377516459906e-06, -9.595887240720913e-05, -0.015497026965022087, -0.0003033416287507862, -0.31631696224212646, -0.006523977965116501, -0.0009146321099251509, -0.47254544496536255, -2.3483953555114567e-05, -0.00013100242358632386, -0.00010072677832795307, -1.716152310371399, -1.6663157939910889, -0.02624540776014328, -0.1972472071647644, -0.00928819552063942, -5.960446742392378e-06, -3.85038583772257e-05, -0.0005579821881838143, -0.026465317234396935, -0.004654525779187679, -0.00608531991019845, -0.0004236992390360683, -9.179073458653875e-06, -0.017224015668034554, -0.00011324241495458409, -0.000916537712328136, -0.01271133590489626, -0.13723480701446533, -0.007779774721711874, -0.25756925344467163, -0.10073767602443695, -0.0035103862173855305, -6.9141146923357155e-06, -8.272782724816352e-05], "finish_reason": "stop"}], "metrics": {"energy": 625.6429509563444, "energy_per_token": 3.7240651842639547, "time": 14.297113, "time_per_token": 0.0851018630952381}}
{"outputs": [{"text": "# Remove non-alphanumeric characters (except spaces), punctuation, convert to lowercase\n    # text_series = text_series.apply(lambda x: re.sub(r\"[^a-zA-Z0-9\\s]\", \"\", x))\n    text_series = text_series.str.replace(r\"[^a-zA-Z0-9\\s]\", \"\")\n    # text_series = text_series.apply(lambda x: re.sub(r\"[.!?\\\\-]\", \" \", x))\n    text_series = text_series.str.replace(r\"[.!?\\\\-]\", \" \")\n    text_series = text_series.str.lower()\n\n    # Remove redundant words\n    text_series = text_series.apply(lambda x: ' '.join([word for word in x.split() if len(word) > 2]))\n\n    # Apply stemming to each word of the text\n    stemmer = PorterStemmer()\n    text_series = text_series.apply(lambda x: ' '.join([", "tokens": ["#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", ",", " punct", "uation", ",", " convert", " to", " lower", "case", "\n", "    ", "#", " text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]\"", ",", " \"", "\"", ",", " x", "))", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]\"", ",", " \"", "\"", ")", "\n", "    ", "#", " text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", ".", "!", "?", "\\\\-", "]\"", ",", " \"", " \"", ",", " x", "))", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "\"", "[", ".", "!", "?", "\\\\-", "]\"", ",", " \"", " \"", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " redundant", " words", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "word", " for", " word", " in", " x", ".", "split", "()", " if", " len", "(", "word", ")", " >", " ", "2", "]))", "\n", "\n", "    ", "#", " Apply", " stemming", " to", " each", " word", " of", " the", " text", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "(["], "logprobs": [-0.7937904596328735, -3.3861312866210938, -0.44961872696876526, -0.01922614686191082, -0.07749781757593155, -0.0004407388041727245, -0.0009473841637372971, -0.09699894487857819, -0.7214792966842651, -0.03264857828617096, -0.066131092607975, -0.011708351783454418, -2.065258502960205, -0.7150546312332153, -0.018999610096216202, -0.15138132870197296, -1.2258191108703613, -0.04455171898007393, -0.004377782344818115, -0.037169091403484344, -0.479414165019989, -0.006867614574730396, -2.661512851715088, -2.9530787467956543, -0.42951157689094543, -0.06876160949468613, -0.044269148260354996, -0.06947137415409088, -0.0007626485894434154, -0.000341476290486753, -0.001540784491226077, -1.2913451194763184, -0.00200654286891222, -0.08028259873390198, -0.060050345957279205, -0.0019312318181619048, -0.05698293074965477, -0.00034505134681239724, -0.005567876156419516, -0.10671941190958023, -0.028649941086769104, -1.8694617748260498, -0.24498093128204346, -0.2017480581998825, -0.05558078736066818, -2.7417760065873154e-05, -0.00029404606902971864, -0.02136431634426117, -1.537788011773955e-05, -0.0019546705298125744, -0.11147763580083847, -0.00021610308613162488, -0.00011669908417388797, -0.6028681993484497, -0.05945450812578201, -1.3626527786254883, -0.00032360086333937943, -0.09683588892221451, -0.3033127188682556, -0.0006338732782751322, -0.0972534790635109, -0.4257712960243225, -0.054305173456668854, -0.03051881678402424, -0.7805768251419067, -0.001665277755819261, -0.004666509572416544, -0.0041276742704212666, -0.0037338081747293472, -1.2278481335670222e-05, -6.6756979322235566e-06, -0.00048744716332294047, -1.4770973920822144, -0.000493762141559273, -0.3739089369773865, -0.044683851301670074, -0.062085479497909546, -0.20632098615169525, -0.020770305767655373, -0.01854509487748146, -0.0032879835925996304, -9.775113539944869e-06, -3.3854863431770355e-05, -0.0029137558303773403, -5.602820692729438e-06, -0.0006270825979299843, -0.009597116149961948, -5.2927523938706145e-05, -7.152531907195225e-06, -0.028746895492076874, -0.0022839431185275316, -0.06902465969324112, -0.00015889335190877318, -0.013969618827104568, -0.09825250506401062, -0.33883920311927795, -0.06841599941253662, -0.19909679889678955, -1.0026979446411133, -0.4610983729362488, -0.0015522110043093562, -0.0005109196645207703, -0.0015151937259361148, -0.0017440598458051682, -5.531158240046352e-05, -7.152301259338856e-05, -0.00022742546570952982, -0.17471790313720703, -0.00022265815641731024, -0.008492426946759224, -0.000802075956016779, -0.00041309406515210867, -0.12800098955631256, -3.2543604902457446e-05, -0.0009253510506823659, -0.0011288706446066499, -0.008775006048381329, -0.015252619981765747, -0.8881534337997437, -1.1705418825149536, -0.9369223117828369, -0.15975335240364075, -0.5049929022789001, -0.30635589361190796, -0.00020656836568377912, -0.0035778575111180544, -2.5739574432373047, -0.0002919009421020746, -0.0030189435929059982, -0.039164625108242035, -0.019436616450548172, -0.001513408264145255, -0.03919259458780289, -1.3112935448589269e-05, -4.339123915997334e-05, -0.00040534863364882767, -0.0005583396414294839, -2.7418097943154862e-06, -1.311301275563892e-06, -4.8993817472364753e-05, -0.0038197904359549284, -5.960446742392378e-06, -0.0004670721245929599, -0.0006497179274447262, -0.002173325279727578, -0.0028552738949656487, -0.004757988266646862, -0.010664849542081356, -0.01930963806807995, -0.002144657773897052, -0.1946870982646942, -0.01224559172987938, -4.029192859889008e-05, -0.006799535825848579, -0.009105230681598186, -0.012872341088950634, -0.004593178629875183, -0.026759691536426544, -0.22656795382499695, -7.843663479434326e-05, -0.00030119650182314217, -0.0012004319578409195, -0.0011923355050384998, -4.017272294731811e-05, -4.887569048150908e-06, -4.9828242481453344e-05, -0.01872224546968937, -2.9682672902708873e-05, -0.018259411677718163, -2.6225699912174605e-05, -0.010782433673739433, -0.20222467184066772, -0.001450677984394133, -0.08050227165222168, -3.811392307281494, -4.233242988586426, -3.0264642238616943, -0.3804543614387512, -0.014886249788105488, -1.7375844717025757, -0.0017986800521612167, -0.03443433344364166, -0.01335426140576601, -0.11237818002700806, -4.470248313737102e-05, -0.0002165798214264214, -0.0018839959520846605, -0.5560890436172485, -0.001682177186012268, -0.42394745349884033, -0.012556896544992924, -0.0013263961300253868, -1.2978169918060303, -0.0007269124034792185, -0.0003014348621945828, -7.188061863416806e-05, -0.2071738988161087, -0.2413022518157959, -0.009557325392961502, -0.0003488647344056517, -0.0001517419150331989, -0.017077889293432236, -0.0006652049487456679, -0.0006654431927017868, -0.030434058979153633, -0.02757028490304947, -0.5823087096214294, -0.00017426878912374377, -0.0029729476664215326, -0.1673668920993805, -0.31589174270629883, -0.0013335392577573657, -0.8495267629623413, -0.030166903510689735, -0.007991483435034752, -0.044295720756053925, -0.0011456600623205304, -0.03646107390522957, -2.3452019691467285, -0.6963301301002502, -1.2850072383880615, -0.10669262707233429, -0.01758508011698723, -2.693449020385742, -1.1794302463531494, -0.4476586878299713, -0.3504704535007477, -0.0031015409622341394, -1.2122409343719482, -0.11502980440855026, -0.0027140469755977392, -0.004340394400060177, -2.622600959512056e-06, -3.576278118089249e-07, -1.0728830375228426e-06, -0.0009148702956736088, -0.007280012127012014, -0.08935992419719696, -0.4292249381542206, -0.0007250064518302679, -0.007872742600739002, -0.008643358945846558, -0.0055342079140245914, -7.510157047363464e-06, -4.768370445162873e-07, -0.00019524575327523053, -0.010528260841965675, -0.0001586549769854173, -0.1151326596736908, -0.01783161051571369, -0.0010592094622552395, -0.08594311028718948, -7.950943836476654e-05, -0.00021109737281221896, -2.7417760065873154e-05, -0.03681502863764763], "finish_reason": "length"}], "metrics": {"energy": 931.2308511867518, "energy_per_token": 3.6376205124482492, "time": 21.850538, "time_per_token": 0.0853536640625}}
{"outputs": [{"text": "# Convert text to lowercase\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters, except for spaces\n    pattern = re.compile(r'[^a-zA-Z0-9\\s]')\n    text_series = text_series.str.replace(pattern, '')\n\n    # Remove punctuation\n    pattern = re.compile(r'[^\\w\\s]')\n    text_series = text_series.str.replace(pattern, '')\n\n    # Stem words to their root form\n    stemmer = PorterStemmer()\n    text_series = text_series.apply(lambda x: ' '.join([stemmer.stem(y) for y in x.split()]))\n\n    return text_series", "tokens": ["#", " Convert", " text", " to", " lower", "case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", ",", " except", " for", " spaces", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]", "')", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "pattern", ",", " '", "')", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "')", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "pattern", ",", " '", "')", "\n", "\n", "    ", "#", " St", "em", " words", " to", " their", " root", " form", "\n", "    ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "apply", "(", "lambda", " x", ":", " '", " '", ".", "join", "([", "stem", "mer", ".", "stem", "(", "y", ")", " for", " y", " in", " x", ".", "split", "()", "]))", "\n", "\n", "    ", "return", " text", "_", "series"], "logprobs": [-0.7937904596328735, -2.2333641052246094, -1.6111000776290894, -0.16700632870197296, -0.019429834559559822, -0.04562709853053093, -0.33786895871162415, -0.002286202972754836, -0.16462214291095734, -0.10818939656019211, -0.08066515624523163, -0.04096808657050133, -0.003933788277208805, -6.01988795096986e-05, -6.318072337307967e-06, -0.0001110968878492713, -0.026656275615096092, -2.3245540432981215e-05, -0.0010786197381094098, -4.088794958079234e-05, -0.003356420435011387, -0.21313132345676422, -0.0009738231892697513, -0.004870099946856499, -0.19881580770015717, -0.1330050677061081, -0.010574146173894405, -0.03936039283871651, -0.00021610308613162488, -0.000837571220472455, -0.059380143880844116, -3.3798351287841797, -0.06789898127317429, -1.5873984098434448, -0.07934253662824631, -0.2168477326631546, -0.0018241447396576405, -2.7083709239959717, -0.023959387093782425, -1.1390961408615112, -3.266281055402942e-05, -5.721882189391181e-05, -0.07764662802219391, -0.056667130440473557, -0.9137178063392639, -0.02569100633263588, -0.08149278163909912, -0.07717806100845337, -5.722029527532868e-06, -0.00010275312524754554, -0.3593025803565979, -2.5152843591058627e-05, -0.0020400919020175934, -0.060997046530246735, -0.000102037942269817, -6.41325386823155e-05, -0.20552170276641846, -0.04546660929918289, -0.2967708110809326, -0.003976772073656321, -0.023422349244356155, -0.00444080401211977, -0.02221590280532837, -0.0007888542604632676, -0.0027844251599162817, -0.0009806115413084626, -0.005650263279676437, -2.145764938177308e-06, -9.536738616588991e-07, -2.7179348762729205e-05, -1.0524852275848389, -1.2516897186287679e-05, -0.00045158201828598976, -0.0001668790791882202, -0.02033108100295067, -0.0007902836659923196, -0.19664493203163147, -0.17104151844978333, -0.005612804554402828, -0.008264390751719475, -0.0007363230688497424, -0.002716305898502469, -0.10446097701787949, -0.031199276447296143, -0.014909033663570881, -0.1877523958683014, -0.0005831210291944444, -0.8638358116149902, -0.01544796209782362, -0.01738722436130047, -2.50339189733495e-06, -1.4543427823809907e-05, -0.03099207766354084, -0.003698296844959259, -0.014779718592762947, -0.13741083443164825, -0.12890522181987762, -0.0030901322606951, -0.0015207880642265081, -0.00011264643399044871, -0.017607802525162697, -0.001503052655607462, -0.0072182342410087585, -0.0003532739356160164, -0.0029905380215495825, -4.5060096454108134e-05, -5.793403761344962e-05, -0.00020251607929822057, -0.0002351722796447575, -2.264974000354414e-06, -1.2755313036905136e-05, -1.4543427823809907e-05, -0.0011248220689594746, -6.318072337307967e-06, -6.19869097135961e-05, -4.303362584323622e-05, -0.0003014348621945828, -6.508615479106084e-05, -0.0030131200328469276, -0.011181431822478771, -0.0009675112669356167, -0.003901965217664838, -0.0008081507403403521, -0.005082425195723772, -0.7222947478294373, -0.0003326578007545322, -1.207378625869751, -0.3304435610771179, -0.12870420515537262, -0.08338992297649384, -0.04772120714187622, -0.1428891271352768, -0.0016925308154895902, -0.7034730911254883, -0.016365468502044678, -0.0008278042078018188, -0.0022192392498254776, -5.483612312673358e-06, -5.960462772236497e-07, -3.576278118089249e-07, -0.0004419303731992841, -0.002092316746711731, -0.022253094241023064, -0.12027093768119812, -0.0012419852428138256, -0.005753504112362862, -0.0028815437108278275, -0.006140295881778002, -3.0040289857424796e-05, -5.602820692729438e-06, -0.0001245659514097497, -0.10473702102899551, -0.00035482310340739787, -0.12152153998613358, -0.02569960430264473, -0.0006736631621606648, -0.1365107297897339, -3.313963316031732e-05, -0.00018475732940714806, -6.23445157543756e-05, -0.11105143278837204, -0.0008875959902070463, -3.2186455882765586e-06, -2.634490556374658e-05, -2.1815061700181104e-05, -0.0006389960180968046, -1.7582507133483887, -0.004003012087196112, -0.004596619866788387, -0.0003861635341309011, -3.7431014789035544e-05, -0.012058456428349018, -0.0002586507180240005, -0.0011082704877480865, -0.017994018271565437, -0.007792786229401827, -0.0012747265864163637, -0.029449164867401123, -0.00018904806347563863, -0.08082690834999084, -0.002906505251303315, -1.3470558769768104e-05, -6.365573790390044e-05], "finish_reason": "stop"}], "metrics": {"energy": 656.0480665321351, "energy_per_token": 3.5849621121974593, "time": 15.561924, "time_per_token": 0.08503783606557377}}
{"outputs": [{"text": "# create empty series to store transformed text\n    output_series = pd.Series()\n\n    # iterate through each entry in the series\n    for index, text in text_series.items():\n        # convert to lowercase\n        text = text.lower()\n\n        # remove all characters that are not alphanumeric or space\n        text = re.sub(r'[^A-Za-z0-9 ]+', ' ', text)\n\n        # remove punctuation and replace with spaces\n        text = re.sub(r'[^\\w\\s]', ' ', text)\n\n        # stemming:\n        # create an object of PorterStemmer class\n        stemmer = PorterStemmer()\n        # split the text into individual words\n        words = text.split()\n        # apply the stem function to each word using the apply() method of the list\n        words = [stemmer.stem(word) for word in words]\n\n        # join the stemmed words back together\n        text = ' '.join(words)\n\n        # add the processed text to the output series\n        output_series = pd", "tokens": ["#", " create", " empty", " series", " to", " store", " transformed", " text", "\n", "    ", "output", "_", "series", " =", " pd", ".", "Series", "()", "\n", "\n", "    ", "#", " iterate", " through", " each", " entry", " in", " the", " series", "\n", "    ", "for", " index", ",", " text", " in", " text", "_", "series", ".", "items", "():", "\n", "        ", "#", " convert", " to", " lower", "case", "\n", "        ", "text", " =", " text", ".", "lower", "()", "\n", "\n", "        ", "#", " remove", " all", " characters", " that", " are", " not", " al", "phan", "umeric", " or", " space", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", " ]", "+'", ",", " '", " '", ",", " text", ")", "\n", "\n", "        ", "#", " remove", " punct", "uation", " and", " replace", " with", " spaces", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " text", ")", "\n", "\n", "        ", "#", " stemming", ":", "\n", "        ", "#", " create", " an", " object", " of", " Porter", "St", "em", "mer", " class", "\n", "        ", "stem", "mer", " =", " Porter", "St", "em", "mer", "()", "\n", "        ", "#", " split", " the", " text", " into", " individual", " words", "\n", "        ", "words", " =", " text", ".", "split", "()", "\n", "        ", "#", " apply", " the", " stem", " function", " to", " each", " word", " using", " the", " apply", "()", " method", " of", " the", " list", "\n", "        ", "words", " =", " [", "stem", "mer", ".", "stem", "(", "word", ")", " for", " word", " in", " words", "]", "\n", "\n", "        ", "#", " join", " the", " stem", "med", " words", " back", " together", "\n", "        ", "text", " =", " '", " '", ".", "join", "(", "words", ")", "\n", "\n", "        ", "#", " add", " the", " processed", " text", " to", " the", " output", " series", "\n", "        ", "output", "_", "series", " =", " pd"], "logprobs": [-0.7937904596328735, -3.4787063598632812, -2.6343724727630615, -2.494884967803955, -0.3395152688026428, -0.315366268157959, -3.935844659805298, -0.852027952671051, -0.1032862439751625, -0.0015042430022731423, -3.383810043334961, -0.3205961585044861, -0.1960490643978119, -0.003503733780235052, -0.050126299262046814, -1.8596476365928538e-05, -0.0028079627081751823, -1.0816996097564697, -0.003352024592459202, -0.3591182231903076, -0.0009332115878351033, -0.1411229819059372, -1.4532825946807861, -1.0108333826065063, -0.38068968057632446, -1.500344157218933, -0.10161121934652328, -0.23060229420661926, -1.713576316833496, -0.10597352683544159, -0.00047469791024923325, -0.008981424383819103, -2.1639931201934814, -0.10092531144618988, -1.3374240398406982, -0.04483580216765404, -0.23350505530834198, -0.00015662873920518905, -2.3245540432981215e-05, -0.00011705666838679463, -0.41942697763442993, -9.727005090098828e-05, -0.0004223884898237884, -0.2569667398929596, -0.03618644177913666, -1.06308114528656, -1.802947759628296, -0.025821125134825706, -0.19126825034618378, -0.321795791387558, -0.00048792376765049994, -0.15879563987255096, -0.04559691622853279, -0.04493781179189682, -0.00047398300375789404, -0.004257187247276306, -0.00013529339048545808, -0.002273238729685545, -0.8819089531898499, -0.0026386703830212355, -0.0012890134239569306, -0.26774996519088745, -2.288770914077759, -2.0886647701263428, -0.310268759727478, -0.1380569189786911, -0.05218159779906273, -0.6874019503593445, -0.09497874230146408, -0.011813443154096603, -0.33472198247909546, -2.452139377593994, -0.12082454562187195, -0.0007021345663815737, -0.14354437589645386, -0.00400799885392189, -0.026393450796604156, -4.8397800128441304e-05, -0.0014119903789833188, -0.25528496503829956, -0.04125913977622986, -0.5927674770355225, -0.0034874591510742903, -0.3673820495605469, -2.952000856399536, -3.3378044463461265e-05, -0.007840926758944988, -0.00109576724935323, -5.483612312673358e-06, -8.22540732769994e-06, -0.07946343719959259, -0.0015185264637693763, -2.5987286790041253e-05, -0.8852835297584534, -0.40320107340812683, -0.000346362212439999, -2.6008706092834473, -0.0005507144378498197, -0.0006897454150021076, -0.008505310863256454, -0.002284894697368145, -0.011058353818953037, -0.024540454149246216, -0.0016526625258848071, -0.0018963703187182546, -0.28255751729011536, -0.26954585313796997, -0.015869978815317154, -2.875678777694702, -2.556171417236328, -0.18526946008205414, -1.5529820919036865, -0.03465083986520767, -0.0007555014453828335, -0.06197870895266533, -0.0022695516236126423, -0.20478209853172302, -1.9192511899746023e-05, -0.0002613918040879071, -0.06022770330309868, -0.004868201911449432, -0.04130443558096886, -0.04304341599345207, -0.1834145486354828, -0.002261463785544038, -0.1318800300359726, -0.0010702840518206358, -0.039747465401887894, -0.0005480932886712253, -8.844937838148326e-05, -0.019598646089434624, -7.748303323751315e-05, -6.675497570540756e-05, -0.0009826361201703548, -0.002393716247752309, -0.016324186697602272, -0.01357443630695343, -0.0014787701657041907, -0.00600178400054574, -4.2820329666137695, -2.395120143890381, -3.704723358154297, -0.013333793729543686, -0.7721066474914551, -1.1063324213027954, -1.1980246305465698, -2.682835817337036, -0.3217322826385498, -1.5704123973846436, -0.02674042619764805, -0.00015317220822907984, -0.0008350699208676815, -0.7191079258918762, -0.571630597114563, -0.0010356307029724121, -1.1124464273452759, -0.04922054335474968, -0.006186620332300663, -0.0008451942121610045, -4.6491513785440475e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0006868863711133599, -0.0020912461914122105, -1.0977425575256348, -0.08541810512542725, -0.25769224762916565, -0.29875123500823975, -0.1828334629535675, -0.12445962429046631, -1.3873811960220337, -0.010810972191393375, -0.19457297027111053, -0.00037651124875992537, -0.1309359073638916, -0.017619047313928604, -0.08443060517311096, -5.3165931603871286e-05, -0.0014963869471102953, -0.03389770910143852, -0.0020343814976513386, -0.08192605525255203, -0.012225925922393799, -1.1862541437149048, -0.9737340211868286, -0.2850855886936188, -2.122391939163208, -0.22624923288822174, -0.02260943315923214, -0.008721474558115005, -2.942950487136841, -1.5633018016815186, -2.42773699760437, -1.1059644222259521, -0.20683477818965912, -1.4513250589370728, -0.32752111554145813, -1.10890793800354, -0.15086078643798828, -0.0006833125371485949, -0.5456777215003967, -0.11229124665260315, -0.21147534251213074, -0.0038018582854419947, -0.00012396997772157192, -3.1709168979432434e-05, -0.00012575789878610522, -0.0005845506675541401, -0.016772091388702393, -0.002411317080259323, -0.0018797124503180385, -3.45700973412022e-05, -2.634490556374658e-05, -0.0004003438516519964, -0.00500781973823905, -0.004633879289031029, -1.9178385734558105, -0.001955979270860553, -0.011440507136285305, -0.38193216919898987, -0.10586275905370712, -0.46706709265708923, -0.03374258801341057, -0.008667231537401676, -0.26359453797340393, -2.0609216690063477, -3.2758452892303467, -0.00046969347749836743, -0.1251622885465622, -0.02100636437535286, -0.23596130311489105, -0.00010501786891836673, -0.00047708096099086106, -0.00015853578224778175, -0.001208885689266026, -0.0065691000781953335, -8.856858039507642e-05, -0.005729087628424168, -0.05188227817416191, -0.001958953682333231, -0.04078682139515877, -0.6098387241363525, -0.47958487272262573, -1.7040517330169678, -0.09642645716667175, -0.08037632703781128, -0.039192937314510345, -0.13225284218788147, -0.10668116062879562, -0.05065043643116951, -0.00026353701832704246, -0.005905086640268564, -0.00011669908417388797, -0.00011431517486926168, -0.5996652841567993, -0.8906257748603821], "finish_reason": "length"}], "metrics": {"energy": 874.8602315540309, "energy_per_token": 3.417422779507933, "time": 21.650894, "time_per_token": 0.0845738046875}}
{"outputs": [{"text": "ps = PorterStemmer()\n    # 1. Remove non-alphanumeric characters (except spaces)\n    text = re.sub(r'\\W+', ' ', text_series)\n    # 2. Convert to lowercase\n    text = text.str.lower()\n    # 3. Remove punctuation\n    text = text.str.replace(r'[^\\w\\s]', '', regex=True)\n    # 4. Stem the words to their root form\n    text = text.str.split().apply(lambda x: \" \".join([ps.stem(word) for word in x]))\n    return text", "tokens": ["ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "#", " ", "1", ".", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", " =", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " '", " '", ",", " text", "_", "series", ")", "\n", "    ", "#", " ", "2", ".", " Convert", " to", " lower", "case", "\n", "    ", "text", " =", " text", ".", "str", ".", "lower", "()", "\n", "    ", "#", " ", "3", ".", " Remove", " punct", "uation", "\n", "    ", "text", " =", " text", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "    ", "#", " ", "4", ".", " St", "em", " the", " words", " to", " their", " root", " form", "\n", "    ", "text", " =", " text", ".", "str", ".", "split", "()", ".", "apply", "(", "lambda", " x", ":", " \"", " \"", ".", "join", "([", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", "]))", "\n", "    ", "return", " text"], "logprobs": [-1.965488076210022, -0.014607389457523823, -0.003288221312686801, -2.50339189733495e-06, 0.0, 0.0, -0.0016313589876517653, -0.04605740308761597, -0.22977814078330994, -2.3125414848327637, -3.5889053344726562, -0.31993627548217773, -0.17432253062725067, -2.9818224906921387, -0.9437038898468018, -0.04419877752661705, -0.26420074701309204, -0.0007404923089779913, -0.003183774882927537, -0.1873340755701065, -0.86215740442276, -0.06952519714832306, -0.07506296783685684, -0.031424567103385925, -0.3041967749595642, -0.006925152149051428, -0.8678217530250549, -2.4175400733947754, -1.0362164974212646, -0.00014494798961095512, -0.014215397648513317, -0.18744201958179474, -0.048755377531051636, -2.248101234436035, -0.024746784940361977, -0.12470937520265579, -0.0007285801111720502, -0.07888577878475189, -0.00014077626110520214, -0.0001820160250645131, -0.045626185834407806, -0.015100803226232529, -0.0006252956227399409, -0.1282595992088318, -0.057820480316877365, -0.24101507663726807, -0.05289723351597786, -0.025195235386490822, -0.01231259386986494, -0.0029891119338572025, -0.807693600654602, -0.5056365132331848, -0.007070046849548817, -0.04623430222272873, -0.06021075323224068, -0.00019274283840786666, -0.026732416823506355, -0.010475648567080498, -0.028629204258322716, -0.1049814447760582, -0.3059121072292328, -0.00017569905321579427, -0.0012165057705715299, -3.540453326422721e-05, -0.00460516382008791, -0.0038932969328016043, -0.0039267828688025475, -0.007244981359690428, -0.008839051239192486, -0.0015324526466429234, -0.08504306524991989, -0.03437674790620804, -0.02436724118888378, -0.08929941058158875, -0.00038115866482257843, -0.0793786570429802, -0.005247035529464483, -0.15925413370132446, -0.0031041554175317287, -0.03378269821405411, -9.405170567333698e-05, -0.010803071781992912, -0.04573119059205055, -0.014133594930171967, -0.052854038774967194, -0.005238734185695648, -0.01121054869145155, -0.00075049843871966, -0.01178799569606781, -0.0010880271438509226, -0.0162145234644413, -0.0001389883691444993, -8.463501580990851e-05, -0.531086802482605, -0.000514017534442246, -0.0015793481143191457, -0.0024862352292984724, -0.0009675112669356167, -0.00014518637908622622, -0.005795698147267103, -0.00813303142786026, -0.004577633924782276, -0.01253888476639986, -0.02167361229658127, -0.0017810686258599162, -0.5741175413131714, -0.00023779425828251988, -2.8617289066314697, -0.35177451372146606, -1.1415886878967285, -0.100015789270401, -0.07632067799568176, -0.06532828509807587, -0.06668360531330109, -0.00287108332850039, -0.11662460118532181, -0.03270857408642769, -0.1188187226653099, -0.004129811190068722, -2.7951033115386963, -5.030505417380482e-05, -0.03115675412118435, -0.0008839037618599832, -0.06395994126796722, -0.021958671510219574, -0.00078671018127352, -0.028091656044125557, -0.01970583386719227, -0.002369336551055312, -1.7822299003601074, -0.003498744685202837, -0.0001991788885788992, -0.00024434918304905295, -0.04161597415804863, -0.003958367742598057, -7.629365427419543e-06, -2.4318398573086597e-05, -0.000259723310591653, -0.010668270289897919, -0.001807485707104206, -0.0018769757589325309, -0.00022885564249008894, -3.158996332786046e-05, -0.00016318420239258558, -0.0072783553041517735, -0.0037810755893588066, -0.2901573181152344, -0.0762447938323021, -0.009561222046613693], "finish_reason": "stop"}], "metrics": {"energy": 548.4436077022551, "energy_per_token": 3.6808295818943297, "time": 12.6153755, "time_per_token": 0.08466694966442953}}
{"outputs": [{"text": "# Convert text to lowercase\n    text_series = text_series.str.lower()\n\n    # Remove non-alphanumeric characters (except spaces)\n    text_series = text_series.str.replace(r'[^\\w\\s]', '', regex=True)\n\n    # Remove punctuation\n    text_series = text_series.str.replace(r'[^\\w\\s]', ' ', regex=True)\n\n    # Stem words using NLTK's PorterStemmer\n    ps = PorterStemmer()\n    text_series = text_series.str.split().apply(lambda x: [ps.stem(word) for word in x]).str.join(' ')\n\n    # Replace new lines with spaces\n    text_series = text_series.str.replace('\\n', ' ')\n\n    return text_series", "tokens": ["#", " Convert", " text", " to", " lower", "case", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "lower", "()", "\n", "\n", "    ", "#", " Remove", " non", "-", "al", "phan", "umeric", " characters", " (", "except", " spaces", ")", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " Remove", " punct", "uation", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", " '", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " St", "em", " words", " using", " N", "LT", "K", "'", "s", " Porter", "St", "em", "mer", "\n", "    ", "ps", " =", " Porter", "St", "em", "mer", "()", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "split", "()", ".", "apply", "(", "lambda", " x", ":", " [", "ps", ".", "stem", "(", "word", ")", " for", " word", " in", " x", "])", ".", "str", ".", "join", "('", " '", ")", "\n", "\n", "    ", "#", " Replace", " new", " lines", " with", " spaces", "\n", "    ", "text", "_", "series", " =", " text", "_", "series", ".", "str", ".", "replace", "('", "\\", "n", "'", ",", " '", " '", ")", "\n", "\n", "    ", "return", " text", "_", "series", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7937904596328735, -2.2333641052246094, -1.6111000776290894, -0.16700632870197296, -0.019429834559559822, -0.04562709853053093, -0.33786895871162415, -0.002286202972754836, -0.16462214291095734, -0.10818939656019211, -0.08066515624523163, -0.04096808657050133, -0.003933788277208805, -6.01988795096986e-05, -6.318072337307967e-06, -0.0001110968878492713, -0.026656275615096092, -2.3245540432981215e-05, -0.0010786197381094098, -4.088794958079234e-05, -0.003356420435011387, -0.21313132345676422, -0.0009738231892697513, -0.004870099946856499, -0.19881580770015717, -0.1330050677061081, -0.010574146173894405, -0.03936039283871651, -0.00021610308613162488, -0.000837571220472455, -0.059380143880844116, -0.5276087522506714, -0.024477291852235794, -0.08021394908428192, -0.02123408205807209, -0.12533973157405853, -0.0011320855701342225, -0.208214670419693, -0.0005913416389375925, -0.0029697385616600513, -0.0007176207727752626, -0.0051690032705664635, -5.125986263010418e-06, -2.098061486321967e-05, -9.63164638960734e-05, -0.8583093285560608, -1.2993727978027891e-05, -0.0016215997748076916, -0.033408068120479584, -0.09324347227811813, -1.1992621421813965, -0.0029646276962012053, -0.9289146065711975, -0.004811257589608431, -0.21870878338813782, -0.006365855690091848, -0.3706733286380768, -0.0004967409186065197, -0.00019810620869975537, -0.40850603580474854, -0.0005433275364339352, -0.008994773961603642, -0.002731047570705414, -0.002771942876279354, -0.0003014348621945828, -0.0122089684009552, -0.04307892918586731, -0.0007155956700444221, -0.00525581045076251, -0.09854485839605331, -0.0442790687084198, -0.00746260117739439, -0.07635270804166794, -0.0007201223634183407, -0.13669031858444214, -0.00045563330058939755, -0.0023431722074747086, -0.0004717191040981561, -0.0017403707606717944, -9.059865078597795e-06, -0.00014780859055463225, -3.397406908334233e-05, -0.00682534696534276, -9.894321920000948e-06, -0.014170853421092033, -0.009368977509438992, -0.006104988511651754, -0.01563422940671444, -0.0090824319049716, -0.0028477851301431656, -0.00033539868309162557, -0.015302046202123165, -5.9602869441732764e-05, -0.0322115384042263, -0.0005937243695370853, -1.7881233361549675e-05, -2.8145933151245117, -0.13568860292434692, -0.04032481461763382, -0.0010443239007145166, -0.0003457663697190583, -0.0007608617888763547, -7.855583680793643e-05, -0.005503977183252573, -0.014475332573056221, -0.0006598440813831985, -0.008432142436504364, -0.9492056369781494, -0.00019441144831944257, -1.1892116069793701, -1.4606285095214844, -0.802035927772522, -0.0007331067463383079, -9.440929716220126e-05, -0.11532844603061676, -3.0278701160568744e-05, -0.011325711384415627, -0.07022252678871155, -3.290122185717337e-05, -6.305972783593461e-05, -0.013941405341029167, -0.0019521719077602029, -1.4737768173217773, -0.0009843033039942384, -0.0008191090892069042, -5.8412379075889476e-06, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.000520570669323206, -0.007976818829774857, -0.03272553160786629, -0.1212310791015625, -0.0006654431927017868, -0.00796700268983841, -0.004580956418067217, -0.00904238410294056, -1.6927575416048057e-05, -4.172316494077677e-06, -6.115249561844394e-05, -2.339500904083252, -4.95898348162882e-05, -0.07013918459415436, -0.0022155519109219313, -0.155588299036026, -0.026467986404895782, -0.0053824507631361485, -0.03787855803966522, -0.04312334582209587, -0.0019984529353678226, -0.5081197619438171, -0.0018391376361250877, -5.245195097813848e-06, -1.5735502529423684e-05, -0.00047779586748220026, -0.04660017415881157, -0.0017184742027893662, -0.0026502031832933426, -0.00015889335190877318, -2.6464111215318553e-05, -0.0002165798214264214, -0.0012232924345880747, -0.944675087928772, -0.0035038527566939592, -9.727005090098828e-05, -9.536738616588991e-07, -0.23484328389167786, -0.00027378625236451626, -5.757642793469131e-05, -0.0017752378480508924, -0.01768861897289753, -0.0002244459028588608, -2.1802642345428467, -3.158224105834961, -3.1603987216949463, -2.4469151496887207, -0.41053903102874756, -0.36581477522850037, -0.0661635622382164, -0.001465200330130756, -0.04236365854740143, -0.0002592465898487717, -0.0002232540718978271, -0.0017088347813114524, -0.0011694743297994137, -5.483612312673358e-06, -1.3112935448589269e-05, -8.999896090244874e-05, -0.06030043214559555, -2.1219027985353023e-05, -0.00033563701435923576, -0.5344287157058716, -0.023418156430125237, -0.011736392974853516, -0.006782130803912878, -0.0001714082609396428, -0.020287860184907913, -0.0055740405805408955, -0.539772629737854, -0.01852426491677761, -0.04239485412836075, -0.0004259632551111281, -0.36577385663986206, -0.0043252017349004745, -1.2516897186287679e-05, -0.00017307691450696439, -0.9269439578056335, -6.556489552167477e-06, -1.156323378381785e-05, -2.264974000354414e-06, -9.894321920000948e-06, -0.1462480127811432], "finish_reason": "stop"}], "metrics": {"energy": 779.8638671531677, "energy_per_token": 3.6960372850861027, "time": 17.866055, "time_per_token": 0.08467324644549763}}
