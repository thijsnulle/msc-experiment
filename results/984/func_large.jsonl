{"outputs": [{"text": "# Validate x_column\n    if x_column not in df.columns:\n        raise ValueError(f\"Column '{x_column}' not found in DataFrame\")\n\n    # Validate y_column\n    if y_column not in df.columns:\n        raise ValueError(f\"Column '{y_column}' not found in DataFrame\")\n\n    # Check if data in columns are numeric\n    if not pd.api.types.is_numeric_dtype(df[x_column]):\n        raise ValueError(f\"Column '{x_column}' does not contain numeric data\")\n\n    if not pd.api.types.is_numeric_dtype(df[y_column]):\n        raise ValueError(f\"Column '{y_column}' does not contain numeric data\")\n\n    # Drop NaN values\n    df = df.dropna(subset=[x_column, y_column])\n\n    # Get data for x and y columns\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column]", "tokens": ["#", " Valid", "ate", " x", "_", "column", "\n", "    ", "if", " x", "_", "column", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "x", "_", "column", "}'", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "#", " Valid", "ate", " y", "_", "column", "\n", "    ", "if", " y", "_", "column", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "y", "_", "column", "}'", " not", " found", " in", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " data", " in", " columns", " are", " numeric", "\n", "    ", "if", " not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "x", "_", "column", "]", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "x", "_", "column", "}'", " does", " not", " contain", " numeric", " data", "\"", ")", "\n", "\n", "    ", "if", " not", " pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "df", "[", "y", "_", "column", "]", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Column", " '", "{", "y", "_", "column", "}'", " does", " not", " contain", " numeric", " data", "\"", ")", "\n", "\n", "    ", "#", " Drop", " Na", "N", " values", "\n", "    ", "df", " =", " df", ".", "drop", "na", "(", "subset", "=[", "x", "_", "column", ",", " y", "_", "column", "])", "\n", "\n", "    ", "#", " Get", " data", " for", " x", " and", " y", " columns", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]"], "logprobs": [-1.1208440065383911, -3.8254647254943848, -0.030285686254501343, -3.4653799533843994, -0.19352811574935913, -0.010242990218102932, -1.5775878429412842, -0.0012634160229936242, -0.09746967256069183, -0.42741212248802185, -3.0517112463712692e-05, -6.318072337307967e-06, -0.0383785218000412, -1.5497195136049413e-06, -0.01059596799314022, -0.05786559730768204, -0.0014899593079462647, -0.062215544283390045, -0.0009685831028036773, -0.0021096847485750914, -0.02884604223072529, -0.08172262459993362, -4.5060096454108134e-05, -0.035955894738435745, -0.43242886662483215, -0.054211340844631195, -1.1460564136505127, -0.3675227165222168, -0.0009391664643771946, -0.0010617101797834039, -2.861018856492592e-06, -1.3589766240329482e-05, -0.0028015433344990015, -0.2085319310426712, -0.15280117094516754, -0.01558528933674097, -0.29829487204551697, -0.0011123190633952618, -0.5501065850257874, -0.00019870213873218745, -0.0005210472736507654, -0.6199133396148682, -0.0009369035833515227, -0.014600105583667755, -0.022241786122322083, -0.0002134810492862016, -0.0577661357820034, -0.0007253637886606157, -0.0002115741081070155, -0.0025900411419570446, -8.83301836438477e-05, -0.0008879532688297331, -0.0025805288460105658, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00025781645672395825, -2.2172682292875834e-05, -3.325883881188929e-05, -0.0001546025014249608, -1.4066597032069694e-05, -0.0003026265767402947, -1.7881233361549675e-05, -0.0002019201492657885, -0.00022098960471339524, -0.00010585224663373083, -5.364403477869928e-06, -4.60137271147687e-05, -0.001328062848187983, -2.455681169521995e-05, -0.00017796363681554794, -0.00044276448898017406, -1.3708974620385561e-05, -0.0010804060148075223, -1.5497195136049413e-06, -2.622600959512056e-06, -0.00012599628826137632, -0.00012766500003635883, -1.07287787614041e-05, -2.2411095415009186e-05, -7.462222856702283e-05, -4.6491513785440475e-06, -0.001258772797882557, -8.809178689261898e-05, -4.565611743601039e-05, -0.00454618688672781, -0.001508409040980041, -0.0933246985077858, -2.4414713382720947, -0.6371245384216309, -2.7209537029266357, -1.0024888515472412, -1.2615305185317993, -0.9233086109161377, -0.03706904128193855, -0.053994402289390564, -0.001479603466577828, -0.09146133810281754, -0.06840698421001434, -0.6205891966819763, -0.00012027494085486978, -0.020264729857444763, -1.1920922133867862e-06, -1.8596476365928538e-05, -2.50339189733495e-06, -0.002476840978488326, -4.768370445162873e-07, -0.006413828115910292, -1.1324817933200393e-05, -0.00011729506513802335, -1.1920922133867862e-06, -0.000176652567461133, -0.0025034775026142597, -0.007117156405001879, -0.002979246899485588, -2.264974000354414e-06, -3.099436753473128e-06, -0.1362115889787674, -0.01791498437523842, -0.0005516675882972777, -0.0009303532424382865, -0.0050723436288535595, -0.29798123240470886, -1.4066597032069694e-05, -0.006193729117512703, -0.07218019664287567, -0.0015420938143506646, -0.5149287581443787, -0.015063228085637093, -6.353653589030728e-05, -0.0004085659747943282, -2.622600959512056e-06, -2.8967437174287625e-05, -0.001466033631004393, -1.6301093101501465, -0.00041762212640605867, -0.037374094128608704, -0.031087996438145638, -0.0703897625207901, -0.012883285991847515, -8.153582894010469e-05, -4.9828242481453344e-05, -0.8431862592697144, -0.00012134769349358976, -0.041405778378248215, -0.00013314791431184858, -0.0013722298899665475, -7.152555099310121e-07, -3.290122185717337e-05, -2.3841855067985307e-07, -1.3589766240329482e-05, -2.3841830625315197e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -3.4570634852570947e-06, -2.3841855067985307e-07, -4.768370445162873e-07, 0.0, -2.3007127310847864e-05, -1.4424220353248529e-05, -0.00016604475968051702, -0.0005093707586638629, -7.152555099310121e-07, -7.152555099310121e-07, -0.00011264643399044871, -1.3589766240329482e-05, -1.3589766240329482e-05, -0.0002616301644593477, -5.793403761344962e-05, -7.56950321374461e-05, -3.576278118089249e-07, -3.182837463100441e-05, -0.0007780147134326398, -9.417489309271332e-06, -0.00011669908417388797, -0.0002942844294011593, -2.8013790142722428e-05, -0.00048315772437490523, -1.0967194612021558e-05, -1.585470999998506e-05, -0.0002616301644593477, -6.806619057897478e-05, -7.247662142617628e-05, -1.4066597032069694e-05, -5.972207145532593e-05, -0.00010263393050990999, -0.00040368037298321724, -0.0001037067049765028, -3.0636318115284666e-05, -0.008525758981704712, -0.002131453948095441, -0.18910618126392365, -3.3035523891448975, -1.5277804136276245, -0.20839451253414154, -0.15832941234111786, -0.43050023913383484, -0.0005004345439374447, -0.02685868740081787, -0.4694605767726898, -0.0007796823629178107, -0.050144098699092865, -0.004621183034032583, -0.00018070495571009815, -0.40939223766326904, -0.039257586002349854, -0.002651867689564824, -0.00445528281852603, -4.410734163684538e-06, -1.1920858014491387e-05, -0.016087606549263, -0.0026991860941052437, -4.768370445162873e-07, -3.576278118089249e-07, -0.00626338878646493, -0.008359914645552635, -0.035042960196733475, -0.0009666775586083531, -0.0825873538851738, -2.700202226638794, -1.6631603240966797, -1.1061657667160034, -0.7099367380142212, -0.5234377384185791, -0.0008830699953250587, -0.44421419501304626, -0.09948118776082993, -0.0003703146940097213, -0.10051453113555908, -0.16442404687404633, -0.03653290867805481, -0.011276677250862122, -0.0001934579631779343, -8.344646857949556e-07, -3.576278118089249e-07, -0.00019262365822214633, -0.07482263445854187, -0.3039410710334778, -0.0850614607334137, -0.00011169286881340668, 0.0, -0.008192387409508228, -8.106198947643861e-06, -3.3378044463461265e-05, -0.007945715449750423, -9.298280929215252e-06, -1.168244216387393e-05, -0.10115989297628403, -0.0013654442736878991, -0.0017705968348309398, -0.0001003691868390888, -4.0411134250462055e-05, -9.476689592702314e-05, -1.5139465176616795e-05, -5.960462772236497e-07, -1.7881377516459906e-06, -1.6689286894688848e-06], "finish_reason": "length"}], "metrics": {"energy": 1066.4767505598068, "energy_per_token": 4.165924806874245, "time": 27.006287, "time_per_token": 0.10549330859375}}
{"outputs": [{"text": "# Extract the specified columns from the DataFrame\n    df = df[[x_column, y_column]]\n\n    # Plot the scatter plot of the two columns\n    ax = df.plot.scatter(x_column, y_column)\n\n    # Fit a linear regression model to the data\n    lr = LinearRegression()\n    lr.fit(df[x_column].values.reshape(-1, 1), df[y_column])\n\n    # Plot the predicted regression line on top of the scatter plot\n    x_min, x_max = df[x_column].min(), df[x_column].max()\n    x_values = np.linspace(x_min, x_max, num=100).reshape(-1, 1)\n    y_values = lr.predict(x_values)\n    ax.plot(x_values, y_values, color='red')\n\n    return ax", "tokens": ["#", " Ext", "ract", " the", " specified", " columns", " from", " the", " Data", "Frame", "\n", "    ", "df", " =", " df", "[[", "x", "_", "column", ",", " y", "_", "column", "]]", "\n", "\n", "    ", "#", " Plot", " the", " scatter", " plot", " of", " the", " two", " columns", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "_", "column", ",", " y", "_", "column", ")", "\n", "\n", "    ", "#", " Fit", " a", " linear", " regression", " model", " to", " the", " data", "\n", "    ", "lr", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "lr", ".", "fit", "(", "df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " df", "[", "y", "_", "column", "])", "\n", "\n", "    ", "#", " Plot", " the", " predicted", " regression", " line", " on", " top", " of", " the", " scatter", " plot", "\n", "    ", "x", "_", "min", ",", " x", "_", "max", " =", " df", "[", "x", "_", "column", "]", ".", "min", "()", ",", " df", "[", "x", "_", "column", "]", ".", "max", "()", "\n", "    ", "x", "_", "values", " =", " np", ".", "l", "inspace", "(", "x", "_", "min", ",", " x", "_", "max", ",", " num", "=", "1", "0", "0", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", "_", "values", " =", " l", "r", ".", "predict", "(", "x", "_", "values", ")", "\n", "    ", "ax", ".", "plot", "(", "x", "_", "values", ",", " y", "_", "values", ",", " color", "='", "red", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.102859377861023, -2.464125394821167, -0.11993750184774399, -0.34847569465637207, -2.4936304092407227, -0.05502470210194588, -0.19791093468666077, -0.011988374404609203, -0.09379151463508606, -0.0016986002447083592, -0.23350675404071808, -0.002613345393911004, -2.5805270671844482, -0.8358762264251709, -0.043821070343256, -0.18285630643367767, -0.00995374470949173, -7.855583680793643e-05, -6.925819616299123e-05, -0.0012060280423611403, -0.013093563728034496, -1.0728830375228426e-06, -1.5497195136049413e-06, -0.00151305110193789, -0.15092341601848602, -0.4870931804180145, -0.0009240409708581865, -0.03740590438246727, -2.079228401184082, -0.2534728944301605, -0.21878540515899658, -0.7161779999732971, -2.8211183547973633, -0.054740000516176224, -2.7520031929016113, -0.2799968123435974, -0.19233129918575287, -0.0015444743912667036, -0.221415713429451, -0.002156077418476343, -0.1943613886833191, -0.018615538254380226, -9.595887240720913e-05, -0.19997277855873108, -3.9934315282152966e-05, -0.0012425805907696486, -0.011385703459382057, -0.7936643362045288, -0.0006864098832011223, -8.308542601298541e-05, -0.005873681511729956, -0.00037043384509161115, -5.960446742392378e-06, -0.5194698572158813, -0.005858156364411116, -0.04060209169983864, -0.0005142558366060257, -0.0045998236164450645, -0.5227342247962952, -0.19629497826099396, -0.013138978742063046, -0.003270517336204648, -0.01200780924409628, -0.05989968031644821, -0.002351259347051382, -0.058682627975940704, -0.21840497851371765, -0.0006130246329121292, -1.956990122795105, -0.04160614311695099, -0.0010095505276694894, -7.867782187531702e-06, -2.3841855067985307e-07, -0.003864678554236889, -0.12207773327827454, -0.03417101129889488, -0.06107734516263008, -0.0034341190475970507, -1.3112935448589269e-05, -0.0006733057671226561, -0.01634635217487812, -0.20669400691986084, -0.0018260485958307981, -8.797258487902582e-05, -4.31528314948082e-05, -0.0006923662149347365, -0.020520294085144997, -0.36423859000205994, -0.005968485958874226, -3.4689302992774174e-05, 0.0, -0.002529875375330448, -2.2172682292875834e-05, -7.30726242181845e-05, -0.10177823156118393, -2.4676019165781327e-05, -4.386805812828243e-05, -0.0002299282787134871, -0.006763067562133074, -0.0006562701892107725, -0.00013136000779923052, -3.814689989667386e-06, -1.0132738680113107e-05, -1.2300183773040771, -0.06536948680877686, -0.07753124833106995, -0.0003060825983993709, -0.005962916649878025, -1.4678292274475098, -0.006539137102663517, -1.1538513898849487, -0.10319195687770844, -0.0005143749876879156, -0.26195022463798523, -0.46743279695510864, -0.5022451877593994, -0.0012946089264005423, -0.019598528742790222, -0.15946169197559357, -0.16571642458438873, -0.0007514513563364744, -0.613356351852417, -0.4253869950771332, -0.7841089367866516, -0.972618579864502, -0.0022292304784059525, -8.22540732769994e-06, -2.5152843591058627e-05, -0.00021705655672121793, -0.1445857137441635, -0.0038100522942841053, -0.0009230881696566939, -1.1086402082582936e-05, -6.437280717364047e-06, -3.7431014789035544e-05, -6.079655122448457e-06, -0.0035810647532343864, -0.0005947966128587723, -0.032873887568712234, -0.001604342251084745, -3.158996332786046e-05, -0.0005183068569749594, -8.344646857949556e-07, -1.1920928244535389e-07, -5.483612312673358e-06, -2.50339189733495e-06, -0.0002833203470800072, -4.529942543740617e-06, -0.0028961640782654285, -0.0017135950038209558, -0.14947031438350677, -0.3078271150588989, -3.1058437824249268, -0.001974420389160514, -0.02657444030046463, -8.344646857949556e-07, -0.3650793433189392, -1.1920928244535389e-07, -1.1205610462639015e-05, -0.004739005118608475, -0.00011443436960689723, -3.802703940891661e-05, -0.0032256022095680237, -0.00021062063751742244, -3.576278118089249e-07, -3.933898824470816e-06, -0.05601426959037781, -1.7002229690551758, -0.0016906267264857888, -0.18363292515277863, -0.0007995745982043445, -0.056062400341033936, -0.05366048589348793, -0.5306263566017151, -1.5258672647178173e-05, 0.0, -0.000957030919380486, -1.0847986231965479e-05, -7.068861305015162e-05, -0.002628207439556718, -6.079655122448457e-06, -7.152531907195225e-06, -0.01713988184928894, -0.001760719926096499, -0.02396020106971264, -0.00021062063751742244, -0.31209126114845276, -0.0009516716236248612, -0.0004932855372317135, -9.536738616588991e-07, -3.099436753473128e-06, -0.08108361810445786, -3.683499380713329e-05, -0.00024303820100612938, -5.900685573578812e-05, -5.364403477869928e-06, -0.0029666482005268335, -0.007020922377705574, -0.11361517757177353, -0.2279626578092575, -0.001693839905783534, -0.000982397934421897, -0.00018499570433050394, -0.0039024401921778917, -6.770858453819528e-05, -1.2159273865108844e-05, -0.8122888803482056, -0.00043358939001336694, -2.276871418871451e-05, -2.0265558760002023e-06, -0.003566216677427292, -0.16102266311645508, -0.030482392758131027, -0.10392992198467255, -0.15666639804840088, -0.0014687713701277971, -0.04346787557005882, -0.0005138983833603561, -0.34412842988967896, -0.0024480633437633514, -0.1546267867088318, -0.016199979931116104, -1.8070179224014282], "finish_reason": "stop"}], "metrics": {"energy": 767.4852217979434, "energy_per_token": 3.44163776591006, "time": 18.936087, "time_per_token": 0.08491518834080718}}
{"outputs": [{"text": "# Create a scatterplot of the specified columns\n    ax = df[[y_column, x_column]].plot.scatter(x=x_column, y=y_column)\n\n    # Fit the linear regression model to the data\n    X = df[x_column].values.reshape(-1, 1)\n    Y = df[y_column].values.reshape(-1, 1)\n    lr_model = LinearRegression().fit(X, Y)\n\n    # Create x and y values to plot the linear regression line\n    x_line = np.array(df[x_column].min(), df[x_column].max()).reshape(-1, 1)\n    y_line = lr_model.predict(x_line)\n\n    # Plot the linear regression line on the scatterplot\n    ax.plot(x_line, y_line, color='r')\n\n    return ax", "tokens": ["#", " Create", " a", " scatter", "plot", " of", " the", " specified", " columns", "\n", "    ", "ax", " =", " df", "[[", "y", "_", "column", ",", " x", "_", "column", "]]", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ")", "\n", "\n", "    ", "#", " Fit", " the", " linear", " regression", " model", " to", " the", " data", "\n", "    ", "X", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "Y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "lr", "_", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " Y", ")", "\n", "\n", "    ", "#", " Create", " x", " and", " y", " values", " to", " plot", " the", " linear", " regression", " line", "\n", "    ", "x", "_", "line", " =", " np", ".", "array", "(", "df", "[", "x", "_", "column", "]", ".", "min", "()", ",", " df", "[", "x", "_", "column", "]", ".", "max", "())", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", "_", "line", " =", " l", "r", "_", "model", ".", "predict", "(", "x", "_", "line", ")", "\n", "\n", "    ", "#", " Plot", " the", " linear", " regression", " line", " on", " the", " scatter", "plot", "\n", "    ", "ax", ".", "plot", "(", "x", "_", "line", ",", " y", "_", "line", ",", " color", "='", "r", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.102859377861023, -2.1246325969696045, -0.4014640152454376, -0.9186903238296509, -1.164751648902893, -1.1422284841537476, -0.2291453778743744, -1.1573439836502075, -0.19093561172485352, -0.5029032230377197, -0.003415823681280017, -0.2754187285900116, -0.003127447795122862, -0.2798817455768585, -2.0142807960510254, -2.2363717555999756, -5.304672595229931e-05, -9.63164638960734e-05, -0.2498077154159546, -0.04595152288675308, -3.814689989667386e-06, -3.2186455882765586e-06, -0.001100768567994237, -0.0007216709782369435, -0.003729176241904497, -0.2616938650608063, -0.00013684290752280504, -0.0030957176350057125, -0.5001786947250366, -0.3873956799507141, -0.12233029305934906, -1.6093124941107817e-05, -5.364403477869928e-06, -0.0011485177092254162, -0.006432779133319855, -0.0013161577517166734, -0.0008174415561370552, -3.6954811548639555e-06, -7.152555099310121e-07, -0.4061802625656128, -0.007402254734188318, -0.3714207708835602, -0.0006666345288977027, -0.017416629940271378, -0.6268272399902344, -2.2237656116485596, -0.36155492067337036, -0.01990404911339283, -0.05306410416960716, -0.9364818334579468, -0.011592173017561436, -0.1488792449235916, -0.22937126457691193, -0.0007109498255886137, -1.8022233247756958, -0.02412313036620617, -0.08442140370607376, -0.25902059674263, -0.008906282484531403, -3.8980677345534787e-05, -2.145764938177308e-06, -0.00037555795279331505, -0.005679660011082888, -0.16124579310417175, -0.01455287728458643, -1.4305012882687151e-05, 0.0, -0.0028526587411761284, -2.753696753643453e-05, -3.766942609217949e-05, -0.02923049032688141, -2.396077979938127e-05, -2.312633478140924e-05, -0.14135576784610748, -0.0003351603518240154, -2.6645114421844482, -0.0005771639989688993, -0.00027533553657121956, -0.0032806170638650656, -5.6503606174374e-05, -4.768370445162873e-07, -8.344646857949556e-07, -9.775113539944869e-06, -0.06086963042616844, -0.0006272017490118742, -0.1050785705447197, -0.00019453064305707812, 0.0, -6.317892984952778e-05, -3.576278118089249e-07, -2.6464111215318553e-05, -0.001053255284205079, -2.0265558760002023e-06, -2.706014311115723e-05, -0.0006312523037195206, -0.0997796505689621, -1.520725131034851, -2.7453160285949707, -0.03492347523570061, -0.001934444298967719, -0.001142564113251865, -5.483612312673358e-06, -9.536738616588991e-07, -0.00390101526863873, -0.6390451788902283, -2.658331868587993e-05, -0.00012158608296886086, -0.0005206898204050958, -0.009377598762512207, -0.01232919655740261, -0.00037889453233219683, -0.0036936646793037653, -0.08922625333070755, -0.00042965717148035765, -0.022343328222632408, -2.2435758113861084, -2.651951789855957, -1.580588698387146, -0.010059492662549019, -0.4695197641849518, -1.341160774230957, -0.24860337376594543, -0.07616680860519409, -1.6363710165023804, -0.0175151489675045, -0.06589730829000473, -0.053440261632204056, -0.0004553949984256178, -0.5309026837348938, -0.21193036437034607, -2.096275806427002, -0.03442235663533211, -0.10101324319839478, -7.510157047363464e-06, -1.41238534450531, -0.6911647915840149, -2.3321754932403564, -0.03340345621109009, -0.0027999980375170708, -6.437280717364047e-06, -1.0132738680113107e-05, -0.07097123563289642, -0.001110175740905106, -0.23992639780044556, -0.025875840336084366, -0.1330784261226654, -0.015941666439175606, -0.0002723561483435333, -0.0007619338575750589, -1.7881377516459906e-06, -6.437280717364047e-06, -1.0371154530730564e-05, -1.3232143828645349e-05, -6.890059739816934e-05, -0.014116552658379078, -0.04510784149169922, -3.3378044463461265e-05, -2.3841855067985307e-07, -6.270212179515511e-05, -8.22540732769994e-06, -0.000388665939681232, -0.002786802826449275, -0.00012861855793744326, -6.05564855504781e-05, -0.006799891125410795, -0.0004884004010818899, -0.026815516874194145, -0.0009964506607502699, -0.0024551982060074806, -0.0004674295778386295, -0.005463667679578066, -4.0531076592742465e-06, -3.266281055402942e-05, -9.536738616588991e-07, -6.69933797325939e-05, -0.13908697664737701, -7.545663538621739e-05, -0.01875617541372776, -0.0001839230244513601, -1.597391747054644e-05, -0.0012630588607862592, -0.00888028834015131, -0.017483403906226158, -0.000248401309363544, -0.0064048259519040585, -0.18036016821861267, -0.00498646916821599, -0.14611998200416565, -0.001208766596391797, -0.0038311907555907965, -0.5947048664093018, -0.3441007137298584, -1.9845384359359741, -0.2764250338077545, -0.2284596711397171, -0.000624104228336364, -0.556569516658783, -0.003038078313693404, -0.0075818635523319244, -0.00028451209072954953, -0.0037131428252905607, -0.0006098079611547291, -1.585470999998506e-05, -0.015833957120776176, -0.0004102342063561082, -0.00019572250312194228, -4.768360213347478e-06, -0.01653292030096054, -0.4803570508956909, -0.1358060985803604, -1.9891873598098755, -0.061869457364082336, -0.004570869728922844, -0.1201033890247345, -0.0007961202645674348, -0.15773703157901764, -0.003001472447067499, -0.1443120837211609, -0.022025959566235542, -0.8722283840179443], "finish_reason": "stop"}], "metrics": {"energy": 767.802202007294, "energy_per_token": 3.4900100091240636, "time": 18.885588, "time_per_token": 0.08584358181818182}}
{"outputs": [{"text": "# Convert x_column and y_column to Series\n    x_column = df[x_column]\n    y_column = df[y_column]\n\n    # Create scatterplot\n    ax = sns.scatterplot(data=df, x=x_column, y=y_column)\n\n    # Fit linear regression model and predict y values\n    model = LinearRegression()\n    model.fit(x_column.to_frame(), y_column)\n    y_pred = model.predict(x_column.to_frame())\n\n    # Plot predicted line on scatterplot\n    ax.plot(x_column, y_pred, 'r')\n\n    return ax", "tokens": ["#", " Convert", " x", "_", "column", " and", " y", "_", "column", " to", " Series", "\n", "    ", "x", "_", "column", " =", " df", "[", "x", "_", "column", "]", "\n", "    ", "y", "_", "column", " =", " df", "[", "y", "_", "column", "]", "\n", "\n", "    ", "#", " Create", " scatter", "plot", "\n", "    ", "ax", " =", " s", "ns", ".", "scatter", "plot", "(", "data", "=", "df", ",", " x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ")", "\n", "\n", "    ", "#", " Fit", " linear", " regression", " model", " and", " predict", " y", " values", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "x", "_", "column", ".", "to", "_", "frame", "()", ",", " y", "_", "column", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", "_", "column", ".", "to", "_", "frame", "())", "\n", "\n", "    ", "#", " Plot", " predicted", " line", " on", " scatter", "plot", "\n", "    ", "ax", ".", "plot", "(", "x", "_", "column", ",", " y", "_", "pred", ",", " '", "r", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.102859377861023, -3.6929519176483154, -2.4072296619415283, -0.33719727396965027, -0.027204688638448715, -0.26622939109802246, -0.001321038813330233, -0.0012561534531414509, -0.004090277012437582, -0.14019864797592163, -3.1189088821411133, -1.5420323610305786, -0.0023296140134334564, -0.11611960828304291, -1.0524861812591553, -1.03778076171875, -0.176791712641716, -0.0665358304977417, -0.01716671511530876, -0.0017826156690716743, -3.6954811548639555e-06, -1.3708974620385561e-05, -0.00037555795279331505, -0.0701364055275917, -0.00041940953815355897, -0.002695143921300769, -0.00014161060971673578, -2.4676019165781327e-05, -0.0004146431456319988, -0.00025293012731708586, -0.00010358751023886725, -4.1483970562694594e-05, -5.960462772236497e-07, 0.0, -2.992108420585282e-05, -0.0006224363460205495, -0.21176880598068237, -0.0009832315845414996, -0.06840063631534576, -1.3448086977005005, -1.3718805313110352, -1.1056805849075317, -0.47096654772758484, -0.000977276940830052, -0.17639955878257751, -0.005025493446737528, -1.1623508930206299, -0.000636255950666964, -0.0002965487365145236, -0.009631002321839333, -8.4638240878121e-06, -0.00028701478731818497, -1.3699663877487183, -0.05026110261678696, -0.08602044731378555, -0.00656365230679512, -0.03258557617664337, -0.0013524680398404598, -0.003613610751926899, -1.3470558769768104e-05, -2.0265558760002023e-06, -0.019593970850110054, -0.003118297317996621, -0.00018416139937471598, -0.0006105228094384074, -1.9073468138230965e-06, -1.1205610462639015e-05, -0.16819502413272858, -0.006660641171038151, -0.07379160821437836, -0.00068926892708987, -0.010355786420404911, -0.4150013029575348, -0.21478715538978577, -0.01250545121729374, -0.05654231458902359, -1.7943021059036255, -1.6062473058700562, -1.5523170232772827, -0.5130963325500488, -0.5522553324699402, -0.0003781795676331967, -0.8967755436897278, -0.0021686863619834185, -0.0008282806375063956, -5.960446742392378e-06, 0.0, -0.0016068416880443692, -0.3293387293815613, -0.002967718057334423, -0.14196869730949402, -0.00730711268261075, -1.7046782886609435e-05, -0.0006911749369464815, -0.07038231194019318, -0.0007500219508074224, -1.3470558769768104e-05, -0.04398935288190842, -0.6169230937957764, -2.1219027985353023e-05, -0.7432610392570496, -0.0015910121146589518, -0.0004368066438473761, -0.004076030571013689, -0.0033182818442583084, -3.433168603805825e-05, -0.03306259214878082, -0.009490846656262875, -0.022896673530340195, -0.10044531524181366, -0.0041853697039186954, -0.0532827191054821, -0.07199840247631073, -0.0014074668288230896, -5.447716102935374e-05, -0.0009672730811871588, -0.00021491125517059118, -0.0033163807820528746, -0.00016819016309455037, -1.490105023549404e-05, -0.00041869457345455885, -0.0008933129138313234, -3.576278118089249e-07, -0.00013863079948350787, -0.0001486429391661659, -0.0019116000039502978, -0.014199766330420971, -0.0003343261778354645, -0.0042294105514883995, -0.9375039935112, -1.2352699041366577, -2.6530261039733887, -0.6188046932220459, -1.4181909561157227, -0.12101637572050095, -0.14501188695430756, -0.00036066226311959326, -0.5823050141334534, -0.003769793314859271, -0.005056094378232956, -0.0017485818825662136, -0.006344296969473362, -0.0013505632523447275, -0.0002991705550812185, -0.009063412435352802, -0.0008841419476084411, -5.519237674889155e-05, -5.6622808187967166e-05, -0.011327361688017845, -2.0746543407440186, -0.012401962652802467, -0.15357346832752228, -0.012691443786025047, -0.0817032903432846, -0.0010783816687762737, -0.21933956444263458, -0.002283824374899268, -0.14773109555244446, -0.023077482357621193, -1.7312464714050293], "finish_reason": "stop"}], "metrics": {"energy": 554.1217295570375, "energy_per_token": 3.4632608097314845, "time": 13.662189, "time_per_token": 0.08538868125}}
{"outputs": [{"text": "# Convert to numpy arrays\n    X = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n\n    # Initialize LinearRegression model\n    linear_regression = LinearRegression()\n\n    # Fit linear regression model to data\n    linear_regression.fit(X, y)\n\n    # Get predicted values using fitted model\n    y_pred = linear_regression.predict(X)\n\n    # Initialize figure and axes\n    fig, ax = plt.subplots(figsize=(7, 7))\n\n    # Plot the scatterplot\n    ax.scatter(X, y)\n\n    # Plot the linear regression line\n    ax.plot(X, y_pred, color='red')\n\n    # Return the Axes object containing the plot\n    return ax", "tokens": ["#", " Convert", " to", " numpy", " arrays", "\n", "    ", "X", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "\n", "    ", "#", " Initialize", " Linear", "Reg", "ression", " model", "\n", "    ", "linear", "_", "reg", "ression", " =", " Linear", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " linear", " regression", " model", " to", " data", "\n", "    ", "linear", "_", "reg", "ression", ".", "fit", "(", "X", ",", " y", ")", "\n", "\n", "    ", "#", " Get", " predicted", " values", " using", " fitted", " model", "\n", "    ", "y", "_", "pred", " =", " linear", "_", "reg", "ression", ".", "predict", "(", "X", ")", "\n", "\n", "    ", "#", " Initialize", " figure", " and", " axes", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "7", ",", " ", "7", "))", "\n", "\n", "    ", "#", " Plot", " the", " scatter", "plot", "\n", "    ", "ax", ".", "scatter", "(", "X", ",", " y", ")", "\n", "\n", "    ", "#", " Plot", " the", " linear", " regression", " line", "\n", "    ", "ax", ".", "plot", "(", "X", ",", " y", "_", "pred", ",", " color", "='", "red", "')", "\n", "\n", "    ", "#", " Return", " the", " Ax", "es", " object", " containing", " the", " plot", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.102859377861023, -3.6929519176483154, -3.111137628555298, -0.9526377320289612, -2.03080153465271, -0.7477535605430603, -0.0026253541000187397, -2.283112049102783, -0.05252992361783981, -0.05894969031214714, -0.09539873898029327, -0.0019665679428726435, -2.8132995794294402e-05, -5.960446742392378e-06, -0.0002420847595203668, -0.0058573270216584206, -0.3559187352657318, -0.22035962343215942, -0.00041059168870560825, 0.0, -0.017127929255366325, -3.313963316031732e-05, -8.892617915989831e-05, -0.031365767121315, -4.124556289752945e-05, -5.352353764465079e-05, -0.1471255123615265, -0.0009330924949608743, -0.10265237092971802, -0.0008431693422608078, -0.0004359725280664861, -0.00036483307485468686, -0.00011777184408856556, -3.2186455882765586e-06, -7.152555099310121e-07, -9.059865078597795e-06, -0.022305672988295555, -0.001647544908337295, -0.18445128202438354, -0.00017677174764685333, -4.768370445162873e-07, -0.00027616979787126184, -8.344646857949556e-07, -2.8132995794294402e-05, -0.0023347281385213137, -7.033323527139146e-06, -2.5033637939486653e-05, -0.0015847040340304375, -0.1609746515750885, -0.001081358641386032, -0.04942263662815094, -3.082345962524414, -2.0324764251708984, -0.594750165939331, -0.0005619138828478754, -0.3988981246948242, -0.3008606433868408, -0.00023922442051116377, -2.4158411026000977, -0.02190537564456463, -0.1144736111164093, -0.9942482113838196, -0.10783585906028748, -0.0005803807871416211, -1.0728830375228426e-06, -1.4305104514278355e-06, -0.0016980052459985018, -0.03471716120839119, -0.2754139304161072, -0.000325388420606032, -0.0033391928300261497, -0.03193308040499687, -1.714223027229309, -0.0334353893995285, -0.2153792828321457, -0.4489586353302002, -0.4569365382194519, -0.04928726702928543, -0.0001902399235405028, -0.007522470783442259, -4.0531076592742465e-06, -0.0005316513124853373, -0.00021217002358753234, -0.005614227149635553, -7.390948667307384e-06, -3.969590397900902e-05, -0.000479344860650599, -0.0026410482823848724, -0.003339311806485057, -0.0004951919545419514, -0.0005870526074431837, -0.038588207215070724, -0.0006106419023126364, -0.021725405007600784, -1.9411286115646362, -1.358873724937439, -0.22029927372932434, -1.9232895374298096, -1.5620429515838623, -0.02468293532729149, -0.016213469207286835, -0.0001679517881711945, -0.24276672303676605, -0.00096703483723104, -0.06139691174030304, -0.1311979591846466, -0.00036173476837575436, -6.079655122448457e-06, -9.536697689327411e-06, -1.311301275563892e-06, -0.000550357042811811, -0.00015245705435518175, -4.2437604861333966e-05, -0.0004520586517173797, -0.00017581824795342982, -0.0014412740711122751, -0.010137026198208332, -0.0006773561472073197, -0.027712104842066765, -2.1060690879821777, -0.7823603749275208, -0.18666645884513855, -0.5824862122535706, -0.5720035433769226, -0.000734297966118902, -0.1526404172182083, -0.013597133569419384, -0.0021402565762400627, -0.001706692622974515, -0.0007024919614195824, -6.437280717364047e-06, -3.9219088648678735e-05, -0.0001802282058633864, -2.0510730743408203, -0.2612514793872833, -3.2186455882765586e-06, -0.02344028279185295, -3.210540294647217, -0.06963183730840683, -0.16966979205608368, -0.968034565448761, -0.022435184568166733, -0.012668137438595295, -0.04545385017991066, -0.0005224770284257829, -0.012235700152814388, -0.4302053451538086, -1.0580838918685913, -0.38973361253738403, -0.565474808216095, -0.38315922021865845, -0.000291662581730634, -0.07726027071475983, -0.015780918300151825, -0.04710660129785538, -6.0794889577664435e-05, -0.03373982384800911, -0.005165326874703169, -0.002279899315908551, -0.5986983776092529, -0.0016287406906485558, -0.042513106018304825, -0.0002779574424494058, -0.001036583329550922, -1.3665692806243896, -0.05076148733496666, -0.6647194027900696, -0.0071106464602053165, -0.020184004679322243, -0.3303111791610718, -0.0003883084573317319, -0.031826384365558624, -0.0001134808044298552, -0.0013298486592248082, -0.0004960260121151805, -0.0020527022425085306, -0.0008667526417411864, -0.00029905137489549816, -5.9126061387360096e-05, -1.9073468138230965e-06, -0.007822119630873203, -0.09230008721351624, -0.16571733355522156, -0.11539366841316223, -0.09529091417789459, -0.0031571565195918083, -0.032460834830999374, -0.0008273277780972421, -0.3230018615722656, -1.0564767122268677, -0.1605323851108551, -0.13055118918418884, -0.0011070796754211187, -0.035691823810338974, -1.4826072454452515, -0.006974162999540567, -1.0054078102111816, -0.0765787661075592, -0.001321038813330233, -0.008741091936826706, -0.007898644544184208, -0.150076225399971, -0.026815051212906837, -1.6657474040985107], "finish_reason": "stop"}], "metrics": {"energy": 734.8219438438412, "energy_per_token": 3.6020683521756918, "time": 17.238077, "time_per_token": 0.0845003774509804}}
{"outputs": [{"text": "# Extract the data for the specified columns\n    x = df[x_column].to_numpy().reshape(-1, 1)\n    y = df[y_column].to_numpy()\n\n    # Create a scatter plot of the data\n    ax = plt.scatter(x, y)\n\n    # Fit a linear regression model to the data\n    model = LinearRegression().fit(x, y)\n\n    # Plot the predicted regression line\n    plt.plot(x, model.predict(x), color='red')\n\n    return ax", "tokens": ["#", " Ext", "ract", " the", " data", " for", " the", " specified", " columns", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "()", "\n", "\n", "    ", "#", " Create", " a", " scatter", " plot", " of", " the", " data", "\n", "    ", "ax", " =", " plt", ".", "scatter", "(", "x", ",", " y", ")", "\n", "\n", "    ", "#", " Fit", " a", " linear", " regression", " model", " to", " the", " data", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "\n", "    ", "#", " Plot", " the", " predicted", " regression", " line", "\n", "    ", "plt", ".", "plot", "(", "x", ",", " model", ".", "predict", "(", "x", ")", ",", " color", "='", "red", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.102859377861023, -2.464125394821167, -0.11993750184774399, -0.34847569465637207, -1.4048489332199097, -0.7772973775863647, -0.18860076367855072, -0.1875685155391693, -0.05981142446398735, -0.19686976075172424, -0.003675017738714814, -0.1577448844909668, -0.35617515444755554, -0.016355382278561592, -0.04602712020277977, -0.0011404207907617092, -2.5510462364763953e-05, -2.2172682292875834e-05, -0.00015507926582358778, -0.36822518706321716, -1.9217666387557983, -4.529942543740617e-06, -0.00838521309196949, -0.045418880879879, -0.357292115688324, -0.005982942879199982, 0.0, -0.020271388813853264, -1.847726889536716e-05, -0.00017355366435367614, -0.026855090633034706, -1.4305012882687151e-05, -2.6225699912174605e-05, -0.09021306782960892, -0.0009041512385010719, -0.0037241880781948566, -0.00015233787416946143, -8.40390202938579e-05, -0.0002735478919930756, -6.139089964563027e-05, -3.576272320060525e-06, -2.3841855067985307e-07, -1.0371154530730564e-05, -0.03787935897707939, -0.002354351570829749, -1.4305104514278355e-06, -6.0794889577664435e-05, -0.00015531764074694365, -0.6806135773658752, -0.08691053837537766, -0.0009236836922354996, -0.014587770216166973, -1.1233497858047485, -0.2346433401107788, -0.404389888048172, -0.14204077422618866, -1.2362043857574463, -0.01913340948522091, -0.0221458300948143, -0.04970806464552879, -0.0013423488708212972, -0.8778701424598694, -0.005736080463975668, -0.20736739039421082, -0.00014673586701974273, -0.09301625937223434, -4.768258077092469e-05, -0.0031966085080057383, -0.008787532337009907, -0.0030658883042633533, -0.297306090593338, -0.0022113888990134, -0.05116874724626541, -0.0006130246329121292, -0.001990600721910596, -0.0794735699892044, -0.051516178995370865, -0.005946444813162088, -0.0014044907875359058, -0.0027673065196722746, -0.022937802597880363, -0.0003240775258745998, -0.0007951673469506204, -0.07639721781015396, -0.0003067976504098624, -0.43085065484046936, -0.0002960720448754728, -0.00012039413559250534, -1.6689286894688848e-06, -3.576278118089249e-07, -0.0006987990345805883, -0.42639729380607605, -4.768360213347478e-06, -3.0636318115284666e-05, -0.0010299145942553878, -0.0014586533652618527, -0.0009538153535686433, -0.00014876213390380144, -0.0006444760947488248, -0.22485488653182983, -0.0003281293320469558, -0.001655518775805831, -1.0513641834259033, -0.006180815398693085, -0.8663464188575745, -0.10447364300489426, -0.000285584683297202, -1.0837438106536865, -0.0004925706889480352, -0.5919125080108643, -5.1020273531321436e-05, -0.0014347269898280501, -0.0008305437513627112, -0.0014754373114556074, -0.0007033258443698287, -0.0030525776091963053, -1.4543427823809907e-05, -0.09791380912065506, -4.625213477993384e-05, -0.00013100242358632386, -0.378345251083374, -0.0012134101707488298, -0.16112534701824188, -0.044709958136081696, -0.06494082510471344, -0.017134374007582664, -0.005074004177004099, -0.04068782180547714, -0.0006802152493037283, -0.5574362874031067, -0.004894299898296595, -0.14466121792793274, -0.01858253963291645, -0.7426221370697021], "finish_reason": "stop"}], "metrics": {"energy": 462.39357201957716, "energy_per_token": 3.450698298653561, "time": 11.360628, "time_per_token": 0.08478080597014925}}
{"outputs": [{"text": "df = df.dropna()\n    plt.figure()\n    ax = plt.gca()\n    plt.scatter(df[x_column], df[y_column], c=\"blue\", marker=\"o\")\n    model = LinearRegression().fit(df[[x_column]], df[[y_column]])\n    ax.plot(df[x_column], model.predict(df[[x_column]]), color=\"red\")\n    return ax", "tokens": ["df", " =", " df", ".", "drop", "na", "()", "\n", "    ", "plt", ".", "figure", "()", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "plt", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "]", ",", " c", "=", "\"", "blue", "\"", ",", " marker", "=", "\"", "o", "\"", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "df", "[[", "x", "_", "column", "]]", ",", " df", "[[", "y", "_", "column", "]]", ")", "\n", "    ", "ax", ".", "plot", "(", "df", "[", "x", "_", "column", "]", ",", " model", ".", "predict", "(", "df", "[[", "x", "_", "column", "]]", ")", ",", " color", "=", "\"", "red", "\"", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-2.674640655517578, -1.223151683807373, -0.17619487643241882, -0.7507448792457581, -1.8760607242584229, -0.018903108313679695, -0.5882620215415955, -0.18863925337791443, -0.24476125836372375, -3.1874966621398926, -0.0029054353944957256, -1.8097350597381592, -0.4472331702709198, -0.01939312182366848, -0.07193294912576675, -0.5671054720878601, -0.010626634582877159, -0.7415085434913635, -0.000899982638657093, -0.8127409815788269, -1.1801649634435307e-05, -0.00033706706017255783, -0.03456965461373329, -0.0799630731344223, -1.8349210023880005, -0.0006403064471669495, -0.42763957381248474, -0.0008662762120366096, -0.3959636390209198, -0.029918767511844635, -0.004412913229316473, -2.729855441430118e-05, -1.597391747054644e-05, -0.00011538793478393927, -0.06508291512727737, -0.037975311279296875, -0.00029476112104021013, -4.8636207793606445e-05, -3.099436753473128e-06, -4.768370445162873e-07, -2.1942455768585205, -0.007250780705362558, -1.5257649421691895, -1.1110575199127197, -0.28427088260650635, -0.8057346940040588, -0.000350175570929423, -0.5445923805236816, -0.42993804812431335, -0.7908837795257568, -0.005547959823161364, -0.3191607594490051, -1.9073468138230965e-06, -0.32353127002716064, -0.00975248496979475, -0.12774240970611572, -1.8373799324035645, -0.007567429915070534, -0.003195063676685095, -5.602820692729438e-06, -1.1920928244535389e-07, -0.00915791466832161, -1.0124839544296265, -2.288792165927589e-05, -0.0003946240758523345, -0.27681079506874084, -0.32865217328071594, -0.00345372105948627, -6.067568756407127e-05, -9.536697689327411e-06, -0.00034791138023138046, -0.04383042827248573, -0.007819044403731823, -0.7602900266647339, -0.00038985759601928294, -4.172316494077677e-06, -5.960446742392378e-06, -5.245195097813848e-06, -0.0014690094394609332, -0.01228869054466486, -0.00655157258734107, -2.5492608547210693, -0.020780814811587334, -0.09493787586688995, -0.012100267224013805, -0.1394955813884735, -0.07263348251581192, -0.0011239885352551937, -7.390948667307384e-06, -2.729855441430118e-05, -0.00013469743134919554, -0.03375353664159775, -0.03734458237886429, -0.00011550712952157483, -0.03309107571840286, -0.00010442188795423135, -0.005611618980765343, -0.0015711355954408646, -0.0005004345439374447, -3.6954811548639555e-06, -3.814689989667386e-06, -3.099436753473128e-06, -0.03798265382647514, -0.020718581974506378, -0.17609232664108276, -1.1239290237426758, -0.000726316764485091, -0.015883706510066986, -1.0251946150674485e-05, -0.22130872309207916, -0.007301905658096075, -0.05834599956870079, -0.4266390800476074, -0.004774597939103842, -0.2167903482913971, -0.02241397090256214, -1.3271770477294922], "finish_reason": "stop"}], "metrics": {"energy": 440.3956461391448, "energy_per_token": 3.764065351616622, "time": 9.885756, "time_per_token": 0.08449364102564103}}
{"outputs": [{"text": "data = df[[x_column, y_column]].copy()\n    ax = plt.scatter(data[x_column], data[y_column])\n    model = LinearRegression()\n    model.fit(data[x_column].to_numpy().reshape(-1, 1), data[y_column])\n    plt.plot(data[x_column], model.predict(data[x_column].to_numpy().reshape(-1, 1)), 'r')\n    return ax", "tokens": ["data", " =", " df", "[[", "x", "_", "column", ",", " y", "_", "column", "]]", ".", "copy", "()", "\n", "    ", "ax", " =", " plt", ".", "scatter", "(", "data", "[", "x", "_", "column", "]", ",", " data", "[", "y", "_", "column", "])", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "data", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", ",", " data", "[", "y", "_", "column", "])", "\n", "    ", "plt", ".", "plot", "(", "data", "[", "x", "_", "column", "]", ",", " model", ".", "predict", "(", "data", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", "))", ",", " '", "r", "')", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.05427360534668, -0.2941323518753052, -0.04419010877609253, -0.45115014910697937, -0.018032537773251534, -6.735097849741578e-05, -2.1219027985353023e-05, -0.005467224400490522, -0.027147378772497177, -7.152555099310121e-07, -9.536738616588991e-07, -0.0011811431031674147, -1.3459283113479614, -0.5423387885093689, -0.05254688858985901, -0.09506622701883316, -0.24740538001060486, -1.2385704517364502, -0.005660101771354675, -2.041402816772461, -0.0006164796068333089, -0.49769094586372375, -0.001629216712899506, -0.38763922452926636, -0.014153576456010342, -0.001739775761961937, -3.707340147229843e-05, -9.298280929215252e-06, -0.00013541258522309363, -0.042234648019075394, -0.020410975441336632, -0.00036030475166626275, -0.00012003655137959868, -5.245195097813848e-06, -8.344646857949556e-07, -0.2707344591617584, -0.012763123959302902, -0.24886299669742584, -1.5182048082351685, -0.006132594775408506, -0.002239816589280963, -9.179073458653875e-06, -2.3841855067985307e-07, -0.007010149769484997, -0.5028366446495056, -0.007954112254083157, -0.34109577536582947, -0.036555781960487366, -6.806619057897478e-05, -0.0009809688199311495, -0.1437392234802246, -0.5071123838424683, -0.0023449561558663845, -7.521823135903105e-05, -1.9907753085135482e-05, -0.0072343298234045506, -0.026762478053569794, -0.36159834265708923, -5.6265202147187665e-05, -0.15173004567623138, -0.0044599114917218685, -0.0031059379689395428, -1.3947389561508317e-05, -4.529942543740617e-06, -0.005244782194495201, -5.757642793469131e-05, -0.00020418466010596603, -0.1363847851753235, -2.0265373677830212e-05, -9.381330892210826e-05, -0.0015023384476080537, -0.06487759202718735, -0.002493488835170865, -0.0005860995152033865, -2.622600959512056e-06, -1.4424220353248529e-05, -0.26936739683151245, -0.020962240174412727, -0.018383244052529335, -0.7883302569389343, -0.0005519058904610574, -0.003661715192720294, -0.011385113932192326, -0.02481667511165142, -0.001985484967008233, -0.0008613928221166134, -1.7881377516459906e-06, -6.437280717364047e-06, -0.00010144196130568162, -0.04747386276721954, -0.04287337884306908, -4.637133679352701e-05, -0.6457967758178711, -0.0002146728802472353, -0.08137344568967819, -0.0033883799333125353, -0.0003828269545920193, -9.536738616588991e-07, -4.172316494077677e-06, -0.0002734287118073553, -0.0002873722987715155, -0.0004961451631970704, -4.768370445162873e-07, -3.576272320060525e-06, -0.00018487652414478362, -0.0004285847535356879, -0.00015269544383045286, -6.806619057897478e-05, -0.00026127262390218675, -1.645074735279195e-05, -8.606540359323844e-05, -0.008941136300563812, -4.529942543740617e-06, -0.1009216457605362, -0.006110202055424452, -0.7268226742744446, -0.09760040789842606, -0.043292999267578125, -0.019346237182617188, -0.06565374881029129, -0.12138355523347855, -0.011990495026111603, -2.360860824584961, -5.960446742392378e-06, -1.0728830375228426e-06, -9.179073458653875e-06, -0.00013004888023715466, -0.19850726425647736], "finish_reason": "stop"}], "metrics": {"energy": 489.8108261356351, "energy_per_token": 3.8266470791846494, "time": 10.937581, "time_per_token": 0.0854498515625}}
{"outputs": [{"text": "# Draws a scatter plot for the specified columns\n    ax = df.plot.scatter(x=x_column, y=y_column)\n    # Extract x and y data from the specified columns\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n    # Fit linear regression model to the data\n    reg = LinearRegression().fit(x, y)\n    # Calculate the predicted y values for the x values\n    y_pred = reg.predict(x)\n    # Overlay the predicted regression line on top of the scatter plot in red\n    ax.plot(x, y_pred, color='red')\n    # Return the Axes object containing the scatter plot and the linear regression line\n    return ax", "tokens": ["#", " Draw", "s", " a", " scatter", " plot", " for", " the", " specified", " columns", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ")", "\n", "    ", "#", " Ext", "ract", " x", " and", " y", " data", " from", " the", " specified", " columns", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "#", " Fit", " linear", " regression", " model", " to", " the", " data", "\n", "    ", "reg", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "#", " Calculate", " the", " predicted", " y", " values", " for", " the", " x", " values", "\n", "    ", "y", "_", "pred", " =", " reg", ".", "predict", "(", "x", ")", "\n", "    ", "#", " Over", "lay", " the", " predicted", " regression", " line", " on", " top", " of", " the", " scatter", " plot", " in", " red", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " y", "_", "pred", ",", " color", "='", "red", "')", "\n", "    ", "#", " Return", " the", " Ax", "es", " object", " containing", " the", " scatter", " plot", " and", " the", " linear", " regression", " line", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.102859377861023, -4.070389747619629, -2.5256576538085938, -0.42134755849838257, -0.02048046886920929, -0.3957565426826477, -0.3398028314113617, -0.04972042515873909, -0.045304615050554276, -0.028519725427031517, -1.8818020820617676, -0.008806674741208553, -0.5241535902023315, -0.004168512299656868, -0.18689016997814178, -0.11335369944572449, -0.0002810560108628124, -0.1503130942583084, -1.6331539882230572e-05, -0.0031787839252501726, -0.042244475334882736, -0.24953022599220276, -0.005406519863754511, -5.090107151772827e-05, -3.0397906812140718e-05, -0.0003771070914808661, -0.01925678551197052, -0.0003502947511151433, -0.000692961853928864, -6.6756979322235566e-06, -4.291525328881107e-06, -0.3202768862247467, -0.009966845624148846, -1.0694127082824707, -0.45800837874412537, -2.512989044189453, -0.07085807621479034, -2.0090882778167725, -0.06702312082052231, -0.00042632073746062815, -0.8464137315750122, -0.5611754059791565, -0.17601974308490753, -2.704944133758545, -0.009520839899778366, -0.18103618919849396, -0.0005502378917299211, -0.07867325097322464, -0.3846723735332489, -0.022030508145689964, -0.09246496856212616, -0.0007926659309305251, -1.1920858014491387e-05, -4.6491513785440475e-06, -0.00030155404238030314, -0.2092488408088684, -0.28329432010650635, -0.12735414505004883, -6.115249561844394e-05, 0.0, -0.011494954116642475, -1.597391747054644e-05, -0.00011824862303910777, -0.015223503112792969, -4.0649541915627196e-05, -1.9311717551317997e-05, -0.04253515601158142, -8.797258487902582e-05, -0.0028348281048238277, -0.00015066919149830937, -6.83045873302035e-05, -0.00034028460504487157, -6.97350042173639e-05, -1.311301275563892e-06, -1.7881377516459906e-06, -4.172316494077677e-06, -0.0040174974128603935, -3.707340147229843e-05, -0.05136977136135101, -0.0005529781919904053, 0.0, -0.0002325502864550799, -1.4305104514278355e-06, -1.5020257706055418e-05, -0.0005869334563612938, -3.814689989667386e-06, -1.4662635294371285e-05, -0.0003195490571670234, -0.07211863994598389, -0.0047494457103312016, -0.19925376772880554, -2.739658832550049, -0.004429766442626715, -0.04764266684651375, -0.2598910629749298, -0.1019311174750328, -0.03468354046344757, -0.0845784991979599, -0.0003777029050979763, -1.5246001482009888, -0.0893346294760704, -0.0001528146385680884, -4.291525328881107e-06, -2.3841855067985307e-07, -0.0010213402565568686, -0.06620138883590698, -9.775113539944869e-06, -2.0146166207268834e-05, -0.001686342409811914, -0.0013992529129609466, -0.0018899451242759824, -0.00010144196130568162, -0.00228441902436316, -0.009533828124403954, -0.12898360192775726, -2.143397092819214, -0.9622877240180969, -0.10332774370908737, -1.2805449962615967, -0.2973971962928772, -1.5201531648635864, -0.463687926530838, -0.581635057926178, -0.4307538866996765, -0.7712562084197998, -0.00010752100206445903, -0.02386638894677162, -0.0024035871028900146, -0.0501934178173542, -0.04380315914750099, -0.0003535122668836266, -4.577531944960356e-05, -0.2831605076789856, -2.288792165927589e-05, -0.0016189813613891602, -0.000200609109015204, -0.00546923978254199, -0.00427653593942523, -0.006943620275706053, -0.5648228526115417, -0.08905243873596191, -0.03619793802499771, -0.030243124812841415, -0.021032746881246567, -0.00022468426323030144, -0.023846369236707687, -0.16468867659568787, -2.1776301860809326, -0.004512603394687176, -0.054803088307380676, -0.5613442063331604, -0.7863231897354126, -0.005797357298433781, -0.03451552987098694, -0.0007058274932205677, -0.14550980925559998, -0.0019012485863640904, -0.0019795361440628767, -0.0006032554083503783, -0.009330004453659058, -0.01901446469128132, -0.0006106419023126364, -8.070142939686775e-05, -1.0728830375228426e-06, -0.0022806129418313503, -0.22492466866970062, -0.025017134845256805, -0.14957143366336823, -0.05347359552979469, -0.0027296210173517466, -0.08966828882694244, -1.1711530685424805, -0.17412012815475464, -0.013260742649435997, -0.03659508749842644, -0.00097977789118886, -0.011150074191391468, -0.2521514892578125, -0.00807130616158247, -0.22083519399166107, -0.019587891176342964, -0.029581110924482346, -0.09769576787948608, -0.026737408712506294, -0.0006668727728538215, -0.0010582567192614079, -0.008824753575026989, -0.0017914213240146637, -0.006680772174149752, -0.0027734884060919285, -0.26683977246284485, -0.03345314413309097, -1.0010852813720703], "finish_reason": "stop"}], "metrics": {"energy": 692.2365170059206, "energy_per_token": 3.586717704693889, "time": 16.38077, "time_per_token": 0.08487445595854921}}
{"outputs": [{"text": "# TODO: check that column data are numeric\n    x = df[x_column].values\n    y = df[y_column].values\n\n    model = LinearRegression()\n    x_reshaped = x.reshape(-1, 1)\n    model.fit(x_reshaped, y)\n\n    predicted_y = model.predict(x_reshaped)\n\n    ax = plt.scatter(x, y)\n\n    plt.plot(x, predicted_y, color=\"red\")\n\n    return ax", "tokens": ["#", " TODO", ":", " check", " that", " column", " data", " are", " numeric", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", "\n", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "x", "_", "resh", "aped", " =", " x", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "model", ".", "fit", "(", "x", "_", "resh", "aped", ",", " y", ")", "\n", "\n", "    ", "pred", "icted", "_", "y", " =", " model", ".", "predict", "(", "x", "_", "resh", "aped", ")", "\n", "\n", "    ", "ax", " =", " plt", ".", "scatter", "(", "x", ",", " y", ")", "\n", "\n", "    ", "plt", ".", "plot", "(", "x", ",", " predicted", "_", "y", ",", " color", "=", "\"", "red", "\"", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.102859377861023, -4.657242774963379, -0.3149617910385132, -4.181770324707031, -1.6953234672546387, -2.5956919193267822, -2.0737147331237793, -2.382601022720337, -0.10321023315191269, -0.45918142795562744, -0.2644217610359192, -1.7436107397079468, -0.24368152022361755, -0.049925707280635834, -0.1308271437883377, -0.0029635580722242594, -3.2066785934148356e-05, -3.802703940891661e-05, -0.0002982171718031168, -0.6286670565605164, -0.272140771150589, -2.346653699874878, -0.0023918135557323694, -0.05266100540757179, -0.000651147507596761, -0.00016616393986623734, -0.00022968991834204644, -0.0004223884898237884, -6.794906312279636e-06, -1.5497195136049413e-06, -1.8596476365928538e-05, -0.0006755692302249372, -9.619726915843785e-05, -0.001864482183009386, -0.8190972208976746, -0.0009190387791022658, -3.421013355255127, -0.005332057364284992, -0.0029024637769907713, -1.0609570381348021e-05, -1.1920928244535389e-07, -0.015499256551265717, -0.3854049742221832, -0.1060410737991333, -2.8027877807617188, -0.4066152274608612, -0.38513144850730896, -0.033677008002996445, -0.005918003618717194, -0.07917052507400513, -0.028598852455615997, -0.0009993088897317648, -2.3841855067985307e-07, -0.06934192031621933, -5.0424259825376794e-05, -0.00010001159535022452, -0.035634998232126236, -4.23184028477408e-05, -0.00014828535495325923, -0.09085486829280853, -0.03204195573925972, -0.4769996404647827, -0.01874447613954544, -3.504691630951129e-05, -8.904537389753386e-05, -0.002785851713269949, -0.008259662427008152, -1.1920922133867862e-06, -2.932505594799295e-05, -0.0009712031460367143, -0.001642665360122919, -0.0045830924063920975, -0.008255169726908207, -0.5799099206924438, -0.0005055579822510481, -2.541670560836792, -0.48743823170661926, -0.5111687779426575, -0.22032596170902252, -0.010331128723919392, -0.0029893494211137295, -7.462222856702283e-05, -0.000604565953835845, -0.0007481159991584718, -0.0007327494095079601, -0.03522929549217224, -3.421248038648628e-05, -4.2437604861333966e-05, -0.00117649941239506, -0.005286641884595156, -0.21354082226753235, -0.000510204816237092, -0.7912021279335022, -0.008315819315612316, -0.3285127878189087, -0.005446357652544975, -0.7634420394897461, -9.274052717955783e-05, -0.004280927591025829, -0.08546549826860428, -0.01902885176241398, -0.1789766550064087, -0.006858143024146557, -1.7005181312561035, -0.00043335105874575675, -0.34046539664268494, -0.00037150635034777224, -0.012515928596258163, -0.0013491347199305892, -0.005415412597358227, -0.07969947159290314, -0.022140583023428917, -8.22540732769994e-06, -1.7881377516459906e-06, -0.019645871594548225, -0.44582000374794006, -1.7210264205932617, -0.0017100248951464891, -0.05663829296827316, -2.264974000354414e-06, -0.045304957777261734, -0.029589097946882248, -0.3171302080154419, -0.005414464045315981, -0.2200455218553543, -0.005210866220295429, -0.21842260658740997, -0.011618684977293015, -1.2147259712219238], "finish_reason": "stop"}], "metrics": {"energy": 461.4572282886504, "energy_per_token": 3.5771878161910884, "time": 10.72097, "time_per_token": 0.08310829457364341}}
{"outputs": [{"text": "ax = df.plot.scatter(x=x_column, y=y_column, marker=\"o\")\n    # get the x values, convert to numpy array\n    x = df[x_column].values\n    y = df[y_column].values\n    # convert to numpy array with new axis\n    x = np.array(x).reshape((-1, 1))\n    y = np.array(y).reshape((-1, 1))\n    # fit model\n    linreg = LinearRegression()\n    linreg.fit(x, y)\n    # get predicted y values\n    y_pred = linreg.predict(x)\n    # plot regression line\n    plt.plot(x, y_pred, color=\"red\")\n    plt.show()\n    return ax", "tokens": ["ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " marker", "=", "\"", "o", "\"", ")", "\n", "    ", "#", " get", " the", " x", " values", ",", " convert", " to", " numpy", " array", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", "\n", "    ", "#", " convert", " to", " numpy", " array", " with", " new", " axis", "\n", "    ", "x", " =", " np", ".", "array", "(", "x", ")", ".", "resh", "ape", "(", "(-", "1", ",", " ", "1", "))", "\n", "    ", "y", " =", " np", ".", "array", "(", "y", ")", ".", "resh", "ape", "(", "(-", "1", ",", " ", "1", "))", "\n", "    ", "#", " fit", " model", "\n", "    ", "lin", "reg", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "lin", "reg", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "#", " get", " predicted", " y", " values", "\n", "    ", "y", "_", "pred", " =", " lin", "reg", ".", "predict", "(", "x", ")", "\n", "    ", "#", " plot", " regression", " line", "\n", "    ", "plt", ".", "plot", "(", "x", ",", " y", "_", "pred", ",", " color", "=", "\"", "red", "\"", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -0.13419461250305176, -0.0008873577462509274, -0.1449054628610611, -1.8000440832111053e-05, -0.005669940263032913, -0.04293881729245186, -0.2716978192329407, -0.006407550070434809, -5.400034933700226e-05, -3.0636318115284666e-05, -0.00034421717282384634, -0.030049726366996765, -0.0004396664153318852, -0.0007537146448157728, -1.0371154530730564e-05, -1.9788545614574105e-05, -1.198411226272583, -2.695438861846924, -2.1434288024902344, -0.05573582649230957, -0.3181150257587433, -3.480850500636734e-05, -0.48079362511634827, -0.026319025084376335, -0.17327052354812622, -2.279499053955078, -3.35379958152771, -0.5873794555664062, -1.540459394454956, -2.096346378326416, -4.091695785522461, -1.717617392539978, -0.6450031995773315, -0.2101558893918991, -0.16757923364639282, -2.3796019554138184, -0.0019249258330091834, -0.17807519435882568, -0.4803619086742401, -0.11693327128887177, -0.08947503566741943, -0.0021815330255776644, -2.8371408916427754e-05, -7.748573807475623e-06, -0.00010251473577227443, -0.00566733255982399, -0.6433077454566956, -0.7527717351913452, -0.015689505264163017, -1.574411392211914, -0.0011406589765101671, -0.00027569307712838054, -0.0001394651480950415, -0.0011098184622824192, -6.6756979322235566e-06, -1.311301275563892e-06, -1.4543427823809907e-05, -0.0011267272057011724, -0.0004170263418927789, -0.004788123071193695, -0.27147501707077026, -0.8019334673881531, -1.4030635356903076, -0.5132935643196106, -0.4044255316257477, -0.5345558524131775, -2.4737069606781006, -1.77196204662323, -0.41617995500564575, -0.8706623315811157, -0.0018090326339006424, -0.06716836988925934, -0.10168692469596863, -2.3766841888427734, -4.088794958079234e-05, -0.23394553363323212, -0.021255671977996826, -0.013544329442083836, -0.004564461763948202, -0.403312087059021, -0.0014734136639162898, 0.0, -0.7010499238967896, -0.043941665440797806, -6.031808152329177e-05, -0.0006472161621786654, -0.07174112647771835, -0.00017152745567727834, -0.00025054652360267937, -0.04887889698147774, -0.03131239116191864, -0.4855445623397827, -0.00284445658326149, -0.011469616554677486, -1.311301275563892e-06, -0.0008709213580004871, -0.00046361665590666234, -0.0028117666952311993, -0.000285584683297202, -0.10196319967508316, -0.0021454906091094017, -5.602820692729438e-06, -0.019497644156217575, -0.00011002412065863609, -1.2755313036905136e-05, -0.00011336160969221964, -0.002573156962171197, -4.386805812828243e-05, -4.088794958079234e-05, -0.0011182728921994567, -0.23345521092414856, -0.5643014311790466, -1.1226240396499634, -3.5587246417999268, -0.6516555547714233, -0.0010386077919974923, -2.3344273567199707, -1.8101403713226318, -0.06251727789640427, -0.0011252983240410686, -9.894321920000948e-06, -1.1920928244535389e-07, -0.0038339220918715, -0.46571454405784607, -0.0007557396893389523, -0.06548594683408737, -0.00028534632292576134, -0.021268391981720924, -1.9430925021879375e-05, -0.00014804698002990335, -0.013071914203464985, -0.0039575365372002125, -0.023659994825720787, -0.0007624103454872966, -0.00436816830188036, -0.029933692887425423, -0.6786468029022217, -1.7285840511322021, -1.3028323650360107, -0.9609174132347107, -0.2834014594554901, -0.26650387048721313, -0.0005601267330348492, -0.11701185256242752, -0.020949864760041237, -0.1122184693813324, -0.1382840871810913, -0.005047554615885019, -2.52720492426306e-05, -0.0003057250869460404, -0.003671692218631506, -9.905801562126726e-05, -0.0012931802775710821, -0.0005409446312114596, -0.006957944482564926, -0.03508796542882919, -0.2409072369337082, -0.4693946838378906, -1.0641469955444336, -0.020878419280052185, -0.2915409505367279, -0.0010478964541107416, -1.3501501083374023, -0.00027652730932459235, -0.01274617575109005, -0.0008279233006760478, -0.003709223587065935, -0.005606521852314472, -0.0027659989427775145, -0.0007825411157682538, -2.7418097943154862e-06, -0.0076280031353235245, -0.1921607404947281, -0.8321099281311035, -0.0006679449579678476, -0.07567887008190155, -5.364403477869928e-06, -0.09425507485866547, -0.005928313825279474, -0.09706959128379822, -1.6552975177764893, -0.00015448330668732524, -0.2444790005683899, -0.002606924856081605, -0.007239419035613537, -0.06688900291919708, -0.0839267298579216, -0.012958953157067299, -0.18707042932510376, -0.024615129455924034, -1.0391426086425781], "finish_reason": "stop"}], "metrics": {"energy": 675.4814081802369, "energy_per_token": 3.481862928764108, "time": 16.400621, "time_per_token": 0.08453928350515465}}
{"outputs": [{"text": "ax = df.plot(x=x_column, y=y_column, kind='scatter')\n    X = df.loc[:, [x_column]].values\n    y = df.loc[:, [y_column]].values\n    model = LinearRegression().fit(X, y)\n    X_predict = np.arange(df[x_column].min(), df[x_column].max(), 1).reshape(-1, 1)\n    y_predict = model.predict(X_predict)\n    ax.plot(X_predict, y_predict, '-r')\n    return ax", "tokens": ["ax", " =", " df", ".", "plot", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " kind", "='", "scatter", "')", "\n", "    ", "X", " =", " df", ".", "loc", "[:", ",", " [", "x", "_", "column", "]]", ".", "values", "\n", "    ", "y", " =", " df", ".", "loc", "[:", ",", " [", "y", "_", "column", "]]", ".", "values", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n", "    ", "X", "_", "predict", " =", " np", ".", "ar", "ange", "(", "df", "[", "x", "_", "column", "]", ".", "min", "()", ",", " df", "[", "x", "_", "column", "]", ".", "max", "()", ",", " ", "1", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", "_", "predict", " =", " model", ".", "predict", "(", "X", "_", "predict", ")", "\n", "    ", "ax", ".", "plot", "(", "X", "_", "predict", ",", " y", "_", "predict", ",", " '-", "r", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -0.13419461250305176, -0.0008873577462509274, -2.0121235847473145, -0.2390872836112976, -0.0873461663722992, -0.004964050371199846, -0.00011205045302631333, -2.396077979938127e-05, -0.0003488647344056517, -0.036188166588544846, -0.0014250847743824124, -0.0010551605373620987, -1.537788011773955e-05, -1.5497195136049413e-06, -0.021369334310293198, -0.7481179237365723, -0.2509402334690094, -0.00027533553657121956, -0.25406908988952637, -0.018695920705795288, -0.14061105251312256, -2.015150308609009, -0.022512581199407578, -0.026535900309681892, -2.5652413368225098, -0.17507809400558472, -0.011268544010818005, -0.0015348332235589623, -0.42960917949676514, -0.010000954382121563, -0.00026079590315930545, -1.5497195136049413e-06, -0.0024173820856958628, -0.23546472191810608, -0.1505054086446762, -0.19789694249629974, -0.0004413345886860043, -0.26643526554107666, -0.0008761619683355093, -0.0009803733555600047, -0.34374430775642395, -0.0021098037250339985, -0.0009232072625309229, -0.0009908534120768309, -1.1435121297836304, -0.0010475391754880548, -5.722029527532868e-06, -7.867782187531702e-06, -7.998623186722398e-05, -0.007971024140715599, -0.0008809261489659548, -0.00733279250562191, -0.0862891674041748, -1.049889087677002, -0.0033105588518083096, -0.0008509114268235862, -6.794906312279636e-06, -1.1920928244535389e-07, -0.0027455512899905443, -0.7563799619674683, -1.3470558769768104e-05, -7.450303382938728e-05, -0.00027938754647038877, -0.006315038073807955, -0.00284944917075336, -0.000386640167562291, -0.012799845077097416, -0.016345882788300514, -2.7846269607543945, -0.06855493038892746, -2.4167075157165527, -0.007964756339788437, -0.567137598991394, -2.407998726994265e-05, -0.700373113155365, -1.2993727978027891e-05, -0.003510267473757267, -1.7726315259933472, -0.059333521872758865, -0.003128873882815242, -3.0278701160568744e-05, -4.7801782784517854e-05, -0.00015424491721205413, -1.6689160474925302e-05, -0.006777868140488863, -0.0014729375252500176, -0.25202956795692444, -0.019883831962943077, -6.603976362384856e-05, -0.0003636414185166359, -2.0265558760002023e-06, -9.536738616588991e-07, -1.1920858014491387e-05, -9.65590606938349e-06, -0.0004907834227196872, -0.2202770859003067, -0.5872619152069092, -0.16221868991851807, -0.43527546525001526, -0.0707106962800026, -0.07065160572528839, -0.0006398299592547119, -2.3841855067985307e-07, -0.00012396997772157192, -5.471556869451888e-05, -0.00028880240279249847, -0.0030493687372654676, -2.7656173188006505e-05, -0.00010334911348763853, -0.03271941840648651, -0.0013912770664319396, -0.05574879050254822, -0.0008551992941647768, -0.028450671583414078, -0.0005769256968051195, -0.0022389839868992567, -3.516612196108326e-05, -0.2614399194717407, -6.603976362384856e-05, -0.00023922442051116377, -0.0021923573222011328, -6.794906312279636e-06, -0.00025769727653823793, -0.02330414578318596, -0.010997516103088856, -0.2333160787820816, -0.007955768145620823, -0.012294224463403225, -0.00046695294440723956, -0.0028622872196137905, -0.0006051616510376334, -9.775113539944869e-06, -0.009745637886226177, -0.0009327351581305265, -0.00015531764074694365, -5.006777428206988e-06, -0.003520245896652341, -0.72243332862854, -0.005889206193387508, -0.05721138045191765, -0.017161091789603233, -0.04721201956272125, -0.07689065486192703, -0.0024502037558704615, -0.2012757956981659, -0.024680377915501595, -0.9831825494766235], "finish_reason": "stop"}], "metrics": {"energy": 513.9507747993466, "energy_per_token": 3.426338498662311, "time": 12.611228, "time_per_token": 0.08407485333333334}}
{"outputs": [{"text": "# Create a scatterplot for the specified columns\n    ax = plt.scatter(df[x_column], df[y_column])\n\n    # Fit a linear regression model to the data\n    reg = LinearRegression().fit(df[[x_column]], df[y_column])\n    # Use the model to predict the values of Y using X\n    y_pred = reg.predict(df[[x_column]])\n    # Plot the regression line over the scatterplot, in red\n    plt.plot(df[x_column], y_pred, color='r')\n\n    return ax", "tokens": ["#", " Create", " a", " scatter", "plot", " for", " the", " specified", " columns", "\n", "    ", "ax", " =", " plt", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "])", "\n", "\n", "    ", "#", " Fit", " a", " linear", " regression", " model", " to", " the", " data", "\n", "    ", "reg", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "df", "[[", "x", "_", "column", "]]", ",", " df", "[", "y", "_", "column", "])", "\n", "    ", "#", " Use", " the", " model", " to", " predict", " the", " values", " of", " Y", " using", " X", "\n", "    ", "y", "_", "pred", " =", " reg", ".", "predict", "(", "df", "[[", "x", "_", "column", "]]", ")", "\n", "    ", "#", " Plot", " the", " regression", " line", " over", " the", " scatter", "plot", ",", " in", " red", "\n", "    ", "plt", ".", "plot", "(", "df", "[", "x", "_", "column", "]", ",", " y", "_", "pred", ",", " color", "='", "r", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.102859377861023, -2.1246325969696045, -0.4014640152454376, -0.9186903238296509, -1.164751648902893, -2.3927969932556152, -0.28385666012763977, -0.34240075945854187, -0.19358401000499725, -0.4737897217273712, -0.004538117442280054, -0.2976251542568207, -0.002902939449995756, -1.904850721359253, -0.0001137191939051263, -0.07818201184272766, -0.000537727726623416, -0.4592265486717224, -0.02824128046631813, -0.003079555230215192, -9.893881360767409e-05, -3.158996332786046e-05, -9.083335316972807e-05, -0.02416246198117733, -0.019341910257935524, -0.0001486429391661659, -0.00011073929636040702, -7.390948667307384e-06, -4.0531076592742465e-06, -0.23578833043575287, -0.005999887827783823, -0.4540497958660126, -0.0013163958210498095, -0.013052382506430149, -0.24552401900291443, -0.1929924041032791, -0.0253587756305933, -0.008152659051120281, -0.030499853193759918, -0.08831879496574402, -0.007733879145234823, -0.030357273295521736, -0.17690488696098328, -0.0010008569806814194, -2.6855194568634033, -0.10862698405981064, -0.0005772831500507891, -9.298280929215252e-06, -9.536738616588991e-07, -0.002169043058529496, -0.33834290504455566, -1.883488948806189e-05, -0.00019476900342851877, -0.09228280186653137, -0.26154905557632446, -0.0017872564494609833, -5.817244164063595e-05, -2.753696753643453e-05, -0.0003212174342479557, -0.038501493632793427, -0.003648174926638603, -0.3099939823150635, -0.0004076126788277179, -1.1324817933200393e-05, -5.722029527532868e-06, -0.0010843356139957905, -0.0033085390459746122, -1.2324596643447876, -1.4777140617370605, -3.839603900909424, -0.060413893312215805, -0.6335003972053528, -0.006930716335773468, -0.5079747438430786, -0.3825194537639618, -2.440256357192993, -0.253524512052536, -2.905028820037842, -3.5667667388916016, -0.8476161360740662, -0.3961729407310486, -0.0014452022733166814, -0.20025090873241425, -0.014027219265699387, -0.08783041685819626, -0.050929054617881775, -0.0023104657884687185, -5.1616290875244886e-05, -0.011110463179647923, -0.0017498909728601575, -0.0009713222389109433, -0.012068821117281914, -0.00044216870446689427, -2.145764938177308e-06, -1.4305104514278355e-06, -2.253030106658116e-05, -0.0010176486102864146, -0.004459792748093605, -0.46676066517829895, -0.01929747685790062, -1.1020920276641846, -0.029801562428474426, -1.060826301574707, -0.0036693166475743055, -3.0257630348205566, -0.045361921191215515, -0.036144934594631195, -0.376213937997818, -2.944357395172119, -1.341914176940918, -0.07957970350980759, -0.057898785918951035, -0.0018266435945406556, -0.04351729527115822, -4.637133679352701e-05, -0.001807366730645299, -0.0009054613183252513, -0.002679450437426567, -0.03689901903271675, -0.0008634176338091493, -2.610649426060263e-05, -5.4834770708112046e-05, -4.351044481154531e-05, -0.008443490602076054, -0.0033677073661237955, -5.030505417380482e-05, -2.622600959512056e-06, -0.008944562636315823, -0.14519459009170532, -0.10245806723833084, -2.8284623622894287, -0.016512049362063408, -0.00510946661233902, -0.33056870102882385, -0.00115697190631181, -0.247831329703331, -0.009550123475492, -0.18813924491405487, -0.025597937405109406, -0.7063797116279602], "finish_reason": "stop"}], "metrics": {"energy": 517.3241609859466, "energy_per_token": 3.695172578471047, "time": 11.783887, "time_per_token": 0.08417062142857143}}
{"outputs": [{"text": "if not isinstance(x_column, str) or not isinstance(y_column, str):\n        raise ValueError('x_column and y_column must be strings.')\n    x = df[x_column]\n    y = df[y_column]\n    plt.scatter(x, y)\n    ax = plt.gca()\n    X = x.values.reshape((-1, 1))\n    lm = LinearRegression()\n    lm.fit(X, y)\n    X_pred = np.linspace(0, 10, 100).reshape(-1, 1)\n    y_pred = lm.predict(X_pred)\n    ax.plot(X_pred, y_pred, 'r')\n    plt.xlabel(x_column)\n    plt.ylabel(y_column)\n    return ax", "tokens": ["if", " not", " isinstance", "(", "x", "_", "column", ",", " str", ")", " or", " not", " isinstance", "(", "y", "_", "column", ",", " str", "):", "\n", "        ", "raise", " Value", "Error", "('", "x", "_", "column", " and", " y", "_", "column", " must", " be", " strings", ".", "')", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", "\n", "    ", "plt", ".", "scatter", "(", "x", ",", " y", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "X", " =", " x", ".", "values", ".", "resh", "ape", "(", "(-", "1", ",", " ", "1", "))", "\n", "    ", "lm", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "lm", ".", "fit", "(", "X", ",", " y", ")", "\n", "    ", "X", "_", "pred", " =", " np", ".", "l", "inspace", "(", "0", ",", " ", "1", "0", ",", " ", "1", "0", "0", ")", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", "_", "pred", " =", " l", "m", ".", "predict", "(", "X", "_", "pred", ")", "\n", "    ", "ax", ".", "plot", "(", "X", "_", "pred", ",", " y", "_", "pred", ",", " '", "r", "')", "\n", "    ", "plt", ".", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "plt", ".", "ylabel", "(", "y", "_", "column", ")", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-3.556497573852539, -0.51593017578125, -0.5376179814338684, -0.00019298121333122253, -1.9002989530563354, -9.274052717955783e-05, -0.00012730741582345217, -0.0012328175362199545, -0.02907499112188816, -0.9121660590171814, -0.05717524141073227, -0.0041245874017477036, -0.004554612562060356, -4.327203714638017e-05, -0.0037612426094710827, -6.079655122448457e-06, -5.364403477869928e-06, -0.00010883215873036534, -0.0017483439296483994, -0.00437481515109539, -0.0036784622352570295, -0.0072732665576040745, -0.09041270613670349, -0.9253376722335815, -6.282132380874828e-05, -2.022786855697632, -0.6582615971565247, -0.030518006533384323, -0.0042006829753518105, -0.008300804533064365, -0.006808060687035322, -0.0006274400511756539, -0.0012775840004906058, -0.06802405416965485, -0.03516795486211777, -0.4174180328845978, -1.8233962059020996, -0.029253875836730003, -0.0010352734243497252, -0.9426001310348511, -2.2125115394592285, -0.4566335678100586, -0.09894920885562897, -0.10245978832244873, -0.0011381583753973246, -7.986990567587782e-06, -6.556489552167477e-06, -0.0004383556661196053, -1.2468888759613037, -0.0017212113598361611, -0.08191089332103729, -0.0005491655902005732, -0.000105375460407231, -0.00012861855793744326, -4.434487345861271e-05, -9.536738616588991e-07, -4.768370445162873e-07, -2.7179348762729205e-05, -0.0012885371688753366, -0.195276141166687, -2.332246780395508, -0.0006361367995850742, -0.2648845314979553, -0.0003182381624355912, -0.003251981223002076, -0.007872624322772026, -0.015838533639907837, -0.19791729748249054, -0.01456709299236536, -0.09707056730985641, -2.0376062393188477, -0.005478606093674898, -0.001642546383664012, -0.014601750299334526, -0.025988513603806496, -0.00013445904187392443, -0.0006170752458274364, -0.04453495517373085, -0.09546277672052383, -3.7907755374908447, -0.059315212070941925, -0.3832763731479645, -0.011720015667378902, -1.0226300954818726, -0.014733673073351383, -2.396077979938127e-05, 0.0, -1.7413564920425415, -0.09668558090925217, -6.782778655178845e-05, -0.00013612773909699172, -0.047251589596271515, -0.00013767725613433868, -0.00011836781777674332, -0.059490565210580826, -0.000395815703086555, -3.3480618000030518, -0.01353362761437893, -0.0011940023396164179, -2.1934269170742482e-05, -3.576278118089249e-07, -0.02602405473589897, -0.3504255414009094, -0.0001854724541772157, -0.09616997838020325, -0.011480458080768585, -2.634490556374658e-05, -0.00012766500003635883, -0.00035494225448928773, -0.0036309524439275265, -0.012101798318326473, -0.0198217760771513, -0.0021752286702394485, -0.003086210461333394, -2.6553382873535156, -0.26477521657943726, -1.4531704187393188, -0.021750250831246376, -0.47502031922340393, -1.8596476365928538e-05, -0.5080646872520447, -2.0265558760002023e-06, -0.0019985719118267298, -2.396477222442627, -0.012998020276427269, -0.6793128252029419, -0.47644051909446716, -0.18052160739898682, -0.2882956862449646, -0.153433695435524, -0.24407851696014404, -0.014707712456583977, -0.15894748270511627, -0.1336621195077896, -0.2822420299053192, -0.008266164921224117, 0.0, -0.3527422547340393, -3.480850500636734e-05, -0.00012289722508285195, -0.009678109548985958, -2.4318398573086597e-05, -8.082063141046092e-05, -0.05779111385345459, -0.00031454383861273527, -0.08798839896917343, -0.0006319671520031989, -0.005394544918090105, -0.005053366534411907, -0.0019212374463677406, -2.3841855067985307e-07, -1.3708974620385561e-05, -0.009220399893820286, -6.294052582234144e-05, -0.00040451448876410723, -0.004236770328134298, -3.4570634852570947e-06, -0.0015706595731899142, -0.005491647403687239, -0.0020839895587414503, -1.3692917823791504, -0.0030942915473133326, -0.014020283706486225, -0.0006921279709786177, -0.004894418641924858, -0.00209386320784688, -1.9788545614574105e-05, -0.03148452192544937, -0.0016112453304231167, -7.426462980220094e-05, -3.576278118089249e-07, -0.008519258350133896, -1.7937474250793457, -0.132607564330101, -0.06408517807722092, -0.01643758825957775, -0.03174196928739548, -2.023437976837158, -0.000102037942269817, -0.9582020044326782, -0.008622322231531143, -0.01358984224498272, -0.00466200103983283, -0.0001234931987710297, -0.017418036237359047, -0.004234752152115107, -3.671578815556131e-05, -0.00014280252798926085, -8.344646857949556e-07, -0.0011570908827707171, -0.00010895135346800089, -0.00016759421851020306, -5.471556869451888e-05, -3.158996332786046e-05, -0.00032789100077934563, -0.00027926836628466845, -0.011033358983695507, -0.6531387567520142, -0.01683421991765499, -0.1915867030620575, -0.027013719081878662, -2.1137657165527344], "finish_reason": "stop"}], "metrics": {"energy": 711.5163888463973, "energy_per_token": 3.522358360625729, "time": 17.231316, "time_per_token": 0.08530354455445545}}
{"outputs": [{"text": "# Check if x_column and y_column are in the DataFrame\n    if x_column not in df.columns or y_column not in df.columns:\n        raise ValueError(\"Specified column names are not in the DataFrame.\")\n\n    # Check if x_column and y_column are numeric\n    if not (df[x_column].dtype in {'int', 'float'} and df[y_column].dtype in {'int', 'float'}):\n        raise ValueError(\"Specified columns must have numeric data.\")\n\n    # Create the scatter plot and get the Axes object\n    ax = df.plot.scatter(x_column, y_column, marker='o')\n\n    # Fit the linear regression model and get the predictions\n    x = df[x_column].to_numpy().reshape(-1, 1)\n    y = df[y_column].to_numpy()\n    reg = LinearRegression()\n    reg.fit(x, y)\n    y_pred = reg.predict(x)\n\n    # Plot the linear regression line", "tokens": ["#", " Check", " if", " x", "_", "column", " and", " y", "_", "column", " are", " in", " the", " Data", "Frame", "\n", "    ", "if", " x", "_", "column", " not", " in", " df", ".", "columns", " or", " y", "_", "column", " not", " in", " df", ".", "columns", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Spec", "ified", " column", " names", " are", " not", " in", " the", " Data", "Frame", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " x", "_", "column", " and", " y", "_", "column", " are", " numeric", "\n", "    ", "if", " not", " (", "df", "[", "x", "_", "column", "]", ".", "d", "type", " in", " {'", "int", "'", ",", " '", "float", "'}", " and", " df", "[", "y", "_", "column", "]", ".", "d", "type", " in", " {'", "int", "'", ",", " '", "float", "'})", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Spec", "ified", " columns", " must", " have", " numeric", " data", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " scatter", " plot", " and", " get", " the", " Ax", "es", " object", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "_", "column", ",", " y", "_", "column", ",", " marker", "='", "o", "')", "\n", "\n", "    ", "#", " Fit", " the", " linear", " regression", " model", " and", " get", " the", " predictions", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "()", "\n", "    ", "reg", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "reg", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "y", "_", "pred", " =", " reg", ".", "predict", "(", "x", ")", "\n", "\n", "    ", "#", " Plot", " the", " linear", " regression", " line"], "logprobs": [-1.102859377861023, -2.1788012981414795, -0.6721989512443542, -1.5369335412979126, -0.11027749627828598, -0.009712465107440948, -0.1659756749868393, -0.0023587520699948072, -0.0008780676289461553, -0.010512925684452057, -0.5102822184562683, -1.0483895540237427, -0.19429150223731995, -0.2934092581272125, -0.0027222500648349524, -0.15292875468730927, -0.0025808855425566435, -0.09939991682767868, -0.07517996430397034, -1.6689160474925302e-05, -3.933898824470816e-06, -0.007729147095233202, -8.821448318485636e-06, -0.003232137765735388, -0.0910026803612709, -0.0002708068350329995, -0.6356130242347717, -0.0003762729174923152, -1.1920922133867862e-06, -7.390948667307384e-06, -5.066266385256313e-05, -1.597391747054644e-05, -2.372236667724792e-05, -0.0001776060671545565, -3.349725011503324e-05, -0.0005295066512189806, -0.00027700403006747365, -0.0030340375378727913, -0.09310510754585266, -0.10377121716737747, -1.2636104656849056e-05, -0.06246072053909302, -0.1386282742023468, -2.4519805908203125, -0.010513161309063435, -0.46222013235092163, -1.6608469486236572, -1.1772565841674805, -0.011525829322636127, -0.2882188558578491, -0.1016765832901001, -0.04304730147123337, -0.0025659038219600916, -1.0411796569824219, -0.03383559361100197, -0.0005088941543363035, -0.0004217927053105086, -0.21439087390899658, -0.0012468667700886726, -0.05160120502114296, -0.301800012588501, -0.043448127806186676, -0.6020346283912659, -0.017070623114705086, -0.0011438739020377398, -0.01417731773108244, -0.0009714413317851722, -0.000387831823900342, -0.0017095488728955388, -1.0708644390106201, -0.2598728537559509, -0.12109716981649399, -0.0005422552349045873, -0.03641762584447861, -0.23006334900856018, -1.0077552795410156, -0.1942986696958542, -0.0059547401033341885, -0.00200130813755095, -1.6689286894688848e-06, -1.9073468138230965e-06, -0.00022682955022901297, -4.994744449504651e-05, -0.004754666239023209, -0.026177706196904182, -2.090284585952759, -2.5313961505889893, -0.07462682574987411, -2.727400064468384, -0.0004412154376041144, -0.01230623573064804, -0.39702823758125305, -0.10875305533409119, -0.015058530494570732, -0.005745325703173876, -0.0002040654799202457, -0.0019364668987691402, -1.0728830375228426e-06, -8.344646857949556e-07, -0.00012563870404846966, -1.883488948806189e-05, -2.8609820219571702e-05, -0.0003079893649555743, -0.0017625049222260714, -0.0003890234511345625, -0.0002356490003876388, -4.482168878894299e-05, -5.924526340095326e-05, -0.0010096696205437183, -5.483612312673358e-06, -0.018621036782860756, -0.00033909291960299015, -0.0019998804200440645, -0.0015401893761008978, -0.0034713030327111483, -0.3145880401134491, -9.536738616588991e-07, -0.003934500738978386, -0.02130141854286194, -0.8122991919517517, -0.0001045410826918669, -0.16530202329158783, -0.5320278406143188, -3.1136133670806885, -0.05520566180348396, -0.1300339251756668, -1.5213401317596436, -0.014192831702530384, -0.0005323661607690156, -0.0002549561613705009, -0.010731250047683716, -0.001453058677725494, -0.11811835318803787, -0.9956262707710266, -2.0813729763031006, -0.2679506838321686, -0.3378068208694458, -2.456148147583008, -0.5842176675796509, -0.017445214092731476, -0.0966780036687851, -0.0022513538133352995, -0.08253971487283707, -0.0212219450622797, -0.0007900454220362008, -0.045600902289152145, -0.0034240209497511387, -0.08255749940872192, -0.04775848239660263, -3.433168603805825e-05, -0.06787280738353729, -2.0503786799963564e-05, -0.0010709986090660095, -0.009646822698414326, -1.8919296264648438, -8.749579137656838e-05, -3.8742269680369645e-05, -0.0026440205983817577, -0.0005259322933852673, -1.168244216387393e-05, -1.3071335554122925, -1.933833360671997, -0.10522536933422089, -0.35963717103004456, -0.5940238833427429, -0.007181663066148758, -0.04587364196777344, -0.000659248442389071, -0.007276343181729317, -0.4350103735923767, -0.9477853178977966, -0.023677224293351173, -0.009277683682739735, -0.014026043936610222, -0.9303939938545227, -0.8788445591926575, -0.005946089047938585, -2.6813271045684814, -0.02436421625316143, -0.00021872512297704816, -1.3122422695159912, -0.13629230856895447, -0.053244177252054214, -0.18158550560474396, -0.0007494263118132949, -9.894321920000948e-06, -4.0531076592742465e-06, -0.00018809456378221512, -0.008292647078633308, -1.3674358129501343, -2.50339189733495e-06, -0.012333082966506481, -0.00794134009629488, -0.05122923105955124, -0.0003491030656732619, 0.0, -0.04550647735595703, -1.3470558769768104e-05, -3.969590397900902e-05, -0.01712898351252079, -6.198863957251888e-06, -1.966933996300213e-05, -0.15245354175567627, -0.00013684290752280504, -0.009524618275463581, -0.00014768941036891192, -4.172238186583854e-05, -0.00018416139937471598, -4.5060096454108134e-05, -1.7881377516459906e-06, -7.152555099310121e-07, -2.861018856492592e-06, -0.010347999632358551, -0.0006474544061347842, -9.059865078597795e-06, -2.3603161025675945e-05, -6.007967749610543e-05, -1.360173225402832, -0.03152298554778099, -1.672317385673523, -0.11552887409925461, -0.00016020445036701858, -2.622600959512056e-06, -1.1920928244535389e-07, -0.0018453251104801893, -2.8119354248046875, -0.000750617531593889, -0.007436569780111313, -0.0032611305359750986, -1.549708758830093e-05, -4.6967357775429264e-05, -0.0006108802044764161, -0.0011825718684121966, -0.0024356956128031015, -0.00031275625224225223, -0.0019610952585935593, -0.012823500670492649, -0.18455170094966888, -0.0009062950266525149, -0.013459532521665096, -0.015494209714233875, -0.00039521988946944475, -1.3470558769768104e-05, -0.00036614391137845814, -0.00010334911348763853, -0.0007976687629707158, -0.00043072958942502737, -0.0033094894606620073, -0.012808553874492645, -0.00022420754248742014, -0.004509161692112684, -0.9647314548492432, -0.005453708581626415, -1.0495734214782715, -0.0015694693429395556, -0.0123834777623415], "finish_reason": "length"}], "metrics": {"energy": 889.3667582664485, "energy_per_token": 3.4740888994783146, "time": 21.840754, "time_per_token": 0.0853154453125}}
{"outputs": [{"text": "fig, ax = plt.subplots()\n\n    # Scatter plot\n    ax.scatter(df[x_column], df[y_column])\n\n    # Set axis labels\n    ax.set_xlabel(x_column)\n    ax.set_ylabel(y_column)\n\n    # Fit linear regression model\n    X = df[x_column].to_numpy().reshape(-1, 1)\n    y = df[y_column].to_numpy()\n    model = LinearRegression().fit(X, y)\n\n    # Plot the predicted regression line\n    x_min, x_max = min(X.flatten()), max(X.flatten())\n    X_pred = np.array([x_min, x_max]).reshape(-1, 1)\n    y_pred = model.predict(X_pred)\n    ax.plot(X_pred, y_pred, color='red')\n\n    return ax", "tokens": ["fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "\n", "    ", "#", " Sc", "atter", " plot", "\n", "    ", "ax", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "])", "\n", "\n", "    ", "#", " Set", " axis", " labels", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "y", "_", "column", ")", "\n", "\n", "    ", "#", " Fit", " linear", " regression", " model", "\n", "    ", "X", " =", " df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "()", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n", "\n", "    ", "#", " Plot", " the", " predicted", " regression", " line", "\n", "    ", "x", "_", "min", ",", " x", "_", "max", " =", " min", "(", "X", ".", "fl", "atten", "())", ",", " max", "(", "X", ".", "fl", "atten", "())", "\n", "    ", "X", "_", "pred", " =", " np", ".", "array", "([", "x", "_", "min", ",", " x", "_", "max", "])", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", "_", "pred", ")", "\n", "    ", "ax", ".", "plot", "(", "X", "_", "pred", ",", " y", "_", "pred", ",", " color", "='", "red", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-2.963743209838867, -0.11028005927801132, -0.01846165768802166, -0.004861321300268173, -0.0018950614612549543, -8.702239938429557e-06, -0.00017736769223120064, -7.199982064776123e-05, -0.16622626781463623, -0.027201440185308456, -1.5529227256774902, -0.0013556823832914233, -0.7979274392127991, -2.4698801040649414, -0.000395815703086555, -0.6509085297584534, -0.7326607704162598, -0.0021644041407853365, -0.20048847794532776, -0.015293357893824577, -0.06682466715574265, -0.0031319635454565287, -0.2125304490327835, -0.020611384883522987, -0.002661854727193713, -7.009260298218578e-05, -3.8265450712060556e-05, -9.643566590966657e-05, -0.030160196125507355, -0.011366256512701511, -0.00015138434537220746, -6.854299135738984e-05, -1.9073468138230965e-06, -7.152555099310121e-07, -0.5575092434883118, -0.006516160909086466, -0.5311619639396667, -0.0005646541831083596, -0.05403268709778786, -1.9609729051589966, -1.3966816663742065, -0.010549020953476429, -0.2013063132762909, -0.0003670972364488989, -0.0313330702483654, -8.034383063204587e-05, -0.00017271934484597296, -0.027830250561237335, -0.005573803558945656, -0.009909364394843578, -0.022692525759339333, -3.576214658096433e-05, -3.397406908334233e-05, -0.03326982259750366, -0.003909802529960871, -0.00036244976217858493, -0.0005720409681089222, -3.3378546504536644e-06, -1.1801649634435307e-05, -2.2053474822314456e-05, -0.0004904259694740176, -8.451581379631534e-05, -0.00011264643399044871, -4.6491513785440475e-06, -1.2636104656849056e-05, -0.0003046525234822184, -0.00020287363440729678, -0.03206435218453407, -0.001100649475120008, -0.02763313800096512, -0.6203563809394836, -0.2219933271408081, -0.01920650154352188, -0.02510223723948002, -0.4849017560482025, -0.0011135098757222295, -2.220453977584839, -0.01622144505381584, -0.050389423966407776, -0.37119174003601074, -0.001321634161286056, -6.6756979322235566e-06, -8.106198947643861e-06, -0.0002348147245356813, -0.006937227211892605, -1.9290260076522827, -1.7881377516459906e-06, -0.026885030791163445, -0.0015026956098154187, -0.045228734612464905, -0.000163541772053577, 0.0, -0.010744458995759487, -2.1815061700181104e-05, -3.8980677345534787e-05, -0.025591779500246048, -1.7881233361549675e-05, -2.2172682292875834e-05, -0.1863677054643631, -0.00037925204378552735, -0.04187791794538498, -0.001335801207460463, -0.00023123928986024112, -0.001061352901160717, -7.164221460698172e-05, -7.033323527139146e-06, -1.9073304429184645e-05, -9.894321920000948e-06, -0.17559559643268585, -0.0015645894454792142, -8.344646857949556e-07, -1.8596476365928538e-05, -4.851700214203447e-05, -0.21697258949279785, -0.111968033015728, -0.5642268061637878, -0.0005057962844148278, -0.00014006110723130405, -1.7881377516459906e-06, -2.3841855067985307e-07, -0.001522573409602046, -0.14434190094470978, -2.7418097943154862e-06, -1.2516897186287679e-05, -0.0002051381452474743, -0.0017838055500760674, -0.001158996019512415, -0.00024148885859176517, -0.0022559924982488155, -0.23026041686534882, -0.00037269797758199275, -0.00890793651342392, -0.9364436268806458, -0.858939528465271, -2.3393588066101074, -0.0669935792684555, -0.0013255628291517496, -0.12339974194765091, -0.000756216119043529, -1.3281916379928589, -0.07167953997850418, -1.0721702575683594, -0.9869768619537354, -0.001753103919327259, -1.0132738680113107e-05, -2.539125671319198e-05, -0.00014006110723130405, -2.3831708431243896, -0.0022710978519171476, -0.10607699304819107, -2.0453813076019287, -0.1644158512353897, -2.5748875486897305e-05, -0.013001315295696259, -0.017606280744075775, -0.0005006728461012244, -8.082063141046092e-05, -0.0002172949316445738, -2.0503786799963564e-05, -6.079655122448457e-06, -1.1920928244535389e-07, -0.00012706902634818107, -0.02153746783733368, -0.001073380233719945, -2.746988296508789, -0.0005976559477858245, -0.7532753348350525, -0.002393716247752309, -0.01543387584388256, -1.0728830375228426e-06, -0.3557731807231903, -0.00047958316281437874, -0.039947472512722015, -7.402622577501461e-05, -1.0609570381348021e-05, -0.0010904086520895362, -0.0002426806604489684, -2.3841855067985307e-07, -8.344646857949556e-07, -0.0002791491860989481, -0.0009320206008851528, -2.145764938177308e-06, 0.0, -0.00034528967808000743, -6.437280717364047e-06, -1.8715683836489916e-05, -0.0013467537937685847, -5.960446742392378e-06, -8.702239938429557e-06, -0.006957944482564926, -0.0007858763565309346, -0.004018566105514765, -9.738924563862383e-05, -0.0020983838476240635, -0.00035065223346464336, -0.0006920088781043887, -5.960446742392378e-06, -0.24958716332912445, -6.615896563744172e-05, -9.870042413240299e-05, -0.0004773192631546408, -1.6689286894688848e-06, -0.0003150205302517861, -0.002418927848339081, -0.050324697047472, -0.035170603543519974, -7.950943836476654e-05, -0.0008993871742859483, -0.018250280991196632, -0.015254262834787369, -0.0019300420535728335, -0.0001419681793777272, -0.18463782966136932, -0.0002361257211305201, -2.3007127310847864e-05, -3.576278118089249e-07, -0.003481757128611207, -0.14646272361278534, -0.048092104494571686, -0.07538362592458725, -0.06963450461626053, -0.0032841814681887627, -0.05157267674803734, -0.0011408970458433032, -0.18284866213798523, -0.00857433769851923, -0.1678868681192398, -0.02156243473291397, -1.864940881729126], "finish_reason": "stop"}], "metrics": {"energy": 853.266648485184, "energy_per_token": 3.726055233559755, "time": 20.559189, "time_per_token": 0.08977811790393013}}
{"outputs": [{"text": "x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n\n    # Plot the scatter plot\n    ax = sns.scatterplot(x=x, y=y)\n\n    # Fit the linear regression model\n    model = LinearRegression().fit(x, y)\n    y_pred = model.predict(x)\n\n    # Overlay the predicted regression line on top in red\n    ax.plot(x, y_pred, 'r-')\n\n    return ax", "tokens": ["x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "\n", "    ", "#", " Plot", " the", " scatter", " plot", "\n", "    ", "ax", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "x", ",", " y", "=", "y", ")", "\n", "\n", "    ", "#", " Fit", " the", " linear", " regression", " model", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", ")", "\n", "\n", "    ", "#", " Over", "lay", " the", " predicted", " regression", " line", " on", " top", " in", " red", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " y", "_", "pred", ",", " '", "r", "-", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.8795527219772339, -0.3055197596549988, -0.04728615656495094, -0.13750216364860535, -0.0034242586698383093, -3.5523738915799186e-05, -3.266281055402942e-05, -0.0003955773718189448, -0.4840770959854126, -0.28335240483283997, -0.15841254591941833, -0.001210909802466631, 0.0, -0.03261015564203262, -3.2782016205601394e-05, -0.00022587609419133514, -0.04447463899850845, -8.511180931236595e-05, -7.414542778860778e-05, -0.14818574488162994, -0.0021212236024439335, -0.009280990809202194, -0.0002554328821133822, -0.0002944036095868796, -0.0006727101281285286, -9.941560711013153e-05, -4.291525328881107e-06, -4.768370445162873e-07, -8.106198947643861e-06, -0.041060879826545715, -0.00023719835735391825, -0.11665663868188858, -0.0005704921204596758, 0.0, -0.00033706706017255783, -5.125986263010418e-06, -2.7894584491150454e-05, -0.0008390005677938461, -4.6491513785440475e-06, -3.635817120084539e-05, -0.0009236836922354996, -0.7223963141441345, -0.0009740613750182092, -1.1647924184799194, -2.0165233612060547, -0.238995760679245, -0.5135766863822937, -0.5225003957748413, -0.12880189716815948, -0.0026828984264284372, -0.8052518367767334, -0.004129098728299141, -1.195013165473938, -0.0027270056307315826, -0.0002460177056491375, -0.01450564619153738, -3.933898824470816e-06, -0.0001677133986959234, -0.32128679752349854, -0.35448333621025085, -0.08901983499526978, -0.46301138401031494, -0.0024716088082641363, -0.00020489977032411844, -0.00020466140995267779, -0.27626508474349976, -0.006437161937355995, -0.2865878641605377, -0.0007335832342505455, -0.019306832924485207, -0.2001400589942932, -0.894952118396759, -0.028633954003453255, -0.00805971771478653, -0.014287203550338745, -0.3680479824542999, -0.00029583368450403214, -0.706652820110321, -0.0009410720085725188, -0.00045158201828598976, -9.179073458653875e-06, -1.4305104514278355e-06, -0.0012041230220347643, -1.0899595022201538, -4.529942543740617e-06, -7.891343557275832e-05, -0.003435782389715314, -0.004704953171312809, -0.002291436307132244, -0.0007391819381155074, -0.001426989445462823, -0.9301923513412476, -0.23183956742286682, -0.003913127351552248, -0.0410209484398365, -0.01816447637975216, -0.001262939884327352, -9.63164638960734e-05, -0.02292218990623951, -0.0002317160106031224, -0.002465781755745411, -0.0008727079257369041, -0.012201549485325813, -0.07758937776088715, -0.00026353701832704246, -0.012506157159805298, -0.999240517616272, -0.004270363133400679, -0.012534175999462605, -0.35596516728401184, -0.0577470101416111, -0.0004378790326882154, -0.4592524766921997, -0.38756877183914185, -0.19789020717144012, -0.002877977676689625, -0.05098332092165947, -0.0006996329175308347, -0.2685937285423279, -0.006277012173086405, -0.005595023278146982, -0.0006874820101074874, -0.0027327120769768953, -0.012145256623625755, -0.0003657863999251276, -9.63164638960734e-05, -5.960462772236497e-07, -0.004670544061809778, -2.3942389488220215, -0.011412221938371658, -1.449296474456787, -0.001208766596391797, -0.004157709423452616, -0.056285541504621506, -0.00045599075383506715, -0.14176739752292633, -0.0013221102999523282, -0.17212547361850739, -0.015447727404534817, -1.7675169706344604], "finish_reason": "stop"}], "metrics": {"energy": 521.2796571712496, "energy_per_token": 3.723426122651783, "time": 12.607968, "time_per_token": 0.09005691428571429}}
{"outputs": [{"text": "assert isinstance(x_column, str), \"x_column must be a string\"\n    assert isinstance(y_column, str), \"y_column must be a string\"\n    assert set([x_column, y_column]).issubset(df.columns), \"x_column and y_column must be valid column names in the DataFrame\"\n    assert df[x_column].dtype in ['int32', 'int64', 'float32', 'float64'], \"x_column must contain numeric data\"\n    assert df[y_column].dtype in ['int32', 'int64', 'float32', 'float64'], \"y_column must contain numeric data\"\n\n    # Plot scatterplot of x_column vs y_column\n    fig, ax = plt.subplots()\n    ax.scatter(x=df[x_column], y=df[y_column])\n    ax.set_xlabel(x_column)\n    ax.set_ylabel(y_column)\n\n    # Fit linear regression model to the", "tokens": ["assert", " isinstance", "(", "x", "_", "column", ",", " str", ")", ",", " \"", "x", "_", "column", " must", " be", " a", " string", "\"", "\n", "    ", "assert", " isinstance", "(", "y", "_", "column", ",", " str", ")", ",", " \"", "y", "_", "column", " must", " be", " a", " string", "\"", "\n", "    ", "assert", " set", "([", "x", "_", "column", ",", " y", "_", "column", "])", ".", "iss", "ub", "set", "(", "df", ".", "columns", ")", ",", " \"", "x", "_", "column", " and", " y", "_", "column", " must", " be", " valid", " column", " names", " in", " the", " Data", "Frame", "\"", "\n", "    ", "assert", " df", "[", "x", "_", "column", "]", ".", "d", "type", " in", " ['", "int", "3", "2", "'", ",", " '", "int", "6", "4", "'", ",", " '", "float", "3", "2", "'", ",", " '", "float", "6", "4", "']", ",", " \"", "x", "_", "column", " must", " contain", " numeric", " data", "\"", "\n", "    ", "assert", " df", "[", "y", "_", "column", "]", ".", "d", "type", " in", " ['", "int", "3", "2", "'", ",", " '", "int", "6", "4", "'", ",", " '", "float", "3", "2", "'", ",", " '", "float", "6", "4", "']", ",", " \"", "y", "_", "column", " must", " contain", " numeric", " data", "\"", "\n", "\n", "    ", "#", " Plot", " scatter", "plot", " of", " x", "_", "column", " vs", " y", "_", "column", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "scatter", "(", "x", "=", "df", "[", "x", "_", "column", "]", ",", " y", "=", "df", "[", "y", "_", "column", "])", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "y", "_", "column", ")", "\n", "\n", "    ", "#", " Fit", " linear", " regression", " model", " to", " the"], "logprobs": [-3.8545799255371094, -0.490352988243103, -0.00022194306075107306, -2.6003150939941406, -0.00014208737411536276, -0.00015555603022221476, -0.000512111175339669, -0.030288463458418846, -0.0004325169720686972, -0.3179165720939636, -0.3763238191604614, -0.2885780930519104, -0.028388334438204765, -0.0027390127070248127, -0.0583258718252182, -0.003673830069601536, -0.11171998828649521, -0.052997857332229614, -0.2078390121459961, -0.006987184751778841, -0.0016224328428506851, -0.006676272489130497, -0.04768051579594612, -7.152531907195225e-06, -0.013216745108366013, -2.861018856492592e-06, -8.344646857949556e-07, -3.731181277544238e-05, -0.0009846605826169252, -3.3378044463461265e-05, -0.0006808108882978559, -0.0008062449633143842, -0.005875459406524897, -0.0025978884659707546, -0.00025185750564560294, -0.0003638797497842461, -1.7404405298293568e-05, -0.0002575780963525176, -0.0002256377338198945, -0.00028320116689428687, -0.00023195437097456306, -0.29284489154815674, -0.44864729046821594, -3.1822550296783447, -0.30268150568008423, -0.036170002073049545, -0.0002426806604489684, -5.543078441405669e-05, -0.013529511168599129, -0.03249891847372055, -2.7418097943154862e-06, -5.066266385256313e-05, -0.003732145531103015, -0.025495795533061028, -0.0001839230244513601, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0008039817912504077, -0.4119114577770233, -0.007918396033346653, -0.0012709167785942554, -0.030458111315965652, -0.005878066644072533, -0.5749423503875732, -0.4303314685821533, -0.012065758928656578, -0.001680630026385188, -0.12354829907417297, -0.04845650494098663, -0.001166616566479206, -0.0007645544828847051, -0.023125242441892624, -0.15950722992420197, -1.1567249298095703, -0.09825628995895386, -0.009088101796805859, -0.4849661886692047, -0.4326336085796356, -0.19978848099708557, -0.003818127792328596, -0.012932476587593555, -0.0020207001361995935, -0.4138582944869995, -0.24546191096305847, -1.0171432495117188, -0.03809833154082298, -0.009408185258507729, -2.0265558760002023e-06, -4.0531076592742465e-06, -5.7338023907504976e-05, -5.090107151772827e-05, -0.06090664491057396, -0.028904762119054794, -0.8493818640708923, -1.0381433963775635, -0.10654754191637039, -1.3880467414855957, -2.3841855067985307e-07, -0.00023636408150196075, -0.0006375664379447699, -0.022063273936510086, -0.008365944027900696, -0.0011820956133306026, -2.47952248173533e-05, -0.05198085308074951, -0.0002889215829782188, -0.003856603754684329, -0.0038543473929166794, -0.10211218148469925, -7.152555099310121e-07, -0.0007990981102921069, -0.00019238528329879045, -0.003952074330300093, -9.858122211880982e-05, -0.00016211149340961128, -2.2291887944447808e-05, -0.042707424610853195, -0.053682852536439896, -0.10263796150684357, -0.5170047283172607, -0.007850625552237034, -0.0008142255246639252, -0.1999698430299759, -0.5705907344818115, -0.07907084375619888, -0.31062811613082886, -0.023106837645173073, -0.0018682897789403796, -0.0007223857101053, -0.0007595514762215316, -0.000547378440387547, -0.00032908268622122705, -0.00339978514239192, -2.3841855067985307e-07, -8.344646857949556e-07, -4.410734163684538e-06, -5.960462772236497e-07, -2.777537883957848e-05, -0.00011145447206217796, -0.0001958416833076626, -0.000654602306894958, -3.671578815556131e-05, -0.00018094333063345402, -1.0728830375228426e-06, -5.364403477869928e-06, -3.2186455882765586e-06, -0.0002824861148837954, -1.7881233361549675e-05, -2.074220174108632e-05, 0.0, -9.738924563862383e-05, -1.0490362910786644e-05, -0.00017641419253777713, -1.4305104514278355e-06, -2.2649508537142538e-05, -7.152555099310121e-07, -6.9141146923357155e-06, -4.172316494077677e-06, -0.00035601475974544883, -5.960446742392378e-06, -5.5549986427649856e-05, 0.0, -3.755022044060752e-05, -0.0002584123576525599, -0.0006833125371485949, -0.007610138971358538, -0.0001908358681248501, -0.0002919009421020746, -0.00032276666024699807, -0.00022432672267314047, -0.0002580548170953989, -0.0002464944263920188, -0.00019894051365554333, -0.0004518203204497695, -0.21792614459991455, -0.001495434669777751, -1.1765855550765991, -1.9980461597442627, -2.5582520961761475, -0.29657217860221863, -2.422290086746216, -1.5516287088394165, -0.6780425310134888, -0.033385928720235825, -1.1464192867279053, -0.11961093544960022, -0.004450179636478424, -0.0016808680957183242, -0.35851943492889404, -0.0024678034242242575, -3.2089695930480957, -0.07006838917732239, -0.013138272799551487, -0.00638196524232626, -0.0012435331009328365, -2.0146166207268834e-05, -2.109982233378105e-05, -0.000316927267704159, -0.2249053418636322, -0.016889311373233795, -0.007284390740096569, -0.1570272445678711, -0.010504785925149918, -0.045226000249385834, -0.0009947833605110645, -1.800871729850769, -0.08817855268716812, -0.008641350083053112, -0.009307092987000942, -0.0004127365828026086, -1.0013530300057027e-05, -2.0265373677830212e-05, -5.8053239627042785e-05, -0.04444294050335884, -0.029296131804585457, -0.0007527616689912975, -0.000528076896443963, -0.00011896379146492109, -6.222531374078244e-05, -3.576272320060525e-06, -5.483612312673358e-06, -0.394397497177124, -0.0037269198801368475, -0.6943438649177551, -0.12205884605646133, -0.00038771264371462166, -0.017905382439494133, -0.08321992307901382, -0.05113057792186737, -0.006023586727678776, -0.009343468584120274, -0.0003483880718704313, -0.0012627016985788941, -0.0282962117344141, -0.00615190714597702, -5.829164365422912e-05, -0.0002108589978888631, -1.0251946150674485e-05, -6.83045873302035e-05, -6.925819616299123e-05, -0.0014416311169043183, -4.362964682513848e-05, -6.23445157543756e-05, -5.125986263010418e-06, -4.0531076592742465e-06, -0.00020239688456058502, -0.00013255194062367082, -0.23064470291137695, -0.0008765193051658571, -0.017541857436299324, -0.18413323163986206, -0.28029194474220276, -0.008149348199367523, -0.05078074708580971, -0.4951874017715454, -0.43943116068840027], "finish_reason": "length"}], "metrics": {"energy": 887.2695971088397, "energy_per_token": 3.465896863706405, "time": 21.829884, "time_per_token": 0.085272984375}}
{"outputs": [{"text": "ax = df.plot.scatter(x=x_column, y=y_column, s=5)\n    model = LinearRegression().fit(\n        df[[x_column]].values,\n        df[[y_column]].values\n    )\n    ax.plot(\n        df[x_column],\n        model.predict(df[[x_column]].values),\n        'r'\n    )\n    return ax", "tokens": ["ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " s", "=", "5", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "\n", "        ", "df", "[[", "x", "_", "column", "]]", ".", "values", ",", "\n", "        ", "df", "[[", "y", "_", "column", "]]", ".", "values", "\n", "    ", ")", "\n", "    ", "ax", ".", "plot", "(", "\n", "        ", "df", "[", "x", "_", "column", "]", ",", "\n", "        ", "model", ".", "predict", "(", "df", "[[", "x", "_", "column", "]]", ".", "values", ")", ",", "\n", "        ", "'", "r", "'", "\n", "    ", ")", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -0.13419461250305176, -0.0008873577462509274, -0.1449054628610611, -1.8000440832111053e-05, -0.005669940263032913, -0.04293881729245186, -0.2716978192329407, -0.006407550070434809, -5.400034933700226e-05, -3.0636318115284666e-05, -0.00034421717282384634, -0.030049726366996765, -0.0004396664153318852, -0.0007537146448157728, -1.0371154530730564e-05, -1.9788545614574105e-05, -1.198411226272583, -3.570791721343994, -0.0043892948888242245, -1.6635686159133911, -1.8378387689590454, -0.03601258993148804, -0.18592742085456848, -3.4116334915161133, -0.013999242335557938, -0.005144335329532623, -1.5020257706055418e-05, -2.3841855067985307e-07, -0.013511517085134983, -1.2538666725158691, -2.90866428258596e-05, -0.006399140227586031, -2.0452518463134766, -0.03504836931824684, -0.08036983758211136, -1.3243858814239502, -0.006324159447103739, -0.00019333878299221396, -9.226373367710039e-05, -0.0013731822837144136, -2.110323190689087, -0.42951974272727966, -0.2497767060995102, -2.553138494491577, -0.0009639384225010872, -0.0019710890483111143, -0.43322286009788513, -0.00035208225017413497, -3.3378546504536644e-06, -1.7881377516459906e-06, -0.00034981805947609246, -0.008304115384817123, -0.0012400802224874496, -0.6041043996810913, -0.07518505305051804, -4.589452510117553e-05, -0.011393954046070576, -0.11457035690546036, -2.2035069465637207, -0.006301415152847767, -0.22468245029449463, -0.03164646029472351, -0.17012271285057068, -0.004957645200192928, -0.12046308070421219, -0.5558780431747437, -0.003349173115566373, -4.1483970562694594e-05, -4.672895011026412e-05, -0.00030620177858509123, -0.2598700225353241, -0.024303484708070755, -0.0001760566228767857, -0.07960667461156845, -0.00012408917245920748, -0.13331884145736694, -0.00024327656137757003, -0.04346205294132233, -0.01657196693122387, -0.0010220548138022423, -5.364403477869928e-06, -8.106198947643861e-06, -0.0006059955921955407, -0.5716161727905273, -0.00871651154011488, -0.012956717051565647, -0.23440082371234894, -0.013243802823126316, -0.0005292683490552008, -2.076256036758423, -0.1379854679107666, -0.33630692958831787, -0.18282194435596466, -0.003951480612158775, -0.00028165188268758357, -0.003972972277551889, -0.09675192087888718, -0.059607040137052536, -0.004287812393158674, -0.22520574927330017, -0.01354150753468275, -2.131918430328369], "finish_reason": "stop"}], "metrics": {"energy": 357.0604092025757, "energy_per_token": 3.4005753257388163, "time": 8.841097, "time_per_token": 0.0842009238095238}}
{"outputs": [{"text": "ax = df[[y_column, x_column]].plot(kind='scatter', x=x_column, y=y_column)\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n    model = LinearRegression().fit(x, y)\n    y_pred = model.predict(x)\n    ax.plot(x, y_pred, color='red')\n    return ax", "tokens": ["ax", " =", " df", "[[", "y", "_", "column", ",", " x", "_", "column", "]]", ".", "plot", "(", "kind", "='", "scatter", "'", ",", " x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ")", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", ")", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " y", "_", "pred", ",", " color", "='", "red", "')", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -2.3270046710968018, -2.346226453781128, -8.225102646974847e-05, -7.10462118149735e-05, -0.09902381896972656, -0.06186452880501747, -4.172316494077677e-06, -1.0609570381348021e-05, -0.0017187122721225023, -0.0057856240309774876, -0.02140328846871853, -1.1331218481063843, -0.6620521545410156, -0.214433491230011, -0.00020203932945150882, -0.007043295074254274, -0.00016115797916427255, -0.08190540224313736, -0.03969602659344673, -0.020119864493608475, -1.4185804502631072e-05, -1.1324817933200393e-05, -0.009749770164489746, -0.004439735785126686, -0.0010139568476006389, -0.0018484188476577401, -4.0531076592742465e-06, -1.1920922133867862e-06, -0.6595613360404968, -0.018909893929958344, -0.13572794198989868, -1.103811502456665, -0.1580028384923935, -0.10027732700109482, -0.2796766459941864, -0.0068216766230762005, -4.8874615458771586e-05, -5.602820692729438e-06, -0.001587560516782105, -0.06861792504787445, -0.2686906158924103, -0.04167875275015831, -0.00016080040950328112, 0.0, -0.05238829925656319, -6.305972783593461e-05, -0.00013326710904948413, -0.023580707609653473, -9.381330892210826e-05, -8.320462075062096e-05, -0.06538590043783188, -0.0006094505661167204, -0.07375971972942352, -0.00047362555051222444, -0.00025817399728111923, -0.004950646311044693, -0.0002653246629051864, -9.536738616588991e-07, -7.152555099310121e-07, -1.1324817933200393e-05, -0.06141294538974762, -0.0020241502206772566, -0.09855004400014877, -0.0006281548412516713, -2.3841855067985307e-07, -0.00012981049076188356, -1.6689286894688848e-06, -4.8636207793606445e-05, -0.0007525234250351787, -4.410734163684538e-06, -3.1709168979432434e-05, -0.0010453957365825772, -0.06316221505403519, -0.535632848739624, -0.002230538986623287, -0.0005181877058930695, -3.2186455882765586e-06, -1.1920928244535389e-07, -0.0012382942950353026, -0.5259997844696045, -5.8412379075889476e-06, -0.0002233732520835474, -0.0046306755393743515, -0.0035858158953487873, -0.006960548926144838, -0.0002205128694185987, -0.011197227984666824, -0.011190272867679596, -0.20036311447620392, -0.00699310377240181, -0.08681228756904602, -0.022929295897483826, -0.004352738615125418, -6.675497570540756e-05, -0.09650678187608719, -0.0005491655902005732, -0.0016415942227467895, -0.0003328961320221424, -0.008870953693985939, -0.010007917881011963, -0.16285178065299988, -0.0028208012226969004, -0.003516206983476877, -0.0021349035669118166, -0.003243901301175356, -0.011724610812962055, -0.0008045773720368743, -0.00020311199477873743, -2.3841830625315197e-06, -0.008819554932415485, -0.04836291819810867, -0.014156279154121876, -0.059818048030138016, -0.1092773824930191, -0.013845707289874554, -0.04920102283358574, -0.04426264762878418, -0.0023400799836963415, -2.302466869354248, -1.2278481335670222e-05, -1.4305104514278355e-06, -1.1801649634435307e-05, -0.00014029949670657516, -0.19726453721523285], "finish_reason": "stop"}], "metrics": {"energy": 428.26770390510575, "energy_per_token": 3.3721866449220923, "time": 10.514905, "time_per_token": 0.08279452755905513}}
{"outputs": [{"text": "df = df.loc[:, [x_column, y_column]]\n    df = df.dropna(subset=[x_column, y_column])\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n\n    # Define the regression model\n    regression_model = LinearRegression()\n\n    # Fit the regression model to the data\n    regression_model.fit(x, y)\n    y_predicted = regression_model.predict(x)\n\n    # Draw the scatter plot of x-column vs y-column from data frame\n    ax = sns.scatterplot(x=x, y=y)\n\n    # Draw the regression line on the same Axes as the scatter plot\n    ax.plot(x, y_predicted, color='red')\n    return ax", "tokens": ["df", " =", " df", ".", "loc", "[:", ",", " [", "x", "_", "column", ",", " y", "_", "column", "]]", "\n", "    ", "df", " =", " df", ".", "drop", "na", "(", "subset", "=[", "x", "_", "column", ",", " y", "_", "column", "])", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "\n", "    ", "#", " Define", " the", " regression", " model", "\n", "    ", "reg", "ression", "_", "model", " =", " Linear", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " regression", " model", " to", " the", " data", "\n", "    ", "reg", "ression", "_", "model", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "y", "_", "pred", "icted", " =", " regression", "_", "model", ".", "predict", "(", "x", ")", "\n", "\n", "    ", "#", " Draw", " the", " scatter", " plot", " of", " x", "-", "column", " vs", " y", "-", "column", " from", " data", " frame", "\n", "    ", "ax", " =", " s", "ns", ".", "scatter", "plot", "(", "x", "=", "x", ",", " y", "=", "y", ")", "\n", "\n", "    ", "#", " Draw", " the", " regression", " line", " on", " the", " same", " Ax", "es", " as", " the", " scatter", " plot", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " y", "_", "pred", "icted", ",", " color", "='", "red", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-2.674640655517578, -1.223151683807373, -0.17619487643241882, -0.7507448792457581, -2.5408270359039307, -0.2529139220714569, -0.030957521870732307, -0.2204844206571579, -0.03675666078925133, -8.177422569133341e-05, -7.629365427419543e-06, -0.0013873485149815679, -0.0077545796521008015, -1.0728830375228426e-06, -4.768370445162873e-07, -0.0011062461417168379, -0.260201632976532, -0.14625799655914307, -0.6410936117172241, -0.7893129587173462, -0.03439079970121384, -0.14723551273345947, -0.28166571259498596, -0.00837575551122427, -1.7372318506240845, -1.668600082397461, -0.024004079401493073, -0.032664500176906586, -9.059865078597795e-06, -6.198863957251888e-06, -0.050374120473861694, -0.011022276245057583, -1.9073468138230965e-06, -3.933898824470816e-06, -0.07889030128717422, -0.11647670716047287, -0.31641173362731934, -1.9783878326416016, -0.21591226756572723, -0.07895001024007797, -0.23470696806907654, -0.001474485034123063, -8.106198947643861e-06, -4.0531076592742465e-06, -0.0008272086852230132, -0.12473536282777786, -0.21248070895671844, -0.04866431653499603, -0.0014750801492482424, 0.0, -0.038735926151275635, -2.8967437174287625e-05, -0.00014244495832826942, -0.011674536392092705, -8.284702198579907e-05, -5.221230458118953e-05, -0.05789856240153313, -0.00096941675292328, -0.008635086007416248, -0.0002857038634829223, -9.905801562126726e-05, -0.0006451908848248422, -6.329813186312094e-05, -8.344646857949556e-07, -2.3841830625315197e-06, -6.079655122448457e-06, -0.006914378609508276, -0.0002232540718978271, -0.16014030575752258, -0.0013075858587399125, 0.0, -0.00020597243565134704, -1.0728830375228426e-06, -3.361645576660521e-05, -0.0009392855572514236, -4.6491513785440475e-06, -3.135155202471651e-05, -0.0005689432728104293, -1.510881781578064, -0.0009517907164990902, -1.1384334564208984, -4.12172794342041, -0.46360963582992554, -2.641146183013916, -0.027882536873221397, -1.042994737625122, -0.0012357940431684256, -1.3476347923278809, -0.7132784724235535, -0.2213819921016693, -0.006322027184069157, -0.0021714221220463514, -0.0019696613308042288, -3.3378546504536644e-06, -1.1920928244535389e-07, -0.02008773572742939, -0.03508612513542175, -0.4005465507507324, -0.0004505096294451505, -0.015613222494721413, -0.026017434895038605, -0.02334444224834442, -0.44026604294776917, -0.004887894261628389, -0.4421309232711792, -0.07714881747961044, -0.052379023283720016, -0.09020456671714783, -0.00023135847004596144, -0.007035600487142801, -0.00013731967192143202, -0.0001212284987559542, -0.0004086851258762181, -0.002128361025825143, -8.4638240878121e-06, -0.00010215714428341016, -0.004377901088446379, -0.006706941872835159, -0.00420780573040247, -0.0002673506969586015, -0.0016763457097113132, -1.1389609575271606, -0.03474491089582443, -0.00434490479528904, -0.0849049836397171, -0.6620770692825317, -0.0001805857609724626, -5.2689116273541003e-05, -7.986990567587782e-06, -9.643566590966657e-05, -3.1709168979432434e-05, -2.729855441430118e-05, -4.3748852476710454e-05, -0.000942858459893614, -0.0003496989083942026, -0.002237913431599736, -0.09925916790962219, -0.0005359405186027288, -0.1953449696302414, -1.3868484497070312, -0.727411150932312, -0.6013712882995605, -0.12607477605342865, -2.280885696411133, -2.4558870792388916, -3.1078412532806396, -1.8212363719940186, -0.8896934986114502, -0.0801534354686737, -0.055792760103940964, -0.008579183369874954, -2.51546311378479, -2.249300956726074, -2.651520252227783, -0.1475292146205902, -0.00260644918307662, -0.9017919898033142, -0.004822290502488613, -1.3104339838027954, -0.0023248568177223206, -0.0002208704245276749, -0.007918987423181534, -9.417489309271332e-06, -0.00010775939153973013, -0.08167252689599991, -0.1908245086669922, -0.2990230917930603, -0.6857168674468994, -0.004177415743470192, -0.0004357342259027064, -0.008737782947719097, -0.43378525972366333, -0.005136982072144747, -0.21767225861549377, -0.0005639393348246813, -0.030706113204360008, -1.428941011428833, -0.19535419344902039, -0.3842849135398865, -0.060999177396297455, -1.222374439239502, -0.9629177451133728, -0.44821226596832275, -0.9086614847183228, -0.0031023728661239147, -1.9998810291290283, -0.17508350312709808, -0.04003383591771126, -0.2160225361585617, -0.18398208916187286, -0.002315223217010498, -0.05903026834130287, -0.026066912338137627, -0.02579103782773018, -0.0035513683687895536, -0.0022839431185275316, -0.003411190351471305, -0.0016796779818832874, -0.0002703301142901182, -6.437280717364047e-06, -1.0251946150674485e-05, -0.012593272142112255, -0.09371097385883331, -0.07642339169979095, -0.04959939420223236, -0.020873399451375008, -0.01102298405021429, -1.3057092428207397, -0.42280757427215576, -0.005134728737175465, -0.20232321321964264, -0.026377428323030472, -1.037187099456787], "finish_reason": "stop"}], "metrics": {"energy": 780.0615803661348, "energy_per_token": 3.6622609406860787, "time": 18.068314, "time_per_token": 0.08482776525821596}}
{"outputs": [{"text": "df_numeric = df[[x_column, y_column]].copy()\n    df_numeric = df_numeric.dropna(axis=0)\n    ax = df_numeric.plot.scatter(x_column, y_column, figsize=(12, 6), marker='o', color='b')\n    plt.show()\n    X = df_numeric[[x_column]].copy()\n    y = df_numeric[y_column].copy()\n    model = LinearRegression().fit(X, y)\n    y_pred = model.predict(X)\n    plt.plot(X, y_pred, color='red', linewidth=3)\n    plt.show()\n    return ax", "tokens": ["df", "_", "numeric", " =", " df", "[[", "x", "_", "column", ",", " y", "_", "column", "]]", ".", "copy", "()", "\n", "    ", "df", "_", "numeric", " =", " df", "_", "numeric", ".", "drop", "na", "(", "axis", "=", "0", ")", "\n", "    ", "ax", " =", " df", "_", "numeric", ".", "plot", ".", "scatter", "(", "x", "_", "column", ",", " y", "_", "column", ",", " fig", "size", "=(", "1", "2", ",", " ", "6", ")", ",", " marker", "='", "o", "'", ",", " color", "='", "b", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "X", " =", " df", "_", "numeric", "[[", "x", "_", "column", "]]", ".", "copy", "()", "\n", "    ", "y", " =", " df", "_", "numeric", "[", "y", "_", "column", "]", ".", "copy", "()", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "X", ",", " y", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "X", ")", "\n", "    ", "plt", ".", "plot", "(", "X", ",", " y", "_", "pred", ",", " color", "='", "red", "'", ",", " linewidth", "=", "3", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-2.674640655517578, -2.4768691062927246, -4.820302963256836, -0.3244589865207672, -0.02276465855538845, -1.065478801727295, -0.00755524355918169, -0.00015269544383045286, -5.1973900554003194e-05, -0.002544382121413946, -0.031846363097429276, -8.344646857949556e-07, -2.145764938177308e-06, -0.0025480680633336306, -0.8229350447654724, -1.0716913938522339, -0.06624545902013779, -0.30548807978630066, -0.1462908536195755, -0.6174783110618591, -0.007664084900170565, -0.011273023672401905, -0.4058453142642975, -0.012835034169256687, -0.012792548164725304, -0.00031132620642893016, -0.6823928952217102, -0.79506516456604, -0.005912907887250185, -1.4389336109161377, -0.32655179500579834, -0.10161121934652328, -0.011487646959722042, -0.212067112326622, -0.10630843788385391, -0.2816231846809387, -2.8117761611938477, -0.006990262307226658, -0.1845601201057434, -0.00695569533854723, -5.113947918289341e-05, -0.03250584006309509, -0.0002653246629051864, -0.19418008625507355, -2.0861407392658293e-05, -0.004114971030503511, -0.06189870461821556, -1.1013381481170654, -9.870042413240299e-05, -0.0001705739414319396, -0.011818037368357182, -0.00045718232286162674, -2.9444261599564925e-05, -0.8060698509216309, -0.7160590291023254, -3.9457496313843876e-05, -0.023391839116811752, -0.3331689238548279, -0.6998433470726013, -0.0026285641361027956, -0.07107549905776978, -1.2489075660705566, -1.7523181438446045, -0.0013505632523447275, -2.8350980281829834, -0.1914469301700592, -0.19080765545368195, -0.5470958352088928, -0.0006117141456343234, -1.2498888969421387, -0.06651776283979416, -1.935488224029541, -0.23451276123523712, -0.012108276598155499, -0.19573162496089935, -2.4977707862854004, -0.003105343785136938, -0.933293879032135, -0.15166880190372467, -0.005450862925499678, -0.44108086824417114, -1.7226485013961792, -0.11149726063013077, -0.16066031157970428, -0.01396926585584879, -0.00011681827891152352, -0.5450951457023621, -0.005311069544404745, -6.246371776796877e-05, -1.4305104514278355e-06, -0.0005600076401606202, -0.9084566831588745, -2.0580203533172607, -0.00043406602344475687, -0.059054989367723465, -0.0015518538421019912, -0.23526951670646667, -0.002037236699834466, -0.0012456761905923486, -0.0037796504329890013, -9.775113539944869e-06, -0.39570462703704834, -0.004526369273662567, -4.768360213347478e-06, -4.172316494077677e-06, -0.00021979777375236154, -0.31736648082733154, -0.006215883418917656, -7.533743337262422e-05, -0.0020079705864191055, -0.0810239240527153, -1.1349267959594727, -0.01650419272482395, -0.0015475689433515072, -4.172316494077677e-06, -1.1920928244535389e-07, -0.01825355924665928, -0.6109026074409485, -2.407998726994265e-05, -0.00014172980445437133, -0.002147155813872814, -0.07791396975517273, -0.009674803353846073, -0.001121726119890809, -0.0184261966496706, -0.007038441486656666, -0.25856947898864746, -0.07368353009223938, -0.5750347375869751, -0.05074063688516617, -0.007613215129822493, -2.9205850296420977e-05, -0.17070719599723816, -0.003988645505160093, -0.0023072545882314444, -0.0026333199348300695, -0.008794504217803478, -0.009329886175692081, -1.1904665231704712, -0.0010594476480036974, -0.058150313794612885, -0.005540491081774235, -0.03080032579600811, -0.024483805522322655, -0.0025601964443922043, -0.0016384999034926295, -9.417489309271332e-06, -0.0016057705506682396, -0.009865572676062584, -0.029332714155316353, -0.015593857504427433, -0.11062292009592056, -3.0517112463712692e-05, -9.786603914108127e-05, -0.0005420169327408075, -1.1031607389450073, -0.004201632924377918, -0.004351670388132334, -0.03473857790231705, -0.7365087866783142, -9.107174992095679e-05, -0.12588107585906982, -0.002292030956596136, -0.0043373084627091885, -0.037035729736089706, -0.10075567662715912, -0.010901182889938354, -0.19626088440418243, -0.02866036631166935, -1.1841607093811035], "finish_reason": "stop"}], "metrics": {"energy": 585.6531534290312, "energy_per_token": 3.445018549582537, "time": 14.471925, "time_per_token": 0.08512897058823529}}
{"outputs": [{"text": "ax = plt.scatter(df[x_column], df[y_column])\n    lr = LinearRegression().fit(df[x_column].to_numpy().reshape(-1,1), df[y_column])\n    plt.plot(df[x_column], lr.predict(df[x_column].to_numpy().reshape(-1,1)), color='red')\n    return ax", "tokens": ["ax", " =", " plt", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "])", "\n", "    ", "lr", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", ")", ",", " df", "[", "y", "_", "column", "])", "\n", "    ", "plt", ".", "plot", "(", "df", "[", "x", "_", "column", "]", ",", " l", "r", ".", "predict", "(", "df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", "1", "))", ",", " color", "='", "red", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -1.3350486755371094, -0.0004114258335903287, -0.573710560798645, -0.0007491880678571761, -0.3837886452674866, -0.032613154500722885, -0.003662309143692255, -0.00012420836719684303, -5.2927523938706145e-05, -0.00011503035057103261, -0.036067668348550797, -0.03332978114485741, -0.00031418632715940475, -0.00013207517622504383, -7.629365427419543e-06, -9.536738616588991e-07, -0.20950865745544434, -0.01468727272003889, -0.18827295303344727, -3.2609167098999023, -0.08232180774211884, -0.003939250484108925, -5.221230458118953e-05, -5.722029527532868e-06, -0.01433479692786932, -1.704189419746399, -0.00027843413408845663, -0.003107482800260186, -0.1694946140050888, -0.9920179843902588, -0.0071275727823376656, -0.00018487652414478362, -7.748303323751315e-05, -0.005207189824432135, -0.10959558933973312, -0.3206891715526581, -4.815939246327616e-05, -0.13491621613502502, -0.0031653561163693666, -0.005831371992826462, -3.909988299710676e-05, -2.729855441430118e-05, -0.007826851680874825, -6.09140915912576e-05, -0.00020895205670967698, -2.183284282684326, -0.0004107108688913286, -0.006356971804052591, -0.16814838349819183, -0.0020574608352035284, -0.0005900310934521258, -1.3828182090946939e-05, -1.5258672647178173e-05, -0.2777293920516968, -0.030215367674827576, -0.02133164182305336, -0.7864616513252258, -0.0008526980527676642, -0.00924567598849535, -0.0382935106754303, -0.04340269789099693, -0.004598755855113268, -0.0008224442135542631, -1.3828182090946939e-05, -3.218599158572033e-05, -0.0003846143954433501, -0.05368443578481674, -0.07972082495689392, -3.373566141817719e-05, -0.00017772526189219207, -0.23172129690647125, -0.0005339150666259229, -0.005436516832560301, -0.012636237777769566, -0.0019370617810636759, -5.364403477869928e-06, -1.6093124941107817e-05, -0.00027021096320822835, -2.276871418871451e-05, -0.0005986090400256217, -1.4305104514278355e-06, -3.0636318115284666e-05, -0.00013612773909699172, -0.0004010588163509965, -2.3007127310847864e-05, -8.344646857949556e-07, -0.00019929806876461953, -9.65590606938349e-06, -0.00012516192509792745, -0.07346434891223907, -0.2367025762796402, -0.007896988652646542, -1.480370283126831, -0.4640127420425415, -0.15804274380207062, -0.03955268859863281, -0.009895436465740204, -0.12104763835668564, -0.17034120857715607, -0.01499758381396532, -0.18029795587062836, -0.035796377807855606, -0.6948739886283875], "finish_reason": "stop"}], "metrics": {"energy": 381.65774454689017, "energy_per_token": 3.634835662351335, "time": 8.630082, "time_per_token": 0.08219125714285715}}
{"outputs": [{"text": "fig, ax = plt.subplots()\n    ax.scatter(df[x_column], df[y_column], c='blue', alpha=0.4)\n    #ax.scatter(df.index, df[y_column], c='blue', alpha=0.4)\n\n    x = df[[x_column]]\n    y = df[[y_column]]\n\n    lm = LinearRegression()\n    lm.fit(x, y)\n\n    pred = lm.predict(x)\n\n    ax.plot(x, pred, color = 'red')\n\n    return ax", "tokens": ["fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "]", ",", " c", "='", "blue", "'", ",", " alpha", "=", "0", ".", "4", ")", "\n", "    ", "#", "ax", ".", "scatter", "(", "df", ".", "index", ",", " df", "[", "y", "_", "column", "]", ",", " c", "='", "blue", "'", ",", " alpha", "=", "0", ".", "4", ")", "\n", "\n", "    ", "x", " =", " df", "[[", "x", "_", "column", "]]", "\n", "    ", "y", " =", " df", "[[", "y", "_", "column", "]]", "\n", "\n", "    ", "lm", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "lm", ".", "fit", "(", "x", ",", " y", ")", "\n", "\n", "    ", "pred", " =", " l", "m", ".", "predict", "(", "x", ")", "\n", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " pred", ",", " color", " =", " '", "red", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-2.963743209838867, -0.11028005927801132, -0.01846165768802166, -0.004861321300268173, -0.0018950614612549543, -8.702239938429557e-06, -0.00017736769223120064, -7.199982064776123e-05, -0.16622626781463623, -0.027201440185308456, -0.23870998620986938, -0.6706523299217224, -0.024804698303341866, -0.061912935227155685, -0.0018635302549228072, -0.12381649762392044, -0.020886825397610664, -0.0032416435424238443, -9.536288416711614e-05, -6.05564855504781e-05, -8.642300235806033e-05, -0.030393701046705246, -0.0072442712262272835, -0.00016640232934150845, -9.440929716220126e-05, -6.198863957251888e-06, -3.6954811548639555e-06, -1.4368910789489746, -0.0043741026893258095, -2.7124979496002197, -0.44165512919425964, -0.5664970874786377, -0.6554872989654541, -0.0011481605470180511, -1.3492906093597412, -0.006114704068750143, -0.031101632863283157, -0.0008305437513627112, -2.748180627822876, -0.371214359998703, -0.0248943530023098, -0.211366206407547, -2.9731037616729736, -3.7310585975646973, -0.10914977639913559, -2.215683937072754, -0.05766542628407478, -0.6639922261238098, -2.639145851135254, -1.5172464847564697, -0.0762476697564125, -0.03530191257596016, -0.15435999631881714, -0.22906991839408875, -0.004706495441496372, -0.008709303103387356, -0.07198143005371094, -0.0029404994565993547, -0.03268307447433472, -0.015932749956846237, -0.06979282945394516, -0.027939921244978905, -0.0007427555974572897, -0.005609604064375162, -0.002882970031350851, -0.0032417625188827515, -4.911301948595792e-05, -0.01789449155330658, -0.015777282416820526, -0.09640892595052719, -1.4774069786071777, -0.0034587106201797724, -2.1130385398864746, -0.2779674828052521, -0.0713944360613823, -1.5876648426055908, -0.01084328442811966, -7.70062324590981e-05, -2.622600959512056e-06, -0.0035223839804530144, -0.4283033311367035, -0.010490748099982738, -0.23938420414924622, -0.0022465961519628763, -0.0008226824575103819, -0.9619002342224121, -0.002749474486336112, -4.0531076592742465e-06, -1.311301275563892e-06, -0.00018273114983458072, -0.017148084938526154, -0.8005961775779724, -0.002736159600317478, -3.3024020195007324, -0.03192950040102005, -0.0032690914813429117, -1.5020257706055418e-05, -1.1920928244535389e-07, -0.024408772587776184, -0.0735650286078453, -0.07638119906187057, -0.028973089531064034, -0.006216949317604303, -2.1934269170742482e-05, -0.0004634975048247725, -0.003464294131845236, -0.020574716851115227, -0.1335626244544983, -0.002188313053920865, -0.007335750851780176, -0.410009503364563, -0.0008440031087957323, -1.4377186298370361, -0.8103181719779968, -0.008851458318531513, -9.894321920000948e-06, -6.651657167822123e-05, -0.0021143241319805384, -0.00613247649744153, -0.024134185165166855, -0.001863292302004993, -0.01653362438082695, -0.6454734802246094, -0.0008856903295964003, -0.10807181894779205, -0.001572444918565452, -0.014641692861914635, -0.0032928551081568003, -0.17676015198230743, -0.08201786875724792, -0.05259823799133301, -0.015035749413073063, -1.2419826984405518, -2.9945030212402344, -0.08836811780929565, -0.031725917011499405, -0.19336552917957306, -0.010948820039629936, -0.48657190799713135, -0.004152129869908094, -0.24534541368484497, -0.021141763776540756, -0.1848427653312683, -0.02735085040330887, -1.8845241069793701], "finish_reason": "stop"}], "metrics": {"energy": 552.6942010135649, "energy_per_token": 3.8116841449211374, "time": 12.17691, "time_per_token": 0.08397868965517241}}
{"outputs": [{"text": "ax = df[[x_column, y_column]].plot.scatter(x=x_column, y=y_column, marker='o', s=20, figsize=(5, 5))\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n    model = LinearRegression().fit(x, y)\n    y_pred = model.predict(x)\n    ax.plot(x, y_pred, color='r')\n    return ax", "tokens": ["ax", " =", " df", "[[", "x", "_", "column", ",", " y", "_", "column", "]]", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " marker", "='", "o", "'", ",", " s", "=", "2", "0", ",", " fig", "size", "=(", "5", ",", " ", "5", "))", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "y", "_", "pred", " =", " model", ".", "predict", "(", "x", ")", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " y", "_", "pred", ",", " color", "='", "r", "')", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -2.3270046710968018, -0.10807117074728012, -9.619726915843785e-05, -4.279521817807108e-05, -0.07278589904308319, -0.034438710659742355, -2.3841830625315197e-06, -7.271740287251305e-06, -0.001988697098568082, -0.005855193827301264, -0.011992497369647026, -0.48537254333496094, -0.0002307625545654446, -0.006428396794945002, -0.021558118984103203, -0.3465951383113861, -0.003661715192720294, -2.6940935640595853e-05, -1.3589766240329482e-05, -0.0003053675754927099, -0.010382331907749176, -0.0006008726777508855, -0.0005689432728104293, -8.940656698541716e-06, -1.0728830375228426e-06, -1.1158654689788818, -2.863518238067627, -0.2082672268152237, -0.5061167478561401, -0.6662089824676514, -0.0004674295778386295, -2.045863151550293, -0.008892222307622433, -1.3371946811676025, -0.31058546900749207, -1.102627158164978, -1.4412223100662231, -0.0010786197381094098, -0.04102575406432152, -1.6164339780807495, -0.015322590246796608, -0.12406525015830994, -0.4761240780353546, -0.33711573481559753, -0.033579953014850616, -0.18131089210510254, -1.1314417123794556, -0.21677757799625397, -0.08127475529909134, -0.4521217942237854, -0.002168091479688883, -4.0411134250462055e-05, -9.775113539944869e-06, -0.0012746074935421348, -0.04898015409708023, -0.5038642287254333, -0.038544051349163055, -0.0004577780782710761, 0.0, -0.07195669412612915, -6.437094270950183e-05, -0.00019691436318680644, -0.018945803865790367, -9.703165414975956e-05, -0.00011336160969221964, -0.05929173156619072, -0.0005420169327408075, -0.05311158299446106, -0.000520570669323206, -0.0003626880934461951, -0.003030471969395876, -0.0001591317413840443, -3.576272320060525e-06, -9.775113539944869e-06, -9.536697689327411e-06, -0.02946791611611843, -0.0002775999018922448, -0.19019725918769836, -0.0029006809927523136, 0.0, -0.00022897482267580926, -1.6927575416048057e-05, -0.00010680581908673048, -0.0011995985405519605, -9.894321920000948e-06, -4.684815212385729e-05, -0.0013342535821720958, -0.07051196694374084, -0.6742416620254517, -0.0029597545508295298, -0.0009066523634828627, -2.861018856492592e-06, -2.3841855067985307e-07, -0.0039220331236720085, -0.5499325394630432, -1.3470558769768104e-05, -0.00019226610311307013, -0.0031116423197090626, -0.004088377580046654, -0.005461770575493574, -0.00035720644518733025, -0.009996233507990837, -0.010566242970526218, -0.3514818251132965, -0.011886599473655224, -0.12727060914039612, -0.029965044930577278, -0.00415521627292037, -0.0001267114421352744, -0.07906963676214218, -0.000439428084064275, -0.0018576999427750707, -0.000532008707523346, -0.008552707731723785, -0.00911468081176281, -0.1477651447057724, -0.00229119835421443, -0.004228223580867052, -0.0026955006178468466, -0.0064398860558867455, -0.008941018022596836, -0.0010932666482403874, -0.0002649671514518559, -4.172316494077677e-06, -0.006655075587332249, -0.20827004313468933, -0.030522054061293602, -2.3288440704345703, -0.25506144762039185, -0.018606411293148994, -0.05482633411884308, -0.07951628416776657, -0.001759410952217877, -0.16448047757148743, -0.02583738975226879, -1.8091832399368286], "finish_reason": "stop"}], "metrics": {"energy": 500.22367337512947, "energy_per_token": 3.5987314631304277, "time": 11.772377, "time_per_token": 0.08469335971223022}}
{"outputs": [{"text": "ax = df.plot(x=x_column, y=y_column, style='o', figsize=(10, 5))\n    x = df[x_column].to_numpy().reshape(-1, 1)\n    y = df[y_column].to_numpy()\n    reg = LinearRegression().fit(x, y)\n    xx = np.arange(min(x), max(x)).reshape(-1, 1)\n    yy = reg.coef_ * xx + reg.intercept_\n    _, = plt.plot(xx, yy, 'r')\n    return ax", "tokens": ["ax", " =", " df", ".", "plot", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " style", "='", "o", "'", ",", " fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "()", "\n", "    ", "reg", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "xx", " =", " np", ".", "ar", "ange", "(", "min", "(", "x", ")", ",", " max", "(", "x", "))", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "yy", " =", " reg", ".", "co", "ef", "_", " *", " xx", " +", " reg", ".", "inter", "cept", "_", "\n", "    ", "_", ",", " =", " plt", ".", "plot", "(", "xx", ",", " y", "y", ",", " '", "r", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.6981943845748901, -0.00936649739742279, -0.45434385538101196, -0.13419461250305176, -0.0008873577462509274, -2.0121235847473145, -0.2390872836112976, -0.0873461663722992, -0.004964050371199846, -0.00011205045302631333, -2.396077979938127e-05, -0.0003488647344056517, -0.036188166588544846, -0.0014250847743824124, -0.0010551605373620987, -1.537788011773955e-05, -1.5497195136049413e-06, -0.021369334310293198, -0.8907303810119629, -0.02952069602906704, -0.4007917046546936, -1.2810641527175903, -0.0007708676857873797, -0.7192773818969727, -0.00011205045302631333, -0.0106892641633749, -0.17201568186283112, -1.3749816417694092, -0.0006093314150348306, -0.1556655317544937, -0.6625842452049255, -0.08771893382072449, -0.03826126828789711, -0.13264776766300201, -0.8179602026939392, -0.14180101454257965, -0.021254388615489006, -0.1842486411333084, -0.0013508014380931854, -3.731181277544238e-05, -1.4781842764932662e-05, -0.0005810956354252994, -0.06034431606531143, -1.7204521894454956, -1.2755313036905136e-05, -0.011543269269168377, -0.006050247699022293, -0.24481062591075897, -0.0019838192965835333, 0.0, -0.25286680459976196, -2.7417760065873154e-05, -0.00014244495832826942, -0.015406291000545025, -4.458328112377785e-05, -9.595887240720913e-05, -0.055234652012586594, -0.0008139872807078063, -0.041013170033693314, -0.0004027270770166069, -0.00025328766787424684, -0.0014610340585932136, -0.0001110968878492713, -2.50339189733495e-06, -7.986990567587782e-06, -1.0013530300057027e-05, -0.17041891813278198, -0.005122987087816, -6.437280717364047e-06, -0.00018869050836656243, -0.00021586472576018423, -1.1031363010406494, -0.13782668113708496, -1.633765697479248, -0.23941442370414734, -0.00043132537393830717, -7.033323527139146e-06, -7.152555099310121e-07, -0.0026632812805473804, -0.06397011876106262, -1.3589766240329482e-05, -1.5139465176616795e-05, -0.0018605556106194854, -0.0012985378270968795, -0.0013463966315612197, -0.0001113352773245424, -0.007917686365544796, -0.00988847203552723, -1.7049336433410645, -0.0051359147764742374, -0.15491098165512085, -1.9073468138230965e-06, -2.5076727867126465, -9.417489309271332e-06, -0.003617530455812812, -1.1350159645080566, -0.0010949337156489491, -0.03070368617773056, -0.16574642062187195, -0.10539532452821732, -0.004753716755658388, -4.827859811484814e-05, -0.002054605633020401, -1.1728203296661377, -0.10302893817424774, -0.00023684080224484205, -2.3841855067985307e-07, -0.0007709868368692696, -1.5497195136049413e-06, -2.1934269170742482e-05, -0.004813036881387234, -3.135155202471651e-05, -0.0002097863471135497, -0.022618524730205536, -0.0009110590908676386, -0.17639076709747314, -0.0013174673076719046, -0.00903565064072609, -1.8715683836489916e-05, -0.9330084323883057, -1.0728830375228426e-06, -0.24491393566131592, -0.0016815820708870888, -0.0001289761275984347, -0.003652332117781043, -5.006664650863968e-05, -1.3947389561508317e-05, -2.6225699912174605e-05, -6.079655122448457e-06, -0.00013731967192143202, -0.003086923388764262, -0.007275159936398268, -1.7936573028564453, -0.4499349892139435, -1.9633020162582397, -1.0663793087005615, -1.1801649634435307e-05, -1.3589766240329482e-05, -0.00029988560709170997, -0.0007296522380784154, -0.0013762774178758264, -0.00039152585668489337, -0.00025006983196362853, -0.03269461169838905, -0.14266061782836914, -0.004525657277554274, -0.07761827856302261, -0.025210462510585785, -0.06302040815353394, -0.07122038304805756, -0.005275969859212637, -0.20992814004421234, -0.031846363097429276, -0.8013889193534851], "finish_reason": "stop"}], "metrics": {"energy": 569.7326261882779, "energy_per_token": 3.6995625077160903, "time": 13.038798, "time_per_token": 0.08466751948051948}}
{"outputs": [{"text": "# Create a new Axes object using Matplotlib\n    ax = plt.axes()\n\n    # Plot the scatterplot using the specified x and y columns\n    ax.scatter(df[x_column], df[y_column])\n\n    # Add axis labels for the x and y columns\n    ax.set_xlabel(x_column)\n    ax.set_ylabel(y_column)\n\n    # Create a LinearRegression model from scikit-learn\n    lr = LinearRegression()\n\n    # Fit the model to the data by converting the x and y columns to numpy arrays\n    lr.fit(df[[x_column]].to_numpy(), df[y_column].to_numpy())\n\n    # Get the predicted y-values based on the x-values from the specified x column\n    y_pred = lr.predict(df[[x_column]].to_numpy())\n\n    # Plot the line on the same Axes as the scatterplot\n    ax.plot(df[x_column], y_pred, color='red')\n\n    # Return the Axes object\n    return ax\n", "tokens": ["#", " Create", " a", " new", " Ax", "es", " object", " using", " Mat", "plotlib", "\n", "    ", "ax", " =", " plt", ".", "axes", "()", "\n", "\n", "    ", "#", " Plot", " the", " scatter", "plot", " using", " the", " specified", " x", " and", " y", " columns", "\n", "    ", "ax", ".", "scatter", "(", "df", "[", "x", "_", "column", "]", ",", " df", "[", "y", "_", "column", "])", "\n", "\n", "    ", "#", " Add", " axis", " labels", " for", " the", " x", " and", " y", " columns", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "y", "_", "column", ")", "\n", "\n", "    ", "#", " Create", " a", " Linear", "Reg", "ression", " model", " from", " sc", "ik", "it", "-", "learn", "\n", "    ", "lr", " =", " Linear", "Reg", "ression", "()", "\n", "\n", "    ", "#", " Fit", " the", " model", " to", " the", " data", " by", " converting", " the", " x", " and", " y", " columns", " to", " numpy", " arrays", "\n", "    ", "lr", ".", "fit", "(", "df", "[[", "x", "_", "column", "]]", ".", "to", "_", "numpy", "()", ",", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "())", "\n", "\n", "    ", "#", " Get", " the", " predicted", " y", "-", "values", " based", " on", " the", " x", "-", "values", " from", " the", " specified", " x", " column", "\n", "    ", "y", "_", "pred", " =", " l", "r", ".", "predict", "(", "df", "[[", "x", "_", "column", "]]", ".", "to", "_", "numpy", "())", "\n", "\n", "    ", "#", " Plot", " the", " line", " on", " the", " same", " Ax", "es", " as", " the", " scatter", "plot", "\n", "    ", "ax", ".", "plot", "(", "df", "[", "x", "_", "column", "]", ",", " y", "_", "pred", ",", " color", "='", "red", "')", "\n", "\n", "    ", "#", " Return", " the", " Ax", "es", " object", "\n", "    ", "return", " ax", "\n"], "logprobs": [-1.102859377861023, -2.1246325969696045, -0.4014640152454376, -1.9192949533462524, -1.9616458415985107, -0.00025567124248482287, -0.2365645468235016, -3.8089425563812256, -3.3456153869628906, -0.0026138208340853453, -1.0037026405334473, -0.0015756584471091628, -0.29049837589263916, -0.003045090241357684, -0.004026520997285843, -7.629103492945433e-05, -0.22489143908023834, -0.011982484720647335, -0.0018067717319354415, -0.3258826732635498, -0.0007611000328324735, -0.017725158482789993, -1.041624665260315, -0.3686051368713379, -1.0301297903060913, -0.48174017667770386, -1.2578818798065186, -0.19705066084861755, -0.5332359075546265, -1.7447261810302734, -0.3922598659992218, -0.00038509105797857046, -0.10672380775213242, -1.3716886043548584, -0.0003299168893136084, -0.16390083730220795, -0.0023135582450777292, -0.3683023750782013, -0.0006102845072746277, -0.15190990269184113, -0.01989411562681198, -0.002096480457112193, -8.11782301752828e-05, -1.8715683836489916e-05, -5.4834770708112046e-05, -0.017583204433321953, -0.01009288989007473, -0.00012432756193447858, -7.545663538621739e-05, -4.768360213347478e-06, -3.2186455882765586e-06, -0.18115565180778503, -0.000933926145080477, -0.0397646501660347, -0.00031394799589179456, -0.0014194899704307318, -2.10654354095459, -1.9467673301696777, -0.003590567270293832, -3.434995174407959, -0.30411672592163086, -0.09844903647899628, -0.09346791356801987, -0.0004220310365781188, -0.5750624537467957, -0.06647983938455582, -0.00014149141497910023, -0.02269369177520275, -3.2782016205601394e-05, -0.0015470929211005569, -0.05317070335149765, -0.0015866083558648825, -0.004874845035374165, -0.022241203114390373, -7.045020902296528e-05, -3.3378546504536644e-06, -0.01168372668325901, -0.0015964870108291507, -0.0002865380665753037, -0.0003480305604171008, -2.0265558760002023e-06, -2.169585604860913e-05, -5.245195097813848e-06, -0.0004941195948049426, -5.07818695041351e-05, -0.00010489867418073118, -2.861018856492592e-06, -5.960446742392378e-06, -0.00013255194062367082, -6.007967749610543e-05, -0.00949793215841055, -0.00044824567157775164, -0.005154652986675501, -1.943758487701416, -0.13813987374305725, -0.34497737884521484, -0.0375644750893116, -0.0001984637783607468, -0.4342106878757477, -2.6134655475616455, -1.3571144342422485, -7.319182623177767e-05, -0.008169213309884071, -0.023127572610974312, -0.0002656822034623474, -0.8130875825881958, -0.00019560330838430673, -1.442530632019043, -0.07787669450044632, -0.0008117241668514907, -6.6756979322235566e-06, -2.4199192921514623e-05, -0.005908997263759375, -0.007013937924057245, -0.0845370888710022, -0.0004151197790633887, -0.002717257011681795, -0.11849305778741837, -0.012535471469163895, -0.28579339385032654, -0.4453730583190918, -0.014848665334284306, -0.5041932463645935, -3.1437222957611084, -3.240647077560425, -0.20933549106121063, -1.6211649179458618, -0.08269557356834412, -0.0003580405900720507, -0.17945696413516998, -0.1937602162361145, -1.543631672859192, -0.04985641688108444, -0.3835560381412506, -0.0003644755925051868, -0.20062093436717987, -0.007257053162902594, -3.755022044060752e-05, -0.005035337992012501, -0.16970621049404144, -1.9311010837554932, -0.0027488800697028637, -4.660974445869215e-05, -5.447716102935374e-05, -0.0002004899288294837, -0.11171135306358337, -0.29519662261009216, -3.099436753473128e-06, -6.9141146923357155e-06, -0.00047159992391243577, -0.003078485606238246, -0.01053227111697197, -1.1506884098052979, -0.0005924138822592795, -7.033323527139146e-06, -4.0531076592742465e-06, -0.007623744197189808, -4.95898348162882e-05, -0.0011951930355280638, -2.7418097943154862e-06, -9.536697689327411e-06, -0.004220270086079836, -0.0014148473273962736, -0.007124139927327633, -0.00030191155383363366, -0.0035752442199736834, -2.0942583084106445, -0.024108584970235825, -1.4637688398361206, -1.1717050075531006, -1.8031158447265625, -0.02701963670551777, -2.555213451385498, -0.006003798451274633, -0.0425584614276886, -0.49677449464797974, -0.04599467292428017, -0.03487777337431908, -1.0643430948257446, -0.02292288839817047, -3.246962070465088, -0.3292076885700226, -0.5414937734603882, -0.11965673416852951, -0.00022182388056535274, -0.23101577162742615, -0.04060220718383789, -0.08644793182611465, -0.26811346411705017, -0.0036822627298533916, -5.602820692729438e-06, -1.7881233361549675e-05, -0.0006993946735747159, -0.0012393658980727196, -0.005309409461915493, -0.10461097955703735, -0.00015448330668732524, -8.4638240878121e-06, -4.887569048150908e-06, -5.709961988031864e-05, -0.12320162355899811, -0.0009635811438784003, -4.529942543740617e-06, -4.303362584323622e-05, -0.00029023250681348145, -0.0009180859779007733, -0.002917202888056636, -0.00026258357684127986, -0.0005345107638277113, -0.8748610019683838, -0.015741022303700447, -3.3742971420288086, -1.8644777536392212, -0.27472054958343506, -0.2273026406764984, -0.14103499054908752, -0.00012516192509792745, -1.169964075088501, -0.002365055261179805, -0.006535702850669622, -0.05475444719195366, -0.8191857933998108, -0.0003398079425096512, -0.10726451128721237, -0.00022015532886143774, -0.0005868143052794039, -0.0018089136574417353, -0.004980301018804312, -0.06837904453277588, -0.0005330810672603548, -2.288792165927589e-05, -2.932505594799295e-05, -5.972207145532593e-05, -0.07908394932746887, -0.0018635302549228072, -8.95221673999913e-05, -2.50339189733495e-06, -0.011220450513064861, -0.39551085233688354, -0.1267058402299881, -0.1728706657886505, -0.040097739547491074, -0.004432377405464649, -0.036038000136613846, -0.0009096298599615693, -0.27012553811073303, -0.05911184847354889, -0.0015097183641046286, -0.04832157492637634, -0.00011538793478393927, -0.011245558969676495, -1.283516764640808, -0.000482442817883566, -0.0041237566620111465, -0.0017254954436793923, -0.19054540991783142], "finish_reason": "length"}], "metrics": {"energy": 916.1222903537756, "energy_per_token": 3.578602696694436, "time": 22.483442, "time_per_token": 0.0878259453125}}
{"outputs": [{"text": "# create a scatter plot for the specified columns in the pandas DataFrame\n    ax = df.plot.scatter(x=x_column, y=y_column)\n    # set x and y-axis labels\n    ax.set_xlabel(x_column)\n    ax.set_ylabel(y_column)\n\n    # create a LinearRegression model\n    model = LinearRegression()\n    # fit the model to the data using the specified columns in the DataFrame\n    model.fit(df[[x_column]], df[[y_column]])\n    # get the intercept and slope of the fitted line\n    y_intercept = model.intercept_[0]\n    slope = model.coef_[0][0]\n    # create an evenly spaced array of x values from min to max\n    x_vals = np.arange(df[x_column].min(), df[x_column].max() + 1)\n    # calculate the corresponding y values using the equation y = mx + b\n    y_vals = y_intercept + slope * x_vals\n    # plot the regression line on top", "tokens": ["#", " create", " a", " scatter", " plot", " for", " the", " specified", " columns", " in", " the", " pandas", " Data", "Frame", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ")", "\n", "    ", "#", " set", " x", " and", " y", "-", "axis", " labels", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "y", "_", "column", ")", "\n", "\n", "    ", "#", " create", " a", " Linear", "Reg", "ression", " model", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "#", " fit", " the", " model", " to", " the", " data", " using", " the", " specified", " columns", " in", " the", " Data", "Frame", "\n", "    ", "model", ".", "fit", "(", "df", "[[", "x", "_", "column", "]]", ",", " df", "[[", "y", "_", "column", "]]", ")", "\n", "    ", "#", " get", " the", " intercept", " and", " slope", " of", " the", " fitted", " line", "\n", "    ", "y", "_", "inter", "cept", " =", " model", ".", "inter", "cept", "_[", "0", "]", "\n", "    ", "sl", "ope", " =", " model", ".", "co", "ef", "_[", "0", "][", "0", "]", "\n", "    ", "#", " create", " an", " evenly", " spaced", " array", " of", " x", " values", " from", " min", " to", " max", "\n", "    ", "x", "_", "vals", " =", " np", ".", "ar", "ange", "(", "df", "[", "x", "_", "column", "]", ".", "min", "()", ",", " df", "[", "x", "_", "column", "]", ".", "max", "()", " +", " ", "1", ")", "\n", "    ", "#", " calculate", " the", " corresponding", " y", " values", " using", " the", " equation", " y", " =", " m", "x", " +", " b", "\n", "    ", "y", "_", "vals", " =", " y", "_", "inter", "cept", " +", " slope", " *", " x", "_", "vals", "\n", "    ", "#", " plot", " the", " regression", " line", " on", " top"], "logprobs": [-1.102859377861023, -3.0989139080047607, -0.7493650913238525, -0.8708637356758118, -0.45912766456604004, -1.4356870651245117, -0.15697121620178223, -0.17644762992858887, -0.09426169097423553, -3.2077033519744873, -0.07274910062551498, -2.658353805541992, -0.030465511605143547, -0.0038376033771783113, -0.07670463621616364, -0.0043578422628343105, -0.459398090839386, -0.0028867737855762243, -0.24589315056800842, -0.14394259452819824, -0.00037281715776771307, -0.15692393481731415, -3.516612196108326e-05, -0.0018274764297530055, -0.028010401874780655, -0.13463138043880463, -0.005172916688024998, -4.994744449504651e-05, -1.847726889536716e-05, -0.0003023882454726845, -0.022476214915513992, -0.00023016665363684297, -0.0005508335889317095, -6.079655122448457e-06, -2.3841855067985307e-07, -0.29969391226768494, -0.007671774365007877, -1.1852045059204102, -0.2709394097328186, -3.9139978885650635, -1.535006046295166, -0.3955829441547394, -0.0015674459282308817, -3.030625343322754, -0.0802556499838829, -0.18267330527305603, -0.33331894874572754, -0.0009787060553207994, -0.11855553090572357, -0.0017089537577703595, -0.0008036244544200599, -0.10440555959939957, -0.0076469313353300095, -0.014118903316557407, -0.023004207760095596, -0.0022593229077756405, -0.006459073629230261, -0.054657384753227234, -0.0048025972209870815, -0.0001081169830285944, -0.0024857595562934875, -3.7788631743751466e-05, -0.00010799778101500124, -0.0003829461056739092, -0.0013141338713467121, -0.00013219437096267939, -0.00014351768186315894, -2.622600959512056e-06, -3.2186455882765586e-06, -0.0006233894382603467, -0.00015293381875380874, -0.5892190337181091, -0.0009763241396285594, -0.03843197971582413, -2.0034265518188477, -0.6119731068611145, -0.9092824459075928, -0.035733118653297424, -0.00017212340026162565, -0.38092702627182007, -1.7551774978637695, -0.000271521887043491, -0.5140114426612854, -0.0025222653057426214, -0.000633992429357022, -2.0265558760002023e-06, -5.23315102327615e-05, -0.009145630523562431, -0.014200353994965553, -0.7190144658088684, -0.051475077867507935, -0.3949560523033142, -0.058943282812833786, -0.05507051199674606, -0.31332284212112427, -0.017647625878453255, -0.193857342004776, -1.899840235710144, -0.10067009180784225, -0.11495042592287064, -0.052447348833084106, -2.1275060176849365, -0.020107947289943695, -1.1694965362548828, -0.004423713777214289, -0.06368750333786011, -0.0009107018122449517, -0.2086397260427475, -0.007903730496764183, -3.0397906812140718e-05, -0.02361971139907837, -0.13939759135246277, -0.3883375823497772, -0.002613226417452097, -6.222531374078244e-05, -2.6464111215318553e-05, -0.0005834784242324531, -0.060541704297065735, -0.002538080094382167, -0.2723435163497925, -0.00013529339048545808, -1.9073468138230965e-06, -9.775113539944869e-06, -6.6756979322235566e-06, -0.0006678258068859577, -0.0059213219210505486, -0.39579111337661743, -0.016113530844449997, -1.4589260816574097, -0.07643962651491165, -1.5059775114059448, -0.15068259835243225, -0.13706530630588531, -0.10823262482881546, -0.0006169561529532075, -0.9568107724189758, -0.8307717442512512, -0.1262790411710739, -0.00032455421751365066, -2.8994882106781006, -0.05735344812273979, -0.13812264800071716, -0.0016920547932386398, -0.0653248205780983, -0.01946362294256687, -0.00013004888023715466, -0.0018057008273899555, -5.8412379075889476e-06, -0.8713709115982056, -4.6132929128361866e-05, -0.0431385301053524, -0.010782433673739433, -0.000301673193462193, -0.01320462767034769, -8.225102646974847e-05, -0.0007607426377944648, -0.00048411093303002417, -2.3841830625315197e-06, -4.029192859889008e-05, -4.589452510117553e-05, -0.03820137679576874, -1.6927575416048057e-05, -0.006134727504104376, -2.9801878554280847e-05, -6.12716976320371e-05, -0.0007755132392048836, -0.9051377177238464, -0.05815514922142029, -1.0739883184432983, -0.8946371078491211, -3.0736780166625977, -0.03799711540341377, -0.4137968122959137, -0.03788900002837181, -0.1278199404478073, -0.6393481492996216, -1.334799885749817, -2.35282301902771, -0.06284645944833755, -0.0007858763565309346, -2.9905478954315186, -0.0002867764269467443, -0.0988551527261734, -0.4117502272129059, -1.321092963218689, -0.004231072496622801, -0.01190438773483038, -7.390948667307384e-06, -2.0007495880126953, -4.768370445162873e-07, -0.0005278385942801833, -0.17485062777996063, -0.00978719163686037, -0.0009488132782280445, -5.8530047681415454e-05, -5.328513361746445e-05, -1.2040065485052764e-05, -5.960446742392378e-06, -0.0002960720448754728, -0.000309657771140337, -0.020081892609596252, -0.008908173069357872, -7.438383181579411e-05, -0.0002932118659373373, -7.748573807475623e-06, -5.960462772236497e-07, -6.198863957251888e-06, -7.271740287251305e-06, -6.496695277746767e-05, -0.1254340559244156, -0.4905967116355896, -0.003097381442785263, -0.0223209448158741, -0.02405633218586445, -0.008546561934053898, -0.011586987413465977, -0.007257407996803522, -0.5164592862129211, -0.0442282035946846, -0.15193907916545868, -0.014943797141313553, -0.142952561378479, -1.6969887018203735, -0.009389644488692284, -0.6885446906089783, -0.27773553133010864, -0.08807802200317383, -0.1953897774219513, -0.23404063284397125, -0.013458944857120514, -0.03207970783114433, -0.1665598601102829, -0.0001380348257953301, -0.01218883041292429, -0.000688077649101615, -0.010169241577386856, -0.000568228424526751, -1.056793451309204, -7.271740287251305e-06, -2.145764938177308e-06, -5.1020273531321436e-05, -0.0008269704412668943, -0.2931080460548401, -0.025176286697387695, -0.00251108780503273, -0.00011264643399044871, -5.602820692729438e-06, -0.0005236684810370207, -0.12223250418901443, -0.01109160017222166, -0.12720845639705658, -0.020353274419903755, -0.8287878036499023, -0.0006787856691516936, -0.32685789465904236, -0.8106403946876526], "finish_reason": "length"}], "metrics": {"energy": 985.0843508567815, "energy_per_token": 3.8479857455343027, "time": 23.511398, "time_per_token": 0.0918413984375}}
{"outputs": [{"text": "x = df[x_column].to_numpy().reshape(-1, 1)\n    y = df[y_column].to_numpy().reshape(-1, 1)\n\n    fig, ax = plt.subplots()\n\n    ax.scatter(x, y)\n\n    ax.set_xlabel(x_column)\n    ax.set_ylabel(y_column)\n\n    model = LinearRegression()\n    model.fit(x, y)\n\n    ax.plot(x, model.predict(x), color='red')\n\n    return ax", "tokens": ["x", " =", " df", "[", "x", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "to", "_", "numpy", "()", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "\n", "    ", "ax", ".", "scatter", "(", "x", ",", " y", ")", "\n", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "x", "_", "column", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "y", "_", "column", ")", "\n", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", "\n", "    ", "model", ".", "fit", "(", "x", ",", " y", ")", "\n", "\n", "    ", "ax", ".", "plot", "(", "x", ",", " model", ".", "predict", "(", "x", ")", ",", " color", "='", "red", "')", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.8795527219772339, -0.3055197596549988, -0.04728615656495094, -0.13750216364860535, -0.0034242586698383093, -3.5523738915799186e-05, -3.266281055402942e-05, -0.0003955773718189448, -0.4840770959854126, -1.5546727180480957, -1.0967194612021558e-05, -0.021748267114162445, -0.027584781870245934, -0.2986881136894226, -0.013621593825519085, 0.0, -0.05837602540850639, -5.495397272170521e-05, -0.0003256267518736422, -0.0588250458240509, -2.8729025871143676e-05, -8.940297266235575e-05, -0.1158493384718895, -0.002222807612270117, -0.0106326499953866, -0.0003137096355203539, -0.0004829194222111255, -0.00038699767901562154, -0.00013016807497479022, -4.291525328881107e-06, -3.576278118089249e-07, -1.4066597032069694e-05, -0.10163544863462448, -0.0008116050157696009, -2.861018856492592e-06, -0.00021240839851088822, -0.0002719986077863723, -0.19922074675559998, -0.003030115505680442, -3.576278118089249e-07, -0.00018165845540352166, -8.583032467868179e-06, -0.00014399446081370115, -0.0032560210675001144, -1.1801649634435307e-05, -4.100715523236431e-05, -0.0008680627797730267, -0.8261209726333618, -0.0009843033039942384, -3.22835111618042, -0.07398448139429092, -0.01053639966994524, -0.0028924793004989624, -0.001167331007309258, -7.033323527139146e-06, -2.9801878554280847e-05, -0.00012408917245920748, -0.1562180519104004, -0.010488506406545639, -1.76109778881073, -0.00028451209072954953, -0.4392780363559723, -0.005768912378698587, -0.03491426631808281, -0.00013755806139670312, -0.005374743603169918, -0.018768342211842537, -0.006713809445500374, -0.25400510430336, -0.009143621660768986, -1.1235418319702148, -0.0003289635351393372, -1.3879566192626953, -0.006285541690886021, -0.09875526279211044, -0.3022288680076599, -0.1523381769657135, -0.006863588932901621, -0.024206096306443214, -0.0008931938209570944, -8.940297266235575e-05, -0.033137205988168716, -0.0023218835704028606, -0.004594246856868267, -0.00036376056959852576, -1.7762025890988298e-05, -8.320462075062096e-05, -5.638440416078083e-05, -0.001474008895456791, -0.00011550712952157483, -0.0001541257370263338, -2.8967437174287625e-05, -3.957670196541585e-05, -0.00047755756531842053, -0.00013052565918769687, -0.095415860414505, -0.00022301571152638644, -1.1023861169815063, -0.002354827243834734, -0.0006858142442069948, -1.5497195136049413e-06, -1.1920928244535389e-07, -0.006553230341523886, -0.7894144654273987, -0.09876476228237152, -0.00823909044265747, -0.012483553029596806, -1.8000440832111053e-05, -7.593343616463244e-05, -0.0021098037250339985, -0.006998075637966394, -0.007629777304828167, -0.0017075256910175085, -0.0023970461916178465, -0.5396597385406494, -0.0002653246629051864, -1.300654649734497, -0.0035949621815234423, -0.009210005402565002, -0.003696990432217717, -0.02604902721941471, -0.0027505443431437016, -0.022201096639037132, -4.6967357775429264e-05, -0.010942335240542889, -1.680836794548668e-05, -0.0005402297829277813, -0.04223693162202835, -0.007871914654970169, -0.24135150015354156, -0.3145599365234375, -0.08707587420940399, -0.059211961925029755, -0.009413735941052437, -0.11960861086845398, -0.0011735226726159453, -0.1208900436758995, -0.008252923376858234, -0.1475597620010376, -0.012571141123771667, -2.383725643157959], "finish_reason": "stop"}], "metrics": {"energy": 520.0016404323577, "energy_per_token": 3.687954896683388, "time": 11.994272, "time_per_token": 0.08506575886524823}}
{"outputs": [{"text": "df[x_column] = pd.to_numeric(df[x_column])\n    df[y_column] = pd.to_numeric(df[y_column])\n    ax = df.plot(x=x_column, y=y_column, kind='scatter')\n    plt.grid(linestyle='--')\n    plt.tight_layout()\n    x = df[x_column].values.reshape(-1, 1)\n    y = df[y_column].values.reshape(-1, 1)\n    model = LinearRegression().fit(x, y)\n    plt.plot(x, model.predict(x), color='red')\n    return ax", "tokens": ["df", "[", "x", "_", "column", "]", " =", " pd", ".", "to", "_", "numeric", "(", "df", "[", "x", "_", "column", "])", "\n", "    ", "df", "[", "y", "_", "column", "]", " =", " pd", ".", "to", "_", "numeric", "(", "df", "[", "y", "_", "column", "])", "\n", "    ", "ax", " =", " df", ".", "plot", "(", "x", "=", "x", "_", "column", ",", " y", "=", "y", "_", "column", ",", " kind", "='", "scatter", "')", "\n", "    ", "plt", ".", "grid", "(", "lin", "estyle", "='", "--", "')", "\n", "    ", "plt", ".", "tight", "_", "layout", "()", "\n", "    ", "x", " =", " df", "[", "x", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "y", " =", " df", "[", "y", "_", "column", "]", ".", "values", ".", "resh", "ape", "(-", "1", ",", " ", "1", ")", "\n", "    ", "model", " =", " Linear", "Reg", "ression", "()", ".", "fit", "(", "x", ",", " y", ")", "\n", "    ", "plt", ".", "plot", "(", "x", ",", " model", ".", "predict", "(", "x", ")", ",", " color", "='", "red", "')", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-2.674640655517578, -2.532304286956787, -0.13034255802631378, -0.00011085849109804258, -0.00012194366718176752, -0.013323442079126835, -0.11540737003087997, -0.22059734165668488, -0.00016080040950328112, -0.007453490048646927, -4.0531076592742465e-06, -5.686121585313231e-05, -0.00010847456724150106, -0.0025963427033275366, -0.002958328230306506, -0.00027509720530360937, -4.410734163684538e-06, -4.887569048150908e-06, -0.3180007338523865, -0.058042556047439575, -0.006600601598620415, -0.051881030201911926, -0.008146983571350574, -0.0035118116065859795, -3.099436753473128e-06, -7.152555099310121e-07, -0.0010459910845384002, -0.00029797881143167615, -0.0005949157639406621, -2.3841855067985307e-07, -8.594620157964528e-05, -9.536738616588991e-07, -1.7523612768854946e-05, -4.815939246327616e-05, -0.0013612775364890695, -6.5205356804654e-05, -0.0007615765207447112, -2.0265558760002023e-06, -3.4570634852570947e-06, -0.002026529749855399, -0.0009039129945449531, -0.34146684408187866, -1.199949860572815, -0.008604357950389385, -0.4298155903816223, -0.17848972976207733, -0.0003607814433053136, -1.9846090078353882, -0.2263810783624649, -0.029232805594801903, -0.0038671724032610655, -1.728519782773219e-05, -1.7404405298293568e-05, -0.0003505330823827535, -0.01901879347860813, -0.002028790069743991, -0.0012423424050211906, -1.6927575416048057e-05, -3.2186455882765586e-06, -0.015913741663098335, -0.8515915870666504, -0.15434588491916656, -0.00017653337272349745, -0.23886744678020477, -0.012639298103749752, -0.11898521333932877, -2.5587410926818848, -0.0026950249448418617, -2.7991535663604736, -0.3474956452846527, -1.8098201751708984, -8.844937838148326e-05, -0.21601639688014984, -0.39809656143188477, -0.2400529980659485, -0.02441389113664627, -0.17521338164806366, -1.334109902381897, -0.0005052005290053785, -2.4636030197143555, -0.00025138078490272164, -1.5497195136049413e-06, -0.011140996590256691, -0.009965547360479832, -0.19248472154140472, -1.0067195892333984, -0.19669565558433533, -0.14539426565170288, -0.1806158423423767, -0.0027237955946475267, -1.5616295058862306e-05, -3.933898824470816e-06, -0.0006642519147135317, -0.021216576918959618, -0.31090638041496277, -0.021515417844057083, -0.00016306500765495002, 0.0, -0.02684754692018032, -3.969590397900902e-05, -0.00010597144137136638, -0.0335744209587574, -7.176141662057489e-05, -7.545663538621739e-05, -0.04660461097955704, -0.0006624649395234883, -0.04233840852975845, -0.0006530536338686943, -0.0007257211836986244, -0.0008026715368032455, -6.472854875028133e-05, -2.3841830625315197e-06, -8.344646857949556e-07, -3.576272320060525e-06, -0.04177262261509895, -0.002118487609550357, -0.2857416868209839, -0.006537715904414654, 0.0, -0.0001778444420779124, -1.2993727978027891e-05, -0.00011062010162277147, -0.001627312507480383, -9.059865078597795e-06, -3.015949550899677e-05, -0.0009380945703014731, -0.04186191409826279, -0.6137800812721252, -0.0037163496017456055, -0.00046528480015695095, -9.536738616588991e-07, -2.3841855067985307e-07, -0.002314509591087699, -0.6215530633926392, -5.125986263010418e-06, -0.00011181206355104223, -0.0018521074671298265, -0.00635626120492816, -0.005593955982476473, -0.00022313489171210676, -0.00816306471824646, -0.0048655918799340725, -3.010982036590576, -0.002790725789964199, -0.006565784104168415, -0.004409827757626772, -0.028649592772126198, -0.0029431143775582314, -0.062024421989917755, -2.2053474822314456e-05, -0.045462965965270996, -2.2291887944447808e-05, -0.0006388768670149148, -0.011497899889945984, -0.00285337190143764, -0.3104594647884369, -0.058382660150527954, -0.1026790514588356, -0.11503341794013977, -0.015406408347189426, -0.03372633829712868, -0.17933014035224915, -0.011339972727000713, -0.2635971009731293, -0.02693539299070835, -1.9875988960266113], "finish_reason": "stop"}], "metrics": {"energy": 585.8701283893589, "energy_per_token": 3.5293381228274634, "time": 14.093816, "time_per_token": 0.0849025060240964}}
