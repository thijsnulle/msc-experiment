{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub('[^a-zA-Z0-9 \\n]', '', x).replace(\" \", \"\"))\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " \\", "n", "]", "'", ",", " ''", ",", " x", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "\"", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -1.337031364440918, -0.044538263231515884, -0.012079774402081966, -0.031162645667791367, -0.002136925933882594, -0.13574834167957306, -0.0001209901092806831, -0.003323272103443742, -1.0692880153656006, -0.19250567257404327, -0.050937213003635406, -0.6270058751106262, -3.480850500636734e-05, -7.533743337262422e-05, -0.0020697140134871006, -1.0609570381348021e-05, -0.009521548636257648, -0.2101055532693863, -0.0005079409456811845, -3.886147169396281e-05, -1.0471042394638062, -0.03566490486264229, -0.1262756884098053, -0.0024358145892620087, -0.0002668739762157202, -0.06681641191244125, -8.189342770492658e-05, -0.05930161848664284, -0.6160206198692322, -0.3505795896053314, -0.22105157375335693, -0.22888930141925812, -0.03342144191265106, -0.002319504739716649, -5.9602869441732764e-05, -0.029820537194609642, -0.00017855956684798002, -0.23245985805988312, -0.011673004366457462, -0.048962220549583435, -0.006963508669286966, -1.0132738680113107e-05, -3.611976353568025e-05, -0.036123666912317276, -0.005003431346267462, -0.00019822540343739092, -0.0014321081107482314, -0.00017593742813915014, -0.0005276002921164036, -0.006774197798222303, -1.537788011773955e-05, -1.6689286894688848e-06, -0.024793650954961777, -0.023025060072541237, -2.50339189733495e-06, -7.152531907195225e-06, -3.015949550899677e-05, -0.00035232058144174516, -0.7650687098503113, -6.09140915912576e-05, -0.0017093108035624027, -0.0014255610294640064, -0.0044571817852556705, -0.15154330432415009, -0.042136359959840775, -0.004238788038492203, -1.0132738680113107e-05, -5.8412379075889476e-06, -0.5147228837013245, -0.012205435894429684, -0.817116379737854], "finish_reason": "stop"}], "metrics": {"energy": 338.5812842960358, "energy_per_token": 3.8042840932138855, "time": 7.987455, "time_per_token": 0.08974668539325842}}
{"outputs": [{"text": "# Remove all special characters and punctuation marks\n    input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n\n    return input_df", "tokens": ["#", " Remove", " all", " special", " characters", " and", " punct", "uation", " marks", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -0.604607343673706, -0.10352392494678497, -0.005472559481859207, -2.145176887512207, -0.47951918840408325, -0.014390849508345127, -0.054019585251808167, -0.7622512578964233, -0.00324425776489079, -0.2198321670293808, -0.0001308832288486883, -0.0031587013509124517, -0.1496850550174713, -0.024670375511050224, -0.00015436411194968969, -0.0001591317413840443, -0.0008644896443001926, -0.0015617328463122249, -0.015879951417446136, -1.680836794548668e-05, -8.010543388081715e-05, -0.025876769796013832, -0.0005938435206189752, -0.00012027494085486978, -0.0018442542059347034, -0.6137092709541321, -0.0017708349041640759, -0.3341039717197418, -0.01132465060800314, -0.0025939648039638996, -0.025367259979248047, -5.113947918289341e-05, -0.0012355559738352895, -0.5440723896026611, -0.01818847469985485, -0.14051960408687592, -0.015554890967905521, -0.15813830494880676, -0.2333797961473465, -7.033323527139146e-06, -3.480850500636734e-05, -0.0009167758980765939, -7.748573807475623e-06, -0.0007139279623515904, -0.1636059284210205, -0.0005009111482650042, -2.682172998902388e-05, -0.48689231276512146, -0.0007403731578961015, -0.00030787018476985395, -0.02723577991127968, -0.00021586472576018423, -0.015278800390660763, -0.03213696554303169, -0.003630833700299263, -0.8800569176673889, -0.0009927588980644941, -0.0020261728204786777, -0.26794111728668213, -0.20325493812561035, -0.02327141910791397, -0.007346756290644407, -0.08420072495937347, -0.20397253334522247, -0.008156206458806992, -0.04836712032556534, -0.0002706876548472792, -0.0015286438865587115, -3.2186455882765586e-06, -7.629365427419543e-06, -0.0012836558744311333, -0.0025785076431930065, -3.814624506048858e-05, -0.0009314250783063471, -9.297892393078655e-05, -0.0002928543253801763, -0.0008254220010712743, -4.291525328881107e-06, -2.3841830625315197e-06, -0.0012817509705200791, -0.00263225007802248, -1.1920922133867862e-06, -4.768370445162873e-07, -2.7418097943154862e-06, -0.0008505540899932384, -0.34196433424949646, -3.158996332786046e-05, -0.19088862836360931, -0.0007111880695447326, -0.0003013156820088625, -0.0040576281026005745, -0.0016001766780391335, -0.007051107473671436, -0.0040741306729614735, -0.0005409446312114596, -0.03189370408654213, -0.00038378025055862963, -0.2643354833126068, -0.0020048771984875202, -6.556489552167477e-06, -7.986990567587782e-06, -0.4448477625846863, -0.012421507388353348, -0.8178966641426086], "finish_reason": "stop"}], "metrics": {"energy": 391.0436370162964, "energy_per_token": 3.689090915248079, "time": 9.476564, "time_per_token": 0.08940154716981132}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub(r'\\W+', '', x))\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n    return input_df[['clean_text', 'text_length']]", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " ''", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "    ", "return", " input", "_", "df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]", "\n", "\n", "if"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -1.337031364440918, -0.044538263231515884, -0.012079774402081966, -0.031162645667791367, -0.002136925933882594, -0.13574834167957306, -0.0001209901092806831, -0.003323272103443742, -0.4218537509441376, -0.05672243610024452, -1.3813536167144775, -0.09738381206989288, -0.058978121727705, -0.00011359999916749075, -0.021746518090367317, -0.00015627116954419762, -0.04292328655719757, -0.6037164330482483, -0.04627550393342972, -0.03877411410212517, -0.010859675705432892, -1.5258672647178173e-05, -6.0794889577664435e-05, -0.008939010091125965, -0.05203132703900337, -0.000456109904916957, -0.0014612721279263496, -0.00018308870494365692, -0.0005824061809107661, -0.005794157274067402, -1.156323378381785e-05, -6.437280717364047e-06, -0.01189142931252718, -0.0847720354795456, -4.410734163684538e-06, -9.775113539944869e-06, -3.707340147229843e-05, -0.0006736631621606648, -0.592197060585022, -8.093983342405409e-05, -0.28992119431495667, -0.0014112761709839106, -0.0002499506517779082, -0.0025632879696786404, -0.0001308832288486883, -0.0030084848403930664, -0.0005601267330348492, -0.00044252615771256387, -0.1449609398841858, -0.03763118013739586, -0.003991376142948866, -1.2993727978027891e-05, -8.702239938429557e-06, -1.9328694343566895, -0.004942580126225948, -0.013905666768550873, -1.8715683836489916e-05, -1.0847986231965479e-05, -8.689979586051777e-05, -3.58813522325363e-05, -0.010098790749907494, -5.090107151772827e-05, -3.302042750874534e-05, -8.4638240878121e-06, -0.00013648532330989838, -0.4211317300796509, -0.14581246674060822, -0.01173415407538414, -0.7562207579612732], "finish_reason": "stop"}], "metrics": {"energy": 339.4712561092377, "energy_per_token": 3.9019684610257204, "time": 7.785536, "time_per_token": 0.08948891954022987}}
{"outputs": [{"text": "# Remove special characters, punctuation marks, and spaces\n    input_df[\"clean_text\"] = input_df[\"text\"].apply(\n        lambda x: re.sub(r\"[^a-zA-Z0-9]+\", \"\", x)\n    )\n\n    # Calculate length of cleaned text\n    input_df[\"text_length\"] = input_df[\"clean_text\"].apply(lambda x: len(x))\n\n    return input_df", "tokens": ["#", " Remove", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "[", "\"", "clean", "_", "text", "\"", "]", " =", " input", "_", "df", "[", "\"", "text", "\"", "]", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "\"", ",", " \"", "\"", ",", " x", ")", "\n", "    ", ")", "\n", "\n", "    ", "#", " Calculate", " length", " of", " cleaned", " text", "\n", "    ", "input", "_", "df", "[", "\"", "text", "_", "length", "\"", "]", " =", " input", "_", "df", "[", "\"", "clean", "_", "text", "\"", "]", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -1.0158069133758545, -0.011223279871046543, -0.6156068444252014, -0.013804675079882145, -0.01040380448102951, -0.04679904505610466, -0.05699937045574188, -0.009188980795443058, -0.03207797557115555, -0.39829885959625244, -0.0027155925054103136, -0.32718154788017273, -0.00010382589971413836, -0.004265733994543552, -2.020442485809326, -0.0010414659045636654, -0.015212583355605602, -0.00023982033599168062, -0.00026592056383378804, -0.00032205163734033704, -0.0015013862866908312, -0.0002746204845607281, -0.05223375931382179, -1.4424220353248529e-05, -4.494089080253616e-05, -0.04614642634987831, -0.005447898991405964, -0.002636886900290847, -2.3007127310847864e-05, -0.003302241675555706, -0.004774004686623812, -0.48028847575187683, -0.002529875375330448, -0.2369336187839508, -0.005607232917100191, -0.0024730355944484472, -0.03912243992090225, -0.00040928093949332833, -0.06565162539482117, -8.427741704508662e-05, -0.0035143063869327307, -0.003669791854918003, -0.15995310246944427, -0.06663865596055984, -0.28235700726509094, -0.14849190413951874, -0.1522807478904724, -1.8954096958623268e-05, -4.279521817807108e-05, -0.0014919828390702605, -1.2874520507466514e-05, -0.0010938619961962104, -0.06745334714651108, -0.0006456674309447408, -5.113947918289341e-05, -0.8235729336738586, -0.006560809910297394, -2.1219027985353023e-05, -0.013729305937886238, -0.0006193388253450394, -8.4638240878121e-06, -0.02085997350513935, -0.09346248209476471, -0.06785375624895096, -0.005266483407467604, -2.7894584491150454e-05, -0.00545252300798893, -0.7019934058189392, -0.00026127262390218675, -0.004823832772672176, -0.11419088393449783, -1.3410805463790894, -0.026926111429929733, -0.5519329905509949, -0.011585102416574955, -0.026963476091623306, -0.0002926159941125661, -0.0016242180718109012, -2.622600959512056e-06, -5.364403477869928e-06, -0.0032444954849779606, -6.48477507638745e-05, -0.0010257464600726962, -5.209310256759636e-05, -0.0004894727608188987, -4.5060096454108134e-05, -1.2516897186287679e-05, -1.9311717551317997e-05, -0.0015460216673091054, -4.172316494077677e-06, -2.7418097943154862e-06, -0.0008936702506616712, -0.00021979777375236154, -0.003972141072154045, -2.0265558760002023e-06, -1.0728830375228426e-06, -1.311301275563892e-06, -1.6689286894688848e-06, -6.3774932641536e-05, -0.5805127620697021, -3.540453326422721e-05, -0.2924326956272125, -0.0012237686896696687, -3.6238969187252223e-05, -0.0017093108035624027, -7.998623186722398e-05, -0.014216925017535686, -0.004141326528042555, -0.0003626880934461951, -0.05101186782121658, -0.00020656836568377912, -0.258510559797287, -0.0017527469899505377, -4.172316494077677e-06, -2.7418097943154862e-06, -0.4764719009399414, -0.005185962188988924, -1.482102870941162], "finish_reason": "stop"}], "metrics": {"energy": 468.32454706573503, "energy_per_token": 3.9027045588811253, "time": 10.510747, "time_per_token": 0.08758955833333333}}
{"outputs": [{"text": "import re\n    import pandas as pd\n\n    # Create an empty list to store the cleaned texts\n    clean_texts = []\n\n    # Loop over each row in the DataFrame\n    for text in input_df['text']:\n        # Remove all special characters, punctuation marks, and spaces\n        clean_text = re.sub(r'[^a-zA-Z]', '', text)\n        clean_texts.append(clean_text)\n\n    # Create a DataFrame with the cleaned texts and their lengths\n    output_df = pd.DataFrame({'clean_text': clean_texts, 'text_length': [len(text) for text in clean_texts]})\n\n    return output_df", "tokens": ["import", " re", "\n", "    ", "import", " pandas", " as", " pd", "\n", "\n", "    ", "#", " Create", " an", " empty", " list", " to", " store", " the", " cleaned", " texts", "\n", "    ", "clean", "_", "text", "s", " =", " []", "\n", "\n", "    ", "#", " Loop", " over", " each", " row", " in", " the", " Data", "Frame", "\n", "    ", "for", " text", " in", " input", "_", "df", "['", "text", "']", ":", "\n", "        ", "#", " Remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "        ", "clean", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "]", "'", ",", " ''", ",", " text", ")", "\n", "        ", "clean", "_", "text", "s", ".", "append", "(", "clean", "_", "text", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " the", " cleaned", " texts", " and", " their", " lengths", "\n", "    ", "output", "_", "df", " =", " pd", ".", "DataFrame", "({", "'", "clean", "_", "text", "':", " clean", "_", "text", "s", ",", " '", "text", "_", "length", "':", " [", "len", "(", "text", ")", " for", " text", " in", " clean", "_", "text", "s", "]", "})", "\n", "\n", "    ", "return", " output", "_", "df", "\n", "\n", "#"], "logprobs": [-3.0380325317382812, -0.10868878662586212, -0.030441690236330032, -0.09838388860225677, -0.17160196602344513, -0.0026638756971806288, -0.0008798541966825724, -9.154854342341423e-05, -0.001142564113251865, -0.21235992014408112, -0.0024114358238875866, -0.8762848377227783, -3.3193163871765137, -3.035738706588745, -0.06236955523490906, -0.5658938884735107, -0.0601869560778141, -0.05553511530160904, -0.1007140725851059, -0.5199548602104187, -1.774742841720581, -0.05939485877752304, -0.0014106809394434094, -0.40143096446990967, -0.007023052778095007, -0.014391318894922733, -0.3206077516078949, -0.0030377216171473265, -0.006218489725142717, -0.000263894529780373, -0.16815602779388428, -0.0003474347176961601, -0.05891529843211174, -1.0267999172210693, -1.7095212936401367, -0.3475082814693451, -0.25770413875579834, -0.05999937653541565, -0.004094670061022043, -0.5924829244613647, -0.001495434669777751, -0.10733796656131744, -0.00018404220463708043, -0.00217189802788198, -3.0463595390319824, -0.010455122217535973, -0.011449463665485382, -9.298280929215252e-06, -9.65590606938349e-06, -0.0820680558681488, -0.0005918181850574911, -6.0794889577664435e-05, -0.009409484453499317, -0.00036554806865751743, -0.1359119415283203, -0.01125227753072977, -0.40979763865470886, -0.3919451832771301, -0.11539355665445328, -0.004612520802766085, -0.5905218720436096, -0.024497881531715393, -0.004365794360637665, -0.010794108733534813, -0.019436148926615715, -0.008609320968389511, -0.03059651330113411, -0.4673220217227936, -0.0009152276325039566, -0.43143144249916077, -0.007797990459948778, -0.00514362333342433, -0.0018889933126047254, -0.017069686204195023, -1.5616295058862306e-05, -0.00144091690890491, -0.24522583186626434, -0.004454333335161209, -0.282790869474411, -0.03999122977256775, -0.28736814856529236, -0.2947183847427368, -5.483612312673358e-06, -1.8000440832111053e-05, -0.0009740613750182092, -1.0132738680113107e-05, -0.0004457433824427426, -2.573209762573242, -0.0007281036232598126, -0.00032491172896698117, -0.01855609565973282, -6.615896563744172e-05, -0.021369799971580505, -0.016795068979263306, -0.005649196449667215, -0.0545649416744709, -1.8801496028900146, -5.8412379075889476e-06, -4.291525328881107e-06, -0.009714589454233646, -0.00010048838157672435, -8.844937838148326e-05, -0.0002762889489531517, -0.00046719127567484975, -7.152555099310121e-07, -1.9073468138230965e-06, -0.0008573431987315416, -0.0018596036825329065, -0.02190864086151123, -0.002085417043417692, -0.010947640985250473, -0.47550836205482483, -0.08334726095199585, -3.0073020458221436, -0.0005063920398242772, -0.038775376975536346, -0.12749068439006805, -0.2906387150287628, -0.09700997918844223, -0.17786628007888794, -0.026995154097676277, -0.044222842901945114, -0.0075210509821772575, -0.00033861625706776977, -0.290112167596817, -0.005138286389410496, -0.0022691949270665646, -0.00016246906307060272, -0.0026538888923823833, -1.5497195136049413e-06, -0.0011660212185233831, -0.029333408921957016, -0.07186627388000488, -0.05402534827589989, -0.00010954733443213627, -6.05564855504781e-05, -0.0006849803612567484, -0.0023216456174850464, -4.768370445162873e-07, -1.9073468138230965e-06, -0.00012158608296886086, -0.04154141619801521, -0.07759203016757965, -0.0005925330333411694, -9.679325739853084e-05, -0.00018821375851985067, -0.00015209948469419032, -0.03803154453635216, -0.0010503972880542278, -0.00025674383505247533, -0.23087960481643677, -0.0011823337990790606, -0.0005336767644621432, -4.911301948595792e-05, -1.2755313036905136e-05, -0.0005561950383707881, -1.1920928244535389e-07, -1.9073468138230965e-06, -2.6702524337451905e-05, -0.00022265815641731024, -0.0009552444680593908, -0.0005191409145481884, -0.20439504086971283, -0.00032455421751365066, -0.07995107769966125, -0.002572800265625119, -1.3828182090946939e-05, -6.437280717364047e-06, -0.11873879283666611, -0.024596402421593666, -1.7015801668167114], "finish_reason": "stop"}], "metrics": {"energy": 617.9094780254366, "energy_per_token": 3.6135057194469975, "time": 14.291243, "time_per_token": 0.08357452046783626}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n    input_df['text_length'] = input_df['clean_text'].apply(len)\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "len", ")", "\n", "    ", "return", " input", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -0.34037303924560547, -0.01642339862883091, -0.007112777326256037, -0.06595612317323685, -0.00011801023356383666, -0.002781572053208947, -0.4542722702026367, -0.044864412397146225, -0.38346219062805176, -0.07636132091283798, -0.09695058315992355, -0.26752474904060364, -2.1576648578047752e-05, -8.34430247778073e-05, -0.0027435303200036287, -1.3947389561508317e-05, -0.0018286664271727204, -0.23928342759609222, -0.0005969410995021462, -3.838465272565372e-05, -0.2154952883720398, -0.0010490872664377093, -0.0005144941387698054, -0.08194966614246368, -0.0005976559477858245, -0.05235639959573746, -0.0701998621225357, -0.03890174254775047, -0.005644099321216345, -0.004779106471687555, -1.0490362910786644e-05, -4.136476854910143e-05, -0.005232923664152622, -0.029730629175901413, -0.0003507714136503637, -0.0015625660307705402, -0.00015567521040793508, -0.00158410903532058, -0.0012969900853931904, -7.152531907195225e-06, -1.0609570381348021e-05, -0.004403537139296532, -0.07968692481517792, -3.814689989667386e-06, -1.0967194612021558e-05, -6.794906312279636e-06, -0.00015937011630740017, -0.3586587607860565, -6.16293036728166e-05, -1.9276378154754639, -0.00033456450910307467, -0.0007400158210657537, -0.1495489478111267, -0.02724355272948742, -0.003860997501760721, -1.2516897186287679e-05, -1.4305012882687151e-05, -1.6473090648651123, -1.6689286894688848e-06, -1.6689286894688848e-06, -2.3841830625315197e-06, -4.529942543740617e-06, -0.13728563487529755], "finish_reason": "stop"}], "metrics": {"energy": 300.12010277938845, "energy_per_token": 3.7051864540665242, "time": 6.741595, "time_per_token": 0.08322956790123458}}
{"outputs": [{"text": "# remove special characters, punctuation marks, and spaces from the text in the 'text' column\n    input_df[\"clean_text\"] = input_df[\"text\"].str.replace(r'[^a-zA-Z0-9 ]', '', regex=True)\n\n    # calculate the length of each cleaned text\n    input_df[\"text_length\"] = input_df[\"clean_text\"].str.len()\n\n    return input_df", "tokens": ["#", " remove", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", " from", " the", " text", " in", " the", " '", "text", "'", " column", "\n", "    ", "input", "_", "df", "[", "\"", "clean", "_", "text", "\"", "]", " =", " input", "_", "df", "[", "\"", "text", "\"", "]", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "\n", "    ", "#", " calculate", " the", " length", " of", " each", " cleaned", " text", "\n", "    ", "input", "_", "df", "[", "\"", "text", "_", "length", "\"", "]", " =", " input", "_", "df", "[", "\"", "clean", "_", "text", "\"", "]", ".", "str", ".", "len", "()", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -2.4395599365234375, -0.7140788435935974, -0.022735992446541786, -0.5128042697906494, -0.0345676988363266, -0.015667090192437172, -0.0621364563703537, -0.08464027941226959, -0.009501238353550434, -0.025055035948753357, -2.9978654384613037, -0.834122359752655, -0.3784656226634979, -2.040052652359009, -0.22344858944416046, -0.27842745184898376, -0.006671298760920763, -0.0009956170106306672, -0.002075662137940526, -0.2116008698940277, -0.0018587708473205566, -0.17221811413764954, -5.602679812000133e-05, -0.0007090438157320023, -2.5559566020965576, -0.0013165149139240384, -0.011668290942907333, -0.00020346954988781363, -0.0003625689132604748, -0.00037067217635922134, -0.001627312507480383, -0.00026901919045485556, -0.07293696701526642, -1.966933996300213e-05, -2.7417760065873154e-05, -0.07335313409566879, -0.010189773514866829, -0.0014780559577047825, -2.586808113846928e-05, -0.0022294684313237667, -0.0030676708556711674, -1.4262940883636475, -0.0002076410164590925, -0.0747569277882576, -0.005111957434564829, -0.2924883961677551, -1.606855034828186, -0.048065632581710815, -0.5768181681632996, -0.3998964726924896, -2.5152843591058627e-05, -5.400034933700226e-05, -0.0023401989601552486, -1.6689160474925302e-05, -0.001617315225303173, -0.16565419733524323, -0.0017677409341558814, -2.8967437174287625e-05, -1.3875943422317505, -0.053170252591371536, -0.00017689094238448888, -0.43671661615371704, -0.00028308198670856655, -0.0029427579138427973, -0.008225729689002037, -0.0035967440344393253, -0.004275111481547356, -0.1879943460226059, -0.7158403992652893, -0.0011536378879100084, -0.001167331007309258, -0.250137597322464, -0.05383310467004776, -0.01990474946796894, -0.0028401773888617754, -2.5660436153411865, -0.5772139430046082, -0.10341836512088776, -0.3463793396949768, -0.00021765247220173478, -0.011304023675620556, -4.0531076592742465e-06, -1.7762025890988298e-05, -0.06155318021774292, -2.8371408916427754e-05, -0.006311958190053701, -0.00020168177434243262, -0.001646116841584444, -8.785339014139026e-05, -0.00026341783814132214, -0.00011062010162277147, -0.0043243709951639175, -5.722029527532868e-06, -9.298280929215252e-06, -0.010964502580463886, -0.00017438798386137933, -0.006295610684901476, -3.2186455882765586e-06, -1.5497195136049413e-06, -1.9073468138230965e-06, -2.1576648578047752e-05, -0.00035470392322167754, -0.3538815379142761, -9.536697689327411e-06, -0.002063646912574768, -0.00030727434204891324, -0.0036535197868943214, -0.03431696444749832, -0.0005104430601932108, -0.5772119760513306, -0.003446711925789714, -7.390948667307384e-06, -1.2278481335670222e-05, -0.49885886907577515, -0.008902264758944511, -1.3781709671020508], "finish_reason": "stop"}], "metrics": {"energy": 449.71555509376526, "energy_per_token": 3.843722693109105, "time": 9.889828, "time_per_token": 0.08452844444444445}}
{"outputs": [{"text": "input_df['clean_text'] = input_df.text.str.replace(\"[^\\w\\s]\", \"\") # remove special characters\n    input_df['clean_text'] = input_df.clean_text.str.replace('\\s+', '') # remove spaces\n    input_df['text_length'] = input_df['clean_text'].str.len()\n\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", ".", "text", ".", "str", ".", "replace", "(", "\"", "[", "^\\", "w", "\\", "s", "]\"", ",", " \"", "\"", ")", " #", " remove", " special", " characters", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", ".", "clean", "_", "text", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", "')", " #", " remove", " spaces", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -2.9402365684509277, -0.11479707807302475, -0.005566334817558527, -0.6439465880393982, -0.0003955773718189448, -0.06274088472127914, -0.12347697466611862, -2.6646809577941895, -0.0970560684800148, -1.3318836688995361, -0.00016485285595990717, -0.0014063954586163163, -0.014468282461166382, -0.006175484042614698, -0.0011501847766339779, -0.5553950071334839, -0.00944491196423769, -0.15738418698310852, -3.6317851543426514, -1.3092715740203857, -0.34582728147506714, -0.030086975544691086, -0.2803311049938202, -0.0017141900025308132, -0.010507381521165371, -7.390948667307384e-06, -4.1960789531003684e-05, -0.021122505888342857, -0.19332711398601532, -6.508615479106084e-05, -4.31528314948082e-05, -0.0006548406090587378, -0.004838425200432539, -0.0034419598523527384, -1.6927575416048057e-05, -2.861018856492592e-06, -0.7798078656196594, -0.19848878681659698, -1.2516897186287679e-05, -1.6212332411669195e-05, -0.0004926898400299251, -0.006765198893845081, -1.9073304429184645e-05, -0.01314227283000946, -1.4109324216842651, -0.2644050121307373, -0.03405096009373665, -0.02971535548567772, -0.0006850994541309774, -0.03135455772280693, -0.0022468341048806906, -0.042058639228343964, -0.023749053478240967, -0.11331261694431305, -0.056677717715501785, -0.03597303107380867, -0.027431579306721687, -1.3708974620385561e-05, -0.00017379203927703202, -0.02077089063823223, -0.09206929057836533, -0.0002641328901518136, -0.0012396040838211775, -0.00025138078490272164, -0.0050527737475931644, -0.013018141500651836, -2.5629668016335927e-05, -8.856858039507642e-05, -0.5115383267402649, -0.006806403398513794, -1.9073468138230965e-06, -1.2993727978027891e-05, -1.07287787614041e-05, -0.00018249277491122484, -0.13713140785694122, -1.3232143828645349e-05, -0.0015772057231515646, -0.00021395778458099812, -1.2946348190307617, -1.5784832239151, -0.0014058002270758152, -0.11102935671806335, -0.01667291298508644, -6.556489552167477e-06, -1.1086402082582936e-05, -0.7115815877914429, -0.013894498348236084, -0.7524669766426086], "finish_reason": "stop"}], "metrics": {"energy": 355.883352409363, "energy_per_token": 3.55883352409363, "time": 8.421827, "time_per_token": 0.08421827}}
{"outputs": [{"text": "# Remove all special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n\n    return input_df", "tokens": ["#", " Remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -0.604607343673706, -0.10352392494678497, -0.005472559481859207, -0.26779448986053467, -0.012950127944350243, -0.005630348809063435, -0.00864548608660698, -0.039002180099487305, -0.009225361049175262, -0.015551135875284672, -0.48130303621292114, -0.0026190525386482477, -0.23959596455097198, -0.00012134769349358976, -0.003910871222615242, -0.15340456366539001, -0.0144716901704669, -0.0001392267586197704, -0.00014733182615600526, -0.0006414977833628654, -0.0016883655916899443, -0.019965749233961105, -1.7046782886609435e-05, -3.0397906812140718e-05, -0.026001639664173126, -0.0006260104128159583, -0.00013159839727450162, -0.0015603045467287302, -0.43897274136543274, -0.002224353840574622, -0.3794536292552948, -0.009797697886824608, -0.0032550706528127193, -0.064023457467556, -7.343022298300639e-05, -0.0014259180752560496, -0.3754977285861969, -0.0155399851500988, -0.21998687088489532, -0.036300718784332275, -0.19946783781051636, -0.1858614981174469, -1.0609570381348021e-05, -2.706014311115723e-05, -0.0009309487068094313, -1.2040065485052764e-05, -0.0008750900160521269, -0.24696846306324005, -0.0004966217675246298, -4.5298504119273275e-05, -0.20603716373443604, -0.0006543640629388392, -0.0003022690652869642, -0.02885415032505989, -0.00020859450160060078, -0.022027941420674324, -0.06829197704792023, -0.0034393463283777237, -1.031704306602478, -0.0007618147064931691, -0.0029320605099201202, -0.09113360941410065, -0.16438521444797516, -0.016110599040985107, -0.007243324536830187, -0.06792771816253662, -0.13838966190814972, -0.005717827472835779, -0.03472695127129555, -0.00025781645672395825, -0.0013263961300253868, -2.50339189733495e-06, -6.318072337307967e-06, -0.0012134101707488298, -0.0011041027028113604, -3.838465272565372e-05, -0.0012980615720152855, -7.378782902378589e-05, -0.000248401309363544, -0.0006150499684736133, -3.933898824470816e-06, -1.0728830375228426e-06, -0.0009492897079326212, -0.0024273712188005447, -1.0728830375228426e-06, -4.768370445162873e-07, -2.3841830625315197e-06, -5.4238757002167404e-05, -0.22890201210975647, -2.682172998902388e-05, -0.1838587075471878, -0.00087878224439919, -0.000288087350782007, -0.0034899539314210415, -0.0007827793597243726, -0.007683958858251572, -0.0016659918474033475, -0.00040451448876410723, -0.035346560180187225, -0.0003678122302517295, -0.2306727170944214, -0.0024027545005083084, -6.9141146923357155e-06, -8.821448318485636e-06, -0.38372862339019775, -0.01311533059924841, -0.6341816186904907], "finish_reason": "stop"}], "metrics": {"energy": 375.8457024936673, "energy_per_token": 3.4481257109510763, "time": 9.039332, "time_per_token": 0.08292965137614679}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r'[^A-Za-z0-9]+', '', x))\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", "]+", "'", ",", " ''", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "    ", "return", " input", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -0.34037303924560547, -0.01642339862883091, -0.007112777326256037, -0.06595612317323685, -0.00011801023356383666, -0.002781572053208947, -0.4542722702026367, -0.044864412397146225, -0.38346219062805176, -0.07636132091283798, -0.09695058315992355, -1.6728553771972656, -0.0002057340752799064, -0.002763026859611273, -0.001508289948105812, -4.887569048150908e-06, -5.1377883210079744e-05, -0.11782785505056381, -0.0012010273057967424, -3.123234637314454e-05, -0.2093634307384491, -0.01972137950360775, -0.0006603206275030971, -0.05945619195699692, -0.0008955758530646563, -0.026966145262122154, -0.06920655071735382, -0.03706755116581917, -0.005128087010234594, -0.006347258575260639, -1.0847986231965479e-05, -4.7444173105759546e-05, -0.005218456033617258, -0.039258845150470734, -0.000376034586224705, -0.0014692475087940693, -0.00017271934484597296, -0.0022518294863402843, -0.00208850996568799, -9.298280929215252e-06, -2.622600959512056e-06, -0.005115990061312914, -0.06305141001939774, -2.622600959512056e-06, -1.2516897186287679e-05, -6.437280717364047e-06, -0.0001551984460093081, -0.37807199358940125, -5.07818695041351e-05, -0.15652991831302643, -0.002019629580900073, -0.0017138330731540918, -0.007895214483141899, -0.0013909199042245746, -0.010303756222128868, -0.004758225288242102, -0.0009924016194418073, -0.14359301328659058, -0.028770525008440018, -0.0046939183957874775, -1.5735502529423684e-05, -2.0861407392658293e-05, -1.5148600339889526, -1.1920922133867862e-06, -2.3841830625315197e-06, -1.5497195136049413e-06, -3.2186455882765586e-06, -0.12865085899829865], "finish_reason": "stop"}], "metrics": {"energy": 313.1860970783233, "energy_per_token": 3.641698803236318, "time": 7.359681, "time_per_token": 0.08557768604651163}}
{"outputs": [{"text": "# Remove special characters and punctuation marks\n    input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub('[^a-zA-Z0-9\\s]+', '', x))\n\n    # Remove spaces\n    input_df['clean_text'] = input_df['clean_text'].apply(\n        lambda x: re.sub('[ ]+', '', x))\n\n    # Calculate the length of the clean text\n    input_df['text_length'] = input_df['clean_text'].apply(len)\n\n    return input_df", "tokens": ["#", " Remove", " special", " characters", " and", " punct", "uation", " marks", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", "s", "]+", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Remove", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", " ]", "+'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " clean", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "len", ")", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -1.0158069133758545, -0.011223279871046543, -1.2572236061096191, -0.5266468524932861, -0.02436177246272564, -0.19648373126983643, -0.5562217831611633, -0.0033927755430340767, -0.2606302499771118, -0.00011121608258690685, -0.0051302220672369, -0.12250833213329315, -0.020948464050889015, -0.0002037079248111695, -0.00021288513380568475, -0.0009433348895981908, -0.0011432785540819168, -0.01722823455929756, -1.2159273865108844e-05, -0.00013195598148740828, -0.012350155971944332, -0.0007616956136189401, -9.035655966727063e-05, -0.0019731116481125355, -0.7249640822410583, -0.0017258524894714355, -1.1190054416656494, -0.0226441640406847, -0.0023820616770535707, -0.023019935935735703, -0.00039986721822060645, -0.025760598480701447, -4.470248313737102e-05, -0.0013491347199305892, -1.1265158653259277, -0.025691702961921692, -0.029975110664963722, -0.6105643510818481, -1.2874520507466514e-05, -3.361645576660521e-05, -0.002121580531820655, -6.9141146923357155e-06, -0.0023801589850336313, -0.14945563673973083, -0.00036376056959852576, -1.7881233361549675e-05, -1.591168999671936, -0.5408281087875366, -1.431533694267273, -0.0019514580490067601, -6.23445157543756e-05, -0.00708898575976491, -4.637133679352701e-05, -0.024060172960162163, -0.25245022773742676, -0.007790420204401016, -0.5922577977180481, -0.0009733468177728355, -0.004648237023502588, -0.05135821923613548, -0.47381991147994995, -0.11210700869560242, -0.0003026265767402947, -0.005080764647573233, -2.622600959512056e-06, -7.390948667307384e-06, -0.0014872215688228607, -0.0036367725115269423, -1.156323378381785e-05, -2.288792165927589e-05, -0.0009603655780665576, -0.00293586403131485, -0.0018398514948785305, -5.722029527532868e-06, -4.410734163684538e-06, -0.0052192858420312405, -0.002921957289800048, -8.344646857949556e-07, -7.152555099310121e-07, -1.1801649634435307e-05, -0.0009134411229752004, -0.6346577405929565, -0.0002917817619163543, -0.12081461399793625, -0.0012045992771163583, -8.272782724816352e-05, -0.0017027654685080051, -2.8371408916427754e-05, -0.3500620424747467, -1.7881377516459906e-06, -0.0001419681793777272, -0.04451010003685951, -2.7381794452667236, -0.10991615056991577, -0.03325898200273514, -9.536697689327411e-06, -0.005013750400394201, -5.125986263010418e-06, -0.0006299418746493757, -0.0037009096704423428, -0.0013458014000207186, -0.00893227569758892, -0.0005359405186027288, -0.007040690630674362, -0.11864393949508667, -0.7549183368682861, -0.03068934939801693, -0.018519701436161995, -0.08191034942865372, -2.2936558723449707, -0.04761027172207832, -0.03390508517622948, -0.0004668337933253497, -0.0014078239910304546, -5.8412379075889476e-06, -1.0013530300057027e-05, -0.0015644703526049852, -0.002447825390845537, -3.349725011503324e-05, -0.0004798214649781585, -8.987976616481319e-05, -8.904537389753386e-05, -0.001747867907397449, -3.4570634852570947e-06, -1.1801649634435307e-05, -0.002893549157306552, -0.0016613503685221076, -7.152555099310121e-07, -5.960462772236497e-07, -5.602820692729438e-06, -0.00011586471373448148, -0.37521490454673767, -0.0001287377526750788, -0.8468937873840332, -0.0004864939546678215, -0.0004657614335883409, -0.04266161844134331, -0.0003980797773692757, -0.14051172137260437, -0.0025420039892196655, -3.933898824470816e-06, -5.483612312673358e-06, -0.332690566778183, -0.011172355152666569, -1.632554531097412], "finish_reason": "stop"}], "metrics": {"energy": 545.913467904091, "energy_per_token": 3.7136970605720476, "time": 12.40556, "time_per_token": 0.08439156462585033}}
{"outputs": [{"text": "# your solution here\n    # raise NotImplementedError\n    df['clean_text'] = df['text'].apply(\n        lambda x: re.sub('[^a-zA-Z0-9]+', '', x))\n    df['text_length'] = df['clean_text'].apply(lambda x: len(x))\n    return df", "tokens": ["#", " your", " solution", " here", "\n", "    ", "#", " raise", " Not", "Im", "plemented", "Error", "\n", "    ", "df", "['", "clean", "_", "text", "']", " =", " df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "'", ",", " ''", ",", " x", "))", "\n", "    ", "df", "['", "text", "_", "length", "']", " =", " df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -4.115728378295898, -2.9755446910858154, -0.15090055763721466, -0.03044411912560463, -0.07698028534650803, -1.567228078842163, -3.5332772731781006, -0.022465374320745468, -0.0001934579631779343, -0.0007447806419804692, -0.0019000587053596973, -0.5054128766059875, -0.2814052104949951, -2.9907169342041016, -2.1258416175842285, -0.05130397528409958, -0.0006693744799122214, -0.0003748429589904845, -0.0009322587866336107, -0.00884484127163887, -0.2424245923757553, -0.08046465367078781, -0.0018438971601426601, -9.679325739853084e-05, -0.009282644838094711, -0.31604957580566406, -0.0013497299514710903, -1.9591803550720215, -0.03709890693426132, -0.005213593598455191, -0.013476116582751274, -0.0009531007381156087, -0.09487520903348923, -5.590759246842936e-05, -0.003869309788569808, -1.0791525840759277, -0.15567655861377716, -0.042620949447155, -0.688076913356781, -6.01988795096986e-05, -6.3774932641536e-05, -0.002273238729685545, -1.4543427823809907e-05, -0.0043892948888242245, -0.20988427102565765, -0.0003110878460574895, -2.5629668016335927e-05, -1.6756137609481812, -0.005691157653927803, -0.00020466140995267779, -0.02085285261273384, -0.0001821352052502334, -0.04975093901157379, -0.25909438729286194, -0.033055439591407776, -0.042777784168720245, -0.023069094866514206, -0.009248864836990833, -0.022090677171945572, -0.0002563863235991448, -0.0012532960390672088, -0.00018749863374978304, -0.0008222059695981443, -0.005326603073626757, -0.003503258805721998, -0.06449577212333679, -6.6756979322235566e-06, -3.933898824470816e-06, -8.106198947643861e-06, -0.0003058442671317607, -0.38659870624542236, -5.006664650863968e-05, -0.11250250786542892, -0.0006037319544702768, -6.282132380874828e-05, -0.0015936305280774832, -0.00020859450160060078, -0.0050838482566177845, -0.0018086755881085992, -0.0007129749283194542, -0.15899263322353363, -0.06859711557626724, -0.010318975895643234, -0.15652726590633392, -0.021359998732805252, -1.2015694379806519], "finish_reason": "stop"}], "metrics": {"energy": 307.4786321239471, "energy_per_token": 3.5342371508499664, "time": 7.142083, "time_per_token": 0.08209290804597702}}
{"outputs": [{"text": "# Remove special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].str.replace(r'[^\\w\\s]', '').str.replace('[^\\w\\s]', '').str.replace('\\s+', '')\n    # Calculate length of cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["#", " Remove", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", ".", "str", ".", "replace", "('", "\\", "s", "+'", ",", " '", "')", "\n", "    ", "#", " Calculate", " length", " of", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -1.0158069133758545, -0.011223279871046543, -0.6156068444252014, -0.013804675079882145, -0.01040380448102951, -0.04679904505610466, -0.05699937045574188, -0.009188980795443058, -0.03207797557115555, -0.39829885959625244, -0.0027155925054103136, -0.32718154788017273, -0.00010382589971413836, -0.004265733994543552, -0.15505166351795197, -0.017531314864754677, -0.00014661667228210717, -0.00016234986833296716, -0.0006279165390878916, -0.001378896413370967, -0.02017851546406746, -1.1086402082582936e-05, -9.405170567333698e-05, -0.017394371330738068, -0.00047386385267600417, -0.00010692501382436603, -0.002012848388403654, -0.9105932712554932, -0.00010847456724150106, -0.06539037078619003, -0.1546413004398346, -0.04501348361372948, -0.19985154271125793, -0.04144672304391861, -0.8940283060073853, -0.0021899782586842775, -0.03027423657476902, -0.0004450284468475729, -0.12004154175519943, -0.0018893502419814467, -0.00014244495832826942, -0.7047778964042664, -0.005327907390892506, -0.25577208399772644, -0.010777952149510384, -1.585470999998506e-05, -0.00490390881896019, -1.3663291931152344, -3.5098845958709717, -1.1750500202178955, -0.0009647720726206899, -0.15970803797245026, -0.027449673041701317, -0.09577436000108719, -0.004212791565805674, -0.0002821285743266344, -0.3684253692626953, -0.012729343958199024, -0.028062446042895317, -0.0067075337283313274, -2.0265373677830212e-05, -0.0786711573600769, -0.1124311313033104, -0.1400245577096939, -0.19667871296405792, -0.031411975622177124, -0.00010632903286023065, -0.017595620825886726, -0.008643831126391888, -0.03938239812850952, -0.39606183767318726, -0.025745611637830734, -0.09425312280654907, -1.2298216819763184, -0.038758520036935806, -0.45803844928741455, -0.011993438936769962, -0.019946234300732613, -0.00019774865359067917, -0.0013987767742946744, -5.483612312673358e-06, -1.1086402082582936e-05, -0.001258772797882557, -0.0017685738857835531, -6.83045873302035e-05, -0.0009778724052011967, -0.0001284993631998077, -0.0005255748401395977, -0.0012693690368905663, -4.6491513785440475e-06, -1.5497195136049413e-06, -0.002130145439878106, -0.001738466788083315, -3.6954811548639555e-06, -1.2755313036905136e-05, -2.622600959512056e-06, -0.00011955977242905647, -0.2609221339225769, -9.894321920000948e-06, -0.0004285847535356879, -0.00011932138295378536, -0.0024012085050344467, -0.1472707986831665, -0.2756439745426178, -0.003036176785826683, -1.0013530300057027e-05, -1.2993727978027891e-05, -0.503717839717865, -0.017460443079471588, -1.2880945205688477], "finish_reason": "stop"}], "metrics": {"energy": 409.0515407943726, "energy_per_token": 3.6522458999497553, "time": 9.663999, "time_per_token": 0.08628570535714286}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "    ", "return", " input", "_", "df", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -0.34037303924560547, -0.01642339862883091, -0.007112777326256037, -0.06595612317323685, -0.00011801023356383666, -0.002781572053208947, -0.4542722702026367, -0.044864412397146225, -0.38346219062805176, -0.07636132091283798, -0.09695058315992355, -0.26752474904060364, -2.1576648578047752e-05, -8.34430247778073e-05, -0.0027435303200036287, -1.3947389561508317e-05, -0.0018286664271727204, -0.23928342759609222, -0.0005969410995021462, -3.838465272565372e-05, -0.2154952883720398, -0.0010490872664377093, -0.0005144941387698054, -0.08194966614246368, -0.0005976559477858245, -0.05235639959573746, -0.0701998621225357, -0.03890174254775047, -0.005644099321216345, -0.004779106471687555, -1.0490362910786644e-05, -4.136476854910143e-05, -0.005232923664152622, -0.029730629175901413, -0.0003507714136503637, -0.0015625660307705402, -0.00015567521040793508, -0.00158410903532058, -0.0012969900853931904, -7.152531907195225e-06, -1.0609570381348021e-05, -0.004403537139296532, -0.07968692481517792, -3.814689989667386e-06, -1.0967194612021558e-05, -6.794906312279636e-06, -0.00015937011630740017, -0.3586587607860565, -6.16293036728166e-05, -0.15794257819652557, -0.0013819915475323796, -0.001327467616647482, -0.00794950034469366, -0.0013659204123541713, -0.008625158108770847, -0.0054086544550955296, -0.0008746135863475502, -0.15967775881290436, -0.028712376952171326, -0.004603621084243059, -1.2874520507466514e-05, -1.5616295058862306e-05, -1.6060596704483032, -9.536738616588991e-07, -1.4305104514278355e-06, -1.6689286894688848e-06, -3.576272320060525e-06, -2.066041946411133, -0.0034430292434990406], "finish_reason": "stop"}], "metrics": {"energy": 293.0241566343308, "energy_per_token": 3.368093754417595, "time": 7.3694053, "time_per_token": 0.08470580804597702}}
{"outputs": [{"text": "# Remove special characters and spaces\n    input_df['clean_text'] = input_df['text'].str.replace(r'[^\\w\\s]+', '', regex=True).str.replace(r'\\s+', '', regex=True)\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].apply(len)\n    # Return the updated DataFrame\n    return input_df[['clean_text', 'text_length']]", "tokens": ["#", " Remove", " special", " characters", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]+", "'", ",", " ''", ",", " regex", "=", "True", ")", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " ''", ",", " regex", "=", "True", ")", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "len", ")", "\n", "    ", "#", " Return", " the", " updated", " Data", "Frame", "\n", "    ", "return", " input", "_", "df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]", "\n", "\n", "#"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -1.0158069133758545, -0.011223279871046543, -1.2572236061096191, -1.5889713764190674, -0.7986430525779724, -0.0026838495396077633, -0.14609628915786743, -9.929640509653836e-05, -0.0026021688245236874, -0.17746146023273468, -0.031051941215991974, -0.00026258357684127986, -0.00021181246847845614, -0.0007348936051130295, -0.0012513910187408328, -0.015836656093597412, -1.3708974620385561e-05, -6.23445157543756e-05, -0.016215110197663307, -0.0009704885887913406, -0.00010799778101500124, -0.0021955687552690506, -0.9056584239006042, -9.619726915843785e-05, -0.05073338374495506, -0.29971230030059814, -0.044235046952962875, -0.2439306676387787, -0.02553216740489006, -1.0805608034133911, -0.002531302161514759, -0.14651934802532196, -0.0014335366431623697, -1.3132930994033813, -0.14596784114837646, -0.00022837892174720764, -0.5219488143920898, -0.0013442536583170295, -0.008019865490496159, -0.006059963721781969, -0.0017414417816326022, -0.0077376640401780605, -0.3270690143108368, -0.005002244841307402, -1.2159273865108844e-05, -0.06299801915884018, -0.06542978435754776, -0.0017207353375852108, -0.01905563473701477, -0.0031822300516068935, -0.03563373163342476, -2.074220174108632e-05, -0.17771318554878235, -0.00014840454969089478, -0.005649196449667215, -0.0003093002596870065, -0.00014900050882715732, -0.00042703570215962827, -0.016786862164735794, -0.5196018815040588, -0.047398149967193604, -0.15267714858055115, -0.8648818135261536, -0.03760339692234993, -0.021697524935007095, -0.10114254057407379, -0.33079394698143005, -0.009480219334363937, -0.03565869480371475, -0.00013124081306159496, -0.0012455570977181196, -2.622600959512056e-06, -1.6093124941107817e-05, -0.0009155849111266434, -0.0022072256542742252, -4.351044481154531e-05, -0.001358896610327065, -5.3165931603871286e-05, -0.00030870441696606576, -0.0013778250431641936, -2.7418097943154862e-06, -1.0728830375228426e-06, -0.0011479223612695932, -0.002345907734706998, -1.0728830375228426e-06, -2.7418097943154862e-06, -1.9073468138230965e-06, -7.64102369430475e-05, -1.8408528566360474, -7.688703772146255e-05, -0.29217416048049927, -0.00031704644788987935, -0.0007260785205289721, -0.17012783885002136, -1.4921374320983887, -0.24451568722724915, -0.18377786874771118, -1.6393650770187378, -0.027062799781560898, -0.001167807262390852, -0.20299847424030304, -0.00198643677867949, -0.009884223341941833, -0.004700800403952599, -1.1086402082582936e-05, -9.059865078597795e-06, -1.3572616577148438, -0.0006717570940963924, -0.015767190605401993, -2.0861407392658293e-05, -2.396077979938127e-05, -6.580135959666222e-05, -8.856858039507642e-05, -0.036040645092725754, -4.160317621426657e-05, -1.8596476365928538e-05, -9.298280929215252e-06, -0.00012790338951162994, -0.32889166474342346, -0.13518407940864563, -0.013454475440084934, -2.0108048915863037], "finish_reason": "stop"}], "metrics": {"energy": 419.9285320243835, "energy_per_token": 3.3865204195514798, "time": 10.314073, "time_per_token": 0.08317800806451613}}
{"outputs": [{"text": "# remove all special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].str.replace(r'[^a-zA-Z0-9]+', '')\n    # calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df[['clean_text', 'text_length']]", "tokens": ["#", " remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "'", ",", " '", "')", "\n", "    ", "#", " calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9717797040939331, -2.4395599365234375, -1.049234390258789, -0.10090257227420807, -0.007774215191602707, -0.1712687462568283, -0.018890593200922012, -0.006379951722919941, -0.01134409848600626, -0.041416872292757034, -0.011406918056309223, -0.01302426028996706, -0.441140741109848, -0.0028811870142817497, -0.29601985216140747, -0.0001267114421352744, -0.0037627865094691515, -0.19377268850803375, -0.024382131174206734, -0.00017331528943032026, -0.00015448330668732524, -0.0006049233488738537, -0.002240292262285948, -0.02609211578965187, -2.0503786799963564e-05, -4.95898348162882e-05, -0.025307519361376762, -0.0006001578294672072, -9.452849917579442e-05, -0.002105759223923087, -1.0014169216156006, -0.00015186110977083445, -0.07190222293138504, -0.271614670753479, -0.041094060987234116, -0.2137380987405777, -0.037311047315597534, -0.4310683608055115, -0.3778477609157562, -2.4318398573086597e-05, -5.328513361746445e-05, -0.0016299308044835925, -1.7762025890988298e-05, -0.0014043716946616769, -0.26196572184562683, -0.0017748808022588491, -3.2543604902457446e-05, -0.7788548469543457, -0.003169277450069785, -0.0006808108882978559, -0.1184827908873558, -0.0027295020408928394, -0.027068020775914192, -0.3237558603286743, -0.04867589846253395, -0.20104046165943146, -0.22556732594966888, -0.013120859861373901, -0.009689679369330406, -0.0576055608689785, -0.142913818359375, -0.010407579131424427, -0.025774888694286346, -0.0002797450579237193, -0.0018193849828094244, -5.8412379075889476e-06, -1.168244216387393e-05, -0.0016794399125501513, -0.0015923213213682175, -4.95898348162882e-05, -0.0012952042743563652, -0.00017557987303007394, -0.0008174415561370552, -0.0022632479667663574, -5.364403477869928e-06, -2.145764938177308e-06, -0.0024328415747731924, -0.002299642888829112, -2.3841830625315197e-06, -5.364403477869928e-06, -3.576272320060525e-06, -3.123234637314454e-05, -0.34002700448036194, -1.1086402082582936e-05, -0.00040904260822571814, -0.0002733095607254654, -0.002412862842902541, -0.20153690874576569, -0.24113094806671143, -0.0025729192420840263, -8.4638240878121e-06, -6.6756979322235566e-06, -2.0227487087249756, -0.0018284284742549062, -0.020720332860946655, -2.6225699912174605e-05, -3.4689302992774174e-05, -6.305972783593461e-05, -0.00017295771976932883, -0.05055127665400505, -5.352353764465079e-05, -4.0411134250462055e-05, -5.364403477869928e-06, -0.000105375460407231, -1.1450550556182861, -2.50339189733495e-06, -1.4305104514278355e-06, -2.145764938177308e-06, -4.887569048150908e-06, -0.2037460058927536], "finish_reason": "stop"}], "metrics": {"energy": 386.59002735519414, "energy_per_token": 3.5144547941381283, "time": 9.259562, "time_per_token": 0.08417783636363638}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].str.replace(r'[^\\w\\s]', '').str.replace(r'\\d', '').str.replace(r'\\n', '').str.replace(r'\\s+', '')\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'\\", "d", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'\\", "n", "'", ",", " '", "')", ".", "str", ".", "replace", "(", "r", "'\\", "s", "+'", ",", " '", "')", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -1.0344436168670654, -0.00030620177858509123, -0.05165475606918335, -0.2199106216430664, -0.07407857477664948, -0.3812732994556427, -0.0630665197968483, -1.160154104232788, -0.010335847735404968, -0.3087499737739563, -0.0013604442356154323, -0.13435617089271545, -0.0010570659069344401, -0.0006294653285294771, -0.43546804785728455, -0.00747242197394371, -0.24815794825553894, -0.016856256872415543, -2.8729025871143676e-05, -0.013663575053215027, -0.14113850891590118, -0.004435344599187374, -0.1274600476026535, -0.4517853558063507, -0.3268034756183624, -8.964136941358447e-05, -0.019446203485131264, -0.002500266768038273, -0.011468791402876377, -0.00471764849498868, -1.6569954823353328e-05, -0.026199886575341225, -0.029876653105020523, -0.010577566921710968, -0.0070827123709023, -0.7846640944480896, -3.099436753473128e-06, -5.8412379075889476e-06, -0.0018662670627236366, -0.006991683039814234, -0.0033671134151518345, -0.0036751364823430777, -1.847726889536716e-05, -0.03680434450507164, -0.014319520443677902, -0.002648538677021861, -0.015566393733024597, -0.24376915395259857, -0.5496238470077515, -6.139089964563027e-05, -0.0019828674849122763, -0.010194375179708004, -0.3126542866230011, -0.008238025940954685, -0.005622050724923611, -1.0490362910786644e-05, -3.373566141817719e-05, -0.005780409090220928, -0.01379409246146679, -0.0004601611872203648, -0.0013179434463381767, -0.00011777184408856556, -0.0022388650104403496, -0.005275021307170391, -1.4185804502631072e-05, -3.099436753473128e-06, -0.0061887530609965324, -0.019524531438946724, -2.50339189733495e-06, -2.0503786799963564e-05, -2.622600959512056e-06, -0.00038068200228735805, -0.19237320125102997, -3.099393507000059e-05, -0.0011138670379295945, -9.417090768693015e-05, -0.003356063971295953, -0.1661754846572876, -0.03941494598984718, -0.005229603033512831, -1.2516897186287679e-05, -2.2172682292875834e-05, -0.5360969305038452, -0.017384998500347137, -0.8217015266418457], "finish_reason": "stop"}], "metrics": {"energy": 357.73298336029046, "energy_per_token": 3.5419107263395095, "time": 8.420811, "time_per_token": 0.08337436633663367}}
{"outputs": [{"text": "# Create a copy of the original DataFrame\n    df = input_df.copy()\n\n    # Apply the cleaning function to the 'text' column\n    df['clean_text'] = df['text'].apply(lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n\n    # Calculate the length of the cleaned text\n    df['text_length'] = df['clean_text'].apply(lambda x: len(x))\n\n    # Return the modified DataFrame\n    return df", "tokens": ["#", " Create", " a", " copy", " of", " the", " original", " Data", "Frame", "\n", "    ", "df", " =", " input", "_", "df", ".", "copy", "()", "\n", "\n", "    ", "#", " Apply", " the", " cleaning", " function", " to", " the", " '", "text", "'", " column", "\n", "    ", "df", "['", "clean", "_", "text", "']", " =", " df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "df", "['", "text", "_", "length", "']", " =", " df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "#", " Return", " the", " modified", " Data", "Frame", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -3.201333999633789, -0.212297260761261, -1.1039621829986572, -0.008943617343902588, -0.03787281736731529, -1.9352657794952393, -0.09324900805950165, -0.002747215796262026, -0.3670836389064789, -0.0021686863619834185, -0.8799680471420288, -0.04267269745469093, -0.0006467396160587668, -8.702239938429557e-06, -8.344646857949556e-07, -0.003653876017779112, -0.0002203936892328784, -0.007938028313219547, -0.0016176722710952163, -0.18442769348621368, -0.00078671018127352, -0.01055232435464859, -3.2198550701141357, -0.46001237630844116, -0.6027396321296692, -0.08276514708995819, -0.10297301411628723, -0.12712091207504272, -0.06598569452762604, -0.003947918768972158, -0.00048423008411191404, -0.0017839246429502964, -0.24602794647216797, -0.0005491655902005732, -0.038778241723775864, -0.04839392378926277, -0.017868613824248314, -0.00016366096679121256, -0.00010668662434909493, -0.0004764852055814117, -0.000824349990580231, -0.031890127807855606, -0.018787294626235962, -0.0007653883076272905, -9.715084888739511e-05, -0.0008697302546352148, -0.044654667377471924, -0.0031205550767481327, -0.35833683609962463, -0.023243000730872154, -0.003980215173214674, -0.1154303103685379, -0.00017581824795342982, -0.0031731990166008472, -0.4125729501247406, -0.01970197632908821, -0.4302520155906677, -0.09547025710344315, -0.1695595234632492, -0.2205834835767746, -1.9192511899746023e-05, -4.1126360883936286e-05, -0.0026289208326488733, -1.168244216387393e-05, -0.0013800868764519691, -0.18195019662380219, -0.0002965487365145236, -2.539125671319198e-05, -0.1633559912443161, -0.0009787060553207994, -0.00018082413589581847, -0.03335307165980339, -0.00022682955022901297, -0.033416714519262314, -0.10442478209733963, -0.006574074272066355, -0.17389926314353943, -0.00035470392322167754, -0.0010481346398591995, -0.18511484563350677, -0.037489842623472214, -0.05434209108352661, -0.0034490879625082016, -0.15720981359481812, -0.080147385597229, -0.028113098815083504, -0.3048281669616699, -9.440929716220126e-05, -0.0016809870721772313, -0.0004954302567057312, -0.002864545676857233, -5.519237674889155e-05, -0.0010993395699188113, -9.846202738117427e-05, -0.00012861855793744326, -0.0014611531514674425, -0.0009111781837418675, -0.0017256144201382995, -1.4305104514278355e-06, -1.311301275563892e-06, -1.7881377516459906e-06, -0.00021491125517059118, -0.3439672887325287, -2.312633478140924e-05, -0.17295460402965546, -0.0004985281848348677, -0.0001915509783430025, -0.0029805542435497046, -0.0004999579978175461, -0.017220618203282356, -0.003330638399347663, -0.000248401309363544, -0.009445029310882092, -0.0002330270071979612, -0.9004807472229004, -0.3439807891845703, -0.0194182600826025, -0.9556822180747986, -0.0014621054287999868, -0.00011944057769142091, -0.17670319974422455, -0.0006874820101074874, -0.0039575365372002125, -0.0018736441852524877, -0.27885210514068604, -0.010258683934807777, -1.5068995952606201], "finish_reason": "stop"}], "metrics": {"energy": 482.6257101535794, "energy_per_token": 3.770513360574839, "time": 10.728559, "time_per_token": 0.0838168671875}}
{"outputs": [{"text": "import re\n    import pandas as pd\n\n    df = input_df.copy()\n\n    # Remove all special characters, punctuation marks, and spaces\n    df['clean_text'] = df['text'].apply(lambda x: re.sub(r'[^\\w\\s]', '', x).replace(\" \", \"\"))\n\n    # Calculate the length of the cleaned text\n    df['text_length'] = df['clean_text'].apply(lambda x: len(x))\n\n    return df[['clean_text', 'text_length']]", "tokens": ["import", " re", "\n", "    ", "import", " pandas", " as", " pd", "\n", "\n", "    ", "df", " =", " input", "_", "df", ".", "copy", "()", "\n", "\n", "    ", "#", " Remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "df", "['", "clean", "_", "text", "']", " =", " df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^\\", "w", "\\", "s", "]", "'", ",", " ''", ",", " x", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "\"", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "df", "['", "text", "_", "length", "']", " =", " df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "return", " df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-3.0380325317382812, -0.10868878662586212, -0.030441690236330032, -0.09838388860225677, -0.17160196602344513, -0.0026638756971806288, -0.0008798541966825724, -9.154854342341423e-05, -0.001142564113251865, -0.21235992014408112, -0.0024114358238875866, -3.128610849380493, -0.045707616955041885, -0.008190377615392208, -5.07818695041351e-05, -3.242440288886428e-05, -0.06896758079528809, -0.0013468727702274919, -0.019055284559726715, -0.08006860315799713, -0.7691558599472046, -0.001210671616718173, -0.5120396614074707, -0.7680827379226685, -0.8300485014915466, -0.059661172330379486, -0.004723462276160717, -0.2936629354953766, -0.01242162473499775, -0.0040893275290727615, -0.008270775899291039, -0.032999731600284576, -0.007742513902485371, -0.012761476449668407, -0.32904720306396484, -0.0012868703342974186, -0.04275904968380928, -0.02754129283130169, -0.0116654634475708, -9.667406266089529e-05, -9.16677454370074e-05, -0.00033468366018496454, -0.0004957877099514008, -0.02737625315785408, -0.01106307003647089, -0.0004825619689654559, -3.325883881188929e-05, -0.0008228015503846109, -0.4687519073486328, -0.0006936766440048814, -0.08949433267116547, -0.010286647826433182, -0.0021604786161333323, -0.03352819383144379, -2.276871418871451e-05, -0.0005561950383707881, -0.2887812852859497, -0.008595965802669525, -0.20227861404418945, -0.06419340521097183, -1.804215908050537, -0.002064717700704932, -0.01985671930015087, -0.00010549465514486656, -0.06918808817863464, -0.016756031662225723, -0.00011276562872808427, -0.05368918180465698, -0.0002060916303889826, -0.8127979040145874, -0.39593836665153503, -0.0015919642755761743, -0.13665267825126648, -0.38189685344696045, -0.0008831891464069486, -0.00524122454226017, -3.0874729418428615e-05, -0.05157403275370598, -0.00024136967840604484, -0.03317710757255554, -0.004395585507154465, -0.05356139317154884, -0.0004681444843299687, -0.0018068907083943486, -0.05324168875813484, -0.14257502555847168, -0.012931299395859241, -0.004118414130061865, -0.04521198570728302, -0.10651549696922302, -0.0031589390709996223, -0.031444668769836426, -0.00022206225548870862, -0.0009846605826169252, -0.0004343043256085366, -0.0009257083875127137, -2.5033637939486653e-05, -0.0008364992681890726, -5.674201020156033e-05, -0.00016389934171456844, -0.0011152960360050201, -0.0006150499684736133, -0.0022879871539771557, -1.1920922133867862e-06, -1.311301275563892e-06, -1.0728830375228426e-06, -5.113947918289341e-05, -0.2258618324995041, -9.059865078597795e-06, -0.2352345585823059, -0.00027509720530360937, -0.0001902399235405028, -0.002849211450666189, -0.0006437613046728075, -0.011064366437494755, -0.0029157765675336123, -0.0003164505760651082, -0.0105531495064497, -0.0001501924270996824, -0.048623211681842804, -0.0020584126468747854, -1.6898083686828613, -0.0006344689172692597, -0.008536279201507568, -1.2755313036905136e-05, -6.6756979322235566e-06, -2.90866428258596e-05, -6.592056161025539e-05, -0.014086814597249031, -3.0517112463712692e-05, -2.1457441107486375e-05, -6.318072337307967e-06, -6.961580220377073e-05, -1.33930242061615, -1.0251946150674485e-05, -1.311301275563892e-06, -2.622600959512056e-06, -2.50339189733495e-06, -0.1655949056148529], "finish_reason": "stop"}], "metrics": {"energy": 519.8788088550567, "energy_per_token": 3.740135315504005, "time": 11.788329, "time_per_token": 0.08480812230215827}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].str.replace(r'[^A-Za-z0-9 ]', '')\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "(", "r", "'", "[", "^", "A", "-", "Z", "a", "-", "z", "0", "-", "9", " ]", "'", ",", " '", "')", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -1.0344436168670654, -0.00030620177858509123, -0.05165475606918335, -0.2199106216430664, -0.07407857477664948, -0.3812732994556427, -0.0630665197968483, -0.38872507214546204, -1.143734097480774, -0.00022742546570952982, -0.0021402565762400627, -0.005268973298370838, -6.198863957251888e-06, -7.56950321374461e-05, -0.05020611733198166, -0.0034380394499748945, -0.00017188502533826977, -2.9408867359161377, -0.25924286246299744, -0.0008088654140010476, -0.3961296081542969, -0.0041636452078819275, -0.5492900609970093, -0.0033639054745435715, -0.009223470464348793, -7.748573807475623e-06, -6.949660019017756e-05, -0.006973689422011375, -0.755765438079834, -0.005249407142400742, -0.00040999590419232845, -0.00014911970356479287, -0.0016590891173109412, -0.004319623112678528, -1.4662635294371285e-05, -2.9802276912960224e-06, -0.004814935382455587, -0.0249381884932518, -2.145764938177308e-06, -1.3112935448589269e-05, -7.152531907195225e-06, -0.0005231918767094612, -0.485087513923645, -2.3245540432981215e-05, -0.03408230096101761, -0.00018130090029444546, -0.004417660646140575, -0.15139956772327423, -0.03042422980070114, -0.005388971883803606, -1.6927575416048057e-05, -2.0265373677830212e-05, -0.5046069622039795, -0.01637309044599533, -1.0657312870025635], "finish_reason": "stop"}], "metrics": {"energy": 240.29530766677857, "energy_per_token": 3.384440953053219, "time": 5.8998775, "time_per_token": 0.0830968661971831}}
{"outputs": [{"text": "def text_prep(text):\n        # Remove all special characters, punctuation marks, and spaces\n        text_preprocessed = re.sub(r'[^a-zA-Z0-9]', '', text)\n\n        # Calculate the length of the preprocessed text\n        text_length = len(text_preprocessed)\n\n        # Return the preprocessed text and its length\n        return text_preprocessed, text_length\n\n    # Apply the text_prep function to each row in the DataFrame\n    input_df[['clean_text', 'text_length']] = input_df['text'].apply(text_prep).apply(pd.Series)\n\n    # Drop the original 'text' column\n    input_df.drop('text', axis=1, inplace=True)\n\n    return input_df", "tokens": ["def", " text", "_", "pre", "p", "(", "text", "):", "\n", "        ", "#", " Remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "        ", "text", "_", "pre", "processed", " =", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " text", ")", "\n", "\n", "        ", "#", " Calculate", " the", " length", " of", " the", " pre", "processed", " text", "\n", "        ", "text", "_", "length", " =", " len", "(", "text", "_", "pre", "processed", ")", "\n", "\n", "        ", "#", " Return", " the", " pre", "processed", " text", " and", " its", " length", "\n", "        ", "return", " text", "_", "pre", "processed", ",", " text", "_", "length", "\n", "\n", "    ", "#", " Apply", " the", " text", "_", "pre", "p", " function", " to", " each", " row", " in", " the", " Data", "Frame", "\n", "    ", "input", "_", "df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "text", "_", "pre", "p", ")", ".", "apply", "(", "pd", ".", "Series", ")", "\n", "\n", "    ", "#", " Drop", " the", " original", " '", "text", "'", " column", "\n", "    ", "input", "_", "df", ".", "drop", "('", "text", "'", ",", " axis", "=", "1", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-3.1520395278930664, -3.315971612930298, -0.019518569111824036, -2.9311583042144775, -2.2933528423309326, -0.058102622628211975, -0.525709331035614, -0.09349016845226288, -0.008016318082809448, -0.04493963345885277, -1.630782127380371, -0.8314691781997681, -0.8818418383598328, -0.11821262538433075, -0.006114467047154903, -0.7473565936088562, -0.011244261637330055, -0.005839312914758921, -0.009889534674584866, -0.03675413131713867, -0.017942851409316063, -0.024215521290898323, -0.24882294237613678, -0.002117179101333022, -1.3649811744689941, -2.4122202396392822, -2.726055860519409, -3.0098421573638916, -0.013732010498642921, -0.042142417281866074, -6.12716976320371e-05, -0.006414894014596939, -0.3658882677555084, -0.019901476800441742, -0.4292389154434204, -0.03251253440976143, -0.24121664464473724, -0.4164866507053375, -1.8715683836489916e-05, -4.851700214203447e-05, -0.0051826415583491325, -2.2053474822314456e-05, -0.0025536566972732544, -0.42676013708114624, -0.0007353700930252671, -5.507317473529838e-05, -0.23973901569843292, -0.001110771088860929, -0.00028236693469807506, -0.07213571667671204, -0.00021753329201601446, -0.010526962578296661, -0.02854613959789276, -0.01564561389386654, -1.491020679473877, -0.001831641187891364, -0.7208130359649658, -0.4616190195083618, -0.2732316851615906, -0.021147483959794044, -0.013233567588031292, -0.027755700051784515, -2.2819266319274902, -0.017780786380171776, -0.04148492217063904, -0.021095193922519684, -0.000644237850792706, -0.2593640089035034, -0.0008524598088115454, -0.1302981972694397, -0.011619274504482746, -0.004239500500261784, -0.0004605186404660344, -0.0009847796754911542, -0.0021067108027637005, -5.006777428206988e-06, -2.13382354559144e-05, -0.0015143604250624776, -0.001347587094642222, -0.08488932996988297, -0.0006401873542927206, -1.852737307548523, -0.22095170617103577, -0.2035105675458908, -0.08137355744838715, -0.0014105618465691805, -0.004904027562588453, -0.021864088252186775, -0.08181335777044296, -0.0016627785516902804, -0.18993119895458221, -0.0009648911654949188, -0.004534557461738586, -0.19220609962940216, -0.000648883986286819, -0.010780900716781616, -0.00017212340026162565, -0.001589702907949686, -0.002228992525488138, -1.1324817933200393e-05, -1.7523612768854946e-05, -0.00019202772818971425, -0.007653911132365465, -0.0019207615405321121, -0.2245962768793106, -0.16246749460697174, -0.0954270213842392, -0.22249417006969452, -0.2649914622306824, -0.005402488633990288, -0.00801442563533783, -0.03868305683135986, -0.06300574541091919, -0.8487890362739563, -0.10886842012405396, -0.8486942648887634, -0.013332734815776348, -1.0967421531677246, -0.001313776709139347, -0.48617488145828247, -0.0004275123355910182, -0.5094674229621887, -4.0411134250462055e-05, -0.00041786045767366886, -2.1972172260284424, -0.10559764504432678, -0.01646256633102894, -0.000163541772053577, -8.475421054754406e-05, -0.0006217215559445322, -0.00016556799528189003, -0.00799337588250637, -0.0016036281595006585, -5.328513361746445e-05, -0.000681883015204221, -0.0002115741081070155, -0.00031859567388892174, -0.00019012074335478246, -0.0028287656605243683, -1.4543427823809907e-05, -1.3708974620385561e-05, -0.03170362859964371, -0.0004328744253143668, -0.00010001159535022452, -0.0003721021639648825, -0.0013808010844513774, -0.00012027494085486978, -0.2429829090833664, -5.960446742392378e-06, -8.046303264563903e-05, -1.645074735279195e-05, -0.0017794027226045728, -0.12756802141666412, -0.17425794899463654, -6.9141146923357155e-06, -9.464769391342998e-05, -2.253030106658116e-05, -0.0007524043321609497, -0.001257344032637775, -0.001116724917665124, -0.07265088707208633, -0.0005259322933852673, -0.21097001433372498, -1.102017879486084, -0.020430363714694977, -0.03222954273223877, -0.20885354280471802, -0.0010251511121168733, -0.00023648326168768108, -0.0005099665140733123, -0.0960862785577774, -0.0002649671514518559, -0.2862195074558258, -2.4914430468925275e-05, -0.00023910524032544345, -0.4408908784389496, -0.004321878310292959, -0.5036731958389282, -0.00020859450160060078, -0.00010442188795423135, -7.629103492945433e-05, -0.004980656784027815, -0.0074725402519106865, -6.8662193370983e-05, -0.01213147770613432, -2.276871418871451e-05, -1.3947389561508317e-05, -0.0006003961316309869, -0.0012218636693432927, -0.0003641180810518563, -0.000525217386893928, -0.02890036068856716, -0.0005124686285853386, -0.3868309259414673, -0.0010894560255110264, -2.50339189733495e-06, -5.960446742392378e-06, -0.22906148433685303, -0.009101096540689468, -0.7195872068405151], "finish_reason": "stop"}], "metrics": {"energy": 714.1318755931857, "energy_per_token": 3.5706593779659284, "time": 17.133646, "time_per_token": 0.08566823}}
{"outputs": [{"text": "import re\n    import pandas as pd\n\n    input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(r\"[^a-zA-Z0-9]\", \"\", x))\n    input_df['text_length'] = input_df['clean_text'].str.len()\n\n    return input_df", "tokens": ["import", " re", "\n", "    ", "import", " pandas", " as", " pd", "\n", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "r", "\"", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]\"", ",", " \"", "\"", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-3.0380325317382812, -0.10868878662586212, -0.030441690236330032, -0.09838388860225677, -0.17160196602344513, -0.0026638756971806288, -0.0008798541966825724, -9.154854342341423e-05, -0.001142564113251865, -0.21235992014408112, -0.0024114358238875866, -1.2724735736846924, -0.0005906267906539142, -0.026014067232608795, -0.14387230575084686, -0.037566885352134705, -0.0003873551613651216, -0.0002648479712661356, -0.0005691815749742091, -0.004162932746112347, -0.013729071244597435, -2.1457441107486375e-05, -1.3470558769768104e-05, -0.02497609332203865, -0.0008013612823560834, -7.92710343375802e-05, -0.011072147637605667, -0.30726054310798645, -0.002954762661829591, -0.19449712336063385, -0.014692206867039204, -0.005762037821114063, -0.022764308378100395, -6.12716976320371e-05, -0.0027655235026031733, -0.3420105576515198, -0.015919608995318413, -2.474231004714966, -0.21739202737808228, -0.047760188579559326, -0.231736421585083, -0.0001618731184862554, -8.332382276421413e-05, -0.004165188409388065, -6.198863957251888e-06, -0.0025285673327744007, -0.1433357447385788, -0.001141611486673355, -8.356221951544285e-05, -0.7710225582122803, -0.0002708068350329995, -0.1516425758600235, -0.0014922209084033966, -0.00047803416964598, -0.04887833073735237, -0.03915705904364586, -0.04089668393135071, -0.0228723231703043, -0.0048596602864563465, -7.390948667307384e-06, -3.4450891689630225e-05, -0.004530997481197119, -0.01797434873878956, -0.0002516191452741623, -0.002025577938184142, -0.00011920218821614981, -0.0013679441763088107, -0.001347706071101129, -6.318072337307967e-06, -4.887569048150908e-06, -0.0035598021931946278, -0.05209899693727493, -3.4570634852570947e-06, -9.894321920000948e-06, -6.556489552167477e-06, -0.00020168177434243262, -1.3988372087478638, -3.8980677345534787e-05, -0.0017838055500760674, -0.00010871296399272978, -0.0032096796203404665, -0.5624330043792725, -0.0006971312686800957, -0.028489600867033005, -0.004697477910667658, -9.179073458653875e-06, -1.3708974620385561e-05, -0.48019134998321533, -0.014820946380496025, -1.2901520729064941], "finish_reason": "stop"}], "metrics": {"energy": 324.84798732852914, "energy_per_token": 3.6094220814281015, "time": 7.9707623, "time_per_token": 0.08856402555555555}}
{"outputs": [{"text": "# Use regular expression to remove special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].str.replace('[^a-zA-Z0-9]', '')\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["#", " Use", " regular", " expression", " to", " remove", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " '", "')", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-0.9717797040939331, -4.028432846069336, -0.8470569849014282, -0.8845759630203247, -0.07174967229366302, -0.40957993268966675, -0.34956681728363037, -0.007968303747475147, -0.266068696975708, -0.02647564932703972, -0.015657702460885048, -0.054400574415922165, -0.052258651703596115, -0.021186232566833496, -0.023853817954659462, -0.22405751049518585, -0.0023679095320403576, -0.22251354157924652, -0.0001006075763143599, -0.001653733546845615, -0.14497104287147522, -0.015669437125325203, -0.00014840454969089478, -0.00013374387344811112, -0.0004002247005701065, -0.0013048476539552212, -0.0067904191091656685, -1.847726889536716e-05, -3.6954811548639555e-06, -0.01634564809501171, -0.0005980133428238332, -9.810443589231e-05, -0.0008008848526515067, -0.5141908526420593, -4.8636207793606445e-05, -0.055313047021627426, -1.9644255638122559, -0.07679207623004913, -0.5251209735870361, -0.3762102425098419, -1.4424220353248529e-05, -3.8265450712060556e-05, -0.001737157697789371, -5.006777428206988e-06, -0.0008713977294974029, -0.27317988872528076, -0.000592890428379178, -2.6940935640595853e-05, -0.32163289189338684, -0.0007251255447044969, -0.00029702542815357447, -0.09907931089401245, -0.0005891970940865576, -0.02136956714093685, -0.3626779019832611, -0.14147241413593292, -0.1530134528875351, -0.34326496720314026, -0.017340010032057762, -0.00964339915663004, -0.0844210758805275, -0.13595648109912872, -0.009266464039683342, -0.05432334914803505, -0.00014184899919200689, -0.00121174321975559, -6.198863957251888e-06, -1.0132738680113107e-05, -0.001303776167333126, -0.0013444918440654874, -4.362964682513848e-05, -0.0016236230731010437, -8.630380034446716e-05, -0.0005790702416561544, -0.0014859121292829514, -6.318072337307967e-06, -8.344646857949556e-07, -0.0011366104008629918, -0.0022011594846844673, -1.7881377516459906e-06, -2.145764938177308e-06, -2.0265558760002023e-06, -2.90866428258596e-05, -0.36942318081855774, -5.8412379075889476e-06, -0.0002748588449321687, -0.00010346830822527409, -0.0014753182185813785, -0.14089873433113098, -0.2637613117694855, -0.0021029042545706034, -9.179073458653875e-06, -6.794906312279636e-06, -0.41989827156066895, -0.017835592851042747, -1.3548235893249512], "finish_reason": "stop"}], "metrics": {"energy": 328.8676467037199, "energy_per_token": 3.425704653163749, "time": 7.9977226, "time_per_token": 0.08330961041666667}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub(r'\\W+', '', x).replace(\" \", \"\")\n    )\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'\\", "W", "+'", ",", " ''", ",", " x", ")", ".", "replace", "(", "\"", " \"", ",", " \"", "\"", ")", "\n", "    ", ")", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -1.337031364440918, -0.044538263231515884, -0.012079774402081966, -0.031162645667791367, -0.002136925933882594, -0.13574834167957306, -0.0001209901092806831, -0.003323272103443742, -0.4218537509441376, -0.05672243610024452, -1.3813536167144775, -0.09738381206989288, -0.058978121727705, -0.00011359999916749075, -0.021746518090367317, -0.00015627116954419762, -0.04292328655719757, -0.931986391544342, -0.5500654578208923, -0.9363594055175781, -0.548200786113739, -0.026773851364850998, -0.0584721639752388, -1.764281842042692e-05, -0.014683043584227562, -0.0005449955351650715, -1.1949098110198975, -0.09689908474683762, -0.0488758310675621, -6.508615479106084e-05, -0.014224094338715076, -0.07454151660203934, -0.009615062735974789, -9.536697689327411e-06, -3.397406908334233e-05, -0.01860255002975464, -0.00449741305783391, -0.0002416080387774855, -0.0022255433723330498, -0.00010835537250386551, -0.0006485265912488103, -0.0030706420075148344, -1.1444026313256472e-05, -1.5497195136049413e-06, -0.02209685742855072, -0.08346734941005707, -2.264974000354414e-06, -3.3378546504536644e-06, -1.8596476365928538e-05, -0.00032062159152701497, -1.3080666065216064, -2.8013790142722428e-05, -0.0010971962474286556, -0.0012335318606346846, -0.006381846498697996, -0.20876561105251312, -0.04445890337228775, -0.00332065811380744, -1.0490362910786644e-05, -7.271740287251305e-06, -0.47315680980682373, -0.008591711521148682, -0.7736135125160217], "finish_reason": "stop"}], "metrics": {"energy": 290.1588553142548, "energy_per_token": 3.582208090299442, "time": 6.726706, "time_per_token": 0.08304575308641976}}
{"outputs": [{"text": "# clean the text by removing special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].str.replace('[^\\w\\s]', '').str.replace('\\d', '').str.strip()\n    # calculate length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["#", " clean", " the", " text", " by", " removing", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "str", ".", "replace", "('", "[", "^\\", "w", "\\", "s", "]", "'", ",", " '", "')", ".", "str", ".", "replace", "('", "\\", "d", "'", ",", " '", "')", ".", "str", ".", "strip", "()", "\n", "    ", "#", " calculate", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "if"], "logprobs": [-0.9717797040939331, -4.240129470825195, -0.7102936506271362, -0.14714661240577698, -1.8930425643920898, -0.03469137102365494, -0.8111094236373901, -0.011647789739072323, -0.16784211993217468, -0.025791501626372337, -0.013202744536101818, -0.04220996052026749, -0.07494352757930756, -0.01173026580363512, -0.02704794704914093, -0.08660175651311874, -0.0027119070291519165, -0.35559141635894775, -0.00011312322021694854, -0.002916489727795124, -0.1424674242734909, -0.013584432192146778, -0.0002203936892328784, -0.00019667598826345056, -0.000446696620201692, -0.002032478107139468, -0.019110487774014473, -1.8358061424805783e-05, -3.3378044463461265e-05, -0.01602906920015812, -0.0005837167263962328, -0.00011038171214750037, -0.0037587485276162624, -1.1355684995651245, -0.0002079985715681687, -0.08526158332824707, -1.698142647743225, -0.06992945075035095, -0.5328330397605896, -0.0003077510336879641, -0.016076697036623955, -0.005045775789767504, -0.10898900777101517, -0.002080539707094431, -0.0006706849089823663, -0.9256995916366577, -0.019236555323004723, -0.21764099597930908, -0.0118802385404706, -3.0517112463712692e-05, -0.015238296240568161, -0.011334904469549656, -0.13368183374404907, -0.6515538096427917, -0.44940176606178284, -0.00011181206355104223, -0.02156103402376175, -0.004488037899136543, -0.01144969929009676, -0.006114230025559664, -3.0040289857424796e-05, -2.9301514625549316, -0.006216001696884632, -0.0238441564142704, -0.6042973399162292, -0.034454260021448135, -0.1706055849790573, -2.966599225997925, -0.027636965736746788, -0.942385733127594, -0.5388318300247192, -0.016324538737535477, -0.03611205145716667, -0.000266278104390949, -0.0016120783984661102, -4.291525328881107e-06, -1.0847986231965479e-05, -0.0021282420493662357, -0.0029659350402653217, -7.962863310240209e-05, -0.001437702914699912, -0.00013016807497479022, -0.0005158047424629331, -0.0039879330433905125, -7.152531907195225e-06, -2.0265558760002023e-06, -0.0036701480858027935, -0.00456778472289443, -1.9073468138230965e-06, -3.3378546504536644e-06, -5.006777428206988e-06, -0.00022075122979003936, -0.25618481636047363, -1.5139465176616795e-05, -0.0027430548798292875, -0.0001720042055239901, -0.0021848634351044893, -0.20998650789260864, -0.2917582392692566, -0.0022110319696366787, -7.986990567587782e-06, -1.1920858014491387e-05, -0.47626063227653503, -0.011378396302461624, -0.9650492072105408], "finish_reason": "stop"}], "metrics": {"energy": 363.14735530090326, "energy_per_token": 3.4585462409609833, "time": 9.036535, "time_per_token": 0.08606223809523811}}
{"outputs": [{"text": "df = input_df.copy()\n    df['clean_text'] = input_df['text'].apply(lambda x: re.sub('[^a-zA-Z0-9 ]', '', x))\n    df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n    return df", "tokens": ["df", " =", " input", "_", "df", ".", "copy", "()", "\n", "    ", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", " ]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-3.261216163635254, -0.07283300906419754, -0.008392187766730785, -4.541770613286644e-05, -2.4318398573086597e-05, -0.04066344350576401, -0.0022948854602873325, -0.015260368585586548, -0.053445007652044296, -0.1752132773399353, -0.2847665846347809, -0.12107773870229721, -0.04938916489481926, -0.0002470903273206204, -0.0003361137059982866, -0.0006360176485031843, -0.003438277170062065, -3.044158458709717, -0.00028796817059628665, -0.0004152389301452786, -0.1765109747648239, -0.0007580029196105897, -0.00026890001026913524, -0.00948092807084322, -0.5784723162651062, -0.006159489508718252, -0.3951476812362671, -0.019972292706370354, -0.007382019888609648, -0.060971699655056, -0.00014768941036891192, -0.0037010284140706062, -1.0327794551849365, -0.22672703862190247, -0.05408181622624397, -0.7315577268600464, -4.386805812828243e-05, -7.378782902378589e-05, -0.002842435846105218, -1.0251946150674485e-05, -0.004939496051520109, -0.27588915824890137, -0.0005719218170270324, -3.40932747349143e-05, -2.1561803817749023, -0.17233018577098846, -0.0004631400224752724, -0.1156141459941864, -0.0005968220066279173, -0.03903106972575188, -0.2873186767101288, -0.04611591622233391, -0.002675645984709263, -0.010933845303952694, -0.004142988473176956, -0.9712942838668823, -0.0012529388768598437, -0.0010912423022091389, -0.0001110968878492713, -0.0018053437815979123, -2.021998405456543, -1.7881233361549675e-05, -1.9073468138230965e-06, -0.01477090921252966, -0.24523665010929108, -2.95634672511369e-05, -4.172238186583854e-05, -2.372236667724792e-05, -0.00022754464589525014, -0.21556754410266876, -5.709961988031864e-05, -0.07486986368894577, -0.002848022850230336, -0.002196639310568571, -0.011849374510347843, -0.009103459306061268, -0.026167022064328194, -0.04054119437932968, -0.0021691620349884033, -0.1356111615896225, -0.03824256733059883, -0.009985729120671749, -0.5077703595161438, -0.015388917177915573, -0.9636905789375305], "finish_reason": "stop"}], "metrics": {"energy": 302.7808170471191, "energy_per_token": 3.562127259377872, "time": 6.950036, "time_per_token": 0.0817651294117647}}
{"outputs": [{"text": "input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub('[^0-9a-zA-Z]+', '', x))\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    return input_df", "tokens": ["input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "0", "-", "9", "a", "-", "z", "A", "-", "Z", "]+", "'", ",", " ''", ",", " x", "))", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "def"], "logprobs": [-1.1294935941696167, -0.001026341924443841, -0.013522690162062645, -0.15440329909324646, -0.03928394615650177, -0.000362807244528085, -0.000514851592015475, -0.0006840273272246122, -0.009840548038482666, -0.015841113403439522, -4.6132929128361866e-05, -5.340433563105762e-05, -0.0566573329269886, -0.0005613181856460869, -0.00015531764074694365, -0.015171372331678867, -0.5077655911445618, -0.004712427966296673, -1.337031364440918, -0.044538263231515884, -0.012079774402081966, -0.031162645667791367, -0.002136925933882594, -0.13574834167957306, -0.0001209901092806831, -0.003323272103443742, -1.0692880153656006, -0.19250567257404327, -0.050937213003635406, -2.2310192584991455, -0.00016807096835691482, -0.00011622230522334576, -0.0037341644056141376, -3.576278118089249e-07, -2.622600959512056e-06, -0.006689179688692093, -3.6954811548639555e-06, -0.001534119131974876, -0.025122929364442825, -0.003981996327638626, -0.0003066784702241421, -0.03819621354341507, -0.0002889215829782188, -0.06197209656238556, -0.30562129616737366, -0.030091717839241028, -0.05133636295795441, -0.013374022208154202, -1.1801649634435307e-05, -5.221230458118953e-05, -0.01795245334506035, -0.03244594857096672, -0.0005791893927380443, -0.0017459639348089695, -0.0002611534437164664, -0.0007412070408463478, -0.005760141648352146, -1.1205610462639015e-05, -3.2186455882765586e-06, -0.027550918981432915, -0.10728850215673447, -2.264974000354414e-06, -1.4424220353248529e-05, -6.0794889577664435e-05, -0.0005958688561804593, -0.8917030096054077, -5.376194530981593e-05, -0.002944659674540162, -0.003073850879445672, -0.0034943493083119392, -0.15470512211322784, -0.05817786976695061, -0.005055857356637716, -1.2397689715726301e-05, -1.1086402082582936e-05, -0.5262117385864258, -0.01365451980382204, -1.0679101943969727], "finish_reason": "stop"}], "metrics": {"energy": 308.8654599800111, "energy_per_token": 3.959813589487322, "time": 6.7361474, "time_per_token": 0.0863608641025641}}
{"outputs": [{"text": "# Remove all special characters, punctuation marks, and spaces\n    input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub('[^a-zA-Z0-9]+', '', x))\n\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n\n    return input_df", "tokens": ["#", " Remove", " all", " special", " characters", ",", " punct", "uation", " marks", ",", " and", " spaces", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "'", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "\n", "    ", "return", " input", "_", "df", "\n", "\n", "#"], "logprobs": [-0.9717797040939331, -1.2459869384765625, -0.604607343673706, -0.10352392494678497, -0.005472559481859207, -0.26779448986053467, -0.012950127944350243, -0.005630348809063435, -0.00864548608660698, -0.039002180099487305, -0.009225361049175262, -0.015551135875284672, -0.48130303621292114, -0.0026190525386482477, -0.23959596455097198, -0.00012134769349358976, -0.003910871222615242, -0.15340456366539001, -0.0144716901704669, -0.0001392267586197704, -0.00014733182615600526, -0.0006414977833628654, -0.0016883655916899443, -0.019965749233961105, -1.7046782886609435e-05, -3.0397906812140718e-05, -0.026001639664173126, -0.0006260104128159583, -0.00013159839727450162, -0.0015603045467287302, -0.43897274136543274, -0.002224353840574622, -1.1670513153076172, -0.023203400894999504, -0.0021714221220463514, -0.02705409750342369, -0.0006503135664388537, -0.07676193863153458, -6.19869097135961e-05, -0.00167444150429219, -1.4142156839370728, -0.0862935408949852, -0.04686126857995987, -0.7677849531173706, -1.1086402082582936e-05, -2.7417760065873154e-05, -0.001888398313894868, -1.2278481335670222e-05, -0.002534037223085761, -0.09165496379137039, -0.0002965487365145236, -3.373566141817719e-05, -2.055375576019287, -0.0041178204119205475, -6.878139538457617e-05, -0.015310498885810375, -7.86750388215296e-05, -0.03907887637615204, -0.2543053925037384, -0.00681125745177269, -0.917127251625061, -0.0007244108128361404, -0.00782436691224575, -0.12360730022192001, -0.15350906550884247, -0.020227814093232155, -0.007043768186122179, -0.056756339967250824, -0.14961741864681244, -0.006475063040852547, -0.036981046199798584, -0.0005212855176068842, -0.0014144902816042304, -2.3841830625315197e-06, -8.22540732769994e-06, -0.0018475858960300684, -0.0013069906271994114, -3.886147169396281e-05, -0.0012228161795064807, -9.16677454370074e-05, -0.00013517419574782252, -0.002038069535046816, -5.364403477869928e-06, -1.4305104514278355e-06, -0.00766514940187335, -0.004252320621162653, -1.311301275563892e-06, -4.529942543740617e-06, -1.5735502529423684e-05, -0.0001134808044298552, -1.068694829940796, -3.6477376852417365e-05, -0.0011948358733206987, -0.00129270413890481, -0.0015047191409394145, -0.07201758772134781, -0.0003398079425096512, -0.17390868067741394, -0.002579340012744069, -3.4570634852570947e-06, -5.483612312673358e-06, -0.32554468512535095, -0.009021592326462269, -2.039440631866455], "finish_reason": "stop"}], "metrics": {"energy": 369.7812717323304, "energy_per_token": 3.555589151272408, "time": 8.629166, "time_per_token": 0.08297275}}
{"outputs": [{"text": "# Define a regular expression pattern to remove special characters, punctuation, and spaces\n    pattern = r'[^a-zA-Z0-9]+'\n\n    # Use regular expressions to remove special characters, punctuation, and spaces from the 'text' column\n    input_df['clean_text'] = input_df['text'].apply(lambda x: re.sub(pattern, '', x))\n\n    # Calculate the length of each row in the 'clean_text' column\n    input_df['text_length'] = input_df['clean_text'].apply(lambda x: len(x))\n\n    return input_df", "tokens": ["#", " Define", " a", " regular", " expression", " pattern", " to", " remove", " special", " characters", ",", " punct", "uation", ",", " and", " spaces", "\n", "    ", "pattern", " =", " r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]+", "'", "\n", "\n", "    ", "#", " Use", " regular", " expressions", " to", " remove", " special", " characters", ",", " punct", "uation", ",", " and", " spaces", " from", " the", " '", "text", "'", " column", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "pattern", ",", " ''", ",", " x", "))", "\n", "\n", "    ", "#", " Calculate", " the", " length", " of", " each", " row", " in", " the", " '", "clean", "_", "text", "'", " column", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "apply", "(", "lambda", " x", ":", " len", "(", "x", "))", "\n", "\n", "    ", "return", " input", "_", "df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9717797040939331, -3.0155887603759766, -1.1456259489059448, -0.2732367515563965, -0.0013393727131187916, -0.2892116606235504, -0.06551877409219742, -2.433769941329956, -0.44184595346450806, -0.00959392823278904, -0.23651815950870514, -0.06327299773693085, -0.010848118923604488, -3.016983985900879, -0.025286830961704254, -0.04706759378314018, -0.18923048675060272, -0.0022712168283760548, -0.1086655855178833, -0.005770571529865265, -0.18237076699733734, -0.5098640322685242, -0.050990909337997437, -0.18960078060626984, -0.27319467067718506, -6.794906312279636e-06, -2.9444261599564925e-05, -0.0015337619697675109, -8.702239938429557e-06, -0.001279846066609025, -0.09550254046916962, -0.0002475670480635017, -1.3351351299206726e-05, -1.162614107131958, -0.004363895393908024, -0.019974278286099434, -0.23517915606498718, -0.0007232195930555463, -0.008408027701079845, -1.2850933074951172, -1.8005348443984985, -0.3789020776748657, -0.017513977363705635, -1.0578954219818115, -0.24155928194522858, -0.0015789910685271025, -0.236978679895401, -0.0006598440813831985, -0.0014104428701102734, -0.07079432904720306, -0.0013148480793461204, -0.0043713729828596115, -0.5406731963157654, -0.25939086079597473, -1.1094412803649902, -0.004247334785759449, -0.000321336614433676, -0.003055786481127143, -0.11801792681217194, -0.0005199749139137566, -0.32400912046432495, -3.2305197237292305e-05, -0.00021062063751742244, -0.0167359858751297, -0.01705644279718399, -0.00010740180005086586, -0.00011705666838679463, -0.000416907190810889, -0.0006435230607166886, -0.002337344689294696, -1.4305012882687151e-05, -2.1219027985353023e-05, -0.003993513528257608, -0.00032109825406223536, -3.218599158572033e-05, -0.00025197668583132327, -2.1887238025665283, -9.727005090098828e-05, -0.05809272453188896, -0.003872634842991829, -0.0005922947311773896, -0.0028892699629068375, -1.8000440832111053e-05, -0.0002559096028562635, -0.0011426832061260939, -0.004658559802919626, -0.0013587776338681579, -0.011924060061573982, -7.652943895664066e-05, -0.0332765094935894, -0.03055928461253643, -0.0011520899133756757, -0.014170383103191853, -0.00044919890933670104, -0.0007692000363022089, -0.09669185429811478, -0.01686997152864933, -0.021071381866931915, -0.0020825620740652084, -1.8615527153015137, -1.9201196432113647, -0.17375408113002777, -0.015767894685268402, -0.14872843027114868, -0.07313919812440872, -0.0006404255982488394, -0.00048065552255138755, -0.000692842761054635, -0.003015972441062331, -0.2154613584280014, -0.00012110930401831865, -0.00675229262560606, -3.933898824470816e-06, -4.410734163684538e-06, -0.0007686044555157423, -0.0008808070560917258, -2.932505594799295e-05, -0.0010114560136571527, -7.152301259338856e-05, -0.00035637227119877934, -0.0007601470570079982, -4.291525328881107e-06, -6.556489552167477e-06, -0.0017522709676995873, -0.0021509623620659113, -3.814689989667386e-06, -2.3841855067985307e-07, -2.7418097943154862e-06, -1.7404405298293568e-05, -0.4257114827632904, -1.490105023549404e-05, -0.16488471627235413, -0.001207456924021244, -0.00025054652360267937, -0.002198542468249798, -0.0003182381624355912, -0.012536648660898209, -0.0018663860391825438, -0.00031513971043750644, -0.021030878648161888, -0.00045313104055821896, -0.7721945643424988, -0.0022948854602873325, -4.768360213347478e-06, -6.437280717364047e-06, -1.5532639026641846, -1.7881377516459906e-06, -1.5497195136049413e-06, -2.0265558760002023e-06, -6.437280717364047e-06, -0.15246520936489105], "finish_reason": "stop"}], "metrics": {"energy": 522.7118673114774, "energy_per_token": 3.4616679954402474, "time": 12.822331, "time_per_token": 0.08491609933774835}}
{"outputs": [{"text": "# Clean the text in the 'text' column\n    input_df['clean_text'] = input_df['text'].apply(\n        lambda x: re.sub(r'[^a-zA-Z0-9]', '', x))\n    # Calculate the length of the cleaned text\n    input_df['text_length'] = input_df['clean_text'].str.len()\n    # Return the modified DataFrame\n    return input_df[['clean_text', 'text_length']]", "tokens": ["#", " Clean", " the", " text", " in", " the", " '", "text", "'", " column", "\n", "    ", "input", "_", "df", "['", "clean", "_", "text", "']", " =", " input", "_", "df", "['", "text", "']", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " re", ".", "sub", "(", "r", "'", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " ''", ",", " x", "))", "\n", "    ", "#", " Calculate", " the", " length", " of", " the", " cleaned", " text", "\n", "    ", "input", "_", "df", "['", "text", "_", "length", "']", " =", " input", "_", "df", "['", "clean", "_", "text", "']", ".", "str", ".", "len", "()", "\n", "    ", "#", " Return", " the", " modified", " Data", "Frame", "\n", "    ", "return", " input", "_", "df", "[", "['", "clean", "_", "text", "'", ",", " '", "text", "_", "length", "']", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9717797040939331, -3.071043014526367, -0.2533615827560425, -0.08982859551906586, -1.3033976554870605, -0.18540604412555695, -0.2446794956922531, -0.005386244971305132, -0.0006182666402310133, -0.002277996391057968, -0.8099260330200195, -0.0026214304380118847, -0.13011787831783295, -7.295342220459133e-05, -0.0008046964649111032, -0.17914937436580658, -0.010252311825752258, -0.0001429217227268964, -0.00010418349120300263, -0.0004198861715849489, -0.002533799270167947, -0.012920708395540714, -2.2172682292875834e-05, -0.00010191874753218144, -0.01618696004152298, -0.0005161621957086027, -9.858122211880982e-05, -0.0032897659111768007, -0.5182572603225708, -0.00213668798096478, -0.9178659915924072, -0.03457426279783249, -0.014650504104793072, -0.028318576514720917, -0.001359134796075523, -0.045987728983163834, -7.86750388215296e-05, -0.0032791912090033293, -0.37845802307128906, -0.040687594562768936, -0.5038591027259827, -0.07096779346466064, -0.12783975899219513, -0.3369755744934082, -1.7523612768854946e-05, -4.100715523236431e-05, -0.0018053437815979123, -1.0967194612021558e-05, -0.0016373097896575928, -0.2140495777130127, -0.0005583396414294839, -2.1934269170742482e-05, -0.21882295608520508, -0.0009278521756641567, -5.829164365422912e-05, -0.03523240610957146, -3.313963316031732e-05, -0.03820791468024254, -0.6368914842605591, -0.0175795741379261, -0.5734308362007141, -0.12641341984272003, -0.12240613251924515, -0.049740955233573914, -0.027191463857889175, -0.005993370432406664, -0.0614289753139019, -0.2238183319568634, -0.006512607913464308, -0.3070664405822754, -0.0003499372396618128, -0.0011626873165369034, -3.4570634852570947e-06, -5.8412379075889476e-06, -0.0019546705298125744, -0.0023412692826241255, -7.664863369427621e-05, -0.0019892919808626175, -7.402622577501461e-05, -0.00013350549852475524, -0.0024391443002969027, -5.245195097813848e-06, -2.9802276912960224e-06, -0.004448755644261837, -0.006141006946563721, -4.410734163684538e-06, -1.4305104514278355e-06, -1.3351351299206726e-05, -0.00015186110977083445, -1.3343226909637451, -3.6477376852417365e-05, -0.0017481058603152633, -0.001060757553204894, -0.001069450518116355, -0.18162566423416138, -0.9526774883270264, -0.191599503159523, -0.1401694267988205, -1.5667181015014648, -0.030285686254501343, -0.000854961050208658, -0.25243809819221497, -0.0023849159479141235, -0.008675740100443363, -0.006948829162865877, -1.0132738680113107e-05, -6.318072337307967e-06, -2.0561208724975586, -0.006623812485486269, -0.01418295968323946, -1.728519782773219e-05, -2.9682672902708873e-05, -0.00011193125828867778, -5.340433563105762e-05, -0.015313198789954185, -8.749579137656838e-05, -3.2305197237292305e-05, -2.3245540432981215e-05, -0.00022790218645241112, -1.4922057390213013, -3.099436753473128e-06, -1.7881377516459906e-06, -2.264974000354414e-06, -8.106198947643861e-06, -0.14004580676555634], "finish_reason": "stop"}], "metrics": {"energy": 470.91140040969884, "energy_per_token": 3.767291203277591, "time": 10.738428, "time_per_token": 0.08590742400000001}}
