{"outputs": [{"text": "files = sorted(os.listdir(path))\n    dfs = []\n    for file in files:\n        try:\n            df = pd.read_json(os.path.join(path, file), lines=True)\n            df['Source'] = file\n            dfs.append(df)\n        except:\n            continue\n    if len(dfs) > 0:\n        df = pd.concat(dfs, axis=0)\n    else:\n        df = pd.DataFrame(columns=['Source'])\n    os.makedirs('processed', exist_ok=True)\n    df.to_json(os.path.join('processed', 'result.json'), orient='records', indent=4, default=str)\n    shutil.rmtree(path)\n    return df", "tokens": ["files", " =", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", "\n", "    ", "d", "fs", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "try", ":", "\n", "            ", "df", " =", " pd", ".", "read", "_", "json", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", ")", ",", " lines", "=", "True", ")", "\n", "            ", "df", "['", "Source", "']", " =", " file", "\n", "            ", "d", "fs", ".", "append", "(", "df", ")", "\n", "        ", "except", ":", "\n", "            ", "continue", "\n", "    ", "if", " len", "(", "d", "fs", ")", " >", " ", "0", ":", "\n", "        ", "df", " =", " pd", ".", "concat", "(", "d", "fs", ",", " axis", "=", "0", ")", "\n", "    ", "else", ":", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "columns", "=['", "Source", "'])", "\n", "    ", "os", ".", "m", "aked", "irs", "('", "processed", "'", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "df", ".", "to", "_", "json", "(", "os", ".", "path", ".", "join", "('", "processed", "'", ",", " '", "result", ".", "json", "')", ",", " orient", "='", "records", "'", ",", " indent", "=", "4", ",", " default", "=", "str", ")", "\n", "    ", "sh", "util", ".", "rm", "tree", "(", "path", ")", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -1.5632357597351074, -0.12832292914390564, -0.06489133089780807, -6.198863957251888e-06, -0.026178866624832153, -4.207999518257566e-05, -0.0009112972766160965, -0.004320928826928139, -0.02925480157136917, -0.038463182747364044, -0.06607384979724884, -2.2356412410736084, -0.002980435499921441, -0.012927415780723095, -0.3931176960468292, -0.0023258081637322903, -0.1513206660747528, -0.07032542675733566, -0.8951565027236938, -0.052936580032110214, -0.0010367024224251509, -0.0003522014303598553, -0.0010301527800038457, -0.001824858714826405, -2.2783327102661133, -8.093983342405409e-05, -0.001148874987848103, -0.0005198557628318667, -1.4150726795196533, -0.015046787448227406, -0.039748381823301315, -4.410646579344757e-05, -0.050075843930244446, -9.405170567333698e-05, -0.00032884435495361686, -0.009117988869547844, -0.25196611881256104, -0.00037877538125030696, -0.00013648532330989838, -0.0029157765675336123, -0.000498289882671088, -9.63164638960734e-05, -0.0004334702098276466, -0.00013600854435935616, -0.006082594860345125, -1.0005062818527222, -0.0002157455455744639, -1.3689908981323242, -0.005033321678638458, -0.001730612595565617, -0.109987273812294, -0.024004194885492325, -0.29179200530052185, -0.034002915024757385, -0.34873276948928833, -0.9385396838188171, -0.0012148389359936118, -0.0027052494697272778, -0.12335706502199173, -0.016772912815213203, -0.17559218406677246, -0.11857776343822479, -2.3364747903542593e-05, -0.0004472924047149718, -0.0005638201837427914, -0.00020287363440729678, -0.00033087024348787963, -0.0021423976868391037, -0.00046135272714309394, -0.037348829209804535, -0.0010720703285187483, -1.1899913549423218, -0.021787341684103012, -0.0011988840997219086, -1.2438069581985474, -0.00840400904417038, -0.26694902777671814, -1.9210716485977173, -0.3974331319332123, -0.00017498392844572663, -0.003485083347186446, -3.3378546504536644e-06, -0.05395328998565674, -0.9629761576652527, -0.0015753014013171196, -0.015648899599909782, -0.0006935574929229915, -0.0020158225670456886, -0.0010713557712733746, -0.18654775619506836, -0.041761189699172974, -0.005942889489233494, -7.128461584215984e-05, -0.0011023165425285697, -0.000774917658418417, -0.0029845954850316048, -2.3841830625315197e-06, -0.3753105700016022, -1.09477698802948, -0.01005595177412033, -0.04447498172521591, -0.668712854385376, -0.035072311758995056, -0.856606125831604, -0.23722884058952332, -0.00011002412065863609, -0.0038643223233520985, -0.000608854868914932, -0.11251039057970047, -0.0015617328463122249, -0.09328821301460266, -0.00014768941036891192, -0.007230542600154877, -1.0758073329925537, -0.09283637255430222, -0.24723941087722778, -1.5530232191085815, -0.13321711122989655, -0.005288658197969198, -0.1713467836380005, -3.31117582321167, -1.966933996300213e-05, -0.15509524941444397, -0.00022516099852509797, -0.000854841957334429, -1.5148123502731323, -0.06391330808401108, -0.03466431051492691, -0.0017926113214343786, -0.0045370496809482574, 0.0, -0.0002004899288294837, -0.0019143365789204836, -0.000681883015204221, -0.0003914067056030035, -0.005286049097776413, -0.004018922336399555, -0.6882678866386414, -0.004865828901529312, -0.00945624802261591, -1.1920928244535389e-07, -0.358330100774765, -0.4125487208366394, -0.18043631315231323, -0.0002848696312867105, -0.0009227308910340071, -0.01700335368514061, -0.0006242233794182539, -0.2360294759273529, -0.006312668789178133, -0.00756577355787158, -2.7656173188006505e-05, -0.08880715072154999, -2.8699228763580322, -0.03561221808195114, -0.02982724830508232, -0.042607929557561874, -0.00024148885859176517, -0.2398224025964737, -0.04965497553348541, -0.027253875508904457, -0.11914120614528656, -0.0005441615357995033, -2.4136242866516113, -0.004344074055552483, -1.2116659879684448, -0.5904821753501892, -3.195185899734497, -1.3822596073150635, -0.5232466459274292, -0.4511922001838684, -0.01547930296510458, -0.025808347389101982, -1.0748445987701416, -0.0002727136597968638, -2.706014311115723e-05, -0.7606351971626282, -6.079655122448457e-06, -0.12746171653270721, -0.013836536556482315, -0.18834218382835388, -0.02104080095887184, -0.0174255333840847, -0.07237759232521057, -0.017740149050951004, -1.1538913249969482, -1.6689286894688848e-06, -1.9073468138230965e-06, -1.3828182090946939e-05, -0.00013696208770852536, -0.06964796036481857], "finish_reason": "stop"}], "metrics": {"energy": 211.8751433315278, "energy_per_token": 1.097798670111543, "time": 8.628813, "time_per_token": 0.044708875647668386}}
{"outputs": [{"text": "def process_json(json_path):\n        with open(json_path, 'r') as f:\n            data = json.load(f)\n            df = pd.DataFrame(data)\n            df['Source'] = json_path\n            return df\n\n    os.makedirs(path, exist_ok=True)\n    files = os.listdir(path)\n    files.sort()\n    df_list = []\n    for file in files:\n        if os.path.isfile(os.path.join(path, file)) and file.endswith('.json'):\n            df = process_json(os.path.join(path, file))\n            df_list.append(df)\n\n    df = pd.concat(df_list)\n    print(df)\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    processed_files = [os.path.join(path, 'processed', file) for file in files]\n    for file in processed_files:\n        os.remove(file)\n    sh", "tokens": ["def", " process", "_", "json", "(", "json", "_", "path", "):", "\n", "        ", "with", " open", "(", "json", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "            ", "df", "['", "Source", "']", " =", " json", "_", "path", "\n", "            ", "return", " df", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "df", "_", "list", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", "))", " and", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "df", " =", " process", "_", "json", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", "))", "\n", "            ", "df", "_", "list", ".", "append", "(", "df", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", "_", "list", ")", "\n", "    ", "print", "(", "df", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "processed", "_", "files", " =", " [", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'", ",", " file", ")", " for", " file", " in", " files", "]", "\n", "    ", "for", " file", " in", " processed", "_", "files", ":", "\n", "        ", "os", ".", "remove", "(", "file", ")", "\n", "    ", "sh"], "logprobs": [-4.007443428039551, -1.5772184133529663, -0.1905505359172821, -1.5227155685424805, -0.5486820340156555, -2.2777533531188965, -0.029626941308379173, -1.3036606311798096, -0.2003512978553772, -0.004004080779850483, -0.005479080136865377, -0.35288089513778687, -0.003118178341537714, -0.0004483648226596415, -0.003953617997467518, -6.210611172718927e-05, -3.182837463100441e-05, -0.3014560639858246, -0.12237364053726196, -0.04139719903469086, -0.056243620812892914, -0.0005965837044641376, -0.0766938179731369, -0.009753784164786339, -0.001135776867158711, -0.0015776818618178368, -0.74319988489151, -0.01583876833319664, -0.009080659598112106, -0.00024136967840604484, -0.008537579327821732, -0.0001358893496217206, -0.00015817821258679032, -0.0070512257516384125, -0.007988644763827324, -1.1649986505508423, -0.656024694442749, -0.027490032836794853, -0.022534143179655075, -3.325883881188929e-05, -0.10463675111532211, -0.2480015754699707, -0.007572398986667395, -0.19840677082538605, -0.04313236474990845, -0.08239097893238068, -0.09412379562854767, -0.2457612305879593, -1.5426678657531738, -0.0003756771038752049, -0.0013247294118627906, -0.6899852752685547, -0.002807843731716275, -8.999896090244874e-05, -0.04109039902687073, -0.6089861392974854, -0.15735292434692383, -0.0077151888981461525, -0.008806319907307625, -0.08644519746303558, -0.0012831796193495393, -2.453801155090332, -0.00010227633902104571, -0.06206374615430832, -7.807903602952138e-05, -0.00032610344351269305, -0.11503947526216507, -0.38585788011550903, -0.023640435189008713, -0.005679422989487648, 0.0, -5.864924969500862e-05, -0.00994489248842001, -0.000801837770268321, -0.0002628219372127205, -0.02487272396683693, -0.3768438398838043, -1.3061468601226807, -0.022039253264665604, -0.9719351530075073, -0.00012611546844709665, -0.0017661938909441233, -1.4305104514278355e-06, -0.0015512587269768119, -0.0018435402307659388, -0.00028236693469807506, -0.0035266606137156487, -0.039734289050102234, -0.2683177590370178, -0.08537137508392334, -0.00010179955279454589, -0.0734962522983551, -0.07049264013767242, -0.3518581986427307, -0.8204406499862671, -2.574582815170288, -0.10654432326555252, -0.0011928117601200938, -0.47708746790885925, -0.0006269635050557554, -0.13650479912757874, -0.023455187678337097, -0.6966675519943237, -0.051467716693878174, -0.002571730175986886, -0.00018880968855228275, -0.00045563330058939755, -0.0007303669699467719, -0.34230586886405945, -2.706280469894409, -2.1219027985353023e-05, -0.0006816447712481022, -0.0006123098428361118, -0.16775956749916077, -0.14991524815559387, -0.00042167355422861874, -0.11461394280195236, -9.7508447652217e-05, -0.00011669908417388797, -0.0009465504554100335, -0.00011455356434453279, -5.519237674889155e-05, -0.00033087024348787963, -0.0001793938863556832, -0.007501883432269096, -0.001630644896067679, -0.4103037714958191, -0.05931622162461281, -0.013893792405724525, -0.02410125359892845, -3.4450891689630225e-05, 0.0, -0.09082242846488953, -0.014751527458429337, -0.0002090712368953973, -0.00010442188795423135, -0.005263637285679579, -0.0026326067745685577, -0.0011694743297994137, -0.2524658739566803, -1.079803228378296, -0.0022075825836509466, -6.437280717364047e-06, -1.0251946150674485e-05, -0.0008537700050510466, -0.0023910999298095703, -8.976056415122002e-05, -7.879423355916515e-05, -0.0002379134384682402, -0.00034028460504487157, -3.8742269680369645e-05, -0.00010549465514486656, -6.747018051100895e-05, -0.0011512563796713948, -0.0003104920033365488, -0.0014353221049532294, -0.002706200582906604, -0.02130083553493023, -0.009685665369033813, -7.557583012385294e-05, -0.0005934861255809665, -0.0023161747958511114, -0.0004419303731992841, -0.00045313104055821896, -0.004044686444103718, -0.00035601475974544883, -0.639067530632019, -0.004734852351248264, -0.4736522436141968, -0.03692084923386574, -0.0023068978916853666, -0.00010883215873036534, -0.000802075956016779, -0.00032205163734033704, -0.0002619877050165087, -7.652943895664066e-05, -4.0531076592742465e-06, -1.1722877025604248, -0.02377384901046753, -0.22347308695316315, -4.096717834472656, -0.013566674664616585, -0.03363620489835739, -0.1030222699046135, -0.027296796441078186, -0.26889750361442566, -2.115811824798584, -5.829164365422912e-05, -0.04767255857586861, -0.0016590891173109412, -0.00013433984713628888, -0.3061472773551941, -0.1929776519536972, -0.0012417471734806895, -0.00022373080719262362, -0.0016496871830895543, -0.0004439560289029032, -0.001968114636838436, -0.0035878352355211973, -0.002801305614411831, -0.060157548636198044, -0.00896464753895998, -0.01478265505284071, -0.0001461399078834802, -0.0015051951631903648, -2.0265558760002023e-06, -4.887569048150908e-06, -0.0005858612130396068, -0.000661631056573242, -0.0019112430745735765, -0.0028538473416119814, -0.010881608352065086, -3.8181653022766113, -0.03831439092755318, -0.2121513932943344, -0.007066495716571808, -0.41260087490081787, -0.4286438822746277, -0.00010394509445177391, -0.0003412379592191428, -6.198863957251888e-06, -0.0750657320022583, -0.020353974774479866, -0.014873212203383446, -0.00016652150952722877, -0.7093260288238525, -0.0027202290948480368, -0.022081581875681877, -0.00038771264371462166, -0.7832340002059937, -0.03108464553952217, -0.10142026096582413, -0.0006098079611547291, -0.0003097769513260573, -0.19956520199775696, -1.1560932397842407, -0.0068284254521131516, -0.01244081649929285, -0.2947835326194763, -0.2865208387374878, -0.1546563059091568, -0.20592160522937775, -2.6940935640595853e-05, -3.6954811548639555e-06, -0.0011064843274652958, -0.0025191735476255417, -0.0006874820101074874, -0.40537229180336, -3.7431014789035544e-05, -1.2750670909881592, -0.00021836756786797196, -0.04129311442375183, -0.024424245581030846, -0.008861028589308262, -0.18433886766433716, -1.7296028137207031], "finish_reason": "length"}], "metrics": {"energy": 300.0254002132416, "energy_per_token": 1.171974219582975, "time": 11.351956, "time_per_token": 0.044343578125}}
{"outputs": [{"text": "files = []\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            files.append(os.path.join(path, filename))\n\n    df = pd.DataFrame()\n\n    for f in files:\n        with open(f, 'r') as file:\n            df2 = pd.DataFrame(json.load(file), columns=['a', 'b'])\n            df2['source'] = os.path.basename(f)\n        df = df.append(df2, ignore_index=True)\n\n    df.to_parquet(path + '/processed/output.parquet', compression='snappy')\n\n    return df", "tokens": ["files", " =", " []", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", "))", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "df", "2", " =", " pd", ".", "DataFrame", "(", "json", ".", "load", "(", "file", ")", ",", " columns", "=['", "a", "'", ",", " '", "b", "'])", "\n", "            ", "df", "2", "['", "source", "']", " =", " os", ".", "path", ".", "bas", "ename", "(", "f", ")", "\n", "        ", "df", " =", " df", ".", "append", "(", "df", "2", ",", " ignore", "_", "index", "=", "True", ")", "\n", "\n", "    ", "df", ".", "to", "_", "parquet", "(", "path", " +", " '/", "processed", "/", "output", ".", "parquet", "'", ",", " compression", "='", "sn", "appy", "')", "\n", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -1.708646297454834, -0.025691471993923187, -0.07909782975912094, -0.333631694316864, -1.047701358795166, -0.004702817182987928, -0.32262876629829407, -6.6756979322235566e-06, -0.005697558633983135, -7.271740287251305e-06, -0.003956824075430632, -0.0052134753204882145, -0.0015222163638100028, -0.004522690549492836, -0.0017701209289953113, -0.12944622337818146, -0.11335550993680954, -0.004372916184365749, -0.007799291517585516, -5.709961988031864e-05, -2.3841855067985307e-07, -0.30926433205604553, -0.025126416236162186, -0.000592890428379178, -0.00014494798961095512, -0.015337499789893627, -0.002787515986710787, -0.0009158230968751013, -0.4285305142402649, -0.0008386432309634984, -0.00023803261865396053, -0.06798474490642548, -0.972655713558197, -0.00019834458362311125, -4.625213477993384e-05, -0.0021766559220850468, -0.0033551135566085577, -0.00037281715776771307, -0.0014037764631211758, -0.00028379703871905804, -0.0031342213042080402, -0.0010518262861296535, -0.0010437285527586937, -0.8272647261619568, -0.0013486584648489952, -0.5086221694946289, -0.1674765944480896, -0.21921299397945404, -1.966933996300213e-05, -0.15616288781166077, -0.49331608414649963, -0.0069071571342647076, -2.017089605331421, -0.0002585315378382802, -0.09855101257562637, -2.299161911010742, -0.18221530318260193, -0.08516962826251984, -0.0012260308722034097, -0.0010100268991664052, -0.0049585942178964615, -0.18358491361141205, -0.0013955625472590327, -0.0001456631434848532, -0.002526783850044012, -0.27176976203918457, -0.08102942258119583, -0.04422740638256073, -0.07272371649742126, -0.0002914242504630238, -0.8904623985290527, -0.007226637098938227, -0.0009875188115984201, -0.001629097736440599, -1.9822258949279785, -2.523723840713501, -0.002336274366825819, -0.023179754614830017, -0.0001851148990681395, -0.27130255103111267, -0.4768163561820984, -0.006202377378940582, -4.2437604861333966e-05, -0.009795336984097958, -0.00021336186910048127, -0.0030172797851264477, -1.0159837007522583, -0.004955747164785862, -0.13855977356433868, -0.19239690899848938, -0.05915600806474686, -0.0007657456444576383, -4.815939246327616e-05, -0.026027539744973183, -0.00010668662434909493, -0.1327853500843048, -0.021370382979512215, -0.31702688336372375, -0.009665122255682945, -0.14403684437274933, -0.10915201902389526, -0.38152509927749634, -0.000392598332837224, -0.0012700833613052964, -0.9837234020233154, -0.0020776845049113035, -0.00010406429646536708, -0.0014688903465867043, -0.09564793854951859, -7.152555099310121e-07, -0.00016819016309455037, -0.006391440983861685, -0.005564556922763586, -0.030987108126282692, -1.1569260358810425, -0.011335847899317741, -0.017209017649292946, -0.4795917868614197, -0.001884352881461382, -0.05302600562572479, -0.0005700155161321163, -0.000731558189727366, -9.369411418447271e-05, -0.9085052609443665, -0.06190228834748268, 0.0, -0.000750736624468118, -0.0041328975930809975, -0.0006104036583565176, -0.10413490235805511, -0.011983545497059822, -0.09464912861585617, -0.004818375688046217, -0.5879080295562744, -1.2965831756591797, -1.2194992303848267, -1.0967194612021558e-05, -2.2940163612365723, -0.592410147190094, -1.6974047422409058, -0.7729185223579407, -0.18845483660697937, -0.5076146125793457, -0.5401198863983154, -2.424956798553467, -0.06196290999650955, -0.037225253880023956, -1.5091911554336548, -0.002352567622438073, -2.5744967460632324, -0.060572896152734756, -1.8539562225341797, -0.00029023250681348145, -0.2573830187320709, -0.05714844539761543, -0.4888820946216583, -0.010605521500110626, -0.08165143430233002, -0.008698430843651295, -0.7905194163322449, -7.152555099310121e-07, -1.0728830375228426e-06, -2.1576648578047752e-05, -6.425174069590867e-05, -0.07367212325334549], "finish_reason": "stop"}], "metrics": {"energy": 179.13317243003848, "energy_per_token": 1.072653727125979, "time": 7.140123, "time_per_token": 0.04275522754491018}}
{"outputs": [{"text": "# Get the list of files in the directory\n    files = [f for f in os.listdir(path) if f.endswith('.json')]\n\n    # Read the JSON files into a list of dicts\n    files_json = [json.load(open(os.path.join(path, f), 'r')) for f in files]\n\n    # Convert the list of dicts to a pandas DataFrame\n    df = pd.DataFrame(files_json)\n\n    # Add the \"Source\" column with filenames\n    df['source'] = [f[:-5] for f in files]\n\n    # Move files to the \"processed\" subdirectory\n    shutil.move(path, os.path.join(path, 'processed'))\n\n    # Return the DataFrame\n    return df", "tokens": ["#", " Get", " the", " list", " of", " files", " in", " the", " directory", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", "]", "\n", "\n", "    ", "#", " Read", " the", " JSON", " files", " into", " a", " list", " of", " dict", "s", "\n", "    ", "files", "_", "json", " =", " [", "json", ".", "load", "(", "open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " '", "r", "'))", " for", " f", " in", " files", "]", "\n", "\n", "    ", "#", " Convert", " the", " list", " of", " dict", "s", " to", " a", " pandas", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "files", "_", "json", ")", "\n", "\n", "    ", "#", " Add", " the", " \"", "Source", "\"", " column", " with", " fil", "en", "ames", "\n", "    ", "df", "['", "source", "']", " =", " [", "f", "[:", "-", "5", "]", " for", " f", " in", " files", "]", "\n", "\n", "    ", "#", " Move", " files", " to", " the", " \"", "processed", "\"", " sub", "directory", "\n", "    ", "sh", "util", ".", "move", "(", "path", ",", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'))", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.6791048049926758, -3.931673526763916, -1.1596366167068481, -1.0584919452667236, -0.0011501847766339779, -0.8300442695617676, -0.18007536232471466, -0.029460623860359192, -0.538057804107666, -0.5421809554100037, -0.0011624491307884455, -0.5006820559501648, -0.01475728303194046, -1.088426113128662, -0.4609147012233734, -0.02976268343627453, -0.0001774868869688362, -0.0002531684876885265, -0.013289681635797024, -3.3378546504536644e-06, -0.0018797124503180385, -3.814689989667386e-06, -0.00240013818256557, -0.004737462382763624, -0.007241431158035994, -0.012860925868153572, -0.5204622745513916, -0.014553229324519634, -0.008721829392015934, -4.6132929128361866e-05, -1.1920928244535389e-07, -0.15948466956615448, -0.04410045966506004, -0.00041476229671388865, -0.0005414212355390191, -0.02168457768857479, -0.0013992529129609466, -0.5060136914253235, -0.0002836778585333377, -0.034504473209381104, -1.3822120428085327, -0.9959186911582947, -1.0241379737854004, -0.0737488642334938, -0.28923630714416504, -0.39507579803466797, -0.801875650882721, -0.23882341384887695, -2.6683361530303955, -0.018016966059803963, -0.1402217596769333, -0.0005227153305895627, -2.999800682067871, -0.25768229365348816, -2.849363327026367, -0.06582911312580109, -0.49266448616981506, -0.15311932563781738, -0.000694153131917119, -0.6786774396896362, -0.0006593675934709609, -0.005169833078980446, -0.0035185827873647213, -0.18147067725658417, -3.0517112463712692e-05, -0.00015007323236204684, -0.0010920758359134197, -0.00015341058315243572, -0.00020382710499688983, -0.0010377742582932115, -9.345571743324399e-05, -0.06686859577894211, -0.375597208738327, -0.00018380382971372455, -0.07055884599685669, -0.0789068266749382, -0.02069919742643833, -0.03624818101525307, -0.0002464944263920188, -0.00016032364510465413, -0.025916846469044685, -0.004795953165739775, -0.001665277755819261, -0.04996902868151665, -0.0004204819560982287, -0.014179316349327564, -2.723825216293335, -0.25683581829071045, -0.14308317005634308, -0.07016263157129288, -0.05262425169348717, -0.0012738931691274047, -0.6411296129226685, -0.03479108214378357, -0.6981955766677856, -0.08599068969488144, -0.0022314905654639006, -0.11320862174034119, -0.0005011494504287839, -0.02487749233841896, -0.007639005314558744, -0.005284270271658897, -0.0002631794777698815, -0.05041016638278961, -0.10216125845909119, -0.010533805005252361, -0.00010656742961145937, -3.0517112463712692e-05, -0.157205730676651, -0.1280452460050583, -0.4211660623550415, -0.0003895000845659524, -0.016297798603773117, -0.4096930921077728, -1.6189870834350586, -0.6596056222915649, -0.21923530101776123, -0.0014216327108442783, -0.004555087070912123, -2.0948145389556885, -2.821723461151123, -0.00041929035796783864, -0.00013410145766101778, -0.14257016777992249, -0.00017867876158561558, -0.008134331554174423, -0.15914373099803925, -0.3930806815624237, -0.00029392691794782877, -0.0008393579046241939, -1.2172880172729492, -0.8272338509559631, -1.7193183898925781, -0.02668134681880474, -0.04785803705453873, -0.0006313714548014104, -0.0037484162021428347, -3.313963316031732e-05, -3.3854863431770355e-05, -0.009727457538247108, -0.0017128810286521912, -0.011705758981406689, -0.0452747642993927, -0.000390215078368783, -0.036102280020713806, -0.2511396110057831, -3.048511505126953, -0.17149724066257477, -0.7899783253669739, -0.3539982736110687, -0.016035638749599457, -0.005006277933716774, -0.3552830219268799, -0.00881270132958889, -0.07616040110588074, -0.0010932666482403874, -1.8656561374664307, -0.00032455421751365066, -1.7404405298293568e-05, -0.04303736612200737, -0.0760435238480568, -0.6542567610740662, -0.01904943585395813, -0.20408208668231964, -0.0001821352052502334, -0.0002444683632347733, -0.0041862004436552525, -0.002410484477877617, -0.006500290706753731, -0.02112659066915512, -0.01046857051551342, -0.07940386980772018, -0.012293754145503044, -0.006939121522009373, -0.033997729420661926, -0.05219574272632599, -0.003949105739593506, -1.0750031471252441, -0.11677969247102737, -0.026299169287085533, -0.4020320475101471, -0.0005315321614034474, -0.31019699573516846, -0.0005666795768775046, -0.0014892450999468565, -0.00689496286213398, -1.008408784866333, -0.012661781162023544, -1.570939302444458], "finish_reason": "stop"}], "metrics": {"energy": 231.7680836696624, "energy_per_token": 1.2262861569823407, "time": 8.202647, "time_per_token": 0.04340024867724868}}
{"outputs": [{"text": "files = os.listdir(path)\n    df_list = []\n    for file in sorted(files):\n        if file.endswith('.json'):\n            with open(path + '/' + file) as f:\n                data = json.load(f)\n            df = pd.DataFrame.from_dict(data)\n            df['source'] = file\n            df_list.append(df)\n    df = pd.concat(df_list)\n    return df", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "df", "_", "list", " =", " []", "\n", "    ", "for", " file", " in", " sorted", "(", "files", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "path", " +", " '/", "'", " +", " file", ")", " as", " f", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", " =", " pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ")", "\n", "            ", "df", "['", "source", "']", " =", " file", "\n", "            ", "df", "_", "list", ".", "append", "(", "df", ")", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", "_", "list", ")", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -0.9475932717323303, -1.3112935448589269e-05, -0.010935024358332157, -7.510157047363464e-06, -0.00199524057097733, -0.005349725019186735, -0.001077428925782442, -0.01593145914375782, -0.024939583614468575, -2.5165164470672607, -1.7779566049575806, -0.0898360013961792, -0.0062838830053806305, -0.12240053713321686, -0.0034319807309657335, -0.15413889288902283, -0.1041935533285141, -0.8486695885658264, -0.08322002738714218, -0.5597981810569763, -0.000285227142740041, -0.0071815443225204945, -0.048887185752391815, -0.018995750695466995, -0.002337939338758588, -0.5365549325942993, -0.11815765500068665, -0.009818002581596375, -0.016301317140460014, -3.015949550899677e-05, -1.1920928244535389e-07, -0.3284456729888916, -0.02825959213078022, -0.0008590107318013906, -0.00016068121476564556, -0.01643899641931057, -0.006800128147006035, -0.0013899675104767084, -0.30965346097946167, -0.0011251792311668396, -0.0012468667700886726, -2.23604679107666, -0.09616619348526001, -0.5602527260780334, -0.0016918168403208256, -0.00020037073409184813, -0.0022592039313167334, -1.2372872829437256, -5.2689116273541003e-05, -0.11045876145362854, -0.017677608877420425, -0.0007146426942199469, -0.0011601868318393826, -0.9496863484382629, -0.01068324875086546, -0.007253620773553848, -5.07818695041351e-05, -0.00998254306614399, -0.0002451834443490952, -0.00012087091454304755, -0.006695100571960211, -0.009361183270812035, -1.3226797580718994, -0.11368529498577118, -0.30203306674957275, -0.010225173085927963, -4.6967357775429264e-05, -0.03912702575325966, -1.3708784580230713, -2.1815061700181104e-05, -1.8715683836489916e-05, -0.39761823415756226, -0.004914466291666031, -0.008626931346952915, -0.27457091212272644, -0.028698939830064774, -0.004760005045682192, -0.004271313082426786, -0.19824829697608948, -0.3390733003616333, -0.0004737447015941143, -0.001178999780677259, -0.10891513526439667, -0.01930963806807995, -0.027473216876387596, -0.004973184317350388, -0.008891158737242222, -4.5060096454108134e-05, -0.0004899493651464581, -0.0010368215152993798, -0.00021920185827184469, -0.0003412379592191428, -0.002301426837220788, -0.0005650115781463683, -0.2530023157596588, -0.12731710076332092, -0.017101209610700607, -0.003123288508504629, -0.00022003613412380219, -0.0006358985556289554, -0.0002967870968859643, -0.00012051333033014089, -7.819823804311454e-05, -3.3378546504536644e-06, -0.9051087498664856, -0.014776311814785004, -0.03653371334075928, -1.160396933555603, -0.013911779969930649, -0.3524256944656372, -0.0194960068911314, -0.5082319974899292], "finish_reason": "stop"}], "metrics": {"energy": 121.18772826290133, "energy_per_token": 1.063050247920187, "time": 4.847057, "time_per_token": 0.04251804385964913}}
{"outputs": [{"text": "path = os.path.abspath(path)\n\n    if not os.path.exists(path):\n        os.makedirs(path)\n\n    files = os.listdir(path)\n    files.sort()\n\n    df = []\n\n    for file in files:\n        with open(path + os.sep + file, 'r') as f:\n            data = json.load(f)\n        df.append({'a': data[0]['a'],\n                   'b': data[0]['b'],\n                   'source': file})\n\n    df = pd.DataFrame(df)\n\n    path = path + os.sep + 'processed'\n\n    if not os.path.exists(path):\n        os.mkdir(path)\n\n    for file in files:\n        if file.endswith('.json'):\n            source = file\n        else:\n            source = 'processed'\n\n        shutil.move(path + os.sep + file, path + os.sep + source)\n\n    return df", "tokens": ["path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "path", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "path", ")", "\n", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "files", ".", "sort", "()", "\n", "\n", "    ", "df", " =", " []", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "path", " +", " os", ".", "sep", " +", " file", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "        ", "df", ".", "append", "({", "'", "a", "':", " data", "[", "0", "]['", "a", "']", ",", "\n", "                ", "   ", "'", "b", "':", " data", "[", "0", "]['", "b", "']", ",", "\n", "                ", "   ", "'", "source", "':", " file", "})", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "df", ")", "\n", "\n", "    ", "path", " =", " path", " +", " os", ".", "sep", " +", " '", "processed", "'", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "path", ")", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "source", " =", " file", "\n", "        ", "else", ":", "\n", "            ", "source", " =", " '", "processed", "'", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "path", " +", " os", ".", "sep", " +", " file", ",", " path", " +", " os", ".", "sep", " +", " source", ")", "\n", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-3.4677629470825195, -0.09546494483947754, -0.4073309898376465, -6.067568756407127e-05, -0.005921558942645788, -0.007565655279904604, -0.46329835057258606, -2.1815061700181104e-05, -4.815939246327616e-05, -0.005285575054585934, -0.043907325714826584, -0.002018677769228816, -0.04803381860256195, -1.9730288982391357, -0.0012063853209838271, -0.9330171346664429, -0.13343140482902527, -0.009378425776958466, -1.3947389561508317e-05, -0.000169382052263245, -7.402622577501461e-05, -0.25514182448387146, -0.0009583409409970045, -0.019769884645938873, -0.01732700504362583, -0.01261646207422018, -0.0021801055409014225, -0.1654052883386612, -0.00010322991875000298, -0.5814378261566162, -0.0002172949316445738, -0.0012907992349937558, -0.0005490464391186833, -0.00209386320784688, -0.024777717888355255, -0.005436635576188564, -0.13653963804244995, -0.007270899601280689, -1.1319411993026733, -0.027931228280067444, -1.0269044637680054, -1.3112935448589269e-05, -0.004620233550667763, -2.264974000354414e-06, -0.001128156203776598, -0.0018333070911467075, -0.00022456508304458112, -0.003002542071044445, -0.16347727179527283, -0.2298133820295334, -0.11080465465784073, -0.00019739109848160297, -0.054108016192913055, -0.039713554084300995, -0.15008987486362457, -0.00013136000779923052, -0.6376281380653381, -0.10642504692077637, -1.6280021667480469, -0.0025064502842724323, -0.6820176243782043, -6.675497570540756e-05, -0.027573764324188232, -0.6538544297218323, -0.06508012115955353, -0.0020960045512765646, -0.0003849719068966806, -0.0008293526479974389, -0.011519347317516804, -1.786781907081604, -0.00211016065441072, -0.0025958672631531954, -2.5561516284942627, -0.1013701781630516, -1.6838829517364502, -0.0004975749761797488, -0.06874769926071167, -0.0003496989083942026, -0.0023424585815519094, -0.2491438388824463, -0.17221438884735107, -0.08338575810194016, -0.06971488893032074, -0.0004459816846065223, -0.0521634966135025, -0.014307416044175625, -0.0007359656738117337, -0.011574968695640564, -0.9807099103927612, -0.005323164165019989, -0.012726401910185814, -8.022463589441031e-05, -0.029705287888646126, -0.00020323118951637298, -0.00015901254664640874, -0.013529276475310326, -0.00535174086689949, -2.3023722171783447, -0.26305338740348816, -0.018011346459388733, -0.034679051488637924, -2.0783944129943848, -0.2498023360967636, -0.2986767888069153, -0.01162445917725563, -0.09294988960027695, -0.7055450081825256, -0.16178499162197113, -0.19477775692939758, -0.0023104657884687185, -0.00027211778797209263, -0.002829835517331958, -2.222639799118042, -0.024241352453827858, -0.11734393239021301, -0.0007593132322654128, -0.0006945105269551277, -0.00016675988445058465, -0.0018964892951771617, -0.0001995364436879754, -0.005417546723037958, -0.001599105424247682, -0.0006283930852077901, -0.00013290952483657748, -0.002149297157302499, -0.0043873959220945835, -0.0003367095487192273, -0.0071459184400737286, -0.015723302960395813, -0.06277794390916824, -0.0008429311565123498, -0.19921313226222992, -0.09277530759572983, -0.0021699946373701096, -0.24570044875144958, -0.018723532557487488, -0.1872529238462448, -0.023648353293538094, -0.012384772300720215, -5.8053239627042785e-05, -0.006279736757278442, -0.015895791351795197, -0.024196207523345947, -0.04235771670937538, -0.014492839574813843, -0.4580443501472473, -0.0005216429708525538, -3.7269818782806396, -0.7153438329696655, -0.8532172441482544, -0.03920932859182358, -0.013351908884942532, -0.0002256377338198945, -0.002692171838134527, -0.00406641373410821, -0.14492876827716827, -0.006166242994368076, -0.0015555436257272959, -0.013630766421556473, -1.0843614339828491, -5.411955135059543e-05, -0.0866570770740509, -0.12184727191925049, -0.0012153151910752058, -2.9802276912960224e-06, -8.05822346592322e-05, -4.1483970562694594e-05, -0.020303046330809593, -0.00024136967840604484, -0.0018609125399962068, -0.0015336429933086038, -0.0010530170984566212, -0.0011083895806223154, -0.001547211897559464, -5.054346183896996e-05, -1.9828264713287354, -8.594620157964528e-05, -0.0013167529832571745, -0.0007600279641337693, -0.000542612629942596, -0.0005611990345641971, -0.07173845916986465, -0.0005391574813984334, -0.702198326587677, -0.18160776793956757, -0.008286026306450367, -0.07598662376403809, -0.003296063281595707, -0.0006039702566340566, -0.006839910056442022, -1.3767979145050049, -0.3283337354660034, -0.3652499318122864, -0.19567811489105225, -7.86750388215296e-05, 0.0, -0.059010714292526245, -0.16305992007255554, -0.0013184197014197707, -0.00028451209072954953, -0.028063373640179634, -0.002964865416288376, -0.003310677595436573, -3.0800955295562744, -0.1598145216703415, -0.6945857405662537, -0.37822219729423523, -0.7023615837097168, -0.0354330874979496, -9.881961887003854e-05, -0.001515312702395022, -0.00043358939001336694, -0.026715703308582306, -0.0004047528200317174, -0.984049916267395, -1.500797152519226, -0.08941290527582169, -0.3857656419277191, -0.7748566269874573, -0.008707057684659958, -0.6123896837234497, -8.165503095369786e-05, -8.702239938429557e-06, -0.05666690692305565, -0.008689804002642632, -0.05550748482346535, -0.015430237166583538, -0.0025519919581711292, -0.00010477947944309562, -0.0015380469849333167, -0.00041786045767366886, -0.20177534222602844, -0.003608859609812498, -0.18964476883411407, -0.015088826417922974, -0.0027901313733309507, -0.00030286493711173534, -0.0003152588615193963, -0.0018799504032358527, -0.13683108985424042, -0.02937832474708557, -0.007733050733804703, -0.04262906312942505, -0.01663832738995552, -0.05052078887820244, -0.015614278614521027, -1.0970282554626465, -0.00941786915063858, -0.4851052165031433], "finish_reason": "stop"}], "metrics": {"energy": 269.0419762868881, "energy_per_token": 1.0804898646059762, "time": 10.925913, "time_per_token": 0.04387916867469879}}
{"outputs": [{"text": "# Create a processed directory if it doesn't exist\n    if not os.path.exists('processed'):\n        os.mkdir('processed')\n\n    # Read files from the directory\n    files = [os.path.join(path, f) for f in os.listdir(path)]\n    files.sort()\n    df = pd.DataFrame()\n\n    for file in files:\n        # Read each file\n        with open(file) as f:\n            df_file = pd.read_json(f)\n            df_file['Source'] = os.path.basename(file)\n            # Add \"Source\" column\n\n            # Add \"Source\" column\n            df_file['Source'] = os.path.basename(file)\n            df = pd.concat([df, df_file])\n\n    # Move processed files to processed directory\n    processed_files = [\n        os.path.join(path, os.path.splitext(f)[0]) for f in files\n    ]\n    for pfile in processed_files:\n        if not os.path.exists(pfile):\n", "tokens": ["#", " Create", " a", " processed", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "processed", "')", ":", "\n", "        ", "os", ".", "mk", "dir", "('", "processed", "')", "\n", "\n", "    ", "#", " Read", " files", " from", " the", " directory", "\n", "    ", "files", " =", " [", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")]", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Read", " each", " file", "\n", "        ", "with", " open", "(", "file", ")", " as", " f", ":", "\n", "            ", "df", "_", "file", " =", " pd", ".", "read", "_", "json", "(", "f", ")", "\n", "            ", "df", "_", "file", "['", "Source", "']", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "#", " Add", " \"", "Source", "\"", " column", "\n", "\n", "            ", "#", " Add", " \"", "Source", "\"", " column", "\n", "            ", "df", "_", "file", "['", "Source", "']", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "df", " =", " pd", ".", "concat", "([", "df", ",", " df", "_", "file", "])", "\n", "\n", "    ", "#", " Move", " processed", " files", " to", " processed", " directory", "\n", "    ", "processed", "_", "files", " =", " [", "\n", "        ", "os", ".", "path", ".", "join", "(", "path", ",", " os", ".", "path", ".", "spl", "ite", "xt", "(", "f", ")[", "0", "])", " for", " f", " in", " files", "\n", "    ", "]", "\n", "    ", "for", " p", "file", " in", " processed", "_", "files", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "p", "file", "):", "\n"], "logprobs": [-1.6791048049926758, -1.2055020332336426, -0.719817042350769, -3.0702643394470215, -0.2851095199584961, -0.19001775979995728, -0.036798715591430664, -0.21022070944309235, -0.00037055302527733147, -3.933898824470816e-06, -0.15817321836948395, -0.19715285301208496, -0.001479841535910964, -0.8121876120567322, -0.01113333459943533, -0.000683074293192476, -2.264974000354414e-06, -3.8742269680369645e-05, -0.00019608005823101848, -0.10496405512094498, -1.2214200496673584, -0.0244008619338274, -0.004551408346742392, -0.0014915067004039884, -0.002939073368906975, -0.001985484967008233, -0.0018544872291386127, -6.556489552167477e-06, -0.3138720393180847, -1.2874520507466514e-05, -0.0068273600190877914, -0.0005623904871754348, -0.00013755806139670312, -0.0003165697562508285, -0.16826817393302917, -0.0011951930355280638, -0.15038007497787476, -1.6654582023620605, -2.3185081481933594, -1.645665168762207, -0.4070386290550232, -1.2799665927886963, -1.109426498413086, -0.0008803306263871491, -0.4185310900211334, -0.017801983281970024, -1.1914621591567993, -1.483206868171692, -9.298280929215252e-06, -0.0002739054325502366, -0.00027509720530360937, -0.028742725029587746, -0.00869063101708889, -0.014118550345301628, -0.0002809368306770921, -0.30846893787384033, -0.014600693248212337, -0.03549199551343918, -0.0007401349139399827, -0.001257820287719369, -0.03981872275471687, -0.0002208704245276749, -0.00023123928986024112, -1.0728830375228426e-06, -0.0011439929949119687, -0.0008137490367516875, -0.9594676494598389, -0.009745165705680847, -0.11460161209106445, -1.5540261268615723, -0.4657188057899475, -0.0013053239090368152, -0.05965162441134453, -0.05376758426427841, -0.4498579800128937, -1.0814764499664307, -0.19552332162857056, -0.23980438709259033, -0.00019131260341964662, -0.16429640352725983, -0.5214657187461853, -0.011353527195751667, -1.3786569833755493, -0.00021455370006151497, -0.5273558497428894, -1.6032688617706299, -0.09883075207471848, -0.001644093543291092, -0.00043025295599363744, -0.0017049076268449426, -0.012593272142112255, -1.21329665184021, -0.6585426330566406, -2.719184160232544, -0.48371484875679016, -1.8721754550933838, -0.0011036264477297664, -0.14693008363246918, -0.002446041675284505, -0.00023100091493688524, -0.0011288706446066499, -1.5723601579666138, -0.00018785618885885924, -0.025603514164686203, -0.01613605208694935, -0.00034850722295232117, -0.0015922023449093103, -2.4849071502685547, -1.5015593767166138, -1.8242429494857788, -0.002635579090565443, -0.1338483840227127, -9.107174992095679e-05, -0.7760259509086609, -2.169585604860913e-05, -0.0002935693773906678, -0.0020575798116624355, -0.03701344504952431, -0.42707619071006775, -0.013408133760094643, -0.9036081433296204, -0.13152022659778595, -0.5009464025497437, -0.0009008163469843566, -0.4855930507183075, -1.068404197692871, -0.0009024838218465447, -0.0014246086357161403, -0.6623024940490723, -0.0008854520856402814, -0.00013815402053296566, -0.0018560340395197272, -0.11996171623468399, -3.576278118089249e-07, -0.00012861855793744326, -0.01836124248802662, -0.002042947104200721, -0.016388336196541786, -0.9622133374214172, -2.6877353191375732, -2.064697742462158, -2.4812448024749756, -0.27195823192596436, -0.0025869496166706085, -0.07748734205961227, -0.8075124621391296, -2.1803622245788574, -1.263305425643921, -0.575127124786377, -2.180109739303589, -0.9797545075416565, -0.3158017694950104, -0.0021030232310295105, -0.031851790845394135, -0.2907434403896332, -0.16022014617919922, -0.07804562896490097, -0.6914977431297302, -0.004271550104022026, -0.0835668072104454, -0.046228040009737015, -0.0016551617300137877, -0.002442236291244626, -0.1069900169968605, -0.0001586549769854173, -7.331102824537084e-05, -0.00025733973598107696, -0.010133839212357998, -5.709961988031864e-05, -0.00011848701251437888, -0.006898277904838324, -0.0015092422254383564, -0.0057780384086072445, -0.7767953276634216, -0.6729291677474976, -0.05299627408385277, -0.8656563758850098, -5.3165931603871286e-05, -0.002580647822469473, -0.015368843451142311, -0.0006712805479764938, -0.015387391671538353, -0.005187622271478176, -0.00010179955279454589, -1.7523612768854946e-05, -0.742998480796814, -0.022534843534231186, -0.26675570011138916, -0.28244903683662415, -0.15003837645053864, -0.2691548466682434, -0.8680097460746765, -0.01323462650179863, -0.056896667927503586, -1.566612720489502, -0.20658785104751587, -0.013019436039030552, -0.005655834451317787, -2.092207908630371, -0.06287769228219986, -0.22130660712718964, -0.003486508736386895, -0.16091731190681458, -3.0354249477386475, -0.01093478873372078, -0.19091796875, -7.045020902296528e-05, -0.00031990656862035394, -1.764281842042692e-05, -0.03715771809220314, -0.14322903752326965, -0.2182350754737854, -0.002449490362778306, -0.9490041136741638, -0.00016044282529037446, -0.00021741411183029413, -0.00027640812913887203, -1.6930817365646362, -3.981510963058099e-05, -1.0728830375228426e-06, -0.0002464944263920188, -0.6486292481422424, -0.006611141376197338, -0.003092746715992689, -0.19625647366046906, -0.7713679671287537, -0.0012535341084003448, -0.0031148509588092566, -0.7170154452323914, -0.6241085529327393, -0.55003821849823, -0.002240411238744855, -0.008966065011918545, -0.09248203039169312, -0.23481114208698273, -2.9074883460998535, -2.2679927349090576, -0.005874866619706154, -0.001828071428462863, -3.099393507000059e-05, -8.34461570775602e-06, -0.000316927267704159, -0.001431155833415687, -0.0024839758407324553, -1.9734878540039062, -1.9477981328964233, -0.007916267029941082, -4.410734163684538e-06, -5.638440416078083e-05, -2.610649426060263e-05, -0.04846320301294327, -0.030588535591959953, -0.07969121634960175, -4.768360213347478e-06, -0.036969445645809174, -0.01743408665060997], "finish_reason": "length"}], "metrics": {"energy": 299.81760698318476, "energy_per_token": 1.1711625272780655, "time": 11.353593, "time_per_token": 0.04434997265625}}
{"outputs": [{"text": "if not os.path.isdir(path):\n        print(f'\"{path}\" does not exist.')\n        return None\n\n    files = os.listdir(path)\n    if not files:\n        print(f'\"{path}\" is empty.')\n        return None\n\n    files.sort()\n    for filename in files:\n        if not filename.endswith('.json'):\n            print(f'Skipping \"{filename}\".')\n            continue\n\n        with open(os.path.join(path, filename), 'r') as f:\n            try:\n                data = json.load(f)\n            except:\n                print(f'Could not load JSON data from \"{filename}\".')\n                continue\n\n            df = pd.DataFrame(data)\n            df['source'] = filename\n\n            df.to_json(os.path.join(path, 'processed', filename), orient='records')\n\n    return df", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "        ", "print", "(", "f", "'", "\"", "{", "path", "}\"", " does", " not", " exist", ".", "')", "\n", "        ", "return", " None", "\n", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "print", "(", "f", "'", "\"", "{", "path", "}\"", " is", " empty", ".", "')", "\n", "        ", "return", " None", "\n", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "print", "(", "f", "'", "Sk", "ipping", " \"", "{", "filename", "}\"", ".", "')", "\n", "            ", "continue", "\n", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "try", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "except", ":", "\n", "                ", "print", "(", "f", "'", "Could", " not", " load", " JSON", " data", " from", " \"", "{", "filename", "}\"", ".", "')", "\n", "                ", "continue", "\n", "\n", "            ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "            ", "df", "['", "source", "']", " =", " filename", "\n", "\n", "            ", "df", ".", "to", "_", "json", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'", ",", " filename", ")", ",", " orient", "='", "records", "')", "\n", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.456151008605957, -0.17805005609989166, -0.029566992074251175, -1.3828182090946939e-05, -0.000271521887043491, -0.00121412449516356, -1.4726622104644775, -0.011072030290961266, -0.0012198395561426878, -0.005753741133958101, -0.006450782995671034, -0.030469559133052826, -0.003479024861007929, -2.23028826713562, -0.3000238835811615, -0.6203445792198181, -1.3747379779815674, -3.7415671348571777, -0.011115296743810177, -0.007849561050534248, -0.01434666570276022, -1.5040229558944702, -0.001260201446712017, -0.025227665901184082, -1.0543731451034546, -0.2278115600347519, -0.002378137083724141, -0.11427351087331772, -0.17451247572898865, -1.0949461460113525, -0.006659102160483599, -0.6060993075370789, -0.0003916450368706137, -1.2956572771072388, -0.03832872956991196, -1.0870124101638794, -3.397406908334233e-05, -0.010812859050929546, -6.318072337307967e-06, -0.0010368215152993798, -0.0016825341153889894, -0.00042429505265317857, -0.005922625306993723, -0.0876048132777214, -2.1479921340942383, -0.5647832751274109, -0.04627106338739395, -0.006199534051120281, -0.016563406214118004, -0.00040904260822571814, -0.03249210864305496, -0.40965962409973145, -0.09591646492481232, -0.028163978829979897, -0.44256725907325745, -0.0014035383937880397, -0.0012424614978954196, -0.004923244938254356, -0.28228282928466797, -0.10533567517995834, -0.02565719559788704, -0.010254553519189358, -0.0002796259068418294, -0.0032063524704426527, -0.0008793777669779956, -0.006550388410687447, -0.0002184867626056075, -0.08571839332580566, -0.0002315968304174021, -1.174742341041565, -0.2997056543827057, -0.0004287039046175778, -0.061441417783498764, -0.08991565555334091, -0.8125795722007751, -2.5681562423706055, -1.6346478462219238, -0.0015783959534019232, -0.001369491801597178, -0.001567802974022925, -0.0029913701582700014, -0.004363302141427994, -0.6165457963943481, -0.6792376041412354, -0.12390507012605667, -0.000977157847955823, -0.03015880659222603, -3.6000557884108275e-05, 0.0, -0.07334250211715698, -0.04216219112277031, -0.0003638797497842461, -0.00020883286197204143, -0.03135270997881889, -0.004390838090330362, -0.0005312938592396677, -1.160302758216858, -0.028441403061151505, -0.012210970744490623, -0.06321346759796143, -2.3120760917663574, -0.1397390067577362, -0.6732482314109802, -0.000783613184466958, -0.09953611344099045, -0.05921903997659683, -0.6226266622543335, -0.8953760266304016, -0.001374848885461688, -0.023815639317035675, -0.005218811798840761, -0.002314628567546606, -0.37134110927581787, -0.052277542650699615, -1.0103724002838135, -0.0008640132145956159, -0.001806176733225584, -0.07596994191408157, -0.00031263710116036236, -3.9934315282152966e-05, -0.0019883401691913605, -7.748303323751315e-05, -5.376194530981593e-05, -0.0003069168305955827, -6.41325386823155e-05, -0.0018033209489658475, -0.23178435862064362, -3.8980677345534787e-05, -0.05799058452248573, -0.07301110774278641, -0.11136310547590256, -0.0003897384158335626, -0.06073569133877754, -0.013690032996237278, -0.0006983225466683507, -0.0011092231143265963, -1.777299165725708, -3.015949550899677e-05, -0.000982159748673439, -0.0002768848498817533, -0.7270095348358154, -0.006980673875659704, -0.011356120929121971, -8.880697714630514e-05, -0.026218002662062645, -0.00014399446081370115, -0.00023016665363684297, -0.00550338439643383, -0.0061763133853673935, -0.1826128214597702, -0.0005009111482650042, -2.3346338272094727, -0.006812323350459337, -0.00021860594279132783, -0.04874527081847191, -0.024497300386428833, -0.0045228092931210995, -0.020052332431077957, -3.193074941635132, -0.011775036342442036, -1.3437597751617432, -1.4156990051269531, -1.71271812915802, -0.15407921373844147, -0.07660659402608871, -0.00033122775494121015, -0.05306229740381241, -0.008627286180853844, -0.022066423669457436, -0.06596415489912033, -0.00013004888023715466, -0.016202325001358986, -0.09707272797822952, -0.0007856381707824767, -0.1300121545791626, -0.6312209367752075, -0.3651772141456604, -0.004475576803088188, -0.015685515478253365, -0.00017832119192462415, -0.05869724228978157, -0.18660375475883484, -0.009494625963270664, -0.25963521003723145, -0.026570959016680717, -0.053895458579063416, -0.110151506960392, -0.19295091927051544, -0.36537882685661316, -0.00036566724884323776, -0.000512111175339669, -0.10105397552251816, -0.02772648259997368, -0.5716117024421692, -0.5218484997749329, -2.4981658458709717, -0.061884697526693344, -0.07748303562402725, -5.960462772236497e-07, -1.593180537223816, -0.03445126488804817, -0.3189065456390381, -5.113947918289341e-05, -0.0005625095800496638, -0.0005069877952337265, -0.0066394442692399025, -0.022560367360711098, -0.025421302765607834, -0.004240687470883131, -0.3703558146953583, -0.011049983091652393, -0.05905577540397644, -0.0003736513026524335, -0.06392617523670197, -0.38800138235092163, -0.010918752290308475, -0.31982001662254333, -0.022161804139614105, -0.028024079278111458, -1.4796863794326782, -0.024662351235747337, -0.5766184329986572, -0.2677949368953705, -0.3914640247821808, -0.4742392599582672, -0.6294538974761963, -0.01091155968606472, -0.4679598808288574], "finish_reason": "stop"}], "metrics": {"energy": 271.0993897056579, "energy_per_token": 1.1890324109897277, "time": 10.090949, "time_per_token": 0.04425854824561404}}
{"outputs": [{"text": "# Initialize a DataFrame to store the data\n    df = pd.DataFrame()\n\n    # Iterate over the files in alphabetical order\n    for filename in sorted(os.listdir(path)):\n        # Skip non-JSON files\n        if not filename.endswith('.json'):\n            continue\n\n        # Read the JSON file\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n\n        # Add a new column to store the source file name\n        df[filename] = [json.dumps(row) for row in data]\n\n    # Move the processed files to a \"processed\" subdirectory\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n    for filename, data in df.iteritems():\n        # Write the data to a JSON file in the processed directory\n        with open(os.path.join(processed_path, filename), 'w') as f:\n            json.dump(data, f, indent=", "tokens": ["#", " Initialize", " a", " Data", "Frame", " to", " store", " the", " data", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " alphabet", "ical", " order", "\n", "    ", "for", " filename", " in", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", ":", "\n", "        ", "#", " Skip", " non", "-", "JSON", " files", "\n", "        ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Read", " the", " JSON", " file", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "\n", "        ", "#", " Add", " a", " new", " column", " to", " store", " the", " source", " file", " name", "\n", "        ", "df", "[", "filename", "]", " =", " [", "json", ".", "d", "umps", "(", "row", ")", " for", " row", " in", " data", "]", "\n", "\n", "    ", "#", " Move", " the", " processed", " files", " to", " a", " \"", "processed", "\"", " sub", "directory", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "processed", "_", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "for", " filename", ",", " data", " in", " df", ".", "iter", "items", "():", "\n", "        ", "#", " Write", " the", " data", " to", " a", " JSON", " file", " in", " the", " processed", " directory", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "processed", "_", "path", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "json", ".", "dump", "(", "data", ",", " f", ",", " indent", "="], "logprobs": [-1.6791048049926758, -3.413499355316162, -1.4617421627044678, -1.6309316158294678, -0.0008182753226719797, -1.1914243698120117, -0.329637736082077, -0.17606782913208008, -0.3911277949810028, -0.6508466601371765, -0.0011917401570826769, -0.016282198950648308, -0.003502308391034603, -0.049435798078775406, -0.00011050090688513592, -0.005925706587731838, -0.36386632919311523, -0.000753476400859654, -0.2263120710849762, -0.00031144535751082003, -0.05585927516222, -1.0974090099334717, -0.0010850501712411642, -0.46560388803482056, -1.0067951679229736, -0.37272909283638, -0.03794271498918533, -1.587393045425415, -0.003413091180846095, -0.0005538121913559735, -0.09541737288236618, -0.0004253674705978483, -0.10840056836605072, -0.3501555323600769, -0.003700672183185816, -0.2697632610797882, -0.010543123818933964, -0.0084605123847723, -2.50339189733495e-06, -0.00101062236353755, -2.622600959512056e-06, -0.001672894461080432, -0.002365055261179805, -0.009805607609450817, -7.748303323751315e-05, -0.0029955299105495214, -0.02538760006427765, -1.0496840476989746, -1.429711937904358, -0.7129223346710205, -0.0029763944912701845, -0.015453831292688847, -0.002925166627392173, -0.06124364584684372, -0.0001174142598756589, -0.0029294455889612436, -0.33721819519996643, -0.039876800030469894, -9.60780744208023e-05, -0.017750807106494904, -2.0861407392658293e-05, -2.3841855067985307e-07, -0.12009196728467941, -0.03643130511045456, -0.00014065706636756659, -0.0001463782973587513, -0.006050484720617533, -0.0014146092580631375, -0.0002961912250611931, -0.0075222342275083065, -0.00019059749320149422, -0.09772225469350815, -0.00018285033002030104, -0.0233705285936594, -0.47815871238708496, -0.12577292323112488, -0.31326723098754883, -0.4955505430698395, -1.5747324228286743, -0.00012718822108581662, -0.10827156156301498, -0.00017855956684798002, -0.0008123196894302964, -0.039169780910015106, -0.00037269797758199275, -1.4781842764932662e-05, -0.004702461417764425, -1.1324817933200393e-05, -1.8954096958623268e-05, -0.0001394651480950415, -4.7801782784517854e-05, -0.0008182753226719797, -0.15637455880641937, -1.728519782773219e-05, -0.01630976051092148, -0.042357031255960464, -0.038410987704992294, -0.00020728347590193152, -0.03879636153578758, -0.00722486199811101, -0.00012599628826137632, -0.0004412154376041144, -0.263998806476593, -0.005360159557312727, -0.0032895284239202738, -2.372236667724792e-05, -0.006216356996446848, -0.00011288482346571982, -7.223821739898995e-05, -0.0050150551833212376, -0.0038469848223030567, -0.03940589353442192, -0.01322556845843792, -0.009347720071673393, -1.3975838422775269, -0.732377827167511, -1.6425457000732422, -0.5145373344421387, -1.462296485900879, -2.4326205253601074, -0.016030240803956985, -0.7572044134140015, -0.9859418272972107, -0.8569573760032654, -0.028268514201045036, -7.521823135903105e-05, -0.5633358955383301, -0.26029619574546814, -0.5667451620101929, -0.05805729329586029, -6.913899414939806e-05, -1.7805228233337402, -0.4772700369358063, -0.14491866528987885, -0.07242582738399506, -0.0005446380819194019, -0.006431239657104015, -1.361324667930603, -0.07759875804185867, -0.006777394562959671, -0.0002517383254598826, -2.4318398573086597e-05, -0.0010044296504929662, -0.002948938636109233, -0.003960504662245512, -0.0874132364988327, -0.2716996371746063, -0.03966990113258362, -0.41224464774131775, -0.32663220167160034, -0.1257190853357315, -0.022647542878985405, -0.036267150193452835, -0.25332844257354736, -0.4202815592288971, -0.0067140464670956135, -0.0009656057227402925, -0.0756978765130043, -0.004329355899244547, -0.018815254792571068, -0.000558220490347594, -0.40990087389945984, -0.011815328150987625, -0.6817018985748291, -0.0001532914029667154, -0.011539734899997711, -1.5616295058862306e-05, -2.4676019165781327e-05, -0.0004518203204497695, -0.0002422039397060871, -0.0004483648226596415, -0.011913929134607315, -0.0006985607906244695, -0.033147815614938736, -0.0023060652893036604, -0.0008833082392811775, -0.00014101465058047324, -0.009072980843484402, -0.7335013151168823, -5.960462772236497e-07, -0.0809391662478447, -8.49926145747304e-05, -0.00021109737281221896, -1.8596476365928538e-05, -0.00040880427695810795, -6.556489552167477e-06, -2.0265558760002023e-06, -0.0028211576864123344, -0.0012243640376254916, 0.0, -3.5523738915799186e-05, -0.0007413261337205768, -0.0002520958660170436, -0.0001842805795604363, -0.012716867960989475, -0.12644021213054657, -0.15422318875789642, -0.045539166778326035, -0.9667874574661255, -1.5415509939193726, -0.04011606425046921, -0.018046937882900238, -0.001353420433588326, -0.6022036671638489, -0.3151829242706299, -0.00019762947340495884, -0.0037237131036818027, -0.0005585778853856027, -1.4240124225616455, -1.0545045137405396, -0.0752500668168068, -2.1206319332122803, -0.3455682098865509, -0.14576682448387146, -1.0689795017242432, -0.002273119753226638, -0.8651209473609924, -0.04194650799036026, -0.4135362207889557, -0.3185060918331146, -0.014118432998657227, -0.0001232548092957586, -0.07178828120231628, -0.00021264675888232887, -0.000618624035269022, -0.002130740089341998, -0.00014125302550382912, -5.960446742392378e-06, -0.0007267932523973286, -9.059865078597795e-06, -5.495397272170521e-05, -0.0019181440584361553, -2.264974000354414e-06, -3.576278118089249e-07, -2.6702524337451905e-05, -0.004046705085784197, -0.005299804266542196, -0.0004366874636616558, -0.001073499326594174, -0.004330424126237631, -0.0009682258241809905, -9.929640509653836e-05, -0.0040702130645513535, -0.0007296522380784154, -1.0251946150674485e-05, -0.0004104725376237184, -0.02971651218831539, -0.00025138078490272164, -0.00017033556650858372, -0.01541016437113285, -0.01957082562148571, -0.08675173670053482, -0.00011955977242905647, -1.2840890884399414, -0.06631273031234741, -0.0009815642843022943], "finish_reason": "length"}], "metrics": {"energy": 286.4310073490141, "energy_per_token": 1.1188711224570864, "time": 11.353371, "time_per_token": 0.04434910546875}}
{"outputs": [{"text": "print(\"Running task function\")\n    os.makedirs('processed', exist_ok=True)\n    files = sorted(os.listdir(path))\n\n    # Parse each JSON file using pandas.json_normalize()\n    df_list = [\n        pd.DataFrame(\n            pd.read_json(os.path.join(path, file), orient=\"records\",\n                         lines=True),\n            columns=[col.lower() for col in df.columns]\n        )\n        for file in files\n    ]\n    df = pd.concat(df_list, axis=0)\n    df['source'] = df.index.astype(str).str.join('.')\n    df = df.reset_index(drop=True)\n    df.to_json(\"processed/concat.json\", orient=\"records\",\n               lines=True, ensure_ascii=False)\n    return df", "tokens": ["print", "(", "\"", "Running", " task", " function", "\"", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "('", "processed", "'", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "files", " =", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", "\n", "\n", "    ", "#", " Parse", " each", " JSON", " file", " using", " pandas", ".", "json", "_", "normal", "ize", "()", "\n", "    ", "df", "_", "list", " =", " [", "\n", "        ", "pd", ".", "DataFrame", "(", "\n", "            ", "pd", ".", "read", "_", "json", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", ")", ",", " orient", "=", "\"", "records", "\"", ",", "\n", "                ", "         ", "lines", "=", "True", ")", ",", "\n", "            ", "columns", "=[", "col", ".", "lower", "()", " for", " col", " in", " df", ".", "columns", "]", "\n", "        ", ")", "\n", "        ", "for", " file", " in", " files", "\n", "    ", "]", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", "_", "list", ",", " axis", "=", "0", ")", "\n", "    ", "df", "['", "source", "']", " =", " df", ".", "index", ".", "ast", "ype", "(", "str", ")", ".", "str", ".", "join", "('", ".", "')", "\n", "    ", "df", " =", " df", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n", "    ", "df", ".", "to", "_", "json", "(", "\"", "processed", "/", "concat", ".", "json", "\"", ",", " orient", "=", "\"", "records", "\"", ",", "\n", "               ", "lines", "=", "True", ",", " ensure", "_", "ascii", "=", "False", ")", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-4.368256568908691, -0.30731746554374695, -1.0076473951339722, -3.5346338748931885, -0.3729027807712555, -2.1419641971588135, -1.1782474517822266, -0.020074648782610893, -0.012832798063755035, -0.26114553213119507, -2.9666683673858643, -0.00041976699139922857, -0.23354724049568176, -0.00017379203927703202, -0.001321991323493421, -1.6985567808151245, -0.1301981508731842, -0.041757646948099136, -0.001256034360267222, -0.007533947471529245, 0.0, -7.223821739898995e-05, -0.00895200576633215, -0.0014842457603663206, -0.002049609087407589, -0.032188449054956436, -0.30750155448913574, -1.5011262893676758, -0.024414822459220886, -1.235599398612976, -0.15995991230010986, -0.11301124095916748, -0.00020966715237591416, -0.014975505881011486, -4.351044481154531e-05, -0.004092888906598091, -0.0053275516256690025, -0.04589573293924332, -0.03332759067416191, -2.7011609077453613, -0.0008186326595023274, -2.3317008018493652, -4.219745635986328, -1.0441558361053467, -0.705784261226654, -0.0068824137561023235, -3.516115665435791, -0.716933012008667, -1.0758023262023926, -2.412677526473999, -0.018767522647976875, -0.004613944329321384, -3.111314072157256e-05, -1.1964480876922607, -0.7648687958717346, -0.0014384171226993203, -1.0172460079193115, -2.6323914527893066, -0.3159152865409851, -0.002118487609550357, -0.5950224995613098, -1.7314752340316772, -0.009216737933456898, -0.07902161031961441, -0.00018273114983458072, -1.779756784439087, -0.5059254765510559, -1.9555147886276245, -0.007671301253139973, -2.0264222621917725, -0.00014733182615600526, -0.432455837726593, -8.535020606359467e-05, -0.00023982033599168062, -0.006435503717511892, -0.3264499604701996, -0.0001591317413840443, -0.0003885467885993421, -0.00010525626566959545, -0.0005463061388581991, -0.0008197046699933708, -0.0023309222888201475, -0.0001456631434848532, -0.9822596907615662, -0.7275328040122986, -0.00022957073815632612, -0.3775079846382141, -1.140087604522705, -0.00690182950347662, -0.16234882175922394, -0.00020323118951637298, -1.218084692955017, -2.3394389152526855, -0.04638476297259331, -0.265218049287796, -0.18494650721549988, -0.0027632645796984434, -0.019610336050391197, -0.5163844227790833, -0.9150194525718689, -0.11085053533315659, -0.08481836318969727, -0.08161627501249313, -0.508589506149292, -2.4224441051483154, -0.4652681052684784, -0.5335761308670044, -0.0005208089714869857, -0.2990008294582367, -0.0006032554083503783, -0.0007142852991819382, -0.3859142065048218, -0.06722822785377502, -0.02976013720035553, -0.8452499508857727, -0.5157373547554016, -0.038119908422231674, -0.036392565816640854, -0.5583292245864868, -0.004876268561929464, -0.03087649866938591, -0.006143731996417046, -0.008472569286823273, -0.005421577952802181, -0.06778992712497711, -0.5124044418334961, -0.0016212427290156484, -0.0020427091512829065, -1.2485003471374512, -0.5595442652702332, -0.0664384514093399, -0.020487943664193153, -0.0002851079625543207, -0.007117629982531071, -0.010132541880011559, -0.0036387916188687086, -0.0003629264247138053, -3.397406908334233e-05, -0.13540534675121307, -0.8783363699913025, -0.006589824799448252, -0.12724173069000244, -0.4363406300544739, -0.1251361072063446, -0.3282032310962677, -0.05520036071538925, -0.6212311387062073, -0.30998706817626953, -0.0015751824248582125, -0.0029419257771223783, -1.3616501092910767, -0.7252982258796692, -0.42448607087135315, -0.23088158667087555, -2.8946094512939453, -0.00018070495571009815, -0.20048749446868896, -0.06980060786008835, -0.006128566339612007, -0.675388753414154, -1.0179544687271118, -0.05285188928246498, -1.6486761569976807, -0.38297876715660095, -0.9700087904930115, -0.6053017377853394, -0.4709790349006653, -0.17073825001716614, -0.11831684410572052, -1.7464104890823364, -0.014679284766316414, -0.14749927818775177, -2.099900245666504, -9.536738616588991e-07, -5.304672595229931e-05, -0.15062907338142395, -0.01625416800379753, -0.0003743662964552641, -0.00416661286726594, -0.011935368180274963, -0.006122049875557423, -0.6577455997467041, -0.4904538691043854, -0.1212485060095787, -0.2005736380815506, -5.960462772236497e-07, -1.6034986972808838, -0.3850174844264984, -1.160372257232666, -0.10034774243831635, -0.1662270724773407, -3.804708957672119, -0.6735955476760864, -0.05810847133398056, -0.003261605743318796, -0.10914026200771332, -0.06436142325401306, -0.17630112171173096, -0.0003909300430677831, -0.021382402628660202, -0.00014685506175737828, -0.17538854479789734, -1.56305730342865, -0.024774113669991493, -0.34390929341316223, -0.0003736513026524335, -0.04192855954170227, -0.11794218420982361, -3.778855800628662, -5.960462772236497e-07, -0.0010981488740071654, -0.0001658063702052459, -0.03513365983963013, -0.34380999207496643, -0.011035481467843056, -0.460214763879776, -0.8981142044067383, -0.025539372116327286, -0.2831023931503296, -0.01543152891099453, -2.484370231628418], "finish_reason": "stop"}], "metrics": {"energy": 262.200034248352, "energy_per_token": 1.1864254943364343, "time": 9.678463, "time_per_token": 0.04379395022624435}}
{"outputs": [{"text": "# Read the files from the directory\n    files = [f for f in os.listdir(path) if f.endswith('.json')]\n    dfs = []\n    for file in sorted(files):\n        with open(os.path.join(path, file), 'r') as f:\n            dfs.append(pd.DataFrame.from_records(json.load(f)))\n    df = pd.concat(dfs, ignore_index=True).astype('int64')\n    df['source'] = files\n\n    # Move the files to a \"processed\" subdirectory\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    for file in files:\n        shutil.move(os.path.join(path, file), os.path.join(path, 'processed', file))\n\n    # Return the DataFrame of data\n    return df", "tokens": ["#", " Read", " the", " files", " from", " the", " directory", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", "]", "\n", "    ", "d", "fs", " =", " []", "\n", "    ", "for", " file", " in", " sorted", "(", "files", "):", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "d", "fs", ".", "append", "(", "pd", ".", "DataFrame", ".", "from", "_", "records", "(", "json", ".", "load", "(", "f", ")))", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "d", "fs", ",", " ignore", "_", "index", "=", "True", ")", ".", "ast", "ype", "('", "int", "6", "4", "')", "\n", "    ", "df", "['", "source", "']", " =", " files", "\n", "\n", "    ", "#", " Move", " the", " files", " to", " a", " \"", "processed", "\"", " sub", "directory", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'", ",", " file", "))", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", " of", " data", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.6791048049926758, -3.096017360687256, -1.4524282217025757, -1.5557202100753784, -2.2038912773132324, -0.11693856865167618, -0.7046753764152527, -0.9726032018661499, -0.0029855461325496435, -0.44384124875068665, -0.021035663783550262, -0.9220207333564758, -0.6880061030387878, -0.04361647367477417, -0.0006728292210027575, -0.0005492847412824631, -0.02584761194884777, -4.410734163684538e-06, -0.004514027386903763, -2.861018856492592e-06, -0.0018692417070269585, -0.003245327156037092, -0.010160154663026333, -0.012087429873645306, -0.3033561110496521, -0.018662458285689354, -0.009470300748944283, -5.352353764465079e-05, -2.3841855067985307e-07, -0.18113654851913452, -0.05733352527022362, -0.00042429505265317857, -0.0004625442670658231, -0.014177553355693817, -0.004494920838624239, -0.14032329618930817, -3.276994228363037, -0.0017823775997385383, -0.010049460455775261, -0.5667842626571655, -0.010630881413817406, -0.1266007125377655, -0.060104791074991226, -1.6863772869110107, -0.03700907900929451, -1.0552570819854736, -0.00028713393840007484, -0.003918352071195841, -0.03665967285633087, -0.02257610112428665, -0.0021528657525777817, -0.3446105420589447, -0.0010474200826138258, -0.0024829055182635784, -0.14030691981315613, -1.5616295058862306e-05, -6.603976362384856e-05, -0.0031091466080397367, -8.332382276421413e-05, -8.868777513271198e-05, -0.0003271759778726846, -9.643566590966657e-05, -0.0038856971077620983, -0.263386607170105, -4.327203714638017e-05, -0.07827835530042648, -0.0467781126499176, -0.06610275059938431, -0.00030763185350224376, -0.030124222859740257, -0.013729071244597435, -0.000819466426037252, -0.0010190776083618402, -1.6137853860855103, -0.03603926673531532, -0.002170351566746831, -0.003203381784260273, -0.006251778919249773, -0.12497872859239578, -2.074220174108632e-05, -1.0105490684509277, -1.4672627449035645, -2.8967437174287625e-05, -3.433168603805825e-05, -2.136108875274658, -0.02109484374523163, -0.0333605632185936, -9.619726915843785e-05, -0.010471755638718605, -0.0002324311062693596, -0.000816131301689893, -1.2769770622253418, -0.002912804950028658, -1.0249834060668945, -0.5066541433334351, -0.0055879103019833565, -0.005780646111816168, -4.100715523236431e-05, -0.002380040008574724, -0.0033516681287437677, -0.0008666335488669574, -5.483612312673358e-06, -0.4783772826194763, -0.5366606116294861, -1.9073468138230965e-06, -0.0001454247540095821, -0.005121089518070221, -0.002014156896620989, -0.05835724622011185, -2.717888355255127, -1.2395318746566772, -0.0009303532424382865, -2.2000226974487305, -0.21619684994220734, -0.17309437692165375, -1.4305104514278355e-06, -0.007116209715604782, -0.060478419065475464, -0.1946837604045868, -0.22534134984016418, -0.22602179646492004, -0.38821324706077576, -0.0007949291029945016, -0.0014859121292829514, -1.1393855810165405, -0.037973932921886444, -1.1993401050567627, -0.0010025242809206247, -0.017514681443572044, -0.1915152370929718, -0.23044610023498535, -0.5902588963508606, -0.03832941874861717, -1.070448875427246, -1.5855181217193604, -0.011835590936243534, -0.0020864878315478563, -0.19300027191638947, -0.00482596829533577, -0.03875863552093506, -0.0008382858941331506, -1.9410412311553955, -2.0503786799963564e-05, -0.24454957246780396, -3.242440288886428e-05, -0.0003053675754927099, -0.26756882667541504, -0.06252522766590118, -0.0010302717564627528, -6.890059739816934e-05, -0.0036241819616407156, -0.0005801424849778414, -0.001262820791453123, -0.005015885457396507, -0.0024943212047219276, -0.04070556163787842, -0.003504327731207013, -0.010808967985212803, -0.00012337400403339416, -0.0013243722496554255, 0.0, -4.1126360883936286e-05, -0.0006065912893973291, -0.00041762212640605867, -0.0002150304353563115, -0.006127618718892336, -0.006860037334263325, -0.15739549696445465, -0.2716049551963806, -0.08689021319150925, -0.18903157114982605, -0.002968074521049857, -0.00044216870446689427, -0.00025042734341695905, -0.21564500033855438, -7.962863310240209e-05, -1.9073468138230965e-06, -0.011031472124159336, -0.0005211663665249944, -0.020673975348472595, -5.221230458118953e-05, -2.4437606043647975e-05, -4.9232225137529895e-05, -7.402622577501461e-05, -6.890059739816934e-05, -0.0003010773507412523, -3.766942609217949e-05, -0.0006012300727888942, -0.00011538793478393927, -4.6967357775429264e-05, -0.05278947204351425, -5.006664650863968e-05, -2.5152843591058627e-05, -5.543078441405669e-05, -8.976056415122002e-05, -0.0008728270186111331, -0.0035106237046420574, -0.00039867559098638594, -0.005303480662405491, -0.00024863966973498464, -0.2377627193927765, -9.858122211880982e-05, -0.008669831790030003, -0.011492125689983368, -0.0027268866542726755, -0.25182804465293884, -0.0028320939745754004, -2.607295274734497, -0.34421148896217346, -0.05393883213400841, -1.146639347076416, -0.0021977098658680916, -2.670673131942749, -2.7917747497558594, -0.6264645457267761, -0.0008262557676061988, -0.0047876485623419285, -0.005478487350046635, -0.8410201668739319, -4.768370445162873e-07, -1.9073468138230965e-06, -1.680836794548668e-05, -0.00016878610767889768, -0.15533563494682312], "finish_reason": "stop"}], "metrics": {"energy": 248.92595517730717, "energy_per_token": 1.1112765856129785, "time": 9.877602, "time_per_token": 0.044096437499999995}}
{"outputs": [{"text": "path = Path(path)\n    if path.is_file():\n        filename = path.name\n        with open(path, 'r') as f:\n            data = json.load(f)\n    else:\n        os.mkdir(path)\n        with open(path.joinpath(\"a.json\"), \"w\") as f:\n            f.write('[{\"a\": 1, \"b\": 2}, {\"a\": 3, \"b\": 4}]')\n        with open(path.joinpath(\"b.json\"), \"w\") as f:\n            f.write('[{\"a\": 5, \"b\": 6}, {\"a\": 7, \"b\": 8}]')\n        filename = path.name\n        data = json.load(open(path.joinpath(path.name, \"a.json\")))\n    df = pd.DataFrame(data).rename(columns={\"a\": \"a_\", \"b\": \"b_\"})\n    df[\"Source\"] = filename\n    return df", "tokens": ["path", " =", " Path", "(", "path", ")", "\n", "    ", "if", " path", ".", "is", "_", "file", "():", "\n", "        ", "filename", " =", " path", ".", "name", "\n", "        ", "with", " open", "(", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "    ", "else", ":", "\n", "        ", "os", ".", "mk", "dir", "(", "path", ")", "\n", "        ", "with", " open", "(", "path", ".", "join", "path", "(", "\"", "a", ".", "json", "\"", ")", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "[", "{\"", "a", "\":", " ", "1", ",", " \"", "b", "\":", " ", "2", "}", ",", " ", "{\"", "a", "\":", " ", "3", ",", " \"", "b", "\":", " ", "4", "}]", "')", "\n", "        ", "with", " open", "(", "path", ".", "join", "path", "(", "\"", "b", ".", "json", "\"", ")", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "[", "{\"", "a", "\":", " ", "5", ",", " \"", "b", "\":", " ", "6", "}", ",", " ", "{\"", "a", "\":", " ", "7", ",", " \"", "b", "\":", " ", "8", "}]", "')", "\n", "        ", "filename", " =", " path", ".", "name", "\n", "        ", "data", " =", " json", ".", "load", "(", "open", "(", "path", ".", "join", "path", "(", "path", ".", "name", ",", " \"", "a", ".", "json", "\"", ")))", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", ".", "rename", "(", "columns", "=", "{\"", "a", "\":", " \"", "a", "_", "\"", ",", " \"", "b", "\":", " \"", "b", "_", "\"}", ")", "\n", "    ", "df", "[", "\"", "Source", "\"", "]", " =", " filename", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-3.4677629470825195, -0.09546494483947754, -2.0908312797546387, -0.005081476178020239, -0.008458266966044903, -0.0008908117306418717, -0.1294780671596527, -0.11654991656541824, -0.7448244690895081, -1.9771020412445068, -0.002483856864273548, -1.0907022953033447, -0.00027581225731410086, -1.3378443717956543, -0.030451057478785515, -0.0665106251835823, -0.001808556611649692, -3.9465253353118896, -0.05931846797466278, -0.12036648392677307, -0.008316528052091599, -0.39333397150039673, -0.10608921200037003, -0.009284652769565582, -1.0437774658203125, -0.2609291076660156, -0.00129270413890481, -0.09260787069797516, -0.1878485381603241, -0.258374959230423, -0.10076828300952911, -0.10241007804870605, -0.0006157647585496306, -0.07214969396591187, -0.007615462876856327, -0.0011751896236091852, -0.0009706076816655695, -0.8638147115707397, -0.007798108737915754, -0.01834169588983059, -0.00015448330668732524, -0.040516696870326996, -0.00027259447961114347, -0.0002474478678777814, -0.011888955719769001, -0.007588607259094715, -3.342958927154541, -0.2098023146390915, -0.00020644917094614357, -0.00828342605382204, -0.0010031197452917695, -3.7397778034210205, -0.0004303721070755273, -0.46167710423469543, -5.1377883210079744e-05, -0.15274766087532043, -0.12333514541387558, -0.07792411744594574, -0.015658406540751457, -0.02768462337553501, -4.0948052406311035, -0.4566156566143036, -0.07098978012800217, -0.305776983499527, -2.4729981422424316, -0.05005475506186485, -0.010676172561943531, -1.1590203046798706, -0.8847200274467468, -1.4944010972976685, -0.010515756905078888, -0.002864545676857233, -0.00016127715934999287, -0.007506616413593292, -0.0012235306203365326, -0.8861650228500366, -0.020261341705918312, -0.030469443649053574, -0.00605012895539403, -0.0009847796754911542, -0.07760482281446457, -0.022201096639037132, -0.0034575224854052067, -0.00429149204865098, -0.5896881818771362, -0.0006653240998275578, -0.0032279787119477987, -0.7304556369781494, -0.08762872964143753, -0.0043459730222821236, -0.007366163190454245, -0.0017420368967577815, -0.03558380529284477, -0.004674696829169989, -0.0066149309277534485, -0.003856603754684329, -0.0004514628672040999, -0.00012540031457319856, -0.0031773580703884363, -0.0023660066071897745, -0.019134346395730972, -0.00020656836568377912, -0.004213503561913967, -3.3378546504536644e-06, -0.0008790204883553088, -5.781483559985645e-05, -0.000916418619453907, -0.003027144121006131, -0.00013636612857226282, -0.0001879753835964948, -0.0001501924270996824, -3.886147169396281e-05, -0.0006478118011727929, -0.0006808108882978559, -0.006017780862748623, -0.0011369676794856787, -0.0035345007199794054, -0.10772037506103516, -0.18966715037822723, -0.0012625826057046652, -0.0002076410164590925, -0.002627256326377392, -0.0018942285096272826, -0.0001616347290109843, -2.777537883957848e-05, -0.0014257990987971425, -0.00018749863374978304, -0.010197561234235764, -0.0003181189822498709, -7.521823135903105e-05, -4.827859811484814e-05, -0.00015007323236204684, -3.2543604902457446e-05, -0.004795478656888008, -0.0002696150622796267, -0.00012039413559250534, -0.0001517419150331989, -0.090251624584198, -0.0002698534226510674, -0.00022539935889653862, -4.4225667807040736e-05, -0.0009501233580522239, -0.0007494263118132949, -6.437280717364047e-06, -0.0002051381452474743, -0.004138952121138573, -0.0006411403883248568, -1.6927575416048057e-05, -0.0008135108510032296, -2.5987286790041253e-05, -0.00042632073746062815, -0.0027699219062924385, -3.814624506048858e-05, -8.237022848334163e-05, -0.00012408917245920748, -6.437280717364047e-06, -0.00016926287207752466, -0.00038389943074434996, -0.0009441685397177935, -1.1801649634435307e-05, -6.031808152329177e-05, -2.3841855067985307e-07, -0.00012265883560758084, -9.059865078597795e-06, -0.0001387499796692282, -0.0004661188868340105, -9.548207890475169e-05, -7.73638384998776e-05, -8.141662692651153e-05, -1.8715683836489916e-05, -0.00019762947340495884, -0.00038842763751745224, -0.0007086864789016545, -0.00014876213390380144, -0.0021161085460335016, -0.09121294319629669, -1.267076015472412, -0.007380008231848478, -2.226790428161621, -0.07173646241426468, -0.5467894673347473, -0.04501337185502052, -0.20918288826942444, -0.7824026346206665, -0.004392737057060003, -1.3348995447158813, -0.009704082272946835, -0.12869341671466827, -0.013131566345691681, -0.22157418727874756, -0.022743450477719307, -0.05831732228398323, -0.07454970479011536, -0.017349500209093094, -0.004163288976997137, -0.0656881332397461, -3.0708956718444824, -0.469745010137558, -0.07735703885555267, -0.36953628063201904, -0.29044631123542786, -0.14012715220451355, -0.0017219253350049257, -0.00029583368450403214, -0.00018034738604910672, -0.4152895212173462, -0.16092665493488312, -0.6221189498901367, -0.16106893122196198, -0.014532316476106644, -0.03636888787150383, -0.00019727191829588264, -0.044096123427152634, -0.24734404683113098, -0.03331363573670387, -0.5660997629165649, -2.0883541107177734, -2.5309839248657227, -0.268314391374588, -0.07412540167570114, -0.5415458083152771, -0.03051430732011795, -0.18411725759506226, -0.02811066433787346, -0.042764078825712204, -0.30538907647132874, -3.005247116088867, -0.9178075194358826, -0.013195215724408627, -0.009188272058963776, -0.00032860602368600667, -0.0012950851814821362, -0.0005725175142288208, -0.0008025524439290166, -0.019216207787394524, -0.015341256745159626, -0.036162298172712326, -0.1675848811864853, -0.009877140633761883, -0.04760606586933136, -0.5852543711662292, -0.003033443121239543, -0.8462215662002563, -0.0017914213240146637, -0.0017064546700567007, -0.0004920940846204758, -0.18443839251995087, -0.09618005156517029, -0.02125462144613266, -2.004415988922119, -0.030828414484858513, -0.2807932198047638, -0.03389609605073929, -0.5475631356239319], "finish_reason": "stop"}], "metrics": {"energy": 273.85609464931485, "energy_per_token": 1.0781736009815546, "time": 11.360166, "time_per_token": 0.04472506299212598}}
{"outputs": [{"text": "files = os.listdir(path)\n    files.sort()\n    files = [os.path.join(path, file) for file in files if file.endswith('.json')]\n    df_list = [json.load(open(file, 'r')) for file in files]\n    df_list = [pd.DataFrame(df, columns=['a', 'b']).assign(Source=file) for file, df in zip(files, df_list)]\n    df = pd.concat(df_list)\n    return df", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "files", " =", " [", "os", ".", "path", ".", "join", "(", "path", ",", " file", ")", " for", " file", " in", " files", " if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", "]", "\n", "    ", "df", "_", "list", " =", " [", "json", ".", "load", "(", "open", "(", "file", ",", " '", "r", "'))", " for", " file", " in", " files", "]", "\n", "    ", "df", "_", "list", " =", " [", "pd", ".", "DataFrame", "(", "df", ",", " columns", "=['", "a", "'", ",", " '", "b", "'])", ".", "assign", "(", "Source", "=", "file", ")", " for", " file", ",", " df", " in", " zip", "(", "files", ",", " df", "_", "list", ")]", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", "_", "list", ")", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -0.9475932717323303, -1.3112935448589269e-05, -0.010935024358332157, -7.510157047363464e-06, -0.00199524057097733, -0.005349725019186735, -0.001077428925782442, -0.01593145914375782, -0.024939583614468575, -0.35276108980178833, -0.11364709585905075, -0.0003960540343541652, -0.048051200807094574, -0.0903480127453804, -0.16547074913978577, -3.150216579437256, -0.15879584848880768, -0.11714524775743484, -0.3076217770576477, -2.3483953555114567e-05, -0.000502817565575242, -0.0011818574275821447, -0.005125714931637049, -0.00043049128726124763, -0.0026372435968369246, -0.0003375437227077782, -1.542273759841919, -0.02073434367775917, -0.007012754213064909, -0.00024101213784888387, -0.00018070495571009815, -0.0014319891342893243, -0.5783026814460754, -0.09866982698440552, -0.013787743635475636, -0.025557849556207657, -3.290122185717337e-05, -1.1920928244535389e-07, -0.22106724977493286, -0.057532183825969696, -0.00043823651503771544, -0.00052426423644647, -0.011626344174146652, -0.005572262220084667, -0.2944582998752594, -0.6336727738380432, -1.9696018695831299, -0.07534437626600266, -0.0032987960148602724, -1.1427106857299805, -1.8181483745574951, -0.004795478656888008, -0.3089904487133026, -0.0004975749761797488, -0.01919562555849552, -0.0004477690381463617, -0.039302974939346313, -0.4734342694282532, -0.19398215413093567, -0.06305868923664093, -0.07318384945392609, -0.034088291227817535, -0.0002924968139268458, -0.00015710550360381603, -0.0017923733685165644, -0.00628873985260725, -0.005472084973007441, -0.07578960806131363, -0.07011662423610687, -2.7562122344970703, -0.2728657126426697, -0.18382905423641205, -0.11511501669883728, -0.0395243838429451, -1.7165990357170813e-05, -0.034438710659742355, -0.15915469825267792, -0.20281347632408142, -1.8604955673217773, -0.04556969553232193, -0.2545425593852997, -0.047993939369916916, -0.0006974886637181044, -4.339123915997334e-05, -0.030257005244493484, -0.00016449528629891574, -0.3746401369571686, -0.7884095311164856, -0.39290928840637207, -0.01738160103559494, -1.3377280235290527, -0.023747190833091736, -0.6170509457588196, -0.0386197492480278, -0.03698702156543732, -0.7611395120620728, -0.0035215525422245264, -0.006977122277021408, -0.0014812698354944587, -0.014273806475102901, -0.0007585985003970563, -0.0016387379728257656, -0.0004758894501719624, -0.0052580637857317924, -4.2199197196168825e-05, -2.6225699912174605e-05, -0.012635413557291031, -0.004162339493632317, -0.03895150125026703, -0.12781479954719543, -0.04205326735973358, -0.014297662302851677, -4.124556289752945e-05, -0.0014884117990732193, -0.004128623753786087, -0.0005342725198715925, -0.0002493547508493066, -1.585470999998506e-05, -1.0783498287200928, -0.052428457885980606, -0.07503388822078705, -1.5543314218521118, -0.014457355253398418, -0.5878841280937195, -0.027187054976820946, -2.3638954162597656], "finish_reason": "stop"}], "metrics": {"energy": 179.49460083389283, "energy_per_token": 1.4023015690147878, "time": 5.891423, "time_per_token": 0.0460267421875}}
{"outputs": [{"text": "os.makedirs(path, exist_ok=True)\n    df = []\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n                df.append([json.loads(row[\"a\"]) for row in data])\n    return pd.DataFrame(df)", "tokens": ["os", ".", "m", "aked", "irs", "(", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "df", " =", " []", "\n", "    ", "for", " filename", " in", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", ":", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "df", ".", "append", "([", "json", ".", "loads", "(", "row", "[", "\"", "a", "\"", "])", " for", " row", " in", " data", "])", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.6885671615600586, -0.0004539651272352785, -0.3828182518482208, -0.0001864259538706392, -0.0010637345258146524, -0.14632061123847961, -0.4878082275390625, -0.03790793940424919, -0.009560986422002316, -4.768370445162873e-07, -6.854299135738984e-05, -0.006679351441562176, -0.0013956816401332617, -0.0011934071080759168, -0.05956660583615303, -0.23273032903671265, -1.8418117761611938, -0.10619985312223434, -2.1258955001831055, -0.005378656554967165, -0.05476584658026695, -0.1437859833240509, -0.5781121253967285, -0.0067135728895664215, -0.3725639581680298, -0.00754755362868309, -0.016341308131814003, -0.0004818470624741167, -0.0012238877825438976, -4.529942543740617e-06, -0.0014661526074633002, -0.0039429315365850925, -0.007231608033180237, -0.00024875884992070496, -0.010687140747904778, -0.0016055324813351035, -0.32096558809280396, -0.35689347982406616, -0.007451005280017853, -0.014582131057977676, -5.793403761344962e-05, -2.3841855067985307e-07, -0.21060456335544586, -0.02352738194167614, -0.0006790239713154733, -0.00015138434537220746, -0.013490347191691399, -0.004158421885222197, -0.0013943722005933523, -0.24577000737190247, -0.0010218166280537844, -0.0009646529797464609, -0.07652642577886581, -0.0002739054325502366, -4.386805812828243e-05, -0.00839455146342516, -3.7788631743751466e-05, -4.911301948595792e-05, -0.00041952868923544884, -0.00013040646445006132, -0.0044050803408026695, -0.3514707386493683, -5.566918844124302e-05, -0.07006638497114182, -0.06070338189601898, -0.08412390947341919, -0.000459565402707085, -0.06614738702774048, -0.009637141600251198, -0.0004926898400299251, -0.000990734319202602, -0.7977864146232605, -0.0052001927979290485, -0.00880348403006792, -4.5298504119273275e-05, -0.013396606780588627, -0.0002008474839385599, -8.999896090244874e-05, -0.00774523476138711, -0.006418092176318169, -0.4368511736392975, -0.08549165725708008, -0.009077115915715694, -0.025900468230247498, -1.8654347658157349, -2.135080575942993, -0.1709090918302536, -0.19264784455299377, -0.002969857305288315, -1.2137186527252197, -2.1804685592651367, -0.10018404573202133, -0.0969991609454155, -0.0006562701892107725, -0.015056299045681953, -1.4313938617706299, -0.002277758438140154, -0.00027891082572750747, -0.008903210051357746, -0.2872830927371979, -0.020589664578437805, -0.8522021174430847, -1.548885464668274, -0.05630616098642349, -7.676783570786938e-05, -0.03171113505959511, -0.03908495232462883, -0.03356046974658966, -2.227517604827881, -2.7418097943154862e-06, -5.722029527532868e-06, -3.790783375734463e-05, -0.00010239553375868127, -0.06793384253978729], "finish_reason": "stop"}], "metrics": {"energy": 136.12237690925596, "energy_per_token": 1.194055937800491, "time": 5.0564494, "time_per_token": 0.04435481929824561}}
{"outputs": [{"text": "files = sorted(os.listdir(path))\n    df = pd.DataFrame()\n\n    for f in files:\n        if f.endswith('.json'):\n            with open(os.path.join(path, f), 'r') as fp:\n                data = json.load(fp)\n                df = df.append(pd.DataFrame(data, index=[0]), ignore_index=True)\n\n    df['Source'] = files\n\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n\n    df.to_csv(os.path.join(processed_path, 'result.csv'), index=False)\n    shutil.rmtree(path)\n\n    return df", "tokens": ["files", " =", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " '", "r", "')", " as", " f", "p", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "fp", ")", "\n", "                ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "data", ",", " index", "=[", "0", "])", ",", " ignore", "_", "index", "=", "True", ")", "\n", "\n", "    ", "df", "['", "Source", "']", " =", " files", "\n", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "processed", "_", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "df", ".", "to", "_", "csv", "(", "os", ".", "path", ".", "join", "(", "processed", "_", "path", ",", " '", "result", ".", "csv", "')", ",", " index", "=", "False", ")", "\n", "    ", "sh", "util", ".", "rm", "tree", "(", "path", ")", "\n", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -1.5632357597351074, -0.12832292914390564, -0.06489133089780807, -6.198863957251888e-06, -0.026178866624832153, -4.207999518257566e-05, -0.0009112972766160965, -0.004320928826928139, -0.02925480157136917, -0.038463182747364044, -0.06607384979724884, -0.7853944301605225, -0.14855417609214783, -0.2876708507537842, -2.6225699912174605e-05, -0.12417580932378769, -0.3562827706336975, -0.007519631180912256, -2.204756021499634, -0.0003406421164982021, -0.06804599612951279, -1.6771440505981445, -0.17006106674671173, -0.002123364945873618, -0.0005254556890577078, -0.001043133088387549, -0.00610178941860795, -0.4719995856285095, -0.2013259083032608, -0.024315932765603065, -0.024709569290280342, -4.541770613286644e-05, -1.1920928244535389e-07, -0.1943397969007492, -0.033853113651275635, -0.001039322349242866, -0.0002212279650848359, -0.014146171510219574, -0.006056290585547686, -0.0047488524578511715, -0.2831726372241974, -0.0010239601833745837, -0.0013681822456419468, -0.1612320840358734, -3.707340147229843e-05, -5.972207145532593e-05, -0.004038393963128328, -8.451581379631534e-05, -6.8662193370983e-05, -0.0004975749761797488, -0.00015162272029556334, -0.008756808005273342, -0.33336591720581055, -5.6265202147187665e-05, -0.043418336659669876, -0.05019693449139595, -0.04944396764039993, -0.0006721144891344011, -0.9711019396781921, -0.658501923084259, -0.0004328744253143668, -0.0015501875896006823, -0.00156816013623029, -0.6720240116119385, -0.0066221547313034534, -0.010034826584160328, -5.590759246842936e-05, -0.0054209851659834385, -0.0002040654799202457, -8.380061626667157e-05, -0.011362484656274319, -0.004537524189800024, -0.21018776297569275, -0.05757404863834381, -0.07905861735343933, -0.25677064061164856, -0.00015269544383045286, -0.002691101748496294, -0.12953659892082214, -0.09076908975839615, -9.870042413240299e-05, -0.02883816696703434, -0.31713011860847473, -0.014232791028916836, -0.7279016375541687, -0.25989824533462524, -0.060000162571668625, -0.40650415420532227, -0.29614272713661194, -0.00525581045076251, -0.21221637725830078, -2.3841855067985307e-07, -0.0001656871900195256, -0.001991433557122946, -0.0006712805479764938, -0.015355578623712063, -0.005011497065424919, -1.5700544118881226, -0.11464115232229233, -0.22138571739196777, -0.28109827637672424, -1.2197585105895996, -0.0005740663618780673, -0.0014353221049532294, -1.1283140182495117, -0.01300931628793478, -1.3282862901687622, -0.0006028980133123696, -1.5332061052322388, -0.1521674245595932, -0.6304669380187988, -0.0011231550015509129, -0.06341499090194702, -1.6331539882230572e-05, -6.568216485902667e-05, -0.0003181189822498709, -0.000954649003688246, -0.0027385372668504715, -0.02582588978111744, -0.0032093231566250324, -0.04990767687559128, -0.0117045808583498, -0.0024958669673651457, -0.0006386386230587959, -0.03753450885415077, -0.906211256980896, -2.0265558760002023e-06, -0.07134271413087845, -0.00013505500101018697, -0.00031287543242797256, -7.390703103737906e-05, -0.0033179253805428743, -1.3112935448589269e-05, -2.50339189733495e-06, -0.0032649326603859663, -0.00139318173751235, 0.0, -7.259582343976945e-05, -0.0005715643637813628, -0.000382707774406299, -0.00037174468161538243, -0.007447100710123777, -0.6229066252708435, -0.00012432756193447858, -0.4898035228252411, -0.004575260449200869, -0.02187143638730049, -1.311301275563892e-06, -0.46797817945480347, -0.004945782944560051, -0.032679613679647446, -0.00023934361524879932, -5.066266385256313e-05, -0.007565181702375412, -8.034383063204587e-05, -0.0004880429187323898, -0.012625172734260559, -2.5987286790041253e-05, -1.0728830375228426e-06, -0.0003782987187150866, -0.05223160982131958, -3.0659708976745605, -0.0313127376139164, -0.020431064069271088, -0.14884041249752045, -0.000188332938705571, -0.14926651120185852, -0.0002644904307089746, -0.00243105785921216, -0.04968288168311119, -0.02301841974258423, -2.2945845127105713, -1.5423026084899902, -0.000325388420606032, -2.5033637939486653e-05, -0.9392756223678589, -9.179073458653875e-06, -0.02513071894645691, -0.01919819787144661, -0.0959562137722969, -0.017308728769421577, -0.1630817949771881, -0.03802408650517464, -0.010797057300806046, -0.0046720863319933414, -0.8651624321937561, -0.013066736981272697, -1.9443238973617554], "finish_reason": "stop"}], "metrics": {"energy": 204.73800466346748, "energy_per_token": 1.0775684455971972, "time": 8.418854, "time_per_token": 0.04430975789473684}}
{"outputs": [{"text": "df = pd.DataFrame()\n    files = sorted([os.path.join(path, f)\n                    for f in os.listdir(path) if f.endswith('.json')])\n    for f in files:\n        with open(f, 'r') as read_file:\n            data = json.load(read_file)\n        df = df.append(pd.DataFrame(data).set_index(0).rename_axis('Source'), ignore_index=True)\n    df['source'] = df['source'].apply(lambda s: os.path.basename(s))\n    os.makedirs('processed', exist_ok=True)\n    processed_files = [os.path.join(path, f) for f in os.listdir(path)\n                       if f.endswith('.json') and f not in os.listdir('processed')]\n    for f in processed_files:\n        shutil.move(f, os.path.join('processed', os.path.basename(f)))\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "files", " =", " sorted", "([", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", "\n", "                ", "    ", "for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", "])", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", ",", " '", "r", "')", " as", " read", "_", "file", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "read", "_", "file", ")", "\n", "        ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "data", ")", ".", "set", "_", "index", "(", "0", ")", ".", "rename", "_", "axis", "('", "Source", "')", ",", " ignore", "_", "index", "=", "True", ")", "\n", "    ", "df", "['", "source", "']", " =", " df", "['", "source", "']", ".", "apply", "(", "lambda", " s", ":", " os", ".", "path", ".", "bas", "ename", "(", "s", "))", "\n", "    ", "os", ".", "m", "aked", "irs", "('", "processed", "'", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "processed", "_", "files", " =", " [", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", "\n", "                ", "       ", "if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", " and", " f", " not", " in", " os", ".", "list", "dir", "('", "processed", "')", "]", "\n", "    ", "for", " f", " in", " processed", "_", "files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "f", ",", " os", ".", "path", ".", "join", "('", "processed", "'", ",", " os", ".", "path", ".", "bas", "ename", "(", "f", ")))", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-1.696671485900879, -0.13643896579742432, -0.2820574641227722, -0.0003657863999251276, -0.20191600918769836, -0.25121864676475525, -0.014794166199862957, -0.1403081715106964, -2.3477237224578857, -0.03484093397855759, -1.0214780569076538, -2.4969921112060547, -1.5444920063018799, -1.1801649634435307e-05, -0.00041940953815355897, -0.00037305548903532326, -0.008772997185587883, -0.0017080017132684588, -0.021567918360233307, -0.0005781171494163573, -0.3195399045944214, -0.01362723857164383, -2.924804210662842, -0.06801792979240417, -0.39478087425231934, -0.0009501233580522239, -0.005606047809123993, -0.009128856472671032, -0.009862739592790604, -0.0002317160106031224, -0.0005868143052794039, -2.145764938177308e-06, -0.0006481691962108016, -0.005058466922491789, -0.09899283200502396, -1.124556541442871, -0.23042961955070496, -0.019954295828938484, -0.011026402935385704, -0.00011276562872808427, -1.1920928244535389e-07, -0.13701260089874268, -0.03846088796854019, -0.0004391897819004953, -0.0005071069463156164, -0.0508473701775074, -0.004474271554499865, -0.12520278990268707, -0.08046289533376694, -0.6293059587478638, -0.09573687613010406, -0.0030574502889066935, -0.0007121411035768688, -0.0016901507042348385, -0.003371034050360322, -0.2757485806941986, -0.002514773979783058, -0.00030989613151177764, -0.0017805927200242877, -0.5056368112564087, -0.1293359249830246, -0.0859038382768631, -0.071968674659729, -0.0010194348869845271, -3.5946106910705566, -0.25124412775039673, -0.0511615015566349, -0.0010128850117325783, -0.0030976191628724337, -0.002864070236682892, -0.9751289486885071, -0.03259884566068649, -0.011460777372121811, -6.949660019017756e-05, -0.011540794745087624, -0.000399033073335886, -0.001671228208579123, -1.6331539882230572e-05, -1.311301275563892e-06, -0.009571022354066372, -0.007365334779024124, -1.1934360265731812, -0.14641371369361877, -0.09550005197525024, -0.2284144163131714, -0.0003280101518612355, -0.0022693139035254717, -0.12390707433223724, -0.09228714555501938, -0.00034278715611435473, -0.027991971001029015, -0.4169636368751526, -0.024444952607154846, -1.0240631103515625, -1.0000989437103271, -2.8342463970184326, -0.00011073929636040702, -0.004454095847904682, -1.6125279664993286, -1.1247210502624512, -0.3514086604118347, -1.6082313060760498, -1.7041990756988525, -2.130533218383789, -0.00322370114736259, -0.34466174244880676, -2.0923027992248535, -0.5994957685470581, -0.09170141071081161, -2.392327070236206, -1.0132738680113107e-05, -0.00017188502533826977, -0.008493373170495033, -0.004888962022960186, -0.06801837682723999, -0.014795105904340744, -0.24696165323257446, -0.8792823553085327, -1.0786614418029785, -0.8032726049423218, -0.002896401798352599, -0.012635767459869385, -0.9656569361686707, -0.5181822776794434, -0.18292659521102905, -0.0019000587053596973, -0.006514976732432842, -0.7558758854866028, -0.007528623100370169, -0.24600566923618317, -2.635974407196045, -0.0028109345585107803, -0.15254820883274078, -6.318072337307967e-06, -0.0008092227508313954, -0.000681883015204221, -0.298026442527771, -1.5497195136049413e-06, -0.0005340342177078128, -0.004779699724167585, -0.08891567587852478, -0.017518898472189903, -0.026821551844477654, -1.8568146228790283, -2.539125671319198e-05, -0.25740835070610046, -0.00010430268594063818, -0.0006792622152715921, -0.8495957255363464, -0.07109692692756653, -0.04034210368990898, -0.003564553800970316, -0.00460575707256794, 0.0, -9.798523387871683e-05, -0.0022266136948019266, -0.0007650309125892818, -0.0010938619961962104, -0.005015648435801268, -0.0036089783534407616, -3.4989805221557617, -0.21478667855262756, -0.22039806842803955, -0.010008508339524269, -0.29162538051605225, -0.25663864612579346, -0.0002636561985127628, -0.004601366352289915, -0.0002648479712661356, -0.039368417114019394, -0.36429962515830994, -0.0659065693616867, -0.0032007675617933273, -1.1972206830978394, -0.02100963331758976, -0.7702354788780212, -0.0035544568672776222, -0.00671262526884675, -0.3205752968788147, -0.0007500219508074224, -0.001369610894471407, -7.152555099310121e-07, -0.04610737785696983, -0.03461617976427078, -0.04402847960591316, -0.648920476436615, -0.012256897054612637, -0.11925707012414932, -0.0014726994559168816, -0.43697354197502136, -0.0733676478266716, -0.2184782773256302, -4.410734163684538e-06, -3.099436753473128e-06, -0.02598770149052143, -0.1598619669675827, -0.018605241551995277, -0.0015689932042732835, -0.4367007315158844, -0.780917227268219, -0.8848592638969421, -0.00036090059438720345, -2.179250717163086, -0.00030727434204891324, -0.007377168163657188, -2.0146166207268834e-05, -0.05293770879507065, -0.005126070696860552, -0.00684310682117939, -0.011221393942832947, -0.002638075966387987, -0.009335555136203766, -0.22757849097251892, -0.22186748683452606, -0.0054505071602761745, -0.017793668434023857, -4.8636207793606445e-05, -6.079655122448457e-06, -0.0008973624208010733, -0.0025586506817489862, -0.0008718741592019796, -0.29732653498649597, -8.296622399939224e-05, -1.0967194612021558e-05, -0.05981265753507614, -0.000993592431768775, -0.006188279017806053, -0.00039057256071828306, -0.446659654378891, -3.075552376685664e-05, -0.00028546550311148167, -0.0045633940026164055, -0.001262344536371529, -1.6847546100616455, -0.0037962766364216805, -0.0025788643397390842, -0.00012087091454304755, -0.17746056616306305, -0.00034338299883529544, -0.0001232548092957586, -0.0007435894221998751, -0.01978040300309658, -3.3378546504536644e-06, -0.000445385929197073, -0.004089802503585815, -0.007818334735929966, -0.005537882912904024, -0.06537216901779175, -0.0764632597565651, -0.006986355874687433, -0.6162833571434021, -0.026203835383057594, -0.4211488664150238], "finish_reason": "stop"}], "metrics": {"energy": 303.2767224245071, "energy_per_token": 1.1987222230217673, "time": 11.978844, "time_per_token": 0.04734720948616601}}
{"outputs": [{"text": "# Create a directory if it doesn't exist\n    os.makedirs(path, exist_ok=True)\n    # Create a DataFrame from the JSON files in the directory\n    df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if not filename.endswith('.json'):\n            continue\n        with open(os.path.join(path, filename), 'r') as f:\n            df = df.append(pd.DataFrame(json.load(f)))\n        df['source'] = filename\n    # Move the processed files to a \"processed\" subdirectory\n    processed_path = os.path.join(path, 'processed')\n    os.makedirs(processed_path, exist_ok=True)\n    for filename in df['source'].unique():\n        filename = filename.strip('.json')\n        shutil.move(os.path.join(path, filename), processed_path)", "tokens": ["#", " Create", " a", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "#", " Create", " a", " Data", "Frame", " from", " the", " JSON", " files", " in", " the", " directory", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " not", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "continue", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "json", ".", "load", "(", "f", ")))", "\n", "        ", "df", "['", "source", "']", " =", " filename", "\n", "    ", "#", " Move", " the", " processed", " files", " to", " a", " \"", "processed", "\"", " sub", "directory", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "processed", "_", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "for", " filename", " in", " df", "['", "source", "']", ".", "unique", "():", "\n", "        ", "filename", " =", " filename", ".", "strip", "('", ".", "json", "')", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " processed", "_", "path", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.6791048049926758, -1.2055020332336426, -0.719817042350769, -1.9493412971496582, -0.7685458660125732, -0.04717733711004257, -0.27086466550827026, -0.00042775063775479794, -2.0265558760002023e-06, -0.08413848280906677, -0.22034795582294464, -0.0010265801101922989, -2.58939790725708, -7.009260298218578e-05, -0.030717557296156883, -2.407998726994265e-05, -0.0006386386230587959, -0.006380780600011349, -0.15083391964435577, -0.0058988058008253574, -0.002410722430795431, 0.0, -6.246371776796877e-05, -0.003245921339839697, -0.0005840741214342415, -0.00025388356880284846, -0.0038250156212598085, -1.623051404953003, -0.21875399351119995, -2.381319999694824, -0.23989930748939514, -2.0211691856384277, -0.0016793209360912442, -0.9783934950828552, -1.082590937614441, -0.44468754529953003, -0.06081567332148552, -0.8126671314239502, -0.10435691475868225, -0.07095946371555328, -0.09363575279712677, -0.0012473430251702666, -0.6178247928619385, -0.032651808112859726, -0.0426994264125824, -1.8358061424805783e-05, -0.7506416440010071, -0.9394831657409668, -0.01220802590250969, -0.021819883957505226, -0.2773749828338623, -0.36785703897476196, -0.0031781899742782116, -0.5862319469451904, -5.5549986427649856e-05, -0.0008283997885882854, -1.9073468138230965e-06, -0.0005909841856919229, -0.001622551935724914, -0.0013021094491705298, -0.0037506725639104843, -0.0015086471103131771, -0.2222358137369156, -2.1218855381011963, -0.03467962518334389, -0.00010382589971413836, -0.01106177270412445, -4.1483970562694594e-05, 0.0, -0.23793873190879822, -0.04295320436358452, -0.0007278653793036938, -0.00011383838864276186, -0.011106690391898155, -0.01280690636485815, -0.000701658078469336, -0.01529746688902378, -0.09854128956794739, -0.005486905109137297, -0.5206935405731201, -0.0009444067254662514, -0.0014763895887881517, -0.04851953312754631, -0.00018773700867313892, -1.8358061424805783e-05, -0.0038371284026652575, -1.5139465176616795e-05, -5.245071224635467e-05, -0.00024482590379193425, -5.1377883210079744e-05, -0.0019900058396160603, -0.18488359451293945, -2.9801878554280847e-05, -0.032571613788604736, -0.0772818997502327, -0.06108216941356659, -0.00018487652414478362, -0.04905802011489868, -0.0059699080884456635, -0.00030286493711173534, -0.0008051729528233409, -1.371799111366272, -0.09958046674728394, -0.3590153157711029, -8.284702198579907e-05, -0.005871548317372799, -0.019673340022563934, -0.0932459682226181, -3.6238969187252223e-05, -0.19432173669338226, -0.8294347524642944, -0.008457557298243046, -3.3378044463461265e-05, -0.018879128620028496, -0.00020037073409184813, -0.0005340342177078128, -2.271035671234131, -0.08102535456418991, -1.7063190937042236, -0.20733842253684998, -0.16834615170955658, -0.25243809819221497, -0.0005279577453620732, -0.0009750141180120409, -0.10568548738956451, -0.04824171960353851, -0.18312464654445648, -0.0926160216331482, -0.18046626448631287, -0.27580440044403076, -0.15676221251487732, -0.030734321102499962, -0.02630915492773056, -0.26124414801597595, -0.630063533782959, -0.006604509893804789, -0.0010340826120227575, -0.05991214141249657, -0.0022219750098884106, -0.026852304115891457, -0.00043525759247131646, -0.6788913011550903, -0.05145967751741409, -0.426880419254303, -0.0002696150622796267, -0.02619907446205616, -2.253030106658116e-05, -2.074220174108632e-05, -0.0005353448214009404, -0.00041392818093299866, -0.0003364712174516171, -0.007239537313580513, -0.0009561972692608833, -0.026474488899111748, -0.002997669158503413, -0.0008727079257369041, -0.00021872512297704816, -0.00036352223833091557, -0.0392594188451767, -4.768370445162873e-07, -0.042996715754270554, -1.645074735279195e-05, -2.372236667724792e-05, -2.4199192921514623e-05, -0.0008010039455257356, -7.509902934543788e-05, -4.291525328881107e-06, -0.004048604518175125, -0.00037508129025809467, -2.8013790142722428e-05, -7.152555099310121e-07, -0.00010156115604331717, -0.00031323294388130307, -0.00019667598826345056, -0.003908971324563026, -0.0013948483392596245, -0.2317401021718979, -0.07872217148542404, -0.07165346294641495, -1.0616282224655151, -0.36181405186653137, -0.0018081996822729707, -0.0003147821989841759, -0.5443342924118042, -0.32108959555625916, -0.007210304494947195, -0.0016025570221245289, -0.00016366096679121256, -3.1864964962005615, -0.13058927655220032, -0.725121796131134, -0.022634491324424744, -1.5711350440979004, -0.3918569087982178, -0.09429717063903809, -0.0342215858399868, -0.0020679295994341373, -0.043120261281728745, -0.0006336349761113524, -1.7211017608642578, -8.225102646974847e-05, -8.821448318485636e-06, -0.02888437733054161, -0.002156672067940235, -0.08378740400075912, -0.00012885693286079913, -1.0132738680113107e-05, -4.541770613286644e-05, -0.00011085849109804258, -0.00012730741582345217, -0.010608706623315811, -4.088794958079234e-05, -0.0048448313027620316, -0.27282577753067017, -0.013170509599149227, -0.2917393743991852, -1.3232143828645349e-05, -5.960462772236497e-07, -2.5782358646392822, -4.768370445162873e-07, -1.311301275563892e-06, -2.4437606043647975e-05, -0.0001461399078834802, -0.11851158738136292], "finish_reason": "stop"}], "metrics": {"energy": 254.32290922546386, "energy_per_token": 1.1353701304708208, "time": 9.891707, "time_per_token": 0.04415940625}}
{"outputs": [{"text": "if not os.path.isdir(path):\n        os.mkdir(path)\n\n    filenames = sorted(os.listdir(path))\n\n    df = None\n    for filename in filenames:\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n            if df is None:\n                df = pd.DataFrame(data)\n            else:\n                df = df.append(pd.DataFrame(data), ignore_index=True)\n\n    df.insert(0, 'source', df.pop('source'))\n    df.to_csv(os.path.join(path, 'processed'), sep='\\t', index=False)\n    return df", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "path", ")", "\n", "\n", "    ", "fil", "en", "ames", " =", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", "\n", "\n", "    ", "df", " =", " None", "\n", "    ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "if", " df", " is", " None", ":", "\n", "                ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "            ", "else", ":", "\n", "                ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "data", ")", ",", " ignore", "_", "index", "=", "True", ")", "\n", "\n", "    ", "df", ".", "insert", "(", "0", ",", " '", "source", "'", ",", " df", ".", "pop", "('", "source", "'))", "\n", "    ", "df", ".", "to", "_", "csv", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", ",", " sep", "=", "'\\", "t", "'", ",", " index", "=", "False", ")", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.456151008605957, -0.17805005609989166, -0.029566992074251175, -1.3828182090946939e-05, -0.000271521887043491, -0.00121412449516356, -1.4726622104644775, -0.011072030290961266, -0.0012198395561426878, -0.005753741133958101, -0.006450782995671034, -0.030469559133052826, -0.003479024861007929, -0.5975750088691711, -4.8993817472364753e-05, -0.6976719498634338, -4.6132929128361866e-05, -0.0029298022855073214, -0.002636886900290847, -0.0007921895012259483, -0.007980367168784142, -0.9237169027328491, -0.0016763457097113132, -2.7593436241149902, -0.0031945884693413973, -7.676783570786938e-05, -0.00968070700764656, -1.6496260166168213, -0.1393844187259674, -0.04380657896399498, -5.018585216021165e-05, -0.011459127999842167, -3.790783375734463e-05, -0.0017057405784726143, -0.002805347554385662, -0.01678369753062725, -0.028314752504229546, -1.18446683883667, -0.0002040654799202457, -0.8533065915107727, -0.12698736786842346, -2.9254038333892822, -0.005494848359376192, -0.36542433500289917, -0.04179811850190163, -0.1544046252965927, -0.000533795915544033, -0.0008899780223146081, -1.1920928244535389e-07, -3.2186455882765586e-06, -0.00018714107864070684, -0.0008911690674722195, -0.011822749860584736, -1.479425311088562, -0.0019875073339790106, -0.002826031530275941, -0.17132137715816498, -0.00019000156316906214, -7.533743337262422e-05, -0.0010381315369158983, -7.986703712958843e-05, -6.592056161025539e-05, -0.000302745756926015, -0.00010966652916977182, -0.0036314274184405804, -0.1929156333208084, -4.053033626405522e-05, -0.1079852506518364, -0.07586364448070526, -0.05079445615410805, -0.00041321321623399854, -0.04000439867377281, -0.007744051981717348, -0.0005802616360597312, -0.0028360167052596807, -0.7406985759735107, -0.006590535398572683, -0.007456566672772169, -7.748303323751315e-05, -0.024968070909380913, -0.00014983485743869096, -7.509902934543788e-05, -0.011646964587271214, -0.007238945458084345, -0.5185288190841675, -1.050980567932129, -0.1514703631401062, -0.0017641709418967366, -0.008906636387109756, -0.001606484642252326, -0.006458363030105829, -0.00034338299883529544, -0.013042028062045574, -0.0006006343755871058, -0.013318384066224098, -0.00034540885826572776, -0.048187077045440674, -0.16797585785388947, -0.010738090611994267, -0.5927552580833435, -0.09051235020160675, -0.734704852104187, -0.0045724124647676945, -1.8358061424805783e-05, -0.00026472879108041525, -0.00026770823751576245, -0.007215867284685373, -0.02061815746128559, -0.7151681780815125, -0.00015829740732442588, -0.008964057080447674, -0.0071436697617173195, -0.17061011493206024, -3.707340147229843e-05, -0.00187090749386698, -0.0049047390930354595, -0.0007628867751918733, -0.511122465133667, -0.001579943229444325, -0.09188541769981384, -1.0728830375228426e-06, -0.0004549183649942279, -0.006356853060424328, -0.0012391278287395835, -0.04177834093570709, -0.006970019545406103, -0.7761510014533997, -0.255119651556015, -0.6508730053901672, -2.482633113861084, -0.09288862347602844, -0.00018308870494365692, -0.08478288352489471, -6.01988795096986e-05, -0.1030559316277504, -0.4620029628276825, -0.0003095386200584471, -1.883488948806189e-05, -1.4846506118774414, -0.23447391390800476, -0.5032572150230408, -0.07917514443397522, -0.20765605568885803, -0.32828763127326965, -0.03013521060347557, -0.5479222536087036, -0.3037651479244232, -0.16406211256980896, -0.30792734026908875, -3.4570634852570947e-06, -0.30074161291122437, -0.29425492882728577, -0.23742713034152985, -7.390703103737906e-05, -0.0004768426588270813, -0.005069022998213768, -0.0010170531459152699, -0.0034294859506189823, -0.007529214955866337, -0.0024787436705082655, -0.03514114022254944, -0.047706883400678635, -2.118943929672241, -0.01140974648296833, -1.9540464878082275, -0.5374484658241272, -0.06001206487417221, -0.05655696243047714, -0.03237751126289368, -0.00028427375946193933, -0.11083954572677612, -0.0003271759778726846, -0.009149409830570221, -0.10833317786455154, -0.02214081585407257, -1.0680214166641235, -0.5080740451812744, -0.007858550176024437, -1.1285011768341064, -7.152555099310121e-07, -3.814689989667386e-06, -8.4638240878121e-06, -0.00011062010162277147, -0.051269207149744034], "finish_reason": "stop"}], "metrics": {"energy": 199.3118670635223, "energy_per_token": 1.0832166688234908, "time": 7.99923, "time_per_token": 0.04347407608695652}}
{"outputs": [{"text": "df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n                df = df.append(pd.DataFrame([[x['a'], x['b'], filename] for x in data]),\n                               ignore_index=True)\n    df['Source'] = df.filename\n    df.to_csv('processed.csv')\n    os.rename('processed.csv', 'data/processed.csv')\n    df = pd.read_csv(os.path.join(path, 'processed.csv'))\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "([", "[", "x", "['", "a", "']", ",", " x", "['", "b", "']", ",", " filename", "]", " for", " x", " in", " data", "])", ",", "\n", "                ", "               ", "ignore", "_", "index", "=", "True", ")", "\n", "    ", "df", "['", "Source", "']", " =", " df", ".", "filename", "\n", "    ", "df", ".", "to", "_", "csv", "('", "processed", ".", "csv", "')", "\n", "    ", "os", ".", "rename", "('", "processed", ".", "csv", "'", ",", " '", "data", "/", "processed", ".", "csv", "')", "\n", "    ", "df", " =", " pd", ".", "read", "_", "csv", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", ".", "csv", "'))", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.696671485900879, -0.13643896579742432, -0.2820574641227722, -0.0003657863999251276, -0.20191600918769836, -0.25121864676475525, -0.014794166199862957, -0.1403081715106964, -0.47295060753822327, -0.5388348698616028, -0.005906864069402218, -1.2488352060317993, -8.702239938429557e-06, -0.0025518732145428658, -7.271740287251305e-06, -0.0024221388157457113, -0.0050235954113304615, -0.0039339070208370686, -0.004118414130061865, -0.0028092702850699425, -0.21172299981117249, -0.23296672105789185, -0.005186436232179403, -0.007283917628228664, -4.970903682988137e-05, -1.1920928244535389e-07, -0.2291070818901062, -0.022622371092438698, -0.0005639393348246813, -0.00016973962192423642, -0.010689028538763523, -0.004748496692627668, -0.001760838902555406, -0.3119896948337555, -0.0010945764370262623, -0.0013981815427541733, -0.07696185261011124, -0.000196556793525815, -2.4437606043647975e-05, -0.00205972115509212, -2.8013790142722428e-05, -6.496695277746767e-05, -0.0004861365014221519, -0.00012790338951162994, -0.0037581545766443014, -0.2775798439979553, -6.16293036728166e-05, -0.05144812911748886, -0.04499194398522377, -0.051138393580913544, -0.0004914983292110264, -0.0643872395157814, -0.00553574925288558, -0.0005920564290136099, -0.0011106519959867, -0.652520477771759, -0.005259486846625805, -0.008116595447063446, -3.862306402879767e-05, -0.01577669568359852, -0.00019167017308063805, -7.462222856702283e-05, -0.008215206675231457, -0.0044390237890183926, -0.29811766743659973, -0.07974735647439957, -0.05353766679763794, -0.29055893421173096, -0.00014423283573705703, -0.003940200433135033, -0.1272701770067215, -0.07354874908924103, -0.00010358751023886725, -0.029004817828536034, -2.231675148010254, -2.398331880569458, -2.126965284347534, -0.3761642575263977, -0.008673849515616894, -0.000556314189452678, -0.025892917066812515, -0.03452727571129799, -0.0008630603551864624, -0.00011062010162277147, -4.076874756719917e-05, -0.026240181177854538, -0.08132992684841156, -0.5235224366188049, -0.04127172380685806, -0.0004707658663392067, -0.0001429217227268964, -0.0013235389487817883, -0.5828258991241455, -0.007280248682945967, -2.3554470539093018, -0.0033047369215637445, -0.44797709584236145, -0.024074021726846695, -3.099436753473128e-06, -0.00018142008048016578, -0.010357792489230633, -0.0009735850035212934, -0.1549297720193863, -0.015582473017275333, -0.317436158657074, -0.2700434625148773, -0.37143367528915405, -0.759690523147583, -0.0006332775810733438, -0.004647999536246061, -0.22492057085037231, -1.3723431825637817, -2.4010541439056396, -0.1930881291627884, -0.013159568421542645, -0.20656584203243256, -0.3829817771911621, -0.8982699513435364, -3.2305197237292305e-05, -0.27718499302864075, -0.45158714056015015, -0.28986838459968567, -1.2942372560501099, -0.02454533986747265, -1.4275283813476562, -0.0646362453699112, -0.07852183282375336, -1.3779383897781372, -3.373566141817719e-05, -0.9210789203643799, -0.1937333047389984, -0.0970255583524704, -0.0316084623336792, -0.0007072569569572806, -0.0005214046686887741, -0.00035506143467500806, -0.23606911301612854, -2.2087008953094482, -1.6051583290100098, -0.14747458696365356, -0.0450955331325531, -0.010040019638836384, -0.025133972987532616, -0.09814228117465973, -0.03706755116581917, -2.940364360809326, -0.19017083942890167, -0.20186078548431396, -0.00020358874462544918, -0.010790335014462471, -0.00016115797916427255, -0.0023302086628973484, -2.3710405826568604, -0.20280645787715912, -0.0004929280839860439, -0.0004832768754567951, -0.0042646657675504684, -0.0027909635100513697, -0.12524192035198212, -0.021077802404761314, -0.0012772268382832408, -0.03143323212862015, -0.5364737510681152, -0.002243860624730587, -0.0004893536097370088, -0.08909747749567032, -0.028113214299082756, -0.034024693071842194, -0.5028159022331238, -0.012172814458608627, -0.6666914224624634, -0.024897724390029907, -2.488929271697998], "finish_reason": "stop"}], "metrics": {"energy": 188.6522249507902, "energy_per_token": 1.0904752887328915, "time": 7.578756, "time_per_token": 0.04380783815028902}}
{"outputs": [{"text": "# Create a dictionary to store the files and their filenames\n    files = {}\n\n    # Iterate over files in the directory\n    for file in os.listdir(path):\n        if file.endswith('.json'):\n            try:\n                with open(path + '/' + file) as f:\n                    # Read the JSON data from the file\n                    data = json.load(f)\n                    # Convert each item in the list into a dictionary\n                    for item in data:\n                        item = dict(item)\n                        # Add the filename to the dictionary\n                        item['source'] = file\n                    files[file] = data\n            except Exception as e:\n                # Handle any exceptions encountered during processing\n                print(f\"Error reading file {file}: {e}\")\n        else:\n            print(f\"Skipping file {file} - not a .json file.\")\n\n    # Convert the dictionary to a DataFrame\n    df = pd.DataFrame(files[key] for key in files.keys())\n    return df", "tokens": ["#", " Create", " a", " dictionary", " to", " store", " the", " files", " and", " their", " fil", "en", "ames", "\n", "    ", "files", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "try", ":", "\n", "                ", "with", " open", "(", "path", " +", " '/", "'", " +", " file", ")", " as", " f", ":", "\n", "                ", "    ", "#", " Read", " the", " JSON", " data", " from", " the", " file", "\n", "                ", "    ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "    ", "#", " Convert", " each", " item", " in", " the", " list", " into", " a", " dictionary", "\n", "                ", "    ", "for", " item", " in", " data", ":", "\n", "                ", "        ", "item", " =", " dict", "(", "item", ")", "\n", "                ", "        ", "#", " Add", " the", " filename", " to", " the", " dictionary", "\n", "                ", "        ", "item", "['", "source", "']", " =", " file", "\n", "                ", "    ", "files", "[", "file", "]", " =", " data", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "#", " Handle", " any", " exceptions", " encountered", " during", " processing", "\n", "                ", "print", "(", "f", "\"", "Error", " reading", " file", " {", "file", "}:", " {", "e", "}\"", ")", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " file", " {", "file", "}", " -", " not", " a", " ", ".", "json", " file", ".", "\"", ")", "\n", "\n", "    ", "#", " Convert", " the", " dictionary", " to", " a", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "files", "[", "key", "]", " for", " key", " in", " files", ".", "keys", "())", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.6791048049926758, -1.2055020332336426, -0.719817042350769, -2.392608165740967, -0.3936223089694977, -0.5984711647033691, -0.42807096242904663, -2.6791558265686035, -1.4549833536148071, -0.17799100279808044, -3.801210403442383, -0.0013246104354038835, -0.00013136000779923052, -0.2762647271156311, -0.0015976772410795093, -0.25829946994781494, -0.22332540154457092, -0.13004732131958008, -0.0024356956128031015, -0.3367806673049927, -0.0003625689132604748, -0.080762580037117, -1.0620330572128296, -0.0014330603880807757, -0.6028782725334167, -2.4820618629455566, -0.10227792710065842, -0.6681198477745056, -0.606913149356842, -0.2488289773464203, -0.0004629017203114927, -0.01758015900850296, -1.646067500114441, -0.17462120950222015, -0.10911749303340912, -4.768360213347478e-06, -0.008637804538011551, -5.125986263010418e-06, -0.0009654866298660636, -0.0017471539322286844, -0.0008044582791626453, -0.002115394687280059, -0.05890192463994026, -0.882243812084198, -0.17495110630989075, -0.010348236188292503, -0.012461654841899872, -3.325883881188929e-05, -2.3841855067985307e-07, -0.3255717158317566, -0.0248300489038229, -0.0007465674425475299, -0.00010883215873036534, -0.01595480553805828, -0.018728915601968765, -0.01724686473608017, -3.268980026245117, -1.9550132492440753e-05, -0.0060687316581606865, -0.00103586888872087, -0.5529330372810364, -0.000717025191988796, -0.0012305553536862135, -2.374019145965576, -0.056273821741342545, -0.4496096074581146, -0.0017653609393164515, -0.0001289761275984347, -0.002691220724955201, -1.550331950187683, -2.109982233378105e-05, -0.07077445089817047, -0.016870908439159393, -0.0021532224491238594, -0.0010216975351795554, -0.0011525661684572697, -2.121798038482666, -0.9088308811187744, -0.2957111597061157, -0.5980232954025269, -1.0891368389129639, -0.5172021389007568, -0.06141810119152069, -0.002995292190462351, -0.3141990303993225, -0.0002646096108946949, -8.606540359323844e-05, -0.1821618378162384, -0.003975347150117159, -0.004279859364032745, -6.186770770000294e-05, -0.008408973924815655, -0.00020418466010596603, -0.00012063252506777644, -0.009363663382828236, -0.0009491706150583923, -0.6151463985443115, -0.038338251411914825, -0.19292192161083221, -2.7754578590393066, -2.6363296508789062, -1.9891971349716187, -0.24625255167484283, -0.04616646096110344, -0.6633899211883545, -1.7205983400344849, -0.030970465391874313, -0.5390527248382568, -0.20315659046173096, -0.0009871615329757333, -0.001191025716252625, -0.9650397300720215, -0.42063409090042114, -0.0014072287594899535, -0.008130429312586784, -0.008029444143176079, -0.0015086471103131771, -0.0006237468332983553, -0.001029319129884243, -0.8838608860969543, -1.0933113098144531, -0.9930598139762878, -0.034816063940525055, -0.010853071697056293, -0.008928967639803886, -0.0071934983134269714, -0.06616445630788803, -0.2398248314857483, -0.3931264877319336, -0.6895465850830078, -0.29232075810432434, -0.8613095879554749, -0.4013086259365082, -0.13291186094284058, -0.15229201316833496, -0.1619834154844284, -0.0002215855201939121, -0.00023779425828251988, -0.12180347740650177, -0.16615337133407593, -0.1868855208158493, -0.0006268443539738655, -0.0006762839620932937, -0.04744407907128334, -0.0549263134598732, -0.058075062930583954, -1.5232295989990234, -1.836306095123291, -0.04627322778105736, -0.034632645547389984, -0.08023595809936523, -8.856858039507642e-05, -0.02904743328690529, -0.006555717438459396, -0.15499347448349, -0.01992274634540081, -1.5444210767745972, -0.3095080852508545, -0.025422697886824608, -0.00011848701251437888, -0.007229359354823828, -0.0007933806627988815, -2.1294941902160645, -2.062892436981201, -0.22844600677490234, -1.1660643815994263, -2.45538330078125, -0.9315441250801086, -1.6778069734573364, -0.08207815885543823, -0.0016511153662577271, -0.10223434120416641, -0.08907545357942581, -0.49824801087379456, -0.5891250371932983, -0.24672836065292358, -1.209411859512329, -0.5766163468360901, -0.5199078321456909, -0.03458186239004135, -0.08173569291830063, -0.008310616947710514, -0.12447404116392136, -0.027062682434916496, -0.0021548878867179155, -0.00048375347978435457, -3.019383430480957, -0.11202611774206161, -4.1126360883936286e-05, -0.012114047072827816, -0.00208850996568799, -0.9451991319656372, -0.008638513274490833, -0.0266735702753067, -0.027785729616880417, -0.4653032124042511, -0.11831144243478775, -0.25422579050064087, -0.05821644514799118, -0.002315936842933297, -0.5623033046722412, -1.9896389245986938, -0.32984355092048645, -0.17236079275608063, -2.774653434753418, -7.033323527139146e-06, -0.005585302598774433, -0.004523165058344603, -1.8572218418121338, -0.012948715128004551, -0.0029651031363755465, -0.00385244726203382, -0.06909052282571793, -0.003357727313414216, -0.0644451379776001, -1.5547337532043457, -0.12522730231285095, -0.32144415378570557, -1.6947617530822754, -0.007692831102758646, -0.8243507742881775, -0.00038842763751745224, -0.39110174775123596, -0.0008761619683355093, -0.024839701130986214, -0.0027205857913941145, -0.00787345226854086, -0.00026782741770148277, -0.021883798763155937, -0.3426325023174286, -0.0650460496544838, -2.463369846343994, -3.3121209144592285, -0.19275255501270294, -0.17862893640995026, -0.0014494876377284527, -0.005967300850898027, -1.4648720026016235, -2.129591464996338, -0.0005741854547522962, -0.015119943767786026, -0.016726724803447723, -1.0804781913757324, -1.0011975765228271, -0.015914680436253548, -0.5119873881340027, -0.02148403227329254, -1.7357810735702515], "finish_reason": "stop"}], "metrics": {"energy": 274.01726153659826, "energy_per_token": 1.1049083126475736, "time": 10.923439, "time_per_token": 0.044046125}}
{"outputs": [{"text": "source = []\n    df = []\n    for file in os.listdir(path):\n        if file.endswith('.json'):\n            with open(path + os.sep + file) as f:\n                json_data = json.load(f)\n            df.append(pd.DataFrame.from_dict(json_data, orient='columns'))\n            source.append(file)\n    df = pd.concat(df, axis=0)\n    df['source'] = source\n    df.reset_index(drop=True, inplace=True)\n    shutil.move(path, path + os.sep + \"processed\")\n    return df", "tokens": ["source", " =", " []", "\n", "    ", "df", " =", " []", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " file", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "path", " +", " os", ".", "sep", " +", " file", ")", " as", " f", ":", "\n", "                ", "json", "_", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", ".", "append", "(", "pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "json", "_", "data", ",", " orient", "='", "columns", "'))", "\n", "            ", "source", ".", "append", "(", "file", ")", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", ",", " axis", "=", "0", ")", "\n", "    ", "df", "['", "source", "']", " =", " source", "\n", "    ", "df", ".", "reset", "_", "index", "(", "drop", "=", "True", ",", " in", "place", "=", "True", ")", "\n", "    ", "sh", "util", ".", "move", "(", "path", ",", " path", " +", " os", ".", "sep", " +", " \"", "processed", "\"", ")", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-4.524945259094238, -2.3191487789154053, -0.7784742116928101, -0.047109901905059814, -0.05828201025724411, -2.1151814460754395, -0.10636256635189056, -0.7626170516014099, -0.0024876620154827833, -0.1943666785955429, -0.47621315717697144, -1.8653366565704346, -0.23942174017429352, -0.7024751901626587, -7.033323527139146e-06, -0.009162521921098232, -1.680836794548668e-05, -0.0024039437994360924, -0.005549145396798849, -0.004928108304738998, -0.0063198949210345745, -0.0030157347209751606, -0.47273820638656616, -0.14613914489746094, -0.01701061986386776, -0.014895997941493988, -8.940297266235575e-05, -2.3841855067985307e-07, -0.40958189964294434, -0.02700246311724186, -0.001036583329550922, -0.00016473367577418685, -0.013810083270072937, -0.00459222961217165, -0.0019965493120253086, -0.4404418170452118, -0.0008061258122324944, -0.0024380742106586695, -2.561011791229248, -0.1479388028383255, -1.7829197645187378, -0.001444369088858366, -0.036139875650405884, -0.0010520643554627895, -0.004700088407844305, -1.2112411260604858, -8.892617915989831e-05, -0.17396678030490875, -0.022223131731152534, -0.0021340709645301104, -0.0017792837461456656, -2.799107074737549, -0.10413575917482376, -0.2993587851524353, -0.0016824151389300823, -0.01060139387845993, -0.00011789103882620111, -0.020446481183171272, -0.0003856868715956807, -0.00022980909852776676, -0.004760717041790485, -0.004255050793290138, -1.8809163570404053, -1.2372894287109375, -0.036244846880435944, -0.024644671007990837, -0.15602387487888336, -0.26666054129600525, -2.8371408916427754e-05, -0.0640772357583046, -1.88663911819458, -4.51792984677013e-05, -1.7762025890988298e-05, -0.3003946542739868, -0.009194886311888695, -0.009973809123039246, -0.0012053137179464102, -1.5258672647178173e-05, -1.2901651859283447, -0.07208048552274704, -0.2478944957256317, -1.6527143716812134, -0.11095872521400452, -0.0032804980874061584, -0.025029458105564117, -0.11075300723314285, -0.0064606135711073875, -0.0064202239736914635, -0.011131330393254757, -0.2009829431772232, -0.048021890223026276, -0.001311990898102522, -0.4830896854400635, -0.2533068060874939, -0.03681204095482826, -0.009562049061059952, -0.00011789103882620111, -0.0036770368460565805, -0.008825108408927917, -0.0004060635983478278, -0.533207893371582, -1.0592749118804932, -0.020061329007148743, -0.051196951419115067, -0.49994704127311707, -0.05204864218831062, -0.01536074373871088, -0.0832345113158226, -0.32973015308380127, -0.7067751884460449, -0.0004032037395518273, -0.0018116504652425647, -0.11911919713020325, -0.004064276814460754, -0.04587842524051666, -0.6281320452690125, -0.3415820002555847, -2.0834238529205322, -4.9828242481453344e-05, -0.0006623458466492593, -0.03847465291619301, -0.22356699407100677, -0.0038226405158638954, -0.001610055100172758, -0.09559962153434753, -0.0024628089740872383, -1.9192511899746023e-05, -0.0008532935753464699, -0.0007185738068073988, -0.001408419106155634, -0.0018303323304280639, -0.070731021463871, -1.4803473949432373, -0.0007964776013977826, -0.00011491115583339706, -0.10258179903030396, -0.07871225476264954, -0.06624467670917511, -0.17250175774097443, -0.21713195741176605, -0.12107224762439728, -0.1672857105731964, -0.0012168630491942167, -0.0030856162775307894, -0.002101000864058733, -2.3902626037597656, -0.009645524434745312, -0.00222090445458889, -0.06381992995738983, -0.03309476748108864, -0.03368426859378815, -0.05422624573111534, -0.0150018110871315, -1.0502080917358398, -0.027492236346006393, -0.49189409613609314], "finish_reason": "stop"}], "metrics": {"energy": 179.67362795829783, "energy_per_token": 1.151754025373704, "time": 6.7422695, "time_per_token": 0.043219676282051284}}
{"outputs": [{"text": "if not os.path.exists(path):\n        os.makedirs(path)\n    file_list = [f for f in os.listdir(path) if f.endswith(\".json\")]\n    df = pd.concat([pd.read_json(os.path.join(path, f)).assign(Source=f) for f in file_list], axis=0)\n    os.makedirs(os.path.join(path, \"processed\"))\n    for f in file_list:\n        shutil.move(os.path.join(path, f), os.path.join(path, \"processed\", f))\n    return df", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "path", ")", "\n", "    ", "file", "_", "list", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "(", "\"", ".", "json", "\"", ")]", "\n", "    ", "df", " =", " pd", ".", "concat", "([", "pd", ".", "read", "_", "json", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", "))", ".", "assign", "(", "Source", "=", "f", ")", " for", " f", " in", " file", "_", "list", "]", ",", " axis", "=", "0", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "join", "(", "path", ",", " \"", "processed", "\"", "))", "\n", "    ", "for", " f", " in", " file", "_", "list", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " os", ".", "path", ".", "join", "(", "path", ",", " \"", "processed", "\"", ",", " f", "))", "\n", "    ", "return", " df", "\n", "\n", "if"], "logprobs": [-2.456151008605957, -0.17805005609989166, -0.029566992074251175, -1.3828182090946939e-05, -0.000271521887043491, -0.00121412449516356, -0.26082634925842285, -0.008944562636315823, -0.012053037993609905, -0.01519086305052042, -0.019358864054083824, -0.0035727499052882195, -0.1954444944858551, -4.7801782784517854e-05, -0.6295765042304993, -0.0002356490003876388, -0.002333182143047452, -0.0011838816571980715, -0.003434000303968787, -0.013847588561475277, -0.009715179912745953, -0.6264907717704773, -3.4021451473236084, -0.09324043244123459, -0.6171003580093384, -0.005657256580889225, -1.82193922996521, -0.5692406892776489, -0.042110875248909, -0.0006973695708438754, -0.0008294717408716679, -0.026412026956677437, -3.182837463100441e-05, -0.003219661070033908, -4.291525328881107e-06, -0.0028003547340631485, -0.003214194905012846, -0.026841744780540466, -0.02923697419464588, -0.3019814193248749, -0.03680664300918579, -0.01670726388692856, -5.590759246842936e-05, 0.0, -1.3914695978164673, -0.006886201910674572, -0.02664443664252758, -0.0006051616510376334, -5.924526340095326e-05, -0.016404518857598305, -0.007401426322758198, -0.041085366159677505, -1.2588744163513184, -0.31909507513046265, -0.17833395302295685, -3.2305197237292305e-05, -2.4567198753356934, -0.021502234041690826, -0.11511757224798203, -0.00015793983766343445, -0.4274121820926666, -2.8729025871143676e-05, -5.090107151772827e-05, -0.0026825417298823595, -0.28449341654777527, -5.4596363042946905e-05, -0.000164018536452204, -0.0022763311862945557, -0.00031859567388892174, -0.00018046658078674227, -0.0012261499650776386, -0.00023552982020191848, -0.1423223614692688, -0.5796154737472534, -1.4812424182891846, -0.08164231479167938, -0.0009184433147311211, -1.655073642730713, -0.056490831077098846, -0.13304075598716736, -0.010885028168559074, -0.14228980243206024, -0.000286657246761024, -0.0001787979417713359, -0.21288913488388062, -9.274052717955783e-05, -2.706014311115723e-05, -0.49545371532440186, -0.0013612775364890695, -0.8918065428733826, -0.019490862265229225, -0.12393708527088165, -0.2254188060760498, -0.04503217339515686, -0.03384055197238922, -1.8849629163742065, -2.062299427052494e-05, -0.19308774173259735, -0.0014456784119829535, -7.807903602952138e-05, -0.027065467089414597, -0.11329632997512817, -0.00038485272671096027, -0.0001567479339428246, -0.0007707485929131508, -0.0004615910293068737, -0.0005752577562816441, -0.003460373729467392, -0.0015793481143191457, -0.3938015401363373, -0.008236370980739594, -0.0025285673327744007, -0.14879079163074493, -0.007012044079601765, -0.0048598977737128735, -0.38032153248786926, -0.3411754369735718, -0.04586624354124069, -0.11922840029001236, -3.6477376852417365e-05, -1.168244216387393e-05, -0.002191167790442705, -0.0004905451205559075, -0.0006456674309447408, -0.19504693150520325, -0.00016485285595990717, -6.198863957251888e-06, -0.01862548477947712, -0.0007468056865036488, -0.019015399739146233, -3.838465272565372e-05, -7.223821739898995e-05, -3.1470757676288486e-05, -0.00013886917440686375, -4.172238186583854e-05, -0.00048339602653868496, -5.7338023907504976e-05, -0.0036743050441145897, -0.0001436368766007945, -0.00013410145766101778, -0.010009334422647953, -3.7788631743751466e-05, -4.589452510117553e-05, -5.8530047681415454e-05, -8.082063141046092e-05, -6.878139538457617e-05, -0.001604580320417881, -0.000723576988093555, -0.020890677347779274, -0.0004563482361845672, -0.003539608558639884, -0.24940380454063416, -0.015789249911904335, -0.024061569944024086, -0.003162979381158948, -0.02022232487797737, -0.021341444924473763, -0.007265100721269846, -0.780763566493988, -0.02527439408004284, -0.5926224589347839], "finish_reason": "stop"}], "metrics": {"energy": 173.6439015226365, "energy_per_token": 1.0785335498300404, "time": 6.9423223, "time_per_token": 0.043120014285714284}}
{"outputs": [{"text": "json_files = [f for f in os.listdir(path) if f.endswith('.json')]\n    df = pd.DataFrame()\n    for fname in json_files:\n        with open(os.path.join(path, fname), 'r') as f:\n            data = json.load(f)\n            df = df.append([pd.DataFrame([json_data]) for json_data in data], ignore_index=True)\n        df['source'] = fname\n    os.makedirs(os.path.join(path, 'processed'), exist_ok=True)\n    os.rename(os.path.join(path, json_files[0]), os.path.join(path, 'processed', json_files[0]))\n    for fname in json_files[1:]:\n        os.rename(os.path.join(path, fname), os.path.join(path, 'processed', fname))\n    return df", "tokens": ["json", "_", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", "]", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "for", " f", "name", " in", " json", "_", "files", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", "name", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", " =", " df", ".", "append", "([", "pd", ".", "DataFrame", "([", "json", "_", "data", "])", " for", " json", "_", "data", " in", " data", "]", ",", " ignore", "_", "index", "=", "True", ")", "\n", "        ", "df", "['", "source", "']", " =", " f", "name", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "os", ".", "rename", "(", "os", ".", "path", ".", "join", "(", "path", ",", " json", "_", "files", "[", "0", "])", ",", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'", ",", " json", "_", "files", "[", "0", "]))", "\n", "    ", "for", " f", "name", " in", " json", "_", "files", "[", "1", ":", "]:", "\n", "        ", "os", ".", "rename", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", "name", ")", ",", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'", ",", " f", "name", "))", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-4.44435977935791, -0.10731376707553864, -0.16693954169750214, -0.015092231333255768, -0.8834328651428223, -0.6739380955696106, -0.026395773515105247, -0.000428108120104298, -0.0011150578502565622, -0.03159136697649956, -7.510157047363464e-06, -0.0036532822996377945, -3.3378546504536644e-06, -0.0016809870721772313, -0.00439973920583725, -0.0028097457252442837, -0.012651187367737293, -0.10149921476840973, -0.00472025852650404, -0.012174698524177074, -5.769562994828448e-05, -1.1920928244535389e-07, -0.18268094956874847, -0.04522862285375595, -0.0002498314715921879, -0.00036554806865751743, -0.01930168643593788, -0.008444554172456264, -0.1141902431845665, -1.115564227104187, -0.33938002586364746, -0.2136380672454834, -1.168244216387393e-05, -0.10906971246004105, -0.4075935184955597, -0.0068067582324147224, -0.22230730950832367, -0.10062438249588013, -0.719367504119873, -2.206549882888794, -0.002882970031350851, -0.2800016701221466, -0.00032872517476789653, -9.298280929215252e-06, -0.0005247407825663686, -0.0011443501571193337, -0.0030276195611804724, -0.2669995129108429, -0.0015654225135222077, -0.003869547275826335, -0.18283039331436157, -0.0003784178989008069, -8.248942322097719e-05, -0.004995839670300484, -0.00010024998482549563, -0.00011836781777674332, -0.0004489606071729213, -0.00016890530241653323, -0.011576265096664429, -0.0003232433518860489, -0.2437109500169754, -5.221230458118953e-05, -0.07398625463247299, -0.06534112244844437, -0.060654688626527786, -0.0004142856632824987, -0.06764644384384155, -0.046894825994968414, -0.001032772590406239, -0.0015735160559415817, -0.8195306658744812, -0.009417514316737652, -0.017259402200579643, -0.00010322991875000298, -0.014001592993736267, -0.0003270567976869643, -0.00015496007108595222, -0.011521114967763424, -0.008009458892047405, -0.3905866742134094, -0.09876260161399841, -0.07948403060436249, -0.2348114252090454, -0.00017128908075392246, -0.0032484165858477354, -2.522653102874756, -0.08347930014133453, -8.4638240878121e-06, -0.07791054993867874, -1.6579337120056152, -3.635667324066162, -2.6760222911834717, -0.8448359370231628, -0.48017269372940063, -0.16878044605255127, -0.0013423488708212972, -1.07287787614041e-05, -2.9801878554280847e-05, -0.0008872386533766985, -0.0029193423688411713, -0.33603012561798096, -0.0004048719711136073, -0.1585182547569275, -2.7418097943154862e-06, -0.00027891082572750747, -0.0076294224709272385, -0.001254724687896669, -0.038270678371191025, -0.00854679848998785, -2.3373961448669434, -0.15615063905715942, -0.3869577944278717, -0.46569007635116577, -0.000788258679676801, -0.0030490122735500336, -0.1942719668149948, -0.0020016650669276714, -0.026168648153543472, -0.47010868787765503, -2.4113616943359375, -1.8715683836489916e-05, -0.17539384961128235, -0.00014220656885299832, -0.0003846143954433501, -0.29343628883361816, -0.0627126693725586, -0.0008843801915645599, -0.0002177716523874551, -0.0017790456768125296, -0.0008322112844325602, -0.004855270963162184, -0.00529541727155447, -0.003214194905012846, -0.049798235297203064, -0.004392499569803476, -0.017704429104924202, -0.00041214076918549836, -0.0016139827203005552, 0.0, -0.00011669908417388797, -0.0014280608156695962, -0.0005746620590798557, -0.000494715350214392, -0.005645758472383022, -0.005095234606415033, -2.844987154006958, -0.0007292948430404067, -1.1086199283599854, -0.04955776035785675, -0.3954474627971649, -0.0004122599493712187, -0.00018273114983458072, -0.00030858523678034544, -0.0015485212206840515, -0.0010913613950833678, -0.0013828248484060168, -0.0018868515035137534, -1.665126919746399, -0.007881258614361286, -0.040087662637233734, -0.06560418009757996, -0.007259064819663763, -0.01412383932620287, -0.0008490057080052793, -0.056311458349227905, -8.940297266235575e-05, -3.1470757676288486e-05, -0.0004391897819004953, -0.00014852374442853034, -0.000539634027518332, -0.003574887989088893, -0.00013290952483657748, -0.026045309379696846, -0.003685350762680173, -0.02169904112815857, -0.0003644755925051868, -0.17494790256023407, -0.0004146431456319988, -0.0008955758530646563, -0.0011976935202255845, -0.0014788892585784197, -0.032600462436676025, -0.017418738454580307, -0.019131656736135483, -0.7414986491203308, -0.2885441482067108, -0.05276663228869438, -0.0037714559584856033, -0.0529649555683136, -0.0002603192115202546, -3.814689989667386e-06, -0.013351202942430973, -0.0026856327895075083, -0.01573984883725643, -0.0016041041817516088, -0.001649330137297511, -0.000910344475414604, -0.2868749797344208, -1.2397689715726301e-05, -0.07087750732898712, -8.940297266235575e-05, -0.005973344668745995, -0.00011073929636040702, -1.764281842042692e-05, -9.894321920000948e-06, -4.434487345861271e-05, -6.8662193370983e-05, -0.00017855956684798002, -3.9934315282152966e-05, -0.0014110381016507745, -0.00018523407925385982, -0.000125281119835563, -5.4834770708112046e-05, -0.005812409333884716, -5.578839045483619e-05, -5.125986263010418e-06, -4.6491513785440475e-06, -2.5510462364763953e-05, -0.002588138682767749, -0.00048673225683160126, -4.1960789531003684e-05, -0.004817782435566187, -0.0007802779437042773, -0.001488054753281176, -1.4305012882687151e-05, -0.002238508081063628, -4.815939246327616e-05, -0.002299523912370205, -0.006009960081428289, -0.03566858544945717, -0.13360726833343506, -0.00688016414642334, -0.5851941108703613, -0.028947843238711357, -2.546506643295288], "finish_reason": "stop"}], "metrics": {"energy": 263.6162586355208, "energy_per_token": 1.1217713133426417, "time": 10.299734, "time_per_token": 0.04382865531914894}}
{"outputs": [{"text": "files = os.listdir(path)\n    files.sort()\n    df_list = []\n    for filename in files:\n        with open(os.path.join(path, filename), 'r') as f:\n            data = json.load(f)\n            df = pd.DataFrame.from_dict(data, orient=\"index\")\n            df[\"Source\"] = filename\n        df_list.append(df)\n    df = pd.concat(df_list)\n    return df", "tokens": ["files", " =", " os", ".", "list", "dir", "(", "path", ")", "\n", "    ", "files", ".", "sort", "()", "\n", "    ", "df", "_", "list", " =", " []", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", " =", " pd", ".", "DataFrame", ".", "from", "_", "dict", "(", "data", ",", " orient", "=", "\"", "index", "\"", ")", "\n", "            ", "df", "[", "\"", "Source", "\"", "]", " =", " filename", "\n", "        ", "df", "_", "list", ".", "append", "(", "df", ")", "\n", "    ", "df", " =", " pd", ".", "concat", "(", "df", "_", "list", ")", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -0.9475932717323303, -1.3112935448589269e-05, -0.010935024358332157, -7.510157047363464e-06, -0.00199524057097733, -0.005349725019186735, -0.001077428925782442, -0.01593145914375782, -0.024939583614468575, -0.35276108980178833, -0.11364709585905075, -0.0003960540343541652, -0.048051200807094574, -0.0903480127453804, -0.16547074913978577, -0.6490207314491272, -1.8178757429122925, -0.08749013394117355, -0.00515655055642128, -0.1312749981880188, -0.002581242239102721, -0.1250021904706955, -0.060217488557100296, -1.5042226314544678, -0.0007908792467787862, -0.0019478887552395463, -0.0004396664153318852, -0.0012275787303224206, -0.0021158705931156874, -1.2934234142303467, -0.001942891743965447, -0.0022287548054009676, -0.2289402186870575, -0.00021395778458099812, -0.00011014331539627165, -0.00294263893738389, -0.00011145447206217796, -8.475421054754406e-05, -0.0005044856225140393, -0.00019429226813372225, -0.00790798757225275, -0.16566571593284607, -7.760223525110632e-05, -0.1422460526227951, -0.10675862431526184, -0.09283310920000076, -0.0005545270396396518, -0.047450557351112366, -0.014136063866317272, -0.0008380476501770318, -0.0010983869433403015, -0.969163179397583, -0.02380574494600296, -0.008833734318614006, -6.687417771900073e-05, -0.012418328784406185, -0.00023755589791107923, -0.00014053787162993103, -0.008647141046822071, -0.006187094375491142, -0.483288437128067, -0.10291924327611923, -0.4699612557888031, -0.010666854679584503, -9.500529267825186e-05, -0.05593007057905197, -1.781955599784851, -2.2053474822314456e-05, -2.634490556374658e-05, -0.5852624177932739, -0.004517112858593464, -0.00798817165195942, -1.5052344799041748, -0.04353247582912445, -2.46986985206604, -0.002009041141718626, -0.5502491593360901, -3.45700973412022e-05, -0.1634165346622467, -0.01689177379012108, -0.029427288100123405, -0.009221226908266544, -0.6519256830215454, -0.006198231130838394, -0.7001949548721313, -0.0008295908919535577, -0.0005484507419168949, -0.0002985746832564473, -0.1092563271522522, -0.02142779342830181, -1.2734136581420898, -0.008557199500501156, -0.008584502153098583, -6.997340824455023e-05, -0.0005734706646762788, -0.00301965675316751, -0.00031287543242797256, -0.0006270825979299843, -0.007539981510490179, -0.0003914067056030035, -0.0806165412068367, -0.08890095353126526, -0.016766464337706566, -0.003996125888079405, -0.0001510267611593008, -0.0005974177038297057, -0.0009303532424382865, -0.0002004899288294837, -5.6265202147187665e-05, -5.483612312673358e-06, -1.0509729385375977, -0.024097412824630737, -0.04177159443497658, -1.2387855052947998, -0.011079339310526848, -0.3826417326927185, -0.01987261325120926, -2.361851453781128], "finish_reason": "stop"}], "metrics": {"energy": 156.96447312736515, "energy_per_token": 1.3080372760613763, "time": 5.258787, "time_per_token": 0.043823225}}
{"outputs": [{"text": "if not os.path.isdir(path):\n        return None\n\n    df = pd.DataFrame()\n\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename)) as f:\n                data = json.load(f)\n                df = df.append(pd.DataFrame(data), ignore_index=True)\n                df['source'] = filename\n\n    df.reset_index(inplace=True)\n\n    df.drop(['source'], axis=1, inplace=True)\n\n    processed_dir = os.path.join(path, 'processed')\n    if not os.path.exists(processed_dir):\n        os.mkdir(processed_dir)\n\n    df.to_json(os.path.join(processed_dir, 'json.json'), orient='records', indent=2, date_format='s')\n    return df", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "        ", "return", " None", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "()", "\n", "\n", "    ", "for", " filename", " in", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", ":", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", "))", " as", " f", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "data", ")", ",", " ignore", "_", "index", "=", "True", ")", "\n", "                ", "df", "['", "source", "']", " =", " filename", "\n", "\n", "    ", "df", ".", "reset", "_", "index", "(", "in", "place", "=", "True", ")", "\n", "\n", "    ", "df", ".", "drop", "(['", "source", "']", ",", " axis", "=", "1", ",", " in", "place", "=", "True", ")", "\n", "\n", "    ", "processed", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "processed", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "processed", "_", "dir", ")", "\n", "\n", "    ", "df", ".", "to", "_", "json", "(", "os", ".", "path", ".", "join", "(", "processed", "_", "dir", ",", " '", "json", ".", "json", "')", ",", " orient", "='", "records", "'", ",", " indent", "=", "2", ",", " date", "_", "format", "='", "s", "')", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.456151008605957, -0.17805005609989166, -0.029566992074251175, -1.3828182090946939e-05, -0.000271521887043491, -0.00121412449516356, -1.4726622104644775, -0.011072030290961266, -0.0012198395561426878, -0.005753741133958101, -0.006450782995671034, -0.030469559133052826, -0.003479024861007929, -2.3084628582000732, -0.8900540471076965, -0.016293928027153015, -0.784507155418396, -0.0004798214649781585, -1.7867003679275513, -0.15201106667518616, -0.35134366154670715, -2.1815061700181104e-05, -0.09813180565834045, -0.31205496191978455, -0.00964576005935669, -1.1042474508285522, -0.00023362292267847806, -0.20396505296230316, -0.3369341194629669, -0.003670860780403018, -0.3856973946094513, -0.0035973377525806427, -0.00762161472812295, -2.0265373677830212e-05, -0.0007443041540682316, -3.576272320060525e-06, -0.000501030299346894, -0.0011688789818435907, -0.003427585121244192, -0.00013839241000823677, -0.009924354963004589, -0.007806980051100254, -0.10613595694303513, -0.4995546340942383, -0.0032641009893268347, -0.012784427031874657, -4.672895011026412e-05, -1.1920928244535389e-07, -0.18439339101314545, -0.021927766501903534, -0.0005851463647559285, -0.00012313561455812305, -0.0108379777520895, -0.0025091851130127907, -0.00939271505922079, -0.32617780566215515, -0.0009883524617180228, -0.0006842655711807311, -0.06566324084997177, -0.00012635385792236775, -2.109982233378105e-05, -0.0019549084827303886, -3.0278701160568744e-05, -2.9444261599564925e-05, -0.00016485285595990717, -7.629103492945433e-05, -0.0021476317197084427, -1.3340758085250854, -2.3841574147809297e-05, -0.08277052640914917, -0.009293392300605774, -0.00032944019767455757, -0.0010369406081736088, -0.5256631970405579, -0.005061313509941101, -0.006684798281639814, -3.4927710657939315e-05, -0.007885634899139404, -0.00021979777375236154, -9.262132516596466e-05, -0.005782661028206348, -0.00464016804471612, -0.21564528346061707, -0.05769997462630272, -0.07435119152069092, -0.28417012095451355, -9.250213042832911e-05, -0.004857406485825777, -0.11957888305187225, -0.04258599504828453, -6.067568756407127e-05, -0.02218535542488098, -0.4421748220920563, -0.021372133865952492, -0.9690538644790649, -0.17308926582336426, -0.035060226917266846, 0.0, -0.0002656822034623474, -0.005332176107913256, -0.0005538121913559735, -0.020281201228499413, -0.020854836329817772, -0.1425045281648636, -0.01758238486945629, -0.41098734736442566, -0.41085946559906006, -0.0005098473629914224, -0.0007707485929131508, -0.10412243753671646, -0.019375232979655266, -0.17630761861801147, -0.01606132835149765, -0.7581464052200317, -0.8589748740196228, -1.8347586393356323, -2.264974000354414e-06, -0.00031764229061082006, -0.013803616166114807, -0.8572747707366943, -7.748573807475623e-06, -0.0014072287594899535, -0.0001419681793777272, -0.6696910858154297, -0.003017042065039277, -1.016448736190796, -0.000325388420606032, -2.3649134635925293, -0.6371461749076843, -1.9794087409973145, -1.4849929809570312, -1.5222129821777344, -0.008503655903041363, -0.00010227633902104571, -0.06888402253389359, -0.017542677000164986, -0.004729631822556257, -0.0024039437994360924, -0.0013299677520990372, -1.6331539882230572e-05, -0.00016652150952722877, -0.0001932195882545784, -0.008408737368881702, -0.004703885409981012, -0.5021127462387085, -0.00039843725971877575, -1.425443172454834, -0.09847021102905273, -0.8130538463592529, -0.009543392807245255, -0.0455549992620945, -5.364403477869928e-06, -3.6000557884108275e-05, -8.999896090244874e-05, -0.0006031363154761493, -0.0011214879341423512, -0.021637799218297005, -0.0010141950333490968, -0.03697116672992706, -0.0056321267038583755, -0.0012284121476113796, -0.0005025792634114623, -0.09705747663974762, -0.25474807620048523, -0.012888228520751, -0.00027378625236451626, -6.198863957251888e-06, -1.490105023549404e-05, -9.179073458653875e-06, -0.8164003491401672, -0.00014733182615600526, -0.0011512563796713948, -1.585470999998506e-05, -2.1934269170742482e-05, -0.00015484087634831667, -0.0006802152493037283, -0.0004292996891308576, -0.0008703258354216814, -2.753696753643453e-05, -0.5495064854621887, -5.722029527532868e-06, -0.00026854246971197426, -0.0013193720951676369, -4.660974445869215e-05, -3.933898824470816e-06, -0.00047565114800818264, -0.0005128260818310082, -0.11470875144004822, -0.00021169328829273582, -0.6460928320884705, -0.004094432573765516, -0.009942295029759407, -4.768370445162873e-07, -1.8416675329208374, -0.03387650474905968, -0.1834675371646881, -0.00036507140612229705, -9.48860906646587e-05, -0.007202493492513895, -6.937739817658439e-05, -0.0008070787298493087, -0.03211953490972519, -9.7508447652217e-05, -8.4638240878121e-06, -0.0009920443408191204, -0.03408714011311531, -3.8542685508728027, -0.9976354837417603, -0.2895432412624359, -0.12121492624282837, -0.00012158608296886086, -0.08230281621217728, -0.031680185347795486, -0.018217740580439568, -0.2667906582355499, -9.667406266089529e-05, -1.9805361032485962, -0.0023072545882314444, -1.0453085899353027, -0.4292069375514984, -2.0907490253448486, -2.6702524337451905e-05, -0.0020026168785989285, -0.042786579579114914, -1.1403995752334595, -0.09557134658098221, -0.050589580088853836, -1.62667977809906, -2.0531978607177734, -0.016797998920083046, -0.847314715385437, -5.960462772236497e-07, -1.9073468138230965e-06, -2.3841830625315197e-06, -0.00016866691294126213, -0.09746545553207397], "finish_reason": "stop"}], "metrics": {"energy": 266.7613960905076, "energy_per_token": 1.1303448986885916, "time": 10.300115, "time_per_token": 0.04364455508474576}}
{"outputs": [{"text": "# Check if path exists\n    if not os.path.isdir(path):\n        raise FileNotFoundError('Path does not exist or is not a directory.')\n\n    # Define the source file names\n    source_files = [os.path.join(path, f) for f in os.listdir(path) if f.endswith('.json')]\n\n    # Process each source file\n    dataframes = [pd.read_json(f) for f in source_files]\n\n    # Insert the file names into the DataFrame as the 'Source' column\n    dataframes = [df.assign(source=f) for df, f in zip(dataframes, source_files)]\n\n    # Move the processed files to the processed directory\n    processed_path = os.path.join(path, 'processed')\n    if not os.path.exists(processed_path):\n        os.mkdir(processed_path)\n\n    for df, f in zip(dataframes, source_files):\n        # Move the processed files to the processed directory\n        processed_file = os.path.join(processed_path,", "tokens": ["#", " Check", " if", " path", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Path", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "')", "\n", "\n", "    ", "#", " Define", " the", " source", " file", " names", "\n", "    ", "source", "_", "files", " =", " [", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", " for", " f", " in", " os", ".", "list", "dir", "(", "path", ")", " if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", "]", "\n", "\n", "    ", "#", " Process", " each", " source", " file", "\n", "    ", "data", "frames", " =", " [", "pd", ".", "read", "_", "json", "(", "f", ")", " for", " f", " in", " source", "_", "files", "]", "\n", "\n", "    ", "#", " Insert", " the", " file", " names", " into", " the", " Data", "Frame", " as", " the", " '", "Source", "'", " column", "\n", "    ", "data", "frames", " =", " [", "df", ".", "assign", "(", "source", "=", "f", ")", " for", " df", ",", " f", " in", " zip", "(", "data", "frames", ",", " source", "_", "files", ")]", "\n", "\n", "    ", "#", " Move", " the", " processed", " files", " to", " the", " processed", " directory", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "processed", "_", "path", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "processed", "_", "path", ")", "\n", "\n", "    ", "for", " df", ",", " f", " in", " zip", "(", "data", "frames", ",", " source", "_", "files", "):", "\n", "        ", "#", " Move", " the", " processed", " files", " to", " the", " processed", " directory", "\n", "        ", "processed", "_", "file", " =", " os", ".", "path", ".", "join", "(", "processed", "_", "path", ","], "logprobs": [-1.6791048049926758, -2.595421314239502, -0.21209286153316498, -1.2972681522369385, -0.12960781157016754, -0.5913976430892944, -0.0016886036610230803, -0.03263438493013382, -0.07811211049556732, -0.0024883756414055824, -7.510157047363464e-06, -0.00012170527770649642, -0.0007057083421386778, -2.1120765209198, -0.0016163630643859506, -0.00025459862081333995, -0.002020938089117408, -0.0033435889054089785, -0.004016547463834286, -0.0021282420493662357, -1.0685172080993652, -0.5640009641647339, -0.006124538369476795, -0.00015186110977083445, -2.216527223587036, -0.9234390258789062, -0.6046637296676636, -0.0003500564198475331, -0.01101838517934084, -3.3435628414154053, -0.13504672050476074, -0.12753821909427643, -0.004854796454310417, -0.027656329795718193, -1.1657121181488037, -0.017328763380646706, -0.0007849234389141202, -0.12498188763856888, -0.0010514690075069666, -0.12050989270210266, -4.141543388366699, -1.2581101655960083, -2.9483983516693115, -2.500070810317993, -1.520156979560852, -0.5540533661842346, -0.00043764073052443564, -0.3074941039085388, -0.014870863407850266, -0.6757705807685852, -0.0065045543015003204, -0.6590904593467712, -1.2041990756988525, -3.576272320060525e-06, -0.0004152389301452786, -1.7523612768854946e-05, -0.09381572157144547, -0.0017200212460011244, -0.008699849247932434, -0.00020919041708111763, -0.4765207767486572, -0.0603141263127327, -0.02732185274362564, -0.0012728216825053096, -0.0009983561467379332, -0.08053559809923172, -0.0001752223033690825, -0.00014184899919200689, -1.4305104514278355e-06, -0.00023409964342135936, -0.0007152383332140744, -0.5133236646652222, -0.10400266200304031, -0.1996936947107315, -0.010600332170724869, -0.011085116304457188, -5.4596363042946905e-05, 0.0, -0.0317581370472908, -0.10217095166444778, -0.0002848696312867105, -0.0003488647344056517, -0.02502957545220852, -0.0021096847485750914, -0.13990744948387146, -0.00026806574896909297, -0.03095613420009613, -3.327404022216797, -0.8886352181434631, -0.6616063714027405, -0.007063536439090967, -0.5086573958396912, -0.0004789874074049294, -2.461543560028076, -0.6098722815513611, -0.01615869253873825, -1.6571593284606934, -0.724456787109375, -0.0004741021548397839, -0.06569460779428482, -3.6954811548639555e-06, -0.00012933371181134135, -0.0021081382874399424, -0.1149272620677948, -0.586629331111908, -0.15717659890651703, -0.00017176583060063422, -0.00010907054820563644, -0.05583086609840393, -1.0609570381348021e-05, -0.0001472126314183697, -0.0106190862134099, -0.00922276172786951, -0.39870914816856384, -0.00020037073409184813, -0.05144982784986496, -1.964499831199646, -0.9194730520248413, -2.863738536834717, -1.1055940389633179, -0.8173621296882629, -0.2972472906112671, -0.5008951425552368, -0.2993491590023041, -1.6242611408233643, -0.8736743927001953, -1.2929221391677856, -1.2299724817276, -0.002622975967824459, -0.00786635559052229, -0.01516467984765768, -0.00037245964631438255, -1.6673614978790283, -0.11143604665994644, -0.7952073216438293, -0.014596816152334213, -0.23680324852466583, -0.005027153994888067, -0.48196253180503845, -0.0005613181856460869, -1.1201565265655518, -0.012163981795310974, -0.28066277503967285, -0.031175704672932625, -0.0073597729206085205, -0.043353158980607986, -0.008200427517294884, -0.018750324845314026, -0.00019453064305707812, -0.008835033513605595, -0.0010507544502615929, -0.0014484162675216794, -1.0371154530730564e-05, -0.0003051292151212692, -0.0024085817858576775, -1.3232143828645349e-05, -3.40932747349143e-05, -0.0019425348145887256, -0.0004698126285802573, -0.015758976340293884, -0.00018785618885885924, -0.01589532196521759, -0.84406578540802, -0.39698028564453125, -0.1445499062538147, -0.08610586822032928, -0.09515392035245895, -1.329675555229187, -1.7696475982666016, -0.5184949636459351, -0.06173890084028244, -0.0008499585674144328, -0.2470220923423767, -0.03171078860759735, -1.2438242435455322, -0.00038961926475167274, -0.017422839999198914, -5.006777428206988e-06, -5.471556869451888e-05, -0.0031780709978193045, -0.0007381098694168031, -0.00031573555315844715, -0.014442432671785355, -0.002063646912574768, -0.016038687899708748, -0.004643134772777557, -0.0010567086283117533, -0.0005994430393911898, -0.044996049255132675, -0.3214905560016632, -0.016830118373036385, -0.00030417583184316754, -5.352353764465079e-05, -1.8954096958623268e-05, -6.174850568640977e-05, -0.5631118416786194, -6.603976362384856e-05, -0.0015955348499119282, -1.0847986231965479e-05, -3.933898824470816e-06, -0.0001711698860162869, -0.0027624324429780245, -0.0006382812280207872, -0.0027528032660484314, -6.031808152329177e-05, -0.8297109603881836, -6.198863957251888e-06, -0.00026520551182329655, -0.0007490689749829471, -3.6000557884108275e-05, -3.576278118089249e-07, -0.00030882356804795563, -0.001292227883823216, -1.1474659442901611, -0.00024172721896320581, -0.1472521722316742, -0.10986285656690598, -0.3438952565193176, -0.5040595531463623, -0.03124803490936756, -0.00023505308490712196, -0.00041500062798149884, -0.0005391574813984334, -1.6927575416048057e-05, -0.00032944019767455757, -0.000801837770268321, -9.536738616588991e-07, -1.1920922133867862e-06, -0.00047910655848681927, -0.0006188622792251408, -0.0012554391287267208, -2.071071147918701, -1.557961106300354, -0.19682852923870087, -1.197274923324585, -2.0339975357055664, -0.07357267290353775, -0.0491073913872242, -0.05186201632022858, -0.02621091902256012, -0.04575202986598015, -0.0007537146448157728, -1.17946457862854, -0.006532149855047464, -0.30616050958633423, -0.05818371847271919, -0.030101897194981575, -6.16293036728166e-05, -4.935142715112306e-05, -0.001050635357387364, -0.009843853302299976, -0.0002444683632347733, -0.012481551617383957, -2.861018856492592e-06, -8.344646857949556e-07, -9.011816291604191e-05], "finish_reason": "length"}], "metrics": {"energy": 275.2227201862335, "energy_per_token": 1.0750887507274747, "time": 11.350473, "time_per_token": 0.04433778515625}}
{"outputs": [{"text": "import os\n    import json\n\n    def parse_file(filename):\n        try:\n            return json.load(open(filename))\n        except:\n            print(f\"Failed to parse {filename}\")\n        return None\n\n    df = None\n\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith(\".json\"):\n            df_ = parse_file(os.path.join(path, filename))\n            if df_ is None:\n                continue\n            if df is None:\n                df = pd.DataFrame(df_)\n            else:\n                df = pd.concat([df, pd.DataFrame(df_)], axis=0)\n            df.loc[:, 'Source'] = filename\n\n    if df is None:\n        print(\"No JSON files found in directory\")\n        return df\n\n    processed_path = os.path.join(path, \"processed\")\n    os.mkdir(processed_path)\n    shutil.move(os.path.join(path, df['Source'].iloc[0]), processed_", "tokens": ["import", " os", "\n", "    ", "import", " json", "\n", "\n", "    ", "def", " parse", "_", "file", "(", "filename", "):", "\n", "        ", "try", ":", "\n", "            ", "return", " json", ".", "load", "(", "open", "(", "filename", "))", "\n", "        ", "except", ":", "\n", "            ", "print", "(", "f", "\"", "Failed", " to", " parse", " {", "filename", "}\"", ")", "\n", "        ", "return", " None", "\n", "\n", "    ", "df", " =", " None", "\n", "\n", "    ", "for", " filename", " in", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", ":", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "\"", ".", "json", "\"", "):", "\n", "            ", "df", "_", " =", " parse", "_", "file", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", "))", "\n", "            ", "if", " df", "_", " is", " None", ":", "\n", "                ", "continue", "\n", "            ", "if", " df", " is", " None", ":", "\n", "                ", "df", " =", " pd", ".", "DataFrame", "(", "df", "_)", "\n", "            ", "else", ":", "\n", "                ", "df", " =", " pd", ".", "concat", "([", "df", ",", " pd", ".", "DataFrame", "(", "df", "_", ")]", ",", " axis", "=", "0", ")", "\n", "            ", "df", ".", "loc", "[:", ",", " '", "Source", "']", " =", " filename", "\n", "\n", "    ", "if", " df", " is", " None", ":", "\n", "        ", "print", "(", "\"", "No", " JSON", " files", " found", " in", " directory", "\"", ")", "\n", "        ", "return", " df", "\n", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " \"", "processed", "\"", ")", "\n", "    ", "os", ".", "mk", "dir", "(", "processed", "_", "path", ")", "\n", "    ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " df", "['", "Source", "']", ".", "il", "oc", "[", "0", "])", ",", " processed", "_"], "logprobs": [-4.527768135070801, -1.8215627670288086, -0.06826826184988022, -0.0516357347369194, -0.09145405143499374, -0.8231397867202759, -0.0011298231547698379, -2.158024787902832, -0.0017310886178165674, -2.2600388526916504, -2.363758087158203, -0.1405564695596695, -2.065858840942383, -0.027039825916290283, -1.1692848205566406, -0.06294518709182739, -0.002879641717299819, -0.0037941390182822943, -2.456780195236206, -0.00010108436981681734, -0.0005293875001370907, -0.0008319730986841023, -2.9026730060577393, -0.3169102668762207, -0.00024005869636312127, -0.11277144402265549, -0.00030393750057555735, -0.0169407669454813, -0.00047755756531842053, -0.03196217492222786, -0.8717971444129944, -0.018323788419365883, -0.0036011389456689358, -0.0011131525970995426, -1.330431580543518, -0.01677033305168152, -0.0011617346899583936, -1.8757535219192505, -0.25045669078826904, -0.37847891449928284, -0.3803881108760834, -2.4245734214782715, -0.034748710691928864, -0.43214133381843567, -0.6273156404495239, -0.00612560473382473, -0.37734976410865784, -0.020687520503997803, -0.004896079655736685, -2.7802562713623047, -0.06635311990976334, -0.3682164251804352, -0.003155968151986599, -0.027380777522921562, -0.0007189311436377466, -3.142436981201172, -0.11483533680438995, -2.0578250885009766, -0.007187107112258673, -1.1414870023727417, -0.00041059168870560825, -0.9672355055809021, -0.6591367125511169, -0.004635184537619352, -0.2850903272628784, -0.010128293186426163, -0.011816859245300293, -3.6954811548639555e-06, -0.0011185110779479146, -1.2040065485052764e-05, -0.0011356578906998038, -0.003185200970619917, -0.014175202697515488, -0.00048268112004734576, -0.006440359633415937, -0.009409012272953987, -0.2735288143157959, -0.42621609568595886, -0.012615637853741646, -0.030658714473247528, -6.723177648382261e-05, -1.1920928244535389e-07, -0.7841219902038574, -0.0020549625623971224, -0.01209944300353527, -0.0012855607783421874, -4.7444173105759546e-05, -0.032398518174886703, -0.002223521238192916, -0.007255277596414089, -2.0740394592285156, -1.0059551000595093, -1.7912507057189941, -0.7549166083335876, -1.4543427823809907e-05, -8.260862523457035e-05, -0.0014143711887300014, -0.10611976683139801, -0.0005399914807640016, -0.00018356545479036868, -0.0027192779816687107, -0.0004596845537889749, -2.9682672902708873e-05, -0.0009159421897493303, -0.00019131260341964662, -0.008947161957621574, -0.00041083001997321844, -0.002557104919105768, -0.06987597793340683, -0.07590806484222412, -0.04382985830307007, -0.09616272896528244, -0.1454649716615677, -1.4154911041259766, -0.04484492167830467, -0.025936361402273178, -0.0006216024048626423, -0.33067360520362854, -0.008140243589878082, -0.12760664522647858, -0.46261119842529297, -0.03719573840498924, -0.0014188947388902307, -0.024220060557127, -0.002142040990293026, -0.002975443610921502, -0.00025567124248482287, -0.010277916677296162, -0.0016296928515657783, -0.06861737370491028, -0.0002277830062666908, -0.010776183567941189, -0.13263346254825592, -0.03697403892874718, -0.12424919009208679, -0.020483622327446938, -0.13622938096523285, -0.009281463921070099, -1.4662635294371285e-05, -0.0008144637104123831, -0.0005138983833603561, -0.01769494265317917, -0.060563698410987854, -0.6373403668403625, -0.00023326536756940186, -0.14683540165424347, -0.06695768237113953, -0.002479457063600421, -0.005637697875499725, -0.10724876821041107, -0.00018416139937471598, -0.0005691815749742091, -0.003141945693641901, -0.0018663860391825438, -0.006900290492922068, -0.04225178807973862, -0.3088362216949463, -0.7237339615821838, -0.005726716946810484, -0.16295407712459564, -0.266164630651474, -0.02145334519445896, -0.6378908157348633, -0.08594737201929092, -1.2663516998291016, -1.5895394086837769, -0.7046422362327576, -0.0010056205792352557, -1.0471694469451904, -0.6709124445915222, -0.0008610355434939265, -0.0010028815595433116, -0.11820352077484131, -0.02095266804099083, -0.6670347452163696, -0.02809455431997776, -0.19004270434379578, -0.052009712904691696, -0.003710529999807477, -0.2382030189037323, -0.012669550254940987, -0.005529110319912434, -0.0006506709614768624, -0.7161144614219666, -0.09136331081390381, -0.3501909673213959, -0.08487936109304428, -0.46757397055625916, -0.025900699198246002, -0.08940145373344421, -1.1659510135650635, -1.619712471961975, -0.3119634985923767, -0.010308947414159775, -0.00038068200228735805, -0.405365914106369, -0.04961119219660759, -2.11024808883667, -0.005288302432745695, -0.11707070469856262, -0.0005598884890787303, -1.4526842832565308, -0.0916145071387291, -1.0320186614990234, -0.0014081810368224978, -0.06659605354070663, -2.9802276912960224e-06, -0.00013851160474587232, -2.884823152271565e-05, -0.0015707785496488214, -0.001135062426328659, -0.04684102162718773, -0.0021189635153859854, -0.5207493901252747, -0.009842436760663986, -0.002329970942810178, -0.0011687598889693618, -0.0009733468177728355, -0.019077273085713387, -1.0320965051651, -6.556489552167477e-06, -1.462015151977539, -9.417489309271332e-06, -9.679325739853084e-05, -0.0012394849909469485, -3.611976353568025e-05, -2.264974000354414e-06, -0.02922169119119644, -0.12478923797607422, -0.28021878004074097, -2.0454299449920654, -0.0002992897352669388, -2.5748875486897305e-05, -0.09694820642471313, -0.0900706872344017, -1.0148217678070068, -0.0012392468051984906, -0.0004700509598478675, -0.0001517419150331989, -0.006610667798668146, -0.0005265279905870557, -0.011553286574780941, -0.00561387138441205, -1.7649438381195068, -2.9447357654571533, -0.012493089772760868, -0.06319030374288559, -0.0005112771177664399, -0.4850260317325592, -0.00015221867943182588, -0.013083680532872677, -0.001466033631004393, -0.0126937972381711, -0.0005134217790327966, -0.23574605584144592, -0.0002759314374998212], "finish_reason": "length"}], "metrics": {"energy": 299.2021552724839, "energy_per_token": 1.1687584190331402, "time": 11.561053, "time_per_token": 0.04516036328125}}
{"outputs": [{"text": "files = sorted(os.listdir(path))\n    for f in files:\n        if f.endswith('.json'):\n            with open(os.path.join(path, f), 'r') as read_file:\n                data = json.load(read_file)\n                df = pd.DataFrame.from_records(data, columns=data[0].keys()).reset_index(drop=True)\n                df.loc[:, 'Source'] = f\n    os.makedirs('processed', exist_ok=True)\n    for f in files:\n        if f.endswith('.json'):\n            shutil.move(os.path.join(path, f), os.path.join('processed', f))\n    return df", "tokens": ["files", " =", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " '", "r", "')", " as", " read", "_", "file", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "read", "_", "file", ")", "\n", "                ", "df", " =", " pd", ".", "DataFrame", ".", "from", "_", "records", "(", "data", ",", " columns", "=", "data", "[", "0", "]", ".", "keys", "())", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n", "                ", "df", ".", "loc", "[:", ",", " '", "Source", "']", " =", " f", "\n", "    ", "os", ".", "m", "aked", "irs", "('", "processed", "'", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "if", " f", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " os", ".", "path", ".", "join", "('", "processed", "'", ",", " f", "))", "\n", "    ", "return", " df"], "logprobs": [-1.9815607070922852, -0.034581515938043594, -1.5632357597351074, -0.12832292914390564, -0.06489133089780807, -6.198863957251888e-06, -0.026178866624832153, -4.207999518257566e-05, -0.0009112972766160965, -0.004320928826928139, -0.02925480157136917, -0.038463182747364044, -0.06607384979724884, -2.355994939804077, -1.4592030048370361, -0.13820528984069824, -0.004282352048903704, -0.0010724276071414351, -0.0016445695655420423, -0.00242475513368845, -0.5816190838813782, -0.18184544146060944, -0.022610483691096306, -0.024014553055167198, -4.2914423829643056e-05, -1.1920928244535389e-07, -0.18684567511081696, -0.04603429138660431, -0.0011024356354027987, -0.00018106251081917435, -0.014858061447739601, -0.006150959059596062, -0.002220785478129983, -0.33181101083755493, -0.0010186012368649244, -0.0021131346002221107, -0.13438473641872406, -0.00010918975021922961, -5.173549288883805e-05, -0.003027144121006131, -0.00014220656885299832, -9.262132516596466e-05, -0.0004070168943144381, -0.00017045476124621928, -0.010645034722983837, -0.2592511475086212, -7.807903602952138e-05, -0.054280783981084824, -0.07307537645101547, -0.08276229351758957, -0.000527123745996505, -3.5442869663238525, -0.18823079764842987, -0.08153761178255081, -0.006817888002842665, -0.0020624573808163404, -0.0026723172049969435, -0.9136325716972351, -0.01948034018278122, -0.019398150965571404, -8.165503095369786e-05, -0.011593586765229702, -0.00032646095496602356, -0.00046433156239800155, -1.7165990357170813e-05, -1.1920922133867862e-06, -0.016153765842318535, -0.006860273890197277, -0.6802078485488892, -0.3545568585395813, -0.02997545711696148, -0.008870836347341537, -0.00016246906307060272, -0.11213812232017517, -1.827526330947876, -3.2066785934148356e-05, -2.1219027985353023e-05, -0.7554597854614258, -0.007714834064245224, -0.0305065605789423, -1.2836530208587646, -0.12062106281518936, -1.663759708404541, -0.5569364428520203, -0.040736693888902664, -0.0009403574513271451, -0.01699667237699032, -0.00019703354337252676, -0.0001532914029667154, -0.03793250024318695, -2.9355618953704834, -2.635427236557007, -7.152555099310121e-07, -5.4238757002167404e-05, -0.21427781879901886, -0.010907196439802647, -0.002597531769424677, -0.00335808377712965, -0.012144196778535843, -0.00810394249856472, -0.1176818385720253, -0.03684203326702118, -1.5514130592346191, -2.621544122695923, -0.04599364846944809, -0.0005995621904730797, -0.06710449606180191, -0.7067661285400391, -0.0010247938334941864, -0.0012710357550531626, -0.17983697354793549, -0.04053157940506935, -2.2898573875427246, -1.8651551008224487, -1.5735502529423684e-05, -0.3146589696407318, -0.00022980909852776676, -0.000723576988093555, -0.7360363006591797, -0.08524975925683975, -0.03502350673079491, -0.0010874316794797778, -0.0036871323827654123, 0.0, -0.00012134769349358976, -0.0015382850542664528, -0.0009261847590096295, -0.0007711059297434986, -0.008783159777522087, -0.0036566078197211027, -1.1942061185836792, -0.24907824397087097, -0.03433677926659584, -0.11450359225273132, -0.0023438858333975077, -0.0013630633475258946, -0.0005418977816589177, -0.06095947325229645, -0.11170623451471329, -0.0438309982419014, -0.014977854676544666, -1.7881377516459906e-06, -1.7165990357170813e-05, -0.004499312024563551, -0.0073632048442959785, -0.0005890780012123287, -0.0003405229654163122, -0.028339898213744164, -0.0011982887517660856, -0.0009264229447580874, -0.355158269405365, -0.00013302871957421303, -6.794906312279636e-06, -0.04021134227514267, -0.0033855284564197063, -0.021322540938854218, -0.0002637753786984831, -2.90866428258596e-05, -7.295342220459133e-05, -0.0002641328901518136, -0.0002755738969426602, -0.0007712250226177275, -9.762764238985255e-05, -0.003783213207498193, -6.83045873302035e-05, -9.333651541965082e-05, -0.19440339505672455, -3.909988299710676e-05, -7.295342220459133e-05, -0.00021288513380568475, -0.0001546025014249608, -0.04952724277973175, -0.004704478662461042, -0.0021266955882310867, -9.262132516596466e-05, -0.014367817901074886, -0.007548381574451923, -0.04584449529647827, -0.07461675256490707, -0.05462205410003662, -0.006989197339862585], "finish_reason": "stop"}], "metrics": {"energy": 224.11473797512053, "energy_per_token": 1.238202972238235, "time": 8.000176, "time_per_token": 0.04419986740331491}}
{"outputs": [{"text": "filenames = []\n    for filename in sorted(os.listdir(path)):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                json_data = json.load(f)\n                filenames.append(filename)\n    df = pd.DataFrame(json_data)\n    df['source'] = filenames\n    shutil.move(path, os.path.join(path, 'processed'))\n    return df", "tokens": ["fil", "en", "ames", " =", " []", "\n", "    ", "for", " filename", " in", " sorted", "(", "os", ".", "list", "dir", "(", "path", "))", ":", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "json", "_", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "                ", "fil", "en", "ames", ".", "append", "(", "filename", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "json", "_", "data", ")", "\n", "    ", "df", "['", "source", "']", " =", " fil", "en", "ames", "\n", "    ", "sh", "util", ".", "move", "(", "path", ",", " os", ".", "path", ".", "join", "(", "path", ",", " '", "processed", "'))", "\n", "    ", "return", " df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.151837348937988, -0.00869689416140318, -0.00015209948469419032, -0.011327479034662247, -1.8036010265350342, -0.03835328295826912, -0.08029063045978546, -0.4822766184806824, -0.46566247940063477, -0.003153591649606824, -1.3460172414779663, -0.009017220698297024, -0.01616080291569233, -6.318072337307967e-06, -0.0025770808570086956, -8.702239938429557e-06, -0.0020354522857815027, -0.006139703560620546, -0.00920445378869772, -0.00031609306461177766, -0.01460832916200161, -0.0014818650670349598, -0.06119924038648605, -0.15094700455665588, -0.006572297774255276, -0.016534680500626564, -4.31528314948082e-05, -2.3841855067985307e-07, -0.22980409860610962, -0.029142728075385094, -0.0006899837171658874, -0.0001541257370263338, -0.011199467815458775, -0.003404180984944105, -0.0009344025747850537, -1.724769115447998, -0.0005490464391186833, -0.0015949398512020707, -0.06342562288045883, -0.00019214690837543458, -3.123234637314454e-05, -0.002868230454623699, -4.053033626405522e-05, -3.6477376852417365e-05, -0.0004545609117485583, -6.854299135738984e-05, -0.002658882411196828, -0.28423112630844116, -4.970903682988137e-05, -0.07912778854370117, -0.0951455682516098, -0.06093311682343483, -0.0002864189154934138, -0.0621783509850502, -0.00547990994527936, -0.0005116345710121095, -0.0010243174619972706, -3.396040439605713, -0.10150233656167984, -0.22835569083690643, -0.0010664734290912747, -0.009827917441725731, -8.749579137656838e-05, -0.01441881526261568, -0.00022825974156148732, -0.0001323135511483997, -0.0037298889365047216, -0.003654469968751073, -0.41517114639282227, -0.881017804145813, -0.0002903516869992018, -5.960462772236497e-07, -0.0030410494655370712, -0.0029731853865087032, -0.2865479588508606, -0.15854592621326447, -0.03785606101155281, -0.0025768429040908813, -1.0585458278656006, -0.3208272159099579, -0.01550301257520914, -0.018922995775938034, -4.577531944960356e-05, -0.0393558107316494, -0.1448010802268982, -0.02629568614065647, -0.0010442048078402877, -5.376194530981593e-05, -0.21085579693317413, -0.10834579914808273, -0.010450875386595726, -0.033516205847263336, -0.16093020141124725, -0.27641257643699646, -0.0002256377338198945, -0.0008686583023518324, -0.08666407316923141, -1.5497195136049413e-06, -4.529942543740617e-06, -0.008974099531769753, -0.1018204391002655, -2.152616262435913, -0.0003771070914808661, -4.207999518257566e-05, -0.06516589969396591, -0.057203274220228195, -0.15882503986358643, -0.005040912423282862, -0.2931215465068817, -3.576214658096433e-05, -0.00048780461656861007, -0.0024352199397981167, -0.002365649910643697, -0.017454469576478004, -0.015570619143545628, -0.01272816676646471, -0.056829098612070084, -0.007011215202510357, -0.00660119391977787, -0.04180646315217018, -0.035269688814878464, -0.037137504667043686, -0.0047610728070139885, -0.9909540414810181, -1.1920922133867862e-06, -3.099436753473128e-06, -1.1920858014491387e-05, -6.544376083184034e-05, -0.04799121245741844], "finish_reason": "stop"}], "metrics": {"energy": 129.5635720825195, "energy_per_token": 1.0043687758334845, "time": 5.4792027, "time_per_token": 0.04247443953488372}}
{"outputs": [{"text": "df = pd.DataFrame()\n    for filename in os.listdir(path):\n        if filename.endswith('.json'):\n            with open(os.path.join(path, filename), 'r') as f:\n                data = json.load(f)\n            df = df.append(pd.DataFrame(data, index=None).assign(Source=filename))\n\n    # Move processed files to processed directory\n    processed_path = os.path.join(path, \"processed\")\n    if not os.path.exists(processed_path):\n        os.mkdir(processed_path)\n\n    for filename in df[\"Source\"].values:\n        shutil.move(os.path.join(path, filename), os.path.join(processed_path, filename))\n\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "path", "):", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "('", ".", "json", "')", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "data", " =", " json", ".", "load", "(", "f", ")", "\n", "            ", "df", " =", " df", ".", "append", "(", "pd", ".", "DataFrame", "(", "data", ",", " index", "=", "None", ")", ".", "assign", "(", "Source", "=", "filename", "))", "\n", "\n", "    ", "#", " Move", " processed", " files", " to", " processed", " directory", "\n", "    ", "processed", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " \"", "processed", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "processed", "_", "path", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "processed", "_", "path", ")", "\n", "\n", "    ", "for", " filename", " in", " df", "[", "\"", "Source", "\"", "]", ".", "values", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "processed", "_", "path", ",", " filename", "))", "\n", "\n", "    ", "return", " df"], "logprobs": [-1.696671485900879, -0.13643896579742432, -0.2820574641227722, -0.0003657863999251276, -0.20191600918769836, -0.25121864676475525, -0.014794166199862957, -0.1403081715106964, -0.47295060753822327, -0.5388348698616028, -0.005906864069402218, -1.2488352060317993, -8.702239938429557e-06, -0.0025518732145428658, -7.271740287251305e-06, -0.0024221388157457113, -0.0050235954113304615, -0.0039339070208370686, -0.004118414130061865, -0.0028092702850699425, -0.21172299981117249, -0.23296672105789185, -0.005186436232179403, -0.007283917628228664, -4.970903682988137e-05, -1.1920928244535389e-07, -0.2291070818901062, -0.022622371092438698, -0.0005639393348246813, -0.00016973962192423642, -0.010689028538763523, -0.004748496692627668, -0.001760838902555406, -0.3119896948337555, -0.0010945764370262623, -0.0013981815427541733, -0.07696185261011124, -0.000196556793525815, -2.4437606043647975e-05, -0.00205972115509212, -2.8013790142722428e-05, -6.496695277746767e-05, -0.0004861365014221519, -0.00012790338951162994, -0.0037581545766443014, -0.2775798439979553, -6.16293036728166e-05, -0.05144812911748886, -0.04499194398522377, -0.051138393580913544, -0.0004914983292110264, -0.0643872395157814, -0.00553574925288558, -0.0005920564290136099, -0.0011106519959867, -0.652520477771759, -0.005259486846625805, -0.008116595447063446, -3.862306402879767e-05, -0.01577669568359852, -0.00019167017308063805, -7.462222856702283e-05, -0.008215206675231457, -0.0044390237890183926, -1.393488883972168, -0.0789043977856636, -0.07918120175600052, -0.3533187210559845, -9.917721035890281e-05, -0.003933075815439224, -0.15761719644069672, -0.07738275080919266, -0.00015341058315243572, -0.024365844205021858, -0.4103926718235016, -0.014808613806962967, -0.602709174156189, -0.2654840052127838, -2.838618516921997, -0.899939239025116, -0.4316399395465851, -1.5880069732666016, -0.9406890869140625, -0.0009425011812709272, -0.8594028353691101, -0.02790282480418682, -0.09338995814323425, -0.9154095649719238, -0.011305084452033043, -2.030958414077759, -0.008554835803806782, -2.4007558822631836, -0.6108383536338806, -0.6106622219085693, -0.024772601202130318, -0.036070313304662704, -1.9348481893539429, -0.6898044347763062, -0.06305409967899323, -0.001157209975644946, -0.5804325938224792, -0.027079042047262192, -0.7725578546524048, -0.000715833914000541, -0.04661064222455025, -5.722029527532868e-06, -4.8040190449682996e-05, -0.00021586472576018423, -0.0004700509598478675, -0.0008792586741037667, -0.039369333535432816, -0.0020183208398520947, -2.4230926036834717, -0.0062000080943107605, -0.004169818013906479, -0.00027426297310739756, -0.0012213874142616987, -0.003846272360533476, -0.46762460470199585, -0.05045119673013687, -0.00030310326837934554, -0.00017295771976932883, -4.815939246327616e-05, -8.475421054754406e-05, -0.020963991060853004, -9.238292841473594e-05, -0.002410127781331539, -1.9430925021879375e-05, -6.9141146923357155e-06, -0.00029952809563837945, -0.00263795698992908, -0.0012467476772144437, -0.0026090650353580713, -6.174850568640977e-05, -0.602695107460022, -8.702239938429557e-06, -9.16677454370074e-05, -0.001545426552183926, -2.4676019165781327e-05, -3.576278118089249e-07, -0.0004745787591673434, -0.0018675759201869369, -1.1412503719329834, -0.0005082983989268541, -0.13632330298423767, -0.10214371979236603, -0.061486370861530304, -1.3634912967681885, -1.0363165140151978, -0.011310388334095478, -0.09609992057085037, -1.2993727978027891e-05, -0.5516214370727539, -0.0006497179274447262, -1.89888596534729, -0.00880679301917553, -0.002765404526144266, -0.0004371640970930457, -0.3317751884460449, -6.258291978156194e-05, -5.722029527532868e-06, -0.024787835776805878, -0.00040713604539632797, -0.0257865060120821, -9.321732068201527e-05, -5.245195097813848e-06, -1.1801649634435307e-05, -4.8040190449682996e-05, -7.009260298218578e-05, -0.01307732705026865, -6.305972783593461e-05, -0.001127441762946546, -0.00034409802174195647, -9.440929716220126e-05, -0.845208466053009, -8.225102646974847e-05, -7.283422019099817e-05, -0.00011753345461329445, -1.3828182090946939e-05, -4.458328112377785e-05, -0.014193772338330746, -2.5033637939486653e-05, -2.7418097943154862e-06, -0.002211864572018385, -0.003953261766582727, -0.0021928329952061176, -0.005383518058806658, -0.11323630064725876, -0.011358831077814102, -0.09863364696502686, -0.004268345423042774], "finish_reason": "stop"}], "metrics": {"energy": 218.31294714546195, "energy_per_token": 1.1429997232746698, "time": 8.411171, "time_per_token": 0.0440375445026178}}
