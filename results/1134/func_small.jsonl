{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError('The source directory does not exist.')\n    target_dir_created = False\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n        target_dir_created = True\n\n    files_with_path = glob.glob(os.path.join(source_dir, '*'))\n    files_with_path = [os.path.relpath(path, source_dir) for path in files_with_path]\n    files = [\n        os.path.basename(path)\n        for path in files_with_path\n        if os.path.isfile(path)]\n    hashed_files = []\n\n    for file in files:\n        hash_value = hashlib.md5(file.encode()).hexdigest()\n        hashed_file_name = f'{file}.{hash_value}'\n        hashed_file_path = os.path.join(target_dir, hashed_file_name)\n        with open(hashed_", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " source", " directory", " does", " not", " exist", ".", "')", "\n", "    ", "target", "_", "dir", "_", "created", " =", " False", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "        ", "target", "_", "dir", "_", "created", " =", " True", "\n", "\n", "    ", "files", "_", "with", "_", "path", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", "\n", "    ", "files", "_", "with", "_", "path", " =", " [", "os", ".", "path", ".", "rel", "path", "(", "path", ",", " source", "_", "dir", ")", " for", " path", " in", " files", "_", "with", "_", "path", "]", "\n", "    ", "files", " =", " [", "\n", "        ", "os", ".", "path", ".", "bas", "ename", "(", "path", ")", "\n", "        ", "for", " path", " in", " files", "_", "with", "_", "path", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "path", ")]", "\n", "    ", "h", "ashed", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "(", "file", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "h", "ashed", "_", "file", "_", "name", " =", " f", "'{", "file", "}", ".", "{", "hash", "_", "value", "}'", "\n", "        ", "h", "ashed", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " has", "hed", "_", "file", "_", "name", ")", "\n", "        ", "with", " open", "(", "h", "ashed", "_"], "logprobs": [-0.6382533311843872, -0.04007655382156372, -0.019068384543061256, -1.549708758830093e-05, -0.0003387354372534901, -0.010833850130438805, -0.4438489079475403, -0.0003638797497842461, -0.012345799244940281, -0.00012933371181134135, -2.3007127310847864e-05, -0.0017972521018236876, -0.015117594972252846, -0.0008025524439290166, -0.02208741195499897, -0.0020461592357605696, -0.00010561384988250211, -5.447716102935374e-05, -2.2909789085388184, -1.5627330541610718, -0.2848903238773346, -0.052971966564655304, -0.14860104024410248, -0.00035529976594261825, -0.0028668041341006756, -0.5871133804321289, -0.022143730893731117, -0.0016129115829244256, -1.2323613166809082, -2.4040560722351074, -0.00967173371464014, -0.07672406733036041, -1.4325131177902222, -3.3317770957946777, -0.02932669408619404, -0.197567880153656, -0.0271486546844244, -0.06081365421414375, -0.30762022733688354, -0.024701660498976707, -0.004902129527181387, -3.790783375734463e-05, -0.00026306029758416116, -0.0020625763572752476, -0.11476264148950577, -0.0002774807217065245, -0.0008522216230630875, -5.960446742392378e-06, -1.156323378381785e-05, -0.011210666969418526, -0.01408305298537016, -0.0004259632551111281, -0.13639278709888458, -0.0005813338793814182, -0.35318684577941895, -4.255681051290594e-05, -0.0006578188622370362, -0.00013147920253686607, -0.0037330954801291227, -6.079655122448457e-06, -2.2411095415009186e-05, -0.07548742741346359, -0.008243818767368793, -0.027368366718292236, -0.0023010701406747103, -9.298280929215252e-06, -6.174850568640977e-05, -0.0007147617870941758, -0.00010895135346800089, -0.0014192519010975957, -0.0003909300430677831, -0.0010171722387894988, -1.1227455139160156, -0.0002520958660170436, -2.077280044555664, -1.1254963874816895, -3.015289306640625, -0.0003719830128829926, -3.9179625511169434, -0.05678900331258774, -0.4040050804615021, -5.6265202147187665e-05, -0.04638715460896492, -0.05958861857652664, -0.3983302414417267, -5.960446742392378e-06, -0.00030489088385365903, -0.001617077155970037, -0.001570064458064735, -0.002444852376356721, -0.009979828260838985, -5.245195097813848e-06, -1.0251946150674485e-05, -0.0010800487361848354, -0.05558721348643303, -0.5451555848121643, -0.24887369573116302, -0.014158395119011402, -0.1527959555387497, -1.843048095703125, -0.28475016355514526, -0.6809982657432556, -0.00012051333033014089, -0.17713318765163422, -0.5383355617523193, -0.6231166124343872, -1.4969385862350464, -0.00014077626110520214, -0.0009420248097740114, -0.0029309908859431744, -1.3912192583084106, -5.721882189391181e-05, -0.0040831537917256355, -1.6088550090789795, -0.3410166800022125, -0.1813821792602539, -0.00011669908417388797, -3.6954811548639555e-06, -0.005942889489233494, -0.03340011090040207, -0.0009470268851146102, -0.0010905277449637651, -0.0027349707670509815, -3.909988299710676e-05, -1.168244216387393e-05, -2.3841830625315197e-06, -4.887569048150908e-06, -0.12579815089702606, -0.026652446016669273, -0.4352821111679077, -1.1495003700256348, -2.171776533126831, -0.15324963629245758, -3.58656907081604, -0.004895960912108421, -0.7930135726928711, -3.611976353568025e-05, -0.002552467631176114, -0.00021944021864328533, -2.247951030731201, -1.1920922133867862e-06, -0.0032611305359750986, -0.32286521792411804, -0.026954656466841698, -0.6706461906433105, -0.0009783487766981125, -0.00824393704533577, -0.03832964971661568, -0.026190364733338356, -0.04655341058969498, -0.00012861855793744326, -4.815939246327616e-05, -7.986990567587782e-06, -2.9802276912960224e-06, -0.04324094206094742, -0.4024912714958191, -0.03951636329293251, -0.7403615713119507, -0.0001280225842492655, -0.0023993058130145073, -0.0018648391123861074, -0.0647362545132637, -0.0023347281385213137, -0.0002455409849062562, -0.11487381160259247, -2.8822667598724365, -0.02074286714196205, -0.674760639667511, -3.226590156555176, -0.06366536021232605, -0.07847797125577927, -0.12860673666000366, -0.0958629623055458, -0.3786332905292511, -0.002594678197056055, -1.3865606784820557, -0.00011324241495458409, -0.15556921064853668, -0.37984147667884827, -0.6195535063743591, -0.0034616803750395775, -0.0011388728162273765, -0.0010495636379346251, -0.011198288761079311, -1.7329670190811157, -0.359032541513443, -1.5747830867767334, -0.007808990776538849, -0.14319825172424316, -0.004333747550845146, -6.19869097135961e-05, -0.007061405573040247, -5.960462772236497e-07, -0.7762683033943176, -2.1289663314819336, -0.09668514877557755, -0.11138763278722763, -0.6756347417831421, -0.12278218567371368, -0.012839153409004211, -0.0002522150462027639, -0.000125281119835563, -0.0027781245298683643, -0.019582748413085938, -0.029448239132761955, -1.4826408624649048, -0.002892241580411792, -0.011216796934604645, -0.3411370515823364, -0.7867653369903564, -1.031996726989746, -0.0035932993050664663, -0.5791007280349731, -0.3464335501194, -2.6043548583984375, -0.5497158765792847, -0.18475517630577087, -0.7078589797019958, -0.2614859938621521, -0.0027583905030041933, -0.00010573305189609528, -0.11175868660211563, -0.020304914563894272, -0.04649651423096657, -0.5072001814842224, -0.0017719058087095618, -0.0021519139409065247, -0.3820154666900635, -0.14129026234149933, -0.04744476079940796, -0.0018052248051390052, -0.015555008314549923, -5.960462772236497e-07, -0.00010525626566959545, -0.0003695997002068907, -0.005678119137883186, -0.0002747396647464484, -0.014199061319231987, -4.6491513785440475e-06, -7.152555099310121e-07, -0.0010064542293548584, -0.05026937648653984, -6.318072337307967e-06, -7.486063259420916e-05, -3.349725011503324e-05, -0.00036090059438720345, -2.1457441107486375e-05, -0.0010409895330667496, -0.0009515525307506323, -0.1352202147245407, -0.8872854113578796, -0.0020680485758930445, -0.0017294225981459022, -0.5000527501106262, -5.149708886165172e-05, -3.6954811548639555e-06], "finish_reason": "length"}], "metrics": {"energy": 335.9998055419922, "energy_per_token": 1.312499240398407, "time": 12.394288, "time_per_token": 0.0484151875}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f'The source directory {source_dir} does not exist.')\n    paths = glob.glob(source_dir + '/*')\n    file_paths = []\n    for path in paths:\n        hash_object = hashlib.md5()\n        with open(path, 'rb') as f:\n            while True:\n                buf = f.read(4096)\n                if len(buf) == 0:\n                    break\n                hash_object.update(buf)\n        filename = path.split('/')[-1]\n        file_path = f'{target_dir}/{prefix}{filename}'\n        file_paths.append(file_path)\n        with open(file_path, 'w') as f:\n            f.write(hash_object.hexdigest())\n            f.write(open(path, 'r').read())\n    return file_paths", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "paths", " =", " glob", ".", "glob", "(", "source", "_", "dir", " +", " '", "/*", "')", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " path", " in", " paths", ":", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "while", " True", ":", "\n", "                ", "buf", " =", " f", ".", "read", "(", "4", "0", "9", "6", ")", "\n", "                ", "if", " len", "(", "buf", ")", " ==", " ", "0", ":", "\n", "                ", "    ", "break", "\n", "                ", "hash", "_", "object", ".", "update", "(", "buf", ")", "\n", "        ", "filename", " =", " path", ".", "split", "('/", "')", "[-", "1", "]", "\n", "        ", "file", "_", "path", " =", " f", "'{", "target", "_", "dir", "}/{", "prefix", "}{", "filename", "}'", "\n", "        ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "hash", "_", "object", ".", "hex", "dig", "est", "())", "\n", "            ", "f", ".", "write", "(", "open", "(", "path", ",", " '", "r", "')", ".", "read", "())", "\n", "    ", "return", " file", "_", "paths", "\n", "\n", "if"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -1.355796456336975, -1.46251380443573, -0.6152665019035339, -0.104814313352108, -0.4854607880115509, -0.001167807262390852, -0.00014256415306590497, -0.00014768941036891192, -0.04224824532866478, -0.09867393225431442, -0.0012319840025156736, -0.005467817187309265, -0.5940216779708862, -0.018190231174230576, -0.0012400802224874496, -1.1383543014526367, -3.5344502925872803, -0.08919103443622589, -0.5973094701766968, -5.23315102327615e-05, -0.028017356991767883, -0.01857762597501278, -2.389202117919922, -3.135155202471651e-05, -7.724463648628443e-05, -0.08517970144748688, -0.3207569718360901, -0.27273258566856384, -0.28667908906936646, -0.02461489662528038, -0.10462579876184464, -3.1865575313568115, -0.07903075218200684, -0.9490541219711304, -0.021028077229857445, -0.2353375405073166, -0.012158564291894436, -0.09360166639089584, -0.14294160902500153, -0.32806500792503357, -0.0056062848307192326, -0.014983256347477436, -0.0002829628065228462, -0.0037547105457633734, -0.003881303360685706, -3.048377513885498, -0.23621775209903717, -3.1864492893218994, -0.0016315970569849014, -0.0008362610242329538, -1.6331539882230572e-05, -1.7523612768854946e-05, -0.00232759234495461, -8.344646857949556e-07, -0.03892822563648224, -0.00706590386107564, -0.008454720489680767, -0.16103960573673248, -0.0008662762120366096, -0.0005906267906539142, -0.0034907853696495295, -0.014988893643021584, -0.07751855999231339, -0.009403461590409279, -0.007181189488619566, -0.00035482310340739787, -1.1109721660614014, -0.020432699471712112, -0.016590960323810577, -0.0010550415609031916, -1.724073886871338, -0.19659489393234253, -4.672895011026412e-05, -0.006527530960738659, -0.00039593485416844487, -2.7543888092041016, -0.012003568932414055, -0.001122321467846632, -8.583032467868179e-06, -0.000964414793998003, -0.05354410782456398, -1.1291167736053467, -0.01474001631140709, -0.0017898743972182274, -0.0005510718910954893, -0.004261460620909929, -0.03334718942642212, -0.002337344689294696, -0.014167915098369122, -1.7947176694869995, -5.125868119648658e-05, -8.4638240878121e-06, -0.00273556518368423, -0.030689582228660583, -7.223821739898995e-05, -0.00025018901214934886, -0.00100192881654948, -0.0072159855626523495, -4.136476854910143e-05, -0.0002441108226776123, -0.003930463455617428, -0.0015379278920590878, -0.0018837579991668463, -0.008213906548917294, -9.059495641849935e-05, -0.0007849234389141202, -2.396077979938127e-05, -0.00014256415306590497, -0.00012408917245920748, -0.0010382506297901273, -0.0003887851198669523, -0.002439382253214717, -0.39445760846138, -4.198836326599121, -0.07358253002166748, -1.361253023147583, -0.149865061044693, -0.19326746463775635, -0.16356220841407776, -0.0014961488777771592, -0.011262532323598862, -0.00037579628406092525, -0.001864363206550479, -0.04174758493900299, -0.005646351259201765, -1.561073899269104, -0.09098178893327713, -0.5619910359382629, -0.004534794948995113, -1.4595744609832764, -0.2514393925666809, -0.03424220532178879, -3.099436753473128e-06, -2.9802276912960224e-06, -0.020191248506307602, -0.36975350975990295, -0.06852298229932785, -0.5976906418800354, -0.15056949853897095, -0.021515533328056335, -0.0034155859611928463, -0.7931219935417175, -0.009904525242745876, -0.02352307364344597, -0.014062953181564808, -0.0007295330869965255, -0.0024852838832885027, -0.014914318919181824, -6.55629628454335e-05, -4.589452510117553e-05, -0.0006540066679008305, -0.0018555581336840987, -0.04994192346930504, -0.12281160056591034, -0.0004913791781291366, -0.0008099374244920909, -0.008613339625298977, -7.629365427419543e-06, -0.0006275591440498829, -0.001303419005125761, -0.011695627123117447, -0.4418295621871948, -0.15199725329875946, -0.0003936707798857242, -0.11834734678268433, -0.05736155062913895, -0.0007277462864294648, -0.0007624103454872966, -0.05301741510629654, -5.543078441405669e-05, -0.007530161179602146, -0.04337792843580246, -1.0421483516693115, -0.0006903410539962351, -0.0016648017335683107, -0.0001656871900195256, -0.03142017871141434, -2.2172682292875834e-05, -0.00021634146105498075, -0.7616358399391174, -0.026508154347538948, -0.2706911563873291, -0.06441418081521988, -0.00017486473370809108, -0.005967300850898027, -0.5986002683639526, -1.7421579360961914, -0.0001919085334520787, -0.0020102309063076973, -0.1774827241897583, -0.013647112064063549, -0.1478142887353897, -0.004418966360390186, -4.875540980719961e-05, -0.0004866131057497114, -0.02405284158885479, -0.005246323999017477, -0.10253467410802841, -0.032584767788648605, -0.015332217328250408, -1.2159273865108844e-05, -3.433168603805825e-05, -0.8533408045768738, -0.010827718302607536, -0.6095041632652283], "finish_reason": "stop"}], "metrics": {"energy": 245.71221630382536, "energy_per_token": 1.0872221960346256, "time": 9.666903, "time_per_token": 0.04277390707964602}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f'The source directory {source_dir} does not exist.')\n    target_dir = os.path.normpath(target_dir)\n    os.makedirs(target_dir, exist_ok=True)\n    md5s = []\n    for path in glob.glob(os.path.join(source_dir, '**/*', '*')):\n        if os.path.isdir(path):\n            continue\n        md5s.append(prefix + hashlib.md5(os.path.realpath(path).encode()).hexdigest())\n    return [os.path.join(target_dir, os.path.relpath(f, source_dir)) for f in md5s]", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "')", "\n", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "norm", "path", "(", "target", "_", "dir", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "md", "5", "s", " =", " []", "\n", "    ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "'", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "            ", "continue", "\n", "        ", "md", "5", "s", ".", "append", "(", "prefix", " +", " hash", "lib", ".", "md", "5", "(", "os", ".", "path", ".", "real", "path", "(", "path", ")", ".", "encode", "())", ".", "hex", "dig", "est", "())", "\n", "    ", "return", " [", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "rel", "path", "(", "f", ",", " source", "_", "dir", "))", " for", " f", " in", " md", "5", "s", "]"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -1.355796456336975, -1.46251380443573, -0.6152665019035339, -0.104814313352108, -0.4854607880115509, -0.001167807262390852, -0.00014256415306590497, -0.00014768941036891192, -0.04224824532866478, -0.09867393225431442, -0.0012319840025156736, -0.005467817187309265, -0.5940216779708862, -0.018190231174230576, -0.0012400802224874496, -1.1383543014526367, -2.0327908992767334, -0.008841650560498238, -0.0556829459965229, -0.2572757303714752, -0.13847436010837555, -0.0006890306831337512, -0.0012471048394218087, -0.031229548156261444, -2.8153398036956787, -0.008813764899969101, -0.004015954211354256, -0.07328023761510849, -3.194758028257638e-05, -2.7418097943154862e-06, -0.0030046815518289804, -0.07131940126419067, -0.03612205386161804, -1.0836552381515503, -6.854299135738984e-05, -0.011761958710849285, -5.686121585313231e-05, -0.00013684290752280504, -7.760223525110632e-05, -0.005227231420576572, -1.2636104656849056e-05, -1.07287787614041e-05, -0.003651144215837121, -0.010378438979387283, -3.576278118089249e-07, -2.7179348762729205e-05, -0.00047946401173248887, -0.0014134189113974571, -0.002986140549182892, -0.06820802390575409, -0.4414393901824951, -3.219547748565674, -0.004855864215642214, -2.070084810256958, -0.06777455657720566, -0.5466463565826416, -0.02579742670059204, -0.12513357400894165, -0.15036489069461823, -2.031165838241577, -0.08816708624362946, -0.12170679867267609, -5.495397272170521e-05, -0.28418293595314026, -0.010036006569862366, -0.388376384973526, -6.318072337307967e-06, -0.00022492263815365732, -0.002484213560819626, -0.0067262426018714905, -0.0011257746955379844, -0.010543830692768097, -1.0013530300057027e-05, -6.318072337307967e-06, -0.000521523819770664, -0.04015946760773659, -0.9582732915878296, -0.5332246422767639, -2.850813865661621, -0.017200112342834473, -0.009317603893578053, -0.016302840784192085, -0.4653002917766571, -0.0009394046501256526, -0.010796585120260715, -0.0026177444960922003, -1.910845398902893, -0.48603299260139465, -3.290122185717337e-05, -0.0020567469764500856, -0.0023545895237475634, -0.02350502461194992, -2.5513317584991455, -0.0001438752660760656, -0.0023750450927764177, -0.0515330508351326, -0.036183569580316544, -0.0003951007383875549, -0.06549019366502762, -0.03771980479359627, -0.007918750867247581, -1.2355716228485107, -0.002037355676293373, -1.0934362411499023, -0.03682192414999008, -0.02200322039425373, -0.08638331294059753, -2.1232361793518066, -0.04440770670771599, -0.13054512441158295, -0.0010637345258146524, -5.566918844124302e-05, -0.0015119798481464386, -3.576278118089249e-07, -0.013473176397383213, -3.420517921447754, -0.00029404606902971864, -0.017411593347787857, -0.0010706413304433227, -2.7700836658477783, -1.823885577323381e-05, -0.000486970558995381, -0.010757195763289928, -0.1827429085969925, -0.0014598437119275331, -0.028178350999951363, -0.4390306770801544, -0.0006600823253393173, -0.0025139416102319956, -8.49926145747304e-05, -0.0001230164198204875, -0.05932105332612991, -0.006014700047671795, -2.511882781982422, -1.807674765586853, -0.6876971125602722, -0.1807151585817337, -1.3351351299206726e-05, -0.0013543728273361921, -1.7046782886609435e-05, -0.037135664373636246, -0.0005924138822592795, -0.011329364962875843, -0.0007073761080391705, -1.2516897186287679e-05, -0.00040439533768221736, -0.9488117098808289, -0.00026246439665555954, -0.00034409802174195647, -0.0006292270263656974, -1.5380167961120605, -1.8358061424805783e-05, -0.002076494973152876, -2.678914785385132, -0.2000529021024704, -0.10091539472341537, -6.747018051100895e-05, -1.2040065485052764e-05, -0.15219414234161377, -0.10537182539701462, -0.0020328350365161896, -0.008582847192883492, -0.08749832957983017, -7.152531907195225e-06, -0.00025293012731708586, -0.2860208749771118], "finish_reason": "stop"}], "metrics": {"energy": 227.53936151504513, "energy_per_token": 1.21678802949222, "time": 8.821894, "time_per_token": 0.04717590374331551}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Error: The source directory {source_dir} does not exist.\")\n\n    # Check if target_dir exists, if not create it\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # List all files in the source directory\n    files = glob.glob(os.path.join(source_dir, '**/*.*'))\n\n    # Create a new list of paths for each hash-prepended file\n    paths = [\n        os.path.join(\n            target_dir,\n            os.path.relpath(os.path.normpath(file_name), start=source_dir).replace(os.sep, '_')\n        )\n        for file_name in files\n    ]\n\n    # Open each path in read mode, write the hash and the original content, and append the new content to a new file\n    for path, new_path in zip(paths, paths):\n        with open(path, 'r') as f:", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Error", ":", " The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " target", "_", "dir", " exists", ",", " if", " not", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", ".", "*", "'))", "\n", "\n", "    ", "#", " Create", " a", " new", " list", " of", " paths", " for", " each", " hash", "-", "pre", "p", "ended", " file", "\n", "    ", "paths", " =", " [", "\n", "        ", "os", ".", "path", ".", "join", "(", "\n", "            ", "target", "_", "dir", ",", "\n", "            ", "os", ".", "path", ".", "rel", "path", "(", "os", ".", "path", ".", "norm", "path", "(", "file", "_", "name", ")", ",", " start", "=", "source", "_", "dir", ")", ".", "replace", "(", "os", ".", "sep", ",", " '_", "')", "\n", "        ", ")", "\n", "        ", "for", " file", "_", "name", " in", " files", "\n", "    ", "]", "\n", "\n", "    ", "#", " Open", " each", " path", " in", " read", " mode", ",", " write", " the", " hash", " and", " the", " original", " content", ",", " and", " append", " the", " new", " content", " to", " a", " new", " file", "\n", "    ", "for", " path", ",", " new", "_", "path", " in", " zip", "(", "paths", ",", " paths", "):", "\n", "        ", "with", " open", "(", "path", ",", " '", "r", "')", " as", " f", ":"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -0.3625927269458771, -3.7716681957244873, -0.21231143176555634, -1.97044038772583, -0.26836079359054565, -0.06656984984874725, -1.0411443710327148, -0.000647692708298564, -0.00011634149996098131, -0.00018714107864070684, -0.015149532817304134, -0.08890052139759064, -0.000734178873244673, -0.0031832996755838394, -0.30197736620903015, -0.019830306991934776, -0.0003771070914808661, -0.003168564522638917, -0.17232507467269897, -0.00031680811662226915, -1.5143475532531738, -3.3306047916412354, -0.4150984287261963, -1.1090199947357178, -1.621891736984253, -0.002501455834135413, -0.42647862434387207, -1.0206935405731201, -0.41420987248420715, -0.08271093666553497, -0.7001721262931824, -0.08938030898571014, -0.2509525716304779, -0.0010592094622552395, -0.05747849866747856, -0.008340882137417793, -0.001763218897394836, -7.414542778860778e-05, -0.00011181206355104223, -0.000824230897706002, -0.048669882118701935, -0.0001209901092806831, -0.0020912461914122105, -3.4570634852570947e-06, -3.814689989667386e-06, -0.007350543048232794, -0.0019848900847136974, -0.0013013951247557998, -0.05525100976228714, -0.0011039836099371314, -0.079520583152771, -1.966933996300213e-05, -0.0002455409849062562, -0.00011050090688513592, -0.0011757849715650082, -7.510157047363464e-06, -4.887569048150908e-06, -0.04014984890818596, -0.0048933508805930614, -0.044209957122802734, -0.0009828743059188128, -0.7291133999824524, -2.5789380073547363, -0.3530760407447815, -0.29560890793800354, -0.1744823455810547, -0.5970402956008911, -0.03936692699790001, -0.15969300270080566, -0.3261997401714325, -0.00032848684350028634, -1.1043106317520142, -0.17166312038898468, -0.07841073721647263, -1.6093124941107817e-05, -0.00742284394800663, -0.0038163464050740004, -0.20251482725143433, -2.0861407392658293e-05, -1.847726889536716e-05, -0.0002783149539027363, -0.000205018965061754, -0.0002588890492916107, -0.0015804193681105971, -1.5020257706055418e-05, -2.50339189733495e-06, -0.0003026265767402947, -0.4120689928531647, -1.3774913549423218, -0.3952576816082001, -0.3998931050300598, -1.006684422492981, -0.20003406703472137, -0.006285422947257757, -0.08200512826442719, -0.00016449528629891574, -0.15098010003566742, -1.6263482570648193, -0.3310620188713074, -2.0366392135620117, -1.581216812133789, -1.3410028219223022, -1.2354884147644043, -1.8248703479766846, -2.7734265327453613, -3.003401041030884, -1.0907790660858154, -0.48620983958244324, -0.03266622871160507, -0.00033241944038309157, -0.052583422511816025, -0.3154565393924713, -0.0004067785630468279, -1.856980562210083, -0.04777723550796509, -2.5045197010040283, -3.0701677799224854, -0.0025738703552633524, -0.28654563426971436, -1.3589766240329482e-05, -4.2914423829643056e-05, -3.4450891689630225e-05, -0.0212218277156353, -0.000846147071570158, -2.965061664581299, -0.005979625042527914, -0.008039969019591808, -3.540453326422721e-05, -1.1801649634435307e-05, -0.00121007626876235, -0.2169707715511322, -0.0006718761869706213, -0.9900895357131958, -0.0006526962388306856, -0.00016366096679121256, -0.005954503081738949, -1.2198587656021118, -5.638440416078083e-05, -0.0038661037106066942, -2.242575168609619, -0.0007742029847577214, -0.00020203932945150882, -0.004431190434843302, -2.217088460922241, -0.010881018824875355, -0.0044165924191474915, -1.1102863550186157, -1.0230448246002197, -2.6100070476531982, -0.1191585585474968, -0.038322191685438156, -1.204532265663147, -0.003578570205718279, -0.3082301914691925, -3.6477376852417365e-05, -1.8596476365928538e-05, -0.07489287108182907, -0.9945352077484131, -0.03261927142739296, -0.6370219588279724, -0.17904184758663177, -1.0847986231965479e-05, -0.6648586392402649, -0.0007121411035768688, -0.291886568069458, -0.008346556685864925, -0.8164131045341492, -0.11194490641355515, -0.003024886129423976, -0.445895791053772, -0.013523630797863007, -0.014296605251729488, -0.004075674340128899, -0.00025042734341695905, -0.0012454380048438907, -0.023771287873387337, -0.008086678571999073, -0.028283579275012016, -0.0362430065870285, -0.00021884430316276848, -0.0029123295098543167, -0.048326797783374786, -0.0003798478574026376, -0.41594618558883667, -1.688524603843689, -0.559847354888916, -2.8778023719787598, -1.0390241146087646, -1.3748538494110107, -0.4487529397010803, -1.2134943008422852, -4.38677453994751, -0.4900621473789215, -1.5915660858154297, -2.438978672027588, -0.952954888343811, -0.770354688167572, -0.1962404102087021, -1.598590612411499, -0.47742941975593567, -3.074195623397827, -0.6138895750045776, -1.4259172677993774, -0.933303952217102, -0.16533717513084412, -2.3190948963165283, -0.6210887432098389, -0.0815456286072731, -0.18615832924842834, -0.003331945277750492, -0.303975909948349, -0.3663208484649658, -0.15978017449378967, -0.624927818775177, -0.002074948512017727, -0.3748365640640259, -0.008708711713552475, -0.006146220024675131, -0.000993711524643004, -0.10009139776229858, -0.0004068977141287178, -0.168057382106781, -1.7306121587753296, -0.011895199306309223, -0.015342664904892445, -0.27396950125694275, -0.013729188591241837, -0.00037281715776771307, -0.050886910408735275, -0.01992473192512989, -0.1370384842157364, -0.31115129590034485, -0.2678406238555908, -0.00028165188268758357, -1.391679048538208, -0.18222305178642273], "finish_reason": "length"}], "metrics": {"energy": 272.4523701562882, "energy_per_token": 1.0642670709230009, "time": 11.134243, "time_per_token": 0.04349313671875}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f'The source directory does not exist: {source_dir}')\n    try:\n        os.mkdir(target_dir)\n    except FileExistsError:\n        pass\n    if os.listdir(target_dir) != []:\n        os.rmdir(target_dir)\n    os.mkdir(target_dir)\n\n    md5_hashes = []\n\n    # The glob.glob method will return a list of all files in the source directory whose name matches\n    # the specified pattern. This pattern can be used to match files by name, or by name with extensions.\n    files = glob.glob(os.path.join(source_dir, '*'))\n\n    # For each file in the list, compute its MD5 hash\n    for file in files:\n        hash_value = hashlib.md5()\n        with open(file, 'rb') as f:\n            for chunk in iter(lambda: f.read(4096), b''):\n                hash_value.update(chunk", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " source", " directory", " does", " not", " exist", ":", " {", "source", "_", "dir", "}", "')", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "    ", "except", " File", "Exists", "Error", ":", "\n", "        ", "pass", "\n", "    ", "if", " os", ".", "list", "dir", "(", "target", "_", "dir", ")", " ", "!", "=", " []", ":", "\n", "        ", "os", ".", "rm", "dir", "(", "target", "_", "dir", ")", "\n", "    ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "md", "5", "_", "has", "hes", " =", " []", "\n", "\n", "    ", "#", " The", " glob", ".", "glob", " method", " will", " return", " a", " list", " of", " all", " files", " in", " the", " source", " directory", " whose", " name", " matches", "\n", "    ", "#", " the", " specified", " pattern", ".", " This", " pattern", " can", " be", " used", " to", " match", " files", " by", " name", ",", " or", " by", " name", " with", " extensions", ".", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " For", " each", " file", " in", " the", " list", ",", " compute", " its", " MD", "5", " hash", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "hash", "_", "value", ".", "update", "(", "chunk"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -1.355796456336975, -1.46251380443573, -0.6152665019035339, -0.104814313352108, -2.1090149879455566, -0.001095529063604772, -0.004503228235989809, -0.08759989589452744, -0.04403144493699074, -0.00502774678170681, -0.00010716341057559475, -0.0001387499796692282, -0.02206280827522278, -0.0595192089676857, -0.0014925779541954398, -1.2752139568328857, -4.247854232788086, -0.0006494796834886074, -0.00441350694745779, -0.0017592919757589698, -0.1133425235748291, -3.8980677345534787e-05, -1.891809105873108, -2.7894584491150454e-05, -0.005427980329841375, -0.005839431192725897, -3.2305197237292305e-05, -3.611976353568025e-05, -0.02872905693948269, -0.02695813775062561, -0.013124742545187473, -0.0017431078013032675, -0.10503403097391129, -0.019180189818143845, -4.7444173105759546e-05, -0.01673153042793274, -0.06340011209249496, -0.0005999195855110884, -0.07216832786798477, -0.021413207054138184, -0.351085901260376, -3.8358263969421387, -2.9010510444641113, -0.00026306029758416116, -1.7006865739822388, -5.8053239627042785e-05, -0.006638260092586279, -0.18402612209320068, -1.6212332411669195e-05, -5.960446742392378e-06, -1.5518903732299805, -0.6709398627281189, -2.098061486321967e-05, -3.266281055402942e-05, -0.04404217004776001, -0.016704801470041275, -0.02328050322830677, -0.0016676579834893346, -1.5076136589050293, -0.0009084388730116189, -0.41641274094581604, -0.0010701649589464068, -0.0017132379580289125, -0.0008475763606838882, -2.253030106658116e-05, -9.894321920000948e-06, -0.0002896366349887103, -0.05954403057694435, -0.7679378986358643, -1.1242090463638306, -0.0006473353132605553, -0.7558876872062683, -0.00011932138295378536, -0.00038425691309385, -0.0010644490830600262, -2.0503786799963564e-05, -5.245195097813848e-06, -0.0011044599814340472, -0.013446477241814137, -1.6757934093475342, -0.00039986721822060645, -3.284611463546753, -0.007521169260144234, -0.26177287101745605, -1.1574119329452515, -0.06602765619754791, -0.03730817511677742, -0.42313095927238464, -0.015192506834864616, -1.7606641054153442, -0.0001510267611593008, -3.0154635906219482, -4.627636909484863, -2.3374571800231934, -1.9173694849014282, -0.05260683223605156, -2.6658151149749756, -2.698768138885498, -1.0542693138122559, -0.7228951454162598, -0.03154458850622177, -0.043490130454301834, -1.5007911920547485, -1.170586347579956, -0.9434942603111267, -0.24752508103847504, -0.46021515130996704, -0.2880612015724182, -2.466355800628662, -0.7509419918060303, -0.51694655418396, -3.2355241775512695, -0.0007015389273874462, -0.0718812569975853, -0.4021892845630646, -1.7222871780395508, -0.29451078176498413, -0.7146453261375427, -2.642162799835205, -1.0944132804870605, -0.5565516948699951, -0.3577554225921631, -3.2116541862487793, -0.11523623764514923, -0.7775697708129883, -1.1048738956451416, -2.4526283740997314, -1.3516488075256348, -0.4400343894958496, -1.4695515632629395, -0.7180222272872925, -1.8540267944335938, -1.4792107343673706, -2.3613855838775635, -1.1415117979049683, -0.017667653039097786, -0.010867811739444733, -2.716381549835205, -0.3176816403865814, -0.06500371545553207, -1.6331539882230572e-05, -0.004435819108039141, -0.013189215213060379, -0.6298233866691589, -9.775113539944869e-06, -0.00017820201173890382, -0.0005665604257956147, -0.0024219010956585407, -0.00219818577170372, -0.0034911418333649635, -1.0013530300057027e-05, -1.5258672647178173e-05, -0.000865680689457804, -0.10625516623258591, -0.4546752870082855, -0.13102364540100098, -0.02085074968636036, -0.5685775279998779, -0.0004337085410952568, -0.8001430034637451, -2.434030294418335, -0.06029302626848221, -0.05398784950375557, -0.564335823059082, -0.034837476909160614, -0.5989653468132019, -0.3973296880722046, -1.7445122003555298, -0.21791167557239532, -0.11757607012987137, -3.0278701160568744e-05, -0.03254253789782524, -3.717078685760498, -0.004742445424199104, -0.0632510632276535, -0.3740386664867401, -0.37063539028167725, -0.0018835199298337102, -0.0002498314715921879, -0.001405086019076407, -0.01893714815378189, -3.2593395709991455, -0.22002407908439636, -1.7896867990493774, -0.003516206983476877, -0.09007243067026138, -0.0007404923089779913, -2.2649508537142538e-05, -0.0012541294563561678, -3.576278118089249e-07, -0.20736002922058105, -0.020354675129055977, -0.07844435423612595, -0.16168296337127686, -0.0002847504511009902, -0.000270091783022508, -0.0027821664698421955, -0.006607470102608204, -0.07224196940660477, -0.005076494999229908, -0.003935925662517548, -0.0004161922261118889, -0.17866124212741852, -0.037092361599206924, -0.01881747879087925, -0.0029740172903984785, -1.2443877458572388, -0.1733178347349167, -0.0017263285117223859, -0.004474508576095104, -8.05822346592322e-05, -0.03253307566046715, -0.002441522665321827, -0.002524167764931917, -6.198863957251888e-06, -0.0024840945843607187, -0.00229904823936522, -0.3358367085456848, -0.003051032545045018, -0.0008037435472942889, -0.0004323977918829769, -0.00910853873938322, -0.00015925093612167984, -0.0039177583530545235, -0.14137016236782074, -0.00014101465058047324, -0.03335191681981087, -0.0006802152493037283, -0.0136573426425457, -0.00016199229867197573, -0.00016258825780823827, -5.709961988031864e-05, -0.0001333863037871197, -7.70062324590981e-05, -0.0004642124113161117], "finish_reason": "length"}], "metrics": {"energy": 297.58382354354836, "energy_per_token": 1.1624368107169858, "time": 11.3548155, "time_per_token": 0.044354748046875}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f'Source directory {source_dir} not found.')\n\n    source_files = glob.glob(os.path.join(source_dir, '*.txt'))\n    new_files = []\n\n    for source_file in source_files:\n        md5 = hashlib.md5()\n        with open(source_file, 'rb') as f:\n            md5.update(f.read())\n            md5 = md5.hexdigest()\n        hash_prefix = f'{prefix}{md5}'\n        target_file = os.path.join(target_dir, os.path.basename(source_file))\n        with open(target_file, 'w') as f:\n            f.write(hash_prefix + '\\n')\n            f.write(open(source_file, 'r').read())\n        new_files.append(target_file)\n\n    return new_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " {", "source", "_", "dir", "}", " not", " found", ".", "')", "\n", "\n", "    ", "source", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", ".", "txt", "'))", "\n", "    ", "new", "_", "files", " =", " []", "\n", "\n", "    ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "        ", "md", "5", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "source", "_", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "md", "5", ".", "update", "(", "f", ".", "read", "())", "\n", "            ", "md", "5", " =", " md", "5", ".", "hex", "dig", "est", "()", "\n", "        ", "hash", "_", "prefix", " =", " f", "'{", "prefix", "}{", "md", "5", "}'", "\n", "        ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "source", "_", "file", "))", "\n", "        ", "with", " open", "(", "target", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "hash", "_", "prefix", " +", " '\\", "n", "')", "\n", "            ", "f", ".", "write", "(", "open", "(", "source", "_", "file", ",", " '", "r", "')", ".", "read", "())", "\n", "        ", "new", "_", "files", ".", "append", "(", "target", "_", "file", ")", "\n", "\n", "    ", "return", " new", "_", "files", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -1.3358039855957031, -0.9035071730613708, -0.12219357490539551, -0.3814002275466919, -0.0006213641609065235, -9.989239333663136e-05, -0.00016699827392585576, -0.0378137044608593, -0.9852422475814819, -0.005320792552083731, -0.7403329610824585, -0.0149863101541996, -0.0012749646557494998, -0.35675230622291565, -0.0003010773507412523, -3.4129254817962646, -0.008893049322068691, -0.5452513098716736, -0.022402312606573105, -0.13124781847000122, -3.540453326422721e-05, -0.02671477571129799, -0.010781725868582726, -0.2252216339111328, -0.00015948931104503572, -6.663577369181439e-05, -0.002961418591439724, -0.0007418026216328144, -0.0008987916517071426, -0.0024441389832645655, -1.3828182090946939e-05, -4.768360213347478e-06, -0.00035577642847783864, -0.0313958041369915, -0.5380064249038696, -1.4163093566894531, -0.2723180949687958, -0.004211367107927799, -0.009592865593731403, -0.3968508541584015, -3.2123265266418457, -0.012009340338408947, -0.7252956628799438, -0.07069181650876999, -0.03107909858226776, -0.0062592425383627415, -0.3265354633331299, -7.414542778860778e-05, -0.07433237880468369, -0.5953803658485413, -0.03254207596182823, -0.02408391423523426, -0.0158547256141901, -0.008191914297640324, -2.9802276912960224e-06, -2.825220326485578e-05, -4.970903682988137e-05, -0.00112160702701658, -0.0061449166387319565, -2.371101140975952, -0.001086359960027039, -1.0484294891357422, -0.014254767447710037, -0.00021455370006151497, -2.13382354559144e-05, -0.0018122454639524221, -9.536738616588991e-07, -0.023611795157194138, -0.014041442424058914, -0.10386545956134796, -0.09053532779216766, -0.0003073934931308031, -0.00011646069469861686, -0.00039450492477044463, -5.8412379075889476e-06, -5.519237674889155e-05, -0.02699190378189087, -0.02213836833834648, -0.007233974989503622, -0.0038224030286073685, -7.354942499659956e-05, -0.3335760235786438, -0.020018797367811203, -0.004690240137279034, -0.0012627016985788941, -0.7376503348350525, -1.811964830267243e-05, -0.0020309314131736755, -9.369411418447271e-05, -0.0024706574622541666, -0.007227347232401371, -0.00012730741582345217, -5.006664650863968e-05, -0.003084665397182107, -0.013214744627475739, -2.732910394668579, -0.7700125575065613, -0.00012039413559250534, -1.505626916885376, -0.01799928769469261, -3.099436753473128e-06, -8.284702198579907e-05, -0.04145633056759834, -6.031808152329177e-05, -0.00015901254664640874, -0.0006549597019329667, -0.028838861733675003, -2.4074368476867676, -2.273181915283203, -0.07971752434968948, -1.8485910892486572, -0.007578550837934017, -0.7774584293365479, -0.187697172164917, -0.018478509038686752, -0.11883808672428131, -0.0031058192253112793, -6.9141146923357155e-06, -0.13758517801761627, -0.04339253902435303, -0.16534112393856049, -0.9653031229972839, -0.013125213794410229, -0.07343477755784988, -0.03614884614944458, -0.13489995896816254, -1.9073468138230965e-06, -9.095255518332124e-05, -0.0014828173443675041, -0.006136386189609766, -0.0003259842633269727, -0.012410322204232216, -1.2636104656849056e-05, -4.0531076592742465e-06, -0.00014482879487331957, -0.26206955313682556, -0.0005202132160775363, -9.786603914108127e-05, -0.0025039531756192446, -0.05858549475669861, -3.576278118089249e-07, -3.576214658096433e-05, -0.004584990907460451, -2.0146166207268834e-05, -0.00021753329201601446, -0.024158505722880363, -0.008573509752750397, -0.03786788135766983, -0.610332190990448, -0.0004457433824427426, -0.000506511190906167, -0.3239035904407501, -6.079655122448457e-06, -0.00020597243565134704, -0.0004727914638351649, -0.002574108075350523, -0.1176215335726738, -0.07772880047559738, -5.900685573578812e-05, -0.08197470754384995, -0.02229156717658043, -0.0012013844680041075, -0.0005206898204050958, -0.024329429492354393, -2.729855441430118e-05, -0.007161068730056286, -0.007170655764639378, -1.1987448930740356, -8.999896090244874e-05, -9.524368942948058e-05, -0.48864707350730896, -1.241109848022461, -0.005681911949068308, -0.06793373078107834, -0.010414421558380127, -0.08520662784576416, -0.19634905457496643, -4.172238186583854e-05, -0.029125824570655823, -0.01244458369910717, -0.19044718146324158, -7.986703712958843e-05, -0.0004888770054094493, -1.7881233361549675e-05, -5.590759246842936e-05, -0.14103396236896515, -0.004246147815138102, -0.07536770403385162, -0.006383031141012907, -4.3748852476710454e-05, -0.0002516191452741623, -0.028587615117430687, -0.004713851492851973, -0.13879886269569397, -0.017292091622948647, -5.960446742392378e-06, -0.0009172523277811706, -0.0015040049329400063, -9.333651541965082e-05, -0.0006294653285294771, -0.013783746398985386, -1.9430925021879375e-05, -3.528532761265524e-05, -0.0003275334893260151, -0.0014265133067965508, -0.24991552531719208, -0.001320443581789732, -0.025607233867049217, -0.0036317838821560144, -5.2927523938706145e-05, -2.7656173188006505e-05, -0.7299079895019531, -1.1920928244535389e-07, -1.9073468138230965e-06, -5.304672595229931e-05, -0.00029416524921543896, -2.254502534866333, -0.003014427376911044], "finish_reason": "stop"}], "metrics": {"energy": 255.748484087944, "energy_per_token": 1.0745734625543866, "time": 10.275923, "time_per_token": 0.043176147058823534}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"The source directory {source_dir} does not exist.\")\n\n    files_list = glob.glob(source_dir + '/**/*.txt', recursive=True)\n    if not files_list:\n        raise FileNotFoundError(f\"No files found in the source directory {source_dir}.\")\n\n    for file_path in files_list:\n        try:\n            with open(file_path, 'r', encoding='utf-8') as f:\n                content = f.read()\n        except UnicodeDecodeError:\n            # Ignore files that cannot be read due to invalid encoding\n            continue\n        # Convert the file's content to a string\n        hash_object = hashlib.md5()\n        hash_object.update(content.encode('utf-8'))\n        hashed_content = f\"{prefix}{hash_object.hexdigest()}\\n{content}\"\n        hashed_file_path = os.path.join(target_dir, os.path.basename(", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", "_", "list", " =", " glob", ".", "glob", "(", "source", "_", "dir", " +", " '", "/**", "/*", ".", "txt", "'", ",", " recursive", "=", "True", ")", "\n", "    ", "if", " not", " files", "_", "list", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "No", " files", " found", " in", " the", " source", " directory", " {", "source", "_", "dir", "}", ".", "\"", ")", "\n", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "list", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "content", " =", " f", ".", "read", "()", "\n", "        ", "except", " Un", "icode", "Dec", "ode", "Error", ":", "\n", "            ", "#", " Ign", "ore", " files", " that", " cannot", " be", " read", " due", " to", " invalid", " encoding", "\n", "            ", "continue", "\n", "        ", "#", " Convert", " the", " file", "'", "s", " content", " to", " a", " string", "\n", "        ", "hash", "_", "object", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "hash", "_", "object", ".", "update", "(", "content", ".", "encode", "('", "utf", "-", "8", "'))", "\n", "        ", "has", "hed", "_", "content", " =", " f", "\"", "{", "prefix", "}{", "hash", "_", "object", ".", "hex", "dig", "est", "()", "}\\", "n", "{", "content", "}\"", "\n", "        ", "h", "ashed", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "("], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -0.3625927269458771, -1.8086745738983154, -0.40354016423225403, -0.06583870947360992, -0.8161434531211853, -0.0007950482540763915, -0.00013886917440686375, -0.00015627116954419762, -0.024357235059142113, -0.0750490352511406, -0.0006815256201662123, -0.004442821256816387, -0.29868748784065247, -0.014143467880785465, -0.00021240839851088822, -0.0026419993955641985, -0.1844262033700943, -0.00026353701832704246, -2.196650505065918, -1.4482648372650146, -1.744075894355774, -0.010953300632536411, -0.4421142041683197, -4.851700214203447e-05, -0.014856535010039806, -0.006660759914666414, -2.479246139526367, -2.4676019165781327e-05, -6.0794889577664435e-05, -0.04803097993135452, -0.6658796072006226, -1.6341503858566284, -0.2480373978614807, -0.5502619743347168, -0.6908490657806396, -0.0701402947306633, -0.0003695997002068907, -0.0034242586698383093, -0.0028600285295397043, -0.003548042383044958, -0.0004991239402443171, -0.027911752462387085, -0.44102784991264343, -3.636540651321411, -0.39469146728515625, -0.22310186922550201, -0.00016473367577418685, -1.2516897186287679e-05, -0.005829712841659784, -0.019617116078734398, -0.0004621868138201535, -0.5946424007415771, -0.45136892795562744, -0.003919658251106739, -4.3987260141875595e-05, -0.024372825399041176, -0.2029748260974884, -0.012201902456581593, -0.24833343923091888, -0.2660703659057617, -0.1708788424730301, -0.02190537564456463, -0.570376455783844, -0.17769992351531982, -0.012661545537412167, -0.03704376891255379, -0.0014787701657041907, -0.00014590153296012431, -0.00019596086349338293, -0.09438969939947128, -0.015521558001637459, -0.006404944229871035, -0.0002516191452741623, -0.000785161682870239, -0.03182950243353844, -0.0002040654799202457, -2.120756149291992, -0.44502830505371094, -0.5949059724807739, -0.14851051568984985, -0.0017020514933392406, -0.005256166215986013, -7.92710343375802e-05, -8.4638240878121e-06, -0.00040642108069732785, -0.00472298776730895, -0.02093515731394291, -3.4779272079467773, -8.320462075062096e-05, -0.002688367385417223, -0.001716570113785565, -0.41541433334350586, -0.0008360228384844959, -0.00012492353562265635, -0.0014067525044083595, -0.0002762889489531517, -2.7894584491150454e-05, -0.04121212288737297, -0.10325399041175842, -0.2739005386829376, -1.4617271423339844, -0.0002755738969426602, -0.035507068037986755, -0.05485748127102852, -0.051619771867990494, -0.09800189733505249, -0.0024371228646486998, -0.024929584935307503, -0.00025507534155622125, -1.4908925294876099, -0.040318746119737625, -0.005075664725154638, -0.0011836434714496136, -0.7089431285858154, -0.005618257448077202, -0.04195473715662956, -7.092700980138034e-05, -3.433168603805825e-05, -0.01375211775302887, -0.03155995160341263, -0.9500691294670105, -0.001117082079872489, -0.360671728849411, -8.177422569133341e-05, -0.03844241797924042, -0.018420228734612465, -6.69933797325939e-05, -0.1438344120979309, -0.05341506004333496, -0.0005951540661044419, -2.5419421195983887, -3.2629380226135254, -0.052706241607666016, -0.26900866627693176, -0.5528818964958191, -0.42391279339790344, -0.0003507714136503637, -1.2582850456237793, -1.7068854570388794, -0.0003387354372534901, -2.574174404144287, -0.15970438718795776, -0.4806865453720093, -0.00024959311122074723, -0.12070125341415405, -0.0018952994141727686, -0.8292422890663147, -3.4133801460266113, -4.341970443725586, -0.6699498891830444, -1.807017207145691, -2.4106128215789795, -0.0002882065309677273, -0.19722196459770203, -0.13274599611759186, -0.623443067073822, -0.7224677205085754, -0.9425745606422424, -0.02018973045051098, -2.0523738861083984, -0.05353404954075813, -2.524449348449707, -0.0010773098329082131, -0.0009177286992780864, -9.059865078597795e-06, -4.887569048150908e-06, -0.0032949938904494047, -1.1920928244535389e-07, -0.6160359382629395, -0.013910486362874508, -0.0034514637663960457, -0.07190743833780289, -0.0001497156627010554, -0.003424139926210046, -7.092700980138034e-05, -3.9219088648678735e-05, -0.004108679015189409, -0.006240169517695904, -0.02318546362221241, -0.002934794407337904, -0.46817299723625183, -0.010288652963936329, -0.004658204037696123, -8.606540359323844e-05, -0.0015942256432026625, -0.0365280844271183, -0.00742828706279397, -3.5584816932678223, -0.47835978865623474, -0.023586878553032875, -0.13465763628482819, -0.00285836448892951, -1.0234358310699463, -0.14444220066070557, -0.001844849088229239, -0.013437538407742977, -0.03916874900460243, -0.013330617919564247, -0.0012698451755568385, -0.0003522014303598553, -0.00044955636258237064, -0.003683569375425577, -1.4781842764932662e-05, -5.590759246842936e-05, -0.03209251910448074, -0.508861243724823, -0.013852409087121487, -0.4612554609775543, -0.007063418161123991, -0.09725304692983627, -0.009604082442820072, -0.3709598779678345, -2.762172222137451, -0.0032922611571848392, -0.00040951924165710807, -0.24220585823059082, -0.171429842710495, -0.10044941306114197, -0.00070296844933182, -0.12173286825418472, -1.311301275563892e-06, -0.00011693747364915907, -0.0027717051561921835, -0.002771942876279354, -0.00046885941992513835, -0.0073835584335029125, -1.9073468138230965e-06, -1.7881377516459906e-06, -0.000248043768806383, -0.13442453742027283, -0.00023541064001619816, -5.638440416078083e-05, -0.0007986216805875301, -0.03884303197264671, -1.1920928244535389e-07, -1.597391747054644e-05], "finish_reason": "length"}], "metrics": {"energy": 280.5810626983643, "energy_per_token": 1.0960197761654855, "time": 11.5597315, "time_per_token": 0.045155201171875}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Source directory '{source_dir}' not found.\")\n\n    for filename in glob.glob(os.path.join(source_dir, \"*.txt\")):\n        with open(filename, \"r\") as file:\n            original_content = file.read()\n            md5_hash = hashlib.md5(original_content.encode('utf-8')).hexdigest()\n            new_content = f\"{prefix}{md5_hash}\\n{original_content}\"\n            new_path = os.path.join(target_dir, os.path.basename(filename))\n            with open(new_path, \"w\") as file:\n                file.write(new_content)\n\n    return [new_path for new_path in glob.glob(os.path.join(target_dir, \"*.txt\"))]", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "source", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " \"", "*", ".", "txt", "\"", "))", ":", "\n", "        ", "with", " open", "(", "filename", ",", " \"", "r", "\"", ")", " as", " file", ":", "\n", "            ", "original", "_", "content", " =", " file", ".", "read", "()", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "original", "_", "content", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "            ", "new", "_", "content", " =", " f", "\"", "{", "prefix", "}{", "md", "5", "_", "hash", "}\\", "n", "{", "original", "_", "content", "}\"", "\n", "            ", "new", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "filename", "))", "\n", "            ", "with", " open", "(", "new", "_", "path", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "                ", "file", ".", "write", "(", "new", "_", "content", ")", "\n", "\n", "    ", "return", " [", "new", "_", "path", " for", " new", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " \"", "*", ".", "txt", "\"", "))", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -0.3625927269458771, -0.9807593822479248, -0.07286858558654785, -1.0205495357513428, -0.0003277718205936253, -0.0008143446175381541, -6.365573790390044e-05, -0.00016366096679121256, -0.0019161213422194123, -1.1806132793426514, -0.0022191202733665705, -0.3931403160095215, -0.01468562800437212, -0.00014959646796341985, -0.0029974314384162426, -0.17094726860523224, -0.00024482590379193425, -3.8296704292297363, -0.9548158049583435, -0.004492072854191065, -0.12468685209751129, -2.0146166207268834e-05, -0.15494845807552338, -0.004051335621625185, -0.20001336932182312, -0.00026663561584427953, -4.9470632802695036e-05, -0.0015892268856987357, -0.0003305127320345491, -0.0007990981102921069, -0.002543668495491147, -1.7762025890988298e-05, -1.1444026313256472e-05, -0.0005030558677390218, -1.4381325244903564, -0.33038297295570374, -1.1534993648529053, -0.19186116755008698, -0.0013435394503176212, -0.0037054228596389294, -0.00033885458833537996, -0.012159978039562702, -0.018016381189227104, -0.5362270474433899, -0.0006348263123072684, -0.00021646064124070108, -0.0040174974128603935, -0.09182365238666534, -0.33788827061653137, -0.6689304709434509, -0.03781852498650551, -0.12097613513469696, -8.689979586051777e-05, -0.7621089816093445, -0.03864085301756859, -0.006124893669039011, -0.0017225203337147832, -2.8866639137268066, -0.02439620904624462, -0.09811408072710037, -0.0023356794845312834, -0.004168512299656868, -4.136476854910143e-05, -3.302042750874534e-05, -0.005135440267622471, -0.027957890182733536, -0.5676466226577759, -1.374392032623291, -0.0007476395112462342, -0.3374370038509369, -0.042407192289829254, -0.006662891246378422, -0.003300340613350272, -7.83174327807501e-05, -1.0490362910786644e-05, -0.0008672290714457631, -2.3841855067985307e-07, -0.04397178441286087, -0.003724663285538554, -6.6756979322235566e-06, -2.002696055569686e-05, -0.002213291823863983, -0.0004744596080854535, -1.3939626216888428, -0.020493432879447937, -0.005216321442276239, -9.691245941212401e-05, -0.0003303935518488288, -0.007277053315192461, -0.010411118157207966, -3.2543604902457446e-05, -0.00042906138696707785, -0.0011251792311668396, -0.01774190552532673, -0.07540661841630936, -0.7158568501472473, -0.001095052808523178, -1.4640475511550903, -0.002337344689294696, -0.26218411326408386, -0.019054817035794258, -0.0003912875254172832, -0.04295206442475319, -0.054155558347702026, -0.004170174244791269, -1.5497195136049413e-06, -1.7046782886609435e-05, -2.0265373677830212e-05, -0.27090585231781006, -0.008791668340563774, -0.08259064704179764, -0.0026695826090872288, -1.9907753085135482e-05, -1.7762025890988298e-05, -0.02707068808376789, -0.002773845102638006, -0.37715601921081543, -0.6603622436523438, -0.0006902219611220062, -2.069911003112793, -0.0015022194711491466, -0.041724372655153275, -3.933898824470816e-06, -1.9192511899746023e-05, -0.0008054111385717988, -0.001291751628741622, -0.0001586549769854173, -0.006197638344019651, -3.814689989667386e-06, -2.3841830625315197e-06, -0.00012516192509792745, -0.19634385406970978, -0.00035255891270935535, -3.4927710657939315e-05, -0.0012484145117923617, -0.013838770799338818, -3.576278118089249e-07, -1.3351351299206726e-05, -0.0012275787303224206, -0.017940977588295937, -0.00528972502797842, -0.026797642931342125, -0.05600807070732117, -0.0005073452484793961, -5.495397272170521e-05, -0.000824230897706002, -3.2186455882765586e-06, -8.821448318485636e-06, -0.00015031162183731794, -0.04841754958033562, -0.0010349161457270384, -0.005852704867720604, -0.004400807432830334, -2.8490614567999728e-05, -1.2891639471054077, -0.0073073492385447025, -0.0001382732152706012, -0.0005029367166571319, -0.004558884538710117, -1.0013530300057027e-05, -0.0013719918206334114, -1.8715683836489916e-05, -0.0010147904977202415, -2.3841855067985307e-07, -0.00025078488397412, -0.10952796041965485, -0.015422254800796509, -0.3315548598766327, -0.08447278290987015, -0.04976091906428337, -0.2916381359100342, -1.4152345657348633, -0.000516757951118052, -0.0013978243805468082, -0.07189745455980301, -0.07200305908918381, -0.00013851160474587232, -0.00019691436318680644, -0.0015985103091225028, -0.07900948822498322, -2.8132995794294402e-05, -0.0013981815427541733, -0.00022551853908225894, -0.043497320264577866, -0.00037496211007237434, -1.5497195136049413e-06, -0.00015817821258679032, -6.23445157543756e-05, -0.00016664070426486433, -0.005860289558768272, -2.264974000354414e-06, -9.059865078597795e-06, -0.00020215852418914437, -0.015595500357449055, -0.007712468039244413, -0.0954437106847763, -0.014198708347976208, -0.0003937899600714445, -0.00031668893643654883, -0.901369571685791, -1.1920928244535389e-07, -1.311301275563892e-06, -1.2040065485052764e-05, -0.00023946279543451965, -0.13702818751335144], "finish_reason": "stop"}], "metrics": {"energy": 249.17872607803343, "energy_per_token": 1.1074610047912596, "time": 9.658185, "time_per_token": 0.04292526666666666}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError('source directory does not exist')\n    file_paths = glob.glob(os.path.join(source_dir, '*.txt'))\n    file_hashes = {}\n    for file_path in file_paths:\n        with open(file_path, 'rb') as f:\n            content = f.read()\n            hash_ = hashlib.md5(content).hexdigest()\n            file_hashes[file_path] = hash_\n\n    processed_paths = []\n    for file_path in file_paths:\n        file_hash = file_hashes[file_path]\n        new_path = os.path.join(target_dir, f'{prefix}{file_hash}{os.path.basename(file_path)}')\n        os.makedirs(os.path.dirname(new_path), exist_ok=True)\n        with open(new_path, 'w') as f:\n            f.write(prefix + content)\n        processed_paths.append(new_path)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "source", " directory", " does", " not", " exist", "')", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", ".", "txt", "'))", "\n", "    ", "file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "content", " =", " f", ".", "read", "()", "\n", "            ", "hash", "_", " =", " hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "\n", "\n", "    ", "processed", "_", "paths", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "file", "_", "hash", " =", " file", "_", "has", "hes", "[", "file", "_", "path", "]", "\n", "        ", "new", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "prefix", "}{", "file", "_", "hash", "}{", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")}", "')", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "os", ".", "path", ".", "dirname", "(", "new", "_", "path", ")", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "with", " open", "(", "new", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "prefix", " +", " content", ")", "\n", "        ", "processed", "_", "paths", ".", "append", "(", "new", "_", "path", ")"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -2.174846887588501, -2.0844571590423584, -1.0112454891204834, -0.3623605966567993, -0.0005407063290476799, -0.005251304246485233, -0.13623322546482086, -0.0014581772265955806, -1.1880455017089844, -2.325216054916382, -0.12067420780658722, -0.25269320607185364, -0.011029821820557117, -0.12162657827138901, -3.635817120084539e-05, -0.01438191905617714, -0.011818155646324158, -0.2552015781402588, -0.00048375347978435457, -0.0001137191939051263, -0.005233753472566605, -0.0007989790174178779, -0.0012677022023126483, -0.0038412846624851227, -7.748573807475623e-06, -2.3483953555114567e-05, -0.0006444760947488248, -0.061416417360305786, -0.538374125957489, -1.4423593282699585, -0.18279841542243958, -0.0041607958264648914, -0.009751777164638042, -0.08531741052865982, -2.956803560256958, -0.004476288799196482, -0.92537522315979, -0.0013524680398404598, -0.02418038249015808, -2.457113027572632, -0.04768892750144005, -0.12784752249717712, -0.4476202130317688, -0.45111218094825745, -0.02667566016316414, -0.012212972156703472, -0.0008948612376116216, -0.003657320514321327, -4.768360213347478e-06, -4.768360213347478e-06, -0.00011646069469861686, -0.0012115051504224539, -0.0016143397660925984, -0.2530038058757782, -0.0004959068610332906, -0.00023600654094479978, -0.0008698494057171047, -3.1470757676288486e-05, -2.992108420585282e-05, -0.10187114775180817, -0.05374905839562416, -0.8488819003105164, -0.0023111794143915176, -0.000285227142740041, -0.8079836368560791, -0.01948104240000248, -0.004779580980539322, -0.0006834316882304847, -1.3775593042373657, -0.013653932139277458, -0.017668239772319794, -5.8412379075889476e-06, -1.8000440832111053e-05, -0.0031418269500136375, -0.018470551818609238, -0.0710160955786705, -1.2359342575073242, -0.14028164744377136, -1.9715900421142578, -0.006619194056838751, -0.0001479277852922678, -1.0847986231965479e-05, -0.002070070942863822, -4.768370445162873e-07, -0.09403406828641891, -0.0010971962474286556, -0.0025397446006536484, -0.0906420350074768, -0.02112063765525818, -6.401333666872233e-05, -0.00028796817059628665, -0.0008794969180598855, -0.014454417861998081, -0.05093018710613251, -0.25433191657066345, -0.0002522150462027639, -0.11275376379489899, -1.6927575416048057e-05, -0.021466881036758423, -0.5048052072525024, -1.0967194612021558e-05, -0.002434744266793132, -0.006062925793230534, -5.8887653722194955e-05, -0.2817806601524353, -0.005126782692968845, -0.013251801952719688, -1.3856478929519653, -0.007833002135157585, -3.5494043827056885, -0.003577976254746318, -1.4079443216323853, -0.003633328014984727, -0.015787959098815918, -0.0026110862381756306, -0.04715083912014961, -0.028952011838555336, -0.20559215545654297, -0.0026189335621893406, -0.003351073944941163, -2.108718156814575, -0.028502462431788445, -1.1920922133867862e-06, -0.38772499561309814, -0.0007850425899960101, -0.0008778294431976974, -0.0009504806366749108, -2.521044969558716, -0.004548204597085714, -0.21859697997570038, -0.004792631138116121, -0.002435576869174838, -4.887569048150908e-06, -6.139089964563027e-05, -1.5497195136049413e-06, -0.03161608427762985, -0.0002810560108628124, -1.0728830375228426e-06, -9.667406266089529e-05, -0.0001823735801735893, -0.004481035750359297, -0.014008764177560806, -1.2849664688110352, -8.856858039507642e-05, -1.2130037546157837, -0.0015117417788133025, -0.15884344279766083, -2.145764938177308e-06, -0.0001062098381225951, -0.002178321359679103, -0.002422971185296774, -0.0007699147681705654, -0.031776729971170425, -3.2186455882765586e-06, -2.7418097943154862e-06, -0.00015853578224778175, -0.5312268137931824, -0.20494332909584045, -0.0752885490655899, -0.03609422966837883, -0.003215858479961753, -4.23184028477408e-05, -0.0046792058274149895, -1.179699420928955, -0.08573929220438004, -1.1324817933200393e-05, -0.0014871024759486318, -0.0003741279651876539, -0.02873600833117962, -2.3841855067985307e-07, -3.5523738915799186e-05, -0.0006743779522366822, -3.9219088648678735e-05, -0.00032431588624604046, -0.001292465953156352, -0.0009348789462819695, -0.0007045170641504228, -0.00430668517947197, -2.0862412452697754, -3.302042750874534e-05, -0.02394530363380909, -0.001980606932193041, -0.0001567479339428246, -0.00012218205665703863, -0.03612286224961281, -0.0002361257211305201, -8.940656698541716e-06, -0.00011395759065635502, -0.018472658470273018, -4.172316494077677e-06, -0.0028745303861796856, -4.887569048150908e-06, -2.1815061700181104e-05, -0.0009374991059303284, -7.116541382856667e-05, -0.003348816651850939, 0.0, -2.5748875486897305e-05, -0.0006980843027122319, -0.00046695294440723956, -0.00013731967192143202, -0.011104214936494827, -0.016080567613244057, -0.19122305512428284, -0.0004314445541240275, -0.0001864259538706392, -0.10792307555675507, -1.311301275563892e-06, -8.344646857949556e-07, -0.0002901133266277611, -0.00301965675316751, -1.182616114616394, -0.12702034413814545, -9.619726915843785e-05, -0.07298728078603745, -0.007096797693520784, -0.0008441222598776221, -0.0005318895564414561, -0.11324407160282135, -1.7404405298293568e-05, -0.00822502002120018, -0.02464071661233902, -1.7871325016021729, -0.08403195440769196, -2.421067953109741, -0.09508324414491653, -0.005563727114349604, -0.2262275516986847, -0.025860507041215897, -4.887569048150908e-06, -8.272782724816352e-05, -0.0008996253600344062, -8.904537389753386e-05, -0.000336590368533507, -0.007048148196190596, -7.033323527139146e-06, -2.9802276912960224e-06, -0.00041607304592616856], "finish_reason": "length"}], "metrics": {"energy": 279.92643899631514, "energy_per_token": 1.093462652329356, "time": 11.134422, "time_per_token": 0.0434938359375}}
{"outputs": [{"text": "try:\n        # Create target directory if it does not exist\n        if not os.path.exists(target_dir):\n            os.makedirs(target_dir)\n\n        # Find MD5 hashes of files in the source directory and write the hashed files to the target directory\n        for path, _, filenames in os.walk(source_dir):\n            for filename in filenames:\n                full_path = os.path.join(path, filename)\n                with open(full_path, 'rb') as file:\n                    content = file.read()\n                    hash_value = hashlib.md5(content).hexdigest()\n                    target_path = os.path.join(target_dir, f'{prefix}{hash_value}')\n                    with open(target_path, 'wb') as target_file:\n                        target_file.write(content)\n\n        return [os.path.join(target_dir, filename) for filename in os.listdir(target_dir)]\n    except FileNotFoundError as e:\n        raise FileNotFoundError(f'Source directory", "tokens": ["try", ":", "\n", "        ", "#", " Create", " target", " directory", " if", " it", " does", " not", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "        ", "#", " Find", " MD", "5", " has", "hes", " of", " files", " in", " the", " source", " directory", " and", " write", " the", " has", "hed", " files", " to", " the", " target", " directory", "\n", "        ", "for", " path", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "            ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " filename", ")", "\n", "                ", "with", " open", "(", "full", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "    ", "content", " =", " file", ".", "read", "()", "\n", "                ", "    ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "    ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "prefix", "}{", "hash", "_", "value", "}", "')", "\n", "                ", "    ", "with", " open", "(", "target", "_", "path", ",", " '", "wb", "')", " as", " target", "_", "file", ":", "\n", "                ", "        ", "target", "_", "file", ".", "write", "(", "content", ")", "\n", "\n", "        ", "return", " [", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", " for", " filename", " in", " os", ".", "list", "dir", "(", "target", "_", "dir", ")]", "\n", "    ", "except", " File", "NotFound", "Error", " as", " e", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory"], "logprobs": [-2.681649684906006, -0.0006026597693562508, -0.004310483578592539, -0.004646456800401211, -2.582606554031372, -2.2648749351501465, -1.065576195716858, -0.366542249917984, -0.08599463105201721, -0.06888524442911148, -0.8189887404441833, -0.00027414379292167723, -0.02063123695552349, -0.06281521916389465, -0.00032431588624604046, -0.3844100832939148, -0.006370001472532749, -0.0027290266007184982, -5.245195097813848e-06, -0.00016711745411157608, -0.0045258947648108006, -0.14161324501037598, -0.0002674698771443218, -0.004663068801164627, -2.9801878554280847e-05, -1.585470999998506e-05, -0.0034740353003144264, -0.001982629531994462, -0.000856747676152736, -0.00534747214987874, -0.0010153858456760645, -0.05442744493484497, -2.13382354559144e-05, -0.0004260824352968484, -4.3748852476710454e-05, -0.0008594871615059674, -5.602820692729438e-06, -2.7418097943154862e-06, -0.020242417231202126, -0.002051393734291196, -0.3295288383960724, -0.005031423643231392, -0.2142122983932495, -3.0914440155029297, -2.7536492347717285, -0.00024589852546341717, -0.5126216411590576, -0.07437697798013687, -0.9060319662094116, -1.1838622093200684, -0.2592400014400482, -0.8309749960899353, -0.10420966148376465, -0.02129966765642166, -2.545504570007324, -1.0923335552215576, -1.6497325897216797, -1.1064105033874512, -0.23242971301078796, -1.435675024986267, -0.16774505376815796, -0.25659170746803284, -0.01007117610424757, -0.008915734477341175, -0.046432334929704666, -0.0010374169796705246, -2.196139335632324, -2.486262798309326, -2.8024680614471436, -0.2727631628513336, -0.003375073429197073, -1.322704553604126, -9.894321920000948e-06, -7.152531907195225e-06, -0.0005681092734448612, -0.003636416047811508, -4.887569048150908e-06, -4.6967357775429264e-05, -0.0008415018673986197, -0.0013362773461267352, -1.156323378381785e-05, -2.4914430468925275e-05, -0.011449463665485382, -0.007317408453673124, -0.0015586382942274213, -0.05950797349214554, -0.07429341971874237, -0.0002461368858348578, -0.017422135919332504, -4.291525328881107e-06, -2.7418097943154862e-06, -5.9602869441732764e-05, -0.0018826870946213603, -0.002237913431599736, -1.3135532140731812, -0.02112472429871559, -0.014143467880785465, -0.0007711059297434986, -0.006938766222447157, -2.145764938177308e-06, -9.536697689327411e-06, -0.0008170842193067074, -0.0010736184194684029, -1.3708974620385561e-05, -0.0015551865799352527, -4.684815212385729e-05, -0.00048232366680167615, -2.0503786799963564e-05, -0.003937944304198027, -0.06039178743958473, -0.7498476505279541, -0.0005965837044641376, -0.00010239553375868127, -0.0005217621219344437, -1.1205610462639015e-05, -1.311301275563892e-06, -0.015209178440272808, -0.053606703877449036, -0.08148805797100067, -0.005591585300862789, -0.00010907054820563644, -0.7212814688682556, -0.03573334589600563, -0.004966541659086943, -0.0005488081369549036, -0.0003678122302517295, -0.955430269241333, -0.004044805187731981, -0.025791268795728683, -1.883488948806189e-05, -2.0503786799963564e-05, -0.0010665925219655037, -0.014075060375034809, -0.043261606246232986, -0.056102409958839417, -0.6021504998207092, -0.08197108656167984, -0.6460388898849487, -0.0006302992696873844, -0.008282361552119255, -0.00026854246971197426, -9.775113539944869e-06, -0.0009504806366749108, -1.1920928244535389e-07, -0.026034507900476456, -0.0009037939016707242, -0.002697521820664406, -0.012194836512207985, -0.012652011588215828, -3.58813522325363e-05, -0.0001137191939051263, -0.0002671123365871608, -0.014583775773644447, -0.025368772447109222, -0.027578867971897125, -2.770692825317383, -0.007704542484134436, -0.33927643299102783, -0.0007721779984422028, -0.03763623163104057, -2.0265558760002023e-06, -1.4781842764932662e-05, -0.0006036128615960479, -0.00047946401173248887, -0.00014888131408952177, -0.02290494740009308, -2.145764938177308e-06, -2.3841830625315197e-06, -9.500529267825186e-05, -0.30066561698913574, -0.629803478717804, -0.20185571908950806, -0.050033096224069595, -0.043258409947156906, -0.002839582972228527, -4.494089080253616e-05, -0.2440495640039444, -1.597790002822876, -0.03372460976243019, -0.03183227404952049, -0.013791153207421303, -0.3282455503940582, -0.0008690156391821802, -0.0002335037279408425, -0.002272049430757761, -6.9141146923357155e-06, -2.47952248173533e-05, -0.0002302858338225633, -0.0025242867413908243, -0.11592068523168564, -0.00491992337629199, -3.421248038648628e-05, -0.613800048828125, -0.18366646766662598, -0.0004003438516519964, -9.30981186684221e-05, -0.0005279577453620732, -9.870042413240299e-05, -0.0005449955351650715, -0.04599034786224365, -6.782778655178845e-05, -0.001674322527833283, -2.6464111215318553e-05, -0.00010871296399272978, -0.011489768512547016, -0.5279868245124817, -0.11298409104347229, -0.0026405726093798876, -0.8452464938163757, -0.2849569320678711, -0.27822160720825195, -0.4006235897541046, -0.296405553817749, -2.264974000354414e-06, -1.5616295058862306e-05, -2.312633478140924e-05, -0.036329228430986404, -0.0004396664153318852, -0.007481650914996862, -0.00022599527437705547, -0.00010466027742950246, -0.0003860443539451808, -0.8003787398338318, -0.013177686370909214, -0.06363482028245926, -0.0032663585152477026, -0.00228537037037313, -0.9307975769042969, -0.0010981488740071654, -0.0008945039589889348, -2.9802276912960224e-06, -0.00017510310863144696, -0.007574055343866348, -1.5139465176616795e-05, -6.83045873302035e-05, -0.022236306220293045, -0.005544047802686691, -0.6815747022628784, -0.0017025275155901909, -0.04596427455544472, -0.0001284993631998077, -3.4570634852570947e-06, -1.575303316116333, -0.20629867911338806, -0.00012742661056108773, -0.001853654277510941, -0.00032693761750124395, -1.0707130432128906, -0.3800545334815979, -0.0006563892820850015, -0.00010382589971413836, -0.08947896212339401, -0.3323517143726349, -1.241624116897583, -0.7718107104301453, -0.03347504884004593], "finish_reason": "length"}], "metrics": {"energy": 270.88021188545235, "energy_per_token": 1.0581258276775483, "time": 11.137826, "time_per_token": 0.0435071328125}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f'Source directory {source_dir} not found')\n\n    files = glob.glob(f'{source_dir}/**/*', recursive=True)\n\n    target_dir = os.path.abspath(target_dir)\n    os.makedirs(target_dir, exist_ok=True)\n\n    paths = []\n\n    for file in files:\n        if not os.path.isfile(file):\n            continue\n\n        with open(file, 'rb') as f:\n            data = f.read()\n\n            hash = hashlib.md5(data).hexdigest()\n            path = os.path.join(target_dir, f'{prefix}{hash}')\n\n        with open(path, 'wb') as f:\n            f.write(data)\n        paths.append(path)\n\n    return paths", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " {", "source", "_", "dir", "}", " not", " found", "')", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "source", "_", "dir", "}/", "**", "/*", "'", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "dir", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "paths", " =", " []", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "continue", "\n", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "data", " =", " f", ".", "read", "()", "\n", "\n", "            ", "hash", " =", " hash", "lib", ".", "md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "prefix", "}{", "hash", "}", "')", "\n", "\n", "        ", "with", " open", "(", "path", ",", " '", "wb", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "data", ")", "\n", "        ", "paths", ".", "append", "(", "path", ")", "\n", "\n", "    ", "return", " paths", "\n", "\n", "def"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -1.355796456336975, -1.4870117902755737, -0.142099529504776, -0.4068669080734253, -0.0009700122172944248, -0.00011467275908216834, -0.000125281119835563, -0.048518966883420944, -0.8726089000701904, -0.007689045742154121, -0.7191863059997559, -0.001444249995984137, -0.41812875866889954, -0.0003455280384514481, -2.5558648109436035, -0.28411439061164856, -0.24139335751533508, -4.0411134250462055e-05, -0.02348569594323635, -0.016837384551763535, -1.9953763484954834, -0.1064135804772377, -0.019227901473641396, -1.6212332411669195e-05, -8.34461570775602e-06, -0.7348230481147766, -0.04610874503850937, -0.10183432698249817, -1.0394055843353271, -0.0003069168305955827, -0.0014392504235729575, -0.0015611377311870456, -0.0018923247698694468, -0.0006055190460756421, -0.012796196155250072, -1.1685454845428467, -9.989239333663136e-05, -2.8144454956054688, -0.01337472815066576, -0.3831791877746582, -0.46124139428138733, -0.22641663253307343, -0.00016437610611319542, -0.0022633669432252645, -0.02379317209124565, -0.710290253162384, -1.0132738680113107e-05, -6.48477507638745e-05, -0.0030994017142802477, -0.014897407032549381, -6.6756979322235566e-06, -8.344646857949556e-07, -0.0011767374817281961, -0.03344634175300598, -0.18882562220096588, -0.9858690500259399, -4.2199197196168825e-05, -0.008795331232249737, -5.4596363042946905e-05, -0.0001294529065489769, -0.0001357701694360003, -0.005819639191031456, -1.2159273865108844e-05, -1.0371154530730564e-05, -0.001476865611039102, -0.006945751141756773, -2.3841855067985307e-07, -2.706014311115723e-05, -0.0004151197790633887, -0.0008394769974984229, -0.0036100472789257765, -0.042465806007385254, -0.04280930757522583, -8.010543388081715e-05, -2.975856304168701, -0.13180573284626007, -0.04856700077652931, -0.00657194247469306, -0.8144213557243347, -4.684815212385729e-05, -0.07534825056791306, -0.6588049530982971, -0.4366174638271332, -0.005745088681578636, -0.00017081231635529548, -0.0013362773461267352, -0.012090963311493397, -1.5075827836990356, -1.0617644786834717, -0.31661874055862427, -1.6927575416048057e-05, -0.0002848696312867105, -0.001073261140845716, -0.06622470915317535, -0.005533615127205849, -3.802703940891661e-05, -0.0010795724811032414, -0.02986450493335724, -0.013963505625724792, -0.0003122795606032014, -0.05866464227437973, -0.01929630897939205, -0.17893987894058228, -9.595887240720913e-05, -1.0113166570663452, -0.0017779747722670436, -0.00011121608258690685, -0.002351378323510289, -0.04844241961836815, -0.07492350786924362, -0.1945001631975174, -0.0060325926169753075, -0.00012385078298393637, -0.22890305519104004, -0.05490972474217415, -0.003703760216012597, -0.0021949741058051586, -1.8730459213256836, -0.003481994615867734, -0.045306894928216934, -2.455681169521995e-05, -3.1709168979432434e-05, -0.0051709008403122425, -0.009254179894924164, -0.6936380863189697, -2.3286473751068115, -0.7452012300491333, -1.591414213180542, -0.017554858699440956, -9.059495641849935e-05, -1.2516897186287679e-05, -0.0029276625718921423, -9.536738616588991e-07, -0.30480778217315674, -0.004036375787109137, -0.0027610058896243572, -0.14433921873569489, -0.013654167763888836, -0.00014172980445437133, -0.0005249790847301483, -0.000533795915544033, -0.011975535191595554, -0.27553021907806396, -1.7743074893951416, -0.019010605290532112, -0.5248100757598877, -3.4570634852570947e-06, -0.00011324241495458409, -0.0018768567824736238, -0.07543370872735977, -0.0002961912250611931, -0.007589671760797501, -6.198863957251888e-06, -2.3841830625315197e-06, -0.00015746307326480746, -0.17293475568294525, -0.124409519135952, -0.2919877767562866, -0.053275708109140396, -0.02707683853805065, -0.2626028060913086, -1.0868842601776123, -0.045509327203035355, -0.716881513595581, -1.9806917905807495, -0.3520318269729614, -0.0013158005895093083, -0.0005029367166571319, -0.013904138468205929, -0.0005418977816589177, -0.004577515181154013, -0.08375747501850128, -0.013346144929528236, -6.937739817658439e-05, -0.04463323578238487, -0.011399729177355766, -0.0006681832019239664, -0.000763244170229882, -0.04330030456185341, -3.2543604902457446e-05, -0.0005824061809107661, -0.011286579072475433, -0.22084283828735352, -0.03956105187535286, -0.0020008322317153215, -2.7102415561676025, -0.0883251205086708, -0.002855392638593912, -0.00017212340026162565, -0.0005330810672603548, -0.020116711035370827, -0.0019892919808626175, -0.0015845850575715303, -0.07713679224252701, -0.002792390063405037, -0.023983711376786232, -0.00615712022408843, -1.0537545680999756, -0.008056997321546078, -1.3462798595428467], "finish_reason": "stop"}], "metrics": {"energy": 236.8207126560211, "energy_per_token": 1.0715869350951182, "time": 9.44121, "time_per_token": 0.04272040723981901}}
{"outputs": [{"text": "# Check requirements.\n    for mod in (os, glob, hashlib):\n        if mod is None:\n            raise ImportError('Some requirements are missing.')\n\n    # Check input and get files to process.\n    if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"The directory {source_dir} does not exist.\")\n    file_list = glob.glob(os.path.join(source_dir, '**/*'))\n    # Get file names, excluding files in the target directory.\n    files_to_process = [f for f in file_list if not os.path.isdir(f)]\n\n    # If files exists in the target directory, delete them.\n    target_dir = os.path.realpath(target_dir)\n    for filename in glob.glob(os.path.join(target_dir, '*')):\n        os.remove(filename)\n\n    # Create list of files created.\n    new_files = []\n\n    # Iterate through the files and create new files with the hash prepended.\n    for source_file in files", "tokens": ["#", " Check", " requirements", ".", "\n", "    ", "for", " mod", " in", " (", "os", ",", " glob", ",", " hash", "lib", "):", "\n", "        ", "if", " mod", " is", " None", ":", "\n", "            ", "raise", " Import", "Error", "('", "Some", " requirements", " are", " missing", ".", "')", "\n", "\n", "    ", "#", " Check", " input", " and", " get", " files", " to", " process", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "'))", "\n", "    ", "#", " Get", " file", " names", ",", " excluding", " files", " in", " the", " target", " directory", ".", "\n", "    ", "files", "_", "to", "_", "process", " =", " [", "f", " for", " f", " in", " file", "_", "list", " if", " not", " os", ".", "path", ".", "is", "dir", "(", "f", ")]", "\n", "\n", "    ", "#", " If", " files", " exists", " in", " the", " target", " directory", ",", " delete", " them", ".", "\n", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "real", "path", "(", "target", "_", "dir", ")", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "*", "'))", ":", "\n", "        ", "os", ".", "remove", "(", "filename", ")", "\n", "\n", "    ", "#", " Create", " list", " of", " files", " created", ".", "\n", "    ", "new", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " and", " create", " new", " files", " with", " the", " hash", " prep", "ended", ".", "\n", "    ", "for", " source", "_", "file", " in", " files"], "logprobs": [-1.994422435760498, -0.8607721924781799, -3.2985284328460693, -2.2939064502716064, -0.02752552181482315, -0.005488090682774782, -0.8302200436592102, -2.6640007495880127, -0.24389134347438812, -1.3385179042816162, -0.10515626519918442, -0.004902722779661417, -0.033042293041944504, -0.011370853520929813, -0.0005763299996033311, -3.635817120084539e-05, -0.005752674303948879, -0.015686219558119774, -0.0006081400788389146, -0.30126670002937317, -1.1036818027496338, -0.053590547293424606, -0.0038551785983145237, -0.033772438764572144, -0.017145272344350815, -0.0003860443539451808, -0.033610500395298004, -0.3179026246070862, -0.0008899780223146081, -1.1156716346740723, -3.9477498531341553, -2.6573121547698975, -0.4269765615463257, -0.8537412285804749, -0.7423571944236755, -0.42027363181114197, -0.00458012567833066, -0.2845286726951599, -0.0006590101984329522, -0.3389703631401062, -0.4455038607120514, -3.159817695617676, -3.546597957611084, -3.3506088256835938, -2.217235565185547, -1.7287392616271973, -0.5199223756790161, -0.05639912188053131, -0.005193552002310753, -0.0019676387310028076, -0.36399075388908386, -0.05303233861923218, -0.03219964727759361, -3.2305197237292305e-05, -0.0005906267906539142, -0.032132234424352646, -0.9425688982009888, -0.0005075835506431758, -0.006001309957355261, -0.00020740265608765185, -2.6940935640595853e-05, -0.0050878808833658695, -0.010141981765627861, -0.0006566275842487812, -0.026285236701369286, -0.0031314881052821875, -0.00023731753753963858, -5.471556869451888e-05, -0.39011436700820923, -0.4135645925998688, -1.7531880140304565, -1.6100492477416992, -2.436560869216919, -1.1149864196777344, -0.00416269525885582, -9.572047565598041e-05, -0.0004096384218428284, -0.0839763879776001, -0.3141971826553345, -0.0018227167893201113, -0.015265886671841145, -0.16127541661262512, -0.02544582448899746, -0.0004127365828026086, -0.004526013042777777, -0.758571445941925, -2.2430334091186523, -0.12346717715263367, -1.414270281791687, -0.0198118407279253, -0.18690767884254456, -0.00013290952483657748, -0.01816939376294613, -0.013698851689696312, -0.3655991852283478, -2.622600959512056e-06, -0.00021240839851088822, -0.003147293347865343, -0.0034291294869035482, -0.0015115038258954883, -0.00836133398115635, -1.9430925021879375e-05, -3.2305197237292305e-05, -0.0008051729528233409, -0.107674241065979, -0.8888221979141235, -0.3322071135044098, -1.0578309297561646, -0.017119139432907104, -1.1048742532730103, -2.8461356163024902, -2.4744935035705566, -2.521977186203003, -1.935279130935669, -3.191835880279541, -2.0531110763549805, -2.3471593856811523, -1.425694465637207, -1.6922168731689453, -1.9511833190917969, -0.3635120987892151, -0.38271084427833557, -0.021719222888350487, -0.0031735554803162813, -2.5423998832702637, -0.45511794090270996, -0.08338027447462082, -0.0001934579631779343, -0.18457350134849548, -0.019619686529040337, -0.27507898211479187, -0.7212192416191101, -0.08964943140745163, -0.0009517907164990902, -0.0014467497821897268, -0.019681405276060104, -3.9219088648678735e-05, -3.123234637314454e-05, -0.056534543633461, -0.547644853591919, -0.2915429174900055, -1.2874520507466514e-05, -9.202533692587167e-05, -0.0014368696138262749, -1.07904851436615, -1.3491740226745605, -0.00011920218821614981, -0.008229749277234077, -2.1883223056793213, -0.014893296174705029, -0.3781484365463257, -0.0003262225945945829, -0.13832737505435944, -4.259294033050537, -3.1500797271728516, -4.121239185333252, -0.9592009782791138, -0.6800399422645569, -0.06888023763895035, -0.17143075168132782, -0.14097629487514496, -1.4643058776855469, -0.11242132633924484, -0.255720317363739, -0.023001061752438545, -0.0009632238652557135, -2.539630889892578, -0.009057741612195969, -1.3922605514526367, -2.062458038330078, -0.1055200919508934, -2.90866428258596e-05, -0.0017127619357779622, -0.007563288789242506, -2.253227949142456, -1.6569954823353328e-05, -0.00406308937817812, -0.03718436509370804, -5.9960475482512265e-05, -7.271740287251305e-06, -0.0009983561467379332, -0.05500619858503342, -0.021535251289606094, -1.6383697986602783, -2.1866049766540527, -0.00617453595623374, -0.9767684936523438, -0.00016735584358684719, -0.03086540289223194, -0.003501714440062642, -0.24940314888954163, -6.365573790390044e-05, -4.1960789531003684e-05, -0.001416513929143548, -0.0018303323304280639, -0.0005984899471513927, -0.004894656129181385, -1.07287787614041e-05, -2.8609820219571702e-05, -0.0006927236099727452, -0.07875434309244156, -0.871625542640686, -0.1616441309452057, -0.0015866083558648825, -0.00803807657212019, -0.001948602613992989, -0.9214338660240173, -4.935142715112306e-05, -0.08175832778215408, -0.0002388668799540028, -0.009223707020282745, -0.0012809175532311201, -0.0077512674033641815, -0.08401989936828613, -0.0005983707960695028, -0.1513991504907608, -1.7512941360473633, -2.6519956588745117, -0.9566054344177246, -2.2108540534973145, -3.042497396469116, -0.6376200914382935, -0.010584171861410141, -0.0002834395272657275, -2.647057056427002, -0.05391262471675873, -0.23670540750026703, -0.12162921577692032, -0.059402160346508026, -0.0025654281489551067, -0.4952241778373718, -0.00018654513405635953, -0.32878413796424866, -1.4135217666625977, -0.013466237112879753, -1.0116795301437378, -1.93349027633667, -0.3321380913257599, -2.265899658203125, -2.0272068977355957, -0.783466637134552, -0.3798576295375824, -0.776935338973999, -0.6841661930084229, -0.8769479393959045, -0.6430975794792175, -0.0010216975351795554, -0.112590491771698, -0.002689674962311983, -0.0006873629172332585, -0.0311038289219141, -3.346083879470825, -0.1832057386636734, -0.19542773067951202, -0.04709488898515701, -0.013431069441139698], "finish_reason": "length"}], "metrics": {"energy": 308.2985893745421, "energy_per_token": 1.204291364744305, "time": 11.150464, "time_per_token": 0.0435565}}
{"outputs": [{"text": "# check if the source directory exists\n    if not os.path.exists(source_dir):\n        raise FileNotFoundError('Source directory does not exist.')\n\n    # create the target directory if it does not exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # calculate the MD5 hash of each file's content, append the hash with a prefix to the content, and write the modified\n    # content to new files in the target directory\n    paths = []\n    for file_path in glob.glob(f'{source_dir}/**/*.txt', recursive=True):\n        with open(file_path, 'r', encoding='utf-8') as f:\n            content = f.read()\n\n        # calculate the MD5 hash of the file's content\n        hash_md5 = hashlib.md5(content.encode('utf-8')).hexdigest()\n\n        # append the prefix to the content before writing to a new file\n        new_content = f'{prefix}{hash_md5}\\n{content}'\n\n        ", "tokens": ["#", " check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Source", " directory", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " calculate", " the", " MD", "5", " hash", " of", " each", " file", "'", "s", " content", ",", " append", " the", " hash", " with", " a", " prefix", " to", " the", " content", ",", " and", " write", " the", " modified", "\n", "    ", "#", " content", " to", " new", " files", " in", " the", " target", " directory", "\n", "    ", "paths", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "f", "'{", "source", "_", "dir", "}/", "**", "/*", ".", "txt", "'", ",", " recursive", "=", "True", "):", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "content", " =", " f", ".", "read", "()", "\n", "\n", "        ", "#", " calculate", " the", " MD", "5", " hash", " of", " the", " file", "'", "s", " content", "\n", "        ", "hash", "_", "md", "5", " =", " hash", "lib", ".", "md", "5", "(", "content", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " append", " the", " prefix", " to", " the", " content", " before", " writing", " to", " a", " new", " file", "\n", "        ", "new", "_", "content", " =", " f", "'{", "prefix", "}{", "hash", "_", "md", "5", "}\\", "n", "{", "content", "}'", "\n", "\n", "        "], "logprobs": [-1.994422435760498, -2.5195741653442383, -0.8936731815338135, -1.190224289894104, -0.06959625333547592, -0.21782921254634857, -0.015499256551265717, -0.12207625806331635, -0.001547330990433693, -0.05680600926280022, -0.013896731659770012, -0.005099741276353598, -1.0609570381348021e-05, -0.00013469743134919554, -0.00888749584555626, -0.3710837662220001, -0.00024291902082040906, -0.0019145745318382978, -5.8412379075889476e-06, -2.8371408916427754e-05, -0.0010236029047518969, -0.002830310957506299, -0.00045622908510267735, -0.011271019466221333, -0.001500314916484058, -7.64102369430475e-05, -2.8013790142722428e-05, -2.0792064666748047, -0.6325677633285522, -0.028667664155364037, -0.40765315294265747, -0.00012313561455812305, -0.0024378362577408552, -0.8586841821670532, -0.016463153064250946, -0.0008295908919535577, -0.12330595403909683, -0.0006115949945524335, -0.14122940599918365, -0.8258292078971863, -0.3260393738746643, -0.03335825726389885, -0.014126778580248356, -0.06486921012401581, -0.019633831456303596, -0.4069158732891083, -0.0001867835089797154, -0.040235161781311035, -0.04169967770576477, -0.00013362467871047556, -0.18328523635864258, -0.002798333764076233, -0.0008247073274105787, -0.00022957073815632612, -4.3748852476710454e-05, -0.0019292092183604836, -0.09395940601825714, -7.319182623177767e-05, -0.0007404923089779913, -1.9073468138230965e-06, -4.768360213347478e-06, -0.002425349783152342, -0.0010706413304433227, -0.0004032037395518273, -0.013239802792668343, -0.00037901371251791716, -0.08402658253908157, -2.3007127310847864e-05, -0.0003725788265001029, -0.00013696208770852536, -0.0009791824268177152, -1.0847986231965479e-05, -4.6491513785440475e-06, -0.025761296972632408, -0.002460549585521221, -0.01875067688524723, -0.001128632458858192, -0.13530758023262024, -3.967559814453125, -0.22207753360271454, -0.3100416362285614, -0.00015901254664640874, -0.27397993206977844, -0.28415486216545105, -0.04558176547288895, -0.012457416392862797, -0.3724497854709625, -2.109982233378105e-05, -0.017812054604291916, -3.076878070831299, -2.3695907592773438, -0.25969773530960083, -0.11865918338298798, -2.081589698791504, -0.6276730298995972, -0.05263499543070793, -0.9869582056999207, -0.14198265969753265, -1.12424898147583, -0.17494609951972961, -0.2751118540763855, -0.08254893869161606, -0.252284437417984, -0.42396092414855957, -0.9949960708618164, -0.00021586472576018423, -0.0001726001501083374, -0.026213938370347023, -0.012766772881150246, -0.3141145706176758, -0.003246515290811658, -0.326640784740448, -0.012489911168813705, -0.04249585419893265, -0.02441098354756832, -0.14020538330078125, -0.007154085673391819, -2.2036545276641846, -0.09667995572090149, -0.028174642473459244, -0.03072553500533104, -0.08065580576658249, -0.037128083407878876, -1.2786413431167603, -0.40756893157958984, -0.14425408840179443, -0.0022400543093681335, -0.021974649280309677, -1.0132738680113107e-05, -0.1454818844795227, -0.006035791710019112, -2.0968148708343506, -0.1815369874238968, -0.003441841108724475, -1.3947389561508317e-05, -5.483612312673358e-06, -1.1030385494232178, -0.024241236969828606, -0.09254299849271774, -0.3741615116596222, -0.641062319278717, -0.038217782974243164, -0.00016973962192423642, -0.0013996100751683116, -0.0007306052139028907, -0.0010844547068700194, -0.0004545609117485583, -0.008371145464479923, -0.015097633004188538, -0.6738162636756897, -0.000476246903417632, -0.0001833270798670128, -0.001522811478935182, -0.00034850722295232117, -6.318072337307967e-06, -0.059397220611572266, -0.038790054619312286, -0.6424009203910828, -1.413339614868164, -0.000301673193462193, -0.032658036798238754, -0.012608340010046959, -0.054975397884845734, -0.13796231150627136, -0.006303784437477589, -0.015618503093719482, -0.00013016807497479022, -1.085315227508545, -0.027572372928261757, -0.003771574702113867, -0.0011835244949907064, -0.4401423931121826, -0.0017938013188540936, -0.07362605631351471, -0.0002686616498976946, -3.790783375734463e-05, -0.010257857851684093, -0.03898073732852936, -1.0393009185791016, -0.029093634337186813, -1.3836266994476318, -0.7333717942237854, -0.14814113080501556, -0.09277498722076416, -3.659658250398934e-05, -0.010859203524887562, -0.33607491850852966, -0.037003450095653534, -0.6371822357177734, -0.7646706700325012, -0.0010663543362170458, -0.030499044805765152, -0.1401800960302353, -0.00011967896716669202, -1.2743110656738281, -0.060167428106069565, -2.008612871170044, -0.000563224486541003, -0.0023752828128635883, -0.0008174415561370552, -2.038458114839159e-05, -6.6756979322235566e-06, -0.0014123475411906838, 0.0, -0.32840490341186523, -0.0061783273704349995, -0.00199333718046546, -0.0007408496458083391, -0.686820924282074, -0.005120971240103245, -0.001277345814742148, -2.7656173188006505e-05, -0.000654602306894958, -0.03632727265357971, -0.0194622203707695, -2.682172998902388e-05, -0.00034648136352188885, -0.0004951919545419514, -0.005684875417500734, -0.20349200069904327, -0.00019929806876461953, -0.016072474420070648, -0.9093053340911865, -0.01949320174753666, -1.7455743551254272, -1.1276246309280396, -0.0035843905061483383, -0.7420926094055176, -3.204362392425537, -0.11150557547807693, -1.2291067838668823, -0.6498977541923523, -0.025469765067100525, -0.0008465044084005058, -0.07805290818214417, -0.0001454247540095821, -0.7569910287857056, -0.00012492353562265635, -0.1355821192264557, -0.0005198557628318667, -0.11160377413034439, -0.13560158014297485, -0.00862291269004345, -0.16097618639469147, -0.008173469454050064, -0.000586695212405175, -1.8358061424805783e-05, -5.006777428206988e-06, -0.45017707347869873, -0.005437702406197786, -0.1336880922317505, -0.01747133769094944, -0.04112780839204788, -0.004977928940206766, -0.05490216612815857, -7.986703712958843e-05], "finish_reason": "length"}], "metrics": {"energy": 283.694610028267, "energy_per_token": 1.108182070422918, "time": 11.124535, "time_per_token": 0.04345521484375}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"The directory {source_dir} does not exist.\")\n\n    files = glob.glob(os.path.join(source_dir, \"*\"))\n    hashes = {}\n    for f in files:\n        with open(f, \"rb\") as file:\n            content = file.read()\n            hashes[os.path.basename(f)] = hashlib.md5(content).hexdigest()\n    for file_name, hash_value in hashes.items():\n        path = os.path.join(target_dir, f\"{file_name}.txt\")\n        with open(path, \"w\") as new_file:\n            new_file.write(f\"{prefix} {hash_value}\\n\")\n            new_file.write(f\"{path}\\n\")\n            new_file.write(f\"{source_dir} {file_name}\\n\")\n            new_file.write(f\"{prefix} {hash_value}\\n", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " \"", "*", "\"", "))", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "            ", "content", " =", " file", ".", "read", "()", "\n", "            ", "has", "hes", "[", "os", ".", "path", ".", "bas", "ename", "(", "f", ")]", " =", " hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "    ", "for", " file", "_", "name", ",", " hash", "_", "value", " in", " has", "hes", ".", "items", "():", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "\"", "{", "file", "_", "name", "}", ".", "txt", "\"", ")", "\n", "        ", "with", " open", "(", "path", ",", " \"", "w", "\"", ")", " as", " new", "_", "file", ":", "\n", "            ", "new", "_", "file", ".", "write", "(", "f", "\"", "{", "prefix", "}", " {", "hash", "_", "value", "}\\", "n", "\"", ")", "\n", "            ", "new", "_", "file", ".", "write", "(", "f", "\"", "{", "path", "}\\", "n", "\"", ")", "\n", "            ", "new", "_", "file", ".", "write", "(", "f", "\"", "{", "source", "_", "dir", "}", " {", "file", "_", "name", "}\\", "n", "\"", ")", "\n", "            ", "new", "_", "file", ".", "write", "(", "f", "\"", "{", "prefix", "}", " {", "hash", "_", "value", "}\\", "n"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -0.3625927269458771, -1.8086745738983154, -2.941561222076416, -0.710841178894043, -0.001211028778925538, -7.331102824537084e-05, -0.00025197668583132327, -0.02759927697479725, -0.12896086275577545, -0.0007077334448695183, -0.005994200240820646, -0.3776412904262543, -0.029490023851394653, -0.0002535260282456875, -0.0037733560893684626, -0.23424936830997467, -0.00025376438861712813, -2.170506238937378, -0.30758315324783325, -0.1838224083185196, -3.361645576660521e-05, -0.02207866683602333, -0.007566956337541342, -0.2563534677028656, -0.00018690270371735096, -6.12716976320371e-05, -0.0018878034316003323, -0.0008244690834544599, -0.000609927112236619, -0.005614464171230793, -1.537788011773955e-05, -7.152531907195225e-06, -0.0004812512779608369, -1.1510957479476929, -0.43636345863342285, -0.48234984278678894, -0.01719542406499386, -0.013728835619986057, -0.36054396629333496, -2.293938398361206, -0.11118146777153015, -0.04432172328233719, -1.5454821586608887, -0.040450528264045715, -0.679103672504425, -0.7650121450424194, -1.7786945104599, -0.1551593691110611, -0.0061219315975904465, -0.00025138078490272164, -0.002857532352209091, -0.002811291255056858, -0.6463040113449097, -0.0004764852055814117, -0.00015901254664640874, -0.0011978124966844916, -0.08499620109796524, -0.30727019906044006, -0.09647073596715927, -0.0005390383303165436, -0.0006799769471399486, -8.701899787411094e-05, -0.6597322821617126, -0.03790954500436783, -0.006288029253482819, -0.0008721124031580985, -1.3498406410217285, -0.006317052058875561, -0.033226579427719116, -2.002696055569686e-05, -3.611976353568025e-05, -0.002974968170747161, -0.012648597359657288, -0.08137685060501099, -0.7176178693771362, -0.02097134478390217, -0.01872224546968937, -2.2130630016326904, -0.0002277830062666908, -0.00040356122190132737, -0.006094324868172407, -0.06441362202167511, -2.3841855067985307e-07, -4.076874756719917e-05, -0.0031666632276028395, -0.006185790989547968, -0.000523430178873241, -0.08975166082382202, -0.0008023141999728978, -2.8013790142722428e-05, -0.0018690037541091442, -2.3841855067985307e-07, -0.005473745055496693, -0.004141326528042555, -0.001573873101733625, -0.014254415407776833, -0.021422425284981728, -4.792098479811102e-05, -0.00044252615771256387, -0.0009176096064038575, -0.028298528864979744, -2.0796024799346924, -0.7352259159088135, -2.0610005855560303, -0.8949316740036011, -0.1105489581823349, -0.07838968932628632, -0.13305693864822388, -0.21152956783771515, -0.5118739008903503, -0.00011550712952157483, -0.0027362785767763853, -2.622600959512056e-06, -3.540453326422721e-05, -0.0008063640561886132, -9.691245941212401e-05, -0.0025384367909282446, -0.002273833379149437, -2.9936611652374268, -0.0544033981859684, -0.03203641250729561, -3.933898824470816e-06, -9.548207890475169e-05, -0.006294900085777044, -0.0007752750534564257, -0.00013410145766101778, -0.009692040272057056, -3.814689989667386e-06, -1.6689286894688848e-06, -0.0002019201492657885, -0.6566463112831116, -0.03607594594359398, -0.002008327515795827, -0.8170495629310608, -2.4676019165781327e-05, -1.9788545614574105e-05, -0.4333997070789337, -0.11130562424659729, -0.4871923327445984, -0.002292625606060028, -0.0015142414486035705, -0.0051516881212592125, -0.009396139532327652, -0.14374861121177673, -0.0010389650706201792, -8.05822346592322e-05, -0.008563936688005924, -0.00032145579461939633, -0.044064413756132126, -0.08124540746212006, -0.10055722296237946, -0.05130918323993683, -8.320462075062096e-05, -2.664588212966919, -0.016192825511097908, -0.0037138555198907852, -0.0027524465695023537, -0.0011182728921994567, -0.0009006972541101277, -0.10278533399105072, -7.1403817855753e-05, -0.029385501518845558, -0.0002422039397060871, -0.006091007497161627, -0.001999285537749529, -0.09806858003139496, -0.00662499712780118, -0.0008702066843397915, -0.006833990104496479, -2.440244674682617, -0.010133957490324974, -0.022351838648319244, -0.003299033734947443, -5.1377883210079744e-05, -0.2214977741241455, -0.013479409739375114, -0.6726559996604919, -0.05244022235274315, -0.035645924508571625, -0.24484720826148987, -0.07351286709308624, -0.00015424491721205413, -0.00384187838062644, -7.188061863416806e-05, -0.04810130596160889, -0.000771939754486084, -1.9625663757324219, -0.11433188617229462, -0.2852123975753784, -2.135324478149414, -0.5701712369918823, -0.0029046034906059504, -0.07852602005004883, -0.019952895119786263, -0.051814593374729156, -0.2654052972793579, -0.05805942788720131, -6.294052582234144e-05, -0.007222021464258432, -4.1126360883936286e-05, -0.07671424001455307, -0.00362905184738338, -1.026639699935913, -0.007573345210403204, -0.23309911787509918, -3.0361883640289307, -0.0001481661747675389, -0.00046826363541185856, -2.794774293899536, -1.3276923894882202, -0.3031312823295593, -0.0007956438348628581, -0.00025197668583132327, -0.15323470532894135, -0.00046492734691128135, -0.05699644237756729, -0.01827053166925907, -0.03129783272743225, -0.3948631286621094, -0.08704429864883423, -4.3987260141875595e-05, -0.007988408207893372, -0.0002203936892328784, -0.0470571331679821, -0.008075326681137085, -0.39754247665405273, -0.006106410175561905, -0.21494188904762268, -2.3147168159484863, -0.17512302100658417, -0.02729215659201145, -0.16136011481285095, -0.12434551864862442, -0.0338277593255043, -0.13333813846111298, -0.002135974122211337], "finish_reason": "length"}], "metrics": {"energy": 267.8903916893006, "energy_per_token": 1.0464468425363305, "time": 11.144295, "time_per_token": 0.04353240234375}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError\n    all_paths = []\n    for root, dir_names, file_names in os.walk(source_dir):\n        for file_name in file_names:\n            full_path = os.path.join(root, file_name)\n            all_paths.append(full_path)\n    all_paths = glob.glob(os.path.join(source_dir, '*.txt'))\n    for path in all_paths:\n        with open(path, 'rb') as file:\n            content = file.read()\n            content = prefix + hashlib.md5(content).hexdigest() + content\n        with open(path, 'w') as file:\n            file.write(content)\n    return all_paths", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "    ", "all", "_", "paths", " =", " []", "\n", "    ", "for", " root", ",", " dir", "_", "names", ",", " file", "_", "names", " in", " os", ".", "walk", "(", "source", "_", "dir", "):", "\n", "        ", "for", " file", "_", "name", " in", " file", "_", "names", ":", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "            ", "all", "_", "paths", ".", "append", "(", "full", "_", "path", ")", "\n", "    ", "all", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", ".", "txt", "'))", "\n", "    ", "for", " path", " in", " all", "_", "paths", ":", "\n", "        ", "with", " open", "(", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "content", " =", " file", ".", "read", "()", "\n", "            ", "content", " =", " prefix", " +", " hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", " +", " content", "\n", "        ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "content", ")", "\n", "    ", "return", " all", "_", "paths", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -2.6732141971588135, -1.2040249109268188, -4.183380126953125, -0.007106503937393427, -1.8307135105133057, -0.027200281620025635, -1.5327125787734985, -0.01546286977827549, -0.10273069143295288, -0.19851703941822052, -2.6810309886932373, -0.005900820251554251, -3.391571283340454, -1.7465790510177612, -0.034381236881017685, -0.00025674383505247533, -0.20735906064510345, -0.0006329201860353351, -0.005835520103573799, -0.0011064843274652958, -0.008289337158203125, -7.033323527139146e-06, -5.328513361746445e-05, -0.000834236154332757, -0.00460575707256794, -9.775113539944869e-06, -2.706014311115723e-05, -0.050533369183540344, -0.016172414645552635, -0.0015518538421019912, -0.21862342953681946, -0.6742620468139648, -0.11240748316049576, -0.03870037570595741, -0.0006789048202335835, -0.024447860196232796, -1.7165990357170813e-05, -4.6491513785440475e-06, -0.0006106419023126364, -0.0018805454019457102, -0.0014034194173291326, -1.396382212638855, -0.008325631730258465, -0.0747518390417099, -0.003040693001821637, -0.02036016620695591, -1.0490362910786644e-05, -0.00012182447244413197, -0.0036134920082986355, -0.009083022363483906, -6.949660019017756e-05, -0.0081794997677207, -0.0003400462737772614, -0.0023154611699283123, -1.2874520507466514e-05, -7.223821739898995e-05, -0.00012766500003635883, -0.006403167732059956, -0.0059707374311983585, -1.639961838722229, -9.65590606938349e-06, -0.0009174905135296285, -0.018968379124999046, -0.012954599224030972, -0.02876901999115944, -0.08310659974813461, -1.680836794548668e-05, -0.00020692592079285532, -0.0024830244947224855, -0.013388607650995255, -0.3161333501338959, -2.474562644958496, -0.00043501926120370626, -0.7663794755935669, -0.7088468670845032, -1.2403079271316528, -0.000192504478036426, -0.09517581015825272, -0.07375340908765793, -0.4469466805458069, -0.002237913431599736, -0.0022150760050863028, -0.007657223381102085, -0.008649504743516445, -0.07652841508388519, -0.19519905745983124, -2.95634672511369e-05, -0.00029952809563837945, -0.005630230065435171, -0.1420135796070099, -0.3497970700263977, -1.1450631618499756, -0.6595020890235901, -0.013188744895160198, -0.050387270748615265, -0.11414940655231476, -1.147594928741455, -0.6449021697044373, -0.014121019281446934, -0.01673961989581585, -2.264974000354414e-06, -7.545663538621739e-05, -0.0006571040721610188, -0.0013941340148448944, -0.006623338907957077, -0.8716615438461304, -0.002735208487138152, -0.0009180859779007733, -0.0067033893428742886, -0.1095697358250618, -0.09640253335237503, -0.9628073573112488, -0.015789249911904335, -0.0006145734223537147, -1.0383106470108032, -0.12924499809741974, -0.006499224808067083, -0.0014402027009055018, -1.0596507787704468, -0.008307898417115211, -0.05496930330991745, -0.00010716341057559475, -8.976056415122002e-05, -0.007641962729394436, -0.02036869339644909, -0.327424556016922, -2.90622615814209, -0.777539849281311, -0.6010944843292236, -0.022940946742892265, -0.07419557869434357, -6.615896563744172e-05, -3.3378044463461265e-05, -0.0013424679636955261, -3.814689989667386e-06, -0.0020855360198765993, -0.0028618115466088057, -0.008060308173298836, -0.003326242323964834, -0.0015608996618539095, -9.97731985989958e-05, -0.0005793085438199341, -0.0020058290101587772, -0.310282826423645, -1.0327656269073486, -0.12196408957242966, -0.4836902916431427, -0.612474799156189, -0.0011745942756533623, -0.012859631329774857, -0.11279498040676117, -0.08677370846271515, -0.009428969584405422, -1.1186766624450684, -0.15888066589832306, -0.0033293315209448338, -0.2016817033290863, -0.006828543730080128, -0.0006585336523130536, -0.0014224658953025937, -0.006171455606818199, -8.523101132595912e-05, -0.003030590945854783, -0.00047017011092975736, -0.005919544491916895, -0.19968704879283905, -0.038900937885046005, -0.25691547989845276, -0.08449546247720718, -0.06668059527873993, -0.0009283285471610725, -7.843663479434326e-05, -1.0447330474853516, -2.3841855067985307e-07, -1.6689286894688848e-06, -3.349725011503324e-05, -0.0002867764269467443, -0.08220015466213226], "finish_reason": "stop"}], "metrics": {"energy": 223.47455932235724, "energy_per_token": 1.1401763230732511, "time": 8.608663, "time_per_token": 0.04392175}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(source_dir)\n\n    files = glob.glob(os.path.join(source_dir, '**/*'))\n    for path in files:\n        with open(path, 'rb') as file:\n            content = file.read()\n        new_content = f\"{prefix}{hashlib.md5(content).hexdigest()}\\n\" + content\n        new_path = path.replace(source_dir, target_dir)\n        with open(new_path, 'wb') as new_file:\n            new_file.write(new_content)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "source", "_", "dir", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "'))", "\n", "    ", "for", " path", " in", " files", ":", "\n", "        ", "with", " open", "(", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "content", " =", " file", ".", "read", "()", "\n", "        ", "new", "_", "content", " =", " f", "\"", "{", "prefix", "}{", "hash", "lib", ".", "md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "}\\", "n", "\"", " +", " content", "\n", "        ", "new", "_", "path", " =", " path", ".", "replace", "(", "source", "_", "dir", ",", " target", "_", "dir", ")", "\n", "        ", "with", " open", "(", "new", "_", "path", ",", " '", "wb", "')", " as", " new", "_", "file", ":", "\n", "            ", "new", "_", "file", ".", "write", "(", "new", "_", "content", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -1.7479926347732544, -0.00014578233822248876, -0.0001161031104857102, -0.1653878092765808, -0.0038244216702878475, -0.3256298005580902, -0.00025245340657420456, -2.07623291015625, -0.23839521408081055, -0.2347930371761322, -4.8397800128441304e-05, -0.01929011195898056, -0.016972528770565987, -0.20852041244506836, -0.00015758226800244302, -0.00021586472576018423, -0.001910886145196855, -0.0019031523261219263, -0.0016462358180433512, -0.00481932470574975, -1.3351351299206726e-05, -1.1086402082582936e-05, -0.00082923355512321, -0.11769900470972061, -1.0013799667358398, -0.3641766309738159, -1.240565299987793, -0.01480262354016304, -0.3794407546520233, -3.2202465534210205, -2.6539618968963623, -0.04065440222620964, -0.029441410675644875, -0.0003532739356160164, -0.0037601736839860678, -0.02146863006055355, -0.938167929649353, -0.00354127143509686, -0.00031573555315844715, -0.00618164474144578, -0.07823701947927475, -0.0693463683128357, -0.49006909132003784, -0.010241338983178139, -0.0003849719068966806, -0.8988773822784424, -0.07472284883260727, -0.009970740415155888, -0.001939084380865097, -1.0829956531524658, -0.008101459592580795, -0.2356022447347641, -4.935142715112306e-05, -5.400034933700226e-05, -0.005207426846027374, -0.020401515066623688, -1.8680055141448975, -3.0888147354125977, -0.0041467878036201, -1.384700059890747, -0.0029639145359396935, -1.5433768033981323, -0.9383732676506042, -0.0017243054462596774, -0.019910825416445732, -0.06056695058941841, -0.028221694752573967, -0.0006418551784008741, -4.6491513785440475e-06, -0.0009377372916787863, -1.5497195136049413e-06, -0.000476246903417632, -0.0017799977213144302, -0.09886519610881805, -2.062299427052494e-05, -0.001930517959408462, -8.713819261174649e-05, -0.0002640137099660933, -0.07478225976228714, -0.34519922733306885, -0.023673849180340767, -1.4310686588287354, -0.20262473821640015, -0.00452458905056119, -0.08852426707744598, -0.046902332454919815, -1.0275423526763916, -0.001886375597678125, -0.18406936526298523, -0.0009104635682888329, -2.2470390796661377, -0.04302902892231941, -0.023625068366527557, -0.0327945202589035, -0.04955923557281494, -4.172316494077677e-06, -2.634490556374658e-05, -0.004878047853708267, -0.005922507029026747, -1.6569954823353328e-05, -6.6756979322235566e-06, -0.11930479109287262, -0.04265659302473068, -0.015557356178760529, -0.5458453297615051, -0.005053010769188404, -0.00010680581908673048, -0.0010740946745499969, -1.6689160474925302e-05, -5.8412379075889476e-06, -0.0005830018781125546, -0.013213568367064, -0.8680858016014099, -0.017230577766895294, -0.0005734706646762788, -0.9046620726585388, -0.013604306615889072, -0.0006403064471669495, -0.00014852374442853034, -0.0009606037638150156, -0.0007353700930252671, -0.004378138110041618, -1.1086402082582936e-05, -0.0004400238685775548, -1.8715683836489916e-05, -0.0002623452164698392, -0.00010442188795423135, -0.008670185692608356, -5.578839045483619e-05, -0.00042441420373506844, -1.8080248832702637, -1.1920928244535389e-07, -1.0728830375228426e-06, -3.9457496313843876e-05, -0.0002240883477497846, -0.17202802002429962], "finish_reason": "stop"}], "metrics": {"energy": 191.08595026206976, "energy_per_token": 1.232812582335934, "time": 6.7353487, "time_per_token": 0.04345386258064516}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(\"Source directory does not exist\")\n\n    hash_files = []\n\n    # Create the target directory if it doesn't exist\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n\n    # Calculate MD5 hashes of all files in the source directory\n    for filename in glob.glob(os.path.join(source_dir, '**/*'), recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            md5_hash = hashlib.md5()\n            while True:\n                data = f.read(4096)\n                if not data:\n                    break\n                md5_hash.update(data)\n            hash_filename = os.path.join(target_dir, f'{prefix}{md5_hash.hexdigest()}.{os.path.basename(filename)}')\n            hash_files.append(hash_filename)\n            with", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "hash", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "\n", "    ", "#", " Calculate", " MD", "5", " has", "hes", " of", " all", " files", " in", " the", " source", " directory", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "')", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "filename", "):", "\n", "            ", "continue", "\n", "        ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "while", " True", ":", "\n", "                ", "data", " =", " f", ".", "read", "(", "4", "0", "9", "6", ")", "\n", "                ", "if", " not", " data", ":", "\n", "                ", "    ", "break", "\n", "                ", "md", "5", "_", "hash", ".", "update", "(", "data", ")", "\n", "            ", "hash", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "prefix", "}{", "md", "5", "_", "hash", ".", "hex", "dig", "est", "()}", ".", "{", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")}", "')", "\n", "            ", "hash", "_", "files", ".", "append", "(", "hash", "_", "filename", ")", "\n", "            ", "with"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -1.7461673021316528, -0.6286399364471436, -0.05045901611447334, -0.36394038796424866, -0.00020489977032411844, -0.0030257180333137512, -1.1122541427612305, -0.001910886145196855, -0.006600009743124247, -0.31301411986351013, -0.0002983363519888371, -3.2676830291748047, -0.05799137428402901, -1.6031794548034668, -0.04280713573098183, -0.07117486745119095, -0.031076325103640556, -0.6878719925880432, -0.00011395759065635502, -1.9980348348617554, -2.4766664505004883, -0.6708096861839294, -0.056876398622989655, -0.05923387035727501, -0.04884915426373482, -0.017276624217629433, -0.6084327101707458, -0.0002002515539061278, -1.0013530300057027e-05, -0.046806782484054565, -0.10853008925914764, -0.0002460177056491375, -0.139565572142601, -0.002064360771328211, -0.000482442817883566, -2.50339189733495e-06, -3.194758028257638e-05, -0.00032240914879366755, -0.05065089091658592, -6.711257447022945e-05, -0.0011042217956855893, -5.364403477869928e-06, -2.9802276912960224e-06, -0.002848736010491848, -0.0006529344827868044, -0.0004239375703036785, -0.017697753384709358, -0.0001879753835964948, -0.050822556018829346, -1.4543427823809907e-05, -0.0002826052950695157, -3.1709168979432434e-05, -0.0003234816831536591, -5.483612312673358e-06, -2.145764938177308e-06, -0.02283049374818802, -0.0013340153964236379, -0.01586364209651947, -0.0018413984216749668, -0.8069173693656921, -3.7926440238952637, -1.3032034635543823, -0.00013433984713628888, -0.9292258620262146, -0.04976262152194977, -1.8180993795394897, -1.1436582803726196, -0.24098321795463562, -0.11789704859256744, -0.24117730557918549, -0.04248420149087906, -0.016643134877085686, -0.10096917301416397, -0.0007535954937338829, -0.09954863041639328, -0.7476587295532227, -0.0013518728082999587, -0.13868534564971924, -9.536697689327411e-06, -0.10480991750955582, -0.003212174866348505, -0.1467088907957077, -0.0001821352052502334, -1.7165990357170813e-05, -0.0013237770181149244, -9.190614218823612e-05, -0.00027211778797209263, -0.0012504386249929667, -1.7881233361549675e-05, -2.264974000354414e-06, -0.0004120216181036085, -0.29106542468070984, -1.3675678968429565, -0.5928097367286682, -1.0396208763122559, -0.00015317220822907984, -0.004998686723411083, -0.0007940953364595771, -0.003594011999666691, -0.001476865611039102, -0.0033767367713153362, -0.010462435893714428, -1.2974129915237427, -1.9342551231384277, -0.09444285184144974, -5.602820692729438e-06, -2.9444261599564925e-05, -0.001726447488181293, -0.0037066105287522078, -0.012339205481112003, -7.510157047363464e-06, -0.0006168370018713176, -0.011529364623129368, -0.03378627076745033, -0.0002562671434134245, -0.03294309973716736, -0.1764584183692932, -0.45504435896873474, -0.4003574848175049, -0.00018368464952800423, -4.017272294731811e-05, -0.00029988560709170997, -0.0034335250966250896, -0.07127045094966888, -0.006900882348418236, -0.0025607910938560963, -9.262132516596466e-05, -0.3839234709739685, -0.017949877306818962, -0.0021052833180874586, -0.0005530973430722952, -1.6410001516342163, -0.0006037319544702768, -1.2074873447418213, -0.028607888147234917, -0.003554694587364793, -0.0021280040964484215, -3.302042750874534e-05, -7.510157047363464e-06, -0.0005738280597142875, 0.0, -1.2734020948410034, -0.0027064383029937744, -0.004831307101994753, -1.8376505374908447, -0.26063603162765503, -6.318072337307967e-06, -0.0013462775386869907, -0.00010609064338495955, -0.2789513170719147, -0.002071736380457878, -0.00017295771976932883, -1.4305104514278355e-06, -0.00011073929636040702, -0.0053413063287734985, -0.2985483705997467, -0.005287116393446922, -0.00012730741582345217, -7.247662142617628e-05, -0.0019349202048033476, -0.04084473103284836, -0.0009541726321913302, -0.010040963999927044, -0.014781832695007324, -9.095255518332124e-05, -0.00036399890086613595, -0.001166259404271841, -1.597391747054644e-05, -7.1403817855753e-05, -0.0026329634711146355, -0.0008790204883553088, -0.0003393312799744308, -0.0010355116100981832, -1.1920928244535389e-07, -3.3378044463461265e-05, -3.1709168979432434e-05, -2.264974000354414e-06, -7.092700980138034e-05, -4.51792984677013e-05, -0.00024339574156329036, -0.0002734287118073553, -0.0007197650265879929, -0.23029877245426178, -1.2049007415771484, -0.04103376343846321, -3.6481518745422363, -0.0012124576605856419, -0.3811928331851959, -3.4570634852570947e-06, -9.011816291604191e-05, -0.004777919966727495, -0.052820682525634766, -0.0006448334897868335, -0.041163962334394455, -1.1920922133867862e-06, -1.4305104514278355e-06, -8.487341256113723e-05, -0.9236854910850525, -1.5720577239990234, -0.43417230248451233, -0.09371227771043777, -0.020219987258315086, -1.0251946150674485e-05, -8.67805938469246e-05, -2.1934269170742482e-05, -0.002086011925712228, -0.006326409988105297, -3.0040289857424796e-05, -7.009260298218578e-05, -0.05876356363296509, -0.3276500701904297, -1.4133384227752686, -0.0843258649110794, -0.0001618731184862554, -0.00019047829846385866, -0.0005876483046449721, -0.054735034704208374, -1.0728830375228426e-06, -9.512448741588742e-05, -0.0015149556566029787, -0.0036682477220892906, -0.0009685831028036773, -0.0016707521863281727, -0.021690642461180687, -1.3882310390472412, -0.0005057962844148278, -0.025254633277654648, -0.0013935388997197151, -0.00017796363681554794, -0.0004549183649942279, -0.0019729926716536283, -3.194758028257638e-05, -6.318072337307967e-06, -0.00015901254664640874, -0.002960705431178212, -0.0470869280397892, -0.06683024019002914], "finish_reason": "length"}], "metrics": {"energy": 271.2141038780213, "energy_per_token": 1.0594300932735208, "time": 11.149756, "time_per_token": 0.043553734375}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError('Source directory does not exist!')\n\n    md5_list = []\n    for f in glob.glob(os.path.join(source_dir, '*')):\n        md5_list.append(hashlib.md5(open(f, 'rb').read()).hexdigest())\n\n    for i, md5 in enumerate(md5_list):\n        md5_list[i] = f'{prefix}{md5}'\n\n    target_dir = target_dir if os.path.isdir(target_dir) else os.path.join(target_dir, '')\n    for i, f in enumerate(md5_list):\n        os.rename(f, os.path.join(target_dir, f.split(':')[-1]))\n\n    return md5_list", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Source", " directory", " does", " not", " exist", "!", "')", "\n", "\n", "    ", "md", "5", "_", "list", " =", " []", "\n", "    ", "for", " f", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", ":", "\n", "        ", "md", "5", "_", "list", ".", "append", "(", "hash", "lib", ".", "md", "5", "(", "open", "(", "f", ",", " '", "rb", "')", ".", "read", "())", ".", "hex", "dig", "est", "())", "\n", "\n", "    ", "for", " i", ",", " md", "5", " in", " enumerate", "(", "md", "5", "_", "list", "):", "\n", "        ", "md", "5", "_", "list", "[", "i", "]", " =", " f", "'{", "prefix", "}{", "md", "5", "}'", "\n", "\n", "    ", "target", "_", "dir", " =", " target", "_", "dir", " if", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", ")", " else", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "')", "\n", "    ", "for", " i", ",", " f", " in", " enumerate", "(", "md", "5", "_", "list", "):", "\n", "        ", "os", ".", "rename", "(", "f", ",", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", ".", "split", "('", ":", "')", "[-", "1", "]))", "\n", "\n", "    ", "return", " md", "5", "_", "list"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -2.2104525566101074, -1.0747441053390503, -0.10567454993724823, -0.46587997674942017, -0.00034528967808000743, -0.004159846343100071, -2.438960552215576, -0.039697401225566864, -0.0017961811972782016, -0.4309191405773163, -0.0002703301142901182, -3.042907238006592, -0.007248532027006149, -0.24939952790737152, -2.2574262619018555, -0.009308273904025555, -0.03958373889327049, -0.03955268859863281, -0.37482672929763794, -0.28638333082199097, -2.3233771324157715, -0.7069148421287537, -0.06705767661333084, -4.2914423829643056e-05, -0.1257723867893219, -0.027583854272961617, -0.33169373869895935, -0.00010764019680209458, -0.00043358939001336694, -0.0029622504953294992, -0.001946580014191568, -0.0023347281385213137, -0.004526962526142597, -1.3828182090946939e-05, -4.410734163684538e-06, -0.0008492438937537372, -0.068855419754982, -0.4219765067100525, -0.1697082221508026, -0.0006000387365929782, -0.015696780756115913, -0.016868330538272858, -1.6362290382385254, -0.0015848231269046664, -0.4622398018836975, -0.9031713604927063, -0.029483195394277573, -0.02011881396174431, -0.07085096836090088, -1.8394283056259155, -0.008863037452101707, -0.00016068121476564556, -0.0024970562662929296, -4.768370445162873e-07, -0.05395272374153137, -0.21922188997268677, -0.0001958416833076626, -0.0032832310535013676, -0.10834922641515732, -0.06570231169462204, -0.009097316302359104, -0.0027295020408928394, -0.00014745102089364082, -5.435795901576057e-05, -0.016057927161455154, -0.0013652060879394412, -0.006132357753813267, -9.63164638960734e-05, -0.00015436411194968969, -0.09154673665761948, -0.010180923156440258, -0.7045586705207825, -0.0131518030539155, -0.5075035095214844, -1.4342833757400513, -0.3865107297897339, -1.115396499633789, -0.005344744771718979, -0.17146219313144684, -0.005408891476690769, -0.001561970915645361, -0.008481552824378014, -1.9073468138230965e-06, -0.00019941726350225508, -3.576214658096433e-05, -0.1080349013209343, -0.0064116958528757095, -0.0041250623762607574, -1.0988152027130127, -0.0033116282429546118, -0.07853583246469498, -0.5669387578964233, -0.004816477652639151, -0.0001551984460093081, -0.0015359044773504138, -0.00508681358769536, -1.0844104290008545, -0.37631621956825256, -0.08266671001911163, -0.13841094076633453, -0.011885068379342556, -6.878139538457617e-05, -0.15120722353458405, -0.03366513550281525, -0.1973966509103775, -0.017899878323078156, -2.5729610919952393, -0.030842170119285583, -0.564512312412262, -0.3400973379611969, -2.482393264770508, -0.0019703751895576715, -9.941560711013153e-05, -0.6203348636627197, -0.09857812523841858, -1.3470558769768104e-05, -0.00037722624256275594, -0.00028701478731818497, -0.11285620927810669, -0.006337900646030903, -0.000639710808172822, -0.00564777385443449, -2.062299427052494e-05, -9.65590606938349e-06, -0.00041571559268049896, -0.008804193697869778, -0.11782701313495636, -0.0013950864085927606, -0.2108698934316635, -0.01669331267476082, -0.5915563106536865, -0.042617637664079666, -1.5839436054229736, -0.0001736728590913117, -9.965400386136025e-05, -0.04315531626343727, -0.6319276094436646, -0.6733999252319336, -0.03034050576388836, -0.34809064865112305, -0.9326416254043579, -1.0448787212371826, -0.08986585587263107, -1.9275232553482056, -0.055835939943790436, -0.0022199528757482767, -0.00032074074260890484, -0.033476777374744415, -7.152555099310121e-07, -9.238292841473594e-05, -1.07287787614041e-05, -0.007876764051616192, -0.0022081772331148386, -0.0011620919685810804, -2.5826821327209473, -0.00019798702851403505, -1.979550838470459, -0.004922414198517799, -1.1891722679138184, -0.41534602642059326, -0.13723616302013397, -1.9192511899746023e-05, -0.000277123210253194, -0.00032074074260890484, -0.0033481037244200706, -0.0004968600696884096, -0.008527177385985851, -6.6756979322235566e-06, -3.2186455882765586e-06, -0.0012542485492303967, -0.60554438829422, -1.4969841241836548, -0.25216159224510193, -2.454115867614746, -1.076934814453125, -0.17255914211273193, -0.9412842988967896, -0.0025106121320277452, -0.21940742433071136, -0.03633072227239609, -0.31960171461105347, -0.02216343581676483, -0.04020595923066139, -0.6421765089035034, -1.0728830375228426e-06, -0.000266278104390949, -2.729855441430118e-05], "finish_reason": "stop"}], "metrics": {"energy": 254.07931615352635, "energy_per_token": 1.2333947386093511, "time": 9.651687, "time_per_token": 0.04685284951456311}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f'Source directory does not exist: {source_dir}')\n    if not os.path.isdir(source_dir):\n        raise ValueError(f'Source directory is not a directory: {source_dir}')\n    if not os.path.exists(target_dir):\n        os.makedirs(target_dir)\n    if not os.path.isdir(target_dir):\n        raise ValueError(f'Target directory is not a directory: {target_dir}')\n    md5_hash_list = []\n    for source_file in glob.glob(os.path.join(source_dir, '*')):\n        with open(source_file, 'r', encoding='utf-8') as f:\n            source_file_contents = f.read()\n            md5_hash = hashlib.md5(source_file_contents.encode('utf-8')).hexdigest()\n            md5_hash_list.append(os.path.join(target_dir, f'{md5_", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " does", " not", " exist", ":", " {", "source", "_", "dir", "}", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Source", " directory", " is", " not", " a", " directory", ":", " {", "source", "_", "dir", "}", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "dir", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Target", " directory", " is", " not", " a", " directory", ":", " {", "target", "_", "dir", "}", "')", "\n", "    ", "md", "5", "_", "hash", "_", "list", " =", " []", "\n", "    ", "for", " source", "_", "file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", ":", "\n", "        ", "with", " open", "(", "source", "_", "file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "source", "_", "file", "_", "contents", " =", " f", ".", "read", "()", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "(", "source", "_", "file", "_", "contents", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "            ", "md", "5", "_", "hash", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "md", "5", "_"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -1.3358039855957031, -0.9035071730613708, -0.12219357490539551, -2.1478700637817383, -0.000559292733669281, -0.00627156300470233, -0.04276876151561737, -0.017487503588199615, -0.001583870965987444, -7.652943895664066e-05, -0.00015877417172305286, -0.02001470886170864, -0.039368417114019394, -0.0015355474315583706, -1.5202758312225342, -2.0374059677124023, -0.052619047462940216, -0.022002287209033966, -0.0009818024700507522, -0.001562089892104268, -0.004730937071144581, -1.340217113494873, -0.005406638607382774, -7.533743337262422e-05, -1.1122372150421143, -1.2278481335670222e-05, -2.169585604860913e-05, -0.04559065029025078, -0.005020867567509413, -0.00030048147891648114, -0.06508838385343552, -1.3718379735946655, -6.496695277746767e-05, -0.10018759965896606, -0.011220214888453484, -0.06478743255138397, -0.4096923768520355, -0.22098219394683838, -0.608992874622345, -0.012304469011723995, -0.035389941185712814, -0.0887218490242958, -0.008598212152719498, -0.0008105330052785575, -0.0013222293928265572, -0.00010549465514486656, -6.067568756407127e-05, -0.0021655934397131205, -0.0024676844477653503, -0.0011922164121642709, -0.4819827675819397, -0.19672004878520966, -0.03145402669906616, -0.00844904687255621, -9.619726915843785e-05, -0.002021176042035222, -0.0008864049450494349, -0.21589738130569458, -0.00021920185827184469, -0.0010517071932554245, -1.1920922133867862e-06, -2.3841830625315197e-06, -0.011992143467068672, -0.0031805664766579866, -0.0003178806509822607, -0.03441602364182472, -3.1709168979432434e-05, -0.2621655762195587, -8.368142152903602e-05, -0.0008420973899774253, -0.0001679517881711945, -0.0025076393503695726, -8.34461570775602e-06, -3.099436753473128e-06, -0.08453785628080368, -0.012967543676495552, -0.4828319847583771, -1.1316548585891724, -0.02954893745481968, -0.025777561590075493, -7.688703772146255e-05, -0.008946689777076244, -0.004557223059237003, -0.00355124962516129, -0.0035091983154416084, -5.543078441405669e-05, -0.0018670998979359865, -4.529942543740617e-06, -1.2040065485052764e-05, -0.002468754770234227, -0.001073975581675768, -0.00017891713650897145, -0.008460985496640205, -0.046828169375658035, -2.9682672902708873e-05, -0.00724829500541091, -0.0010578995570540428, -0.005341780837625265, -0.01529277116060257, -0.006060911808162928, -0.019387394189834595, -0.0008060067193582654, -0.0014280608156695962, -0.0021856960374861956, -0.0027624324429780245, -0.0006509092636406422, -0.012251362204551697, -0.0001677133986959234, -0.00011884459672728553, -0.0013974672183394432, -0.0006649667047895491, -0.00038521020906046033, -0.7389429211616516, -3.1120920181274414, -0.005240513011813164, -0.3044559061527252, -2.230696678161621, -0.39489758014678955, -1.5435580015182495, -0.0057961721904575825, -0.028908930718898773, -0.02670757845044136, -0.10594586282968521, -0.19330981373786926, -2.4180960655212402, -0.027373353019356728, -0.21728181838989258, -0.18955856561660767, -0.13396485149860382, -1.2159273865108844e-05, -0.1174967885017395, -0.00645362539216876, -0.3647000193595886, -2.0265558760002023e-06, -6.675497570540756e-05, -6.318072337307967e-06, -0.0012986568035557866, -0.000730128725990653, -0.0023310412652790546, -1.0251946150674485e-05, -2.0265558760002023e-06, -0.0004873280122410506, -0.050673894584178925, -0.3323054313659668, -0.18374493718147278, -0.0002512616047170013, -0.011289525777101517, -0.002196044661104679, -0.8277286291122437, -0.0007312007946893573, -0.0003591130953282118, -0.004180620890110731, -7.152531907195225e-06, -3.421248038648628e-05, -0.08569268137216568, -0.07970002293586731, -1.823307991027832, -1.4748355150222778, -0.0006018257699906826, -0.04659869521856308, -0.020976947620511055, -0.07279720902442932, -0.15375329554080963, -0.006679706275463104, -0.02231977880001068, -0.0005706112715415657, -0.9395031929016113, -0.06433973461389542, -0.005248339846730232, -0.000715714821126312, -3.1774983406066895, -0.027012325823307037, -0.8490628004074097, -0.04443324729800224, -2.4619178771972656, -0.005215965677052736, -0.010134194046258926, -3.0040289857424796e-05, -5.8530047681415454e-05, -0.026605550199747086, -0.03256192430853844, -1.0641148090362549, -0.4805460274219513, -0.0005442806868813932, -0.15800732374191284, -0.04679574817419052, -0.04442332684993744, -0.019347289577126503, -0.00011860620725201443, -2.3483953555114567e-05, -0.0009397619287483394, -1.1920928244535389e-07, -0.10612308979034424, -0.02208671346306801, -6.198863957251888e-06, -2.038458114839159e-05, -0.004765818361192942, -7.343022298300639e-05, -0.0024968183133751154, -0.001544950413517654, -0.516754686832428, -0.00967929046601057, -0.003129230346530676, -0.00010668662434909493, -0.0012072187382727861, -0.044066693633794785, -0.010240866802632809, -2.6464111215318553e-05, -0.0003066784702241421, -0.0017122859135270119, -0.019589295610785484, -0.05877772718667984, -0.636212170124054, -0.00019012074335478246, -0.0005818104837089777, -0.04137180745601654, -0.016416598111391068, -0.05561269819736481, -0.002965697320178151, -0.0020102309063076973, -0.022313950583338737, -0.9597818851470947, -3.4570634852570947e-06, -0.00015901254664640874, -0.0010633773636072874, -0.03591001033782959, -0.001725257490761578, -0.019528506323695183, -4.291525328881107e-06, -4.6491513785440475e-06, -0.00021026308240834624, -0.36275744438171387, -0.2486143410205841, -1.806691288948059, -9.059865078597795e-06, -3.313963316031732e-05], "finish_reason": "length"}], "metrics": {"energy": 303.58656515026087, "energy_per_token": 1.1858850201182065, "time": 11.130246, "time_per_token": 0.0434775234375}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f\"{source_dir} is not a directory\")\n\n    all_hash_files = []\n\n    for src_file_path in glob.glob(os.path.join(source_dir, \"*.txt\")):\n        with open(src_file_path, \"r\") as src_file:\n            content = prefix + hashlib.md5(src_file.read().encode()).hexdigest() + \"\\n\" + src_file.read()\n\n        target_file_path = os.path.join(target_dir, os.path.basename(src_file_path))\n        all_hash_files.append(target_file_path)\n\n        with open(target_file_path, \"w\") as target_file:\n            target_file.write(content)\n\n    return all_hash_files", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "all", "_", "hash", "_", "files", " =", " []", "\n", "\n", "    ", "for", " src", "_", "file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " \"", "*", ".", "txt", "\"", "))", ":", "\n", "        ", "with", " open", "(", "src", "_", "file", "_", "path", ",", " \"", "r", "\"", ")", " as", " src", "_", "file", ":", "\n", "            ", "content", " =", " prefix", " +", " hash", "lib", ".", "md", "5", "(", "src", "_", "file", ".", "read", "()", ".", "encode", "())", ".", "hex", "dig", "est", "()", " +", " \"", "\\", "n", "\"", " +", " src", "_", "file", ".", "read", "()", "\n", "\n", "        ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "file", "_", "path", "))", "\n", "        ", "all", "_", "hash", "_", "files", ".", "append", "(", "target", "_", "file", "_", "path", ")", "\n", "\n", "        ", "with", " open", "(", "target", "_", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " target", "_", "file", ":", "\n", "            ", "target", "_", "file", ".", "write", "(", "content", ")", "\n", "\n", "    ", "return", " all", "_", "hash", "_", "files", "\n", "\n", "if"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -0.3795868158340454, -1.4003126621246338, -0.0058023352175951, -0.00015615197480656207, -0.00029380773776210845, -0.0674792006611824, -0.5860190391540527, -0.03379237651824951, -0.0539301335811615, -0.4314342141151428, -0.6194407939910889, -0.00019143179815728217, -0.005333836190402508, -0.3260185420513153, -0.0004326361231505871, -3.9087510108947754, -0.005602254066616297, -3.4992406368255615, -0.405982106924057, -0.8215333223342896, -0.08492688834667206, -0.32339221239089966, -0.026239020749926567, -0.7773339152336121, -0.00012861855793744326, -0.18537266552448273, -3.7346620559692383, -0.26885905861854553, -0.368468314409256, -1.770042896270752, -0.2271176129579544, -0.07853704690933228, -0.06368224322795868, -3.635817120084539e-05, -0.1246427595615387, -0.005911130458116531, -0.5294162631034851, -5.745722592109814e-05, -0.00019226610311307013, -0.0017584589077159762, -0.0017820206703618169, -0.0014467497821897268, -0.0047406661324203014, -1.811964830267243e-05, -5.364403477869928e-06, -0.0008323303773067892, -1.6618717908859253, -0.41577818989753723, -1.1278032064437866, -0.3309859037399292, -0.0024497280828654766, -0.007515844888985157, -0.0006163604557514191, -0.016838205978274345, -0.07095102220773697, -1.2960996627807617, -0.0009132028790190816, -0.00037043384509161115, -0.0037669430021196604, -3.0040289857424796e-05, -0.00013457823661156, -4.768370445162873e-07, -5.006777428206988e-06, -0.1715821921825409, -0.5380356311798096, -0.7647954821586609, -0.02849852293729782, -0.25263023376464844, -0.0002300474588992074, -0.4571521580219269, -0.05540970712900162, -0.030963068827986717, -0.016718635335564613, -0.007573345210403204, -0.012915059924125671, -1.499051570892334, -0.014243603684008121, -2.853937864303589, -0.009346656501293182, -0.11160559207201004, -0.00023910524032544345, -1.9788545614574105e-05, -0.0011400636285543442, -3.576278118089249e-07, -0.00447225384414196, -0.043039534240961075, -5.221230458118953e-05, -7.271740287251305e-06, -0.0010187203297391534, -0.0012257928028702736, -0.06745123118162155, -0.00022754464589525014, -0.0022787100169807673, -0.6728753447532654, -0.0007204797584563494, -0.0015613758005201817, -7.045020902296528e-05, -0.00031728477915748954, -0.0011099375551566482, -1.7340649366378784, -0.47025930881500244, -0.1412048637866974, -0.007446864154189825, -0.03375065699219704, -2.0854594707489014, -0.05294053629040718, -0.0001627074379939586, -4.2676016164477915e-05, -0.008836451917886734, -0.003912771120667458, -0.006255569867789745, -0.05286817252635956, -0.9852098226547241, -0.3835667371749878, -1.380908727645874, -0.008830425329506397, -0.17414537072181702, -0.10688257962465286, -0.06561143696308136, -0.0009833505610004067, -0.03967127948999405, -5.245195097813848e-06, -0.00012861855793744326, -0.00036197309964336455, -0.002561623230576515, -0.00013302871957421303, -0.022327590733766556, -2.8013790142722428e-05, -5.006777428206988e-06, -0.000289159914245829, -0.22964359819889069, -0.0005249790847301483, -0.0001991788885788992, -0.0008773530134931207, -0.05539561063051224, -5.960462772236497e-07, -7.998623186722398e-05, -0.0043741026893258095, -2.5629668016335927e-05, -3.123234637314454e-05, -0.19234448671340942, -1.645074735279195e-05, -0.05806674063205719, -0.007994202896952629, -0.31784528493881226, -2.001197338104248, -3.659658250398934e-05, -0.0002401778765488416, -1.07287787614041e-05, -0.000271879427600652, -0.0031608403660357, -0.002903533633798361, -0.003184250323101878, -0.012820087373256683, -5.125986263010418e-06, -0.00011824862303910777, -1.2159273865108844e-05, -1.9073468138230965e-06, -0.0007252446957863867, -0.0030920335557311773, -0.40398597717285156, -0.010277916677296162, -0.02618316374719143, -0.0011794761521741748, -0.00015579440514557064, -0.004724767524749041, -2.50339189733495e-06, -0.00010632903286023065, -1.4305012882687151e-05, -4.768370445162873e-07, -0.0005281960475258529, -0.027453847229480743, -0.006678285542875528, -0.03447280079126358, -0.007954821921885014, -0.00011157367407577112, -0.2177664190530777, -0.0035383019130676985, -0.0010846928926184773, -0.00038556772051379085, -0.00036042393185198307, -0.0008806879632174969, -0.004373509436845779, -2.074220174108632e-05, -2.8013790142722428e-05, -5.066266385256313e-05, -0.0038618287071585655, -9.023735765367746e-05, -0.0008927173912525177, -0.01639830321073532, -0.0008544846205040812, -0.035620272159576416, -0.009637849405407906, -0.017222609370946884, -0.006587219424545765, -0.00010322991875000298, -1.1920922133867862e-06, -5.722029527532868e-06, -6.437280717364047e-06, -0.9876219630241394, -0.00716592138633132, -0.83583664894104], "finish_reason": "stop"}], "metrics": {"energy": 232.1032300729751, "energy_per_token": 1.0408216595200677, "time": 9.644055, "time_per_token": 0.04324688340807175}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError\n    files = []\n    for fname in glob.glob(os.path.join(source_dir, '*.*')):\n        md5 = hashlib.md5()\n        with open(fname, 'rb') as f:\n            md5.update(f.read())\n        md5_hex = md5.hexdigest()\n        filename = md5_hex + os.path.basename(fname)\n        path = os.path.join(target_dir, filename)\n        with open(path, 'wb') as f:\n            f.write(bytes(f'{prefix}{md5_hex}', 'utf-8'))\n            f.write(os.path.getsize(fname) * b' ')\n        files.append(path)\n    return files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "    ", "files", " =", " []", "\n", "    ", "for", " f", "name", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", ".", "*", "'))", ":", "\n", "        ", "md", "5", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "f", "name", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "md", "5", ".", "update", "(", "f", ".", "read", "())", "\n", "        ", "md", "5", "_", "hex", " =", " md", "5", ".", "hex", "dig", "est", "()", "\n", "        ", "filename", " =", " md", "5", "_", "hex", " +", " os", ".", "path", ".", "bas", "ename", "(", "f", "name", ")", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", "\n", "        ", "with", " open", "(", "path", ",", " '", "wb", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "(", "bytes", "(", "f", "'{", "prefix", "}{", "md", "5", "_", "hex", "}'", ",", " '", "utf", "-", "8", "'))", "\n", "            ", "f", ".", "write", "(", "os", ".", "path", ".", "get", "size", "(", "f", "name", ")", " *", " b", "'", " '", ")", "\n", "        ", "files", ".", "append", "(", "path", ")", "\n", "    ", "return", " files", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -2.6732141971588135, -1.2040249109268188, -2.2694685459136963, -0.18130721151828766, -2.6211280822753906, -0.012308355420827866, -0.08197382837533951, -0.1585458219051361, -2.242354393005371, -1.7165138721466064, -0.007847077213227749, -0.12271396815776825, -2.9205850296420977e-05, -0.09706559032201767, -0.015357809141278267, -0.271468847990036, -0.0002811751910485327, -0.00017021637177094817, -0.0017368007684126496, -0.000972155889030546, -0.0019966682884842157, -0.005218574311584234, -8.34461570775602e-06, -2.2172682292875834e-05, -0.0007602662080898881, -0.14564462006092072, -0.3622373640537262, -1.5418022871017456, -1.7863173484802246, -0.0037639739457517862, -0.0006413786904886365, -0.011593586765229702, -0.004359385464340448, -2.6170992851257324, -0.005520100239664316, -0.5944252014160156, -0.027336467057466507, -0.0002588890492916107, -4.327203714638017e-05, -0.003153948113322258, -8.344646857949556e-07, -0.11352621763944626, -0.00992494449019432, -0.00312816072255373, -0.14204750955104828, -0.00110600795596838, -0.0002579356369096786, -0.0027412716299295425, -0.00015448330668732524, -0.013529746793210506, -0.0627099797129631, -0.007798345293849707, -0.011279860511422157, -0.00023827097902540118, -0.1744246780872345, -0.27438247203826904, -0.00881943665444851, -0.0013503251830115914, -0.6807622909545898, -4.1960789531003684e-05, -0.0010259846458211541, -0.0001677133986959234, -0.0028307863976806402, -0.0070516993291676044, -0.002277877414599061, -0.00014602071314584464, -0.004077455028891563, -0.007571215741336346, -0.08306579291820526, -1.1975409984588623, -0.0007658647373318672, -0.7482346296310425, -1.5299944877624512, -0.11889800429344177, -0.022704878821969032, -1.7881377516459906e-06, -5.113947918289341e-05, -0.010681597515940666, -4.625213477993384e-05, -0.00037400881410576403, -0.0009922825265675783, -0.02333582378923893, -0.032261863350868225, -3.840580701828003, -0.05245741829276085, -2.8172056674957275, -0.0018778087105602026, -0.017299355939030647, -0.0005564333405345678, -0.4323907792568207, -0.7413941025733948, -1.2397689715726301e-05, -0.0014699617167934775, -0.004945782944560051, -0.13163749873638153, -4.768370445162873e-07, -7.843663479434326e-05, -0.0017888034926727414, -0.0007680088747292757, -0.0037517414893954992, -0.009605617262423038, -0.011565305292606354, -2.8781137466430664, -0.06904412806034088, -0.007939447648823261, -2.169585604860913e-05, -0.00020740265608765185, -0.001281393808312714, -0.002827339107170701, -0.000717025191988796, -0.004367930814623833, -6.437280717364047e-06, -2.0265558760002023e-06, -0.00024863966973498464, -0.0802062526345253, -0.0008052920456975698, -0.0014697236474603415, -0.008751963265240192, -0.5945829749107361, -0.0011064843274652958, -0.0009247555863112211, -0.01612490974366665, -0.0007532381569035351, -0.013445183634757996, -0.990364670753479, -0.03061535954475403, -0.00015841660206206143, -0.15042859315872192, -0.05318698287010193, -0.001347468001767993, -0.0006152882124297321, -0.06440232694149017, -0.00023147765023168176, -0.0005529781919904053, -0.08031230419874191, -2.250058650970459, -0.07326317578554153, -2.4761722087860107, -1.15923273563385, -0.013530217111110687, -0.17164956033229828, -0.014224211685359478, -7.152555099310121e-07, -0.0060077086091041565, -5.364403477869928e-06, -1.508119821548462, -0.07841812819242477, -0.7890273332595825, -0.08714602142572403, -0.0722929835319519, -0.0011828100541606545, -0.10569460690021515, -0.007747837342321873, -0.11445288360118866, -0.20069536566734314, -0.00012933371181134135, -0.014158512465655804, -0.0015161458868533373, -1.4813417196273804, -0.00015352977789007127, -0.06747641414403915, -0.001814268296584487, -0.9535552263259888, -0.06258681416511536, -0.002233750419691205, -0.006782722659409046, -0.0007072569569572806, -0.5260364413261414, -0.03207197040319443, -0.02764253132045269, -1.1860387325286865, -0.6119628548622131, -0.00803299155086279, -0.057773564010858536, -0.8689289093017578, -0.23151911795139313, -0.004655712284147739, -0.00032693761750124395, -0.0007002285565249622, -0.027064191177487373, -0.0011781663633883, -0.0020028548315167427, -0.049489010125398636, -0.02292405441403389, -0.005638172384351492, -0.8529554009437561, -3.576278118089249e-07, -1.4305104514278355e-06, -8.070142939686775e-05, -0.00021073981770314276, -2.0124399662017822, -0.003974040970206261], "finish_reason": "stop"}], "metrics": {"energy": 257.72510810565944, "energy_per_token": 1.2272624195507593, "time": 9.033352, "time_per_token": 0.04301596190476191}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f'Source directory \"{source_dir}\" does not exist.')\n\n    paths = glob.glob(os.path.join(source_dir, '**/*'))\n    with multiprocessing.Pool() as p:\n        result = p.map(hash_file_content, paths)\n\n    os.makedirs(target_dir, exist_ok=True)\n    for path, hash_val in result:\n        new_path = os.path.join(target_dir, f'{prefix}{hash_val}{os.path.basename(path)}')\n        with open(new_path, 'w') as file:\n            file.write(prefix + hash_val + os.linesep + os.linesep + path_content)\n\n    return [new_path for _, new_path in result]", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " \"", "{", "source", "_", "dir", "}\"", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "'))", "\n", "    ", "with", " multi", "processing", ".", "Pool", "()", " as", " p", ":", "\n", "        ", "result", " =", " p", ".", "map", "(", "hash", "_", "file", "_", "content", ",", " paths", ")", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "for", " path", ",", " hash", "_", "val", " in", " result", ":", "\n", "        ", "new", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'{", "prefix", "}{", "hash", "_", "val", "}{", "os", ".", "path", ".", "bas", "ename", "(", "path", ")}", "')", "\n", "        ", "with", " open", "(", "new", "_", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "prefix", " +", " hash", "_", "val", " +", " os", ".", "lines", "ep", " +", " os", ".", "lines", "ep", " +", " path", "_", "content", ")", "\n", "\n", "    ", "return", " [", "new", "_", "path", " for", " _", ",", " new", "_", "path", " in", " result", "]", "\n", "\n", "def"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -1.3358039855957031, -0.9035071730613708, -0.12219357490539551, -2.789486885070801, -0.0004127365828026086, -0.0007201223634183407, -8.594620157964528e-05, -0.00013052565918769687, -0.0045656487345695496, -0.520373523235321, -0.00038354191929101944, -0.004934750963002443, -0.5644597411155701, -0.01386240217834711, -0.0008630603551864624, -0.2973578870296478, -0.00027497802511788905, -2.891536235809326, -0.1000257134437561, -0.7103598117828369, -5.149708886165172e-05, -0.02066837064921856, -0.011508152820169926, -0.30870795249938965, -0.00011896379146492109, -0.00010895135346800089, -0.0040006376802921295, -0.0012080521555617452, -0.0013959197094663978, -0.008270775899291039, -1.1444026313256472e-05, -8.940656698541716e-06, -0.0005629861843772233, -0.07103052735328674, -0.9632353782653809, -0.3669680058956146, -1.2437045574188232, -0.018974579870700836, -0.367167204618454, -3.9445724487304688, -3.249014377593994, -0.017343642190098763, -0.007144025061279535, -0.0600593276321888, -0.5362529158592224, -8.093983342405409e-05, -2.382364511489868, -0.008209886029362679, -0.015837477520108223, -0.0023390096612274647, -2.2481226921081543, -0.100960873067379, -0.08066284656524658, -0.00010394509445177391, -0.11628920584917068, -0.029495349153876305, -0.7648240327835083, -0.3783220648765564, -0.35428979992866516, -2.4540228843688965, -0.33072808384895325, -0.013335675932466984, -0.01118449680507183, -0.16718213260173798, -0.005768319591879845, -0.7455511093139648, -0.026173293590545654, -3.822118043899536, -0.00044764988706447184, -0.025834601372480392, -5.4596363042946905e-05, -0.00047565114800818264, -0.0015907741617411375, -0.023339666426181793, -1.9073304429184645e-05, -8.940656698541716e-06, -0.008352821692824364, -0.0069340309128165245, 0.0, -2.5152843591058627e-05, -0.000331704446580261, -0.00040546778473071754, -0.0037405777256935835, -0.03132683038711548, -0.23182085156440735, -1.2798995971679688, -0.6378883719444275, -0.061965711414813995, -0.844298243522644, -0.2960534691810608, -2.8524909019470215, -0.02936767414212227, -0.06313356012105942, -0.021300017833709717, -0.0022462394554167986, -0.002220190828666091, -1.5088787078857422, -0.0016553997993469238, -0.20047412812709808, -0.002185577293857932, -0.09235139191150665, -6.9141146923357155e-06, -0.00012420836719684303, -0.0054233563132584095, -0.0042860317043960094, -0.0003121604095213115, -0.01424900908023119, -1.0132738680113107e-05, -9.536738616588991e-07, -0.0001392267586197704, -1.869947075843811, -0.19251422584056854, -0.12022115290164948, -0.03133653849363327, -0.09965783357620239, -0.016477810218930244, -0.0007683662115596235, -1.1981258392333984, -0.1574474424123764, -7.414542778860778e-05, -0.0014556775568053126, -0.001634215353988111, -0.03457794710993767, -9.536738616588991e-07, -2.4437606043647975e-05, -0.002787991426885128, -0.002203776268288493, -0.0006313714548014104, -0.0008885487914085388, -0.010306705720722675, -0.3058663606643677, -0.0021793919149786234, -0.00022957073815632612, -0.2679140269756317, -3.528532761265524e-05, -5.364403477869928e-06, -0.0005067494930699468, -0.03393896296620369, -0.14956362545490265, -0.12533172965049744, -0.00015722469834145159, -2.8598108291625977, -0.014795340597629547, -0.0010206258157268167, -0.0007325111655518413, -0.04243301600217819, -0.0001720042055239901, -0.00609823502600193, -0.031781695783138275, -0.8924684524536133, -0.04560044780373573, -0.018822157755494118, -0.008820618502795696, -0.0018341400427743793, -0.0652100145816803, -0.31364214420318604, -0.0007994554471224546, -0.10486487299203873, -1.597391747054644e-05, -0.20562787353992462, -1.480733036994934, -0.0012907992349937558, -0.7818863987922668, -8.022463589441031e-05, -0.10082400590181351, -0.610724687576294, -2.599428653717041, -0.3459912836551666, -0.9434859156608582, -0.0036722859367728233, -0.5039855241775513, -0.5762256979942322, -0.026923557743430138, -0.35098645091056824, -0.6180436015129089, -0.0006637753685936332, -0.006115178111940622, -0.04653065279126167, -0.6373248100280762, -0.0017877324717119336, -0.032661959528923035, -0.00010775939153973013, -0.00043585337698459625, -0.0059400456957519054, -0.009483643807470798, -0.03429462015628815, -0.015152585692703724, -0.00257422705180943, -0.05627269297838211], "finish_reason": "stop"}], "metrics": {"energy": 268.56944498348224, "energy_per_token": 1.2850212678635513, "time": 9.859454, "time_per_token": 0.047174421052631574}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f\"{source_dir} is not a valid directory!\")\n\n    def hash_file(path):\n        \"\"\"\n        Computes the MD5 hash of a file and returns the path to a new file with the hash prepended.\n\n        Parameters:\n        - path (str): The path to the file to hash.\n\n        Returns:\n        - str: The path to the new file with the hash prepended.\n\n        Requirements:\n        - glob\n        - hashlib\n\n        Raises:\n        FileNotFoundError if the file does not exist.\n        \"\"\"\n        if not os.path.exists(path):\n            raise FileNotFoundError(f\"{path} is not a valid file!\")\n\n        with open(path, 'rb') as f:\n            hash_object = hashlib.md5()\n            hash_object.update(f.read())\n            file_name, extension = os.path.splitext(path)\n            hash_path = f\"{file_name}", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "source", "_", "dir", "}", " is", " not", " a", " valid", " directory", "!", "\"", ")", "\n", "\n", "    ", "def", " hash", "_", "file", "(", "path", "):", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "Comput", "es", " the", " MD", "5", " hash", " of", " a", " file", " and", " returns", " the", " path", " to", " a", " new", " file", " with", " the", " hash", " prep", "ended", ".", "\n", "\n", "        ", "Parameters", ":", "\n", "        ", "-", " path", " (", "str", "):", " The", " path", " to", " the", " file", " to", " hash", ".", "\n", "\n", "        ", "Returns", ":", "\n", "        ", "-", " str", ":", " The", " path", " to", " the", " new", " file", " with", " the", " hash", " prep", "ended", ".", "\n", "\n", "        ", "Requ", "irements", ":", "\n", "        ", "-", " glob", "\n", "        ", "-", " hash", "lib", "\n", "\n", "        ", "Ra", "ises", ":", "\n", "        ", "File", "NotFound", "Error", " if", " the", " file", " does", " not", " exist", ".", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "            ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "path", "}", " is", " not", " a", " valid", " file", "!", "\"", ")", "\n", "\n", "        ", "with", " open", "(", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "hash", "_", "object", ".", "update", "(", "f", ".", "read", "())", "\n", "            ", "file", "_", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "path", ")", "\n", "            ", "hash", "_", "path", " =", " f", "\"", "{", "file", "_", "name", "}"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -0.3795868158340454, -1.4003126621246338, -0.0058023352175951, -0.00015615197480656207, -0.00029380773776210845, -0.0674792006611824, -0.5860190391540527, -0.03379237651824951, -0.0539301335811615, -1.0959010124206543, -0.08841395378112793, -2.7126009464263916, -0.02848554588854313, -0.0003383779258001596, -0.00412019481882453, -0.3858904540538788, -0.00038413776201196015, -4.179548263549805, -1.5504120588302612, -0.03450355306267738, -0.46823039650917053, -0.054644741117954254, -1.3033332824707031, -0.29068613052368164, -0.005164140835404396, -0.0017196642002090812, -1.9986376762390137, -0.0034544337540864944, -9.929640509653836e-05, -0.34595930576324463, -0.007301550358533859, -0.5042940378189087, -0.0005470209871418774, -0.09955219179391861, -0.032183486968278885, -7.760223525110632e-05, -0.007916740141808987, -0.02751114033162594, -0.9125466346740723, -0.10077615082263947, -0.7720907926559448, -0.1659654676914215, -0.9777263402938843, -3.6964359283447266, -0.3365214467048645, -2.0243890285491943, -0.17763034999370575, -0.05132322758436203, -0.22919875383377075, -0.11199009418487549, -0.42450985312461853, -0.31989818811416626, -0.00025996167096309364, -0.20826587080955505, -0.018146449699997902, -0.6574729084968567, -0.0004854215949308127, -0.10116548836231232, -0.005348064936697483, -0.00010680581908673048, -0.005387193523347378, -0.031037958338856697, -0.0042235939763486385, -0.01134009100496769, -0.0021096847485750914, -0.001531619462184608, -0.1165013238787651, -0.08988667279481888, -0.05202634632587433, -0.03691096603870392, -0.16942498087882996, -0.17009183764457703, -1.9481449127197266, -0.06726456433534622, -0.09345369040966034, -0.029584815725684166, -7.593343616463244e-05, -0.005112076178193092, -0.0014031813479959965, -0.0005411829333752394, -0.0004707658663392067, -0.008592893369495869, -0.14702723920345306, -0.002905316650867462, -0.027720104902982712, -0.0478292852640152, -0.015004864893853664, -0.20400160551071167, -0.4034624397754669, -0.017276858910918236, -0.18647663295269012, -0.009931790642440319, -0.1961621344089508, -0.047146063297986984, -9.023735765367746e-05, -0.03259723260998726, -0.007400124799460173, -0.8875985741615295, -0.0014243705663830042, -1.222752571105957, -0.007537378463894129, -0.0008577005355618894, -0.0010350352386012673, -0.002033786615356803, -0.0032742007169872522, -1.668318271636963, -0.04551991820335388, -0.04134630039334297, -0.10214629769325256, -0.07834427803754807, -0.00023898606013972312, -0.024139653891324997, -0.8924679160118103, -0.000649956171400845, -1.004349708557129, -0.000834117061458528, -0.00362489465624094, -0.002594797173514962, -0.0011038646334782243, -0.9579751491546631, -0.004506788216531277, -0.00042429505265317857, -0.04047456756234169, -0.04908650740981102, -0.35155168175697327, -0.13494662940502167, -0.000311802898067981, -0.00309750041924417, -0.10924489796161652, -0.0043865651823580265, -0.32619982957839966, -0.09327691793441772, -7.021180499577895e-05, -8.583032467868179e-06, -5.173549288883805e-05, -0.04569201543927193, -0.48974788188934326, -0.031254276633262634, -0.01331767812371254, -0.0005653690313920379, -9.786603914108127e-05, -0.0035088418517261744, -1.5611542463302612, -4.768258077092469e-05, -0.0012442474253475666, -0.00463838828727603, -0.003664446994662285, -0.0003398079425096512, -0.0043179611675441265, -0.0006398299592547119, -5.936446541454643e-05, -3.1709168979432434e-05, -0.014026278629899025, -0.02476050704717636, -0.011602895334362984, -0.15111161768436432, -0.00986569095402956, -0.00228739227168262, -0.6017080545425415, -0.010639491491019726, -0.0565909817814827, -0.013465531170368195, -0.12313047796487808, -0.06181846931576729, -0.003335509682074189, -6.925819616299123e-05, -0.0006743779522366822, -0.17972014844417572, -0.00024637524620629847, -1.150590419769287, -0.0023016647901386023, -0.00015925093612167984, -0.0012148389359936118, -0.007413732353597879, -0.25022587180137634, -0.046342883259058, -0.003600901225581765, -0.0001802282058633864, -0.41381943225860596, -0.02057156339287758, -0.006243131123483181, -0.0009273757459595799, -1.6304234266281128, -0.09430888295173645, -1.9166827201843262, -0.0008378094644285738, -0.0005277194431982934, -4.0531076592742465e-06, -1.1086402082582936e-05, -0.0015345951542258263, -1.1920928244535389e-07, -0.22524476051330566, -0.004627946298569441, -0.009614118374884129, -0.27374178171157837, -0.00014602071314584464, -0.003947562538087368, -5.173549288883805e-05, -3.731181277544238e-05, -0.00269906735047698, -0.009026671759784222, -0.00029488030122593045, -0.00010764019680209458, -0.002858720952644944, -0.007285455707460642, -0.0806514099240303, -2.574963092803955, -0.015243462286889553, -2.1319634914398193, -1.2185306549072266, -1.4915167093276978, -0.004626285284757614, -0.03807985782623291, -2.622600959512056e-06, -4.100715523236431e-05, -0.008898366242647171, -0.003020013216882944, -3.659658250398934e-05, -2.3841855067985307e-07, -6.258291978156194e-05, -0.16671082377433777, -0.003777275327593088, -0.01670972630381584, -0.019635234028100967, -1.6398594379425049, -0.01595187373459339, -1.723811149597168, -0.0015074567636474967, -0.44777044653892517, -0.1758628934621811, -0.004541321657598019, -0.13406534492969513, -2.47952248173533e-05, -0.00010227633902104571, -0.9541257619857788], "finish_reason": "length"}], "metrics": {"energy": 302.1303426303865, "energy_per_token": 1.1801966508999473, "time": 11.761963, "time_per_token": 0.04594516796875}}
{"outputs": [{"text": "try:\n        files = glob.glob(source_dir + '/*')\n    except FileNotFoundError:\n        return []\n\n    hashed_files = []\n    for file in files:\n        hash_value = hashlib.md5()\n        with open(file, 'rb') as file_to_hash:\n            for chunk in iter(lambda: file_to_hash.read(4096), b\"\"):\n                hash_value.update(chunk)\n        with open(os.path.join(target_dir, '{0}{1}'.format(prefix, os.path.basename(file))), 'wb') as new_file:\n            new_file.write(hash_value.hexdigest().encode() + os.linesep)\n            new_file.write(file_to_hash.read())\n        hashed_files.append(os.path.join(target_dir, '{0}{1}'.format(prefix, os.path.basename(file))))\n\n    return hashed_files", "tokens": ["try", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "source", "_", "dir", " +", " '", "/*", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "return", " []", "\n", "\n", "    ", "h", "ashed", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "hash", "_", "value", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " file", "_", "to", "_", "hash", ":", "\n", "            ", "for", " chunk", " in", " iter", "(", "lambda", ":", " file", "_", "to", "_", "hash", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "hash", "_", "value", ".", "update", "(", "chunk", ")", "\n", "        ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "{", "0", "}{", "1", "}'", ".", "format", "(", "prefix", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", ")))", ",", " '", "wb", "')", " as", " new", "_", "file", ":", "\n", "            ", "new", "_", "file", ".", "write", "(", "hash", "_", "value", ".", "hex", "dig", "est", "()", ".", "encode", "()", " +", " os", ".", "lines", "ep", ")", "\n", "            ", "new", "_", "file", ".", "write", "(", "file", "_", "to", "_", "hash", ".", "read", "())", "\n", "        ", "h", "ashed", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "{", "0", "}{", "1", "}'", ".", "format", "(", "prefix", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "))", "\n", "\n", "    ", "return", " has", "hed", "_", "files", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.681649684906006, -0.0006026597693562508, -0.004310483578592539, -0.004646456800401211, -2.5642216205596924, -0.18629083037376404, -0.2302643060684204, -7.080780778778717e-05, -0.02598247304558754, -0.02486051432788372, -1.2464320659637451, -3.2186455882765586e-06, -0.000176652567461133, -0.11000148206949234, -0.4341571033000946, -0.20201507210731506, -0.3164164423942566, -0.030115200206637383, -0.3170790672302246, -0.0012421043356880546, -0.07440054416656494, -0.00011276562872808427, -8.34461570775602e-06, -0.19930124282836914, -0.017178667709231377, -0.0008311392739415169, -3.0829856395721436, -0.6394959092140198, -0.02296704426407814, -0.5654633641242981, -0.00017915551143232733, -2.8488872051239014, -0.050912175327539444, -0.04871371015906334, -0.13670966029167175, -0.022729583084583282, -0.03645119071006775, -0.011086412705481052, -0.36518266797065735, -0.0980132445693016, -0.45911040902137756, -0.4813324213027954, -0.002635579090565443, -0.000356253091013059, -0.0026106107980012894, -0.00827089324593544, -2.1617770195007324, -0.3722212314605713, -1.0707091093063354, -0.0027865648735314608, -0.1381768435239792, -0.004726665560156107, -3.8742269680369645e-05, -0.0025788643397390842, -9.536738616588991e-07, -0.9101531505584717, -0.013894145376980305, -0.027958469465374947, -0.22281953692436218, -0.0009565545478835702, -0.00044252615771256387, -0.003175456775352359, -0.022026775404810905, -0.10461978614330292, -0.01740889810025692, -0.006670706905424595, -0.0001736728590913117, -2.517616033554077, -0.49082687497138977, -1.927791714668274, -0.0007595514762215316, -0.05002481862902641, -0.0003232433518860489, -0.009946898557245731, -0.001932421582750976, -1.354050636291504, -0.25935426354408264, -0.0038564850110560656, -0.021208522841334343, -9.357491217087954e-05, -0.018779339268803596, -0.002363390289247036, -0.002216741442680359, -5.4238757002167404e-05, -7.271740287251305e-06, -1.0251946150674485e-05, -4.410734163684538e-06, -1.1324817933200393e-05, -0.0058921691961586475, -0.0024209495168179274, -0.48699620366096497, -0.00586668960750103, -0.003033918561413884, -0.0006466205231845379, -0.00761984009295702, -0.00020704510097857565, -0.003773712320253253, -1.5966401100158691, -0.0001370812824461609, -0.0002766464895103127, -0.014904570765793324, -0.0007014198345132172, -0.006712744012475014, -0.00017855956684798002, -0.00018034738604910672, -7.545663538621739e-05, -0.00017534149810671806, -0.0001062098381225951, -0.0004629017203114927, -0.0006368515896610916, -0.003201242769137025, -0.40331846475601196, -2.4609711170196533, -0.003255189396440983, -0.028743768110871315, -2.338563919067383, -9.179073458653875e-06, -0.0008164886385202408, -0.004105235915631056, -0.007638887036591768, -0.0014547251630574465, -0.008442072197794914, -5.602820692729438e-06, -4.410734163684538e-06, -0.0008842610404826701, -3.329352378845215, -1.2866305112838745, -1.0357033014297485, -0.6178286671638489, -0.0029125672299414873, -0.12218692898750305, -0.0014034194173291326, -0.0016194575000554323, -0.0005411829333752394, -0.07790283113718033, -0.005769978743046522, -1.2183334827423096, -6.5205356804654e-05, -0.0002300474588992074, -0.001708239782601595, -0.07320345938205719, -1.3589766240329482e-05, -0.00018487652414478362, -0.007030155509710312, -0.08042934536933899, -0.0016279076226055622, -0.04863116145133972, -0.9020177721977234, -0.03165743127465248, -0.0039550429210066795, -0.9860811829566956, -0.009150591678917408, -0.015663335099816322, -0.006453388370573521, -0.0019470559200271964, -0.0033269552513957024, -0.055607058107852936, -5.090107151772827e-05, -0.0025097797624766827, -0.00010382589971413836, -0.0012075759004801512, -0.03671632707118988, -0.27660703659057617, -0.011328422464430332, -0.0009280903614126146, -0.00016175392374861985, -1.4353549480438232, -1.9907753085135482e-05, -1.3470558769768104e-05, -0.048909205943346024, -0.023386482149362564, -0.0007351318490691483, -1.3745659589767456, -0.012615873478353024, -1.7804651260375977, -0.0029601112473756075, -0.08005440980195999, -7.390948667307384e-06, -0.9444910287857056, -0.011555525474250317, -0.024805977940559387, -0.12108882516622543, -0.00016532962035853416, -0.0018534163245931268, -0.00010918975021922961, -0.018406184390187263, -0.008636267855763435, -0.8691558241844177, -0.34496673941612244, -0.0034454050473868847, -8.010543388081715e-05, -0.00621363241225481, -0.002463641343638301, -0.0019255208317190409, -0.034100618213415146, -0.021493833512067795, -0.24836961925029755, -0.015556182712316513, -2.062299427052494e-05, -2.5510462364763953e-05, -0.0012174582807347178, -0.0033224401995539665, -0.0004881620698142797, -0.04961073771119118, -0.13133710622787476, -0.0004573014739435166, -0.00029905137489549816, -0.00038771264371462166, -0.03125288709998131, -0.0033312325831502676, -0.004271313082426786, -1.1920858014491387e-05, -2.7418097943154862e-06, -0.0006187431863509119, -0.12174753844738007, -0.003960979636758566, -0.0003725788265001029, -0.01192900724709034, -0.0002964295563288033, -0.0015392372151836753, -0.0002184867626056075, -0.0004668337933253497, -8.284702198579907e-05, -0.0028660909738391638, -0.000169382052263245, -0.009631002321839333, -0.00013457823661156, -0.00013267113536130637, -6.472854875028133e-05, -0.0009529816452413797, -0.0003252692404203117, -6.246371776796877e-05, -0.00043132537393830717, -0.0019359909929335117, -0.0005539313424378633, -0.0014718662714585662, -1.0367647409439087, -0.0024851649068295956, -0.015705933794379234, -0.012929181568324566, -3.361645576660521e-05, -0.00011634149996098131, -7.867782187531702e-06, -0.7704487442970276, -3.576278118089249e-07, -1.5497195136049413e-06, -6.758938252460212e-05, -0.0001995364436879754, -2.4035370349884033, -0.004560189787298441], "finish_reason": "stop"}], "metrics": {"energy": 273.8743160552981, "energy_per_token": 1.0954972642211924, "time": 10.926048, "time_per_token": 0.043704191999999996}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f'Source directory \"{source_dir}\" does not exist.')\n\n    for filename in glob.glob(os.path.join(source_dir, '**/*'), recursive=True):\n        with open(filename, 'rb') as file:\n            # The entire file is hashed.\n            hash_object = hashlib.md5()\n            hash_object.update(file.read())\n            # The content of the file is hashed as well.\n            content = hash_object.hexdigest()\n\n        # Write the modified content.\n        new_filename = f'{os.path.join(target_dir, prefix)} {os.path.basename(filename)}'\n        with open(new_filename, 'w') as file:\n            file.write(content)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " \"", "{", "source", "_", "dir", "}\"", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", "')", ",", " recursive", "=", "True", "):", "\n", "        ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "#", " The", " entire", " file", " is", " has", "hed", ".", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "hash", "_", "object", ".", "update", "(", "file", ".", "read", "())", "\n", "            ", "#", " The", " content", " of", " the", " file", " is", " has", "hed", " as", " well", ".", "\n", "            ", "content", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "#", " Write", " the", " modified", " content", ".", "\n", "        ", "new", "_", "filename", " =", " f", "'{", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " prefix", ")}", " {", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")}", "'", "\n", "        ", "with", " open", "(", "new", "_", "filename", ",", " '", "w", "')", " as", " file", ":", "\n", "            ", "file", ".", "write", "(", "content", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -1.3358039855957031, -0.9035071730613708, -0.12219357490539551, -2.789486885070801, -0.0004127365828026086, -0.0007201223634183407, -8.594620157964528e-05, -0.00013052565918769687, -0.0045656487345695496, -0.520373523235321, -0.00038354191929101944, -0.004934750963002443, -0.5644597411155701, -0.01386240217834711, -0.0008630603551864624, -0.2973578870296478, -0.00027497802511788905, -3.6129565238952637, -1.0644041299819946, -0.0069813840091228485, -0.165037140250206, -2.169585604860913e-05, -0.18504104018211365, -0.00963029358536005, -0.17547087371349335, -0.0004439560289029032, -4.017272294731811e-05, -0.0037563731893897057, -0.0004159538948442787, -0.0011187491472810507, -0.002745432546362281, -1.2755313036905136e-05, -1.0251946150674485e-05, -0.00047708096099086106, -0.06627178937196732, -0.9117579460144043, -0.4048765301704407, -1.2302080392837524, -0.00028153270250186324, -0.0027778868097811937, -0.0014487734297290444, -0.004354163073003292, -0.0033274304587394, -0.007639714982360601, -0.023225413635373116, -1.0335437059402466, -0.0014766276581212878, -0.00016127715934999287, -0.0022664591670036316, -0.0488702692091465, -0.05907499045133591, -0.19459182024002075, -0.00952072162181139, -0.0001433984871255234, -1.0244414806365967, -0.057169049978256226, -0.011660868301987648, -0.0023278300650417805, -3.16677188873291, -4.2754645347595215, -4.757526397705078, -0.2480737566947937, -0.7778502106666565, -1.9007956981658936, -0.00028534632292576134, -1.9970154762268066, -0.34043124318122864, -0.000880568812135607, -1.2045472860336304, -0.14582236111164093, -1.8448500633239746, -0.0024062031880021095, -0.0005397531786002219, -2.2291887944447808e-05, -1.1801649634435307e-05, -0.0025811234954744577, -3.576278118089249e-07, -0.4548405110836029, -0.0041681560687720776, -0.013284505344927311, -0.3499176502227783, -0.00034350217902101576, -0.01616819202899933, -0.00011991735664196312, -4.1960789531003684e-05, -0.002457814523950219, -0.006333517376333475, -0.0002579356369096786, -0.00013124081306159496, -0.0023309222888201475, -0.007179650943726301, -0.10929052531719208, -3.062147855758667, -0.9131342172622681, -3.707840919494629, -1.1537349224090576, -0.16227707266807556, -0.13799969851970673, -0.13753893971443176, -0.5442391633987427, -0.00015317220822907984, -3.240462303161621, -0.6618478894233704, -0.37010958790779114, -0.05637241527438164, -0.0033189947716891766, -2.106571674346924, -0.295566588640213, -1.333193063735962, -0.04183104634284973, -0.0038580286782234907, -6.3774932641536e-05, -0.09713611751794815, -9.715084888739511e-05, -0.00025769727653823793, -0.0013854438439011574, -0.4116367995738983, -1.2474398612976074, -0.4803312420845032, -0.8918827772140503, -2.4723241329193115, -0.3403705060482025, -1.6074492931365967, -0.270369291305542, -2.6142797470092773, -0.029860224574804306, -0.0008580578723922372, -1.6133019924163818, -0.006307811941951513, -0.2930443584918976, -0.0022631289903074503, -1.190530776977539, -0.18622571229934692, -2.1004648208618164, -5.721882189391181e-05, -0.0017081208061426878, -0.0013861581683158875, -1.11786687374115, -0.001128394273109734, -0.025972949340939522, -1.9788545614574105e-05, -5.364403477869928e-06, -0.0015748253790661693, -1.9146320819854736, -2.859969139099121, -0.5950019359588623, -1.7529069185256958, -0.0012502004392445087, -0.00029452278977259994, -0.0027308098506182432, -0.07650765031576157, -1.1920928244535389e-07, -0.0001045410826918669, -0.003782738232985139, -0.007288769353181124, -0.0029996896628290415, -0.00982461217790842, -0.022395553067326546, -0.24957044422626495, -0.0009526243666186929, -0.0007677706307731569, -0.008929676376283169, -4.887569048150908e-06, -1.1801649634435307e-05, -0.0009514334378764033, -0.008804075419902802, -0.23402440547943115, -0.17887747287750244, -0.0003771070914808661, -0.7398598790168762, -0.011933483183383942, -0.0009757286752574146, -0.0005895545473322272, -0.025881880894303322, -6.294052582234144e-05, -0.004877098836004734, -0.004212079104036093, -0.10598832368850708, -2.0244951248168945, -3.576278118089249e-07, -1.1920922133867862e-06, -4.303362584323622e-05, -0.00017295771976932883, -0.15935802459716797], "finish_reason": "stop"}], "metrics": {"energy": 260.0794406433105, "energy_per_token": 1.2748992188397572, "time": 9.047827, "time_per_token": 0.044352093137254904}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(f'Source directory {source_dir} does not exist')\n\n    file_paths = glob.glob(f'{source_dir}/*.txt')\n    result = []\n\n    for file_path in file_paths:\n        with open(file_path, 'r') as f:\n            content = f.read()\n        hash_obj = hashlib.md5(content.encode())\n        hash_value = hash_obj.hexdigest()\n        new_content = f'{prefix}{hash_value}\\n{content}'\n        new_file = f'{target_dir}/{os.path.basename(file_path)}'\n        with open(new_file, 'w') as new_f:\n            new_f.write(new_content)\n        result.append(new_file)\n    return result", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Source", " directory", " {", "source", "_", "dir", "}", " does", " not", " exist", "')", "\n", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "f", "'{", "source", "_", "dir", "}", "/*", ".", "txt", "')", "\n", "    ", "result", " =", " []", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "content", " =", " f", ".", "read", "()", "\n", "        ", "hash", "_", "obj", " =", " hash", "lib", ".", "md", "5", "(", "content", ".", "encode", "())", "\n", "        ", "hash", "_", "value", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "        ", "new", "_", "content", " =", " f", "'{", "prefix", "}{", "hash", "_", "value", "}\\", "n", "{", "content", "}'", "\n", "        ", "new", "_", "file", " =", " f", "'{", "target", "_", "dir", "}/{", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")}", "'", "\n", "        ", "with", " open", "(", "new", "_", "file", ",", " '", "w", "')", " as", " new", "_", "f", ":", "\n", "            ", "new", "_", "f", ".", "write", "(", "new", "_", "content", ")", "\n", "        ", "result", ".", "append", "(", "new", "_", "file", ")", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -0.4070545732975006, -1.355796456336975, -1.4870117902755737, -0.142099529504776, -0.4068669080734253, -0.0009700122172944248, -0.00011467275908216834, -0.000125281119835563, -0.048518966883420944, -0.5907561779022217, -0.0007474012672901154, -0.006485841237008572, -0.9070366024971008, -0.0013194911880418658, -0.3601062297821045, -0.00032908268622122705, -2.3000781536102295, -0.0846276804804802, -0.2364371418952942, -0.013577964156866074, -0.24378728866577148, -5.495397272170521e-05, -0.018623610958456993, -0.01194844301789999, -1.800458312034607, -0.138119637966156, -0.0162070170044899, -1.0609570381348021e-05, -7.867782187531702e-06, -0.6813629269599915, -0.04822172597050667, -1.1682299375534058, -0.20763058960437775, -0.025235222652554512, -0.01921948231756687, -0.40913280844688416, -2.8461334705352783, -0.28493738174438477, -0.03554273396730423, -0.0028746493626385927, -0.5585676431655884, -7.295342220459133e-05, -0.11393126100301743, -0.5684690475463867, -0.05680353194475174, -0.007932114414870739, -0.0009981179609894753, -0.004401163663715124, -4.887569048150908e-06, -1.1324817933200393e-05, -9.083335316972807e-05, -0.001255200942978263, -0.00747419660910964, -0.39929163455963135, -0.0006856950931251049, -0.0003081085451412946, -0.0017422748496755958, -9.190614218823612e-05, -0.00011157367407577112, -0.14506199955940247, -0.0795014277100563, -0.3119044303894043, -0.13172057271003723, -0.00026806574896909297, -1.2044355869293213, -0.025027714669704437, -0.00325055536814034, -0.0017064546700567007, -0.49274009466171265, -0.002683136146515608, -0.042588505893945694, -0.00011264643399044871, -5.304672595229931e-05, -0.012832327745854855, -0.03011357970535755, -2.333367347717285, -0.9069242477416992, -0.08059586584568024, -1.6447317600250244, -0.0008463853155262768, -0.00044324109330773354, -3.4570634852570947e-06, -8.4638240878121e-06, -0.002477197675034404, -7.152555099310121e-07, -1.5159655809402466, -0.0049993982538580894, -0.003965254407376051, -0.001860198681242764, -0.30708545446395874, -0.036284852772951126, -0.007398113142699003, -0.5953676700592041, -0.04506339877843857, -1.1291701793670654, -0.0016142207896336913, -0.025097934529185295, -0.0008201810996979475, -2.0861407392658293e-05, -1.1205610462639015e-05, -0.020180851221084595, -4.2676016164477915e-05, -0.0001896439935080707, -0.0011965028243139386, -0.010932430624961853, -0.10953693091869354, -0.619755744934082, -0.00025078488397412, -2.908008098602295, -0.0009211826254613698, -0.18686723709106445, -0.1880490630865097, -0.005255929194390774, -0.17436298727989197, -0.0046241492964327335, -0.0007307243067771196, -0.000348268891684711, -0.30644845962524414, -0.004872472491115332, -0.11474574357271194, -0.0038902093656361103, -0.029621271416544914, -0.004693325143307447, -0.22811460494995117, -0.5288717150688171, -0.00016056202002801, -0.31012994050979614, -2.532701015472412, -1.2411646842956543, -0.040240656584501266, -0.0626622885465622, -4.529942543740617e-06, -3.576272320060525e-06, -0.11627456545829773, -0.15104888379573822, -1.1920922133867862e-06, -0.001319729257375002, -0.0007977878558449447, -0.02558968774974346, -1.3470558769768104e-05, -1.2397689715726301e-05, -0.001473889802582562, -6.782778655178845e-05, -5.6980417866725475e-05, -0.02609141916036606, -0.12698736786842346, -0.007750439457595348, -0.03939947485923767, -0.1272766888141632, -0.0005519058904610574, -0.00013493580627255142, -0.0008429311565123498, -5.483612312673358e-06, -5.8412379075889476e-06, -0.0003121604095213115, -0.002358989790081978, -0.0020843464881181717, -0.00822797603905201, -0.0008406681008636951, -2.3468215465545654, -0.03564189746975899, -0.22067716717720032, -0.0003583981015253812, -0.0004632591735571623, -0.0006870055221952498, -0.0033965774346143007, -2.002696055569686e-05, -0.0007226239540614188, -8.4638240878121e-06, -0.0047486149705946445, -0.0001456631434848532, -0.0005022218101657927, -2.3841830625315197e-06, -8.821448318485636e-06, -0.003994225990027189, -0.0004912600270472467, -0.15293817222118378, -0.040796320885419846, -0.0018502036109566689, -0.00018594920402392745, -0.000662703241687268, -0.007196812424808741, -6.794906312279636e-06, -8.809178689261898e-05, -0.00034481301554478705, -0.0009494088008068502, -1.0108532905578613, -0.022345542907714844, -0.003089062636718154, -0.7979172468185425, -0.012912235222756863, -0.6981444358825684], "finish_reason": "stop"}], "metrics": {"energy": 255.58460346412642, "energy_per_token": 1.2055877521892755, "time": 9.253937, "time_per_token": 0.043650646226415096}}
{"outputs": [{"text": "if not os.path.isdir(source_dir):\n        raise FileNotFoundError(source_dir)\n\n    hash_list = []\n\n    for f in glob.glob(source_dir + '/*'):\n        with open(f, \"rb\") as file:\n            hash_list.append(f)\n            hash_obj = hashlib.md5(file.read())\n            hash_str = f\"{prefix}{hash_obj.hexdigest()}\"\n            new_file = f\"{target_dir}/{os.path.basename(f)}\"\n            with open(new_file, \"w+\") as new_file:\n                new_file.write(hash_str)\n    return hash_list", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "source", "_", "dir", ")", "\n", "\n", "    ", "hash", "_", "list", " =", " []", "\n", "\n", "    ", "for", " f", " in", " glob", ".", "glob", "(", "source", "_", "dir", " +", " '", "/*", "')", ":", "\n", "        ", "with", " open", "(", "f", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "            ", "hash", "_", "list", ".", "append", "(", "f", ")", "\n", "            ", "hash", "_", "obj", " =", " hash", "lib", ".", "md", "5", "(", "file", ".", "read", "())", "\n", "            ", "hash", "_", "str", " =", " f", "\"", "{", "prefix", "}{", "hash", "_", "obj", ".", "hex", "dig", "est", "()", "}\"", "\n", "            ", "new", "_", "file", " =", " f", "\"", "{", "target", "_", "dir", "}/{", "os", ".", "path", ".", "bas", "ename", "(", "f", ")}", "\"", "\n", "            ", "with", " open", "(", "new", "_", "file", ",", " \"", "w", "+", "\"", ")", " as", " new", "_", "file", ":", "\n", "                ", "new", "_", "file", ".", "write", "(", "hash", "_", "str", ")", "\n", "    ", "return", " hash", "_", "list", "\n", "\n", "if"], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.9578018188476562, -0.00670279748737812, -0.00027581225731410086, -0.01806180737912655, -8.67805938469246e-05, -1.4305012882687151e-05, -0.0019280193373560905, -0.01873534917831421, -0.000750617531593889, -0.02724749594926834, -0.0030658883042633533, -0.00012492353562265635, -5.495397272170521e-05, -0.20640525221824646, -2.105790853500366, -0.00020072828920092434, -0.00016437610611319542, -0.2896786332130432, -0.0051137362606823444, -0.4737560749053955, -0.0002740246127359569, -3.4560577869415283, -0.0850728452205658, -1.8617467880249023, -0.007941930554807186, -0.0411369614303112, -0.012822559103369713, -0.9725422263145447, -8.606540359323844e-05, -0.1815953552722931, -2.69698429107666, -0.5428282022476196, -0.09523867070674896, -5.900685573578812e-05, -0.22684742510318756, -0.015408521518111229, -2.02099871635437, -1.847726889536716e-05, -5.066266385256313e-05, -0.056177470833063126, -0.40702855587005615, -0.22679972648620605, -0.27090349793434143, -0.0004632591735571623, -0.016914863139390945, -0.04424223303794861, -0.9848913550376892, -0.0012942517641931772, -0.0006136203301139176, -0.0038545848801732063, -0.23599812388420105, -2.9618144035339355, -0.10891075432300568, -0.007507089525461197, -0.0010487301042303443, -0.00025614796322770417, -0.7424933314323425, -0.05568407475948334, -0.012672610580921173, -0.005632363725453615, -1.6317713260650635, -0.12604588270187378, -0.4155551791191101, -0.015375182963907719, -0.0052917408756911755, -0.07448398321866989, -1.739950180053711, -1.7301775217056274, -0.025716567412018776, -0.5659978985786438, -1.0614128112792969, -0.1380174607038498, -2.0958871841430664, -0.0032285728957504034, -0.001934444298967719, -3.71926071238704e-05, -4.565611743601039e-05, -0.0071088713593780994, -5.006777428206988e-06, -1.3910523653030396, -0.013429422862827778, -0.006945277564227581, -0.0009176096064038575, -0.005309883505105972, -0.16784372925758362, -0.09144599735736847, -0.8215571641921997, -0.10908574610948563, -1.28963041305542, -0.001825810642912984, -1.7982723712921143, -0.8116442561149597, -0.025566214695572853, -0.0659632608294487, -0.15851083397865295, -0.025300197303295135, -0.005005803424865007, -0.0011378012131899595, -0.009308864362537861, -0.009958937764167786, -5.864924969500862e-05, -0.00017927470616996288, -0.03521433472633362, -0.19479040801525116, -0.023554977029561996, -0.20144452154636383, -2.3649466037750244, -0.007870731875300407, -0.4342212677001953, -0.495214581489563, -1.2640421390533447, -0.8120874166488647, -0.016441458836197853, -0.1320110410451889, -6.592056161025539e-05, -2.6225699912174605e-05, -0.13338549435138702, -0.5992567539215088, -1.168244216387393e-05, -0.0004239375703036785, -0.001096481690183282, -0.058593589812517166, -1.1920922133867862e-06, -0.0002693767019081861, -0.11621428281068802, -0.15902170538902283, -0.0808996930718422, -0.0336795449256897, -0.08803937584161758, -0.22641435265541077, -0.001500314916484058, -0.0007856381707824767, -0.012193894945085049, -5.030505417380482e-05, -3.707340147229843e-05, -0.0014079429674893618, -0.2127625197172165, -0.12688793241977692, -1.535569667816162, -0.060161590576171875, -0.03125288709998131, -0.00043049128726124763, -0.6548389196395874, -0.23501302301883698, -0.25477829575538635, -0.47140026092529297, -0.002232917817309499, -0.0012406755704432726, -0.04163369908928871, -0.00013767725613433868, -0.0017259714659303427, -0.0007408496458083391, -0.01684359833598137, -0.0009112972766160965, -0.02414279617369175, -0.00017963226127903908, -0.0012341272085905075, -0.16111581027507782, -0.06985174864530563, -1.5568475723266602, -0.04440724849700928, -0.033303722739219666, -0.00021598390594590455, -0.00031454383861273527, -0.49815836548805237, -0.019081365317106247, -0.6589292883872986], "finish_reason": "stop"}], "metrics": {"energy": 173.96168083381642, "energy_per_token": 1.005558848750384, "time": 7.399929, "time_per_token": 0.04277415606936416}}
{"outputs": [{"text": "try:\n        os.mkdir(target_dir)\n    except FileExistsError:\n        pass\n    for src_file in glob.glob(os.path.join(source_dir, '**/*.txt')):\n        with open(src_file, 'rb') as f:\n            content = f.read()\n            hash = hashlib.md5()\n            hash.update(content)\n            dest_file = os.path.join(target_dir, f'MD5_{prefix}{hash.hexdigest()}.txt')\n            print(dest_file)\n            with open(dest_file, 'wb') as out:\n                out.write(f'#MD5: {hash.hexdigest()}\\n{content}')\n    return [dest_file for dest_file in glob.glob(os.path.join(target_dir, 'MD5_*.txt'))]", "tokens": ["try", ":", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "dir", ")", "\n", "    ", "except", " File", "Exists", "Error", ":", "\n", "        ", "pass", "\n", "    ", "for", " src", "_", "file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "**", "/*", ".", "txt", "'))", ":", "\n", "        ", "with", " open", "(", "src", "_", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "content", " =", " f", ".", "read", "()", "\n", "            ", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "hash", ".", "update", "(", "content", ")", "\n", "            ", "dest", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " f", "'", "MD", "5", "_{", "prefix", "}{", "hash", ".", "hex", "dig", "est", "()}", ".", "txt", "')", "\n", "            ", "print", "(", "dest", "_", "file", ")", "\n", "            ", "with", " open", "(", "dest", "_", "file", ",", " '", "wb", "')", " as", " out", ":", "\n", "                ", "out", ".", "write", "(", "f", "'", "#", "MD", "5", ":", " {", "hash", ".", "hex", "dig", "est", "()", "}\\", "n", "{", "content", "}", "')", "\n", "    ", "return", " [", "dest", "_", "file", " for", " dest", "_", "file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " '", "MD", "5", "_*", ".", "txt", "'))", "]", "\n", "\n", "if"], "logprobs": [-2.681649684906006, -0.0006026597693562508, -0.004310483578592539, -0.004646456800401211, -0.6772796511650085, -0.0007266741595230997, -2.54634428024292, -5.98412734689191e-05, -0.012896701693534851, -0.0324743390083313, -1.6569954823353328e-05, -2.8371408916427754e-05, -0.05969183146953583, -0.04906437546014786, -0.02221916802227497, -0.0011688789818435907, -0.09892135113477707, -0.1566287875175476, -3.45700973412022e-05, -0.018404077738523483, -0.03608733043074608, -0.0015550674870610237, -0.05949404835700989, -0.023981034755706787, -1.0593273639678955, -1.830952525138855, -3.3391551971435547, -0.6571383476257324, -0.7131102681159973, -0.14786982536315918, -0.11092928051948547, -2.276871418871451e-05, -0.1441517174243927, -0.020043453201651573, -0.2502646744251251, -0.0010245556477457285, -0.0003369478799868375, -0.0010122895473614335, -0.0019557413179427385, -0.0025185791309922934, -0.005189638584852219, -1.3947389561508317e-05, -3.1709168979432434e-05, -0.0013959197094663978, -0.13072076439857483, -1.3964534997940063, -0.6273834109306335, -0.7765602469444275, -0.49123528599739075, -0.4781179130077362, -0.0014415121404454112, -0.006757265888154507, -0.005963271949440241, -1.12874174118042, -0.0023730231914669275, -0.0012531769461929798, -0.008786587044596672, -4.2437604861333966e-05, -3.1470757676288486e-05, -0.20734307169914246, -0.1378869265317917, -0.6922420263290405, -0.012301172129809856, -0.0005224770284257829, -0.5951546430587769, -0.16318883001804352, -0.007990537211298943, -0.001341753639280796, -1.6139358282089233, -0.015691030770540237, -0.2078985571861267, -0.0001419681793777272, -6.842378934379667e-05, -0.008151949383318424, -0.03695715218782425, -0.5630831122398376, -0.9320117235183716, -1.941544532775879, -0.02089429646730423, -0.0001662831346038729, -2.5748875486897305e-05, -0.002292744582518935, -1.5497195136049413e-06, -2.0176658630371094, -0.01918521709740162, -0.006669996306300163, -0.023325690999627113, -0.0009290431626141071, -6.4490144723095e-05, -0.0021469180937856436, -0.03543354943394661, -0.00957232154905796, -0.007635810878127813, -0.05736706778407097, -3.0355288982391357, -0.06787369400262833, -0.06364130973815918, -0.0375402495265007, -0.06754683703184128, -8.4638240878121e-06, -0.0002557904226705432, -0.0024700628127902746, -0.007627884857356548, -0.00042906138696707785, -0.02012617513537407, -6.0437283536884934e-05, -7.152555099310121e-07, -0.0001811817055568099, -1.6873042583465576, -1.7757220268249512, -3.6419148445129395, -0.019329283386468887, -1.0928535461425781, -1.5339075326919556, -0.14760810136795044, -0.020393922924995422, -0.03991860896348953, -0.009226187132298946, -9.345571743324399e-05, -0.000176652567461133, -0.06731604784727097, -0.32282283902168274, -0.021236298605799675, -0.0008230397943407297, -0.002253494691103697, -0.06904001533985138, -3.190845489501953, -0.10537150502204895, -0.6509228944778442, -0.0001062098381225951, -3.1470757676288486e-05, -0.04447486996650696, -0.019125808030366898, -0.03209009766578674, -0.13770796358585358, -0.0007272697403095663, -0.0005214046686887741, -0.002087796339765191, -3.814689989667386e-06, -3.099436753473128e-06, -0.0005063920398242772, -0.011339147575199604, -0.3866254985332489, -0.007454791571944952, -0.0003159739135298878, -3.254894971847534, -1.055905818939209, -0.002556153805926442, -0.0008457897347398102, -0.028801798820495605, -0.0001209901092806831, -0.0007022537174634635, -0.032512418925762177, -1.7283790111541748, -2.309828519821167, -0.6237319111824036, -0.2770332098007202, -0.000291662581730634, -0.04857245460152626, -0.02573271654546261, -0.7366337180137634, -0.0092600854113698, -0.010497826151549816, -0.0001212284987559542, -0.00041214076918549836, -0.30378350615501404, -0.08729078620672226, -0.011491182260215282, -0.8492733240127563, -0.16250498592853546, -0.23973582684993744, -0.0002727136597968638, -0.2158934473991394, -0.33593231439590454, -0.029524516314268112, -0.7628771066665649, -1.657070517539978, -0.00458166841417551, -0.0002520958660170436, -0.35683727264404297, -0.2164732962846756, -0.00014304091746453196, -0.00015436411194968969, -0.0024272524751722813, -0.07068836688995361, -8.701899787411094e-05, -0.0024169061798602343, -0.0042849634774029255, -0.05525394156575203, -0.0007382289622910321, -2.0503786799963564e-05, -0.0006387577159330249, -0.00015293381875380874, -0.0019142176024615765, -0.0090414397418499, -2.253030106658116e-05, -1.0371154530730564e-05, -0.00048494499060325325, -0.0641748458147049, -0.5667930841445923, -0.0009183242218568921, -0.07941411435604095, -0.10108716040849686, -0.003952549304813147, -0.0010236029047518969, -0.16152212023735046, -0.20527298748493195, -0.030733395367860794, -0.5378461480140686], "finish_reason": "stop"}], "metrics": {"energy": 241.6708184995651, "energy_per_token": 1.1563197057395458, "time": 8.833254, "time_per_token": 0.042264373205741626}}
{"outputs": [{"text": "if not os.path.exists(source_dir):\n        raise FileNotFoundError(f\"Source directory not found: {source_dir}\")\n\n    # List all the files in the source directory\n    file_paths = glob.glob(os.path.join(source_dir, '*'))\n\n    # Iterate over each file and compute its MD5 hash and write it to a new file with the prefix prepended\n    hashed_paths = []\n    for file_path in file_paths:\n        # Compute MD5 hash for file content\n        md5_hash = hashlib.md5()\n        with open(file_path, 'rb') as file:\n            chunk_size = 64 * 1024  # 64 kB chunks for faster reading\n            chunk = file.read(chunk_size)\n            while chunk:\n                md5_hash.update(chunk)\n                chunk = file.read(chunk_size)\n        md5_hash = md5_hash.hexdigest()\n        # Generate path for the hashed file\n        hashed_file_path = os.path.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "source", "_", "dir", "}\"", ")", "\n", "\n", "    ", "#", " List", " all", " the", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " and", " compute", " its", " MD", "5", " hash", " and", " write", " it", " to", " a", " new", " file", " with", " the", " prefix", " prep", "ended", "\n", "    ", "h", "ashed", "_", "paths", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "#", " Compute", " MD", "5", " hash", " for", " file", " content", "\n", "        ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "chunk", "_", "size", " =", " ", "6", "4", " *", " ", "1", "0", "2", "4", "  ", "#", " ", "6", "4", " k", "B", " chunks", " for", " faster", " reading", "\n", "            ", "chunk", " =", " file", ".", "read", "(", "chunk", "_", "size", ")", "\n", "            ", "while", " chunk", ":", "\n", "                ", "md", "5", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "                ", "chunk", " =", " file", ".", "read", "(", "chunk", "_", "size", ")", "\n", "        ", "md", "5", "_", "hash", " =", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "        ", "#", " Generate", " path", " for", " the", " has", "hed", " file", "\n", "        ", "h", "ashed", "_", "file", "_", "path", " =", " os", ".", "path", "."], "logprobs": [-0.6287150979042053, -0.039382629096508026, -0.020291246473789215, -1.8715683836489916e-05, -0.0004379982128739357, -0.009912079200148582, -0.4850178062915802, -0.00031835734262131155, -0.010211721062660217, -0.00013147920253686607, -2.2172682292875834e-05, -0.0015170981641858816, -0.016357140615582466, -0.0007812308613210917, -0.017964981496334076, -0.0021096847485750914, -0.00010895135346800089, -5.6265202147187665e-05, -0.21679149568080902, -0.46839436888694763, -0.3625927269458771, -0.9807593822479248, -0.07286858558654785, -3.012254476547241, -0.0034410094376653433, -0.028703922405838966, -0.04730059579014778, -0.0011823337990790606, -7.366862701019272e-05, -0.00013362467871047556, -0.06891651451587677, -0.00011896379146492109, -0.0036621904000639915, -0.21199478209018707, -0.00025829317746683955, -1.7651628255844116, -4.127437591552734, -0.34376364946365356, -1.7774670124053955, -0.1360543817281723, -0.1248980388045311, -0.06701654195785522, -0.06716324388980865, -0.024564066901803017, -0.32264673709869385, -0.0006870055221952498, -1.1069837808609009, -0.02222231589257717, -0.1714465171098709, -0.004305616952478886, -0.08697491139173508, -2.7417760065873154e-05, -0.008146865293383598, -0.0017968951724469662, -0.18355773389339447, -1.0967194612021558e-05, -1.6212332411669195e-05, -0.0013362773461267352, -0.00021801002731081098, -0.00020597243565134704, -0.0020328350365161896, -1.0013530300057027e-05, -3.6954811548639555e-06, -0.00034278715611435473, -0.4476240873336792, -0.42720723152160645, -0.2186608761548996, -0.005282965954393148, -0.08339814841747284, -0.00013171759201213717, -0.12848681211471558, -3.203484535217285, -0.004277959931641817, -0.3086774945259094, -0.5239376425743103, -0.01656024158000946, -0.6540957689285278, -0.5757688879966736, -0.3032864034175873, -0.3066485822200775, -3.886147169396281e-05, -0.03169762343168259, -2.8214244842529297, -0.90855473279953, -0.9981169104576111, -0.29663828015327454, -0.1391063630580902, -0.03551788255572319, -0.005724465008825064, -1.471144437789917, -0.1648787409067154, -2.1438193321228027, -1.4185235500335693, -7.73638384998776e-05, -0.08394843339920044, -0.0012955614365637302, -1.873758316040039, -0.00571450823917985, -0.003920251969248056, -1.8572614192962646, -0.0085295420140028, -0.0116348285228014, -0.010903894901275635, -0.029046621173620224, -0.015157986432313919, -0.4715105891227722, -0.01850881800055504, -0.003462512046098709, -0.00030632095877081156, -0.0032367717940360308, -3.576278118089249e-07, -8.22540732769994e-06, -4.3987260141875595e-05, -0.0005189026123844087, -0.005148960277438164, -2.4448976516723633, -1.6227896213531494, -1.0248985290527344, -3.969590397900902e-05, -0.048379842191934586, -2.0739850997924805, -2.7219104766845703, -0.9017854332923889, -0.143584743142128, -0.0003383779258001596, -0.7862864136695862, -0.000708090839907527, -0.22846242785453796, -0.04025520011782646, -0.00883893296122551, -0.0077960980124771595, -8.642300235806033e-05, -1.490105023549404e-05, -0.001353420433588326, -3.576278118089249e-07, -0.3490966558456421, -0.0040965694934129715, -0.025231385603547096, -0.015321299433708191, -0.0002203936892328784, -5.900685573578812e-05, -0.0005025792634114623, -8.821448318485636e-06, -4.172316494077677e-06, -0.0012178155593574047, -0.034375593066215515, -0.00042429505265317857, -0.0020967184100300074, -9.083335316972807e-05, -0.9749152064323425, -0.027269188314676285, -0.0033079448621720076, -0.0005144941387698054, -2.5184597969055176, -0.17494609951972961, -0.007071467116475105, -0.0007859955076128244, -0.0018394945655018091, -2.7525856494903564, -0.2943863868713379, -0.04969887435436249, -0.005642557982355356, -0.0006151691195555031, -0.00033361115492880344, -0.0015755394706502557, -1.7523612768854946e-05, -0.8065388798713684, -3.766942609217949e-05, -0.6078303456306458, -0.022845525294542313, -0.00017891713650897145, -3.6402814388275146, -0.33266517519950867, -0.5184252858161926, -1.4463412761688232, -1.9409505128860474, -2.249142646789551, -0.3772112727165222, -0.01988336443901062, -2.683793544769287, -0.020763885229825974, -0.02956884354352951, -5.447716102935374e-05, -0.0006812873762100935, -0.0005781171494163573, -0.00017128908075392246, -1.7881377516459906e-06, -1.4305104514278355e-06, -1.2755313036905136e-05, -0.014155691489577293, -0.019009903073310852, -0.007420122157782316, -0.05058731511235237, -0.010755781084299088, -0.010218093171715736, -8.535020606359467e-05, -0.0034755796659737825, -2.3841855067985307e-07, -2.3364747903542593e-05, -2.95634672511369e-05, -8.940656698541716e-06, -8.463501580990851e-05, -2.1934269170742482e-05, -0.0001264730526600033, -0.00019560330838430673, -0.004500379785895348, -0.00044943721150048077, -0.00384187838062644, -0.0004711233195848763, -0.00017498392844572663, -6.246371776796877e-05, -1.597391747054644e-05, -0.0001445904199499637, -0.00023445718397852033, -6.6756979322235566e-06, -2.3841830625315197e-06, -1.3828182090946939e-05, -0.006666325498372316, -0.2476666271686554, -0.8120871186256409, -0.00011514954530866817, -0.055451661348342896, -0.17687492072582245, -0.3439505398273468, -0.01414546649903059, -1.8715683836489916e-05, -0.00013982271775603294, -1.0371154530730564e-05, -4.1126360883936286e-05, -0.0358257070183754, -7.271502545336261e-05, -0.0006102845072746277, -0.00041738382424227893, -0.11246085166931152, -1.4256824254989624, -1.77298903465271, -2.661129951477051, -3.4598116874694824, -0.7278879284858704, -0.5962351560592651, -1.4235429763793945, -0.000612071540672332, -0.093109130859375, -0.29242566227912903, -0.0005685858195647597, -0.0991201251745224, -0.00034409802174195647, -0.0006631797295995057, -1.0688996315002441, -0.045700326561927795, -0.02422436513006687, -0.00031454383861273527, -0.1452815979719162, -7.271740287251305e-06, -0.0002083561266772449, -0.0034419598523527384], "finish_reason": "length"}], "metrics": {"energy": 295.2841022415164, "energy_per_token": 1.1534535243809234, "time": 11.094897, "time_per_token": 0.04333944140625}}
{"outputs": [{"text": "try:\n        os.makedirs(target_dir, exist_ok=True)\n    except FileExistsError:\n        pass\n\n    target_files = []\n\n    for filename in glob.glob(os.path.join(source_dir, '*')):\n        with open(filename, 'rb') as f:\n            data = f.read()\n            md5 = hashlib.md5(data).hexdigest()\n            hash_str = f'{prefix}{md5}'\n\n            new_filename = f'{md5}.txt'\n            new_filepath = os.path.join(target_dir, new_filename)\n\n            with open(new_filepath, 'w') as new_f:\n                new_f.write(hash_str + '\\n')\n                new_f.write(data.decode('utf-8'))\n\n            target_files.append(new_filepath)\n\n    return target_files", "tokens": ["try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "except", " File", "Exists", "Error", ":", "\n", "        ", "pass", "\n", "\n", "    ", "target", "_", "files", " =", " []", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "dir", ",", " '", "*", "'))", ":", "\n", "        ", "with", " open", "(", "filename", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "data", " =", " f", ".", "read", "()", "\n", "            ", "md", "5", " =", " hash", "lib", ".", "md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "hash", "_", "str", " =", " f", "'{", "prefix", "}{", "md", "5", "}'", "\n", "\n", "            ", "new", "_", "filename", " =", " f", "'{", "md", "5", "}", ".", "txt", "'", "\n", "            ", "new", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " new", "_", "filename", ")", "\n", "\n", "            ", "with", " open", "(", "new", "_", "file", "path", ",", " '", "w", "')", " as", " new", "_", "f", ":", "\n", "                ", "new", "_", "f", ".", "write", "(", "hash", "_", "str", " +", " '\\", "n", "')", "\n", "                ", "new", "_", "f", ".", "write", "(", "data", ".", "decode", "('", "utf", "-", "8", "'))", "\n", "\n", "            ", "target", "_", "files", ".", "append", "(", "new", "_", "file", "path", ")", "\n", "\n", "    ", "return", " target", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.681649684906006, -0.0006026597693562508, -0.004310483578592539, -0.004646456800401211, -0.6772796511650085, -0.0007266741595230997, -0.10690271854400635, -5.173549288883805e-05, -0.001167331007309258, -0.0019785843323916197, -0.026017319411039352, -4.172316494077677e-06, -2.5510462364763953e-05, -0.7126967906951904, -0.02907661348581314, -5.960462772236497e-07, -7.402622577501461e-05, -0.0008057684754021466, -0.002861573826521635, -0.0016200524987652898, -0.06229899451136589, -0.1702592670917511, -0.001926591619849205, -0.21521829068660736, -0.290240079164505, -1.9550132492440753e-05, -0.06759708374738693, -0.03550407662987709, -0.0009008163469843566, -0.1799560785293579, -0.012444701045751572, -0.3402329981327057, -0.00027640812913887203, -4.273976802825928, -0.01778453402221203, -1.1168913841247559, -0.03434840962290764, -0.04256851598620415, -0.008843304589390755, -1.1328743696212769, -6.639736966462806e-05, -0.15829961001873016, -1.3292427062988281, -0.0056104338727891445, -0.1343419998884201, -3.0040289857424796e-05, -0.18431724607944489, -0.010509032756090164, -0.29012733697891235, -0.0002361257211305201, -0.00017152745567727834, -0.00913015566766262, -0.0011734035797417164, -0.001764646964147687, -0.004495395813137293, -2.264974000354414e-06, -2.407998726994265e-05, -0.001328539103269577, -0.16154655814170837, -0.395529180765152, -0.23041126132011414, -0.000534868217073381, -0.0065645999275147915, -0.020613953471183777, -1.0169963836669922, -0.0014421073719859123, -0.0004051103023812175, -0.004401638172566891, -0.0710093230009079, -0.07904859632253647, -0.3676479160785675, -0.015462283045053482, -0.00023552982020191848, -0.805210292339325, -0.050596948713064194, -0.007189474534243345, -0.00287108332850039, -1.6853679418563843, -0.005637579597532749, -0.0711136907339096, -1.645074735279195e-05, -3.862306402879767e-05, -0.003853516187518835, -0.01343248039484024, -0.3777691423892975, -1.430328130722046, -0.001984652131795883, -0.848734438419342, -0.0027451948262751102, -4.23184028477408e-05, -1.2636104656849056e-05, -0.0009390473715029657, -5.960462772236497e-07, -0.17191429436206818, -0.003146817907691002, -0.0019777517300099134, -0.13924452662467957, -0.023693872615695, -4.541770613286644e-05, -0.0007393010891973972, -0.0005398723296821117, -0.017680419608950615, -0.298172265291214, -2.178567886352539, -0.07511483132839203, -1.4832255840301514, -0.0006669919239357114, -0.5986964702606201, -0.3257523775100708, -0.032462913542985916, -0.09176992624998093, -0.004453621339052916, -1.2993727978027891e-05, -0.06235925108194351, -0.08312338590621948, -1.2014920711517334, -0.2621871531009674, -1.9428143501281738, -0.002836611121892929, -0.38513273000717163, -0.0015662556979805231, -1.3136365413665771, -0.15387901663780212, -2.6347475051879883, -5.94836674281396e-05, -0.1545146405696869, -0.00895495992153883, -1.034649133682251, -0.0010118131758645177, -0.014522917568683624, -0.033455103635787964, -0.3640555441379547, -0.0007446615491062403, -0.2598537504673004, -0.39821305871009827, -0.00016866691294126213, -0.01045535784214735, -3.576278118089249e-07, -4.136476854910143e-05, -0.004047061316668987, -0.000503770774230361, -0.00015269544383045286, -0.003015378024429083, -1.7881377516459906e-06, -5.245195097813848e-06, -8.046303264563903e-05, -0.005289488006383181, -7.629365427419543e-06, -3.58813522325363e-05, -0.00031609306461177766, -0.0009284476400353014, -1.1186805963516235, -0.013240155763924122, -0.5786458849906921, -0.0005449955351650715, -0.0001711698860162869, -0.004567072726786137, -1.0609570381348021e-05, -0.00022420754248742014, -4.410734163684538e-06, -0.00013600854435935616, -0.0050957091152668, -0.19325174391269684, -0.18830297887325287, -7.080780778778717e-05, -1.194690227508545, -0.003975703381001949, -1.0415260791778564, -0.0004962643142789602, -0.000976800569333136, -0.00023016665363684297, -0.013631236739456654, -8.189342770492658e-05, -0.0031641677487641573, -1.811964830267243e-05, -0.004329237621277571, -0.0031229318119585514, -0.37868815660476685, -2.13382354559144e-05, -3.1470757676288486e-05, -1.1184149980545044, -0.903721034526825, -0.006601075176149607, -0.32279789447784424, -0.004997026175260544, -0.05764460936188698, -0.007049331907182932, -9.738924563862383e-05, -0.0009875188115984201, -2.47952248173533e-05, -0.041415270417928696, -0.00335618294775486, -0.011154907755553722, -0.7788697481155396, -0.0017976091476157308, -0.6215508580207825, -0.03343239426612854, -0.044745296239852905, -0.0006058764411136508, -0.06011534109711647, -0.007170418743044138, -0.11447446793317795, -0.20133106410503387, -0.039439812302589417, -1.7762025890988298e-05, -0.000977038755081594, -0.0006370898918248713, -0.00014506718434859067, -0.0007489498239010572, -0.009173743426799774, -1.7165990357170813e-05, -0.01294200774282217, -2.861018856492592e-06, -0.000685576000250876, -0.0011837625643238425, -0.03465176001191139, -0.003906239988282323, -0.016023436561226845, -0.0036485311575233936, -1.4662635294371285e-05, -0.0002727136597968638, -0.8640549778938293, -2.3841855067985307e-07, -9.536738616588991e-07, -9.893881360767409e-05, -0.0002455409849062562, -0.12384377419948578], "finish_reason": "stop"}], "metrics": {"energy": 262.9285536870954, "energy_per_token": 1.158275566903504, "time": 9.656198, "time_per_token": 0.042538317180616736}}
