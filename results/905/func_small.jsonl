{"outputs": [{"text": "output = {}\n    files_to_read = glob.glob(directory_path + '/*' + file_extension)\n    for file_name in files_to_read:\n        with open(file_name, 'r') as csv_file:\n            reader = csv.reader(csv_file)\n            headers = next(reader)\n            output[os.path.basename(file_name)[:-len(file_extension)]] = list(reader)\n    return output", "tokens": ["output", " =", " {}", "\n", "    ", "files", "_", "to", "_", "read", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", "'", " +", " file", "_", "extension", ")", "\n", "    ", "for", " file", "_", "name", " in", " files", "_", "to", "_", "read", ":", "\n", "        ", "with", " open", "(", "file", "_", "name", ",", " '", "r", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ")", "\n", "            ", "headers", " =", " next", "(", "reader", ")", "\n", "            ", "output", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "name", ")", "[:", "-", "len", "(", "file", "_", "extension", ")", "]]", " =", " list", "(", "reader", ")", "\n", "    ", "return", " output", "\n", "\n", "print"], "logprobs": [-2.4764647483825684, -0.4262613356113434, -0.09364693611860275, -0.007532409392297268, -0.2746032476425171, -1.8853483200073242, -1.4265316724777222, -2.343492031097412, -0.0002554328821133822, -0.4239546060562134, -0.010725353844463825, -0.11326535791158676, -9.285972191719338e-05, -0.014430447481572628, -0.005706448573619127, -1.2073811292648315, -0.00013839241000823677, -1.8000440832111053e-05, -0.04641173407435417, -0.871565580368042, -0.09740695357322693, -0.05101538076996803, -0.000854841957334429, -0.0044571817852556705, -3.1470757676288486e-05, -7.390703103737906e-05, -0.034310631453990936, -0.013201450929045677, -0.20672833919525146, -0.2885928452014923, -0.2845076024532318, -0.9282819628715515, -0.9872050881385803, -0.005626673810184002, -0.003354281885549426, -1.823885577323381e-05, -4.768360213347478e-06, -2.8967437174287625e-05, -5.722029527532868e-06, -0.00029774048016406596, -0.004527793265879154, -0.005643861833959818, -0.579596757888794, -0.0027742015663534403, -0.0018768567824736238, -0.0061880419962108135, -2.4676019165781327e-05, -9.595887240720913e-05, -0.28534477949142456, -0.31982460618019104, -0.029370220378041267, -0.15408045053482056, -0.0021984234917908907, -2.2536942958831787, -0.0023940731771290302, -0.29043668508529663, -0.02024475485086441, -0.0010172913316637278, -0.004255762789398432, -0.0046623568050563335, -0.8470489978790283, -0.008253277279436588, -0.012172814458608627, -4.0531076592742465e-06, -0.0001282609737245366, -0.019406450912356377, -0.0001805857609724626, -0.0010761191369965672, -4.207999518257566e-05, -3.099436753473128e-06, -0.19084203243255615, -0.0021256250329315662, -0.017354069277644157, -2.60874605178833, -0.022452669218182564, -0.05858583375811577, -0.0001250427303602919, -0.00346666993573308, -0.0972030758857727, -0.10849639773368835, -0.01898370310664177, -0.8431770205497742, -0.0672609955072403, -0.04009338840842247, -6.437280717364047e-06, -0.00010561384988250211, -0.0059018866159021854, -0.40395206212997437, -4.768370445162873e-07, -0.00022825974156148732, -0.011150309816002846, -1.8954096958623268e-05, -3.8980677345534787e-05, -0.12186658382415771, -1.0208247900009155, -0.041751928627491, -0.35737600922584534, -0.007026130799204111, -0.00569637306034565, -1.1205610462639015e-05, -0.002090056659653783, -0.014716053381562233, -0.003297132672742009, -0.006075248587876558, -0.5438257455825806, -0.0012480573495849967, -0.06988564878702164, -0.015270465053617954, -0.008891158737242222, -0.26350295543670654, -0.013266036286950111, -0.00607050908729434, -0.4088548421859741, -0.03067917749285698, -2.3418569564819336], "finish_reason": "stop"}], "metrics": {"energy": 190.84401704502105, "energy_per_token": 1.6595131916958352, "time": 6.087396, "time_per_token": 0.052933878260869566}}
{"outputs": [{"text": "output = {}\n    if not directory_path.endswith(os.sep):\n        directory_path += os.sep\n    for filename in glob.glob(directory_path + '*' + file_extension):\n        with open(filename, 'r') as file:\n            reader = csv.reader(file)\n            headers = next(reader)\n            output[os.path.basename(filename).split('.')[0]] = list(reader)\n    return output", "tokens": ["output", " =", " {}", "\n", "    ", "if", " not", " directory", "_", "path", ".", "end", "sw", "ith", "(", "os", ".", "sep", "):", "\n", "        ", "directory", "_", "path", " +=", " os", ".", "sep", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", "'", " +", " file", "_", "extension", "):", "\n", "        ", "with", " open", "(", "filename", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "            ", "headers", " =", " next", "(", "reader", ")", "\n", "            ", "output", "[", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", ".", "split", "('", ".", "')", "[", "0", "]]", " =", " list", "(", "reader", ")", "\n", "    ", "return", " output", "\n", "\n", "if"], "logprobs": [-2.295684337615967, -0.5000662207603455, -0.12211666256189346, -0.00864359550178051, -0.2918994724750519, -2.890171527862549, -0.7390663623809814, -2.1079533100128174, -0.0010177677031606436, -0.00022230061586014926, -0.826042115688324, -0.09696973115205765, -4.386805812828243e-05, -2.3841855067985307e-07, -0.8354517221450806, -0.14877949655056, -1.2636104656849056e-05, -0.6889631152153015, -0.04418668895959854, -0.050448138266801834, -0.0029832879081368446, -0.014362881891429424, -0.002094815019518137, -0.00024327656137757003, -0.24106481671333313, -0.0033401434775441885, -0.00022230061586014926, -0.0040146480314433575, -0.009028562344610691, -0.42945191264152527, -0.9014163613319397, -0.9994838833808899, -0.0031767638865858316, -0.04158978909254074, -3.0874729418428615e-05, -0.10711565613746643, -0.004760954063385725, -0.27207040786743164, -5.245195097813848e-06, -2.861018856492592e-06, -0.08274122327566147, -0.37870895862579346, -0.044516827911138535, -0.06524307280778885, -0.0006526962388306856, -0.0030074152164161205, -2.002696055569686e-05, -3.099393507000059e-05, -0.023508751764893532, -0.004353925585746765, -0.002218763343989849, -0.7750256657600403, -0.004118651617318392, -0.001023483811877668, -0.004168987274169922, -0.19307741522789001, -0.5065770745277405, -0.04851044714450836, -0.3448934555053711, -0.0015582811320200562, -0.5370576977729797, -0.02638346515595913, -0.0028449322562664747, -0.0025391501840204, -0.5949612259864807, -0.0018576999427750707, -0.027790600433945656, -1.311301275563892e-06, -5.876845170860179e-05, -0.004397603217512369, -0.0008288762182928622, -0.0015603045467287302, -0.1438288390636444, -0.0017394188325852156, -0.0050383033230900764, -2.708183765411377, -0.015105030499398708, -0.08017170429229736, -0.00021991695393808186, -0.0008487674640491605, -0.1344429850578308, -0.06827238202095032, -0.018278256058692932, -0.6603673100471497, -0.04315954074263573, -0.20048466324806213, -9.894321920000948e-06, -0.0002907091984525323, -0.003447662340477109, -0.7219663262367249, -5.960462772236497e-07, -0.0001627074379939586, -0.011250981129705906, -0.11480026692152023, -0.3330976665019989, -0.5832535028457642, -0.28226709365844727, -0.0009071287349797785, -0.05001041665673256, -0.0007385863573290408, -0.0004408579843584448, -0.004416711162775755, -0.0022368428763002157, -0.49192383885383606, -0.0010601620888337493, -0.02739330381155014, -0.013299680314958096, -0.00836889911442995, -0.17618218064308167, -0.014463583007454872, -0.004333747550845146, -0.3634442090988159, -0.024037014693021774, -0.7858050465583801], "finish_reason": "stop"}], "metrics": {"energy": 138.7887674255371, "energy_per_token": 1.217445328294185, "time": 5.0606475, "time_per_token": 0.0443916447368421}}
{"outputs": [{"text": "rows_data = {}\n    for file in glob.glob(directory_path + file_extension):\n        with open(file, 'r', encoding='utf8') as csv_file:\n            file_rows = list(csv.reader(csv_file))\n            filename = os.path.basename(file).replace(file_extension, '')\n            rows_data[filename] = file_rows\n    return rows_data", "tokens": ["rows", "_", "data", " =", " {}", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " file", "_", "extension", "):", "\n", "        ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "file", "_", "rows", " =", " list", "(", "csv", ".", "reader", "(", "csv", "_", "file", "))", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "replace", "(", "file", "_", "extension", ",", " '", "')", "\n", "            ", "rows", "_", "data", "[", "filename", "]", " =", " file", "_", "rows", "\n", "    ", "return", " rows", "_", "data", "\n", "\n", "if"], "logprobs": [-4.5962138175964355, -1.2789353132247925, -1.727696180343628, -0.08387915790081024, -0.19216714799404144, -0.01684148795902729, -0.34474119544029236, -1.102109432220459, -0.7062544822692871, -0.684524655342102, -0.042921800166368484, -6.747018051100895e-05, -0.06328608840703964, -0.007474670186638832, -1.5881004333496094, -0.00015567521040793508, -2.1815061700181104e-05, -0.06959547847509384, -1.2951951026916504, -3.85038583772257e-05, -0.0003599472693167627, -0.11781683564186096, -0.014666362665593624, -0.014444900676608086, -0.5971208214759827, -0.0027291453443467617, -0.002317720791324973, -0.01783219538629055, -0.26134005188941956, -0.5756077766418457, -0.027172554284334183, -1.6121320724487305, -0.0032364153303205967, -0.21744324266910553, -0.07548267394304276, -0.12056801468133926, -1.5359904766082764, -0.16348901391029358, -0.0016614693449810147, -1.2370517253875732, -0.0042860317043960094, -0.34478959441185, -0.032658036798238754, -0.0010342017048969865, -0.004811138845980167, -0.008189313113689423, -2.750155448913574, -0.03362283483147621, -1.4626860618591309, -0.09923013299703598, -1.08816659450531, -0.004342056345194578, -0.003332895925268531, -0.0007393010891973972, -0.005193077493458986, -0.0035878352355211973, -0.0020217709243297577, -6.186770770000294e-05, -4.529942543740617e-06, -0.5031474828720093, -0.0445757731795311, -0.17818453907966614, -3.1640329360961914, -0.08409947156906128, -0.2033277004957199, -7.510157047363464e-06, -0.00020859450160060078, -0.008539588190615177, -0.40962567925453186, -3.576278118089249e-07, -0.00018737945356406271, -0.008018209598958492, -0.021682361140847206, -1.0505785942077637, -1.3299604654312134, -0.19636383652687073, -0.16025304794311523, -0.0006779517862014472, -0.000286657246761024, -0.034128040075302124, -0.06626587361097336, -0.000723576988093555, -0.031483251601457596, -0.026683900505304337, -0.05145515128970146, -0.0003979606262873858, -0.00014327930693980306, -0.04888764023780823, -0.004243773873895407, -0.005558629520237446, -0.00010966652916977182, -0.01704554446041584, -3.182837463100441e-05, -7.033323527139146e-06, -0.2680039405822754, -0.29654645919799805, -0.021639781072735786, -0.005264585837721825, -1.6689286894688848e-06, -4.768360213347478e-06, -0.2750355303287506, -0.01592770405113697, -0.7336796522140503], "finish_reason": "stop"}], "metrics": {"energy": 118.8575452919006, "energy_per_token": 1.153956750406802, "time": 4.429987, "time_per_token": 0.04300958252427184}}
{"outputs": [{"text": "extension_list = glob.glob(os.path.join(directory_path, f'*.{file_extension}'))\n    if len(extension_list) == 0:\n        return {}\n    elif len(extension_list) > 1:\n        extension = file_extension\n    else:\n        extension = os.path.splitext(extension_list[0])[1]\n    with open(extension_list[0], 'r') as file:\n        reader = csv.reader(file)\n        header = next(reader)\n        data_dict = {os.path.splitext(extension_list[0])[0]: list(reader)}\n    return data_dict", "tokens": ["extension", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "'", "*", ".", "{", "file", "_", "extension", "}'", "))", "\n", "    ", "if", " len", "(", "extension", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "return", " {}", "\n", "    ", "elif", " len", "(", "extension", "_", "list", ")", " >", " ", "1", ":", "\n", "        ", "extension", " =", " file", "_", "extension", "\n", "    ", "else", ":", "\n", "        ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "extension", "_", "list", "[", "0", "])", "[", "1", "]", "\n", "    ", "with", " open", "(", "extension", "_", "list", "[", "0", "]", ",", " '", "r", "')", " as", " file", ":", "\n", "        ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "        ", "header", " =", " next", "(", "reader", ")", "\n", "        ", "data", "_", "dict", " =", " {", "os", ".", "path", ".", "spl", "ite", "xt", "(", "extension", "_", "list", "[", "0", "])", "[", "0", "]:", " list", "(", "reader", ")}", "\n", "    ", "return", " data", "_", "dict"], "logprobs": [-4.360381603240967, -1.2760995626449585, -1.653700590133667, -0.021554384380578995, -0.9584879279136658, -0.00030560590676032007, -0.00451604463160038, -0.01989072561264038, -0.9911006093025208, -1.7523612768854946e-05, -0.0004755319678224623, -0.004732479341328144, -0.0053695267997682095, -0.004748140461742878, -0.010725471191108227, -0.0002494739310350269, -8.34461570775602e-06, -0.003301528748124838, -1.1085644960403442, -0.1796712428331375, -0.5830650925636292, -0.11967344582080841, -0.015592213720083237, -0.0007117837085388601, -1.1444026313256472e-05, -4.6132929128361866e-05, -0.00688336044549942, -0.0020770898554474115, -0.022253677248954773, -0.2040993869304657, -1.7547012567520142, -1.1247694492340088, -0.00041845624218694866, -0.0009809688199311495, -8.702239938429557e-06, -2.861018856492592e-06, -0.020260758697986603, -0.2704579830169678, -0.0006729483720846474, -0.0021664262749254704, -0.006518056150525808, -0.03507392480969429, -0.0029667671769857407, -0.176161989569664, -0.06947893649339676, -0.0044989557936787605, -0.4186241924762726, -2.8277509212493896, -0.05944428592920303, -0.0002885640424210578, -0.002370525849983096, -1.0490362910786644e-05, -7.271740287251305e-06, -0.0022558735217899084, -1.438917875289917, -0.0016526625258848071, -0.06979326903820038, -0.01456239353865385, -0.011201707646250725, -0.0017556030070409179, -3.6422934532165527, -1.6282596588134766, -1.3891769647598267, -0.00040058218291960657, -0.000726197671610862, -0.6052696704864502, -1.0372858047485352, -0.143563374876976, -0.0002673506969586015, -0.009114445187151432, -0.0003946240758523345, -0.14244519174098969, -0.010141627863049507, -0.28772735595703125, -0.00017915551143232733, -0.0011293468996882439, -0.008095192722976208, -0.12644986808300018, -1.9550132492440753e-05, -4.768370445162873e-07, -0.0007425173535011709, -0.09658936411142349, -0.0007532381569035351, -1.883488948806189e-05, -0.01619517058134079, -0.0001401803019689396, -0.005980573128908873, -0.15865568816661835, -0.0022137677296996117, -0.15578050911426544, -0.20920677483081818, -0.4728637635707855, -3.18104887008667, -0.13738475739955902, -0.012135010212659836, -0.12175577133893967, -0.0005317704635672271, -3.194758028257638e-05, -0.007103544659912586, -0.0004076126788277179, -0.5826173424720764, -0.0026963327545672655, -0.5173380374908447, -0.06076934561133385, -0.27373382449150085, -0.001388300908729434, -0.630789577960968, -0.03550833463668823, -0.003586053615435958, -0.004832849372178316, -0.8148238062858582, -0.007114079315215349, -0.032320842146873474, -3.933898824470816e-06, -8.141662692651153e-05, -0.008081711828708649, -0.0011485177092254162, -0.0034096459858119488, -0.2188594490289688, -0.001320086419582367, -0.01328485831618309, -1.4653880596160889, -0.3175521790981293, -0.1334664523601532, -0.00025459862081333995, -0.0005382042727433145, -0.07536140084266663, -0.030576743185520172, -0.10221744328737259, -0.697848916053772, -2.3160173892974854, -0.20989209413528442, -0.004981961566954851, -0.6147602796554565, -0.43669912219047546, -5.364403477869928e-06, -6.985420623095706e-05, -0.0001740304142003879, -0.2338215708732605, -1.9073468138230965e-06, -9.536738616588991e-07, -0.00038556772051379085, -0.7738357782363892, -0.004187862388789654, -5.435795901576057e-05, -0.001082073082216084, -0.0015021003782749176, -0.003075157990679145, -0.00015424491721205413, -0.0021033799275755882, -0.07854431867599487, -1.8287713527679443, -0.006400206591933966, -0.14163216948509216, -0.12232976406812668, -0.008785877376794815, -0.3650681674480438, -0.0448092445731163, -0.006803561467677355, -0.00010525626566959545, -3.0278701160568744e-05], "finish_reason": "stop"}], "metrics": {"energy": 202.95776127243033, "energy_per_token": 1.260607212872238, "time": 7.155531, "time_per_token": 0.04444429192546584}}
{"outputs": [{"text": "# Step 1: Create an empty dictionary to hold the data\n    data = {}\n\n    # Step 2: Iterate through each file in the directory\n    for filename in glob.glob(os.path.join(directory_path, '*' + file_extension)):\n        # Step 3: Read the file contents into a list\n        with open(filename, 'r') as file:\n            reader = csv.reader(file)\n            headers = next(reader)\n            data[os.path.basename(filename).rstrip(file_extension)] = list(reader)\n\n    return data", "tokens": ["#", " Step", " ", "1", ":", " Create", " an", " empty", " dictionary", " to", " hold", " the", " data", "\n", "    ", "data", " =", " {}", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Iter", "ate", " through", " each", " file", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", ":", "\n", "        ", "#", " Step", " ", "3", ":", " Read", " the", " file", " contents", " into", " a", " list", "\n", "        ", "with", " open", "(", "filename", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "            ", "headers", " =", " next", "(", "reader", ")", "\n", "            ", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", ".", "r", "strip", "(", "file", "_", "extension", ")]", " =", " list", "(", "reader", ")", "\n", "\n", "    ", "return", " data"], "logprobs": [-2.241004467010498, -4.995970726013184, -0.038563892245292664, -0.04278909042477608, -0.13910533487796783, -2.3143606185913086, -0.5215337872505188, -0.05397576466202736, -0.08642005175352097, -0.7200503349304199, -2.3935046195983887, -0.14339689910411835, -0.7747805714607239, -0.6038865447044373, -0.0028693003114312887, -0.29850292205810547, -0.048221953213214874, -0.05720079690217972, -0.001794158248230815, -0.08252017945051193, -0.0007400158210657537, -0.014943092130124569, -0.013287563808262348, -0.0010632582707330585, -0.0034508698154240847, -0.006525280419737101, -1.7778680324554443, -0.0005526207387447357, -0.9667344689369202, -2.540829658508301, -0.03648923337459564, -0.08374124765396118, -0.010619440115988255, -0.3532499670982361, -0.30997762084007263, -0.0013363964390009642, -0.044914331287145615, -0.7044099569320679, -0.0005856229108758271, -0.08482132107019424, -3.242440288886428e-05, -0.04251139238476753, -0.002240411238744855, -0.2293156236410141, -2.264974000354414e-06, -4.708655978902243e-05, -0.0020049961749464273, -0.00018737945356406271, -0.0010052633006125689, -0.0011725700460374355, -0.0001559135998832062, -4.291525328881107e-06, -0.0015773248160257936, -0.4851090908050537, -0.024950861930847168, -0.1164935752749443, -0.0004471732536330819, -0.001496029901318252, -2.777537883957848e-05, -2.372236667724792e-05, -0.0017664319602772593, -9.548207890475169e-05, -0.006945159286260605, -0.16735538840293884, -0.26790839433670044, -0.1049693152308464, -0.0009999042376875877, -0.0417213998734951, -0.014437497593462467, -1.1523563861846924, -0.14033406972885132, -0.23779447376728058, -1.7468758821487427, -2.0630056858062744, -0.04731014743447304, -0.21659444272518158, -1.8074886798858643, -0.0020361661445349455, -0.18537315726280212, -0.0001711698860162869, -0.00021300431399140507, -0.0039038651157170534, -0.15791040658950806, -0.10758122056722641, -0.016345178708434105, -0.13785409927368164, -0.00043644916149787605, -0.4129406809806824, -0.012264903634786606, -0.0017407278064638376, -0.0016649207100272179, -0.754135012626648, -0.0004798214649781585, -0.032144468277692795, -2.861018856492592e-06, -2.4437606043647975e-05, -0.001750604948028922, -0.00013243274588603526, -0.0005639393348246813, -0.112028568983078, -0.0015254301251843572, -0.02127831242978573, -3.2185564041137695, -0.026133228093385696, -0.028442444279789925, -5.221230458118953e-05, -0.0004419303731992841, -0.10038396716117859, -0.17498444020748138, -0.2256082445383072, -0.5922166109085083, -0.05896654725074768, -0.2468160092830658, -8.976056415122002e-05, -6.258291978156194e-05, -0.019398733973503113, -0.5592168569564819, -5.960462772236497e-07, -8.11782301752828e-05, -0.007741212844848633, -0.12518690526485443, -0.6358234882354736, -2.9993677139282227, -0.41834720969200134, -0.10359109938144684, -0.04650857672095299, -0.00010692501382436603, -0.00031442465842701495, -0.012587503530085087, -0.0011803095694631338, -0.7303079962730408, -0.000920706195756793, -0.04678516834974289, -0.004196409601718187, -0.007531935814768076, -0.03957594931125641, -0.01488754153251648, -0.6398946046829224, -0.0016644446877762675], "finish_reason": "stop"}], "metrics": {"energy": 147.9960082454681, "energy_per_token": 1.064719483780346, "time": 6.105431, "time_per_token": 0.043923964028776984}}
{"outputs": [{"text": "files_list = glob.glob(os.path.join(directory_path, file_extension))\n    output = {}\n\n    for file_path in files_list:\n        with open(file_path, encoding='utf-8') as file:\n            rows = csv.reader(file, delimiter=';')\n\n            # Get the name of the file (without the extension)\n            filename = os.path.basename(file_path).split('.')[0]\n            output[filename] = list(rows)[1:]\n\n    return output", "tokens": ["files", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "extension", "))", "\n", "    ", "output", " =", " {}", "\n", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "list", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " encoding", "='", "utf", "-", "8", "')", " as", " file", ":", "\n", "            ", "rows", " =", " c", "sv", ".", "reader", "(", "file", ",", " del", "im", "iter", "='", ";", "')", "\n", "\n", "            ", "#", " Get", " the", " name", " of", " the", " file", " (", "without", " the", " extension", ")", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", ".", "split", "('", ".", "')", "[", "0", "]", "\n", "            ", "output", "[", "filename", "]", " =", " list", "(", "rows", ")[", "1", ":]", "\n", "\n", "    ", "return", " output", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.4549384117126465, -1.2510817050933838, -1.1483418941497803, -0.01989341340959072, -0.17799459397792816, -0.00015364897262770683, -0.008568900637328625, -0.0083515215665102, -0.5337865352630615, -1.3232143828645349e-05, -0.0003875934926327318, -0.0029321794863790274, -0.001727756578475237, -0.0030588763765990734, -0.005969315301626921, -0.00021443451987579465, -6.318072337307967e-06, -0.004075674340128899, -2.1056907176971436, -1.9788545614574105e-05, -0.0014434166951104999, -0.09983758628368378, -0.01925620064139366, -0.19208617508411407, -2.1503028869628906, -0.7635881900787354, -0.11453516781330109, -0.0036893889773637056, -1.134292721748352, -0.0002661589242052287, -0.4286462366580963, -0.2529934346675873, -1.0736258029937744, -0.7858861088752747, -0.007300958968698978, -0.0030667202081531286, -2.90866428258596e-05, -3.3378546504536644e-06, -0.000704278820194304, -0.0037067292723804712, -0.0229830052703619, -0.4358770549297333, -0.0029572586063295603, -0.001639332971535623, -0.0062825800850987434, -9.775113539944869e-06, -0.000256982195423916, -0.28394919633865356, -2.4198153018951416, -0.06710215657949448, -0.139447882771492, -0.23991833627223969, -0.005369052290916443, -0.18840448558330536, -0.0005032941699028015, -0.5387906432151794, -0.03617172688245773, -0.0033868353348225355, -0.018065787851810455, -2.1001925468444824, -0.07217653840780258, -0.613805890083313, -2.7418097943154862e-06, -9.965400386136025e-05, -0.003322677919641137, -0.0017202593153342605, -0.0020800638012588024, -1.388824224472046, -0.15253081917762756, -0.00031573555315844715, -2.264974000354414e-06, -0.13524480164051056, -1.6366767883300781, -0.199212446808815, -0.016824491322040558, -2.2532105445861816, -0.03708110377192497, -1.9407167434692383, -2.745086669921875, -0.5510443449020386, -3.0966579914093018, -0.17317137122154236, -0.032664038240909576, -0.10042957961559296, -2.4899425506591797, -0.2542152404785156, -0.4607692062854767, -0.06934314221143723, -0.014144173823297024, -0.7454731464385986, -0.0004196478403173387, -1.5041611194610596, -0.07877351343631744, -0.06302063167095184, -1.680836794548668e-05, -7.772143726469949e-05, -0.0034448110964149237, -0.5079867243766785, -3.576278118089249e-07, -4.053033626405522e-05, -0.060315024107694626, -0.016146140173077583, -8.487341256113723e-05, -0.04161163046956062, -0.889327347278595, -0.3375724256038666, -0.11927103996276855, -0.0010170531459152699, -0.05796302482485771, -0.0019279003608971834, -0.0005184260080568492, -0.0006317288498394191, -0.012532645836472511, -1.0426052808761597, -0.17318400740623474, -0.011869283393025398, -0.0007914748275652528, -0.001291037304326892, -8.666139910928905e-05, -0.5739720463752747, -0.0014696045545861125, -0.007553350646048784, -2.2280867099761963, -0.006330793257802725, -0.014639108441770077, -0.19386371970176697, -0.07831759750843048, -0.010385045781731606, -0.02187388576567173, -0.003015378024429083, -1.4194598197937012, -1.4305104514278355e-06, -1.1920922133867862e-06, -1.4543427823809907e-05, -0.00010108436981681734, -0.08103733509778976], "finish_reason": "stop"}], "metrics": {"energy": 155.7750646190643, "energy_per_token": 1.1454048869048845, "time": 5.891328, "time_per_token": 0.043318588235294116}}
{"outputs": [{"text": "file_pattern = glob.glob(os.path.join(directory_path, f'*.{file_extension}'))\n\n    if len(file_pattern) == 0:\n        return {}\n\n    output = {}\n\n    for file_path in file_pattern:\n        with open(file_path, 'r') as file:\n            reader = csv.reader(file, delimiter=',')\n            header = next(reader)\n            output[os.path.basename(file_path).replace(file_extension, '')] = list(reader)\n\n    return output", "tokens": ["file", "_", "pattern", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "'", "*", ".", "{", "file", "_", "extension", "}'", "))", "\n", "\n", "    ", "if", " len", "(", "file", "_", "pattern", ")", " ==", " ", "0", ":", "\n", "        ", "return", " {}", "\n", "\n", "    ", "output", " =", " {}", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "pattern", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ",", " del", "im", "iter", "='", ",", "')", "\n", "            ", "header", " =", " next", "(", "reader", ")", "\n", "            ", "output", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", ".", "replace", "(", "file", "_", "extension", ",", " '", "')", "]", " =", " list", "(", "reader", ")", "\n", "\n", "    ", "return", " output", "\n", "\n", "if"], "logprobs": [-2.7383017539978027, -0.05651302635669708, -4.303812026977539, -0.0059287878684699535, -1.9715546369552612, -0.00011538793478393927, -0.007901128381490707, -0.008865518495440483, -0.40855151414871216, -8.583032467868179e-06, -0.00019774865359067917, -0.003986033145338297, -0.0009333306807093322, -0.002552348654717207, -0.008005201816558838, -0.00026556302327662706, -7.748573807475623e-06, -0.001498172408901155, -0.8638723492622375, -0.12764346599578857, -0.35557371377944946, -0.22053958475589752, -0.015719430521130562, -0.00051771110156551, -4.684815212385729e-05, -5.602679812000133e-05, -0.010028689168393612, -0.0015981532633304596, -0.012722281739115715, -1.7126765251159668, -0.00039939055568538606, -0.9606104493141174, -1.7176841497421265, -0.0003321811091154814, -0.0012523435289040208, -5.364403477869928e-06, -8.940297266235575e-05, -0.009196776896715164, -0.26080870628356934, -0.0003844952443614602, -0.0034155859611928463, -0.011473151855170727, -0.023949377238750458, -0.0030096732079982758, -0.11465943604707718, -0.07989891618490219, -0.005697676911950111, -0.1287403702735901, -0.00019500737835187465, -2.1439876556396484, -0.4386913478374481, -0.05784275755286217, -0.0024874242953956127, -0.4664766490459442, -0.00011443436960689723, -0.08497857302427292, -0.3460513949394226, -1.0414083003997803, -0.5427879095077515, -0.0031653561163693666, -0.005987682845443487, -1.6689286894688848e-06, -5.674201020156033e-05, -0.00032586511224508286, -0.0014115142403170466, -0.03494304418563843, -0.3150184154510498, -0.0018779276870191097, -0.0007215518853627145, -0.0044390237890183926, -1.2993727978027891e-05, -0.00018606838420964777, -0.184841588139534, -0.3453575670719147, -0.03266715258359909, -0.2604105770587921, -0.0010905277449637651, -0.32169902324676514, -0.03529500588774681, -0.0017961811972782016, -0.02922377549111843, -0.6204656362533569, -0.003504090243950486, -0.018969900906085968, -1.311301275563892e-06, -5.4834770708112046e-05, -0.007862688973546028, -0.000636255950666964, -0.0020673349499702454, -2.065824270248413, -0.10677395015954971, -0.0004904259694740176, -1.4305104514278355e-06, -0.12828949093818665, -0.13357055187225342, -0.3434932231903076, -0.0038180090487003326, -0.29956483840942383, -0.7292861342430115, -0.18152843415737152, -0.04454989358782768, -0.0002083561266772449, -0.0009049849468283355, -0.08352064341306686, -0.03923511877655983, -0.13337235152721405, -0.4655657708644867, -0.03972145915031433, -0.037804752588272095, -3.814689989667386e-06, -7.712543447269127e-05, -0.005478013306856155, -0.33753958344459534, -1.0728830375228426e-06, -0.00013076403411105275, -0.009588496759533882, -0.008741564117372036, -0.00023016665363684297, -0.1199285164475441, -0.30245688557624817, -1.2464444637298584, -0.18038137257099152, -0.1760348528623581, -0.0001411338453181088, -0.0051083993166685104, -0.0020217709243297577, -0.05832620710134506, -0.0004895919119007885, -0.028313245624303818, -0.0012020989088341594, -0.4826221764087677, -0.001450320822186768, -0.05247766524553299, -0.006980082020163536, -0.006329371593892574, -0.06968242675065994, -0.006606996525079012, -0.004706139676272869, -0.0022590849548578262, -0.5729504227638245, -0.014840091578662395, -0.8092212677001953], "finish_reason": "stop"}], "metrics": {"energy": 147.68947674369815, "energy_per_token": 1.0400667376316772, "time": 6.0964723, "time_per_token": 0.04293290352112676}}
{"outputs": [{"text": "try:\n        result = {}\n        extensions = glob.glob(os.path.join(directory_path, '*' + file_extension))\n        for path in extensions:\n            with open(path, 'r') as f:\n                data = list(csv.reader(f))\n                # data.pop(0)\n                result[os.path.basename(path)[:-len(file_extension)]] = data\n        return result\n    except Exception as exc:\n        print(\"error: \", exc)", "tokens": ["try", ":", "\n", "        ", "result", " =", " {}", "\n", "        ", "extensions", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", "\n", "        ", "for", " path", " in", " extensions", ":", "\n", "            ", "with", " open", "(", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "                ", "data", " =", " list", "(", "csv", ".", "reader", "(", "f", "))", "\n", "                ", "#", " data", ".", "pop", "(", "0", ")", "\n", "                ", "result", "[", "os", ".", "path", ".", "bas", "ename", "(", "path", ")", "[:", "-", "len", "(", "file", "_", "extension", ")", "]]", " =", " data", "\n", "        ", "return", " result", "\n", "    ", "except", " Exception", " as", " exc", ":", "\n", "        ", "print", "(", "\"", "error", ":", " \"", ",", " exc", ")", "\n", "\n", "if"], "logprobs": [-3.082089900970459, -0.0010852882405743003, -0.00692195538431406, -0.014238432049751282, -2.4046640396118164, -0.17018204927444458, -0.10187416523694992, -0.007081173360347748, -0.13810104131698608, -4.0455641746521, -0.11461947113275528, -1.785119891166687, -0.00019262365822214633, -0.009423418901860714, -0.02215958759188652, -0.8516828417778015, -1.0013530300057027e-05, -0.0005030558677390218, -0.0048123253509402275, -0.004864524118602276, -0.0026605469174683094, -0.010211131535470486, -0.00022432672267314047, -9.417489309271332e-06, -0.0018828060710802674, -0.804947018623352, -0.0851563811302185, -0.2798084020614624, -0.0010131231974810362, -0.003310083644464612, -1.537788011773955e-05, -6.651657167822123e-05, -0.00549662671983242, -0.011042319238185883, -0.07316291332244873, -0.1807953417301178, -3.406651496887207, -0.06359410285949707, -0.004283064045011997, -0.0003216941258870065, -0.005426320247352123, -0.005531837232410908, -0.6216367483139038, -0.004060833714902401, -0.001553520211018622, -0.012819499708712101, -0.27740949392318726, -0.5371988415718079, -0.042565543204545975, -0.2632887661457062, -0.0023246188648045063, -1.5970362424850464, -0.04075145721435547, -0.0039575365372002125, -0.0026657781563699245, -2.6113646030426025, -0.04067351669073105, -1.557395339012146, -0.004064276814460754, -0.007514898665249348, -0.00016020445036701858, -0.0032164526637643576, -0.08693895488977432, -0.004472728352993727, -0.300653338432312, -0.05169086903333664, -0.12097528576850891, -3.863252878189087, -3.3661444187164307, -1.4893007278442383, -0.29208606481552124, -0.00850046519190073, -0.004383123014122248, -0.0014617482665926218, -0.47263580560684204, -0.0235279630869627, -0.6179448366165161, -0.10626416653394699, -0.09815503656864166, -0.00011503035057103261, -0.0001586549769854173, -0.0038633723743259907, -0.20199482142925262, -1.8358061424805783e-05, -0.00025412190007045865, -0.030671661719679832, -0.0848957896232605, -0.928076982498169, -0.06970755755901337, -0.5655046701431274, -0.006071338430047035, -0.00318971648812294, -3.433168603805825e-05, -9.512448741588742e-05, -0.019066045060753822, -0.012279977090656757, -0.0038067272398620844, -0.013784687034785748, -0.0496438592672348, -0.2586740553379059, -0.02837616764008999, -0.002977701835334301, -0.0019125519320368767, -0.08208595961332321, -0.003174387151375413, -0.7900413870811462, -0.2161933034658432, -3.0607411861419678, -0.022799499332904816, -0.007745353039354086, -0.001341872732155025, -0.492689311504364, -0.15844662487506866, -1.927297592163086, -3.6978235244750977, -1.3129018545150757, -0.4547728896141052, -0.24953384697437286, -0.15067757666110992, -0.17473341524600983, -0.024196788668632507, -0.9919553995132446, -0.5729956030845642], "finish_reason": "stop"}], "metrics": {"energy": 131.97178437900544, "energy_per_token": 1.0729413364146785, "time": 5.475767, "time_per_token": 0.044518430894308944}}
{"outputs": [{"text": "files = glob.glob(os.path.join(directory_path, f'*{file_extension}'))\n    output = {}\n\n    for file_path in files:\n        with open(file_path, 'r') as f:\n            reader = csv.reader(f)\n            data = [list(row) for row in reader][1:]\n            file_name = os.path.splitext(os.path.basename(file_path))[0]\n            output[file_name] = data\n\n    return output", "tokens": ["files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "'", "*{", "file", "_", "extension", "}'", "))", "\n", "    ", "output", " =", " {}", "\n", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "            ", "data", " =", " [", "list", "(", "row", ")", " for", " row", " in", " reader", "][", "1", ":]", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "[", "0", "]", "\n", "            ", "output", "[", "file", "_", "name", "]", " =", " data", "\n", "\n", "    ", "return", " output", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.4549384117126465, -0.3464662730693817, -0.13178932666778564, -0.0001436368766007945, -0.007456211838871241, -0.005328381434082985, -0.44191569089889526, -1.168244216387393e-05, -0.0001829695247579366, -0.0025739893317222595, -0.0011965028243139386, -0.001675869687460363, -0.00303498818539083, -0.00030429501202888787, -5.960446742392378e-06, -0.0017945152940228581, -1.1802277565002441, -0.13098850846290588, -1.1745481491088867, -0.0006455483380705118, -9.536697689327411e-06, -4.6967357775429264e-05, -0.003726207185536623, -0.0007412070408463478, -0.014050493948161602, -0.22833919525146484, -2.3377912044525146, -0.2565849721431732, -0.09897911548614502, -0.003493636380881071, -1.0496506690979004, -0.00023600654094479978, -0.32647404074668884, -0.20803062617778778, -1.59550142288208, -0.5459759831428528, -0.0019282572902739048, -0.002804396441206336, -0.0002548369811847806, -0.0031907858792692423, -0.009158859960734844, -0.30921655893325806, -0.0013598490040749311, -0.000773488252889365, -0.002751257736235857, -1.9311717551317997e-05, -0.00014840454969089478, -0.20384128391742706, -0.35699352622032166, -0.026042522862553596, -0.16114433109760284, -0.001069093239493668, -1.7435996532440186, -0.0222459826618433, -0.002276450162753463, -0.007759311236441135, -0.4790498614311218, -0.0014059193199500442, -0.020480703562498093, -2.3841830625315197e-06, -5.817244164063595e-05, -0.0032857260666787624, -0.0006049233488738537, -0.0007314390386454761, -0.11289890855550766, -0.001998809864744544, -0.0858188346028328, -3.594926357269287, -0.021819185465574265, -0.9135521650314331, -2.6810951232910156, -0.0007142852991819382, -0.06312102824449539, -0.004671256057918072, -0.0017034795600920916, -0.001157329068519175, -8.332382276421413e-05, -0.005055027082562447, -2.359480381011963, -0.0067075337283313274, -0.014158277772367, -0.3545040786266327, -0.27294036746025085, -2.3375988006591797, -0.030450593680143356, -0.055315304547548294, -0.024666188284754753, -0.10706467181444168, -5.6980417866725475e-05, -7.664863369427621e-05, -0.0015704215038567781, -1.5581939220428467, -1.6331539882230572e-05, -4.768370445162873e-07, -0.00015901254664640874, -0.23766769468784332, -0.0007115454645827413, -1.8954096958623268e-05, -0.0032031440641731024, -0.007993494160473347, -2.3841855067985307e-07, -9.881961887003854e-05, -0.005567639134824276, -5.602679812000133e-05, -2.372236667724792e-05, -0.0011155341053381562, -0.0005131834768690169, -0.0010315817780792713, -0.00403340719640255, -0.021441562101244926, -0.06920377165079117, -0.02975446730852127, -0.012082718312740326, -0.0007496645557694137, -2.7418097943154862e-06, -0.00010990492592100054, -0.0022518294863402843, -5.4834770708112046e-05, -0.003927376586943865, -0.003643661504611373, -0.1545531451702118, -0.0036406919825822115, -0.013153097592294216, -0.003888428211212158, -1.6464512348175049, -1.6689286894688848e-06, -9.536738616588991e-07, -2.8132995794294402e-05, -0.00011264643399044871, -0.07089994102716446], "finish_reason": "stop"}], "metrics": {"energy": 150.69419809913634, "energy_per_token": 1.1591861392241256, "time": 5.6920786, "time_per_token": 0.04378522}}
{"outputs": [{"text": "rows = {}\n    for file in glob.glob(f\"{directory_path}/*{file_extension}\"):\n        with open(file, 'r', newline='', encoding='utf-8') as f:\n            reader = csv.reader(f)\n            rows[os.path.splitext(os.path.basename(file))[0]] = list(reader)[1:]\n    return rows", "tokens": ["rows", " =", " {}", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "_", "path", "}", "/*", "{", "file", "_", "extension", "}\"", "):", "\n", "        ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " new", "line", "=", "''", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "            ", "rows", "[", "os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "[", "0", "]]", " =", " list", "(", "reader", ")[", "1", ":]", "\n", "    ", "return", " rows", "\n", "\n", "if"], "logprobs": [-4.5962138175964355, -0.37008941173553467, -0.7015842795372009, -0.012966602109372616, -0.3605114817619324, -1.0191669464111328, -0.8385350704193115, -0.7455376386642456, -0.03844413906335831, -6.496695277746767e-05, -0.05276855453848839, -0.007651190273463726, -1.784463882446289, -0.833622395992279, -0.012991548515856266, -0.005801979918032885, -0.00017510310863144696, -5.245195097813848e-06, -0.4084489047527313, -0.009710339829325676, -0.07515254616737366, -0.001023364719003439, -6.794906312279636e-06, -7.784063927829266e-05, -0.0025810045190155506, -0.007602567318826914, -0.018641397356987, -0.014498244039714336, -0.49431243538856506, -0.0018114125123247504, -0.0015123370103538036, -0.010829368606209755, -0.1795988231897354, -0.5624189376831055, -0.017346220090985298, -1.7083923816680908, -0.0019518149783834815, -1.8115723133087158, -0.0006335158832371235, -0.9386857151985168, -0.38872241973876953, -0.00032145579461939633, -0.03302187845110893, -0.1123301312327385, -0.08760885149240494, -0.17799368500709534, -0.004251489415764809, -0.1503385305404663, -0.0015976772410795093, -0.8898179531097412, -0.028443025425076485, -0.005505755078047514, -0.006141006946563721, -0.7303624153137207, -0.0017227584030479193, -0.02908969670534134, -1.7881377516459906e-06, -7.545663538621739e-05, -0.006229270249605179, -0.0006413786904886365, -0.002702158410102129, -0.25937116146087646, -0.002519886940717697, -0.029401706531643867, -1.1750800609588623, -0.044628676027059555, -0.052256274968385696, -4.291525328881107e-06, -0.00012051333033014089, -0.0035429345443844795, -1.394557237625122, -4.0649541915627196e-05, -2.8609820219571702e-05, -0.00028868322260677814, -1.298386812210083, -0.0011075560469180346, -6.48477507638745e-05, -0.007376103196293116, -0.0202539823949337, -1.1920928244535389e-07, -0.00013457823661156, -0.017106249928474426, -0.0015710166189819574, -0.0009913297835737467, -0.0008181562297977507, -0.003018111689016223, -0.0039004215504974127, -0.34222546219825745, -0.0010438475292176008, -0.03393654152750969, -2.709611654281616, -0.007910116575658321, -0.01411149837076664, -0.03539258614182472, -0.28860577940940857, -0.023131299763917923, -0.003500170074403286, -0.3897610008716583, -0.017904680222272873, -0.8900354504585266], "finish_reason": "stop"}], "metrics": {"energy": 138.11841895294188, "energy_per_token": 1.3811841895294188, "time": 4.212924, "time_per_token": 0.04212924}}
{"outputs": [{"text": "result_data = {}\n    file_extension_length = len(file_extension)\n    files = glob.glob(f'{directory_path}/{file_extension}')\n    for file in files:\n        with open(file) as file_stream:\n            file_data = csv.reader(file_stream, delimiter=',', quotechar='\"')\n            file_data_list = list(file_data)\n            file_name = os.path.basename(file)[: -file_extension_length]\n            result_data[file_name] = file_data_list\n    return result_data", "tokens": ["result", "_", "data", " =", " {}", "\n", "    ", "file", "_", "extension", "_", "length", " =", " len", "(", "file", "_", "extension", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "directory", "_", "path", "}/{", "file", "_", "extension", "}", "')", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", ")", " as", " file", "_", "stream", ":", "\n", "            ", "file", "_", "data", " =", " c", "sv", ".", "reader", "(", "file", "_", "stream", ",", " del", "im", "iter", "='", ",", "'", ",", " quote", "char", "='", "\"", "')", "\n", "            ", "file", "_", "data", "_", "list", " =", " list", "(", "file", "_", "data", ")", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "[:", " -", "file", "_", "extension", "_", "length", "]", "\n", "            ", "result", "_", "data", "[", "file", "_", "name", "]", " =", " file", "_", "data", "_", "list", "\n", "    ", "return", " result", "_", "data", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.522510051727295, -1.9298923015594482, -2.115203380584717, -0.061069048941135406, -0.14841781556606293, -0.012139367870986462, -0.4022357761859894, -2.0001707077026367, -0.03419819846749306, -3.424617290496826, -1.5925356149673462, -1.935685634613037, -0.0077946786768734455, -0.009621910750865936, -0.007347111124545336, -0.025663353502750397, -4.4225667807040736e-05, -4.827859811484814e-05, -0.024522192776203156, -0.042987123131752014, -0.3704938292503357, -1.7320126295089722, -0.5605073571205139, -0.1065412163734436, -8.284702198579907e-05, -0.020943444222211838, -0.006197283044457436, -1.3756624460220337, -0.7350318431854248, -0.004515926353633404, -0.0002361257211305201, -9.536697689327411e-06, -2.4698448181152344, -0.10316335409879684, -0.009102986194193363, -0.004305379465222359, -0.25967565178871155, -0.30210214853286743, -0.021002279594540596, -0.18577398359775543, -0.3050924837589264, -0.2819698750972748, -0.22502633929252625, -0.006702442187815905, -0.000898077036254108, -0.004562800750136375, -0.006118021905422211, -0.912356436252594, -0.0021196771413087845, -0.0025307077448815107, -0.012999197468161583, -1.7059646844863892, -0.0006332775810733438, -1.3479111194610596, -0.596881628036499, -3.572390556335449, -0.006245974451303482, -0.005780646111816168, -0.00646227179095149, -1.8820408582687378, -0.018663043156266212, -1.428123950958252, -0.023264314979314804, -0.49051108956336975, -9.894321920000948e-06, -0.00019000156316906214, -0.00937606394290924, -0.0032778840977698565, -0.00849597342312336, -0.00248754327185452, -3.7788631743751466e-05, -1.1078321933746338, -0.16458989679813385, -0.0009179668850265443, -1.4066597032069694e-05, -0.1443367451429367, -0.13490985333919525, -1.0088106393814087, -0.0056380536407232285, -0.12559419870376587, -0.00010132275929208845, -0.0078073348850011826, -0.1565077006816864, -0.3052038848400116, -0.0081670843064785, -0.04842868074774742, -1.252383828163147, -0.005119310691952705, -0.992985725402832, -1.1735947132110596, -0.5319234728813171, -0.012666960246860981, -0.6010240912437439, -0.0030223901849240065, -0.0333823561668396, -2.8967437174287625e-05, -4.565611743601039e-05, -0.04277664050459862, -0.014385208487510681, -0.09116462618112564, -0.9776352047920227, -0.005944667384028435, -0.47643977403640747, -0.13014686107635498, -0.4799172580242157, -1.2278481335670222e-05, -0.00033766290289349854, -0.005811224225908518, -0.23800957202911377, -1.0728830375228426e-06, -0.00025281094713136554, -0.0073073492385447025, -0.07605776935815811, -0.7159852385520935, -2.6878583431243896, -0.16164322197437286, -1.7762025890988298e-05, -0.0001062098381225951, -0.0001911934232339263, -3.576214658096433e-05, -0.03981631621718407, -0.022251112386584282, -0.028067663311958313, -0.20479190349578857, -0.000788139586802572, -0.0005414212355390191, -0.07329120486974716, -0.0046008918434381485, -0.00012659224739763886, -6.007967749610543e-05, -0.0028439811430871487, -0.000276765669696033, -0.03365510702133179, -2.038458114839159e-05, -0.00019441144831944257, -0.00045348849380388856, -9.65590606938349e-06, -0.3975974917411804, -0.3385552763938904, -0.022570274770259857, -0.003158463630825281, -4.279521817807108e-05, -2.50339189733495e-06, -1.453831434249878, -5.960462772236497e-07, -1.0728830375228426e-06, -1.5020257706055418e-05, -0.00014220656885299832, -0.09749108552932739], "finish_reason": "stop"}], "metrics": {"energy": 195.8221067790986, "energy_per_token": 1.3142423273765007, "time": 6.518964, "time_per_token": 0.04375143624161074}}
{"outputs": [{"text": "file_data = {}\n    if os.path.exists(directory_path):\n        file_names = glob.glob(f'{directory_path}/*{file_extension}')\n        if file_names:\n            for filename in file_names:\n                file_data.update({os.path.basename(filename)[:-len(file_extension)]: csv.reader(open(filename, 'r'), delimiter=';')})\n        return file_data\n    else:\n        return {}", "tokens": ["file", "_", "data", " =", " {}", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "file", "_", "names", " =", " glob", ".", "glob", "(", "f", "'{", "directory", "_", "path", "}", "/*", "{", "file", "_", "extension", "}", "')", "\n", "        ", "if", " file", "_", "names", ":", "\n", "            ", "for", " filename", " in", " file", "_", "names", ":", "\n", "                ", "file", "_", "data", ".", "update", "({", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", "[:", "-", "len", "(", "file", "_", "extension", ")]", ":", " c", "sv", ".", "reader", "(", "open", "(", "filename", ",", " '", "r", "')", ",", " del", "im", "iter", "='", ";", "')", "})", "\n", "        ", "return", " file", "_", "data", "\n", "    ", "else", ":", "\n", "        ", "return", " {}", "\n", "\n", "if"], "logprobs": [-2.7383017539978027, -0.05651302635669708, -2.206336736679077, -0.07733376324176788, -0.1589299887418747, -0.016125261783599854, -0.2897205650806427, -2.8168749809265137, -1.4597978591918945, -0.0001864259538706392, -0.017420731484889984, -0.013652874156832695, -1.4449323415756226, -0.002686821622774005, -0.0036624278873205185, -0.00024172721896320581, -7.629365427419543e-06, -0.34232085943222046, -0.026106052100658417, -0.012177172116935253, -1.8522127866744995, -0.018639875575900078, -1.7648704051971436, -0.03982238844037056, -0.12181159853935242, -7.83174327807501e-05, -0.004910314455628395, -0.0033324207179248333, -2.0281777381896973, -0.9314121603965759, -0.009098143316805363, -7.068861305015162e-05, -1.7404405298293568e-05, -0.39259594678878784, -0.01795397512614727, -0.05929229408502579, -0.0009708458674140275, -5.674201020156033e-05, -0.0001426833332516253, -0.131055548787117, -0.0007107115816324949, -0.006254029925912619, -0.04300824552774429, -1.8689980506896973, -0.45590221881866455, -2.372236667724792e-05, -0.004006574396044016, -0.034338388592004776, -0.010930308140814304, -0.002389316214248538, -0.061759524047374725, -2.2693538665771484, -0.001762266969308257, -0.004562800750136375, -6.556489552167477e-06, -4.9232225137529895e-05, -0.00022885564249008894, -0.002330684568732977, -0.0017803546506911516, -1.6889487504959106, -0.11607088893651962, -0.30591079592704773, -2.703385591506958, -0.14031220972537994, -0.22106973826885223, -0.29086723923683167, -1.7046782886609435e-05, -0.0002162222663173452, -0.00417088670656085, -0.380127876996994, -2.264974000354414e-06, -0.0002675890573300421, -0.029995586723089218, -0.09104513376951218, -0.6002954244613647, -0.05503903329372406, -0.3915686011314392, -0.002430463209748268, -0.0035549320746213198, -6.806619057897478e-05, -0.0003927174839191139, -0.0111928666010499, -0.6187028288841248, -3.382394790649414, -0.0001003691868390888, -0.011373328045010567, -0.013367317616939545, -0.01880659908056259, -0.04685933515429497, -0.0008015995263122022, -0.011619745753705502, -0.7217844724655151, -0.3079290986061096, -0.10731559246778488, -1.3298161029815674, -0.015527426265180111, -0.32805871963500977, -0.0010218166280537844, -5.722029527532868e-06, -0.20715481042861938, -2.110384464263916, -0.08557844161987305, -0.0955977812409401, -0.009501592256128788, -0.8371740579605103, -2.807910680770874, -0.009941351599991322, -2.1219027985353023e-05, -0.00026127262390218675, -0.015297584235668182, -0.10556900501251221, -0.3391972780227661, -0.0002843929105438292, -0.005882451310753822, -0.0014432977186515927, -0.5783073902130127, -0.36158615350723267, -0.3647216260433197, -0.03387961536645889, -0.9768205881118774], "finish_reason": "stop"}], "metrics": {"energy": 118.91308312797547, "energy_per_token": 0.9909423593997956, "time": 5.0595775, "time_per_token": 0.04216314583333333}}
{"outputs": [{"text": "files = glob.glob(f\"{directory_path}/*{file_extension}\")\n\n    data = {}\n    for file in files:\n        with open(file, 'r', newline='') as csv_file:\n            rows = csv.reader(csv_file, delimiter=',')\n            next(rows)  # skip the header\n            data[os.path.splitext(file)[0]] = list(rows)\n\n    return data", "tokens": ["files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "_", "path", "}", "/*", "{", "file", "_", "extension", "}\"", ")", "\n", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "            ", "rows", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "')", "\n", "            ", "next", "(", "rows", ")", "  ", "#", " skip", " the", " header", "\n", "            ", "data", "[", "os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "0", "]]", " =", " list", "(", "rows", ")", "\n", "\n", "    ", "return", " data", "\n", "\n", "def"], "logprobs": [-2.4549384117126465, -0.3464662730693817, -0.13178932666778564, -0.0001436368766007945, -0.007456211838871241, -0.005328381434082985, -1.9291326999664307, -0.5415455102920532, -0.011690206825733185, -0.004964880645275116, -0.0001408954558428377, -9.536697689327411e-06, -0.45524904131889343, -0.01427133847028017, -0.03825507313013077, -0.0012448427733033895, -3.4450891689630225e-05, -6.580135959666222e-05, -0.002140494529157877, -0.005943956319242716, -0.01799565739929676, -1.4054782390594482, -0.0002779574424494058, -1.479954481124878, -0.1468144953250885, -0.12650291621685028, -0.0049335649237036705, -0.9915645122528076, -0.22861561179161072, -0.25889453291893005, -0.21008139848709106, -0.002779432339593768, -0.0004010588163509965, -0.0019386084750294685, -0.013506930321455002, -0.43159767985343933, -0.0014223469188436866, -0.0012622254434973001, -0.005376284942030907, -0.15923775732517242, -0.5778225064277649, -0.01575780287384987, -1.8821079730987549, -0.0014321081107482314, -1.6720126867294312, -0.0005757343024015427, -0.4538359045982361, -0.0006316096987575293, -0.0004408579843584448, -1.4009727239608765, -0.0018923247698694468, -0.38003674149513245, -0.010930425487458706, -0.00029309268575161695, -0.0029372903518378735, -0.0117262601852417, -3.0612096786499023, -0.015321768820285797, -0.70027095079422, -5.9960475482512265e-05, -0.002279066713526845, -0.004250064957886934, -0.00010334911348763853, -0.0007310817018151283, -4.8040190449682996e-05, -5.364403477869928e-06, -1.5103521347045898, -0.10236401855945587, -0.0004742213059216738, -8.344646857949556e-07, -0.12211518734693527, -0.10554508119821548, -0.26036059856414795, -0.007440001238137484, -0.09152965992689133, -2.3516883850097656, -0.0008061258122324944, -0.008128774352371693, -0.3190293312072754, -0.9240878820419312, -0.00011288482346571982, -1.105008602142334, -0.874717116355896, -0.10967966169118881, -1.1635407209396362, -0.21310877799987793, -0.3105234205722809, -0.031925689429044724, -0.03212380409240723, -4.410734163684538e-06, -0.00011836781777674332, -0.005365732125937939, -1.592944622039795, -3.4689302992774174e-05, -1.4305104514278355e-06, -0.00010656742961145937, -0.4833243787288666, -0.09311521053314209, -0.004542745649814606, -0.052876878529787064, -0.0009752523037604988, -0.24226798117160797, -0.0012398421531543136, -0.013986782170832157, -0.004478662274777889, -0.08199062943458557, -0.17241999506950378, -0.003649837803095579, -0.013654755428433418, -0.0015732781030237675, -0.2601996064186096, -0.012082718312740326, -1.3627712726593018], "finish_reason": "stop"}], "metrics": {"energy": 146.57295071601865, "energy_per_token": 1.2971057585488377, "time": 4.8500023, "time_per_token": 0.042920374336283186}}
{"outputs": [{"text": "file_list = glob.glob(directory_path + '/*' + file_extension)\n    file_data = {}\n    for file in file_list:\n        if os.path.isfile(file):\n            with open(file, newline='') as csv_file:\n                file_data[os.path.basename(file).split('.')[0]] = []\n                reader = csv.reader(csv_file)\n                headers = next(reader)\n                file_data[os.path.basename(file).split('.')[0]].append(headers)\n                for row in reader:\n                    file_data[os.path.basename(file).split('.')[0]].append(row)\n        else:\n            continue\n    return file_data", "tokens": ["file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", "'", " +", " file", "_", "extension", ")", "\n", "    ", "file", "_", "data", " =", " {}", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "with", " open", "(", "file", ",", " new", "line", "='", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "file", "_", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", " =", " []", "\n", "                ", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ")", "\n", "                ", "headers", " =", " next", "(", "reader", ")", "\n", "                ", "file", "_", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", ".", "append", "(", "headers", ")", "\n", "                ", "for", " row", " in", " reader", ":", "\n", "                ", "    ", "file", "_", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", ".", "append", "(", "row", ")", "\n", "        ", "else", ":", "\n", "            ", "continue", "\n", "    ", "return", " file", "_", "data", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.7383017539978027, -0.05651302635669708, -1.4647424221038818, -0.020358646288514137, -0.15840919315814972, -0.00014399446081370115, -0.007973034866154194, -0.008470087312161922, -1.2782360315322876, -0.00018344627460464835, -2.2172682292875834e-05, -0.05969463661313057, -1.0971300601959229, -0.09537186473608017, -0.056508518755435944, -0.0009901388548314571, -0.005199362989515066, -5.364403477869928e-06, -0.000161038784426637, -0.04667356237769127, -0.020594803616404533, -0.15649822354316711, -2.499394416809082, -0.011490829288959503, -1.0401921272277832, -0.10910765826702118, -0.13588061928749084, -0.005937675479799509, -0.5310376882553101, -0.29915985465049744, -0.31738296151161194, -0.5774202346801758, -0.00275470525957644, -6.0437283536884934e-05, -1.7165990357170813e-05, -0.0005981324939057231, -0.005503028631210327, -0.007758601568639278, -2.484382152557373, -1.01863431930542, -3.313963316031732e-05, -0.03153003379702568, -0.002674813847988844, -0.12002620846033096, -0.0277139600366354, -0.0013684204313904047, -0.00208291900344193, -0.07454019039869308, -0.017330989241600037, -0.004052878823131323, -0.4485401213169098, -0.0010374169796705246, -0.002012729411944747, -0.0013168720761314034, -0.13058467209339142, -1.8272247314453125, -0.00014101465058047324, -0.2262325882911682, -0.0005990855861455202, -0.000699156429618597, -0.5990384221076965, -0.00318971648812294, -0.30765148997306824, -0.020866744220256805, -0.0007337023853324354, -0.004948274232447147, -0.002360417041927576, -2.396193742752075, -0.01173804234713316, -0.7348856329917908, -0.14269296824932098, -0.12357558310031891, -0.001039322349242866, -6.103329360485077e-05, -0.01195657067000866, -0.277811199426651, -3.099436753473128e-06, -0.0001951265730895102, -0.02956976927816868, -0.07257184386253357, -0.3768339455127716, -0.5176665782928467, -0.14438988268375397, -0.0006449526408687234, -0.027550339698791504, -0.0006317288498394191, -0.0006273209000937641, -0.0027775303460657597, -0.006634115241467953, -2.3392715454101562, -0.017606163397431374, -0.025328557938337326, -0.862644612789154, -0.01292871031910181, -0.009626987390220165, -5.722029527532868e-06, -0.00022849810193292797, -0.015112546272575855, -0.00017736769223120064, -0.0013066334649920464, -3.194758028257638e-05, -2.7418097943154862e-06, -0.15106354653835297, -0.0014810318825766444, -0.013772458769381046, -2.1476101875305176, -0.014100567437708378, -0.10649588704109192, -0.0001538873475510627, -0.006369527895003557, -0.0672358050942421, -0.04961402714252472, -0.013486701063811779, -0.3311109244823456, -0.0003895000845659524, -0.001924568903632462, -0.004181095864623785, -0.0015869655180722475, -0.0006100462633185089, -1.1801649634435307e-05, -0.00012087091454304755, -0.0018408034229651093, -0.0005712069687433541, -0.00010084597306558862, -0.0017871374730020761, -0.010191425681114197, -0.00019596086349338293, -0.0003632839070633054, -0.0013359201839193702, -3.683499380713329e-05, -0.00013493580627255142, -6.949660019017756e-05, -0.0001662831346038729, -0.002239697612822056, -0.049015797674655914, -0.01256372407078743, -0.03087395615875721, -0.030874071642756462, -0.001313300454057753, -0.004446500446647406, -0.04264596849679947, -0.06844694912433624, -0.04942036792635918, -0.004056321922689676, -0.0017101438716053963, -0.00012015574611723423, -0.0021999699529260397, -0.0003583981015253812, -0.0012178155593574047, -0.09161645919084549, -2.47952248173533e-05, -0.00027259447961114347, -0.000271521887043491, -0.000942977552767843, -0.0006872437661513686, -1.537788011773955e-05, -2.9205850296420977e-05, -0.0009397619287483394, -0.003041287185624242, -5.8053239627042785e-05, -0.0009342834819108248, -0.0006835508393123746, -0.00014411364099942148, -0.00032669928623363376, -0.000608854868914932, -2.002696055569686e-05, -2.5152843591058627e-05, -2.109982233378105e-05, -0.000276765669696033, -0.00020251607929822057, -0.00046492734691128135, -0.0009664393728598952, -0.09306894242763519, -0.026464387774467468, -0.0018684087553992867, -0.0008557948167435825, -1.3435349464416504, -0.03325148671865463, -0.000300958170555532, -0.016751693561673164, -0.0017282324843108654, -2.131185531616211, -0.006300822831690311, -0.14766600728034973, -0.022152358666062355, -0.010116138495504856, -5.722029527532868e-06, -5.6265202147187665e-05, -1.515428066253662, -1.311301275563892e-06, -1.311301275563892e-06, -7.867782187531702e-06, -0.00018821375851985067, -0.09239399433135986], "finish_reason": "stop"}], "metrics": {"energy": 222.99771997833244, "energy_per_token": 1.1494727833934661, "time": 8.625757, "time_per_token": 0.044462664948453606}}
{"outputs": [{"text": "all_files_with_extension = glob.glob(directory_path + '/*' + file_extension)\n    all_files_without_extension = [\n        file_name.split('.', maxsplit=1)[0] for file_name in all_files_with_extension\n    ]\n\n    data = {}\n    for file_name in all_files_without_extension:\n        file_path = os.path.join(directory_path, file_name + file_extension)\n        try:\n            with open(file_path, 'r') as csv_file:\n                csv_reader = csv.reader(csv_file, delimiter=',')\n                header_row = next(csv_reader)\n                data[file_name] = list(csv_reader)\n        except FileNotFoundError:\n            # file_not_found.txt\n            pass\n\n    return data", "tokens": ["all", "_", "files", "_", "with", "_", "extension", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", "'", " +", " file", "_", "extension", ")", "\n", "    ", "all", "_", "files", "_", "without", "_", "extension", " =", " [", "\n", "        ", "file", "_", "name", ".", "split", "('", ".", "'", ",", " max", "split", "=", "1", ")[", "0", "]", " for", " file", "_", "name", " in", " all", "_", "files", "_", "with", "_", "extension", "\n", "    ", "]", "\n", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " file", "_", "name", " in", " all", "_", "files", "_", "without", "_", "extension", ":", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", " +", " file", "_", "extension", ")", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "r", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "csv", "_", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "')", "\n", "                ", "header", "_", "row", " =", " next", "(", "csv", "_", "reader", ")", "\n", "                ", "data", "[", "file", "_", "name", "]", " =", " list", "(", "csv", "_", "reader", ")", "\n", "        ", "except", " File", "NotFound", "Error", ":", "\n", "            ", "#", " file", "_", "not", "_", "found", ".", "txt", "\n", "            ", "pass", "\n", "\n", "    ", "return", " data", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.831357479095459, -0.018419174477458, -0.45162802934646606, -2.137380599975586, -2.5004098415374756, -0.003647818695753813, -0.39202284812927246, -0.055358391255140305, -0.0832587480545044, -0.00012134769349358976, -0.012471074238419533, -0.005338223185390234, -1.427203893661499, -0.00019238528329879045, -3.2782016205601394e-05, -0.05467453971505165, -1.0715285539627075, -0.13052305579185486, -0.06133401766419411, -0.0007136897183954716, -0.005270277615636587, -4.279521817807108e-05, -6.723177648382261e-05, -0.025564588606357574, -0.024515097960829735, -0.20674200356006622, -2.3958237171173096, -0.0008100565755739808, -0.3072052299976349, -0.342880517244339, -1.9534261226654053, -0.00042465253500267863, -0.026975426822900772, -0.01229763962328434, -1.0517499446868896, -2.4777777194976807, -0.010427752509713173, -1.3549439907073975, -0.5314204692840576, -0.3708750605583191, -0.34749194979667664, -0.5862172842025757, -0.7626452445983887, -0.006148708052933216, -2.211853265762329, -0.9355618953704834, -0.8447206616401672, -3.659658250398934e-05, -0.010152839124202728, -0.02463013306260109, -0.01222733873873949, -0.007356578018516302, -0.0028851095121353865, -0.3095749020576477, -0.0013947292463853955, -3.075552376685664e-05, -0.0006249382277019322, -0.0019437245791777968, -0.01088325958698988, -6.6756979322235566e-06, -1.1920858014491387e-05, -1.2397689715726301e-05, -0.0001984637783607468, -6.198863957251888e-06, -6.806619057897478e-05, -0.8042360544204712, -0.052902206778526306, -0.0006810491322539747, -0.02326349914073944, -1.367143154144287, -0.00024625606602057815, -1.4120129346847534, -0.29872092604637146, -0.3998080790042877, -0.004581549670547247, -0.42541489005088806, -0.07872239500284195, -0.28143832087516785, -0.23536033928394318, -0.14943921566009521, -0.017640363425016403, -0.007255514618009329, -5.364403477869928e-06, -9.417489309271332e-06, -4.565611743601039e-05, -0.020496586337685585, 0.0, -5.245195097813848e-06, -0.0005559567362070084, -0.002554489066824317, -0.01081769447773695, -1.934632420539856, -0.1929437518119812, -0.26569944620132446, -0.009719784371554852, -0.9030526876449585, -1.4543427823809907e-05, -0.0006098079611547291, -0.010830548591911793, -0.007056789472699165, -0.002095409668982029, -0.010470929555594921, -3.3378546504536644e-06, -4.291525328881107e-06, -0.00139246741309762, -0.10950060933828354, -2.3841574147809297e-05, -0.0002094287920044735, -0.0981556847691536, -0.048838481307029724, -1.2636104656849056e-05, -7.402622577501461e-05, -0.00040892345714382827, -0.0018922057934105396, -0.07202336192131042, -2.6798951625823975, -7.509902934543788e-05, -0.0016659918474033475, -0.0009445258183404803, -0.23726917803287506, -0.0015144795179367065, -0.00032395837479270995, -0.001706930692307651, -5.566918844124302e-05, -5.924526340095326e-05, -0.19490264356136322, -0.3938829004764557, -0.032447449862957, -0.20758883655071259, -0.0008810452418401837, -2.095611095428467, -0.002262296387925744, -0.11333730816841125, -0.011907685548067093, -0.000894146622158587, -0.0027065572794526815, -0.0018851857166737318, -1.2737712860107422, -0.013312149792909622, -0.08301686495542526, -0.00108624086715281, -0.02286439947783947, -4.768360213347478e-06, -0.0001752223033690825, -0.021839478984475136, -5.781483559985645e-05, -0.0035776200238615274, -3.325883881188929e-05, -4.124556289752945e-05, -1.3616724014282227, -0.12935090065002441, -0.0003178806509822607, -9.536738616588991e-07, -0.09791845828294754, -0.07127033919095993, -0.21148450672626495, -0.0037912887055426836, -0.0366002582013607, -1.7508459091186523, -1.0479460954666138, -0.05997692421078682, -0.002457814523950219, -0.029459120705723763, -5.793403761344962e-05, -0.00041654970846138895, -6.9141146923357155e-06, -0.00012158608296886086, -0.012620935216546059, -0.052958060055971146, -0.038224440068006516, -0.1982647329568863, -0.04938837140798569, -0.0019728736951947212, -8.22540732769994e-06, -0.0017541749402880669, -0.003186626825481653, -0.00018594920402392745, -0.9033411741256714, -0.001892800792120397, -0.006200955715030432, -0.00020489977032411844, -3.397406908334233e-05, -0.004701630678027868, -0.008248312398791313, -0.0700889453291893, -0.004714444745332003, -0.571777880191803, -0.0003071551618631929, -3.123234637314454e-05, -0.05945046618580818, -0.00975850597023964, -0.001149589428678155, -3.4861698150634766, -3.2216267585754395, -2.5911576747894287, -1.825352430343628, -0.007977765053510666, -0.018890123814344406, -1.2847819328308105, -2.0688271522521973, -1.6379612684249878, -0.0023418639320880175, -1.0838114023208618, -0.01006197091192007, -0.6651938557624817, -0.02260197512805462, -0.024024445563554764, -0.004381105303764343, -1.6134380102157593, -1.0728830375228426e-06, -1.311301275563892e-06, -5.6622808187967166e-05, -0.00012694983161054552, -0.0923863872885704], "finish_reason": "stop"}], "metrics": {"energy": 239.70227642250072, "energy_per_token": 1.1201040954322463, "time": 9.458397, "time_per_token": 0.044198116822429905}}
{"outputs": [{"text": "if not os.path.isdir(directory_path):\n        return {}\n\n    files = glob.glob(f'{directory_path}/**/*{file_extension}', recursive=True)\n    data = {os.path.splitext(os.path.basename(f))[0]: [] for f in files}\n    for f in files:\n        with open(f, 'r') as file:\n            rows = list(csv.reader(file, delimiter=','))\n            data[os.path.splitext(os.path.basename(f))[0]].append(rows)\n    return data", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "return", " {}", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "directory", "_", "path", "}/", "**", "/*", "{", "file", "_", "extension", "}'", ",", " recursive", "=", "True", ")", "\n", "    ", "data", " =", " {", "os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "f", "))", "[", "0", "]:", " []", " for", " f", " in", " files", "}", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "with", " open", "(", "f", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "rows", " =", " list", "(", "csv", ".", "reader", "(", "file", ",", " del", "im", "iter", "='", ",", "'))", "\n", "            ", "data", "[", "os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "bas", "ename", "(", "f", "))", "[", "0", "]]", ".", "append", "(", "rows", ")", "\n", "    ", "return", " data", "\n", "\n", "def"], "logprobs": [-2.59901762008667, -0.4470159709453583, -0.27822792530059814, -0.00010442188795423135, -0.001468533300794661, -0.013912132009863853, -0.36287721991539, -0.005773060489445925, -0.0003620922507252544, -0.0012561534531414509, -0.0005535738891921937, -1.1801649634435307e-05, -0.017532017081975937, -0.024896910414099693, -0.0027625514194369316, -0.48163309693336487, -0.061772409826517105, -0.010802481323480606, -0.47266799211502075, -0.0004300146538298577, -1.8586281538009644, -0.2990885078907013, -0.10184412449598312, -4.577531944960356e-05, -0.009198429994285107, -0.002980079036206007, -1.996729850769043, -0.869688093662262, -0.010246176272630692, -1.0609570381348021e-05, -2.3841830625315197e-06, -1.2480055093765259, -0.10309969633817673, -0.0278745386749506, -0.062161438167095184, -0.0007488307310268283, -1.764281842042692e-05, -4.660974445869215e-05, -0.014943445101380348, -0.00039402826223522425, -0.006263862829655409, -0.002891884883865714, -0.0020137999672442675, -0.00032669928623363376, -0.0038438972551375628, -0.4112366735935211, -1.2705167531967163, -0.08013913780450821, -2.9196407794952393, -0.5620236992835999, -1.1801649634435307e-05, -0.0011026738211512566, -0.0013559204526245594, -1.6236140727996826, -2.6464111215318553e-05, -2.3841830625315197e-06, -0.0003987947420682758, -0.5184018015861511, -0.0010931475553661585, -7.056941103655845e-05, -0.0038970967289060354, -0.030171068385243416, -2.3841855067985307e-07, -0.00037079135654494166, -0.8436782956123352, -0.027005711570382118, -0.0003524397616274655, -0.0007413261337205768, -0.02191423811018467, -0.39441654086112976, -0.01515235099941492, -0.0002356490003876388, -0.0002252801787108183, -0.002605617046356201, -0.04417379945516586, -0.02116720750927925, -1.2611833810806274, -0.23571845889091492, -0.6097326874732971, -0.06017562001943588, -0.017725158482789993, -0.00019429226813372225, -0.0019982149824500084, -0.002884515328332782, -0.19378025829792023, -0.00266779912635684, -0.00030298411729745567, -0.0017352537252008915, -0.3250383734703064, -0.5051857233047485, -0.0332377664744854, -0.2802859842777252, -0.0008853329927660525, -0.43533816933631897, -0.015706637874245644, -0.001778569770976901, -0.0012081712484359741, -2.5191564559936523, -0.005696017760783434, -1.44746994972229, -0.0024969372898340225, -0.005372372455894947, -0.0001784403866622597, -0.002599909668788314, -0.10225167125463486, -0.006582956295460463, -1.7745076417922974, -0.09806090593338013, -0.0002661589242052287, -1.4305104514278355e-06, -0.09011971205472946, -0.23599708080291748, -0.4549926817417145, -0.0415286086499691, -0.05766666680574417, -0.3616720139980316, -0.00741740083321929, -0.018199361860752106, -5.352353764465079e-05, -5.364403477869928e-06, -0.0005700155161321163, -0.08888394385576248, -6.556489552167477e-06, -1.0967194612021558e-05, -3.0278701160568744e-05, -0.015637515112757683, -0.0024096521083265543, -9.059865078597795e-06, -0.0006974886637181044, -0.0001497156627010554, -1.2278481335670222e-05, -1.9192511899746023e-05, -0.0020996923558413982, -4.017272294731811e-05, -7.438383181579411e-05, -0.0003295593778602779, -0.000971917703282088, -0.4049724042415619, -1.3498902320861816, -0.04444670304656029, -0.04830794408917427, -1.2244808673858643, -0.0050278655253350735, -1.210587978363037, -0.01239843014627695, -0.009417750872671604, -0.41143712401390076, -0.022521788254380226, -1.3158354759216309], "finish_reason": "stop"}], "metrics": {"energy": 205.693667585373, "energy_per_token": 1.380494413324651, "time": 6.938599, "time_per_token": 0.046567778523489936}}
{"outputs": [{"text": "output = {}\n    file_names = glob.glob(os.path.join(directory_path, '*' + file_extension))\n\n    for filename in file_names:\n        with open(filename, mode='r', encoding='utf-8') as f:\n            reader = csv.reader(f, skipinitialspace=True)\n            output[filename] = list(reader)\n\n    return output", "tokens": ["output", " =", " {}", "\n", "    ", "file", "_", "names", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", "\n", "\n", "    ", "for", " filename", " in", " file", "_", "names", ":", "\n", "        ", "with", " open", "(", "filename", ",", " mode", "='", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ",", " skip", "initial", "space", "=", "True", ")", "\n", "            ", "output", "[", "filename", "]", " =", " list", "(", "reader", ")", "\n", "\n", "    ", "return", " output", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.295684337615967, -0.5000662207603455, -0.12211666256189346, -0.00864359550178051, -0.2918994724750519, -1.7968333959579468, -0.05579433962702751, -2.003640651702881, -0.033251140266656876, -0.14799638092517853, -0.00014482879487331957, -0.007601739373058081, -0.004462640732526779, -0.665848433971405, -6.318072337307967e-06, -0.00022027450904715806, -0.0045365747064352036, -0.0017256144201382995, -0.0016607552533969283, -0.00453348970040679, -0.00017569905321579427, -7.152531907195225e-06, -0.0017810686258599162, -0.8220331072807312, -0.045956987887620926, -0.1967875063419342, -0.0013499680208042264, -0.0025238110683858395, -1.1920922133867862e-06, -0.00012790338951162994, -0.005725413095206022, -0.01027768012136221, -1.6483854055404663, -0.00021634146105498075, -0.19597145915031433, -2.029123306274414, -0.001290561049245298, -0.0030940540600568056, -1.168244216387393e-05, -5.400034933700226e-05, -0.00020895205670967698, -0.0027204668149352074, -0.009131691418588161, -0.416228324174881, -0.001444130903109908, -0.0007720588473603129, -0.0072988285683095455, -0.21021278202533722, -3.158808946609497, -0.028383351862430573, -0.06160496547818184, -0.7366829514503479, -0.00041571559268049896, -0.21688218414783478, -0.018155697733163834, -0.1121378019452095, -0.17273056507110596, -0.003711242461577058, -0.25430965423583984, -0.0006386386230587959, -1.9738126993179321, -0.04022382199764252, -0.0042455545626580715, -0.01058900821954012, -0.707777738571167, -0.004384547472000122, -0.01490316167473793, -3.814689989667386e-06, -8.11782301752828e-05, -0.008852521888911724, -0.00042417587246745825, -0.0015031717484816909, -1.5624535083770752, -2.5085513591766357, -0.03540823608636856, -0.05557514727115631, -0.009650364518165588, -0.03232649713754654, -0.18402136862277985, -0.013436362147331238, -0.12852580845355988, -2.3334856033325195, -0.05971316620707512, -2.299253463745117, -1.3845170736312866, -0.0001787979417713359, -0.48695987462997437, -0.0025154873728752136, -0.014449953101575375, -0.11888953298330307, -0.019578073173761368, -0.3356386125087738, -0.010490394197404385, -0.028697319328784943, -0.003930819686502218, -1.6859629154205322, -2.3841830625315197e-06, -1.0728830375228426e-06, -2.312633478140924e-05, -0.0002195594133809209, -0.07613013684749603], "finish_reason": "stop"}], "metrics": {"energy": 129.93469671821597, "energy_per_token": 1.2864821457249107, "time": 4.6367307, "time_per_token": 0.045908224752475246}}
{"outputs": [{"text": "data = dict()\n    filenames = glob.glob(directory_path + f'/*{file_extension}')\n    for filename in filenames:\n        with open(filename, 'r') as f:\n            rows = csv.reader(f)\n            rows = list(rows)[1:]\n            data[os.path.basename(filename)[:-len(file_extension)]] = rows\n    return data", "tokens": ["data", " =", " dict", "()", "\n", "    ", "fil", "en", "ames", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " f", "'", "/*", "{", "file", "_", "extension", "}", "')", "\n", "    ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "        ", "with", " open", "(", "filename", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "rows", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "            ", "rows", " =", " list", "(", "rows", ")[", "1", ":]", "\n", "            ", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")", "[:", "-", "len", "(", "file", "_", "extension", ")", "]]", " =", " rows", "\n", "    ", "return", " data", "\n", "\n", "if"], "logprobs": [-1.8812708854675293, -0.08314444869756699, -2.698817729949951, -0.003161196829751134, -0.012615049257874489, -0.3506790101528168, -3.677579879760742, -0.004223356489092112, -9.893881360767409e-05, -0.02252575196325779, -0.10629117488861084, -0.0002286172821186483, -0.013361083343625069, -0.005122275557368994, -0.9679837822914124, -0.00012706902634818107, -2.109982233378105e-05, -0.05662984773516655, -2.585256814956665, -0.22061559557914734, -0.16929858922958374, -0.07373014837503433, -0.0029476310592144728, -4.2914423829643056e-05, -4.2199197196168825e-05, -0.10082778334617615, -0.0008708022069185972, -0.016482383012771606, -0.2645089626312256, -0.30249714851379395, -0.1490730494260788, -0.0010551605373620987, -0.0013897294411435723, -1.4305104514278355e-06, -4.172316494077677e-06, -0.0004518203204497695, -0.0034612054005265236, -0.004699139390140772, -0.5490024089813232, -0.0018670998979359865, -0.001593392575159669, -0.008247247897088528, -0.17494900524616241, -0.36828678846359253, -0.023205380886793137, -0.17601685225963593, -0.001904818112961948, -1.4825807809829712, -0.028231313452124596, -0.0033282621297985315, -0.0035179888363927603, -2.13720703125, -0.00977916456758976, -0.9021016359329224, -1.6689286894688848e-06, -0.00016759421851020306, -0.0017992750508710742, -0.0013668728061020374, -0.0008068405441008508, -0.08789931237697601, -0.0076692900620400906, -0.013193097896873951, -2.6063907146453857, -0.23153576254844666, -0.19895562529563904, -0.0007195267826318741, -0.0057193683460354805, -1.781733751296997, -0.0026178634725511074, -0.01568293385207653, -0.3729289472103119, -0.0336461178958416, -0.39222782850265503, -0.039290137588977814, -0.09897889941930771, -3.933898824470816e-06, -0.00011789103882620111, -0.007370541803538799, -0.3795676529407501, -2.3841830625315197e-06, -0.0002057340752799064, -0.017711689695715904, -0.09956870228052139, -1.6853177547454834, -0.02531368099153042, -0.30484944581985474, -0.004779462236911058, -0.0029689064249396324, -3.4450891689630225e-05, -5.1377883210079744e-05, -0.01615716703236103, -0.006530373357236385, -0.004047892522066832, -0.017049528658390045, -0.00952166598290205, -0.19367653131484985, -0.009039430879056454, -0.0025497328024357557, -0.2759547531604767, -0.017063943669199944, -0.7922898530960083], "finish_reason": "stop"}], "metrics": {"energy": 134.27425507354735, "energy_per_token": 1.3294480700351223, "time": 4.420333, "time_per_token": 0.043765673267326735}}
{"outputs": [{"text": "directory_path = directory_path.rstrip(os.sep)\n    if not os.path.isdir(directory_path):\n        return {}\n    output = {}\n    for filename in glob.glob(os.path.join(directory_path, f\"*{file_extension}\")):\n        with open(filename, 'rt') as csvfile:\n            reader = csv.reader(csvfile)\n            header_row = next(reader)\n            output[filename.split(file_extension)[0]] = list(reader)\n    return output", "tokens": ["directory", "_", "path", " =", " directory", "_", "path", ".", "r", "strip", "(", "os", ".", "sep", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "return", " {}", "\n", "    ", "output", " =", " {}", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "\"", "*{", "file", "_", "extension", "}\"", "))", ":", "\n", "        ", "with", " open", "(", "filename", ",", " '", "rt", "')", " as", " c", "sv", "file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "file", ")", "\n", "            ", "header", "_", "row", " =", " next", "(", "reader", ")", "\n", "            ", "output", "[", "filename", ".", "split", "(", "file", "_", "extension", ")[", "0", "]]", " =", " list", "(", "reader", ")", "\n", "    ", "return", " output", "\n", "\n", "def"], "logprobs": [-3.899259090423584, -0.22417518496513367, -0.05976605787873268, -0.04037599638104439, -2.0908443927764893, -0.0004836343287024647, -9.655486064730212e-05, -0.7879006266593933, -0.6680383086204529, -0.0027661179192364216, -1.463476300239563, -0.3427506387233734, -2.9682672902708873e-05, -0.5239174962043762, -0.00395575538277626, -0.21524472534656525, -0.25544583797454834, -0.8112199902534485, -0.11013954877853394, -0.038603004068136215, -0.000967153930105269, -6.0794889577664435e-05, -0.021905725821852684, -0.02041015774011612, -0.0019684715662151575, -8.761498611420393e-05, -0.001057423185557127, -0.0004633783537428826, -1.7523612768854946e-05, -0.012978722341358662, -0.011607608757913113, -0.0032799041364341974, -0.5268807411193848, -0.05322914198040962, -0.005949525628238916, -1.064056634902954, -2.4784159660339355, -0.30806559324264526, -0.0375865176320076, -0.0038995903450995684, -0.057938724756240845, -0.34510359168052673, -0.5976593494415283, -0.0015551865799352527, -0.04769938439130783, -4.279521817807108e-05, -0.1112234964966774, -0.005621102638542652, -0.29432955384254456, -0.0013830630341544747, -0.0017379907658323646, -0.004739835392683744, -0.000514017534442246, -0.0003296785580459982, -0.0012334127677604556, -3.790783375734463e-05, -7.152555099310121e-07, -0.0014067525044083595, -1.245128870010376, -2.2179834842681885, -0.972481906414032, -0.00027581225731410086, -4.6491513785440475e-06, -6.317892984952778e-05, -0.0013674680376425385, -0.0029137558303773403, -0.00021324267436284572, -0.006021928042173386, -0.002345313085243106, -0.2951388359069824, -0.0021089711226522923, -0.0009916870621964335, -0.0034240209497511387, -0.12546811997890472, -0.6483270525932312, -2.9497921466827393, -0.431086003780365, -0.0028728663455694914, -1.901719570159912, -0.002902701497077942, -0.9576162695884705, -0.0006358985556289554, -0.004847915843129158, -0.0029851896688342094, -0.6788396835327148, -0.002293101279065013, -0.010450049303472042, -1.0251946150674485e-05, -0.000248043768806383, -0.013170392252504826, -0.00015841660206206143, -0.001293656532652676, -1.5258672647178173e-05, -0.18394282460212708, -0.0014352031284943223, -0.005186791997402906, -0.9845535755157471, -1.3671953678131104, -0.032705340534448624, -0.0008060067193582654, -0.011018503457307816, -3.957670196541585e-05, -0.0018542492762207985, -0.026810990646481514, -0.07603269070386887, -0.014461820013821125, -0.6333408355712891, -0.062008846551179886, -2.2967753410339355, -0.48868289589881897, -0.4935903251171112, -0.06704641878604889, -2.1848418712615967, -5.960446742392378e-06, -0.00022957073815632612, -0.08369892835617065, -0.23658111691474915, -0.10089578479528427, -0.00528628658503294, -0.6530088186264038, -0.0019964303355664015, -0.03382464498281479, -0.01865742728114128, -0.01049357932060957, -0.11124002933502197, -0.00590105727314949, -0.0022954801097512245, -0.45482975244522095, -0.029358182102441788, -1.379427433013916], "finish_reason": "stop"}], "metrics": {"energy": 168.38513534545893, "energy_per_token": 1.2952702718881457, "time": 5.6885915, "time_per_token": 0.043758396153846156}}
{"outputs": [{"text": "# Check if the directory exists and is a valid directory.\n    if not os.path.isdir(directory_path):\n        print('Directory {} does not exist!'.format(directory_path))\n        return {}\n\n    # Extract the file extension.\n    extension = os.path.splitext(file_extension)[-1]\n\n    # Check if the file extension is valid.\n    if len(extension) < 2 or not extension[1:].lower() == 'csv':\n        print('Extension must be CSV.')\n        return {}\n\n    # Extract the filename without the extension.\n    file_extension = os.path.splitext(file_extension)[-1]\n    filename_wo_ext = file_extension\n\n    # Check if the file exists.\n    file_path = os.path.join(directory_path, filename_wo_ext)\n    if not os.path.isfile(file_path):\n        print('File {} does not exist!'.format(file_path))\n        return {}\n\n    # Check if the file is a CSV file.\n", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " is", " a", " valid", " directory", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "print", "('", "Directory", " {}", " does", " not", " exist", "!", "'", ".", "format", "(", "directory", "_", "path", "))", "\n", "        ", "return", " {}", "\n", "\n", "    ", "#", " Ext", "ract", " the", " file", " extension", ".", "\n", "    ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "extension", ")", "[-", "1", "]", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " extension", " is", " valid", ".", "\n", "    ", "if", " len", "(", "extension", ")", " <", " ", "2", " or", " not", " extension", "[", "1", ":]", ".", "lower", "()", " ==", " '", "csv", "':", "\n", "        ", "print", "('", "Extension", " must", " be", " CS", "V", ".", "')", "\n", "        ", "return", " {}", "\n", "\n", "    ", "#", " Ext", "ract", " the", " filename", " without", " the", " extension", ".", "\n", "    ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "extension", ")", "[-", "1", "]", "\n", "    ", "filename", "_", "wo", "_", "ext", " =", " file", "_", "extension", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " exists", ".", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", "_", "wo", "_", "ext", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "        ", "print", "('", "File", " {}", " does", " not", " exist", "!", "'", ".", "format", "(", "file", "_", "path", "))", "\n", "        ", "return", " {}", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " is", " a", " CS", "V", " file", ".", "\n"], "logprobs": [-2.241004467010498, -2.0950746536254883, -0.4433231055736542, -0.5234684348106384, -0.3727356791496277, -0.5014377236366272, -1.5903167724609375, -0.3578740358352661, -0.2694837749004364, -1.1058201789855957, -1.1347869634628296, -1.6250622272491455, -0.05131722614169121, -0.003179259365424514, -0.04913054406642914, -0.17225512862205505, -0.011442864313721657, -1.0847986231965479e-05, -0.00010406429646536708, -0.008864691480994225, -0.3450520932674408, -0.0006987990345805883, -7.426462980220094e-05, -0.000525217386893928, -0.00030071981018409133, -7.033323527139146e-06, -0.015943896025419235, -0.0020886289421468973, -0.0018311651656404138, -1.567251205444336, -1.2512314319610596, -1.2478595972061157, -3.4608612060546875, -0.32335519790649414, -0.0017006233101710677, -0.017626192420721054, -2.0605454444885254, -0.056615088135004044, -0.0009376181988045573, -0.0011851914459839463, -0.0003573255962692201, -0.005165682639926672, -0.00032109825406223536, -0.00012754580529872328, -0.0036767993588000536, -0.002738299546763301, -0.032185450196266174, -0.031146006658673286, -0.24772217869758606, -0.008937828242778778, -0.26816442608833313, -0.001347468001767993, -0.24611937999725342, -4.3744120597839355, -0.0936710312962532, -1.0280377864837646, -0.811647891998291, -0.7292550802230835, -1.5710840225219727, -0.058075737208127975, -0.0007425173535011709, -1.5784838199615479, -0.06340526044368744, -1.0852971076965332, -3.0517112463712692e-05, -0.014838681556284428, -0.004725716542452574, -0.007678990252315998, -1.823885577323381e-05, -1.1920928244535389e-07, -0.0010091932490468025, -0.23982755839824677, -0.0001858300092862919, -0.0008958140970207751, -1.9031375646591187, -0.19022919237613678, -0.0003190723655279726, -0.019891075789928436, -0.2276248186826706, -0.32567912340164185, -0.0005038899253122509, -0.16443729400634766, -0.9711456298828125, -0.07422833889722824, -0.11981039494276047, -0.7203661203384399, -0.04036214202642441, -0.19642868638038635, -0.5331290364265442, -0.1561671644449234, -0.014765153639018536, -0.00024482590379193425, -0.03589080274105072, -2.7127270698547363, -0.0003135904553346336, -0.03025214746594429, -0.004870455712080002, -1.9576961994171143, -0.00410511763766408, -0.4535328149795532, -0.5744384527206421, -1.7330708503723145, -0.1940697282552719, -0.3538508117198944, -0.3480280935764313, -0.5129662752151489, -0.24888168275356293, -2.3442978858947754, -0.0027805021964013577, -0.9456713795661926, -0.12178711593151093, -0.013098622672259808, -0.04399699345231056, -0.02860870026051998, -0.0010938619961962104, -0.056884732097387314, -0.089556023478508, -2.5517475605010986, -1.2289037704467773, -0.04382209852337837, -3.933839797973633, -0.0002882065309677273, -1.7513411045074463, -0.1564670205116272, -0.0004175029753241688, -0.00855767261236906, -0.005923929158598185, -0.010737501084804535, -0.0005305789527483284, -0.017171872779726982, -0.0005703729693777859, -0.20180943608283997, -2.8307502269744873, -0.0202341228723526, -0.7621087431907654, -2.1042656898498535, -0.9219176769256592, -0.11035190522670746, -0.03653290867805481, -0.14442631602287292, -0.0060854386538267136, -0.0007700338610447943, -1.6853387355804443, -0.03329530358314514, -2.480527877807617, -0.22411392629146576, -0.43947717547416687, -0.0001308832288486883, -0.0004211969207972288, -0.0003051292151212692, -0.032752759754657745, -1.4305104514278355e-06, -2.3841855067985307e-07, -0.0006943913758732378, -0.0334881916642189, -0.00025614796322770417, -0.00600344268605113, -0.4042353928089142, -0.042779725044965744, -0.026770833879709244, -0.0571281798183918, -0.03377946838736534, -0.2817952334880829, -0.7280290722846985, -1.3481371402740479, -3.292919158935547, -0.03964492678642273, -0.4028051197528839, -0.031403541564941406, -1.8761616945266724, -0.00013517419574782252, -0.0020276003051549196, -2.813274383544922, -0.09719831496477127, -0.0006872437661513686, -0.22656823694705963, -2.625840663909912, -0.13715136051177979, -0.6559492349624634, -1.5623983144760132, -0.9270188808441162, -0.8753941655158997, -0.006753121502697468, -0.0011478032683953643, -1.4944552183151245, -0.07971037179231644, -1.042526364326477, -0.12046487629413605, -0.6656059622764587, -9.965400386136025e-05, -0.002004639245569706, -0.0240801889449358, -0.008549989201128483, -0.001820098957978189, -0.004960017278790474, -5.9602869441732764e-05, -3.576272320060525e-06, -0.0013943722005933523, -0.3176499009132385, -0.0061747729778289795, -0.00044848397374153137, -1.1920922133867862e-06, -1.1920858014491387e-05, -0.0867636501789093, -0.010147174820303917, -0.06090002879500389, -0.11315539479255676, -0.054859284311532974, -0.044796932488679886, -0.0005523824947886169, -0.00027164106722921133, -0.0037683681584894657, -0.3237171471118927, -0.001016457681544125, -0.00011836781777674332, -0.00435119541361928, -1.4066597032069694e-05, -0.00015817821258679032, -0.03294932842254639, -0.0027270056307315826, -0.0020026168785989285, -0.04084141179919243, -0.061821721494197845, -0.21815045177936554, -0.12846258282661438, -0.18359999358654022, -0.0007992172613739967, -0.007400952745229006, -0.13043412566184998, -0.005612330511212349, -0.00030322244856506586, -0.001595177804119885, -0.0004400238685775548, -0.20600058138370514, -0.0001938155182870105, -0.062079206109046936, -0.0066094836220145226, -0.00022790218645241112, -0.005009717773646116, -0.002957139629870653, -0.009628758765757084, -0.000331704446580261, -0.01874985732138157, -0.0011099375551566482, -0.13319331407546997, -3.196957588195801, -0.10689949989318848, -0.1361180543899536, -0.13690491020679474, -0.4258767366409302, -1.2759774923324585, -0.7411322593688965, -0.0001517419150331989, -0.18904578685760498, -0.049544259905815125, -0.004998923745006323], "finish_reason": "length"}], "metrics": {"energy": 270.0620873088835, "energy_per_token": 1.0549300285503262, "time": 11.3448715, "time_per_token": 0.044315904296875}}
{"outputs": [{"text": "if not os.path.isdir(directory_path):\n        return {}\n\n    if not os.path.isfile(directory_path):\n        return {}\n\n    file_list = glob.glob(directory_path + '/**/*' + file_extension, recursive=True)\n    if not file_list:\n        return {}\n\n    output = {}\n\n    for file in file_list:\n        try:\n            with open(file, encoding='utf-8') as f:\n                reader = csv.reader(f)\n                output[os.path.basename(file).split('.')[0]] = list(reader)\n        except Exception as e:\n            print(f\"Error processing {file}: {e}\")\n\n    return output", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "return", " {}", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "directory", "_", "path", "):", "\n", "        ", "return", " {}", "\n", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/**", "/*", "'", " +", " file", "_", "extension", ",", " recursive", "=", "True", ")", "\n", "    ", "if", " not", " file", "_", "list", ":", "\n", "        ", "return", " {}", "\n", "\n", "    ", "output", " =", " {}", "\n", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "                ", "output", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", " =", " list", "(", "reader", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "Error", " processing", " {", "file", "}:", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " output"], "logprobs": [-2.59901762008667, -0.4470159709453583, -0.27822792530059814, -0.00010442188795423135, -0.001468533300794661, -0.013912132009863853, -0.36287721991539, -0.005773060489445925, -0.0003620922507252544, -0.0012561534531414509, -0.0005535738891921937, -1.1801649634435307e-05, -0.017532017081975937, -0.024896910414099693, -0.0027625514194369316, -0.48163309693336487, -0.061772409826517105, -0.010802481323480606, -0.47266799211502075, -0.0004300146538298577, -4.460284233093262, -0.5999394059181213, -1.8787248134613037, -0.0022928635589778423, -0.6587923765182495, -0.1596727818250656, -1.116271734237671, -1.149827480316162, -0.02486865408718586, -0.07837127894163132, -4.887569048150908e-06, -3.4927710657939315e-05, -0.17351830005645752, -0.02247609756886959, -0.0016350485384464264, -0.15116336941719055, -0.03507541865110397, -0.0009133219718933105, -0.030577320605516434, -0.0007566926069557667, -1.9014074802398682, -0.04202057793736458, -1.3890148401260376, -0.01307438500225544, -0.11382988095283508, -0.0001045410826918669, -0.008192742243409157, -0.0059665897861123085, -0.742854654788971, -2.729855441430118e-05, -5.018585216021165e-05, -0.05654062703251839, -1.1248419284820557, -2.4307870864868164, -0.558860719203949, -0.10524318367242813, -0.0010008569806814194, -0.0049209906719625, -1.5020257706055418e-05, -9.417090768693015e-05, -0.11379849910736084, -0.007995977066457272, -0.007148167584091425, -0.012079067528247833, -0.0008912881603464484, -0.006965994369238615, -0.8905496001243591, -2.4542484283447266, -0.37552425265312195, -0.03494972363114357, -3.111314072157256e-05, -0.0015486401971429586, -0.013473058119416237, -0.007973271422088146, -0.0009551253751851618, -0.021102547645568848, -0.014272513799369335, -0.001645878772251308, -0.0875258520245552, -0.0004051103023812175, -1.8698914051055908, -0.685620903968811, -0.047256819903850555, -0.0032719431910663843, -1.0042046308517456, -0.0002026352594839409, -0.07290050387382507, -0.32245850563049316, -0.7736251354217529, -0.0031493136193603277, -7.986990567587782e-06, -3.731181277544238e-05, -0.0005569098866544664, -0.001827000523917377, -0.02218209207057953, -2.089988946914673, -0.00012635385792236775, -0.0014980534324422479, -0.003174030687659979, -0.26133280992507935, -0.0016796779818832874, -0.0004300146538298577, -0.0021908108610659838, -0.11992227286100388, -2.145601987838745, -0.08081041276454926, -0.12332197278738022, -0.20559866726398468, -0.0033189947716891766, -0.20870862901210785, -0.0007139279623515904, -1.0157526731491089, -0.05717535316944122, -0.004652034025639296, -0.007832765579223633, -0.7672886252403259, -0.0017960622208192945, -0.016597408801317215, -2.622600959512056e-06, -5.090107151772827e-05, -0.008483916521072388, -0.0008131535141728818, -0.001077786204405129, -0.25478965044021606, -0.0028871302492916584, -0.061582550406455994, -2.105973243713379, -0.09393694251775742, -0.04051715508103371, -1.1205610462639015e-05, -0.00013493580627255142, -0.002509304089471698, -0.23136703670024872, -2.3841855067985307e-07, -0.00012230125139467418, -0.02709006518125534, -0.08155518770217896, -0.1987193524837494, -0.4770459532737732, -0.11184865236282349, -0.0008668717346154153, -0.05166211351752281, -0.0005851463647559285, -0.0006663962849415839, -0.003454077523201704, -0.0017122859135270119, -0.3336125612258911, -0.0009414292871952057, -0.02071799710392952, -0.038637757301330566, -0.009247565641999245, -0.10538899153470993, -0.002348286332562566, -1.8762669563293457, -0.7340958118438721, -0.1673458069562912, -0.0004640932602342218, -0.007622087839990854, -0.0015476880362257361, -0.2794090211391449, -0.21399788558483124, -0.42762497067451477, -1.0891999006271362, -0.6287551522254944, -2.645613670349121, -1.2423213720321655, -0.028325529769062996, -0.13100984692573547, -0.0124259814620018, -0.27094677090644836, -0.04292967915534973, -0.009782234206795692, -0.00729752704501152, -0.32759612798690796, -0.005733473226428032, -0.013389196246862411, -0.001743940869346261], "finish_reason": "stop"}], "metrics": {"energy": 226.65565361595145, "energy_per_token": 1.2805404159093303, "time": 7.7831936, "time_per_token": 0.04397284519774011}}
{"outputs": [{"text": "file_names = glob.glob(f\"{directory_path}/*.{file_extension}\")\n    if not file_names:\n        return {}\n    data = {}\n    for file_name in file_names:\n        with open(file_name, 'r') as file:\n            reader = csv.reader(file)\n            rows = list(reader)\n            data[os.path.basename(file_name)[:-len(file_extension)]] = rows\n    return data", "tokens": ["file", "_", "names", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "_", "path", "}", "/*", ".", "{", "file", "_", "extension", "}\"", ")", "\n", "    ", "if", " not", " file", "_", "names", ":", "\n", "        ", "return", " {}", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "names", ":", "\n", "        ", "with", " open", "(", "file", "_", "name", ",", " '", "r", "')", " as", " file", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "            ", "rows", " =", " list", "(", "reader", ")", "\n", "            ", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "name", ")", "[:", "-", "len", "(", "file", "_", "extension", ")", "]]", " =", " rows", "\n", "    ", "return", " data", "\n", "\n", "#"], "logprobs": [-2.7383017539978027, -0.05651302635669708, -2.300555944442749, -0.08357580006122589, -0.19635306298732758, -0.00014506718434859067, -0.006347258575260639, -0.006726361345499754, -1.9931700229644775, -0.5843662023544312, -0.015804387629032135, -0.005613515619188547, -0.0001431601122021675, -1.07287787614041e-05, -0.460871160030365, -0.01223287358880043, -2.9809298515319824, -0.07749131321907043, -0.0014807938132435083, -0.0001454247540095821, -0.00013028726971242577, -0.04121944680809975, -0.008631540462374687, -0.02089102752506733, -0.18808284401893616, -1.8657629489898682, -0.5436144471168518, -0.029671844094991684, -7.629365427419543e-06, -0.001388300908729434, -0.0061599635519087315, -0.035223543643951416, -0.00288249459117651, -0.14669324457645416, -0.07241994887590408, -0.0071500614285469055, -0.5794819593429565, -1.1702214479446411, -0.18478351831436157, -0.07861120998859406, -0.0028380376752465963, -0.05763380602002144, -0.0705445185303688, -0.2374405860900879, -0.1230267658829689, -0.04043049365282059, -0.0008279233006760478, -0.0032052830792963505, -7.152555099310121e-07, -2.455681169521995e-05, -0.00017188502533826977, -0.0017431078013032675, -0.0020811345893889666, -0.3075410723686218, -0.0022820401936769485, -0.0009640575153753161, -0.005863844882696867, -1.1324817933200393e-05, -0.00018082413589581847, -0.2775653004646301, -0.40529438853263855, -0.018503669649362564, -0.2211364358663559, -0.0018903020536527038, -0.28115513920783997, -0.02538527548313141, -0.001714071026071906, -0.0017202593153342605, -0.3809549808502197, -0.0014362744987010956, -0.020197439938783646, -2.622600959512056e-06, -4.684815212385729e-05, -0.005477538798004389, -0.0007742029847577214, -0.0017163321608677506, -0.22580675780773163, -0.0010044296504929662, -0.003873109817504883, -2.9968552589416504, -0.008475997485220432, -0.5004646182060242, -0.0004727914638351649, -0.004607062321156263, -0.09881239384412766, -0.01014705654233694, -0.051156628876924515, -1.006209135055542, -0.06071830168366432, -0.05788370966911316, -2.7418097943154862e-06, -9.250213042832911e-05, -0.006018847227096558, -0.45118096470832825, -4.768370445162873e-07, -7.986703712958843e-05, -0.004928582813590765, -0.010275084525346756, -0.00022182388056535274, -0.07083308696746826, -1.5405874252319336, -0.041439175605773926, -0.1927051693201065, -0.009015331044793129, -0.0027635025326162577, -5.6980417866725475e-05, -0.0028102213982492685, -0.02103869989514351, -0.014503060840070248, -0.0019192148465663195, -0.008237671107053757, -0.28598934412002563, -0.07898657768964767, -0.003226434113457799, -0.0007316772826015949, -0.3683505654335022, -0.021412506699562073, -2.412724494934082], "finish_reason": "stop"}], "metrics": {"energy": 124.40454267024991, "energy_per_token": 1.054275785341101, "time": 5.041048, "time_per_token": 0.04272074576271186}}
{"outputs": [{"text": "path_list = glob.glob(os.path.join(directory_path, f\"*\" + file_extension))\n    return {\n        os.path.splitext(os.path.split(file)[-1])[0]: [\n            [x.strip() for x in row.split(',')] for row in open(file).read().split('\\n')[1:]]\n        for file in path_list}", "tokens": ["path", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "\"", "*", "\"", " +", " file", "_", "extension", "))", "\n", "    ", "return", " {", "\n", "        ", "os", ".", "path", ".", "spl", "ite", "xt", "(", "os", ".", "path", ".", "split", "(", "file", ")", "[-", "1", "])", "[", "0", "]:", " [", "\n", "            ", "[", "x", ".", "strip", "()", " for", " x", " in", " row", ".", "split", "('", ",", "')", "]", " for", " row", " in", " open", "(", "file", ")", ".", "read", "()", ".", "split", "('", "\\", "n", "')", "[", "1", ":", "]]", "\n", "        ", "for", " file", " in", " path", "_", "list", "}", "\n", "\n", "def"], "logprobs": [-4.746894359588623, -0.8507068157196045, -1.1893173456192017, -0.03268434479832649, -0.15736830234527588, -0.00027295202016830444, -0.008032873272895813, -0.007603395730257034, -0.7779164910316467, -1.1324817933200393e-05, -0.0004128557338844985, -0.004562682006508112, -0.004709342960268259, -0.0036632593255490065, -0.0074568032287061214, -0.0001731960946926847, -5.125986263010418e-06, -0.0049077048897743225, -1.4067518711090088, -2.091125965118408, -0.3627952039241791, -1.8174521923065186, -0.20470069348812103, -0.011384525336325169, -0.00010394509445177391, -4.994744449504651e-05, -0.0141163170337677, -0.021230580285191536, -0.17187485098838806, -3.7717461585998535, -0.5599528551101685, -1.943885087966919, -0.019304493442177773, -0.6126550436019897, -6.55629628454335e-05, -0.00025781645672395825, -0.0012897277483716607, -0.833449125289917, -2.1934269170742482e-05, -2.7418097943154862e-06, -0.00198643677867949, -0.5018393993377686, -0.0027114315889775753, -8.141662692651153e-05, -0.007575001567602158, -3.0213911533355713, -0.0013138956855982542, -1.4075431823730469, -1.9457910060882568, -0.0343514047563076, -0.0007327494095079601, -0.03415926173329353, -0.016615230590105057, -0.0032702796161174774, -0.03823809325695038, -1.1850001811981201, -1.161466121673584, -0.014624541625380516, -1.1525471210479736, -3.060919761657715, -1.2402467727661133, -0.20162880420684814, -0.12056727707386017, -0.10733572393655777, -0.00018773700867313892, -0.0006655623437836766, -0.39330121874809265, -0.24826425313949585, -0.14128580689430237, -0.2653892934322357, -0.06570655107498169, -0.003177833277732134, -0.027855757623910904, -1.0686798095703125, -0.003258278826251626, -0.003928089048713446, -0.30821117758750916, -0.002571254502981901, -0.12584303319454193, -0.39867907762527466, -1.0545654296875, -0.0008896207436919212, -0.9319879412651062, -0.004430715925991535, -0.27385982871055603, -0.31310155987739563, -0.006479327101260424, -0.014525267295539379, -0.0019982149824500084, -0.5880263447761536, -0.005051705986261368, -1.604454755783081, -0.03735882043838501, -0.13205480575561523, -0.05057201534509659, -0.004507025703787804, -0.0021490592043846846, -0.0073267570696771145, -0.01519544143229723, -6.41325386823155e-05, -2.861018856492592e-06, -1.2596724033355713, -0.14414820075035095, -0.0389179065823555, -1.4139995574951172], "finish_reason": "stop"}], "metrics": {"energy": 112.4325868034363, "energy_per_token": 1.0707865409851076, "time": 4.640219, "time_per_token": 0.0441925619047619}}
{"outputs": [{"text": "data = {}\n    try:\n        for file in glob.glob(os.path.join(directory_path, '*' + file_extension)):\n            if os.path.isfile(file):\n                with open(file, encoding='utf-8') as f:\n                    reader = csv.reader(f)\n                    data[os.path.basename(file).split('.')[0]] = list(reader)\n    except Exception:\n        pass\n\n    return data", "tokens": ["data", " =", " {}", "\n", "    ", "try", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "with", " open", "(", "file", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "                ", "    ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "                ", "    ", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", " =", " list", "(", "reader", ")", "\n", "    ", "except", " Exception", ":", "\n", "        ", "pass", "\n", "\n", "    ", "return", " data", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8812708854675293, -0.08314444869756699, -0.0872626006603241, -0.008251977153122425, -0.24182094633579254, -3.288656234741211, -0.000933807052206248, -0.0041812146082520485, -0.009380551055073738, -1.2319910526275635, -0.7492693066596985, -0.736113429069519, -0.031724993139505386, -5.328513361746445e-05, -0.048752311617136, -0.006052617449313402, -0.6492829918861389, -6.6756979322235566e-06, -0.00027855331427417696, -0.0031914988067001104, -0.0017935632495209575, -0.0017748808022588491, -0.006234008818864822, -0.00019167017308063805, -3.3378546504536644e-06, -0.0021803434938192368, -0.8724931478500366, -0.07305099815130234, -0.1978389471769333, -0.0016068416880443692, -0.0024257064796984196, -8.821448318485636e-06, -3.814624506048858e-05, -0.005587317515164614, -0.0003694805200211704, -0.010116610676050186, -0.006185909733176231, -3.1561696529388428, -1.2696560621261597, -0.0003868784988299012, -0.012590564787387848, -0.0007894498412497342, -0.17593197524547577, -0.018225934356451035, -0.0009925207123160362, -0.00878150574862957, -0.05666499212384224, -0.01657196693122387, -0.004244842100888491, -0.3194887042045593, -0.002566141774877906, -0.0006649667047895491, -0.006541742477566004, -0.1283995807170868, -2.348918914794922, -0.05989305302500725, -0.11724862456321716, -0.2097630649805069, -0.00546947680413723, -0.13235048949718475, -0.0007039214833639562, -0.8110398650169373, -0.03552064299583435, -0.0064338454976677895, -0.002142040990293026, -0.0008148210472427309, -0.8016175627708435, -0.002569708740338683, -0.01765359938144684, -2.9802276912960224e-06, -7.795983401592821e-05, -0.01049228198826313, -0.0007970731821842492, -0.001848180778324604, -0.16903184354305267, -0.00268729729577899, -0.01115596853196621, -0.0033728161361068487, -1.0832290649414062, -0.0621768943965435, -0.041714541614055634, -0.00022456508304458112, -7.235741941258311e-05, -0.0016183863626793027, -0.41850677132606506, -4.768370445162873e-07, -7.92710343375802e-05, -0.021037764847278595, -0.05483987554907799, -0.36072826385498047, -0.542030930519104, -0.08276163786649704, -0.0008598444401286542, -0.04647921770811081, -0.0005796659388579428, -0.0005962263094261289, -0.002742817159742117, -0.0016285026213154197, -0.3649909496307373, -0.0008506731828674674, -0.011930067092180252, -0.10855265706777573, -0.013246625661849976, -0.46181976795196533, -0.005445409100502729, -1.2916148900985718, -1.2335082292556763, -0.008033819496631622, -0.0018747150897979736, -1.0853183269500732, -0.0132425082847476, -1.9269092082977295, -0.00920646172016859, -0.01143084280192852, -0.002224234864115715, -1.6377830505371094, -2.145764938177308e-06, -8.344646857949556e-07, -2.2172682292875834e-05, -0.00011753345461329445, -0.09569224715232849], "finish_reason": "stop"}], "metrics": {"energy": 168.42724542617796, "energy_per_token": 1.3919607060014707, "time": 5.2713804, "time_per_token": 0.04356512727272727}}
{"outputs": [{"text": "try:\n        file_list = glob.glob(os.path.join(directory_path, file_extension))\n        data = {}\n        for file_path in file_list:\n            with open(file_path) as file:\n                data.update({os.path.basename(file_path).split('.')[0]: [line.strip().split(',') for line in file.readlines()[1:]]})\n        return data\n    except:\n        print(\"Something went wrong while reading files from the directory.\")", "tokens": ["try", ":", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "extension", "))", "\n", "        ", "data", " =", " {}", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "            ", "with", " open", "(", "file", "_", "path", ")", " as", " file", ":", "\n", "                ", "data", ".", "update", "({", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", ".", "split", "('", ".", "')", "[", "0", "]:", " [", "line", ".", "strip", "()", ".", "split", "('", ",", "')", " for", " line", " in", " file", ".", "read", "lines", "()[", "1", ":", "]]", "})", "\n", "        ", "return", " data", "\n", "    ", "except", ":", "\n", "        ", "print", "(", "\"", "Something", " went", " wrong", " while", " reading", " files", " from", " the", " directory", ".", "\"", ")", "\n", "\n", "if"], "logprobs": [-3.082089900970459, -0.0010852882405743003, -0.00692195538431406, -0.014238432049751282, -2.60044002532959, -0.04088752716779709, -1.1495071649551392, -0.013500932604074478, -0.11418981850147247, -0.0001333863037871197, -0.008673377335071564, -0.00622180663049221, -0.5914180278778076, -8.4638240878121e-06, -0.0003275334893260151, -0.005915633402764797, -0.002682304009795189, -0.0021621440537273884, -0.00851914007216692, -0.00015925093612167984, -7.033323527139146e-06, -0.00266779912635684, -2.1290974617004395, -1.7165990357170813e-05, -0.003425327828153968, -0.1079125925898552, -0.012120171450078487, -0.43022263050079346, -1.2634376287460327, -0.3016883134841919, -0.08149310946464539, -0.005793920252472162, -0.1814592480659485, -0.09594083577394485, -0.3356568217277527, -0.842245876789093, -0.7386758923530579, -0.00454381387680769, -0.004103455226868391, -5.960462772236497e-07, -6.0794889577664435e-05, -0.00040928093949332833, -0.003330044448375702, -0.005005091894418001, -0.37025347352027893, -0.0024402146227657795, -0.0010008569806814194, -0.0030721870716661215, -9.65590606938349e-06, -0.00010263393050990999, -1.4438003301620483, -0.00017379203927703202, -0.5911294221878052, -0.032722532749176025, -0.0028555116150528193, -0.0024573388509452343, -2.635791778564453, -2.513235330581665, -0.2246047556400299, -0.18515555560588837, -0.22359606623649597, -4.887569048150908e-06, -0.0001137191939051263, -0.0016897936584427953, -0.42345136404037476, -2.9802276912960224e-06, -0.00017617580306250602, -0.02467421256005764, -0.04498875513672829, -0.00029452278977259994, -0.2242906391620636, -0.8823560476303101, -0.45933717489242554, -0.128849059343338, -0.0014192519010975957, -0.014927002601325512, -0.0008747326792217791, -0.0006292270263656974, -0.010903540998697281, -2.082120418548584, -2.9501731395721436, -0.05195210874080658, -0.6835659742355347, -0.07106850296258926, -0.02206793986260891, -0.006156527437269688, -0.009351381100714207, -0.01688028685748577, -0.002050441922619939, -0.05003887787461281, -0.004255050793290138, -0.0005978942499496043, -0.016531044617295265, -0.37613019347190857, -0.0002748588449321687, -0.01155269704759121, -0.9310893416404724, -0.0021188445389270782, -0.02642677165567875, -0.0006959400488995016, -0.010122628882527351, -0.01036805659532547, -0.2257249653339386, -0.017473096027970314, -0.0037439032457768917, -0.0023054706398397684, -0.07191930711269379, -0.0030702855437994003, -1.225548267364502, -0.01002160832285881, -0.0023041623644530773, -1.9699633121490479, -0.8735235333442688, -0.2845585346221924, -2.5652830600738525, -0.2655363976955414, -0.008124162442982197, -3.226644992828369, -0.4074290096759796, -1.2764639854431152, -1.8586173057556152, -0.8060827255249023, -0.9080923199653625, -0.6815696954727173, -0.27258047461509705, -0.1053188294172287, -0.08477740734815598, -0.8942437767982483, -0.8974474668502808], "finish_reason": "stop"}], "metrics": {"energy": 180.7457170658112, "energy_per_token": 1.4011295896574512, "time": 5.690134, "time_per_token": 0.044109565891472864}}
{"outputs": [{"text": "output_dict = {}\n    files = glob.glob(os.path.join(directory_path, '*' + file_extension))\n\n    for file in files:\n        with open(file, 'r') as f:\n            reader = csv.reader(f)\n            headers = next(reader)\n            output_dict[os.path.basename(file).split('.')[0]] = [headers] + [row for row in reader]\n    return output_dict", "tokens": ["output", "_", "dict", " =", " {}", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "with", " open", "(", "file", ",", " '", "r", "')", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "            ", "headers", " =", " next", "(", "reader", ")", "\n", "            ", "output", "_", "dict", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "('", ".", "')", "[", "0", "]]", " =", " [", "headers", "]", " +", " [", "row", " for", " row", " in", " reader", "]", "\n", "    ", "return", " output", "_", "dict", "\n", "\n", "if"], "logprobs": [-2.295684337615967, -0.9645056128501892, -0.23272229731082916, -0.010227179154753685, -0.09356682002544403, -0.009171852841973305, -0.2974148094654083, -2.0638628005981445, -0.3544459640979767, -0.05908454209566116, -0.00011801023356383666, -0.0096515454351902, -0.003758629783987999, -0.5340498685836792, -6.079655122448457e-06, -0.00018046658078674227, -0.007079161237925291, -0.001321038813330233, -0.0016094601014629006, -0.004844119306653738, -0.00017212340026162565, -5.722029527532868e-06, -0.0013221102999523282, -0.6915989518165588, -0.07997913658618927, -0.19099390506744385, -0.0009915679693222046, -0.0024601928889751434, -3.0278701160568744e-05, -4.3987260141875595e-05, -0.00390101526863873, -0.011626108549535275, -1.538180947303772, -0.000259365770034492, -0.24317781627178192, -0.30975639820098877, -0.3550325632095337, -0.0021214615553617477, -0.00029309268575161695, -0.004184063524007797, -0.010370534844696522, -0.5362051129341125, -0.002186290919780731, -0.0012298409128561616, -0.005431774538010359, -0.2058161348104477, -0.33975666761398315, -0.021012669429183006, -0.2615605294704437, -0.0013811582466587424, -0.8263481259346008, -0.02279600314795971, -0.0032353459391742945, -0.01049593836069107, -0.676367998123169, -0.002300951164215803, -0.02988475374877453, -3.4570634852570947e-06, -4.768258077092469e-05, -0.00447225384414196, -0.0008143446175381541, -0.0010096696205437183, -0.11468271166086197, -0.0020154656376689672, -0.0797494500875473, -2.73715877532959, -0.018632737919688225, -0.055814970284700394, -0.00013672371278516948, -0.0013634203933179379, -0.10079631209373474, -0.04821014031767845, -0.1018785834312439, -0.7917011380195618, -0.0159450676292181, -0.006373318377882242, -0.03196009621024132, -0.033151738345623016, -0.00019202772818971425, -3.981510963058099e-05, -0.009828153997659683, -0.2904781401157379, -7.152555099310121e-07, -0.00015233787416946143, -0.01602073945105076, -0.056541863828897476, -0.39108338952064514, -0.4947921633720398, -0.15262967348098755, -0.0013786583440378308, -0.03762004151940346, -0.0004096384218428284, -0.0005743046058341861, -0.004444720223546028, -0.0032201362773776054, -1.2311314344406128, -0.03987359255552292, -0.019542651250958443, -0.22795963287353516, -0.4107259511947632, -0.1601915955543518, -0.021670229732990265, -0.00015221867943182588, -0.00024673278676345944, -0.0015325717395171523, -0.011061537079513073, -0.0077199204824864864, -1.4268213510513306, -0.013139567337930202, -0.006423540413379669, -0.0001463782973587513, -1.1324817933200393e-05, -0.501079261302948, -0.030603913590312004, -0.7372835874557495], "finish_reason": "stop"}], "metrics": {"energy": 116.46363360595706, "energy_per_token": 1.0127272487474526, "time": 5.060093, "time_per_token": 0.04400080869565218}}
{"outputs": [{"text": "try:\n        data_dict = {}\n        for file in glob.glob(os.path.join(directory_path, '*' + file_extension)):\n            with open(file, 'r', encoding='utf-8') as csv_file:\n                csv_reader = csv.reader(csv_file, delimiter=',')\n                next(csv_reader, None)  # To skip the header row\n                file_name = file.replace('/home/user/data' + file_extension, '').replace('\\\\', '/')\n                data_dict[file_name] = list(csv_reader)\n        return data_dict\n    except (IOError, OSError) as err:\n        print(err)\n        return {}", "tokens": ["try", ":", "\n", "        ", "data", "_", "dict", " =", " {}", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", ":", "\n", "            ", "with", " open", "(", "file", ",", " '", "r", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "csv", "_", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "')", "\n", "                ", "next", "(", "csv", "_", "reader", ",", " None", ")", "  ", "#", " To", " skip", " the", " header", " row", "\n", "                ", "file", "_", "name", " =", " file", ".", "replace", "('/", "home", "/", "user", "/", "data", "'", " +", " file", "_", "extension", ",", " '", "')", ".", "replace", "('", "\\\\'", ",", " '/", "')", "\n", "                ", "data", "_", "dict", "[", "file", "_", "name", "]", " =", " list", "(", "csv", "_", "reader", ")", "\n", "        ", "return", " data", "_", "dict", "\n", "    ", "except", " (", "IO", "Error", ",", " O", "SE", "rror", ")", " as", " err", ":", "\n", "        ", "print", "(", "err", ")", "\n", "        ", "return", " {}", "\n", "\n", "print"], "logprobs": [-3.082089900970459, -0.0010852882405743003, -0.00692195538431406, -0.014238432049751282, -1.8643102645874023, -2.0930817127227783, -0.3384305238723755, -0.007352554704993963, -0.08078457415103912, -0.016448846086859703, -0.1318923532962799, -1.187221646308899, -0.650670051574707, -0.7775485515594482, -0.04106602817773819, -4.8636207793606445e-05, -0.0554567389190197, -0.006418921053409576, -0.6011865735054016, -6.079655122448457e-06, -0.00025829317746683955, -0.0049437666311860085, -0.001852583372965455, -0.0018585327779874206, -0.004737344104796648, -0.00024101213784888387, -4.172316494077677e-06, -0.0018649582052603364, -0.8437451720237732, -0.06559915840625763, -0.18720942735671997, -0.001255677198059857, -0.0023831319995224476, -6.794906312279636e-06, -3.182837463100441e-05, -0.004543932154774666, -0.00047946401173248887, -0.013741535134613514, -0.006012448575347662, -0.4670773148536682, -0.002127766376361251, -0.0009467886411584914, -0.01247507706284523, -0.16127541661262512, -0.39361369609832764, -0.020707137882709503, -1.6199651956558228, -0.0013449679827317595, -0.2245490401983261, -0.050505489110946655, -0.1242823526263237, -0.2215004563331604, -0.002737348433583975, -0.24419236183166504, -0.0010742137674242258, -1.4434176683425903, -0.0027246277313679457, -0.34015604853630066, -0.028972972184419632, -0.0005789510905742645, -0.003954092971980572, -0.004977098666131496, -1.1959586143493652, -0.02472992241382599, -0.13137055933475494, -0.0009922825265675783, -0.02902635745704174, -4.410734163684538e-06, -0.00016234986833296716, -0.018346494063735008, -9.262132516596466e-05, -0.002231014659628272, -2.706014311115723e-05, -2.8967437174287625e-05, -1.204658031463623, -0.12162457406520844, -0.0003133521240670234, -9.536738616588991e-07, -0.16512911021709442, -0.1027744710445404, -0.172376349568367, -0.005006633698940277, -0.02050674706697464, -2.2298567295074463, -0.0007706294418312609, -9.119095193454996e-05, -8.940656698541716e-06, -0.0005171154043637216, -1.949384331703186, -0.005988275166600943, -0.0002181292074965313, -0.4152386784553528, -0.00011622230522334576, -3.1211276054382324, -0.1354295015335083, -0.2300977259874344, -0.24773436784744263, -0.5416428446769714, -0.2656385004520416, -0.040921058505773544, -2.365325927734375, -0.011986960656940937, -0.6142016053199768, -0.04492584243416786, -2.418673038482666, -0.0927019715309143, -1.6412652730941772, -2.1440255641937256, -0.43804022669792175, -0.019304610788822174, -0.1259191334247589, -0.19226305186748505, -0.07656562328338623, -2.5764873027801514, -2.016869306564331, -0.08326039463281631, -0.004747310187667608, -0.0007412070408463478, -0.01781943254172802, -0.04273061081767082, -0.002849568147212267, -0.4851795434951782, -0.2552158832550049, -1.0999813079833984, -0.37924739718437195, -0.2545986771583557, -1.1892057657241821, -0.00204889546148479, -1.0801893472671509, -0.015670141205191612, -0.6164214611053467, -0.03577325865626335, -0.005375810898840427, -0.034848298877477646, -0.03655405715107918, -0.0015046000480651855, -6.747018051100895e-05, -0.10067731142044067, -0.0002441108226776123, -0.4080902934074402, -0.0032520999666303396, -0.0067422278225421906, -0.00128020322881639, -3.4689302992774174e-05, -0.0045203170739114285, -0.026477621868252754, -0.23579107224941254, -0.024050746113061905, -0.003351786872372031, -1.7165990357170813e-05, -7.748573807475623e-06, -0.0027957186102867126, -0.10036563873291016, -0.0020385454408824444, -2.831557273864746, -2.423163414001465, -3.290122185717337e-05, -0.019754456356167793, -0.9944310784339905, -1.3112935448589269e-05, -1.6331539882230572e-05, -1.209174633026123, -0.0036852320190519094, -1.5289301872253418, -0.004893825389444828, -0.008561690337955952, -0.0007985025877133012, -0.24107417464256287, -0.17450065910816193, -0.967913806438446, -0.08804920315742493, -0.01959233358502388, -0.2907048463821411, -0.09150703251361847, -0.15671318769454956, -0.2007535845041275, -0.09321480244398117, -3.02978515625], "finish_reason": "stop"}], "metrics": {"energy": 203.64381808662398, "energy_per_token": 1.1440663937450786, "time": 7.9958353, "time_per_token": 0.04492042303370787}}
{"outputs": [{"text": "output = {}\n\n    try:\n        for file_name in glob.glob(os.path.join(directory_path, '*' + file_extension)):\n            with open(file_name, 'r') as file:\n                reader = csv.reader(file)\n\n                headers = next(reader)\n\n                output[os.path.basename(file_name)[:-len(file_extension)]] = [headers] + [list(row) for row in reader]\n    except FileNotFoundError:\n        return {}\n    except Exception as e:\n        print(f'Error reading file: {str(e)}')\n        return {}\n\n    return output", "tokens": ["output", " =", " {}", "\n", "\n", "    ", "try", ":", "\n", "        ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", "'", " +", " file", "_", "extension", "))", ":", "\n", "            ", "with", " open", "(", "file", "_", "name", ",", " '", "r", "')", " as", " file", ":", "\n", "                ", "reader", " =", " c", "sv", ".", "reader", "(", "file", ")", "\n", "\n", "                ", "headers", " =", " next", "(", "reader", ")", "\n", "\n", "                ", "output", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", "_", "name", ")", "[:", "-", "len", "(", "file", "_", "extension", ")", "]]", " =", " [", "headers", "]", " +", " [", "list", "(", "row", ")", " for", " row", " in", " reader", "]", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "return", " {}", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Error", " reading", " file", ":", " {", "str", "(", "e", ")}", "')", "\n", "        ", "return", " {}", "\n", "\n", "    ", "return", " output", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.295684337615967, -0.5000662207603455, -0.12211666256189346, -0.00864359550178051, -1.3744819164276123, -0.0005967028555460274, -2.871386766433716, -0.0005131834768690169, -0.004664611537009478, -0.02436119131743908, -1.5893542766571045, -0.8267797827720642, -0.6604443192481995, -0.6991159319877625, -0.0031466991640627384, -0.04826534539461136, -4.184158387943171e-05, -0.04148034751415253, -0.00517433974891901, -0.6005145311355591, -6.079655122448457e-06, -0.00025185750564560294, -0.007011688780039549, -0.001141849672421813, -0.001979655120521784, -0.006184369325637817, -0.0001858300092862919, -4.887569048150908e-06, -0.0022488560061901808, -0.8998161554336548, -0.06033455207943916, -0.21319808065891266, -0.0015936305280774832, -0.0025603154208511114, -3.3378546504536644e-06, -0.00027938754647038877, -0.005555428564548492, -0.0004295380203984678, -0.009064002893865108, -0.029743127524852753, -0.3180348873138428, -0.0023767100647091866, -0.0006490031373687088, -0.009670672006905079, -8.129743218887597e-05, -2.3603161025675945e-05, -0.20127512514591217, -0.3499433398246765, -0.02577732875943184, -0.20224229991436005, -0.0006667536217719316, -0.3065894544124603, -0.02489842288196087, -0.002764572389423847, -0.007872269488871098, -0.48156872391700745, -0.001729065552353859, -0.02326163649559021, -1.0728830375228426e-06, -3.659658250398934e-05, -0.00608531991019845, -0.0005357022164389491, -0.001328420010395348, -0.16568511724472046, -0.0017611959483474493, -2.4906392097473145, -0.003900777781382203, -3.084902286529541, -0.016248421743512154, -0.06441541016101837, -0.00011300401820335537, -0.0008256602450273931, -0.1066993772983551, -0.09140922874212265, -1.410226821899414, -0.0007740838918834925, -1.0260767936706543, -0.05012834072113037, -0.051833268254995346, -2.074220174108632e-05, -6.663577369181439e-05, -0.0011445883428677917, -0.5114545226097107, -4.768370445162873e-07, -0.00011395759065635502, -0.02247854694724083, -0.012377001345157623, -4.029192859889008e-05, -0.13952596485614777, -0.8603688478469849, -0.06507062911987305, -0.10537676513195038, -0.005987919867038727, -0.005458095110952854, -2.9444261599564925e-05, -0.0027964317705482244, -0.022144196555018425, -0.006180696655064821, -0.0043335105292499065, -0.5006054639816284, -0.05753578618168831, -0.012547007761895657, -0.24721957743167877, -0.3170125484466553, -2.0053293704986572, -0.0003233625029679388, -0.05537620931863785, -0.0011445883428677917, -0.01142153237015009, -0.00032884435495361686, -0.0005656072753481567, -0.002567211864516139, -0.006660522893071175, -0.004781953524798155, -0.9389380812644958, -0.004092058166861534, -0.9382641315460205, -0.0003420721332076937, -2.0146166207268834e-05, -0.06397739052772522, -0.011967407539486885, -0.003430911572650075, -1.4267098903656006, -0.4912354350090027, -0.03161100298166275, -1.007688283920288, -0.2883584201335907, -2.14945650100708, -0.36483487486839294, -0.15541942417621613, -0.00019012074335478246, -0.005479080136865377, -0.0013256819220259786, -0.22946545481681824, -0.15100644528865814, -0.4510248601436615, -0.6760894060134888, -1.008678674697876, -0.9173969626426697, -0.40182068943977356, -0.5662603974342346, -0.00546248210594058, -2.71586537361145, -0.00017915551143232733, -0.016985774040222168, -0.01505301147699356, -0.01303626224398613, -0.010502190329134464, -0.7941234707832336, -0.10774905979633331, -0.0783340260386467, -0.03930973634123802, -0.3205235004425049, -0.034641165286302567, -0.03152760863304138, -0.001522811478935182, -1.0926165580749512, -8.344646857949556e-07, -5.960462772236497e-07, -5.054346183896996e-05, -7.593343616463244e-05, -0.07031131535768509], "finish_reason": "stop"}], "metrics": {"energy": 168.89050410270698, "energy_per_token": 1.0425339759426357, "time": 7.157725, "time_per_token": 0.04418348765432099}}
{"outputs": [{"text": "all_files = glob.glob(os.path.join(directory_path, f'*.{file_extension}'))\n    csv_files = dict()\n    for file in all_files:\n        try:\n            with open(file, encoding='utf-8') as csv_file:\n                file_reader = csv.reader(csv_file, delimiter=',')\n                first_row = next(file_reader)\n                csv_files[os.path.basename(file).split(\".\")[0]] = list(file_reader)\n        except Exception as e:\n            print(\"An error occurred while processing file\", file, \": \", e)\n\n    return csv_files", "tokens": ["all", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " f", "'", "*", ".", "{", "file", "_", "extension", "}'", "))", "\n", "    ", "csv", "_", "files", " =", " dict", "()", "\n", "    ", "for", " file", " in", " all", "_", "files", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", ",", " encoding", "='", "utf", "-", "8", "')", " as", " c", "sv", "_", "file", ":", "\n", "                ", "file", "_", "reader", " =", " c", "sv", ".", "reader", "(", "csv", "_", "file", ",", " del", "im", "iter", "='", ",", "')", "\n", "                ", "first", "_", "row", " =", " next", "(", "file", "_", "reader", ")", "\n", "                ", "csv", "_", "files", "[", "os", ".", "path", ".", "bas", "ename", "(", "file", ")", ".", "split", "(", "\"", ".", "\"", ")[", "0", "]]", " =", " list", "(", "file", "_", "reader", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "\"", "An", " error", " occurred", " while", " processing", " file", "\"", ",", " file", ",", " ", "\":", " \"", ",", " e", ")", "\n", "\n", "    ", "return", " c", "sv", "_", "files", "\n", "\n", "if"], "logprobs": [-3.831357479095459, -0.018419174477458, -0.45162802934646606, -0.136175274848938, -0.17849262058734894, -0.00016735584358684719, -0.015376356430351734, -0.006450545974075794, -0.3927615284919739, -9.298280929215252e-06, -0.0002762889489531517, -0.003061015624552965, -0.0009603655780665576, -0.001693720929324627, -0.005200074519962072, -0.0003082277253270149, -7.986990567587782e-06, -0.003626320045441389, -1.3444945812225342, -0.12978896498680115, -0.34469348192214966, -0.21869909763336182, -0.016917090862989426, -0.0005061537376604974, -1.5139465176616795e-05, -2.8371408916427754e-05, -0.005583524238318205, -0.0015505446353927255, -0.019684912636876106, -0.18980461359024048, -4.30926513671875, -0.0186587143689394, -0.5445693135261536, -0.08628610521554947, -3.2519733905792236, -0.08282452076673508, -0.01306120678782463, -0.45027124881744385, -0.2732827663421631, -0.4429667890071869, -0.2944685220718384, -0.003467026399448514, -7.748573807475623e-06, -9.298280929215252e-06, -0.0005131834768690169, -0.004149280488491058, -0.006133305840194225, -1.8287122249603271, -0.0003912875254172832, -0.002689318498596549, -0.0012762743281200528, -0.3260807693004608, -0.0019831054378300905, -0.0009053422254510224, -0.0045219785533845425, -0.18783213198184967, -2.314887285232544, -0.10578233003616333, -0.11669101566076279, -0.22034604847431183, -0.0044709485955536366, -0.19842886924743652, -0.003344064112752676, -1.1137127876281738, -0.005811698269098997, -0.14599595963954926, -0.09091255813837051, -0.0008622265886515379, -0.004993704613298178, -0.002317007165402174, -2.5277395248413086, -0.03198746219277382, -1.5241966247558594, -0.002415003487840295, -0.0650564432144165, -1.9907753085135482e-05, -0.0003634030872490257, -0.018153823912143707, -0.00014244495832826942, -0.00274757225997746, -4.60137271147687e-05, -0.00010585224663373083, -0.9647815823554993, -0.26095014810562134, -0.0005472592893056571, -2.9802276912960224e-06, -0.1249406486749649, -0.12035908550024033, -0.26146572828292847, -0.003911108709871769, -0.014609151519834995, -3.312610626220703, -0.014768912456929684, -0.1999572515487671, -0.015055947005748749, -0.06587821990251541, -0.00012718822108581662, -0.024982254952192307, -1.2874520507466514e-05, -3.814689989667386e-06, -0.017738860100507736, -0.04451705515384674, -0.018871407955884933, -0.38508814573287964, -5.686121585313231e-05, -0.018659064546227455, -0.045368071645498276, -0.14260253310203552, -0.00032026408007368445, -0.00017569905321579427, -0.004094313830137253, -0.33172607421875, -5.960462772236497e-07, -0.00017128908075392246, -0.008872135542333126, -0.07034320384263992, -0.45641931891441345, -0.43520525097846985, -1.8389601707458496, -0.3834253251552582, -0.00176821683999151, -0.014454535208642483, -0.025028876960277557, -0.0009727513534016907, -0.00568831292912364, -0.006986711174249649, -0.5809457302093506, -0.014364644885063171, -0.5235574245452881, -3.504691630951129e-05, -1.0847986231965479e-05, -0.025430019944906235, -0.01884227991104126, -0.17485973238945007, -0.0060620964504778385, -2.6370742321014404, -0.7518199682235718, -0.361298143863678, -0.0012663925299420953, -0.009820717386901379, -0.0031115233432501554, -0.37163805961608887, -0.07604274898767471, -2.3228931427001953, -2.291260004043579, -0.13519179821014404, -0.07780490070581436, -0.56805819272995, -1.3768324851989746, -1.139936923980713, -1.9809898138046265, -0.02111690305173397, -0.09662919491529465, -0.3142201900482178, -0.5493665933609009, -1.5971089601516724, -0.21694092452526093, -0.02470247447490692, -0.18999134004116058, -0.12839433550834656, -0.003314836183562875, -2.0281198024749756, -0.010037069208920002, -0.023681532591581345, -0.00837031751871109, -4.887569048150908e-06, -0.00016258825780823827, -8.106198947643861e-06, -0.405543714761734, -0.026226943358778954, -0.7378343343734741], "finish_reason": "stop"}], "metrics": {"energy": 177.1353349342345, "energy_per_token": 1.03587915166219, "time": 7.5813246, "time_per_token": 0.04433523157894737}}
{"outputs": [{"text": "# Check the file extension and return an empty dictionary if the file extension doesn't match\n    if file_extension != '.csv':\n        return {}\n\n    data = {}\n    for filename in glob.glob(f'{directory_path}/**/*{file_extension}', recursive=True):\n        with open(filename) as f:\n            reader = csv.reader(f)\n            headers = next(reader)\n            data[os.path.basename(filename)] = [headers] + [row for row in reader]\n\n    return data", "tokens": ["#", " Check", " the", " file", " extension", " and", " return", " an", " empty", " dictionary", " if", " the", " file", " extension", " doesn", "'", "t", " match", "\n", "    ", "if", " file", "_", "extension", " ", "!", "=", " '", ".", "csv", "':", "\n", "        ", "return", " {}", "\n", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "f", "'{", "directory", "_", "path", "}/", "**", "/*", "{", "file", "_", "extension", "}'", ",", " recursive", "=", "True", "):", "\n", "        ", "with", " open", "(", "filename", ")", " as", " f", ":", "\n", "            ", "reader", " =", " c", "sv", ".", "reader", "(", "f", ")", "\n", "            ", "headers", " =", " next", "(", "reader", ")", "\n", "            ", "data", "[", "os", ".", "path", ".", "bas", "ename", "(", "filename", ")]", " =", " [", "headers", "]", " +", " [", "row", " for", " row", " in", " reader", "]", "\n", "\n", "    ", "return", " data"], "logprobs": [-2.241004467010498, -2.0950746536254883, -2.6076908111572266, -2.035675048828125, -0.23123735189437866, -2.2992351055145264, -2.3279824256896973, -0.41500183939933777, -0.0061818817630410194, -0.05216745659708977, -0.056702837347984314, -1.8587615489959717, -1.4352829456329346, -0.11750325560569763, -2.057736396789551, -0.0007832558476366103, -3.933898824470816e-06, -0.1202373206615448, -1.3283262252807617, -0.003479262348264456, -0.15676149725914001, -1.1047804355621338, -5.447716102935374e-05, -0.0002809368306770921, -0.46796756982803345, -9.894321920000948e-06, -0.0001616347290109843, -0.03021814301609993, -0.003675017738714814, -0.019681405276060104, -0.12847045063972473, -0.015150589868426323, -0.002021889900788665, -0.10408420115709305, -0.049968574196100235, -0.0010202685371041298, -0.10539435595273972, -0.0008311392739415169, -3.189626693725586, -0.124407097697258, -0.050386928021907806, -0.059163425117731094, -1.0901484489440918, -1.7540338039398193, -0.9524748921394348, -0.0011829291470348835, -0.03891022503376007, -2.8371408916427754e-05, -0.04767096787691116, -0.0035036150366067886, -1.8563460111618042, -0.7262826561927795, -0.00701677892357111, -0.0004077318590134382, -1.4424220353248529e-05, -1.5950634479522705, -0.1483881175518036, -0.02567729726433754, -0.0709076076745987, -0.003168564522638917, -3.838465272565372e-05, -8.248942322097719e-05, -0.03455825522542, -0.0003359945258125663, -0.00350052653811872, -0.0044146934524178505, -0.0017527469899505377, -0.0034426727797836065, -0.010635481216013432, -0.019071659073233604, -0.7503344416618347, -0.0013529442949220538, -0.0003182381624355912, -0.002948581939563155, -2.222756862640381, -7.772143726469949e-05, -1.5848336219787598, -0.016203615814447403, -0.006497448310256004, -0.005420273635536432, -0.6598318815231323, -0.0007294139941222966, -0.025446753948926926, -2.145764938177308e-06, -4.577531944960356e-05, -0.007913191802799702, -0.0002944036095868796, -0.0008554374799132347, -0.08475210517644882, -0.0025798154529184103, -0.042941901832818985, -2.2953643798828125, -0.011754537001252174, -0.03323303535580635, -7.819823804311454e-05, -0.0009248746791854501, -0.08047587424516678, -0.09655559808015823, -0.05002300441265106, -0.3810730576515198, -0.06685053557157516, -0.08361285924911499, -2.0265558760002023e-06, -0.00010883215873036534, -0.007476089987903833, -0.7127001881599426, -5.960462772236497e-07, -7.855583680793643e-05, -0.027336236089468002, -2.816866874694824, -0.0008661571191623807, -0.9154055118560791, -0.06373380869626999, -0.02574816904962063, -0.17882424592971802, -0.37236952781677246, -0.17035287618637085, -0.011325475759804249, -6.55629628454335e-05, -8.082063141046092e-05, -0.0019193338230252266, -0.0140001829713583, -0.014220098033547401, -0.383375346660614, -0.004853491671383381, -0.013106035068631172, -0.00113589596003294], "finish_reason": "stop"}], "metrics": {"energy": 136.8453866271973, "energy_per_token": 1.0775227293480103, "time": 5.4733186, "time_per_token": 0.0430969968503937}}
