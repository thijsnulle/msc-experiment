{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f\"{source_path} is not a directory or does not exist!\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "source", "_", "path", "}", " is", " not", " a", " directory", " or", " does", " not", " exist", "!", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.0414924621582031, -0.01891246624290943, -0.0002623452164698392, -0.0002637753786984831, -0.21146714687347412, -0.4824727177619934, -0.045026931911706924, -0.18244655430316925, -0.46441328525543213, -1.0743434429168701, -0.31454819440841675, -0.002075662137940526, -0.02551717683672905, -2.235522747039795, -0.03611297160387039, -0.0011706650257110596, -0.004076505079865456], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -0.08734627813100815, -0.00029738296871073544, -0.21210114657878876, -0.0018695986364036798, -0.011861507780849934, -3.576214658096433e-05, -2.3245540432981215e-05, -0.37281492352485657, -0.057823970913887024, -0.0017229963559657335, -0.004068788141012192, -0.0023117740638554096, -0.008725965395569801], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47301027178764343, -5.304672595229931e-05, -6.174850568640977e-05, -0.01182475220412016, -0.05926757678389549, -0.0012762743281200528, -0.0051290360279381275, -1.3179094791412354, -8.344646857949556e-07, -7.152555099310121e-07, -1.1205610462639015e-05, -0.00011514954530866817, -0.10615096241235733], "finish_reason": "stop"}], "metrics": {"energy": 187.6907175750732, "energy_per_token": 1.5384485047137146, "time": 6.738535, "time_per_token": 0.05523389344262295}}
{"outputs": [{"text": " str(source_path)", "tokens": [" str", "(", "source", "_", "path", ")", "\n"], "logprobs": [-2.4711389541625977, -0.003650312777608633, -0.2764209806919098, -8.749579137656838e-05, -1.7165990357170813e-05, -0.013460002839565277, -0.049790408462285995], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(f'Source path {source_path} does not exist or is not a directory.')", "tokens": [" Value", "Error", "(", "f", "'", "Source", " path", " {", "source", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -1.211207628250122, -1.6155898571014404, -0.41798320412635803, -0.7155556678771973, -0.010044503957033157, -0.00018606838420964777, -3.6954195820726454e-05, -0.07531607896089554, -0.49287518858909607, -0.0018825681181624532, -0.023383688181638718, -0.0885644182562828, -0.03727050498127937, -0.005683808587491512, -0.03867892920970917, -0.029645804315805435, -0.8486725091934204, -0.010943396016955376, -0.0011999557027593255], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(str(entry.relative_to(source_path)))", "tokens": ["append", "(", "str", "(", "entry", ".", "relative", "_", "to", "(", "source", "_", "path", ")))", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -1.9133191108703613, -0.0016628975281491876, -0.03512606397271156, -0.0545416884124279, -0.6358534097671509, -6.675497570540756e-05, -0.000331704446580261, -0.0006521005416288972, -0.016558365896344185, -0.00023135847004596144, -7.199982064776123e-05, -0.27259907126426697, -0.009470300748944283], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018161722691729665, -0.2545241713523865, -0.711548924446106, -0.00037281715776771307, -0.025995483621954918, -0.0976959839463234, -0.00029130507027730346, -0.18211136758327484, -0.0017062166007235646, -0.011612676084041595, -3.516612196108326e-05, -2.90866428258596e-05, -0.4364760220050812, -0.060467757284641266, -0.0018468719208613038, -0.0035172761417925358, -0.001890659099444747, -0.008961102925240993], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results"], "logprobs": [-0.49497517943382263, -5.304672595229931e-05, -5.602679812000133e-05, -0.00996342208236456, -0.05557255446910858, -0.0016565899131819606, -0.0053370376117527485], "finish_reason": "stop"}], "metrics": {"energy": 164.59801876831057, "energy_per_token": 1.2661386059100812, "time": 7.392573, "time_per_token": 0.05686594615384615}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f\"Source directory does not exist: {source_path}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Source", " directory", " does", " not", " exist", ":", " {", "source", "_", "path", "}\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.5768394470214844, -1.5297530889511108, -1.9671381711959839, -0.0013503251830115914, -0.021481698378920555, -1.2604601383209229, -0.12132453173398972, -0.014246189035475254, -0.0001573438785271719, -9.953480184776708e-05, -0.18060947954654694, -0.0004855407460127026, -0.004259442910552025], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.rglob(\"*.txt\"):", "tokens": [" in", " source", "_", "path", ".", "rg", "lob", "(", "\"", "*", ".", "txt", "\"", "):", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -2.063849449157715, -0.0011116046225652099, -0.5627905130386353, -0.018084753304719925, -0.03507564961910248, -1.2623827457427979, -1.3355895280838013, -0.002593251410871744, -0.002003330737352371, -0.027998462319374084], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry.resolve()), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ".", "resolve", "())", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -2.4829227924346924, -0.5780490636825562, -0.009523555636405945, -0.00041309406515210867, -0.15884721279144287, -0.0017964191501960158, -0.0056360382586717606, -0.00019178935326635838, -3.707340147229843e-05, -0.8350329995155334, -0.05357653647661209, -0.0008774721063673496, -0.00793885625898838, -0.0021469180937856436, -0.010150124318897724], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5161518454551697, -4.8874615458771586e-05, -4.935142715112306e-05, -0.012408792041242123, -0.05642041563987732, -0.0015687552513554692, -0.005259960889816284, -0.35699477791786194], "finish_reason": "stop"}], "metrics": {"energy": 189.40833081054686, "energy_per_token": 1.565358105872288, "time": 6.9390507, "time_per_token": 0.057347526446280994}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(f'source_path must be an existing, accessible directory')", "tokens": [" Value", "Error", "(", "f", "'", "source", "_", "path", " must", " be", " an", " existing", ",", " accessible", " directory", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -1.211207628250122, -2.2246615886688232, -0.12360423803329468, -0.0061811706982553005, -1.754486083984375, -0.2665382921695709, -0.40126314759254456, -0.04783201217651367, -0.38284409046173096, -0.027879638597369194, -0.018294408917427063, -2.300605297088623, -0.001942058908753097], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.rglob('*'):", "tokens": [" in", " source", "_", "path", ".", "rg", "lob", "('", "*", "')", ":", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -2.063849449157715, -0.0011116046225652099, -0.8455129861831665, -0.027628730982542038, -0.3584662973880768, -0.0013685394078493118, -0.046350620687007904], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(str(entry.name))", "tokens": ["append", "(", "str", "(", "entry", ".", "name", "))", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -1.9133191108703613, -0.0016628975281491876, -0.03512606397271156, -0.0545416884124279, -0.8350321054458618, -0.002385153668001294, -0.006079040467739105], "finish_reason": "stop"}, {"text": "copy2(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "2", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018161722691729665, -1.897024154663086, -0.002552824327722192, -0.8235912322998047, -0.00030179237364791334, -0.02751009725034237, -0.1227741688489914, -0.00029094755882397294, -0.24606139957904816, -0.0016718233237043023, -0.00787498988211155, -5.447716102935374e-05, -3.504691630951129e-05, -0.4614824950695038, -0.04471622779965401, -0.003127804258838296, -0.004172667395323515, -0.003968579228967428, -0.010912738740444183], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5392485857009888, -5.519237674889155e-05, -5.495397272170521e-05, -0.011488472111523151, -0.05541568621993065, -0.0014463926199823618, -0.005050164181739092, -0.30508002638816833], "finish_reason": "stop"}], "metrics": {"energy": 158.68111459922787, "energy_per_token": 1.2593739253906973, "time": 6.9528117, "time_per_token": 0.055181045238095236}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError('source_path must be an existing directory')", "tokens": [" Value", "Error", "('", "source", "_", "path", " must", " be", " an", " existing", " directory", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -1.3027936220169067, -1.3130544424057007, -0.05689689517021179, -0.009679644368588924, -0.8720530867576599, -0.23950046300888062, -0.4272003173828125, -0.03306639567017555, -1.9926185607910156, -0.27619418501853943, -0.001868646708317101], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005453471094369888, -6.83045873302035e-05, -0.00020680672605521977, -0.29484301805496216, -0.001453653909265995, -0.0036404544953256845, -0.002273238729685545, -0.0025233353953808546, -2.3841855067985307e-07, -8.368142152903602e-05, -0.000446696620201692, -0.0030844276770949364, -0.0024703005328774452, -0.04740769788622856], "finish_reason": "stop"}, {"text": " shutil.copytree(source_path, destination_path)", "tokens": [" shut", "il", ".", "copy", "tree", "(", "source", "_", "path", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-2.393378734588623, -0.0002734287118073553, -6.639736966462806e-05, -0.012090020813047886, -0.22091777622699738, -0.00670646782964468, -0.0865919217467308, -0.004168274812400341, -0.00013445904187392443, -0.008946453221142292, -0.041885118931531906, -0.00042763148667290807, -2.5510462364763953e-05, -0.6357631683349609, -0.016437001526355743], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.009307683445513248, -0.12093789130449295, -0.00029940891545265913, -1.2040065485052764e-05, -0.0005168771021999419, -0.20015156269073486, -0.0002903516869992018, -0.0006237468332983553, -0.007408881094306707], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.11177925765514374, -0.0004949536523781717, -0.07603435218334198, -1.8358061424805783e-05, -0.020819228142499924, -0.0400143638253212, -0.012690972536802292], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0015964870108291507, -0.002314033918082714, -0.19059565663337708, -0.0026712471153587103, -0.05486143007874489, -0.0035713245160877705, -0.0034617993514984846], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", "))", "\n"], "logprobs": [-0.0019357530400156975, -0.24593743681907654, -0.6602393984794617, -0.00025733973598107696, -0.022330738604068756, -0.105072021484375, -0.0002964295563288033, -0.1881197839975357, -0.002092554699629545, -0.011566601693630219, -4.1126360883936286e-05, -2.5033637939486653e-05, -1.734849452972412, -0.006775381974875927], "finish_reason": "stop"}, {"text": " (source_path.name, results)", "tokens": [" (", "source", "_", "path", ".", "name", ",", " results", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.1259825229644775, -0.4689413011074066, -8.67805938469246e-05, -2.2411095415009186e-05, -0.026845574378967285, -0.0392339713871479, -0.0013293724041432142, -0.005071395076811314, -1.1867843866348267, -9.536738616588991e-07, -7.152555099310121e-07, -2.4914430468925275e-05, -0.00015448330668732524, -0.11049900203943253], "finish_reason": "stop"}], "metrics": {"energy": 157.97393359470368, "energy_per_token": 1.2843409235341763, "time": 6.951268, "time_per_token": 0.05651437398373983}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f\"The {source_path} directory does not exist or is not a directory\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " {", "source", "_", "path", "}", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.9516525268554688, -2.7208895683288574, -0.034207992255687714, -0.00011765264935093, -0.00015400654228869826, -0.14035986363887787, -2.1125640869140625, -0.33492904901504517, -0.0026033578906208277, -0.027439234778285027, -0.5807316303253174, -0.1573556810617447, -0.09515207260847092, -0.6634343862533569, -0.12415158748626709, -1.1760880947113037, -0.002221499104052782, -0.0033098459243774414], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7652103900909424, -0.013809025287628174, -0.023064669221639633, -0.0006358985556289554, -1.645074735279195e-05, -0.11303733289241791, -0.01567530445754528], "finish_reason": "stop"}, {"text": " (str(source_path), results)", "tokens": [" (", "str", "(", "source", "_", "path", ")", ",", " results", ")", "\n"], "logprobs": [-1.2270400524139404, -1.1084935665130615, -0.0004797023138962686, -0.008948697708547115, -0.00029404606902971864, -1.1444026313256472e-05, -0.8174260258674622, -0.005872259382158518, -0.0081670843064785, -0.35323622822761536, -0.14680400490760803], "finish_reason": "stop"}], "metrics": {"energy": 192.27339682006837, "energy_per_token": 1.671942581044073, "time": 7.7450714, "time_per_token": 0.06734844695652173}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " source_path.is_dir():", "tokens": [" source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-1.7712334394454956, -3.7431014789035544e-05, -3.8980677345534787e-05, -0.009943829849362373, -0.4798509478569031, -8.4638240878121e-06, -0.2092791199684143, -0.21904054284095764, -0.02131682261824608], "finish_reason": "stop"}, {"text": " ValueError(f\"{source_path} does not exist or is not a directory!\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "source", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", "!", "\"", ")", "\n"], "logprobs": [-0.011553286574780941, -3.361645576660521e-05, -0.34827250242233276, -0.7303978204727173, -0.43865445256233215, -1.0279393196105957, -0.022251345217227936, -0.00026663561584427953, -0.0003319427778478712, -0.18557874858379364, -1.4765162467956543, -0.0017423938261345029, -0.026338184252381325, -0.06640052795410156, -0.06737957149744034, -0.003195182653144002, -0.021843912079930305, -0.03792332112789154, -2.8760976791381836, -0.030167482793331146, -0.0007849234389141202, -0.004937123507261276], "finish_reason": "stop"}, {"text": "mkdir(exist_ok=True, parents=True)", "tokens": ["mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n"], "logprobs": [-0.004982673563063145, -6.16293036728166e-05, -0.00023326536756940186, -1.4347425699234009, -0.00017891713650897145, -1.9073304429184645e-05, -0.002360892714932561, -0.0019975011236965656, -0.10044305771589279, -0.008486281149089336, -0.0001472126314183697, -0.00395813025534153, -0.01638997718691826, -0.03129379078745842], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22077736258506775, -0.005176356062293053], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.010476828552782536, -0.12225951254367828, -0.00038509105797857046, -1.0847986231965479e-05, -0.0005727558163926005, -0.1714799553155899, -0.0003036991402041167, -0.0007141662063077092, -0.00678023649379611], "finish_reason": "stop"}, {"text": " entry.name.startswith(\".\"):", "tokens": [" entry", ".", "name", ".", "start", "sw", "ith", "(", "\"", ".", "\"", "):", "\n"], "logprobs": [-0.11087048798799515, -0.0005361788207665086, -2.897148847579956, -0.12583430111408234, -0.7161463499069214, -8.106198947643861e-06, 0.0, -0.7662374973297119, -0.045207429677248, -0.6862824559211731, -0.008980833925306797, -0.2877565622329712, -0.10087121278047562], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018158152233809233, -0.002155244816094637, -0.20438094437122345, -0.0026568612083792686, -0.05777108669281006, -0.004973540082573891, -0.004169580992311239], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0018058198038488626, -0.21476715803146362, -0.9748880863189697, -0.012950951233506203, -0.030271923169493675, -0.0006223172531463206, -1.966933996300213e-05, -0.1014140173792839, -0.01353209838271141], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5393354296684265, -4.827859811484814e-05, -5.1020273531321436e-05, -0.010599624365568161, -0.0657624751329422, -0.0015143604250624776, -0.005228417459875345, -0.3377319872379303], "finish_reason": "stop"}], "metrics": {"energy": 186.75559863853454, "energy_per_token": 1.609962057228746, "time": 6.736722, "time_per_token": 0.058075189655172416}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " source_path.is_dir() and source_path.exists():", "tokens": [" source", "_", "path", ".", "is", "_", "dir", "()", " and", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-1.7712334394454956, -3.7431014789035544e-05, -3.8980677345534787e-05, -0.009943829849362373, -0.4798509478569031, -8.4638240878121e-06, -0.2092791199684143, -1.6403051614761353, -0.5886933207511902, -0.055470723658800125, -1.4781842764932662e-05, -1.7881233361549675e-05, -0.003156087128445506, -0.07912910729646683, -0.024323031306266785, -0.01594354398548603], "finish_reason": "stop"}, {"text": " ValueError(f'Given {source_path} is not a directory')", "tokens": [" Value", "Error", "(", "f", "'", "Given", " {", "source", "_", "path", "}", " is", " not", " a", " directory", "')", "\n"], "logprobs": [-0.011553286574780941, -3.361645576660521e-05, -0.34827250242233276, -0.7303978204727173, -1.2692952156066895, -4.32851505279541, -3.188431978225708, -0.0282181017100811, -0.00014888131408952177, -0.0001517419150331989, -0.5103802680969238, -0.4776874780654907, -0.10339224338531494, -0.28871431946754456, -0.330583781003952, -0.9773452877998352, -0.00203830748796463], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.004982673563063145, -6.16293036728166e-05, -0.00023326536756940186, -0.2854372560977936, -0.0015797051601111889, -0.0030166853684931993, -0.0024639980401843786, -0.0026496085338294506, -3.576278118089249e-07, -8.439661905867979e-05, -0.00042298430344089866, -0.0026515109930187464, -0.0035738188307732344, -0.05431601032614708], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.24224495887756348, -0.005150027573108673], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.007242496125400066, -0.1307448297739029, -0.00040356122190132737, -1.1086402082582936e-05, -0.0006731866160407662, -0.165473073720932, -0.0002431573811918497, -0.000681883015204221, -0.007136923260986805], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10454601794481277, -0.0004111875023227185, -0.08399458229541779, -1.1801649634435307e-05, -0.024688635021448135, -0.04095401242375374, -0.012568432837724686], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018093895632773638, -0.002726529957726598, -0.22873644530773163, -0.0025448575615882874, -0.04279308766126633, -0.004141207784414291, -0.0026562665589153767], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.002002021996304393, -0.2234543114900589, -0.6983987092971802, -0.0003980797773692757, -0.026680883020162582, -0.10156016796827316, -0.00030155404238030314, -0.2238040417432785, -0.0015022194711491466, -0.011520172469317913, -3.075552376685664e-05, -3.158996332786046e-05, -0.37011006474494934, -0.053129106760025024, -0.0019809638615697622, -0.004354400094598532, -0.0022191202733665705, -0.00883467961102724], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5638896226882935, -4.9470632802695036e-05, -6.294052582234144e-05, -0.011019210331141949, -0.0679631382226944, -0.0014765085652470589, -0.005847371648997068, -0.3778059184551239], "finish_reason": "stop"}], "metrics": {"energy": 157.7969476366043, "energy_per_token": 1.3041070052611925, "time": 6.7329435, "time_per_token": 0.055644161157024793}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(f\"{source_path} does not exist or is not a directory.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "source", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.0414924621582031, -0.01891246624290943, -0.0002623452164698392, -0.0002637753786984831, -0.21146714687347412, -1.396094560623169, -0.0016696811653673649, -0.024645254015922546, -0.06141103804111481, -0.06633348017930984, -0.0036712170112878084, -0.02136186510324478, -0.03672977164387703, -0.9526477456092834, -0.021195685490965843, -0.0004544417606666684, -0.003779294202104211], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copyfile(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "file", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -2.9800376892089844, -0.013845942914485931, -1.008720874786377, -0.0008223251206800342, -0.09980133920907974, -0.13887761533260345, -0.00031537804170511663, -0.19117175042629242, -0.0044413972645998, -0.06377161294221878, -0.00023672162205912173, -2.4199192921514623e-05, -0.18381427228450775, -0.030035845935344696, -0.0022593229077756405, -0.0019271865021437407, -0.003028332721441984, -0.00838663149625063], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5089179277420044, -5.376194530981593e-05, -5.936446541454643e-05, -0.01052873209118843, -0.05238818749785423, -0.0015774437924847007, -0.004855982959270477, -0.36696693301200867], "finish_reason": "stop"}], "metrics": {"energy": 151.38994241523744, "energy_per_token": 1.2721843900440122, "time": 6.748577, "time_per_token": 0.056710731092436975}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError('Source directory does not exist.')", "tokens": [" Value", "Error", "('", "Source", " directory", " does", " not", " exist", ".", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -1.3027936220169067, -1.3249601125717163, -1.6089327335357666, -0.48608073592185974, -0.0008276851149275899, -0.017099101096391678, -2.178755521774292, -0.061300043016672134, -0.002693003974854946], "finish_reason": "stop"}, {"text": "mkdir(exist_ok=True, parents=True)", "tokens": ["mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n"], "logprobs": [-0.005453471094369888, -6.83045873302035e-05, -0.00020680672605521977, -1.4000122547149658, -0.00018988236843142658, -2.0503786799963564e-05, -0.002081967191770673, -0.0022326798643916845, -0.07184053957462311, -0.0077151888981461525, -0.00014685506175737828, -0.0038847471587359905, -0.025357382372021675, -0.02847164310514927], "finish_reason": "stop"}, {"text": " shutil.copytree(source_path, destination_path, dirs_exist_ok=True)", "tokens": [" shut", "il", ".", "copy", "tree", "(", "source", "_", "path", ",", " destination", "_", "path", ",", " d", "irs", "_", "exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-2.6182925701141357, -0.0002489972102921456, -5.721882189391181e-05, -0.012893876992166042, -0.2355390340089798, -0.008246774785220623, -0.0745561271905899, -0.0031264969147741795, -0.00013720047718379647, -0.011095844209194183, -0.04256268963217735, -0.0004167880106251687, -2.8609820219571702e-05, -0.8120009303092957, -0.1986541748046875, -0.006156764458864927, -0.0003400462737772614, -0.006608773022890091, -8.344646857949556e-07, -0.006979608442634344, -0.0009110590908676386, -0.01311121229082346, -0.20305296778678894, -0.028035206720232964], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.007957305759191513, -0.11846817284822464, -0.0003644755925051868, -1.07287787614041e-05, -0.0005740663618780673, -0.164126455783844, -0.00027700403006747365, -0.0005944392178207636, -0.007489460054785013], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.11441917717456818, -0.000433112756581977, -0.06765368580818176, -1.5139465176616795e-05, -0.020081309601664543, -0.04638271406292915, -0.013374963775277138], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001806057756766677, -0.002688248408958316, -0.2301551252603531, -0.003252931870520115, -0.04637759551405907, -0.004331136588007212, -0.0035717994906008244], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0020302177872508764, -0.2935456335544586, -0.7641377449035645, -0.012284333817660809, -0.026993760839104652, -0.0007111880695447326, -1.3351351299206726e-05, -0.09624858945608139, -0.013384138233959675], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5333308577537537, -4.5298504119273275e-05, -5.018585216021165e-05, -0.009280755184590816, -0.06305835396051407, -0.0014304416254162788, -0.005757652223110199, -0.36398711800575256], "finish_reason": "stop"}], "metrics": {"energy": 200.2841891860962, "energy_per_token": 1.6416736818532476, "time": 6.948938, "time_per_token": 0.05695850819672131}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(f\"{source_path} does not exist or is not a directory.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "source", "_", "path", "}", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.0414924621582031, -0.01891246624290943, -0.0002623452164698392, -0.0002637753786984831, -0.21146714687347412, -1.396094560623169, -0.0016696811653673649, -0.024645254015922546, -0.06141103804111481, -0.06633348017930984, -0.0036712170112878084, -0.02136186510324478, -0.03672977164387703, -0.9526477456092834, -0.021195685490965843, -0.0004544417606666684, -0.003779294202104211], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -0.08734627813100815, -0.00029738296871073544, -0.21210114657878876, -0.0018695986364036798, -0.011861507780849934, -3.576214658096433e-05, -2.3245540432981215e-05, -0.37281492352485657, -0.057823970913887024, -0.0017229963559657335, -0.004068788141012192, -0.0023117740638554096, -0.008725965395569801], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47301027178764343, -5.304672595229931e-05, -6.174850568640977e-05, -0.01182475220412016, -0.05926757678389549, -0.0012762743281200528, -0.0051290360279381275, -1.3179094791412354, -8.344646857949556e-07, -7.152555099310121e-07, -1.1205610462639015e-05, -0.00011514954530866817, -0.10615096241235733], "finish_reason": "stop"}], "metrics": {"energy": 176.2720267448426, "energy_per_token": 1.3253535845476887, "time": 7.156451, "time_per_token": 0.0538079022556391}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError('source_path does not exist or is not a directory')", "tokens": [" Value", "Error", "('", "source", "_", "path", " does", " not", " exist", " or", " is", " not", " a", " directory", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -1.3027936220169067, -1.3130544424057007, -0.05689689517021179, -0.009679644368588924, -1.2536907196044922, -0.0011326810345053673, -0.017203979194164276, -0.06382876634597778, -0.023026226088404655, -0.0012519863666966558, -0.013104388490319252, -0.007561632432043552, -0.23555514216423035, -0.0019106481922790408], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005453471094369888, -6.83045873302035e-05, -0.00020680672605521977, -0.29484301805496216, -0.001453653909265995, -0.0036404544953256845, -0.002273238729685545, -0.0025233353953808546, -2.3841855067985307e-07, -8.368142152903602e-05, -0.000446696620201692, -0.0030844276770949364, -0.0024703005328774452, -0.04740769788622856], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.24103295803070068, -0.0071755084209144115], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.009307683445513248, -0.12093789130449295, -0.00029940891545265913, -1.2040065485052764e-05, -0.0005168771021999419, -0.20015156269073486, -0.0002903516869992018, -0.0006237468332983553, -0.007408881094306707], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.11177925765514374, -0.0004949536523781717, -0.07603435218334198, -1.8358061424805783e-05, -0.020819228142499924, -0.0400143638253212, -0.012690972536802292], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0015964870108291507, -0.002314033918082714, -0.19059565663337708, -0.0026712471153587103, -0.05486143007874489, -0.0035713245160877705, -0.0034617993514984846], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0019357530400156975, -0.24593743681907654, -0.8292838931083679, -0.013837830163538456, -0.02566985972225666, -0.0006414977833628654, -1.3947389561508317e-05, -0.10321550071239471, -0.014325043186545372], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.49407491087913513, -6.246371776796877e-05, -4.768258077092469e-05, -0.009812925942242146, -0.05131201446056366, -0.0017072877380996943, -0.0051924847066402435, -0.3539949953556061], "finish_reason": "stop"}], "metrics": {"energy": 136.1466428642273, "energy_per_token": 1.2966346939450217, "time": 6.108103, "time_per_token": 0.058172409523809525}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f\"Directory {source_path} not found or not accessible\")", "tokens": [" Value", "Error", "(", "f", "\"", "Directory", " {", "source", "_", "path", "}", " not", " found", " or", " not", " accessible", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -3.9092864990234375, -0.6111580729484558, -0.007401544600725174, -0.00011526874004630372, -8.21318244561553e-05, -0.12639136612415314, -2.3518307209014893, -0.09185954183340073, -0.8000067472457886, -0.8748444318771362, -0.42410892248153687, -1.0050480365753174, -0.0011403016978874803, -0.0049532558768987656], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " list(source_path.glob('*'))", "tokens": [" list", "(", "source", "_", "path", ".", "glob", "('", "*", "'))", "\n"], "logprobs": [-3.142953634262085, -1.5956196784973145, -0.7825520038604736, -0.0008100565755739808, -6.890059739816934e-05, -0.00025197668583132327, -1.3317391872406006, -0.41260024905204773, -0.6620657444000244, -0.18908298015594482, -0.03337901085615158], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " not entry.is_dir() and not entry.is_file():", "tokens": [" not", " entry", ".", "is", "_", "dir", "()", " and", " not", " entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-2.487421751022339, -0.0726393610239029, -0.0001456631434848532, -0.049343664199113846, -9.179073458653875e-06, -1.496208667755127, -0.9385294318199158, -0.010882080532610416, -1.4286212921142578, -0.020667903125286102, -0.0016127924900501966, -0.28338736295700073, -0.005049808416515589, -0.21863770484924316, -0.013063207268714905, -0.02728055603802204], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0016195764765143394, -0.002539031207561493, -0.2443278431892395, -0.003367469646036625, -0.03920084610581398, -0.004880302120000124, -0.0032808545511215925], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.001981796696782112, -0.25523048639297485, -0.8359431028366089, -0.01232707779854536, -0.02215830609202385, -0.0005353448214009404, -2.634490556374658e-05, -0.09048610180616379, -0.01416497677564621], "finish_reason": "stop"}, {"text": " (source_path.name, results)", "tokens": [" (", "source", "_", "path", ".", "name", ",", " results", ")", "\n"], "logprobs": [-1.1066267490386963, -0.4237391948699951, -5.113947918289341e-05, -2.13382354559144e-05, -0.029607383534312248, -0.04263842850923538, -0.0013007997767999768, -0.00491992337629199, -0.35271191596984863, -0.22505497932434082], "finish_reason": "stop"}], "metrics": {"energy": 161.85248801040646, "energy_per_token": 1.2644725625813005, "time": 7.1537127, "time_per_token": 0.05588838046875}}
{"outputs": [{"text": " pathlib.Path(source_path).absolute()", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", ".", "absolute", "()", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -2.1321005821228027, -2.303250789642334, -0.0016125545371323824, -0.1236102432012558], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " source_path.is_dir():", "tokens": [" source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-1.7712334394454956, -3.7431014789035544e-05, -3.8980677345534787e-05, -0.009943829849362373, -0.4798509478569031, -8.4638240878121e-06, -0.2092791199684143, -0.21904054284095764, -0.02131682261824608], "finish_reason": "stop"}, {"text": " ValueError('The source path is not a directory.')", "tokens": [" Value", "Error", "('", "The", " source", " path", " is", " not", " a", " directory", ".", "')", "\n"], "logprobs": [-0.011553286574780941, -3.361645576660521e-05, -1.2762949466705322, -1.7085020542144775, -0.44850167632102966, -0.6334702372550964, -2.022224187850952, -0.31039199233055115, -0.29526227712631226, -0.3201711177825928, -1.3814201354980469, -0.059805698692798615, -0.0027567262295633554], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005055027082562447, -4.8040190449682996e-05, -0.00021407696476671845, -0.34629544615745544, -0.0013872295385226607, -0.0033793505281209946, -0.0021143241319805384, -0.0026529375463724136, -4.768370445162873e-07, -5.9126061387360096e-05, -0.0004514628672040999, -0.003161196829751134, -0.0029415693134069443, -0.05267208814620972], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.25123560428619385, -0.005648484919220209], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.007166394963860512, -0.12399385124444962, -0.0003389737685211003, -1.2397689715726301e-05, -0.0006605588714592159, -0.16680173575878143, -0.0003313469351269305, -0.0006665153778158128, -0.008583555929362774], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10865328460931778, -0.00043358939001336694, -0.08564978837966919, -1.811964830267243e-05, -0.021608751267194748, -0.04250350967049599, -0.012720045633614063], "finish_reason": "stop"}, {"text": "append(str(entry.relative_to(source_path)))", "tokens": ["append", "(", "str", "(", "entry", ".", "relative", "_", "to", "(", "source", "_", "path", ")))", "\n"], "logprobs": [-0.0018913729581981897, -0.0023846779949963093, -1.621664047241211, -0.0017251383978873491, -0.02994179166853428, -0.05442270264029503, -0.7296432852745056, -9.667406266089529e-05, -0.00030417583184316754, -0.0008873577462509274, -0.01778898388147354, -0.00020037073409184813, -5.566918844124302e-05, -0.20851287245750427, -0.010208417661488056], "finish_reason": "stop"}, {"text": "copy2(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "2", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018572239205241203, -1.9191523790359497, -0.001965021248906851, -0.750579833984375, -0.0002874914789572358, -0.029576251283288002, -0.13242609798908234, -0.00024196557933464646, -0.21266990900039673, -0.0021259819623082876, -0.00900918710976839, -3.40932747349143e-05, -3.862306402879767e-05, -0.4983373284339905, -0.04443518817424774, -0.002259679604321718, -0.0034413659013807774, -0.004066294990479946, -0.013166862539947033], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.4741491973400116, -5.900685573578812e-05, -4.8397800128441304e-05, -0.009564528241753578, -0.05150474235415459, -0.0016196954529732466, -0.005612804554402828, -0.32637274265289307], "finish_reason": "stop"}], "metrics": {"energy": 166.99140460205078, "energy_per_token": 1.4032891143029478, "time": 6.932204, "time_per_token": 0.058253815126050414}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(f'{source_path} is not an existing directory.')", "tokens": [" Value", "Error", "(", "f", "'{", "source", "_", "path", "}", " is", " not", " an", " existing", " directory", ".", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -2.5485355854034424, -0.012773481197655201, -0.00019905969384126365, -0.00045468006283044815, -0.18022219836711884, -0.4640090763568878, -0.04141492769122124, -1.956087350845337, -0.09292870759963989, -0.4836132824420929, -1.401452898979187, -0.036696676164865494, -0.0018344969721511006], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " list(map(str, shutil.copy2_file(source_path, destination_path)))", "tokens": [" list", "(", "map", "(", "str", ",", " shut", "il", ".", "copy", "2", "_", "file", "(", "source", "_", "path", ",", " destination", "_", "path", ")))", "\n"], "logprobs": [-3.142953634262085, -1.5956196784973145, -1.5714714527130127, -0.011456063017249107, -1.5505083799362183, -0.027068715542554855, -2.454838514328003, -0.00013505500101018697, -8.153582894010469e-05, -0.5289021134376526, -0.600970447063446, -1.1086161136627197, -1.026615858078003, -0.18210342526435852, -0.1723804622888565, -0.00010799778101500124, -0.0027046550530940294, -0.17982293665409088, -0.05605078861117363, -0.0002650863316375762, -0.0001578206429257989, -0.18710127472877502, -0.015962548553943634], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(str(entry.relative_to(source_path)))", "tokens": ["append", "(", "str", "(", "entry", ".", "relative", "_", "to", "(", "source", "_", "path", ")))", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -1.9133191108703613, -0.0016628975281491876, -0.03512606397271156, -0.0545416884124279, -0.6358534097671509, -6.675497570540756e-05, -0.000331704446580261, -0.0006521005416288972, -0.016558365896344185, -0.00023135847004596144, -7.199982064776123e-05, -0.27259907126426697, -0.009470300748944283], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018161722691729665, -0.2545241713523865, -0.711548924446106, -0.00037281715776771307, -0.025995483621954918, -0.0976959839463234, -0.00029130507027730346, -0.18211136758327484, -0.0017062166007235646, -0.011612676084041595, -3.516612196108326e-05, -2.90866428258596e-05, -0.4364760220050812, -0.060467757284641266, -0.0018468719208613038, -0.0035172761417925358, -0.001890659099444747, -0.008961102925240993], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.49497517943382263, -5.304672595229931e-05, -5.602679812000133e-05, -0.00996342208236456, -0.05557255446910858, -0.0016565899131819606, -0.0053370376117527485, -0.32107308506965637], "finish_reason": "stop"}], "metrics": {"energy": 180.18134438705454, "energy_per_token": 1.2092707676983525, "time": 7.7906594, "time_per_token": 0.05228630469798658}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(\"source_path should be an existing, accessible directory\")", "tokens": [" Value", "Error", "(", "\"", "source", "_", "path", " should", " be", " an", " existing", ",", " accessible", " directory", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.5311243534088135, -0.05403720587491989, -0.007630723994225264, -3.0242133140563965, -0.1640090048313141, -0.8411763906478882, -0.061522915959358215, -0.6000356078147888, -0.035294316709041595, -0.019817568361759186, -0.5087068676948547, -0.001311514643020928, -0.005998347420245409], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005057517904788256, -6.949660019017756e-05, -0.0002580548170953989, -0.2400943487882614, -0.0014697236474603415, -0.003258872777223587, -0.0024622143246233463, -0.002720704535022378, -3.576278118089249e-07, -8.546940807718784e-05, -0.0003916450368706137, -0.0021736822091042995, -0.0027354462072253227, -0.0459064356982708], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.19970101118087769, -0.007406632881611586], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.007993612438440323, -0.11593416333198547, -0.00039319414645433426, -1.1086402082582936e-05, -0.0006093314150348306, -0.20657505095005035, -0.0003215749457012862, -0.0006914132391102612, -0.007139882072806358], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.09021371603012085, -0.0004240567213855684, -0.07227257639169693, -1.4066597032069694e-05, -0.025012601166963577, -0.042048580944538116, -0.012703920714557171], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001831522211432457, -0.002684919396415353, -0.20719105005264282, -0.0027536354027688503, -0.05026019364595413, -0.003624300705268979, -0.0035131184849888086], "finish_reason": "stop"}, {"text": "copyfile(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "file", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0020412816666066647, -2.69348406791687, -0.0069105904549360275, -1.1147937774658203, -0.0006989181856624782, -0.07976309210062027, -0.17407125234603882, -0.0002791491860989481, -0.21565373241901398, -0.003818127792328596, -0.05453119054436684, -0.0002549561613705009, -2.455681169521995e-05, -0.19192326068878174, -0.02996458299458027, -0.0019005347276106477, -0.0019163592951372266, -0.003229523543268442, -0.009529931470751762], "finish_reason": "stop"}, {"text": " str(source_path.name), results", "tokens": [" str", "(", "source", "_", "path", ".", "name", ")", ",", " results", "\n"], "logprobs": [-2.757584571838379, -0.000825898430775851, -0.011171293444931507, -9.63164638960734e-05, -1.2159273865108844e-05, -0.13288962841033936, -0.07836621254682541, -0.0010836211731657386, -0.0010795724811032414, -0.006830556783825159, -0.2422337383031845], "finish_reason": "stop"}], "metrics": {"energy": 158.49915901851654, "energy_per_token": 1.3546936668249276, "time": 6.9402, "time_per_token": 0.05931794871794872}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError('Path is not a directory')", "tokens": [" Value", "Error", "('", "Path", " is", " not", " a", " directory", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -1.3027936220169067, -3.8558077812194824, -1.5592286586761475, -0.07780490070581436, -0.25563177466392517, -0.19967962801456451, -1.009290099143982, -0.002167496830224991], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005453471094369888, -6.83045873302035e-05, -0.00020680672605521977, -0.29484301805496216, -0.001453653909265995, -0.0036404544953256845, -0.002273238729685545, -0.0025233353953808546, -2.3841855067985307e-07, -8.368142152903602e-05, -0.000446696620201692, -0.0030844276770949364, -0.0024703005328774452, -0.04740769788622856], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.24103295803070068, -0.0071755084209144115], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.009307683445513248, -0.12093789130449295, -0.00029940891545265913, -1.2040065485052764e-05, -0.0005168771021999419, -0.20015156269073486, -0.0002903516869992018, -0.0006237468332983553, -0.007408881094306707], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.11177925765514374, -0.0004949536523781717, -0.07603435218334198, -1.8358061424805783e-05, -0.020819228142499924, -0.0400143638253212, -0.012690972536802292], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0015964870108291507, -0.002314033918082714, -0.19059565663337708, -0.0026712471153587103, -0.05486143007874489, -0.0035713245160877705, -0.0034617993514984846], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0019357530400156975, -0.24593743681907654, -0.8292838931083679, -0.013837830163538456, -0.02566985972225666, -0.0006414977833628654, -1.3947389561508317e-05, -0.10321550071239471, -0.014325043186545372], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.49407491087913513, -6.246371776796877e-05, -4.768258077092469e-05, -0.009812925942242146, -0.05131201446056366, -0.0017072877380996943, -0.0051924847066402435, -0.3539949953556061], "finish_reason": "stop"}], "metrics": {"energy": 131.36428116416928, "energy_per_token": 1.326911930951205, "time": 5.9022913, "time_per_token": 0.05961910404040404}}
{"outputs": [{"text": " pathlib.Path(source_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -2.1321005821228027, -0.3447355329990387, -0.02209744043648243, -0.11323598027229309], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " source_path.is_file():", "tokens": [" source", "_", "path", ".", "is", "_", "file", "():", "\n"], "logprobs": [-1.7712334394454956, -3.7431014789035544e-05, -3.8980677345534787e-05, -0.009943829849362373, -0.4798509478569031, -8.4638240878121e-06, -1.750321388244629, -0.2713702619075775, -0.0444549135863781], "finish_reason": "stop"}, {"text": " ValueError(\"Source path must exist and be a directory\")", "tokens": [" Value", "Error", "(", "\"", "Source", " path", " must", " exist", " and", " be", " a", " directory", "\"", ")", "\n"], "logprobs": [-0.011553286574780941, -3.361645576660521e-05, -0.34827250242233276, -0.850354790687561, -1.1467206478118896, -0.2390526533126831, -0.9145292639732361, -1.2520657777786255, -0.020989088341593742, -0.04668152704834938, -0.016713125631213188, -0.03737397864460945, -0.9588546752929688, -0.000813034363090992, -0.006048707291483879], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)  # Create parent directories if necessary", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "  ", "#", " Create", " parent", " directories", " if", " necessary", "\n"], "logprobs": [-0.005693410057574511, -6.437094270950183e-05, -0.00019405389321036637, -0.30078959465026855, -0.0014482972910627723, -0.0034121407661587, -0.0024201171472668648, -0.002430938882753253, -3.576278118089249e-07, -7.784063927829266e-05, -0.0004570631426759064, -0.0028449322562664747, -0.0031191289890557528, -2.9599599838256836, -0.0006870055221952498, -1.1151968240737915, -1.49648118019104, -0.17734166979789734, -0.2748570442199707, -2.3254036903381348, -0.19331905245780945], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.21049977838993073, -0.006800128147006035], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.009141850285232067, -0.1295364946126938, -0.0003725788265001029, -1.3112935448589269e-05, -0.000774798565544188, -0.17039690911769867, -0.00025876989820972085, -0.0007908792467787862, -0.007012754213064909], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10455085337162018, -0.0004354958946350962, -0.06412766128778458, -1.5020257706055418e-05, -0.02204158529639244, -0.04264345392584801, -0.013770107179880142], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018195039592683315, -0.0021064728498458862, -0.24843358993530273, -0.001945747178979218, -0.06362564861774445, -0.0039285640232264996, -0.003277052426710725], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018029639031738043, -0.21338559687137604, -0.6479595899581909, -0.0003215749457012862, -0.029374271631240845, -0.11995325237512589, -0.00030429501202888787, -0.23336422443389893, -0.0017354916781187057, -0.009526980109512806, -3.421248038648628e-05, -4.0411134250462055e-05, -0.4036783277988434, -0.04720121622085571, -0.0018917298875749111, -0.004461097996681929, -0.001998928841203451, -0.00987961981445551], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.4826952815055847, -4.637133679352701e-05, -4.851700214203447e-05, -0.009473606944084167, -0.055102214217185974, -0.001522811478935182, -0.004978759214282036, -0.33071428537368774], "finish_reason": "stop"}], "metrics": {"energy": 160.00464069747918, "energy_per_token": 1.3445768125838586, "time": 6.528418, "time_per_token": 0.054860655462184875}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " source_path.is_dir():", "tokens": [" source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-1.7712334394454956, -3.7431014789035544e-05, -3.8980677345534787e-05, -0.009943829849362373, -0.4798509478569031, -8.4638240878121e-06, -0.2092791199684143, -0.21904054284095764, -0.02131682261824608], "finish_reason": "stop"}, {"text": " ValueError(f\"{source_path} is not a valid directory path.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "source", "_", "path", "}", " is", " not", " a", " valid", " directory", " path", ".", "\"", ")", "\n"], "logprobs": [-0.011553286574780941, -3.361645576660521e-05, -0.34827250242233276, -0.7303978204727173, -0.43865445256233215, -1.0279393196105957, -0.022251345217227936, -0.00026663561584427953, -0.0003319427778478712, -0.18557874858379364, -0.4365554451942444, -0.04505234584212303, -0.18772493302822113, -1.0025832653045654, -0.38213303685188293, -2.2224745750427246, -0.8127462863922119, -0.04046918824315071, -0.001050516264513135, -0.0051429118029773235], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.004982673563063145, -6.16293036728166e-05, -0.00023326536756940186, -0.2854372560977936, -0.0015797051601111889, -0.0030166853684931993, -0.0024639980401843786, -0.0026496085338294506, -3.576278118089249e-07, -8.439661905867979e-05, -0.00042298430344089866, -0.0026515109930187464, -0.0035738188307732344, -0.05431601032614708], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.24224495887756348, -0.005150027573108673], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.007242496125400066, -0.1307448297739029, -0.00040356122190132737, -1.1086402082582936e-05, -0.0006731866160407662, -0.165473073720932, -0.0002431573811918497, -0.000681883015204221, -0.007136923260986805], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10454601794481277, -0.0004111875023227185, -0.08399458229541779, -1.1801649634435307e-05, -0.024688635021448135, -0.04095401242375374, -0.012568432837724686], "finish_reason": "stop"}, {"text": "append(str(entry.relative_to(source_path).with_name(entry.name)))", "tokens": ["append", "(", "str", "(", "entry", ".", "relative", "_", "to", "(", "source", "_", "path", ")", ".", "with", "_", "name", "(", "entry", ".", "name", ")))", "\n"], "logprobs": [-0.0018093895632773638, -0.002726529957726598, -1.8046927452087402, -0.0015955348499119282, -0.03786489740014076, -0.043287746608257294, -0.6834658980369568, -8.880697714630514e-05, -0.00035494225448928773, -0.0007702721050009131, -0.019275611266493797, -0.00020859450160060078, -5.5549986427649856e-05, -3.0492165088653564, -0.004594840109348297, -1.4045625925064087, -5.185469490243122e-05, -1.710343360900879, -0.08629988133907318, -0.4951305389404297, -0.0006576997111551464, -0.06436902284622192, -0.04374656081199646, -0.007139763794839382], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0017867805436253548, -0.24927419424057007, -0.7100063562393188, -0.0003389737685211003, -0.022827347740530968, -0.09749270975589752, -0.00030429501202888787, -0.1877744346857071, -0.0016827721847221255, -0.010294906795024872, -3.9934315282152966e-05, -2.3364747903542593e-05, -0.42151939868927, -0.06258905678987503, -0.002100881887599826, -0.004407691303640604, -0.00219818577170372, -0.008397389203310013], "finish_reason": "stop"}, {"text": " (source_path.name, results)", "tokens": [" (", "source", "_", "path", ".", "name", ",", " results", ")", "\n"], "logprobs": [-1.0719248056411743, -0.49038976430892944, -8.439661905867979e-05, -2.682172998902388e-05, -0.02968156337738037, -0.039845872670412064, -0.0014940063701942563, -0.005384466610848904, -0.38563042879104614, -0.20826219022274017], "finish_reason": "stop"}], "metrics": {"energy": 160.116581993103, "energy_per_token": 1.1773278087728163, "time": 7.1600904, "time_per_token": 0.052647723529411765}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(\"The source directory must exist and must be a valid directory\")", "tokens": [" Value", "Error", "(", "\"", "The", " source", " directory", " must", " exist", " and", " must", " be", " a", " valid", " directory", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.8028910160064697, -0.4289771318435669, -1.5371071100234985, -1.5605385303497314, -0.041845791041851044, -0.06488440930843353, -2.294337034225464, -0.012730168178677559, -0.47301021218299866, -2.3337299823760986, -0.15802553296089172, -1.6792607307434082, -0.005448491778224707, -0.005150620825588703], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.0048712859861552715, -6.186770770000294e-05, -0.0002544794406276196, -0.3375623822212219, -0.00144091690890491, -0.003738558851182461, -0.0023840833455324173, -0.002433198504149914, -4.768370445162873e-07, -0.00010144196130568162, -0.0004371640970930457, -0.002495629247277975, -0.002316293539479375, -0.038518354296684265], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22783471643924713, -0.005628570448607206], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.008467367850244045, -0.15363378822803497, -0.0004042761866003275, -1.07287787614041e-05, -0.0007068996201269329, -0.18079116940498352, -0.0002485204895492643, -0.0006859333370812237, -0.0069485921412706375], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10815484076738358, -0.0005098473629914224, -0.05522190406918526, -1.3470558769768104e-05, -0.020446715876460075, -0.04817128926515579, -0.01280514057725668], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018305702833458781, -0.0024133387487381697, -0.2932835519313812, -0.0030515079852193594, -0.051486626267433167, -0.004705308936536312, -0.0032059960067272186], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.002037117723375559, -0.1824055314064026, -0.8665981292724609, -0.00035506143467500806, -0.026083985343575478, -0.09463655203580856, -0.000324673397699371, -0.23120224475860596, -0.001580181298777461, -0.010492753237485886, -3.4927710657939315e-05, -2.13382354559144e-05, -0.4128839671611786, -0.059407103806734085, -0.0022639615926891565, -0.004241281189024448, -0.002460430609062314, -0.008526705205440521], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5413415431976318, -5.006664650863968e-05, -5.7338023907504976e-05, -0.010737147182226181, -0.05308479443192482, -0.0014642480527982116, -0.005758719053119421, -0.4172292947769165], "finish_reason": "stop"}], "metrics": {"energy": 141.76466892623898, "energy_per_token": 1.2545545922676016, "time": 6.3076525, "time_per_token": 0.05581993362831858}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(\"The source directory does not exist or is not accessible\")", "tokens": [" Value", "Error", "(", "\"", "The", " source", " directory", " does", " not", " exist", " or", " is", " not", " accessible", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.8028910160064697, -0.4289771318435669, -1.5371071100234985, -0.736823320388794, -0.0012269833823665977, -0.012327195145189762, -0.295300155878067, -0.06767886132001877, -0.08724817633628845, -1.1397002935409546, -1.5557231903076172, -0.0024723222013562918, -0.006772540044039488], "finish_reason": "stop"}, {"text": "mkdir(exist_ok=True, parents=True)", "tokens": ["mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n"], "logprobs": [-0.0048712859861552715, -6.186770770000294e-05, -0.0002544794406276196, -1.2891252040863037, -0.0002026352594839409, -2.0146166207268834e-05, -0.0022356535773724318, -0.0022060361225157976, -0.09173828363418579, -0.006815401837229729, -0.0001627074379939586, -0.004717885982245207, -0.016491880640387535, -0.033249758183956146], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22505679726600647, -0.005954266060143709], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.008448455482721329, -0.13934046030044556, -0.00043644916149787605, -1.4543427823809907e-05, -0.0007130940794013441, -0.17998504638671875, -0.0003502947511151433, -0.0005938435206189752, -0.007932824082672596], "finish_reason": "stop"}, {"text": " not entry.is_file():", "tokens": [" not", " entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-2.445986270904541, -0.0741991177201271, -0.0001287377526750788, -0.06032096967101097, -5.722029527532868e-06, -0.3285695016384125, -0.02276349440217018, -0.040031202137470245], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018509175861254334, -0.002959041390568018, -0.228460431098938, -0.00306160980835557, -0.04926048591732979, -0.0032245328184217215, -0.0028431490063667297], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", "))", "\n"], "logprobs": [-0.002298810286447406, -0.2518708407878876, -0.6013591289520264, -0.00039033422945067286, -0.0331726111471653, -0.08889081329107285, -0.00034850722295232117, -0.17721296846866608, -0.0014615101972594857, -0.011266658082604408, -3.659658250398934e-05, -2.5629668016335927e-05, -1.6372212171554565, -0.006878625135868788], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results"], "logprobs": [-0.5396558046340942, -6.878139538457617e-05, -5.9602869441732764e-05, -0.011897791177034378, -0.061319105327129364, -0.0016131495358422399, -0.0054356870241463184], "finish_reason": "stop"}], "metrics": {"energy": 137.4473887844086, "energy_per_token": 1.2609852182055834, "time": 6.1006136, "time_per_token": 0.05596893211009174}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(f'Invalid path {source_path}')", "tokens": [" Value", "Error", "(", "f", "'", "Invalid", " path", " {", "source", "_", "path", "}", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -1.211207628250122, -2.8487422466278076, -2.753082275390625, -2.0314478874206543, -0.020031066611409187, -0.00021419614495243877, -0.00012420836719684303, -0.17870111763477325, -0.3953722417354584, -0.0038671724032610655], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -0.08734627813100815, -0.00029738296871073544, -0.21210114657878876, -0.0018695986364036798, -0.011861507780849934, -3.576214658096433e-05, -2.3245540432981215e-05, -0.37281492352485657, -0.057823970913887024, -0.0017229963559657335, -0.004068788141012192, -0.0023117740638554096, -0.008725965395569801], "finish_reason": "stop"}, {"text": " source_path.stem, results", "tokens": [" source", "_", "path", ".", "stem", ",", " results"], "logprobs": [-0.47301027178764343, -5.304672595229931e-05, -6.174850568640977e-05, -0.01182475220412016, -2.9662232398986816, -0.002115513663738966, -0.0044130319729447365], "finish_reason": "stop"}], "metrics": {"energy": 190.46371976470954, "energy_per_token": 1.6419286186612891, "time": 6.522133, "time_per_token": 0.056225284482758625}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists() or not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "exists", "()", " or", " not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.7281315326690674, -0.006241354160010815, -0.04304136335849762, -0.028582286089658737, -8.999896090244874e-05, -1.9073468138230965e-06, -3.659658250398934e-05, -0.00038378025055862963, -1.168244216387393e-05, -0.003224770538508892, -0.0058877840638160706, -0.004635422024875879], "finish_reason": "stop"}, {"text": " ValueError(\"Source path does not exist or is not a directory.\")", "tokens": [" Value", "Error", "(", "\"", "Source", " path", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.061065912246704, -0.260315477848053, -1.00023353099823, -0.0005317704635672271, -0.014816482551395893, -0.028808284550905228, -0.02808632329106331, -0.003084308933466673, -0.014135710895061493, -0.026295337826013565, -0.5292767286300659, -0.008449755609035492, -0.0008923601126298308, -0.003411190351471305], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.0048712859861552715, -6.186770770000294e-05, -0.0002544794406276196, -0.3375623822212219, -0.00144091690890491, -0.003738558851182461, -0.0023840833455324173, -0.002433198504149914, -4.768370445162873e-07, -0.00010144196130568162, -0.0004371640970930457, -0.002495629247277975, -0.002316293539479375, -0.038518354296684265], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22783471643924713, -0.005628570448607206], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.008467367850244045, -0.15363378822803497, -0.0004042761866003275, -1.07287787614041e-05, -0.0007068996201269329, -0.18079116940498352, -0.0002485204895492643, -0.0006859333370812237, -0.0069485921412706375], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10815484076738358, -0.0005098473629914224, -0.05522190406918526, -1.3470558769768104e-05, -0.020446715876460075, -0.04817128926515579, -0.01280514057725668], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0018305702833458781, -0.0024133387487381697, -0.2932835519313812, -0.0030515079852193594, -0.051486626267433167, -0.004705308936536312, -0.0032059960067272186], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.002037117723375559, -0.1824055314064026, -0.8665981292724609, -0.00035506143467500806, -0.026083985343575478, -0.09463655203580856, -0.000324673397699371, -0.23120224475860596, -0.001580181298777461, -0.010492753237485886, -3.4927710657939315e-05, -2.13382354559144e-05, -0.4128839671611786, -0.059407103806734085, -0.0022639615926891565, -0.004241281189024448, -0.002460430609062314, -0.008526705205440521], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5413415431976318, -5.006664650863968e-05, -5.7338023907504976e-05, -0.010737147182226181, -0.05308479443192482, -0.0014642480527982116, -0.005758719053119421, -0.4172292947769165], "finish_reason": "stop"}], "metrics": {"energy": 164.58416531753534, "energy_per_token": 1.3601997133680606, "time": 6.752621, "time_per_token": 0.055806785123966945}}
{"outputs": [{"text": " pathlib.Path(source_path).expanduser().resolve()", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", ".", "expand", "user", "()", ".", "resolve", "()", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -2.1321005821228027, -1.8330587148666382, -0.0038872407749295235, -0.002291911980137229, -0.41508740186691284, -0.11733873933553696, -0.012110749259591103, -0.11608320474624634], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(f'Source path does not exist or is not a directory: {source_path.resolve()}')", "tokens": [" Value", "Error", "(", "f", "'", "Source", " path", " does", " not", " exist", " or", " is", " not", " a", " directory", ":", " {", "source", "_", "path", ".", "resolve", "()}", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -1.211207628250122, -1.6155898571014404, -0.41798320412635803, -2.362905979156494, -0.0018237876938655972, -0.022441362962126732, -0.12802784144878387, -0.029649509117007256, -0.0058202315121889114, -0.03128315880894661, -0.02360457554459572, -0.08221442997455597, -0.07481876015663147, -0.023349914699792862, -0.00019905969384126365, -6.365573790390044e-05, -3.054966688156128, -0.4873504638671875, -0.0800340548157692, -0.0397350937128067, -0.002096956130117178], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -0.08734627813100815, -0.00029738296871073544, -0.21210114657878876, -0.0018695986364036798, -0.011861507780849934, -3.576214658096433e-05, -2.3245540432981215e-05, -0.37281492352485657, -0.057823970913887024, -0.0017229963559657335, -0.004068788141012192, -0.0023117740638554096, -0.008725965395569801], "finish_reason": "stop"}, {"text": " (source_path.name, results)", "tokens": [" (", "source", "_", "path", ".", "name", ",", " results", ")", "\n"], "logprobs": [-1.3071930408477783, -0.5067235827445984, -7.021180499577895e-05, -2.3483953555114567e-05, -0.028714114800095558, -0.044497787952423096, -0.0013518728082999587, -0.004973658360540867, -0.35946154594421387, -0.22927230596542358], "finish_reason": "stop"}], "metrics": {"energy": 191.50199320793158, "energy_per_token": 1.507889710298674, "time": 6.9441986, "time_per_token": 0.05467872913385827}}
{"outputs": [{"text": " str(source_path)", "tokens": [" str", "(", "source", "_", "path", ")", "\n"], "logprobs": [-2.4711389541625977, -0.003650312777608633, -0.2764209806919098, -8.749579137656838e-05, -1.7165990357170813e-05, -0.013460002839565277, -0.049790408462285995], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f\"Source path '{source_path}' does not exist or is not a directory.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Source", " path", " '", "{", "source", "_", "path", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.5768394470214844, -0.40928876399993896, -1.1366183757781982, -0.0007033258443698287, -0.007266165688633919, -8.868777513271198e-05, -5.352353764465079e-05, -0.036280713975429535, -0.35928744077682495, -0.0009414292871952057, -0.011606430634856224, -0.044853582978248596, -0.027795005589723587, -0.003150026546791196, -0.019328581169247627, -0.04116590693593025, -0.3847871720790863, -0.007148049306124449, -0.0005135409301146865, -0.0021956877317279577], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.glob('*'):", "tokens": [" in", " source", "_", "path", ".", "glob", "('", "*", "')", ":", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -2.921633720397949, -0.3195987939834595, -0.5285850763320923, -0.1162121593952179, -0.0003526780928950757, -0.013705906458199024], "finish_reason": "stop"}, {"text": " not entry.is_file():", "tokens": [" not", " entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-2.487421751022339, -0.0726393610239029, -0.0001456631434848532, -0.049343664199113846, -9.179073458653875e-06, -0.2561212182044983, -0.019722197204828262, -0.03433942794799805], "finish_reason": "stop"}, {"text": "append(str(entry.relative_to(source_path)))", "tokens": ["append", "(", "str", "(", "entry", ".", "relative", "_", "to", "(", "source", "_", "path", ")))", "\n"], "logprobs": [-0.0016195764765143394, -0.002539031207561493, -1.7504446506500244, -0.002177488524466753, -0.04022233560681343, -0.047293659299612045, -0.7365046739578247, -8.34430247778073e-05, -0.0004328744253143668, -0.0006870055221952498, -0.01710730418562889, -0.00023445718397852033, -6.01988795096986e-05, -0.22034652531147003, -0.013295445591211319], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0018473479431122541, -0.25805509090423584, -0.8473643660545349, -0.00030763185350224376, -0.028084006160497665, -0.07372073829174042, -0.0003219324571546167, -0.2014920711517334, -0.0018456820398569107, -0.011657568626105785, -3.683499380713329e-05, -2.777537883957848e-05, -0.40636059641838074, -0.058868657797575, -0.0028974716551601887, -0.004006099421530962, -0.001966092037037015, -0.008232705295085907], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5593725442886353, -4.5536911784438416e-05, -5.757642793469131e-05, -0.009706207551062107, -0.07015763223171234, -0.0016963391099125147, -0.0050934553146362305, -0.40070289373397827], "finish_reason": "stop"}], "metrics": {"energy": 194.6572928371429, "energy_per_token": 1.485933533107961, "time": 7.147565, "time_per_token": 0.05456156488549618}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError('source_path must be an existing, accessible directory.')", "tokens": [" Value", "Error", "('", "source", "_", "path", " must", " be", " an", " existing", ",", " accessible", " directory", ".", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -1.3027936220169067, -1.3130544424057007, -0.05689689517021179, -0.009679644368588924, -0.8720530867576599, -0.23950046300888062, -0.4272003173828125, -0.03306639567017555, -0.2653808891773224, -0.018529532477259636, -0.008599275723099709, -1.685929775238037, -0.011142883449792862, -0.002093268558382988], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.005453471094369888, -6.83045873302035e-05, -0.00020680672605521977, -0.29484301805496216, -0.001453653909265995, -0.0036404544953256845, -0.002273238729685545, -0.0025233353953808546, -2.3841855067985307e-07, -8.368142152903602e-05, -0.000446696620201692, -0.0030844276770949364, -0.0024703005328774452, -0.04740769788622856], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.24103295803070068, -0.0071755084209144115], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.009307683445513248, -0.12093789130449295, -0.00029940891545265913, -1.2040065485052764e-05, -0.0005168771021999419, -0.20015156269073486, -0.0002903516869992018, -0.0006237468332983553, -0.007408881094306707], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.11177925765514374, -0.0004949536523781717, -0.07603435218334198, -1.8358061424805783e-05, -0.020819228142499924, -0.0400143638253212, -0.012690972536802292], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0015964870108291507, -0.002314033918082714, -0.19059565663337708, -0.0026712471153587103, -0.05486143007874489, -0.0035713245160877705, -0.0034617993514984846], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.0019357530400156975, -0.24593743681907654, -0.6602393984794617, -0.00025733973598107696, -0.022330738604068756, -0.105072021484375, -0.0002964295563288033, -0.1881197839975357, -0.002092554699629545, -0.011566601693630219, -4.1126360883936286e-05, -2.5033637939486653e-05, -0.4008764922618866, -0.06039021536707878, -0.001556019764393568, -0.004340869374573231, -0.001990719698369503, -0.008916798047721386], "finish_reason": "stop"}, {"text": " str(source_path.name), results", "tokens": [" str", "(", "source", "_", "path", ".", "name", ")", ",", " results", "\n"], "logprobs": [-2.789888620376587, -0.0008722314960323274, -0.009580113925039768, -0.00010477947944309562, -1.3708974620385561e-05, -0.12097475677728653, -0.07597634941339493, -0.001122083282098174, -0.001192573574371636, -0.006782722659409046, -0.2695302963256836], "finish_reason": "stop"}], "metrics": {"energy": 149.70334817790987, "energy_per_token": 1.279515796392392, "time": 6.7404885, "time_per_token": 0.05761101282051282}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(f\"Source directory {source_path.resolve()} does not exist.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Source", " directory", " {", "source", "_", "path", ".", "resolve", "()}", " does", " not", " exist", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -0.47512751817703247, -1.5768394470214844, -1.5297530889511108, -0.8597639799118042, -0.008530487306416035, -0.00017307691450696439, -8.821098163025454e-05, -2.5218777656555176, -0.8511894941329956, -0.06413783878087997, -0.24659086763858795, -0.002754824236035347, -0.021260922774672508, -1.793453335762024, -0.03710522502660751, -0.00125698687043041, -0.0033079448621720076], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.rglob('*.txt'):", "tokens": [" in", " source", "_", "path", ".", "rg", "lob", "('", "*", ".", "txt", "')", ":", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -2.063849449157715, -0.0011116046225652099, -0.8455129861831665, -0.027628730982542038, -1.221253514289856, -1.4523957967758179, -0.002253494691103697, -0.0013709203340113163, -0.04037908464670181], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy(str(entry), str(destination_path / entry.name))", "tokens": ["copy", "(", "str", "(", "entry", ")", ",", " str", "(", "destination", "_", "path", " /", " entry", ".", "name", "))", "\n"], "logprobs": [-0.001955146435648203, -0.21743768453598022, -0.7193710803985596, -0.00039009589818306267, -0.026728123426437378, -0.08734627813100815, -0.00029738296871073544, -0.21210114657878876, -0.0018695986364036798, -0.011861507780849934, -3.576214658096433e-05, -2.3245540432981215e-05, -0.37281492352485657, -0.057823970913887024, -0.0017229963559657335, -0.004068788141012192, -0.0023117740638554096, -0.008725965395569801], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.47301027178764343, -5.304672595229931e-05, -6.174850568640977e-05, -0.01182475220412016, -0.05926757678389549, -0.0012762743281200528, -0.0051290360279381275, -0.3943273425102234], "finish_reason": "stop"}], "metrics": {"energy": 156.07405956363675, "energy_per_token": 1.2792955701937438, "time": 6.747731, "time_per_token": 0.05530927049180328}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path)", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.802543044090271], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(\"Source path must exist and be a directory\")", "tokens": [" Value", "Error", "(", "\"", "Source", " path", " must", " exist", " and", " be", " a", " directory", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.061065912246704, -0.260315477848053, -0.888081431388855, -1.2387932538986206, -0.018262455239892006, -0.0431525744497776, -0.016250766813755035, -0.03387800231575966, -1.0080761909484863, -0.0008858094224706292, -0.005266957450658083], "finish_reason": "stop"}, {"text": "mkdir(exist_ok=True, parents=True)", "tokens": ["mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n"], "logprobs": [-0.0048712859861552715, -6.186770770000294e-05, -0.0002544794406276196, -1.2891252040863037, -0.0002026352594839409, -2.0146166207268834e-05, -0.0022356535773724318, -0.0022060361225157976, -0.09173828363418579, -0.006815401837229729, -0.0001627074379939586, -0.004717885982245207, -0.016491880640387535, -0.033249758183956146], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22505679726600647, -0.005954266060143709], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.008448455482721329, -0.13934046030044556, -0.00043644916149787605, -1.4543427823809907e-05, -0.0007130940794013441, -0.17998504638671875, -0.0003502947511151433, -0.0005938435206189752, -0.007932824082672596], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10443928092718124, -0.0004805363714694977, -0.07512788474559784, -1.3828182090946939e-05, -0.027964496985077858, -0.05437246337532997, -0.013202039524912834], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.0016079128254204988, -0.0024729168508201838, -0.2128625363111496, -0.0025843337643891573, -0.0452401302754879, -0.005099504254758358, -0.0035733438562601805], "finish_reason": "stop"}, {"text": "copy2(entry, destination_path)", "tokens": ["copy", "2", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0025531810242682695, -1.8505409955978394, -0.003080387134104967, -0.7077314257621765, -0.01276630163192749, -0.02449532225728035, -0.0005789510905742645, -1.3708974620385561e-05, -0.0728176012635231, -0.02558782882988453], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results"], "logprobs": [-0.5090879797935486, -4.911301948595792e-05, -6.985420623095706e-05, -0.012257602997124195, -0.04915301501750946, -0.001292585046030581, -0.004892283584922552], "finish_reason": "stop"}], "metrics": {"energy": 134.1687701911926, "energy_per_token": 1.3284036652593327, "time": 5.8961105, "time_per_token": 0.05837733168316832}}
{"outputs": [{"text": " pathlib.Path(source_path)", "tokens": [" path", "lib", ".", "Path", "(", "source", "_", "path", ")", "\n"], "logprobs": [-0.1743403673171997, -0.0007279845303855836, -0.00010764019680209458, -0.014192597009241581, -0.0044061485677957535, -0.0047602420672774315, -4.9828242481453344e-05, -1.9192511899746023e-05, -0.001959072658792138, -0.14801931381225586], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.exists():", "tokens": [" not", " source", "_", "path", ".", "exists", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.700485110282898, -0.664923906326294, -0.0147252157330513], "finish_reason": "stop"}, {"text": " ValueError(\"The source path must be an existing, accessible directory.\")", "tokens": [" Value", "Error", "(", "\"", "The", " source", " path", " must", " be", " an", " existing", ",", " accessible", " directory", ".", "\"", ")", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.8969539999961853, -1.8028910160064697, -0.4289771318435669, -0.5558658838272095, -0.7603887915611267, -0.4538826048374176, -0.44580113887786865, -0.025647319853305817, -0.44397225975990295, -0.020824598148465157, -0.007855593226850033, -0.2371726930141449, -0.007025775499641895, -0.0011376821203157306, -0.0037873697001487017], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.0048712859861552715, -6.186770770000294e-05, -0.0002544794406276196, -0.3375623822212219, -0.00144091690890491, -0.003738558851182461, -0.0023840833455324173, -0.002433198504149914, -4.768370445162873e-07, -0.00010144196130568162, -0.0004371640970930457, -0.002495629247277975, -0.002316293539479375, -0.038518354296684265], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.22783471643924713, -0.005628570448607206], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.008467367850244045, -0.15363378822803497, -0.0004042761866003275, -1.07287787614041e-05, -0.0007068996201269329, -0.18079116940498352, -0.0002485204895492643, -0.0006859333370812237, -0.0069485921412706375], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10815484076738358, -0.0005098473629914224, -0.05522190406918526, -1.3470558769768104e-05, -0.020446715876460075, -0.04817128926515579, -0.01280514057725668], "finish_reason": "stop"}, {"text": "append(str(entry.name))", "tokens": ["append", "(", "str", "(", "entry", ".", "name", "))", "\n"], "logprobs": [-0.0018305702833458781, -0.0024133387487381697, -1.6012402772903442, -0.0018171241972595453, -0.04601380228996277, -0.0617571696639061, -0.8258142471313477, -0.00248873233795166, -0.005504688248038292], "finish_reason": "stop"}, {"text": "copy(entry, destination_path)", "tokens": ["copy", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.0021944984328001738, -0.24588578939437866, -0.8114192485809326, -0.012229223735630512, -0.023211786523461342, -0.00041559641249477863, -1.7046782886609435e-05, -0.10130015760660172, -0.013982314616441727], "finish_reason": "stop"}, {"text": " (source_path.name, results)", "tokens": [" (", "source", "_", "path", ".", "name", ",", " results", ")", "\n"], "logprobs": [-1.2599868774414062, -0.46969982981681824, -5.2927523938706145e-05, -2.6464111215318553e-05, -0.02767372317612171, -0.04690369963645935, -0.0015036477707326412, -0.005037354305386543, -0.4172649681568146, -0.18918786942958832], "finish_reason": "stop"}], "metrics": {"energy": 191.01409260940545, "energy_per_token": 1.7524228679761968, "time": 6.5302114, "time_per_token": 0.05991019633027523}}
{"outputs": [{"text": " str(source_path)", "tokens": [" str", "(", "source", "_", "path", ")", "\n"], "logprobs": [-2.4711389541625977, -0.003650312777608633, -0.2764209806919098, -8.749579137656838e-05, -1.7165990357170813e-05, -0.013460002839565277, -0.049790408462285995], "finish_reason": "stop"}, {"text": " pathlib.Path(destination_path).resolve()", "tokens": [" path", "lib", ".", "Path", "(", "destination", "_", "path", ")", ".", "resolve", "()", "\n"], "logprobs": [-0.00668006157502532, -1.585470999998506e-05, -3.790783375734463e-05, -0.0008226824575103819, -0.0004522969538811594, -0.003122813068330288, -1.7404405298293568e-05, -1.2516897186287679e-05, -0.00028463127091526985, -0.6024602651596069, -0.0156615749001503, -0.0004629017203114927, -0.07132339477539062], "finish_reason": "stop"}, {"text": " not source_path.is_dir():", "tokens": [" not", " source", "_", "path", ".", "is", "_", "dir", "():", "\n"], "logprobs": [-0.20341388881206512, -0.04604647308588028, -3.4450891689630225e-05, -3.0040289857424796e-05, -0.000942977552767843, -0.6876429319381714, -3.1709168979432434e-05, -0.004841153509914875, -0.018197255209088326, -0.009059041738510132], "finish_reason": "stop"}, {"text": " ValueError(f'The given source directory {source_path} does not exist!')", "tokens": [" Value", "Error", "(", "f", "'", "The", " given", " source", " directory", " {", "source", "_", "path", "}", " does", " not", " exist", "!", "')", "\n"], "logprobs": [-0.009509622119367123, -3.397406908334233e-05, -0.3349667489528656, -0.6692413687705994, -1.211207628250122, -1.5543372631072998, -3.5154550075531006, -0.488600492477417, -1.8395791053771973, -1.3115606307983398, -0.009281227365136147, -0.0002602000313345343, -5.578839045483619e-05, -0.09022221714258194, -0.2191043198108673, -0.007731867954134941, -0.03609975054860115, -2.810424327850342, -0.04017652943730354, -0.0022712168283760548], "finish_reason": "stop"}, {"text": "mkdir(parents=True, exist_ok=True)", "tokens": ["mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n"], "logprobs": [-0.00502750976011157, -5.209310256759636e-05, -0.00018094333063345402, -0.2830970883369446, -0.0014421073719859123, -0.00313564739190042, -0.002557461615651846, -0.0022393406834453344, -2.3841855067985307e-07, -7.86750388215296e-05, -0.00037424711626954377, -0.00265852571465075, -0.002666966989636421, -0.058763451874256134], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.23813791573047638, -0.005987090524286032], "finish_reason": "stop"}, {"text": " in source_path.iterdir():", "tokens": [" in", " source", "_", "path", ".", "iter", "dir", "():", "\n"], "logprobs": [-0.00847966130822897, -0.12094465643167496, -0.00037353215157054365, -1.1444026313256472e-05, -0.0005470209871418774, -0.20306308567523956, -0.0002858230145648122, -0.0006842655711807311, -0.007909052073955536], "finish_reason": "stop"}, {"text": " entry.is_file():", "tokens": [" entry", ".", "is", "_", "file", "():", "\n"], "logprobs": [-0.10173677653074265, -0.0004593271005433053, -0.0617077462375164, -1.3470558769768104e-05, -0.020033637061715126, -0.03957434371113777, -0.01577458344399929], "finish_reason": "stop"}, {"text": "append(entry.name)", "tokens": ["append", "(", "entry", ".", "name", ")", "\n"], "logprobs": [-0.001693839905783534, -0.002416787436231971, -0.21394966542720795, -0.002227089600637555, -0.05828583613038063, -0.0038970967289060354, -0.0031456295400857925], "finish_reason": "stop"}, {"text": "copy2(entry, destination_path)", "tokens": ["copy", "2", "(", "entry", ",", " destination", "_", "path", ")", "\n"], "logprobs": [-0.001955146435648203, -1.9395809173583984, -0.00231879111379385, -0.6840840578079224, -0.015499843284487724, -0.02399849146604538, -0.0006043276516720653, -1.645074735279195e-05, -0.09274564683437347, -0.025430601090192795], "finish_reason": "stop"}, {"text": " source_path.name, results", "tokens": [" source", "_", "path", ".", "name", ",", " results", "\n"], "logprobs": [-0.5089179277420044, -5.376194530981593e-05, -5.936446541454643e-05, -0.01052873209118843, -0.05238818749785423, -0.0015774437924847007, -0.004855982959270477, -0.36696693301200867], "finish_reason": "stop"}], "metrics": {"energy": 145.85833956146237, "energy_per_token": 1.363162051976284, "time": 6.5203147, "time_per_token": 0.060937520560747666}}
