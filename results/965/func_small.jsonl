{"outputs": [{"text": "if not os.path.exists(source_directory):\n        return 0\n    if not os.path.isdir(source_directory):\n        return 0\n\n    file_counter = 0\n    for filename in os.listdir(source_directory):\n        match = re.search(pattern, filename)\n        if match:\n            full_path = os.path.join(source_directory, filename)\n            target = os.path.join(target_directory, match[0] + '.txt')\n            try:\n                shutil.move(full_path, target)\n                file_counter += 1\n            except:\n                pass\n    return file_counter", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "file", "_", "counter", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "target", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " match", "[", "0", "]", " +", " '", ".", "txt", "')", "\n", "            ", "try", ":", "\n", "                ", "sh", "util", ".", "move", "(", "full", "_", "path", ",", " target", ")", "\n", "                ", "file", "_", "counter", " +=", " ", "1", "\n", "            ", "except", ":", "\n", "                ", "pass", "\n", "    ", "return", " file", "_", "counter"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -0.24824480712413788, -0.019514478743076324, -0.000724887300748378, -0.30794304609298706, -0.003909802529960871, -8.940297266235575e-05, -0.012510395608842373, -0.7222228646278381, -0.3650386929512024, -0.03209228813648224, -0.012208497151732445, -0.0007775382255204022, -0.00021205084340181202, -0.008127118460834026, -0.003109622048214078, -0.000902007392141968, -6.472854875028133e-05, -0.0018087946809828281, -4.672895011026412e-05, -3.135155202471651e-05, -0.0013987767742946744, -0.003092746715992689, -0.00028451209072954953, -0.055379707366228104, -0.0016087458934634924, -0.00029225845355540514, -0.0008650851668789983, -0.8044101595878601, -0.00021252757869660854, -2.5838239192962646, -0.014343728311359882, -3.1046369075775146, -0.036968983709812164, -0.0048933508805930614, -0.004287931136786938, -0.021468747407197952, -0.4231601655483246, -0.517069399356842, -0.9257655143737793, -0.0020842275116592646, -0.01510984543710947, -4.172238186583854e-05, -0.0006250573205761611, -8.34461570775602e-06, -0.00030286493711173534, -0.0010671879863366485, -3.516612196108326e-05, -6.6756979322235566e-06, -0.00029225845355540514, -0.004077930003404617, -0.003984964452683926, -0.5810060501098633, -0.06599506735801697, -0.005002007819712162, -1.6212332411669195e-05, -0.5462455153465271, -0.00023731753753963858, -0.00506178755313158, -0.0021621440537273884, -0.007500700186938047, -0.013255449011921883, -0.0041859629563987255, -0.023357251659035683, -0.008260371163487434, -0.03100629337131977, -0.13974450528621674, -0.007757536601275206, -0.0005364171229302883, -2.4996814727783203, -0.05891945958137512, -0.3103007376194, -0.02544419839978218, -0.01717034913599491, -1.8000440832111053e-05, -2.7179348762729205e-05, -0.0014881737297400832, -0.0006565084331668913, -8.642300235806033e-05, -0.005481570027768612, -4.100715523236431e-05, -9.894321920000948e-06, -0.0001147919538198039, -0.008614284917712212, -5.519237674889155e-05, -0.0014525825390592217, -0.006504672579467297, -1.9433653354644775, -2.147486448287964, -0.05505257099866867, -0.0001431601122021675, -6.997340824455023e-05, -0.0005410637822933495, -0.002070189919322729, -0.00018320789968129247, -0.015469325706362724, -1.585470999998506e-05, -2.6225699912174605e-05, -0.0004161922261118889, -0.43955743312835693, -2.4198150634765625, -0.0013911579735577106, -1.4122036695480347, -0.04300950467586517, -0.45416879653930664, -0.006535228807479143, -0.053077332675457, -0.0017958242679014802, -0.00751253217458725, -0.03264303877949715, -1.909454107284546, -0.00014935807848814875, -0.0021510813385248184, -0.0003812778159044683, -0.18571023643016815, -4.172238186583854e-05, -1.9073468138230965e-06, -0.04154770448803902, -3.0040289857424796e-05, -0.001319729257375002, -7.271740287251305e-06, -8.344646857949556e-07, -8.332382276421413e-05, -0.0017327546374872327, -0.004655237775295973, -0.014348546043038368, -0.08073322474956512, -0.12455972284078598, -1.156323378381785e-05, -5.090107151772827e-05, -0.002983882324770093, -0.0012880609137937427, -1.0371154530730564e-05, -0.0010760000441223383, -0.05390471965074539, -0.001327824778854847, -1.3340011835098267, -0.0478440560400486, -0.000671042304020375, -0.6350775361061096, -0.027804512530565262, -0.6930425763130188, -0.03434714302420616, -0.0013062763027846813, -7.748573807475623e-06, -3.0874729418428615e-05], "finish_reason": "stop"}], "metrics": {"energy": 174.2579780273437, "energy_per_token": 1.1170383206881007, "time": 6.740326, "time_per_token": 0.043207217948717944}}
{"outputs": [{"text": "if os.path.isdir(source_directory):\n        files_to_move = []\n        for file_name in os.listdir(source_directory):\n            if re.search(pattern, file_name):\n                file_path = os.path.join(source_directory, file_name)\n                files_to_move.append(file_path)\n\n        if files_to_move:\n            for file_path in files_to_move:\n                shutil.move(file_path, target_directory)\n            return len(files_to_move)\n\n    return 0", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "files", "_", "to", "_", "move", " =", " []", "\n", "        ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "            ", "if", " re", ".", "search", "(", "pattern", ",", " file", "_", "name", "):", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "                ", "files", "_", "to", "_", "move", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "        ", "if", " files", "_", "to", "_", "move", ":", "\n", "            ", "for", " file", "_", "path", " in", " files", "_", "to", "_", "move", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "directory", ")", "\n", "            ", "return", " len", "(", "files", "_", "to", "_", "move", ")", "\n", "\n", "    ", "return", " ", "0", "\n", "\n", "#"], "logprobs": [-1.08534574508667, -2.7540619373321533, -4.23184028477408e-05, -0.011774329468607903, -0.018107933923602104, -0.47367584705352783, -0.07310784608125687, -0.00042429505265317857, -0.020709823817014694, -7.784063927829266e-05, -5.209310256759636e-05, -0.40135014057159424, -0.01605382189154625, -0.016199393197894096, -2.2173147201538086, -0.7004873156547546, -0.48132529854774475, -7.378782902378589e-05, -0.030006809160113335, -0.04720860719680786, -1.0037699937820435, -0.012838094495236874, -0.15310531854629517, -0.18396076560020447, -0.7347304224967957, -0.923083484172821, -0.08686573058366776, -0.0034975565504282713, -0.005267313215881586, -0.0016858663875609636, -0.00031001531169749796, -7.629365427419543e-06, -0.0003738896339200437, -0.0007996936910785735, -2.706014311115723e-05, -5.125986263010418e-06, -0.0002668739762157202, -0.005952843930572271, -0.0010836211731657386, -0.4745006859302521, -0.049389392137527466, -1.2278481335670222e-05, -0.7123314738273621, -0.00020251607929822057, -0.0026721982285380363, -0.0017879704246297479, -0.003913127351552248, -3.540453326422721e-05, -1.7762025890988298e-05, -0.08828016370534897, -0.008900020271539688, -0.0005134217790327966, -2.0726664066314697, -0.050167229026556015, -0.013942227698862553, -0.0019370617810636759, -0.0066522336564958096, -9.298280929215252e-06, -4.124556289752945e-05, -0.002116346498951316, -0.0004138090298511088, -0.00023064337437972426, -0.004126605577766895, -2.002696055569686e-05, -8.22540732769994e-06, -0.00011157367407577112, -0.0006257721688598394, -9.536738616588991e-07, -2.288792165927589e-05, -0.00010632903286023065, -0.001029557315632701, -0.0008616310660727322, -0.15348799526691437, -2.8729025871143676e-05, -7.986990567587782e-06, -1.2278481335670222e-05, -1.3589766240329482e-05, -0.00030191155383363366, -0.0004065402317792177, -0.04843299463391304, -0.015182409435510635, -3.099436753473128e-06, -0.006931308191269636, -0.00029881304362788796, -0.0021062351297587156, -1.1146172285079956, -0.005537171848118305, -0.5566630959510803, -0.8476110696792603, -3.933898824470816e-06, -6.556489552167477e-06, -1.2636104656849056e-05, -5.245195097813848e-06, -0.007460707798600197, -0.006522438023239374, -0.0015906550688669086, -1.0011065006256104, -0.019135983660817146, -0.1456339955329895, -0.09409645944833755, -0.001763337990269065, -0.002534037223085761, -1.1920922133867862e-06, -2.0503786799963564e-05, -2.4914430468925275e-05, -2.0503786799963564e-05, -0.0002466136065777391, -0.00047219570842571557, -0.0006630606367252767, -0.8657934069633484, -5.471556869451888e-05, -6.198863957251888e-06, -0.01639232225716114, -3.707340147229843e-05, -0.010126051492989063, -0.00010084597306558862, -9.107174992095679e-05, -0.00017724849749356508, -0.131389781832695, -2.098061486321967e-05, -1.728519782773219e-05, -0.008656004443764687, -0.0047874110750854015, -0.418690949678421, -0.05040767043828964, -0.0029326549265533686, -9.929640509653836e-05, -0.0007220283732749522, -5.8412379075889476e-06, -7.152531907195225e-06, -5.125986263010418e-06, -2.264974000354414e-06, -0.004115089774131775, -0.005791905336081982, -1.5156686305999756, -0.09091909229755402, -0.07831980288028717, -0.0019170731538906693, -8.034383063204587e-05, -0.5374484062194824, -0.0063375448808074, -2.519804000854492], "finish_reason": "stop"}], "metrics": {"energy": 156.1699149513245, "energy_per_token": 1.0997881334600317, "time": 6.1105647, "time_per_token": 0.04303214577464789}}
{"outputs": [{"text": "count = 0\n    if not os.path.exists(source_directory):\n        print(\"Source directory does not exist.\")\n        return count\n\n    if not os.path.isdir(source_directory):\n        print(\"Source directory is not a directory.\")\n        return count\n\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n\n    for file_name in os.listdir(source_directory):\n        match = re.match(pattern, file_name)\n        if match:\n            source_file_path = os.path.join(source_directory, file_name)\n            target_file_path = os.path.join(target_directory, file_name)\n            shutil.move(source_file_path, target_file_path)\n            count += 1\n\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "return", " count", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "\"", "Source", " directory", " is", " not", " a", " directory", ".", "\"", ")", "\n", "        ", "return", " count", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "match", "(", "pattern", ",", " file", "_", "name", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "file", "_", "path", ",", " target", "_", "file", "_", "path", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.558661937713623, -0.04796098545193672, -0.0034292482305318117, -0.00013410145766101778, -0.05358670651912689, -0.3765327036380768, -0.8144951462745667, -0.33032122254371643, -0.039472244679927826, -1.728519782773219e-05, -0.0003426679759286344, -0.005822009406983852, -1.4353258609771729, -0.00029666791670024395, -0.042013950645923615, -3.802703940891661e-05, -3.40932747349143e-05, -0.29009684920310974, -0.027560891583561897, -0.0010580186499282718, -1.5062021017074585, -0.10430096089839935, -1.3029460906982422, -0.44669726490974426, -0.05530199408531189, -0.10667301714420319, -0.0002915434306487441, -0.0015281677478924394, -0.46101388335227966, -0.0863623172044754, -0.0017600059509277344, -0.0048818439245224, -0.11398178339004517, -0.01013088971376419, -0.9183110594749451, -0.00751690985634923, -1.174511432647705, -0.00016592556494288146, -0.36376848816871643, -0.03379226103425026, -0.006969309411942959, -0.0006609162664972246, -0.00019453064305707812, -0.0013740155845880508, -0.10539864748716354, -0.00109112320933491, -7.617183291586116e-05, -0.009962950833141804, -2.062299427052494e-05, -2.6464111215318553e-05, -0.0015029336791485548, -0.0013624681159853935, -0.00025293012731708586, -0.014845728874206543, -0.0018491327064111829, -0.04226401448249817, -0.030238036066293716, -0.061601605266332626, -0.05602700635790825, -0.0035666918847709894, -0.004438786301761866, -0.015710510313510895, -0.007419412489980459, -0.006900882348418236, -0.00012015574611723423, -0.0003978414461016655, -0.003178308717906475, -0.0015024575404822826, -0.0077151888981461525, -0.0001641377166379243, -0.020231319591403008, -0.00020108585886191577, -0.2587883472442627, -0.03551385551691055, -0.0055334968492388725, -0.00032443503732793033, -0.0005046047735959291, -0.0007390628452412784, -0.01919901743531227, -0.00013433984713628888, -0.0011238694423809648, -2.9802276912960224e-06, -1.0967194612021558e-05, -0.0035959123633801937, -0.001856866991147399, -0.0009118927991949022, -0.2090446949005127, -0.00031394799589179456, -1.5820008516311646, -4.410646579344757e-05, -0.001086717238649726, -0.0021014767698943615, -2.372236667724792e-05, -8.689979586051777e-05, -0.0035455478355288506, -0.0069335573352873325, -0.05108209699392319, -0.002439025556668639, -0.4691791236400604, -1.0505831241607666, -0.7889417409896851, -0.09597137570381165, -0.005784201435744762, -0.010984429158270359, -0.00012206286191940308, -0.000179036331246607, -1.5497195136049413e-06, -0.0002115741081070155, -0.0005617947317659855, -1.2993727978027891e-05, -5.006777428206988e-06, -0.00043049128726124763, -0.006082950159907341, -0.007179059088230133, -0.6727377772331238, -0.04310016706585884, -0.003316143061965704, -1.3470558769768104e-05, -1.0209298133850098, -0.00025233422638848424, -0.006475892383605242, -0.000732868502382189, -0.004759293049573898, -1.1205610462639015e-05, -2.4437606043647975e-05, -0.01317368634045124, -0.004253745079040527, -0.06058366969227791, -0.011826755478978157, -0.03804875910282135, -0.12813113629817963, -0.0073678200133144855, -0.0007864719373174012, -0.7798487544059753, -0.12356852740049362, -0.4524664580821991, -1.3685545921325684, -0.02082880027592182, -0.0004862556525040418, -0.01232578232884407, -2.0265558760002023e-06, -5.364274329622276e-05, -0.0002711643755901605, -0.00014554394874721766, -0.000120751719805412, -0.0034282978158444166, -1.2516897186287679e-05, -8.22540732769994e-06, -7.009260298218578e-05, -0.002721655648201704, -1.1920928244535389e-07, -6.794906312279636e-06, -8.082063141046092e-05, -0.0008995062671601772, -0.0023994247894734144, -0.07655789703130722, -0.00016318420239258558, -0.0062328241765499115, -0.0012987758964300156, -0.06965774297714233, -0.00012575789878610522, -0.0012362702982500196, -3.516612196108326e-05, -4.410734163684538e-06, -0.0001546025014249608, -8.189342770492658e-05, -6.115249561844394e-05, -0.01066968496888876, -1.5497195136049413e-06, -1.0371154530730564e-05, -0.00012861855793744326, -0.12748198211193085, -8.583032467868179e-06, -9.846202738117427e-05, -0.0015899409772828221, -0.000835903687402606, -0.04060083255171776, -0.3687787652015686, -2.3603161025675945e-05, -1.1920922133867862e-06, -0.02444460242986679, -1.8954096958623268e-05, -0.0007412070408463478, -1.0371154530730564e-05, -0.000102037942269817, -1.3947389561508317e-05, -2.3841855067985307e-07, -6.317892984952778e-05, -0.0004164305282756686, -3.683499380713329e-05, -0.028844304382801056, -2.50339189733495e-06, -3.576278118089249e-07, -0.006703507620841265, -0.007439764682203531, -0.0025925380177795887, -0.11436665803194046, -0.0035103862173855305, -0.0018268815474584699, -1.2278481335670222e-05, -0.0027513764798641205, -0.43615007400512695, -0.0028135497123003006, -0.30722320079803467, -0.0006586528033949435, -1.2889351844787598, -9.536738616588991e-07, -3.576278118089249e-07, -7.510157047363464e-06, -0.00019572250312194228, -2.2985470294952393, -0.003727038623765111], "finish_reason": "stop"}], "metrics": {"energy": 233.17076142120362, "energy_per_token": 1.0998620821754888, "time": 9.443333, "time_per_token": 0.04454402358490567}}
{"outputs": [{"text": "try:\n        src_files = os.listdir(source_directory)\n    except FileNotFoundError:\n        print(\"Source directory does not exist\")\n        return 0\n\n    match_count = 0\n    for filename in src_files:\n        match_found = re.match(pattern, filename)\n        if match_found is not None:\n            match_count += 1\n            dst = os.path.join(target_directory, filename)\n            try:\n                shutil.move(os.path.join(source_directory, filename), dst)\n            except FileNotFoundError:\n                print(\"File not found: %s\" % filename)\n        else:\n            print(\"Filename does not match regex pattern: %s\" % filename)\n\n    return match_count", "tokens": ["try", ":", "\n", "        ", "src", "_", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "match", "_", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " src", "_", "files", ":", "\n", "        ", "match", "_", "found", " =", " re", ".", "match", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", "_", "found", " is", " not", " None", ":", "\n", "            ", "match", "_", "count", " +=", " ", "1", "\n", "            ", "dst", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "            ", "try", ":", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", ",", " dst", ")", "\n", "            ", "except", " File", "NotFound", "Error", ":", "\n", "                ", "print", "(", "\"", "File", " not", " found", ":", " %", "s", "\"", " %", " filename", ")", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "\"", "Fil", "ename", " does", " not", " match", " regex", " pattern", ":", " %", "s", "\"", " %", " filename", ")", "\n", "\n", "    ", "return", " match", "_", "count", "\n", "\n", "print"], "logprobs": [-2.2588648796081543, -0.00048065552255138755, -0.00834750197827816, -0.004779106471687555, -4.001948356628418, -0.28757551312446594, -1.3627359867095947, -0.04734289273619652, -0.3673270642757416, -1.3232143828645349e-05, -0.0032820426858961582, -6.794906312279636e-06, -0.00048160876031033695, -0.0035160882398486137, -9.262132516596466e-05, -2.4318398573086597e-05, -0.00031156453769654036, -0.021648764610290527, -0.4702405333518982, -0.0011233931872993708, -0.32183313369750977, -0.0003685271949507296, -7.271740287251305e-06, -0.054051320999860764, -0.016489066183567047, -0.0010189585154876113, -0.8975343704223633, -0.11389828473329544, -1.3514050245285034, -0.734947919845581, -0.03960230201482773, -0.7899024486541748, -0.00016973962192423642, -0.0010682597057893872, -2.238457679748535, -0.004126486834138632, -0.008435334078967571, -0.044321153312921524, -0.01656457968056202, -0.013845236971974373, -0.0003337303060106933, -0.010816986672580242, -0.9968901872634888, -0.0002536452084314078, -3.041189432144165, -0.21584291756153107, -1.611750602722168, -0.008704693987965584, -0.014778426848351955, -0.00011193125828867778, -0.01837797835469246, -0.33578142523765564, -0.19315308332443237, -1.4311299324035645, -0.0013847296359017491, -0.003917877096682787, -6.12716976320371e-05, -1.6212332411669195e-05, -0.00017438798386137933, -0.003718368476256728, -0.0061895824037492275, -0.5376593470573425, -2.4157397747039795, -3.6331210136413574, -0.009478329680860043, -0.13814018666744232, -2.884823152271565e-05, -1.1126519441604614, -0.00023266946664080024, -0.006308523006737232, -0.0024491334334015846, -0.008565590716898441, -0.018430059775710106, -0.015620029531419277, -0.05661531537771225, -0.02661425620317459, -0.022075168788433075, -6.97350042173639e-05, -0.0001726001501083374, -2.8979315757751465, -0.14030733704566956, -9.16677454370074e-05, -0.03707604855298996, -0.0117045808583498, -0.0018575809663161635, -0.8155192136764526, -0.009501120075583458, -0.016894938424229622, -0.00390101526863873, -0.0042283423244953156, -1.3470558769768104e-05, -0.008408264257013798, -0.09049873799085617, -4.331164360046387, -2.7528328895568848, -0.10948212444782257, -2.1815061700181104e-05, -0.00019226610311307013, -0.008479543030261993, -0.003415467217564583, -0.0004858981992583722, -0.018691357225179672, -2.2291887944447808e-05, -2.9444261599564925e-05, -0.00032693761750124395, -0.06329604983329773, -0.0013116337358951569, -0.004448755644261837, -0.011627757921814919, -0.7942869067192078, -0.00015221867943182588, -0.0010159813100472093, -0.0005790702416561544, -0.24634546041488647, -4.2199197196168825e-05, -2.861018856492592e-06, -0.032198261469602585, -0.0008824745309539139, -0.2640214264392853, -0.00030655929003842175, -0.00018225439998786896, -5.447716102935374e-05, -0.0008043391280807555, -0.00019572250312194228, -0.0031009467784315348, -8.34461570775602e-06, -3.9219088648678735e-05, -0.0006768796010874212, -0.003957892768085003, -8.391981828026474e-05, -0.00014494798961095512, -0.018605591729283333, -0.0004103533865418285, -0.005726124159991741, -0.26789170503616333, -0.00210564024746418, -0.38507434725761414, -0.11884909868240356, -2.0146166207268834e-05, -0.038613900542259216, -0.014546767808496952, -0.0007769426447339356, -0.2029549777507782, -0.016725316643714905, -0.7148798704147339, -1.5890640020370483, -0.23342113196849823, -0.009573973715305328, -1.6221234798431396, -2.0659940242767334, -0.0037630239967256784, -0.01984596624970436, -0.02061430551111698, -0.2323603630065918, -0.006501593627035618, -0.0018897071713581681, -2.1613929271698, -0.08628358691930771, -0.00013302871957421303, -0.0078294537961483, -0.0015793481143191457, -0.15021421015262604, -0.012157387100160122, -0.056853875517845154, -2.7882449626922607, -0.004915652796626091, -0.3854016363620758, -0.0007364421617239714, -0.04338203743100166, -2.4006009101867676, -0.6086587309837341, -0.10760005563497543, -0.01334438007324934, -0.0006927236099727452, -0.005755282007157803, -0.001888398313894868, -0.010885853320360184, -0.002153579378500581, -0.003329093800857663, -0.29911795258522034, -0.002482667798176408, -0.5447550415992737, -0.0027898934204131365, -9.381330892210826e-05, -3.135155202471651e-05, -0.6603514552116394, -0.003646155819296837, -3.3149659633636475], "finish_reason": "stop"}], "metrics": {"energy": 209.18523291587823, "energy_per_token": 1.1126874091270118, "time": 7.9916954, "time_per_token": 0.04250901808510638}}
{"outputs": [{"text": "# Check if source_directory exists and is a directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Create target directory if it doesn't exist\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    # Get all file paths in source directory\n    files = [f for f in os.listdir(source_directory) if re.match(pattern, f)]\n\n    # Move each file to target directory\n    count = 0\n    for file in files:\n        source_path = os.path.join(source_directory, file)\n        target_path = os.path.join(target_directory, file)\n        os.replace(source_path, target_path)\n        count += 1\n\n    return count", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Get", " all", " file", " paths", " in", " source", " directory", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", " if", " re", ".", "match", "(", "pattern", ",", " f", ")]", "\n", "\n", "    ", "#", " Move", " each", " file", " to", " target", " directory", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", ")", "\n", "        ", "os", ".", "replace", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "        ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count"], "logprobs": [-1.6943392753601074, -0.8999425768852234, -0.36428481340408325, -0.2014341950416565, -0.36538165807724, -0.00243926327675581, -0.08820692449808121, -0.31189072132110596, -0.0203692764043808, -0.0037074419669806957, -0.007205925416201353, -0.16726362705230713, -0.0008397151832468808, -0.01648695580661297, -0.044633690267801285, -0.013323089107871056, -6.794906312279636e-06, -0.00014232576359063387, -0.010592782869935036, -0.29701992869377136, -0.0003771070914808661, -2.2053474822314456e-05, -0.0006495987763628364, -5.376194530981593e-05, -1.4662635294371285e-05, -0.005516781006008387, -0.002209009835496545, -0.0006235085893422365, -0.3176150918006897, -0.0023888403084129095, -5.876845170860179e-05, -0.010415837168693542, -0.06024521216750145, -0.0003916450368706137, -0.07343810051679611, -0.6463326215744019, -0.08177557587623596, -0.5576664805412292, -0.041177574545145035, -0.04507240280508995, -0.32506489753723145, -0.0002811751910485327, -6.9141146923357155e-06, -0.06133154779672623, -0.04063517227768898, -0.00015293381875380874, -0.18392060697078705, -0.0016912217251956463, -0.000513064325787127, -2.7179348762729205e-05, -1.883488948806189e-05, -0.0008012421894818544, -0.6828966736793518, -7.271502545336261e-05, -5.245071224635467e-05, -0.0008487674640491605, -3.576278118089249e-07, -1.0847986231965479e-05, -0.0008997444529086351, -0.0006137394811958075, -0.0004664763400796801, -0.03378695994615555, -0.0003047717036679387, -0.22087982296943665, -7.152531907195225e-06, -0.0012713929172605276, -0.0001311216183239594, -0.0010451575508341193, -9.894321920000948e-06, -1.8715683836489916e-05, -0.06713994592428207, -0.003258159849792719, -0.010133957490324974, -0.000895933189895004, -0.16302518546581268, -1.9056600332260132, -1.7282750606536865, -2.763824462890625, -0.918213963508606, -0.9363318085670471, -0.2563816010951996, -0.3798702657222748, -1.1562422513961792, -0.00020418466010596603, -2.4782795906066895, -0.10152484476566315, -0.30206814408302307, -1.835615634918213, -0.034315697848796844, -0.00024828212917782366, -0.00033742457162588835, -0.016122914850711823, -1.3351351299206726e-05, -0.0012562725460156798, -2.50339189733495e-06, -0.0002374367177253589, -0.0006599632324650884, -3.4689302992774174e-05, -4.410734163684538e-06, -0.0354815274477005, -0.07393930852413177, -0.3113907277584076, -6.556489552167477e-06, -0.7237069606781006, -0.0006492413813248277, -0.007834894582629204, -0.000771820661611855, -0.046693697571754456, -0.04716255143284798, -0.0026880106888711452, -0.06948871910572052, -0.00014578233822248876, -0.045769453048706055, -0.08710887283086777, -2.5648558139801025, -0.07739952206611633, -0.2760174572467804, -0.15894544124603271, -0.016266483813524246, -0.07275231927633286, -0.0003535122668836266, -1.581966519355774, -0.0022716925013810396, -0.011417407542467117, -0.00020644917094614357, -0.012768890708684921, -0.010224229656159878, -0.0034560970962047577, -0.8005277514457703, -0.0893925204873085, -0.0007457336178049445, -8.391981828026474e-05, -0.0002540027489885688, -0.0008173224050551653, -0.5016497373580933, -0.20319238305091858, -0.2998999059200287, -0.000310730334604159, -0.009165002033114433, -2.622600959512056e-06, -1.7165990357170813e-05, -0.00039307496626861393, -6.544376083184034e-05, -3.516612196108326e-05, -0.0006061147432774305, -6.329813186312094e-05, -9.298280929215252e-06, -4.136476854910143e-05, -0.0004481264913920313, -5.1020273531321436e-05, -0.0015581621555611491, -0.0007970731821842492, -0.008855239488184452, -0.00011598391574807465, -0.000386640167562291, -4.911301948595792e-05, -0.00047088501742109656, -3.0040289857424796e-05, -2.0265558760002023e-06, -0.0001282609737245366, -3.576214658096433e-05, -1.4543427823809907e-05, -0.0011844770051538944, -1.0251946150674485e-05, -7.390948667307384e-06, -4.076874756719917e-05, -0.006113756448030472, -0.0002953569928649813, -0.0003361137059982866, -0.026126259937882423, -2.5506110191345215, -2.264974000354414e-06, -2.293903112411499, -0.0002611534437164664, -0.0010515881003811955, -1.3112935448589269e-05, -0.00016330339713022113, -0.00012766500003635883, -0.0007974305190145969, -1.5258672647178173e-05, -0.0006724718841724098, -0.0022505212109535933, -0.045900288969278336, -0.001622551935724914, -0.015567215159535408, -0.0021445390302687883, -0.0012447236804291606, -1.5139465176616795e-05, -0.0027164246421307325, -0.17544075846672058, -0.0009531007381156087, -0.07876260578632355, -0.00046588058467023075], "finish_reason": "stop"}], "metrics": {"energy": 214.92502309989945, "energy_per_token": 1.1136011559580283, "time": 8.409647, "time_per_token": 0.04357330051813471}}
{"outputs": [{"text": "if os.path.isdir(source_directory):\n        if not os.path.exists(target_directory):\n            os.makedirs(target_directory)\n        file_names = os.listdir(source_directory)\n        file_list = [x for x in file_names if re.match(pattern, x)]\n        for file_name in file_list:\n            shutil.move(os.path.join(source_directory, file_name), os.path.join(target_directory, file_name))\n        return len(file_list)\n    return 0", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "        ", "file", "_", "names", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "        ", "file", "_", "list", " =", " [", "x", " for", " x", " in", " file", "_", "names", " if", " re", ".", "match", "(", "pattern", ",", " x", ")]", "\n", "        ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", "))", "\n", "        ", "return", " len", "(", "file", "_", "list", ")", "\n", "    ", "return", " ", "0", "\n", "\n", "def"], "logprobs": [-1.08534574508667, -2.7540619373321533, -4.23184028477408e-05, -0.011774329468607903, -0.018107933923602104, -0.47367584705352783, -0.07310784608125687, -0.00042429505265317857, -0.020709823817014694, -7.784063927829266e-05, -5.209310256759636e-05, -0.40135014057159424, -0.01605382189154625, -0.016199393197894096, -3.159287452697754, -0.20391158759593964, -0.009016511961817741, -0.000704278820194304, -0.0026372435968369246, -0.006431831978261471, -0.6716589331626892, -0.0002740246127359569, -0.003925120458006859, -3.504691630951129e-05, -4.2676016164477915e-05, -0.002186290919780731, -0.008148521184921265, -0.0013068715343251824, -0.02623855508863926, -0.0005214046686887741, -0.518812894821167, -2.610649426060263e-05, -0.0019000587053596973, -0.0002786724944598973, -0.0011121999705210328, -1.645074735279195e-05, -2.2291887944447808e-05, -0.04257194325327873, -0.008339935913681984, -0.4280845522880554, -1.8881902694702148, -0.011771973222494125, -3.0486505031585693, -0.059675659984350204, -0.6734433174133301, -9.536697689327411e-06, -0.0028451699763536453, -6.794906312279636e-06, -0.0005918181850574911, -0.0009332115878351033, -1.7881233361549675e-05, -1.6212332411669195e-05, -0.00019131260341964662, -0.0037614800967276096, -0.03148983418941498, -1.616789698600769, -0.0012469858629629016, -3.268686294555664, -0.026375222951173782, -0.8433974385261536, -3.8826658725738525, -0.006794918328523636, -0.0026903883554041386, -0.0003297977091278881, -0.013566674664616585, -1.2636104656849056e-05, -4.768258077092469e-05, -0.01097558531910181, -0.05521547421813011, -1.6331539882230572e-05, -0.8695271015167236, -0.0009352362249046564, -0.014486611820757389, -0.0017538178944960237, -0.03916565701365471, -0.08025729656219482, -0.005785149987787008, -0.039722949266433716, -0.5910084843635559, -0.4025890529155731, -0.3181530237197876, -0.018923696130514145, -0.0007103541865944862, -0.0021685673855245113, -4.768370445162873e-07, -0.0006971312686800957, -0.0010203876299783587, -0.000950004265177995, -0.0010856455191969872, -0.9098339676856995, -6.16293036728166e-05, -8.22540732769994e-06, -0.018788933753967285, -0.0034686895087361336, -0.38546958565711975, -2.3603161025675945e-05, -0.00046075694262981415, -0.0001722425949992612, -0.0006384003208950162, -0.0002640137099660933, -0.0026167933829128742, -0.00014804698002990335, -2.109982233378105e-05, -0.0005938435206189752, -0.004038512706756592, -1.6689286894688848e-06, -0.00021491125517059118, -0.00012003655137959868, -0.0003300360403954983, -0.17925222218036652, -0.00023719835735391825, -2.932505594799295e-05, -0.00020287363440729678, -5.543078441405669e-05, -9.42901024245657e-05, -0.010394011624157429, -6.079655122448457e-06, -2.753696753643453e-05, -0.0017472729086875916, -0.006559507455676794, -1.0251946150674485e-05, -0.00022706791060045362, -0.0011878109071403742, -0.008747355081140995, -0.06964828819036484, -0.09589404612779617, -0.0048501696437597275, -0.0003743662964552641, -0.0007146426942199469, -4.410734163684538e-06, -0.01173026580363512, -0.028081687167286873, -0.011706938035786152, -0.02358664572238922, -1.1295201778411865, -0.0032021934166550636, -0.00014208737411536276, -0.5989203453063965, -0.010448633693158627, -1.2837727069854736], "finish_reason": "stop"}], "metrics": {"energy": 147.40820645523078, "energy_per_token": 1.0529157603945056, "time": 5.8906403, "time_per_token": 0.042076002142857144}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        print(\"Source directory does not exist or is not a directory.\")\n        return 0\n\n    target_dir = os.path.join(target_directory, os.path.basename(os.path.normpath(source_directory)))\n    os.makedirs(target_dir, exist_ok=True)\n    num_files_moved = 0\n\n    for filename in os.listdir(source_directory):\n        if re.match(pattern, filename):\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_dir, filename)\n            shutil.move(source_file, target_file)\n            num_files_moved += 1\n\n    print(f\"{num_files_moved} files moved to {target_dir}.\")\n    return num_files_moved", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "\"", "Source", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "target", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " os", ".", "path", ".", "bas", "ename", "(", "os", ".", "path", ".", "norm", "path", "(", "source", "_", "directory", ")))", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", "):", "\n", "            ", "source", "_", "file", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "dir", ",", " filename", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "file", ",", " target", "_", "file", ")", "\n", "            ", "num", "_", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "print", "(", "f", "\"", "{", "num", "_", "files", "_", "m", "oved", "}", " files", " moved", " to", " {", "target", "_", "dir", "}", ".", "\"", ")", "\n", "    ", "return", " num", "_", "files", "_", "m", "oved", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -1.5891640186309814, -0.16144077479839325, -0.7427826523780823, -0.7584105730056763, -0.059615686535835266, -0.11473872512578964, -0.00028701478731818497, -0.0012641304638236761, -0.08881217241287231, -0.029826901853084564, -0.0016886036610230803, -0.0010418231831863523, -0.0029290891252458096, -0.3181263208389282, -0.09074448049068451, -0.0017005043337121606, -0.006479800678789616, -0.007460826076567173, -0.011729558929800987, -0.0058847032487392426, -0.0001486429391661659, -0.009545636363327503, -0.2548866868019104, -0.00024101213784888387, -1.7634344100952148, -0.012279858812689781, -2.555518627166748, -0.08123112469911575, -0.37970784306526184, -8.225102646974847e-05, -0.0011561383726075292, -0.007417637389153242, -0.5368239283561707, -0.0013731822837144136, -0.04162066429853439, -4.565611743601039e-05, -3.2305197237292305e-05, -0.019739730283617973, -0.23225358128547668, -0.0004881620698142797, -0.0038446097169071436, -0.013160862028598785, -0.08864253759384155, -1.0728830375228426e-06, -0.0001674750237725675, -2.3375277519226074, -0.0007043979712761939, -0.005457739345729351, -0.0019658540841192007, -1.402856469154358, -0.004074961878359318, -0.0017395378090441227, -0.1050097793340683, -0.00010823617776622996, -0.00015984688070602715, -0.012673080898821354, -0.009707270190119743, -0.11907157301902771, -1.9946889877319336, -3.182837463100441e-05, -0.04912657290697098, -1.7404405298293568e-05, -0.00035315475543029606, -0.00010346830822527409, -0.0035672858357429504, -6.186770770000294e-05, -0.004869862459599972, -0.0076275295577943325, -0.007174206431955099, -4.768370445162873e-07, -3.707340147229843e-05, -0.004720496013760567, -0.0017375147435814142, -0.002566617215052247, -0.03753289952874184, -2.438763380050659, -2.8616650104522705, -0.009011786431074142, -0.6779097318649292, -0.26409128308296204, -0.05084872990846634, -0.00010001159535022452, -0.010724646039307117, -0.009315595962107182, -4.8040190449682996e-05, -0.005631889682263136, -0.1963154524564743, -0.0001454247540095821, -0.13393908739089966, -0.6488470435142517, -0.0009041512385010719, -0.022758016362786293, -4.172316494077677e-06, -0.00013147920253686607, -3.576272320060525e-06, -0.00022742546570952982, -0.002841603709384799, -1.1801649634435307e-05, -2.276871418871451e-05, -0.00035363141796551645, -0.0032743194606155157, -0.0024836191441863775, -1.354533076286316, -0.09527280926704407, -1.0609570381348021e-05, -0.6917924880981445, -0.0001567479339428246, -0.006830675061792135, -0.0012243640376254916, -0.028656890615820885, -0.0798133984208107, -0.012145609594881535, -0.0009442876325920224, -0.4177989661693573, -0.04752388224005699, -0.43452879786491394, -0.20760715007781982, -0.0010924329981207848, -2.7418097943154862e-06, -2.5152843591058627e-05, -8.77341881277971e-05, -0.000271879427600652, -4.589452510117553e-05, -0.0033086577896028757, -3.5523738915799186e-05, -4.207999518257566e-05, -4.410646579344757e-05, -0.000979539705440402, -7.009260298218578e-05, -0.0007515705074183643, -0.0009598892065696418, -0.08743748813867569, -0.0005756151513196528, -0.003651144215837121, -0.00033968876232393086, -0.0010477773612365127, -4.5298504119273275e-05, -2.7418097943154862e-06, -0.00025459862081333995, -0.0001591317413840443, -3.2782016205601394e-05, -0.0023437668569386005, -5.006777428206988e-06, -0.00450477097183466, -0.00010561384988250211, -0.023095188662409782, -0.0007502601947635412, -0.0006449526408687234, -0.0511070191860199, -0.2972702980041504, -2.3007127310847864e-05, -8.344646857949556e-07, -0.04117276892066002, -1.0967194612021558e-05, -0.001207337831147015, -4.0531076592742465e-06, -0.00011276562872808427, -3.564294092939235e-05, -0.0004850641416851431, -3.576272320060525e-06, -0.014026043936610222, -0.002516795415431261, -0.006949421018362045, -0.0011243456974625587, -0.10956759750843048, -5.960462772236497e-07, -2.455681169521995e-05, -7.390948667307384e-06, -8.702239938429557e-06, -5.602820692729438e-06, -0.0006681832019239664, -0.0008331642020493746, -8.821448318485636e-06, -0.0009093916742131114, -0.08586467057466507, -0.0022735956590622663, -1.4881346225738525, -0.002037355676293373, -0.1106163039803505, -0.011086649261415005, -0.24890919029712677, -0.010830665938556194, -1.1086402082582936e-05, -3.325883881188929e-05, -5.722029527532868e-06, -1.5616295058862306e-05, -0.0001528146385680884, -0.008781150914728642, -0.04940618574619293, -1.0791021585464478, -2.4754574298858643, -0.1562737226486206, -0.006985290441662073, -2.2291887944447808e-05, -0.07419635355472565, -0.5836729407310486, -0.10980731248855591, -0.0030623229686170816, -0.012603042647242546, -0.003902202704921365, -0.09218312054872513, -0.0102998623624444, -0.0014937683008611202, -7.497983460780233e-05, -1.3112935448589269e-05, -5.960462772236497e-07, -6.556489552167477e-06, -0.000325388420606032, -0.9725089073181152, -1.0728830375228426e-06, -3.576278118089249e-07, -6.794906312279636e-06, -0.00016044282529037446, -0.13795016705989838], "finish_reason": "stop"}], "metrics": {"energy": 309.84929592037184, "energy_per_token": 1.353053693975423, "time": 10.728901, "time_per_token": 0.046851096069868994}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        return 0\n\n    regex = re.compile(pattern)\n\n    files = [f for f in os.listdir(source_directory) if regex.search(f)]\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    for file in files:\n        shutil.move(os.path.join(source_directory, file), os.path.join(target_directory, file))\n\n    return len(files)", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", " if", " regex", ".", "search", "(", "f", ")]", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "))", "\n", "\n", "    ", "return", " len", "(", "files", ")", "\n", "\n", "if"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -0.33724328875541687, -0.0040573906153440475, -8.523101132595912e-05, -0.012767714448273182, -0.3307584822177887, -0.00017569905321579427, -2.8994028568267822, -0.10623276233673096, -0.004575022961944342, -3.2543604902457446e-05, -0.0005048430757597089, -0.0007352509419433773, -0.015108201652765274, -0.006812678184360266, -0.00974398571997881, -0.9889283180236816, -0.00014232576359063387, -2.201080799102783, -1.0192365646362305, -0.8001055717468262, -0.7559442520141602, -0.018571892753243446, -0.00027771908207796514, -0.0002315968304174021, -0.0064172628335654736, -1.2755313036905136e-05, -0.0010899323970079422, -5.125986263010418e-06, -0.0002076410164590925, -0.0010184821439906955, -0.00011359999916749075, -6.198863957251888e-06, -0.014197533018887043, -0.061472807079553604, -0.14961105585098267, -0.00013064485392533243, -0.5372470021247864, -6.389413465512916e-05, -0.011715774424374104, -0.03797473758459091, -0.003848291002213955, -0.569955050945282, -7.486063259420916e-05, -1.3751461505889893, -0.5672795176506042, -0.16755594313144684, -0.0003800861886702478, -0.00020632999076042324, -0.0007812308613210917, -0.8444129228591919, -0.00047791501856409013, -0.0009397619287483394, -2.729855441430118e-05, -2.8371408916427754e-05, -0.003500764025375247, -0.0026106107980012894, -0.0008771148277446628, -0.023601433262228966, -0.00023040501400828362, -0.28521832823753357, -1.9550132492440753e-05, -0.001958834705874324, -0.00016044282529037446, -0.000745137978810817, -2.9444261599564925e-05, -2.1815061700181104e-05, -0.024762948974967003, -0.0036684852093458176, -0.021743018180131912, -0.00032944019767455757, -1.1048005819320679, -0.4611552655696869, -0.1512913703918457, -0.001864363206550479, -0.0003592322755139321, -0.0005685858195647597, -0.0027218933682888746, -0.8278657793998718, -3.9934315282152966e-05, -4.887569048150908e-06, -0.017967205494642258, -0.0017335877055302262, -0.16918353736400604, -0.0007585985003970563, -0.0001392267586197704, -0.000328367663314566, -7.879423355916515e-05, -7.056941103655845e-05, -0.0018052248051390052, -0.00013910756388213485, -2.2411095415009186e-05, -0.00025054652360267937, -0.0016945539973676205, -0.00010358751023886725, -0.00011038171214750037, -0.08155189454555511, -6.842378934379667e-05, -6.318072337307967e-06, -4.351044481154531e-05, -1.6927575416048057e-05, -2.4437606043647975e-05, -0.004460979253053665, -2.253030106658116e-05, -1.2993727978027891e-05, -0.001576253562234342, -0.00555459875613451, -0.001557686016894877, -0.02174990065395832, -0.06410116702318192, -0.015041856095194817, -0.025420838966965675, -0.0019550274591892958, -0.00019691436318680644, -0.001600771676748991, -0.43398457765579224, -0.3002358078956604, -0.005624184384942055, -0.5766722559928894], "finish_reason": "stop"}], "metrics": {"energy": 141.93132943725587, "energy_per_token": 1.0671528529116983, "time": 5.686852, "time_per_token": 0.042758285714285714}}
{"outputs": [{"text": "# Create a Pattern object from the provided pattern string\n    pattern = re.compile(pattern)\n\n    # Iterate over files in the source directory\n    num_moved = 0\n    for filename in os.listdir(source_directory):\n        # Get the full path of the file\n        filepath = os.path.join(source_directory, filename)\n\n        # Check if the file exists\n        if not os.path.exists(filepath):\n            continue\n\n        # Check if the file matches the provided regex pattern\n        if re.search(pattern, filename):\n            # Move the file to the target directory\n            shutil.move(filepath, os.path.join(target_directory, filename))\n            num_moved += 1\n\n    return num_moved", "tokens": ["#", " Create", " a", " Pattern", " object", " from", " the", " provided", " pattern", " string", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " the", " source", " directory", "\n", "    ", "num", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "#", " Get", " the", " full", " path", " of", " the", " file", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "file", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " matches", " the", " provided", " regex", " pattern", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " target", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "file", "path", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", "))", "\n", "            ", "num", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " num", "_", "m", "oved"], "logprobs": [-1.6943392753601074, -3.4234507083892822, -2.1406192779541016, -4.010279178619385, -0.1275370717048645, -1.1851155757904053, -0.038348693400621414, -2.0130109786987305, -0.3139769732952118, -0.39696481823921204, -0.2378147840499878, -0.0019214755157008767, -0.34270671010017395, -0.47859787940979004, -0.0015132891712710261, -2.169585604860913e-05, -0.002177012851461768, -0.0014435357879847288, -0.013626297935843468, -0.009084558114409447, -0.008749717846512794, -0.2953942120075226, -0.0003212174342479557, -0.23560883104801178, -2.1458535194396973, -0.004732479341328144, -0.4435676634311676, -1.0291742086410522, -0.05944383889436722, -0.42404597997665405, -0.032309532165527344, -0.02204531617462635, -0.1928560733795166, -0.0006504327175207436, -2.375243663787842, -0.011284928768873215, -1.078669786453247, -0.144354909658432, -0.16393300890922546, -0.00211658445186913, -2.52720492426306e-05, -0.033855415880680084, -0.04975865036249161, -0.08925841748714447, -0.7089671492576599, -0.0008629412623122334, -0.007231252733618021, -6.437094270950183e-05, -0.0002908283786382526, -1.1205610462639015e-05, -0.0002817710628733039, -0.001388420001603663, -2.0503786799963564e-05, -1.4066597032069694e-05, -0.0004818470624741167, -0.0020103498827666044, -0.04925696924328804, -0.7871233224868774, -2.894073963165283, -0.22544468939304352, -1.6728132963180542, -0.11595986038446426, -0.39496466517448425, -0.02520035021007061, -0.676687479019165, -0.15139280259609222, -0.00019226610311307013, -0.26334017515182495, -0.5135967135429382, -0.0008301864145323634, -0.007661245763301849, -0.00047469791024923325, -1.3708974620385561e-05, -0.00962840486317873, -0.00015627116954419762, -5.829164365422912e-05, -0.0016637305961921811, -2.9682672902708873e-05, -4.6491513785440475e-06, -5.769562994828448e-05, -0.0006007535266689956, -4.207999518257566e-05, -0.00023850933939684182, -0.18444465100765228, -0.00041166413575410843, -0.017690375447273254, -0.34407857060432434, -0.025035155937075615, -0.05154391750693321, -0.021311920136213303, -0.8962157964706421, -0.8262250423431396, -0.0001382732152706012, -0.005692698527127504, -0.431413471698761, -0.0011214879341423512, -7.748573807475623e-06, -1.2874520507466514e-05, -0.001775832730345428, -0.44003015756607056, -4.8993817472364753e-05, -0.0018488947534933686, -2.1576648578047752e-05, -0.002442117314785719, -0.003362836316227913, -0.0005276002921164036, -0.478850781917572, -0.06514155119657516, -0.021464897319674492, -0.0007083290838636458, -0.03248322382569313, -0.30476856231689453, -0.006235075183212757, -0.028939273208379745, -0.08538111299276352, -0.1757562905550003, -0.005372490733861923, -1.5124517679214478, -2.247453451156616, -0.039243027567863464, -0.043243225663900375, -0.00017498392844572663, -0.8257438540458679, -1.6292624473571777, -0.00010156115604331717, -1.2125135660171509, -3.671578815556131e-05, -0.0003110878460574895, -0.00023505308490712196, -0.023422233760356903, -0.043861232697963715, -0.002336155390366912, -0.027866654098033905, -0.18018627166748047, -1.2999671697616577, -0.0206286683678627, -0.0007701530121266842, -0.022655468434095383, -0.029830604791641235, -0.021571068093180656, -0.0038288156501948833, -0.05369618535041809, -0.0015687552513554692, -1.2414867877960205, -5.1377883210079744e-05, -4.887569048150908e-06, -0.0047906143590807915, -1.7881233361549675e-05, -0.01078255195170641, -5.245195097813848e-06, -4.6132929128361866e-05, -0.8030441999435425, -0.00021765247220173478, -1.0132738680113107e-05, -0.0005103239673189819, -9.011816291604191e-05, -2.682172998902388e-05, -0.0019169541774317622, -1.537788011773955e-05, -2.47952248173533e-05, -0.0015165030490607023, -0.00833201501518488, -0.0007786102942191064, -0.0042913733050227165, -0.01631363108754158, -0.09681901335716248, -2.264974000354414e-06, -2.169585604860913e-05, -1.6331539882230572e-05, -0.00151078961789608, -0.0010478964541107416, -1.2397689715726301e-05, -0.009259968064725399, -0.10488956421613693, -0.007804259657859802, -0.25029751658439636, -0.0009491706150583923, -9.48860906646587e-05, -2.2291887944447808e-05, -9.97731985989958e-05], "finish_reason": "stop"}], "metrics": {"energy": 224.1666658763885, "energy_per_token": 1.245370365979936, "time": 7.7667327, "time_per_token": 0.043148515000000005}}
{"outputs": [{"text": "try:\n        if not os.path.exists(source_directory):\n            raise Exception(\"source_directory does not exist\")\n        if not os.path.isdir(source_directory):\n            raise Exception(\"source_directory is not a directory\")\n        if not os.path.exists(target_directory):\n            os.mkdir(target_directory)\n\n        num_files_moved = 0\n        for file in os.listdir(source_directory):\n            match = re.match(pattern, file)\n            if match:\n                file_path = os.path.join(source_directory, file)\n                target_file_path = os.path.join(target_directory, file)\n                shutil.move(file_path, target_file_path)\n                num_files_moved += 1\n        return num_files_moved\n    except Exception as e:\n        print(e)\n        return 0", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "            ", "raise", " Exception", "(", "\"", "source", "_", "directory", " does", " not", " exist", "\"", ")", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "            ", "raise", " Exception", "(", "\"", "source", "_", "directory", " is", " not", " a", " directory", "\"", ")", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "            ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "\n", "        ", "num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "        ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "            ", "match", " =", " re", ".", "match", "(", "pattern", ",", " file", ")", "\n", "            ", "if", " match", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "                ", "target", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", ")", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "file", "_", "path", ")", "\n", "                ", "num", "_", "files", "_", "m", "oved", " +=", " ", "1", "\n", "        ", "return", " num", "_", "files", "_", "m", "oved", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "if"], "logprobs": [-2.2588648796081543, -0.00048065552255138755, -0.00834750197827816, -0.004779106471687555, -1.4058940410614014, -0.13101831078529358, -0.03722226992249489, -1.7404405298293568e-05, -0.0010413468116894364, -0.005666265729814768, -2.206592321395874, -0.0006457865820266306, -0.06064773350954056, -8.999896090244874e-05, -4.434487345861271e-05, -0.3021010160446167, -0.03347470238804817, -0.000977276940830052, -1.2338626384735107, -2.4581034183502197, -0.21962670981884003, -0.7298797369003296, -2.4795944690704346, -0.22930899262428284, -0.007234921678900719, -0.11637749522924423, -0.00046266341814771295, -0.003621806390583515, -0.4116581380367279, -0.00027044929447583854, -0.006011619232594967, -0.18527333438396454, -0.4203585088253021, -0.022860322147607803, -0.005454301368445158, -0.0005783553933724761, -0.0001971527235582471, -0.00532612856477499, -0.01952347904443741, -0.0015163839561864734, -9.297892393078655e-05, -0.0026537699159234762, -4.303362584323622e-05, -3.0040289857424796e-05, -0.0005428509321063757, -0.0008481719414703548, -0.0004892344586551189, -0.08698255568742752, -0.0123771196231246, -0.004578820429742336, -0.04954368993639946, -0.009157796390354633, -0.0019337303237989545, -0.0017081208061426878, -0.036043982952833176, -0.0018299752846360207, -0.002748999046161771, -0.011679484508931637, -0.006165413651615381, -7.080780778778717e-05, -0.00024041623692028224, -0.5509355068206787, -0.14657720923423767, -0.021239332854747772, -0.008230104111135006, -0.00029225845355540514, -0.0011637589195743203, -0.0005955114611424506, -0.02086581103503704, -0.00013684290752280504, -0.0012447236804291606, -7.510157047363464e-06, -1.7404405298293568e-05, -0.0021736822091042995, -0.0013440155889838934, -0.0008318539476022124, -0.027661431580781937, -0.00024434918304905295, -0.8570945262908936, -5.2569914259947836e-05, -0.0013387774815782905, -0.00358522217720747, -2.109982233378105e-05, -5.721882189391181e-05, -0.00919252447783947, -0.004994891118258238, -1.6589763164520264, -0.012862456031143665, -4.192018508911133, -0.014406242407858372, -0.5975373983383179, -0.2261427491903305, -0.06947927176952362, -0.00012599628826137632, -0.019017856568098068, -0.008071542717516422, -4.482168878894299e-05, -0.0112437903881073, -0.1736985743045807, -0.19332927465438843, -0.9950330257415771, -1.0438565015792847, -0.02471468597650528, -2.276871418871451e-05, -0.001036107074469328, -5.8412379075889476e-06, -0.0002760506176855415, -0.0012461524456739426, -2.062299427052494e-05, -8.22540732769994e-06, -0.0003675738989841193, -0.0034833012614399195, -0.0014859121292829514, -0.7905477285385132, -0.04557960107922554, -0.003675849176943302, -1.3112935448589269e-05, -1.0482949018478394, -0.00019822540343739092, -0.007217524107545614, -0.0005855038180015981, -0.004598637111485004, -0.0138675756752491, -0.004178721457719803, -0.015401008538901806, -0.004913043230772018, -0.013992894440889359, -0.16140049695968628, -0.008028852753341198, -0.0005115154199302197, -2.227430820465088, -0.28871288895606995, -0.26639699935913086, -0.003587479004636407, -0.010434005409479141, -4.6491513785440475e-06, -2.038458114839159e-05, -0.0006828360492363572, -0.00019643761334009469, -0.00011455356434453279, -0.0054294029250741005, -1.3589766240329482e-05, -1.4305012882687151e-05, -7.676783570786938e-05, -0.0037912887055426836, -9.989239333663136e-05, -0.0010521834483370185, -0.004728919826447964, -0.9521094560623169, -0.012389011681079865, -0.5625572800636292, -0.27231094241142273, -0.029281314462423325, -0.00016950124700088054, -0.002389316214248538, -1.9311717551317997e-05, -4.172316494077677e-06, -0.0003405229654163122, -9.083335316972807e-05, -6.05564855504781e-05, -0.022639036178588867, -1.1920928244535389e-07, -1.4781842764932662e-05, -9.619726915843785e-05, -0.283620685338974, -0.005104366689920425, -0.001303895260207355, -0.02943643368780613, -0.2511982321739197, -3.302042750874534e-05, -1.311301275563892e-06, -0.024574419483542442, -1.597391747054644e-05, -0.002161906100809574, -0.0004997196956537664, -1.1920922133867862e-06, -8.237022848334163e-05, -0.0004935238393954933, -2.8609820219571702e-05, -0.03323695808649063, -3.099436753473128e-06, -4.768370445162873e-07, -0.0018873275257647038, -0.004679680336266756, -0.0016526625258848071, -0.028119588270783424, -1.0728830375228426e-06, -5.531158240046352e-05, -1.490105023549404e-05, -1.5258672647178173e-05, -1.3470558769768104e-05, -0.00251108780503273, -0.0014893640764057636, -1.1444026313256472e-05, -0.0006653240998275578, -1.0146844387054443, -0.09853729605674744, -0.0011722128838300705, -2.932505594799295e-05, -3.71926071238704e-05, -2.145764938177308e-06, -1.0847986231965479e-05, -0.00017093151109293103, -0.0024284415412694216, -0.3570239543914795, -0.002183436183258891, -0.055273909121751785, -0.020760849118232727, -0.06827116012573242, -9.369411418447271e-05, -0.00233853398822248, -0.000662703241687268, -0.09018474072217941, -0.0062645734287798405, -1.756990671157837, -0.050110992044210434, -0.01736227050423622, -0.042830780148506165, -0.031941160559654236, -0.010202517732977867, -0.00017426878912374377, -0.5533288717269897, -0.02141040749847889, -0.4792863130569458], "finish_reason": "stop"}], "metrics": {"energy": 277.64903136634814, "energy_per_token": 1.2395046043140543, "time": 9.884047, "time_per_token": 0.044125209821428577}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        print(f\"Directory '{source_directory}' does not exist.\")\n        return 0\n    if not os.path.isdir(source_directory):\n        print(f\"'{source_directory}' is not a directory.\")\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    moved_count = 0\n    for file_name in os.listdir(source_directory):\n        match = re.match(pattern, file_name)\n        if match:\n            source = os.path.join(source_directory, file_name)\n            target = os.path.join(target_directory, file_name)\n            shutil.move(source, target)\n            moved_count += 1\n    print(f\"{moved_count} files moved from '{source_directory}' to '{target_directory}'.\")\n    return moved_count", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "Directory", " '", "{", "source", "_", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "'{", "source", "_", "directory", "}'", " is", " not", " a", " directory", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "m", "oved", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "match", "(", "pattern", ",", " file", "_", "name", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "target", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", ",", " target", ")", "\n", "            ", "m", "oved", "_", "count", " +=", " ", "1", "\n", "    ", "print", "(", "f", "\"", "{", "m", "oved", "_", "count", "}", " files", " moved", " from", " '", "{", "source", "_", "directory", "}'", " to", " '", "{", "target", "_", "directory", "}'", ".", "\"", ")", "\n", "    ", "return", " moved", "_", "count", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -0.24824480712413788, -0.019514478743076324, -0.000724887300748378, -1.7196519374847412, -0.10227125883102417, -0.39036524295806885, -0.11822279542684555, -2.2520852088928223, -1.432478666305542, -0.0005106813623569906, -0.0013750869547948241, -8.272782724816352e-05, -0.0001821352052502334, -0.0012080521555617452, -0.14427979290485382, -0.0002683041093405336, -0.002150843385607004, -0.2782706022262573, -0.10821560770273209, -0.0008062449633143842, -0.008045881986618042, -0.011703049764037132, -0.007457276340574026, -0.007753633428364992, -0.00015889335190877318, -0.009911960922181606, -1.0949137210845947, -0.4252675473690033, -0.031024206429719925, -0.007564235478639603, -0.0008033862104639411, -0.0001399419124936685, -0.0021439441479742527, -0.0048807766288518906, -0.0008374521275982261, -5.6980417866725475e-05, -0.0018422313733026385, -1.883488948806189e-05, -2.1219027985353023e-05, -0.0008794969180598855, -0.0016575419576838613, -0.00021753329201601446, -0.016144029796123505, -0.0015315004857257009, -0.02354135364294052, -0.000570253818295896, -0.24012595415115356, -0.0023390096612274647, -0.0003644755925051868, -0.00011121608258690685, -0.01013726182281971, -0.011122017167508602, -0.00482335826382041, -0.003186270361766219, -0.04328637942671776, -0.017689906060695648, -0.013705671764910221, -9.297892393078655e-05, -0.0006058764411136508, -0.003240930614992976, -0.0013308010529726744, -0.0008008848526515067, -0.00019429226813372225, -0.0004259632551111281, -0.5821542143821716, -0.3321428894996643, -0.034579791128635406, -0.008809983730316162, -1.7762025890988298e-05, -0.001750366878695786, -0.0005590544897131622, -0.026078177616000175, -0.00015078838623594493, -0.0008544846205040812, -4.768360213347478e-06, -1.2755313036905136e-05, -0.004509042948484421, -0.0015931545058265328, -0.000530936405993998, -0.1374817043542862, -0.00020823694649152458, -0.2886388301849365, -2.5510462364763953e-05, -0.0018903020536527038, -0.0005911033367738128, -0.00273913168348372, -1.7881233361549675e-05, -2.95634672511369e-05, -0.06864486634731293, -0.013653579168021679, -0.28286686539649963, -3.788320302963257, -0.08201655000448227, -0.13785234093666077, -1.766366958618164, -0.007709628902375698, -0.008201610296964645, -4.303362584323622e-05, -0.008413110859692097, -0.08095730096101761, -0.25778281688690186, -1.1475106477737427, -0.5242091417312622, -0.07807539403438568, -0.0032835875172168016, -0.015809550881385803, -1.3589766240329482e-05, -0.0001399419124936685, -1.5497195136049413e-06, -0.00016258825780823827, -0.0006367324967868626, -1.1444026313256472e-05, -4.6491513785440475e-06, -0.00041166413575410843, -0.004543457645922899, -0.0005958688561804593, -0.6865977048873901, -0.044570643454790115, -0.004861677065491676, -1.2159273865108844e-05, -0.8314687013626099, -0.00022110878489911556, -0.005635327193886042, -0.0011979315895587206, -0.004909365437924862, -1.585470999998506e-05, -2.1576648578047752e-05, -0.015416855923831463, -0.003559327218681574, -0.0008672290714457631, -0.006031288765370846, -0.022349856793880463, -0.1865694224834442, -0.011034891940653324, -0.00047302976599894464, -0.5288617014884949, -2.4995131492614746, -0.055984850972890854, -1.0728830375228426e-06, -4.458328112377785e-05, -0.0004441943601705134, -0.00032860602368600667, -6.16293036728166e-05, -0.0012437711702659726, -3.2066785934148356e-05, -1.537788011773955e-05, -7.295342220459133e-05, -0.002904128050431609, -9.536738616588991e-07, -5.960446742392378e-06, -5.113947918289341e-05, -0.0015831567579880357, -0.0002300474588992074, -0.11760839074850082, -0.0019133847672492266, -0.0019211184699088335, -8.618460560683161e-05, -2.861018856492592e-06, -0.0002798642381094396, -4.351044481154531e-05, -3.325883881188929e-05, -0.0030490122735500336, -1.3947389561508317e-05, -8.702239938429557e-06, -0.00012265883560758084, -0.08292733132839203, -6.9141146923357155e-06, -2.884823152271565e-05, -0.0006977269076742232, -0.0007167869480326772, -0.0019336113473400474, -0.6745617389678955, -3.2305197237292305e-05, -1.4305104514278355e-06, -0.009650954976677895, -1.9192511899746023e-05, -0.0005598884890787303, -0.0014178233686834574, -0.0003610197745729238, -0.001734420657157898, -0.008297021500766277, -0.0010324153117835522, -0.13780227303504944, -1.7046782886609435e-05, -2.2411095415009186e-05, -1.680836794548668e-05, -0.0020318832248449326, -0.0010609956225380301, -1.0609570381348021e-05, -0.0008856903295964003, -0.10336214303970337, -1.281074047088623, -0.0013184197014197707, -0.02686762437224388, -0.009411491453647614, -0.26255786418914795, -0.007709037512540817, -3.528532761265524e-05, -1.490105023549404e-05, -1.9907753085135482e-05, -0.003635822329670191, -0.11548883467912674, -0.7396013736724854, -1.1236567497253418, -0.17793302237987518, -0.0003911683743353933, -0.002668393775820732, -0.0026309420354664326, -3.516612196108326e-05, -0.001490197260864079, -0.018046118319034576, -0.002278353087604046, -0.00012134769349358976, -0.00022313489171210676, -0.00034600470098666847, -2.7656173188006505e-05, -0.007847786881029606, -0.08937899768352509, -0.0017901124665513635, -0.01662566512823105, -0.004034950863569975, -0.026089444756507874, -0.00974965188652277, -0.0018394945655018091, -0.00024339574156329036, -4.172316494077677e-06, -1.1192646026611328, -1.6689286894688848e-06, -7.152555099310121e-07, -2.4914430468925275e-05, -0.0002233732520835474, -2.108241319656372, -0.003832615679129958], "finish_reason": "stop"}], "metrics": {"energy": 292.1936942405702, "energy_per_token": 1.1975151403302058, "time": 10.712751, "time_per_token": 0.04390471721311476}}
{"outputs": [{"text": "if os.path.isdir(source_directory):\n        try:\n            os.makedirs(target_directory)\n        except FileExistsError:\n            pass\n        pattern = re.compile(pattern)\n        for filename in os.listdir(source_directory):\n            if pattern.search(filename):\n                shutil.move(os.path.join(source_directory, filename), os.path.join(target_directory, filename))\n        return len(os.listdir(target_directory))\n    else:\n        return 0", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "try", ":", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "        ", "except", " File", "Exists", "Error", ":", "\n", "            ", "pass", "\n", "        ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "        ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "            ", "if", " pattern", ".", "search", "(", "filename", "):", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", "))", "\n", "        ", "return", " len", "(", "os", ".", "list", "dir", "(", "target", "_", "directory", "))", "\n", "    ", "else", ":", "\n", "        ", "return", " ", "0", "\n", "\n", "if"], "logprobs": [-1.08534574508667, -2.7540619373321533, -4.23184028477408e-05, -0.011774329468607903, -0.018107933923602104, -0.47367584705352783, -0.07310784608125687, -0.00042429505265317857, -0.020709823817014694, -7.784063927829266e-05, -5.209310256759636e-05, -0.40135014057159424, -0.01605382189154625, -0.016199393197894096, -3.2388734817504883, -0.00023588736075907946, -0.003172842552885413, -0.002919223625212908, -0.9633611440658569, -0.0014635338447988033, -0.3931058943271637, -1.1444026313256472e-05, -0.010116256773471832, -0.0015945826889947057, -0.006719848606735468, -1.1920922133867862e-06, -3.504691630951129e-05, -0.2610040307044983, -0.043637584894895554, -0.02529647760093212, -0.0013003236381337047, -0.29330694675445557, -0.009856011718511581, -0.00012015574611723423, -0.022528549656271935, -0.033678505569696426, -0.0008379285573028028, -0.09384079277515411, -0.017066404223442078, -0.5161268711090088, -3.0199220180511475, -0.2871421277523041, -0.06579618155956268, -0.00011669908417388797, -0.002893549157306552, -0.0013858010061085224, -0.027838250622153282, -0.009954334236681461, -0.013486113399267197, -0.041720371693372726, -1.368910551071167, -0.8135514855384827, -0.002003330737352371, -0.03193838894367218, -0.0004776767164003104, -0.0004232226056046784, -5.722029527532868e-06, -0.0006323245470412076, -0.0015218593180179596, -6.305972783593461e-05, -9.894321920000948e-06, -0.00035494225448928773, -0.002686465159058571, -0.0014743659412488341, -0.9057213068008423, -0.2254854142665863, -0.0009344025747850537, -0.5962231755256653, -5.006664650863968e-05, -0.005420748144388199, -0.1198352500796318, -0.003542221849784255, -0.0008139872807078063, -0.8829898238182068, -5.602679812000133e-05, -7.867782187531702e-06, -0.017155231907963753, -0.0036187181249260902, -0.25462666153907776, -0.0008120815036818385, -0.000376034586224705, -0.0003636414185166359, -0.0002299282787134871, -9.858122211880982e-05, -0.001652186387218535, -0.0001245659514097497, -1.4305012882687151e-05, -0.00027581225731410086, -0.004990383516997099, -7.879423355916515e-05, -0.000262106885202229, -0.28134268522262573, -0.00034981805947609246, -2.038458114839159e-05, -5.2927523938706145e-05, -3.433168603805825e-05, -7.939023635117337e-05, -0.01152948196977377, -3.1709168979432434e-05, -1.9073304429184645e-05, -0.0026261862367391586, -0.008010641671717167, -0.001471271039918065, -0.0034141603391617537, -0.1902906894683838, -0.058435507118701935, -0.21013511717319489, -0.02326594479382038, -0.1886068880558014, -0.0002383901592111215, -0.0006829552003182471, -6.198863957251888e-06, -0.0012161486083641648, -0.4896174669265747, -0.00010168035078095272, -4.1126360883936286e-05, -0.0012449617497622967, -0.02156115137040615, -0.035994306206703186, -0.6018655300140381, -0.00013767725613433868, -0.009900747798383236, -0.0003159739135298878, -0.17719648778438568, -0.0036923582665622234, -0.00020382710499688983, -0.4181738793849945, -0.0116217490285635, -0.6065259575843811], "finish_reason": "stop"}], "metrics": {"energy": 143.1619401416779, "energy_per_token": 1.1097824817184332, "time": 5.471549, "time_per_token": 0.04241510852713179}}
{"outputs": [{"text": "# Check source_directory and target_directory exist\n    if not os.path.exists(source_directory):\n        print(f\"Source directory does not exist: {source_directory}\")\n        return 0\n    if not os.path.isdir(source_directory):\n        print(f\"{source_directory} is not a directory\")\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    if not os.path.isdir(target_directory):\n        print(f\"Target directory does not exist: {target_directory}\")\n        return 0\n\n    # Create a list of files to move\n    file_list = os.listdir(source_directory)\n    matching_files = [f for f in file_list if re.search(pattern, f)]\n\n    # Move matching files to the target directory\n    count = 0\n    for f in matching_files:\n        source_path = os.path.join(source_directory, f)\n        target_path = os.path.join(target_directory", "tokens": ["#", " Check", " source", "_", "directory", " and", " target", "_", "directory", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "Source", " directory", " does", " not", " exist", ":", " {", "source", "_", "directory", "}\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "Target", " directory", " does", " not", " exist", ":", " {", "target", "_", "directory", "}\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " files", " to", " move", "\n", "    ", "file", "_", "list", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "    ", "matching", "_", "files", " =", " [", "f", " for", " f", " in", " file", "_", "list", " if", " re", ".", "search", "(", "pattern", ",", " f", ")]", "\n", "\n", "    ", "#", " Move", " matching", " files", " to", " the", " target", " directory", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " f", " in", " matching", "_", "files", ":", "\n", "        ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " f", ")", "\n", "        ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory"], "logprobs": [-1.6943392753601074, -0.8999425768852234, -2.9988958835601807, -0.7170345187187195, -0.003489478724077344, -1.820532202720642, -0.03260103985667229, -0.004402587655931711, -0.001189596951007843, -0.7267508506774902, -1.1331385374069214, -0.004017853643745184, -0.07083874940872192, -0.04596712067723274, -0.060929637402296066, -1.490105023549404e-05, -0.0002244459028588608, -0.01175842434167862, -0.6250473856925964, -0.00010406429646536708, -0.0023241431917995214, -3.325883881188929e-05, -1.2397689715726301e-05, -0.227200448513031, -0.007084369193762541, -0.0006048041977919638, -1.0359629392623901, -0.09080719202756882, -0.2651694118976593, -0.09535083919763565, -0.5968384146690369, -0.01919819787144661, -2.7047436237335205, -0.0002015625941567123, -0.001328777172602713, -0.031898900866508484, -0.009851880371570587, -0.0010594476480036974, -3.528532761265524e-05, -9.703165414975956e-05, -0.04231258109211922, -0.0006479309522546828, -0.007782731670886278, -0.00878493208438158, -0.004734733607620001, -0.004255050793290138, -0.00015233787416946143, -0.010795877315104008, -0.5238854289054871, -0.1526748090982437, -0.01811320148408413, -0.0018306892598047853, -2.7417760065873154e-05, -5.590759246842936e-05, -0.0004295380203984678, -0.12181529402732849, -0.0004204819560982287, -6.341733387671411e-05, -0.005520574748516083, -1.5258672647178173e-05, -1.3947389561508317e-05, -0.0008650851668789983, -0.0009952597320079803, -0.0002512616047170013, -0.008298558183014393, -0.0006355411605909467, -0.04113947972655296, -0.0008394769974984229, -1.8494004011154175, -0.0009968079393729568, -0.00020311199477873743, -0.0003583981015253812, -0.0023871755693107843, -0.015623549930751324, -0.004273687023669481, -0.0030667202081531286, -0.020060043781995773, -0.2804107367992401, -0.00011705666838679463, -0.0011762612266466022, -0.0045006172731518745, -0.0017016944475471973, -0.0009373800130560994, -0.00014780859055463225, -0.0007221474661491811, -0.5704647898674011, -0.06196582317352295, -0.01209167018532753, -0.0020599591080099344, -0.00030596344731748104, -0.0007961202645674348, -0.00037865620106458664, -0.014301540330052376, -5.400034933700226e-05, -0.00037722624256275594, -3.2186455882765586e-06, -1.3708974620385561e-05, -0.003185200970619917, -0.0014263942139223218, -0.0008742563077248633, -0.19234752655029297, -0.00023016665363684297, -0.31477272510528564, -2.658331868587993e-05, -0.0014261561445891857, -0.00033087024348787963, -0.0022580146323889494, -1.5020257706055418e-05, -3.361645576660521e-05, -0.08674528449773788, -0.016007013618946075, -1.0858304500579834, -0.8816121816635132, -0.020059343427419662, -0.007045425474643707, -0.00013565097469836473, -0.0012149580288678408, -0.0011957883834838867, -0.0170136671513319, -0.0006964165368117392, -6.770858453819528e-05, -0.0016933638835325837, -8.34461570775602e-06, -5.566918844124302e-05, -0.0005032941699028015, -0.000764792668633163, -0.00018630675913300365, -0.01267955545336008, -0.0009858515113592148, -0.004575022961944342, -0.0006206493126228452, -0.34087657928466797, -0.006631983909755945, -0.24242889881134033, -0.0005504761938937008, -0.0033254106529057026, -0.09055786579847336, -0.001392586505971849, -0.0076203132048249245, -0.0001662831346038729, -0.0003833036171272397, -0.012326842173933983, -0.00017069313616957515, -0.0002935693773906678, -0.006157712545245886, -0.006361472886055708, -0.0011183919850736856, -0.0002609150833450258, -0.000582525331992656, -0.2719411551952362, -0.0008119623525999486, -0.32797524333000183, -2.9505176544189453, -0.5709719657897949, -0.7661193609237671, -0.12774062156677246, -0.8692730665206909, -0.8285344243049622, -0.157949298620224, -0.23582713305950165, -0.0005322470096871257, -1.7079803943634033, -0.005320199765264988, -0.08496313542127609, -0.05202906206250191, -2.7373228073120117, -7.748573807475623e-06, -0.008019392378628254, -3.2186455882765586e-06, -0.0002774807217065245, -0.0012617491884157062, -2.50339189733495e-06, -6.794906312279636e-06, -0.00035613393993116915, -0.0021734442561864853, -0.1501351147890091, -2.8600172996520996, -0.0026653024833649397, -0.06119285151362419, -0.012020177207887173, -0.602085530757904, -0.6760075688362122, -0.016228247433900833, -0.00014006110723130405, -0.0001734344696160406, -0.001413180842064321, -2.3841855067985307e-07, -4.0531076592742465e-06, -0.008266755379736423, -0.021224861964583397, -7.271740287251305e-06, -0.49076858162879944, -0.0002611534437164664, -0.005350910592824221, -0.0010252702049911022, -0.028886230662465096, -0.043393682688474655, -0.003977365326136351, -0.22337079048156738, -0.00017176583060063422, -0.12745784223079681, -0.07328268140554428, -1.2586859464645386, -0.006729795131832361, -0.19623257219791412, -1.2745230197906494, -0.008634377270936966, -0.015207887627184391, -0.02305593155324459, -0.00048303857329301536, -2.753169536590576, -0.00848474446684122, -0.021910740062594414, -0.0007229813490994275, -0.010671808384358883, -0.005788231268525124, -0.015261424705386162, -0.5387855768203735, -0.002201635157689452, -0.00619858643040061, -5.960462772236497e-07, -6.437280717364047e-06, -0.00011002412065863609, -0.00047338721924461424, -0.0005934861255809665, -0.5064327120780945, -0.14216922223567963, -0.637806236743927, -0.00034338299883529544, -0.012981546111404896, -2.50339189733495e-06, -1.2993727978027891e-05, -0.0007346553611569107, -0.0001392267586197704, -5.400034933700226e-05, -0.0006740205571986735, -2.0503786799963564e-05, -6.437280717364047e-06, -5.864924969500862e-05, -0.0005461869877763093, -6.4490144723095e-05, -0.0012721073580905795, -0.00023016665363684297, -0.028052015230059624, -0.00010311071673640981, -0.000523430178873241, -8.237022848334163e-05, -0.0006594866863451898, -4.184158387943171e-05, -3.3378546504536644e-06, -0.00032085992279462516, -4.970903682988137e-05, -2.47952248173533e-05, -0.0009873997187241912, -2.7418097943154862e-06, -8.34461570775602e-06], "finish_reason": "length"}], "metrics": {"energy": 274.3997657451628, "energy_per_token": 1.0718740849420423, "time": 11.343004, "time_per_token": 0.044308609375}}
{"outputs": [{"text": "# check if source_directory exists\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # create target directory if it doesn't exist\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    # move files that match the pattern from source_directory to target_directory\n    moved_files = 0\n    for filename in os.listdir(source_directory):\n        match = re.search(pattern, filename)\n        if match:\n            source_filepath = os.path.join(source_directory, filename)\n            target_filepath = os.path.join(target_directory, filename)\n            shutil.move(source_filepath, target_filepath)\n            moved_files += 1\n    return moved_files", "tokens": ["#", " check", " if", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " move", " files", " that", " match", " the", " pattern", " from", " source", "_", "directory", " to", " target", "_", "directory", "\n", "    ", "m", "oved", "_", "files", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "target", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "file", "path", ",", " target", "_", "file", "path", ")", "\n", "            ", "m", "oved", "_", "files", " +=", " ", "1", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.6943392753601074, -3.00899338722229, -0.5378931760787964, -0.19781048595905304, -0.4783613979816437, -0.007999170571565628, -0.17162446677684784, -1.6270846128463745, -0.0020783983636647463, -0.04979914054274559, -0.03867961838841438, -0.00864217709749937, -1.2755313036905136e-05, -0.0001510267611593008, -0.00541149964556098, -0.28143957257270813, -0.0002411313180346042, -5.566918844124302e-05, -0.001073380233719945, -7.593343616463244e-05, -1.8954096958623268e-05, -0.0017635759431868792, -0.003987576812505722, -0.0007176207727752626, -0.4036071300506592, -0.0029488196596503258, -8.511180931236595e-05, -0.01635010540485382, -0.19194136559963226, -0.0005553610390052199, -0.10711683332920074, -0.7572342753410339, -0.06871375441551208, -0.5867172479629517, -0.04652940109372139, -0.09104578197002411, -0.3649868965148926, -0.00041321321623399854, -1.0847986231965479e-05, -0.06876061111688614, -0.04007541015744209, -0.0002022777043748647, -0.20936362445354462, -0.0027795510832220316, -0.0006301801186054945, -0.0004670721245929599, -2.52720492426306e-05, -0.0018330690218135715, -0.5556023716926575, -0.00010024998482549563, -6.437094270950183e-05, -0.0013387774815782905, -7.152555099310121e-07, -2.002696055569686e-05, -0.0018730491865426302, -0.000770391256082803, -0.0005318895564414561, -0.04454191029071808, -0.00021586472576018423, -0.24967028200626373, -9.298280929215252e-06, -0.0010344398906454444, -0.0001292145170737058, -0.001353658502921462, -1.5020257706055418e-05, -2.6225699912174605e-05, -0.05825198441743851, -0.0022903657518327236, -0.01163435634225607, -0.0008039817912504077, -0.19091591238975525, -2.1618824005126953, -0.16425544023513794, -2.9910802841186523, -0.02238587662577629, -0.3805849850177765, -0.2220478504896164, -1.6818807125091553, -0.13483130931854248, -0.31383299827575684, -0.0047149197198450565, -0.017401518300175667, -0.006949421018362045, -0.01157284714281559, -0.0009676303598098457, -0.012672139331698418, -0.00279357866384089, -3.0760602951049805, -0.056491393595933914, -0.10048380494117737, -0.2266823798418045, -0.02988220751285553, -0.028887273743748665, -1.585470999998506e-05, -0.013240508735179901, -0.05946427956223488, -0.09835763275623322, -0.5996667146682739, -0.0008667526417411864, -0.011490829288959503, -2.8132995794294402e-05, -0.00015770144818816334, -1.4305104514278355e-06, -0.00013553177996072918, -0.0006173135479912162, -1.811964830267243e-05, -5.8412379075889476e-06, -0.00010930894495686516, -0.002598958555608988, -0.0011335145682096481, -0.7129674553871155, -0.013125448487699032, -0.002800473477691412, -7.867782187531702e-06, -0.6195517778396606, -0.00026472879108041525, -0.004795716144144535, -0.0004395472351461649, -0.005721738561987877, -0.008917270228266716, -0.004247097764164209, -0.009236345067620277, -0.0036543512251228094, -0.004304904956370592, -0.1126117929816246, -0.008822744712233543, -0.0003575639275368303, -0.38857176899909973, -0.11704334616661072, -0.4166108965873718, -2.1467056274414062, -0.00019786784832831472, -0.010101976804435253, -4.768370445162873e-07, -1.4781842764932662e-05, -0.0017596489051356912, -7.497983460780233e-05, -3.635817120084539e-05, -0.0012474621180444956, -5.6622808187967166e-05, -7.986990567587782e-06, -3.6000557884108275e-05, -0.0025548457633703947, -2.706014311115723e-05, -0.0011312521528452635, -0.0007776573766022921, -0.04512482136487961, -0.0001438752660760656, -0.037617746740579605, -0.0003721021639648825, -6.925819616299123e-05, -0.0008858094224706292, -4.994744449504651e-05, -3.2186455882765586e-06, -0.0003499372396618128, -4.970903682988137e-05, -2.753696753643453e-05, -0.010137615725398064, -8.22540732769994e-06, -9.417489309271332e-06, -5.590759246842936e-05, -0.280755877494812, -0.001311395550146699, -0.0014800796052441, -0.012971191667020321, -0.36758163571357727, -3.0278701160568744e-05, -8.344646857949556e-07, -0.006454928312450647, -9.417489309271332e-06, -0.0009457168052904308, -6.794906312279636e-06, -0.00026341783814132214, -3.6954811548639555e-06, -3.2543604902457446e-05, -0.00021860594279132783, -1.5139465176616795e-05, -0.015381756238639355, -1.1920928244535389e-07, -0.0024952725507318974, -0.006931900046765804, -0.0007663412252441049, -0.028719790279865265, -1.2993727978027891e-05, -3.6954811548639555e-06, -1.2397689715726301e-05, -0.001431155833415687, -0.0007859955076128244, -1.4185804502631072e-05, -0.0009559590835124254, -1.2458207607269287, -0.0365753211081028, -0.0006924853660166264, -0.00013219437096267939, -9.65590606938349e-06, -0.580537736415863, -0.009181184694170952, -0.5830264091491699], "finish_reason": "stop"}], "metrics": {"energy": 243.92607161521914, "energy_per_token": 1.2319498566425209, "time": 8.629508, "time_per_token": 0.04358337373737373}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        print('Source directory does not exist or is not a directory')\n        return 0\n    elif not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n    elif os.path.isfile(source_directory):\n        print('Source directory is not a directory')\n        return 0\n    elif not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    else:\n        pass\n\n    pattern = re.compile(pattern)\n    total_moved = 0\n\n    for filename in os.listdir(source_directory):\n        if pattern.match(filename):\n            shutil.move(\n                os.path.join(source_directory, filename),\n                os.path.join(target_directory, filename)\n            )\n            total_moved += 1\n\n    return total_moved", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "('", "Source", " directory", " does", " not", " exist", " or", " is", " not", " a", " directory", "')", "\n", "        ", "return", " ", "0", "\n", "    ", "elif", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "elif", " os", ".", "path", ".", "is", "file", "(", "source", "_", "directory", "):", "\n", "        ", "print", "('", "Source", " directory", " is", " not", " a", " directory", "')", "\n", "        ", "return", " ", "0", "\n", "    ", "elif", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "else", ":", "\n", "        ", "pass", "\n", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "total", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " pattern", ".", "match", "(", "filename", "):", "\n", "            ", "sh", "util", ".", "move", "(", "\n", "                ", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", ",", "\n", "                ", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "            ", ")", "\n", "            ", "total", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " total", "_", "m", "oved"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -1.5891640186309814, -1.915425181388855, -0.9461318850517273, -0.12020561099052429, -0.1259259581565857, -0.00044228785554878414, -0.001648973091505468, -0.14524231851100922, -0.02645219676196575, -0.002351972972974181, -0.0018245016690343618, -0.004352976102381945, -0.8929093480110168, -0.004971642047166824, -0.007207463961094618, -0.014693615958094597, -0.00927685759961605, -0.00018034738604910672, -0.008670658804476261, -1.195565104484558, -2.4960482120513916, -0.0681874230504036, -0.009164057672023773, -0.003003374207764864, -0.0034139228519052267, -0.0035044467076659203, -0.35835617780685425, -0.005913974717259407, -0.0002195594133809209, -0.00360398949123919, -3.933898824470816e-06, -3.957670196541585e-05, -0.003650312777608633, -0.0031785464379936457, -0.0014951966004446149, -0.3504764139652252, -0.000362807244528085, -0.3028809726238251, -2.634490556374658e-05, -0.004000756423920393, -0.0034589481074362993, -0.00460931658744812, -1.6331539882230572e-05, -5.98412734689191e-05, -0.0982070118188858, -0.02032523974776268, -0.29756665229797363, -3.2808475494384766, -1.0230944156646729, -0.003176645142957568, -0.3053796887397766, -0.026959877461194992, -0.6142240166664124, -0.8201349973678589, -0.013678508810698986, -0.9096822142601013, -0.000542612629942596, -0.0006512666586786509, -0.10999603569507599, -0.01650911755859852, -0.0014188947388902307, -0.19367535412311554, -0.1482924371957779, -0.19569085538387299, -0.11698745936155319, -1.2115105390548706, -1.2639930248260498, -0.013662398792803288, -0.022184422239661217, -0.1438852995634079, -0.00042655906872823834, -0.021060876548290253, -0.0027601737529039383, -0.004492072854191065, -0.002679450437426567, -0.00039104922325350344, -0.514879047870636, -1.077553153038025, -0.6696958541870117, -0.19723761081695557, -0.0008108903421089053, -0.05494414269924164, -0.008673259057104588, -1.713997483253479, -0.0017578639090061188, -0.4351920783519745, -6.103329360485077e-05, -0.00013302871957421303, -0.015614161267876625, -0.002764096949249506, -0.0016030330443754792, -0.2549462616443634, -0.000309657771140337, -0.06163298711180687, -9.893881360767409e-05, -0.0023272354155778885, -0.0017431078013032675, -0.007185923866927624, -3.71926071238704e-05, -0.00021646064124070108, -0.0020285521168261766, -0.0021707084961235523, -0.41713160276412964, -1.103355050086975, -0.0002470903273206204, -0.013924123719334602, -0.007928803563117981, -1.6786376237869263, -0.007440001238137484, -0.6631388068199158, -0.0019828674849122763, -2.468721389770508, -0.23674990236759186, -0.061406441032886505, -0.00013481661153491586, -0.002788942540064454, -0.0028047531377524137, -0.036078937351703644, -0.01201134268194437, -0.016724614426493645, -0.3213614225387573, -4.195486545562744, -0.422852098941803, -1.6514334678649902, -0.26459214091300964, -0.13929565250873566, -0.017535531893372536, -0.0004119024670217186, -0.006598825100809336, -1.103013277053833, -0.0003251500893384218, -0.12501198053359985, -1.040853500366211, -0.002173206303268671, -0.015200607478618622, -1.8358061424805783e-05, -0.001150541938841343, -1.8596476365928538e-05, -0.0009608419495634735, -0.002557342639192939, -3.8980677345534787e-05, -1.537788011773955e-05, -0.0004570631426759064, -0.00533039728179574, -0.005146114155650139, -1.3393059968948364, -0.3173653483390808, -0.0011917401570826769, -1.2796144485473633, -0.00013171759201213717, -0.0082169808447361, -0.07318972796201706, -0.005929024890065193, -0.0023570870980620384, -1.598504662513733, -9.190614218823612e-05, -1.0013530300057027e-05, -0.0313982293009758, -0.0027174947317689657, -2.4017181396484375, -0.004081966355443001, -0.09602368623018265, -1.7762025890988298e-05, -0.0006736631621606648, -2.932505594799295e-05, -0.0018167671514675021, -0.00019238528329879045, -0.025353197008371353, -0.00013565097469836473, -1.549708758830093e-05, -0.0005173536483198404, -0.0026200036518275738, -0.00023576818057335913, -0.0014988866169005632, -0.09813147783279419, -0.0001674750237725675, -0.0016332633094862103, -4.994744449504651e-05, -1.7881233361549675e-05, -6.794906312279636e-06, -0.0001463782973587513, -6.270212179515511e-05, -0.008611802943050861, -3.4570634852570947e-06, -2.2649508537142538e-05, -0.0011594723910093307, -0.012188594788312912, -0.15244248509407043, -0.3304981291294098, -0.02786688692867756, -0.0019614521879702806, -0.001718236249871552, -0.006712744012475014, -0.08679348975419998, -7.593343616463244e-05, -0.0001736728590913117, -7.986990567587782e-06, -0.011406446807086468, -0.004564699251204729, -2.95634672511369e-05, -0.0017835675971582532, -0.521668553352356, -0.005645995959639549, -0.2918769419193268, -0.0049746073782444, -7.092700980138034e-05, -3.969590397900902e-05, -2.3245540432981215e-05], "finish_reason": "stop"}], "metrics": {"energy": 257.25056575012206, "energy_per_token": 1.1535899809422514, "time": 9.670891, "time_per_token": 0.043367224215246636}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        return 0\n    target_directory = os.path.join(target_directory, source_directory)\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    file_count = 0\n    for filename in os.listdir(source_directory):\n        match = re.search(pattern, filename)\n        if match:\n            file_path = os.path.join(source_directory, filename)\n            shutil.move(file_path, target_directory)\n            file_count += 1\n    return file_count", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " source", "_", "directory", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "directory", ")", "\n", "            ", "file", "_", "count", " +=", " ", "1", "\n", "    ", "return", " file", "_", "count", "\n", "\n", "#"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -0.33724328875541687, -0.0040573906153440475, -8.523101132595912e-05, -0.012767714448273182, -1.2700341939926147, -1.8249397277832031, -0.022185122594237328, -0.10007511079311371, -0.1186714619398117, -0.13837720453739166, -0.0023279490415006876, -0.0005980133428238332, -0.023853585124015808, -1.7061433792114258, -0.003101659705862403, -0.08354422450065613, -7.533743337262422e-05, -4.51792984677013e-05, -0.013470353558659554, -3.2897911071777344, -0.00016366096679121256, -0.002711193636059761, -0.4406096339225769, -0.024717360734939575, -0.040053535252809525, -0.7027014493942261, -0.010884792543947697, -0.0025222653057426214, -0.00014447122521232814, -0.00010859376925509423, -0.0005793085438199341, -0.7183367013931274, -9.965400386136025e-05, -0.005896435584872961, -4.291525328881107e-06, -5.566918844124302e-05, -0.002592062344774604, -0.002976156771183014, -0.0008753282018005848, -0.020822729915380478, -0.0002531684876885265, -0.16521744430065155, -2.7894584491150454e-05, -0.0007593132322654128, -0.00018869050836656243, -0.002060672966763377, -2.253030106658116e-05, -1.2397689715726301e-05, -0.030195705592632294, -0.0035333128180354834, -0.2343682050704956, -2.017273426055908, -0.011402793228626251, -0.46900925040245056, -0.012798667885363102, -0.015486110933125019, -0.0005601267330348492, -0.009115980938076973, -0.03744092583656311, -0.21507610380649567, -0.786533534526825, -0.0013784202747046947, -0.02517768181860447, -7.748303323751315e-05, -0.00044586253352463245, -5.960446742392378e-06, -0.0008844992844387889, -0.002112420741468668, -3.6000557884108275e-05, -1.07287787614041e-05, -0.0003543464408721775, -0.0030946482438594103, -0.0006068295333534479, -0.4923434555530548, -0.029036199674010277, -0.004286150448024273, -1.597391747054644e-05, -0.5901021957397461, -0.0003829461056739092, -0.006495553068816662, -0.0016901507042348385, -0.011198288761079311, -0.01571614295244217, -0.0031653561163693666, -0.0011978124966844916, -0.005521878600120544, -0.02452591434121132, -0.1702929437160492, -0.005893946625292301, -0.0003854485403280705, -1.4676642417907715, -0.3619784116744995, -0.7538170218467712, -0.002509304089471698, -0.002702990546822548, -5.602820692729438e-06, -0.00012146688823122531, -0.0005969410995021462, -0.00028868322260677814, -0.00016544880054425448, -0.01376258209347725, -2.2411095415009186e-05, -9.059865078597795e-06, -0.00012110930401831865, -0.008212960325181484, -8.654219709569588e-05, -0.0006824786541983485, -0.0006700892699882388, -0.5929663777351379, -9.250213042832911e-05, -7.986990567587782e-06, -0.014045791700482368, -3.480850500636734e-05, -0.005309409461915493, -0.0002681849291548133, -1.3589766240329482e-05, -0.00011824862303910777, -0.5268665552139282, -1.6093124941107817e-05, -1.4662635294371285e-05, -0.026019757613539696, -0.00494969729334116, -0.0010236029047518969, -0.03307262435555458, -1.847726889536716e-05, -0.00022468426323030144, -0.0030441395938396454, -0.001179595128633082, -1.156323378381785e-05, -0.0005249790847301483, -0.04001264646649361, -0.049835093319416046, -0.0005449955351650715, -2.169585604860913e-05, -6.556489552167477e-06, -0.40924975275993347, -0.010522008873522282, -2.4684667587280273], "finish_reason": "stop"}], "metrics": {"energy": 161.83115378952022, "energy_per_token": 1.0577199594086288, "time": 6.5256915, "time_per_token": 0.042651578431372544}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        return 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    num_moved = 0\n    for file_name in os.listdir(source_directory):\n        if re.match(pattern, file_name):\n            full_file_path = os.path.join(source_directory, file_name)\n            shutil.move(full_file_path, os.path.join(target_directory, file_name))\n            num_moved += 1\n    return num_moved", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "num", "_", "m", "oved", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " file", "_", "name", "):", "\n", "            ", "full", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "full", "_", "file", "_", "path", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", "))", "\n", "            ", "num", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " num", "_", "m", "oved", "\n", "\n", "def"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -0.24824480712413788, -0.019514478743076324, -0.000724887300748378, -0.30794304609298706, -0.003909802529960871, -8.940297266235575e-05, -0.012510395608842373, -0.7222228646278381, -0.3650386929512024, -0.03209228813648224, -0.012208497151732445, -0.0007775382255204022, -0.00021205084340181202, -0.008127118460834026, -0.003109622048214078, -0.000902007392141968, -6.472854875028133e-05, -0.0018087946809828281, -4.672895011026412e-05, -3.135155202471651e-05, -0.0013987767742946744, -0.003092746715992689, -0.00028451209072954953, -0.055379707366228104, -0.0016087458934634924, -0.00029225845355540514, -0.0008650851668789983, -0.5936271548271179, -0.28449252247810364, -0.022833989933133125, -0.007262733764946461, -0.0003522014303598553, -0.0009447640040889382, -0.000709282117895782, -0.028338739648461342, -0.00017212340026162565, -0.0018180761253461242, -3.4570634852570947e-06, -2.8013790142722428e-05, -0.004648711532354355, -0.00173049361910671, -0.0009068905492313206, -0.03450700640678406, -0.00021586472576018423, -0.37315651774406433, -3.1470757676288486e-05, -0.002463760320097208, -0.0005532164941541851, -0.0025254758074879646, -1.4543427823809907e-05, -3.540453326422721e-05, -0.05006926879286766, -0.005511208903044462, -0.6429347395896912, -3.2725000381469727, -0.0193030908703804, -0.9349671602249146, -0.06219593808054924, -0.10547664016485214, -0.010526726953685284, -6.592056161025539e-05, -0.007933533750474453, -0.06233707442879677, -0.2263849824666977, -1.1991972923278809, -0.5667669773101807, -0.08930966258049011, -0.00318508199416101, -0.014026161283254623, -1.549708758830093e-05, -0.0001591317413840443, -3.2186455882765586e-06, -0.00020394629973452538, -0.0006909366929903626, -2.1815061700181104e-05, -4.6491513785440475e-06, -0.000494715350214392, -0.0043578422628343105, -0.0005208089714869857, -1.0584008693695068, -0.11100684106349945, -1.1920858014491387e-05, -0.6733347773551941, -0.0003923600015696138, -0.005613515619188547, -0.003004800295457244, -0.005878540687263012, -2.098061486321967e-05, -2.396077979938127e-05, -0.11567000299692154, -0.017634624615311623, -0.0006328010931611061, -2.8417558670043945, -0.002552348654717207, -1.620843529701233, -0.00927957333624363, -0.522167444229126, -0.002693003974854946, -0.01608303189277649, -1.4305104514278355e-06, -4.434487345861271e-05, -0.0008686583023518324, -0.0003670972364488989, -0.0001232548092957586, -0.0073112547397613525, -1.2278481335670222e-05, -1.0847986231965479e-05, -0.00011467275908216834, -0.0007390628452412784, -4.768370445162873e-07, -9.894321920000948e-06, -0.00010716341057559475, -0.0010333680547773838, -0.0008474572678096592, -0.5948238968849182, -0.00015484087634831667, -6.9141146923357155e-06, -0.04035298153758049, -2.3483953555114567e-05, -0.0037032850086688995, -1.597391747054644e-05, -4.6491513785440475e-06, -1.3589766240329482e-05, -1.9073468138230965e-06, -0.00010930894495686516, -0.4903932809829712, -2.50339189733495e-06, -2.932505594799295e-05, -0.00032693761750124395, -0.00011085849109804258, -3.802703940891661e-05, -0.0022067499812692404, -2.9802276912960224e-06, -2.0503786799963564e-05, -0.003052458632737398, -0.008461694233119488, -1.1920858014491387e-05, -2.2411095415009186e-05, -0.0010894560255110264, -0.003600901225581765, -0.001157329068519175, -0.017103437334299088, -2.3841830625315197e-06, -2.6225699912174605e-05, -3.3378546504536644e-06, -0.0037632614839822054, -0.0015303102554753423, -1.2278481335670222e-05, -0.0014038955559954047, -0.030655592679977417, -0.03342074900865555, -0.0006569849792867899, -0.00010823617776622996, -1.4662635294371285e-05, -6.925819616299123e-05, -0.5297276377677917, -0.008213906548917294, -1.4445282220840454], "finish_reason": "stop"}], "metrics": {"energy": 194.96756414508826, "energy_per_token": 1.1536542257105815, "time": 7.352848, "time_per_token": 0.04350797633136094}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        return 0\n\n    if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n\n    files = []\n\n    for file_name in os.listdir(source_directory):\n        if re.match(pattern, file_name):\n            file_path = os.path.join(source_directory, file_name)\n            files.append(file_path)\n\n    file_count = len(files)\n\n    if file_count > 0:\n        os.makedirs(target_directory, exist_ok=True)\n\n        for file in files:\n            shutil.move(file, target_directory)\n\n    return file_count", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "files", " =", " []", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " file", "_", "name", "):", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "files", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "file", "_", "count", " =", " len", "(", "files", ")", "\n", "\n", "    ", "if", " file", "_", "count", " >", " ", "0", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "directory", ")", "\n", "\n", "    ", "return", " file", "_", "count", "\n", "\n", "if"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -0.24824480712413788, -0.019514478743076324, -0.000724887300748378, -0.30794304609298706, -0.003909802529960871, -8.940297266235575e-05, -0.012510395608842373, -0.6656318306922913, -0.0001358893496217206, -0.4174135625362396, -0.04845775291323662, -0.013621711172163486, -0.0010605193674564362, -0.00020346954988781363, -0.007355867885053158, -0.005039963871240616, -0.00114125432446599, -6.186770770000294e-05, -0.0036834506317973137, -4.708655978902243e-05, -3.564294092939235e-05, -0.0019290901254862547, -0.00368095631711185, -0.0002814135223161429, -0.06860946863889694, -0.0018230738351121545, -0.00030048147891648114, -0.0007146426942199469, -0.006927283015102148, -0.0001817776501411572, -0.5562484264373779, -0.03697231784462929, -0.012284686788916588, -0.0003522014303598553, -0.0007616956136189401, -0.0006411403883248568, -0.03260611742734909, -0.00017987063620239496, -0.0011641160817816854, -5.960446742392378e-06, -2.3007127310847864e-05, -0.0037972265854477882, -0.0012265071272850037, -0.0008983152220025659, -0.042143676429986954, -0.00018285033002030104, -1.1934237480163574, -4.5536911784438416e-05, -0.0008487674640491605, -0.002792390063405037, -1.5258672647178173e-05, -6.460934673668817e-05, -0.006704573519527912, -0.0031639300286769867, -0.04054829105734825, -0.0008492438937537372, -2.2897212505340576, -0.881281852722168, -1.7782237529754639, -0.013621240854263306, -1.8991354703903198, -0.00017450717859901488, -0.14489896595478058, -0.8701875805854797, -0.8832975625991821, -0.15807968378067017, -0.00441350694745779, -0.008462049067020416, -1.7404405298293568e-05, -0.0003053675754927099, -4.768360213347478e-06, -0.0004742213059216738, -0.0009440494468435645, -1.4543427823809907e-05, -5.006777428206988e-06, -0.0004951919545419514, -0.0041359844617545605, -0.00909979734569788, -0.5566133260726929, -0.09980004280805588, -1.2755313036905136e-05, -0.8601242899894714, -0.00032658010604791343, -0.006264691706746817, -0.0011829291470348835, -0.005112668965011835, -1.5735502529423684e-05, -1.8358061424805783e-05, -0.11594276875257492, -0.00788882840424776, -0.0012406755704432726, -1.4347355365753174, -0.22961774468421936, -0.01983650028705597, -0.0008304246584884822, -0.008478361181914806, -2.3841830625315197e-06, -4.1126360883936286e-05, -0.0006837890832684934, -0.00020644917094614357, -0.00012361239350866526, -0.00447284709662199, -3.2782016205601394e-05, -1.1086402082582936e-05, -0.00012087091454304755, -0.000510204816237092, -2.3841855067985307e-07, -1.9550132492440753e-05, -0.00010656742961145937, -0.0006032554083503783, -0.01955258846282959, -0.28560516238212585, -0.0008434075862169266, -0.00047434045700356364, -0.053964920341968536, -0.03265330567955971, -0.00013863079948350787, -0.031551748514175415, -0.000259723310591653, -0.002692884998396039, -0.027211301028728485, -0.0037124301306903362, -3.6403658390045166, -0.0023520919494330883, -0.13584274053573608, -0.004881251137703657, -0.15089963376522064, -0.00013541258522309363, -0.001419847016222775, -0.0001292145170737058, -0.002233750419691205, -0.4784594476222992, -6.854299135738984e-05, -0.7373294234275818, -0.12512201070785522, -4.529942543740617e-06, -1.3112935448589269e-05, -1.092867136001587, -0.00022873646230436862, -0.0031028480734676123, -0.0007893307483755052, -0.003340262221172452, -0.002223521238192916, -2.788409471511841, -2.407998726994265e-05, -2.1269588470458984, -0.0003667397249955684, -0.002091603120788932, -0.01538527850061655, -0.08276690542697906, -1.3351351299206726e-05, -5.006664650863968e-05, -0.11331219226121902, -0.004578464198857546, -1.1920928244535389e-07, -5.507317473529838e-05, -0.003941269125789404, -0.0033949140924960375, -0.0020377126056700945, -0.02532007358968258, -0.3319856822490692, -0.006698060780763626, -0.05780326575040817, -0.1215318888425827, -0.4980057179927826, -0.001712642959319055, -0.00038556772051379085, -0.0003551805857568979, -0.0006342306733131409, -0.3242814540863037, -4.1126360883936286e-05, -2.264974000354414e-06, -0.04630668833851814, -3.182837463100441e-05, -0.004676120821386576, -0.00038818930624984205, -0.23640862107276917, -1.0728830375228426e-06, -5.006777428206988e-06, -0.012780542485415936, -0.004247928503900766, -0.05547353997826576, -0.12790091335773468, -0.019307533279061317, -0.004183707758784294, -3.099436753473128e-06, -8.940656698541716e-06, -0.6524578332901001, -0.0035750067327171564, -0.6346690058708191], "finish_reason": "stop"}], "metrics": {"energy": 213.93487846374506, "energy_per_token": 1.064352629172861, "time": 8.619882, "time_per_token": 0.04288498507462687}}
{"outputs": [{"text": "files_moved = 0\n\n    if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    pattern = re.compile(pattern)\n\n    for file_name in os.listdir(source_directory):\n        match = pattern.match(file_name)\n\n        if match:\n            file_path = os.path.join(source_directory, file_name)\n            new_file_name = match.group()\n            new_file_path = os.path.join(target_directory, new_file_name)\n            shutil.move(file_path, new_file_path)\n            files_moved += 1\n\n    return files_moved", "tokens": ["files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "pattern", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " pattern", ".", "match", "(", "file", "_", "name", ")", "\n", "\n", "        ", "if", " match", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "            ", "new", "_", "file", "_", "name", " =", " match", ".", "group", "()", "\n", "            ", "new", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " new", "_", "file", "_", "name", ")", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " new", "_", "file", "_", "path", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " files", "_", "m", "oved", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.271859645843506, -0.5579137802124023, -0.6390483379364014, -0.0005912224878557026, -0.05888697877526283, -0.014427040703594685, -4.458328112377785e-05, -0.038430601358413696, -0.665179967880249, -0.00026127262390218675, -0.46422603726387024, -0.17474383115768433, -0.030164822936058044, -1.585470999998506e-05, -0.00028975578607060015, -0.005003787111490965, -0.34707432985305786, -0.00264366390183568, -5.507317473529838e-05, -0.008079465478658676, -6.5205356804654e-05, -3.0636318115284666e-05, -0.008587338030338287, -0.018008770421147346, -0.0006355411605909467, -0.42498618364334106, -0.7563515901565552, -0.00012337400403339416, -0.01538527850061655, -0.05556860566139221, -0.00027843413408845663, -2.5009918212890625, -0.032223425805568695, -0.006193255074322224, -0.0014072287594899535, -0.0007998128421604633, -0.0039406754076480865, -0.6295227408409119, -0.0033652123529464006, -9.154854342341423e-05, -0.0019051750423386693, -4.6491513785440475e-06, -2.6464111215318553e-05, -0.002758747199550271, -0.0014117523096501827, -0.0008102948195300996, -0.09549398720264435, -0.0004247716860845685, -0.31070491671562195, -1.2397689715726301e-05, -0.003938538022339344, -0.0004631400224752724, -0.001576253562234342, -1.7046782886609435e-05, -3.6477376852417365e-05, -0.09605346620082855, -0.011495542712509632, -0.012219566851854324, -0.0006835508393123746, -2.284052848815918, -0.14823508262634277, -0.03534586727619171, -4.458328112377785e-05, -0.0013429442187771201, -0.001141492510214448, -0.0344550646841526, -0.007598308380693197, -0.007960734888911247, -0.28504398465156555, -0.00011550712952157483, -0.07187481969594955, -0.7331981658935547, -0.6564896106719971, -0.09724753350019455, -0.0023987111635506153, -0.01137049961835146, -2.3603161025675945e-05, -0.00015233787416946143, -3.814689989667386e-06, -0.00014423283573705703, -0.00039295581518672407, -1.3112935448589269e-05, -3.4570634852570947e-06, -0.00023922442051116377, -0.0022031813859939575, -0.008463704027235508, -0.48763006925582886, -0.010783495381474495, -0.03318587318062782, -1.5258672647178173e-05, -1.2502844333648682, -4.672895011026412e-05, -0.004533726722002029, -3.6954811548639555e-06, -8.546940807718784e-05, -0.002124911407008767, -0.0021327624563127756, -1.4424580335617065, -0.00017236177518498152, -0.006906683556735516, -0.03337855264544487, -0.16460081934928894, -0.008191677741706371, -0.0009559590835124254, -1.546205997467041, -0.03840525075793266, -0.046581968665122986, -0.0028241295367479324, -0.012250537984073162, -1.1205610462639015e-05, -3.611976353568025e-05, -0.0008006466086953878, -0.0001472126314183697, -8.594620157964528e-05, -0.005227942951023579, -3.4927710657939315e-05, -8.702239938429557e-06, -6.365573790390044e-05, -0.0026770727708935738, -5.960462772236497e-07, -3.158996332786046e-05, -6.603976362384856e-05, -0.0008823553798720241, -0.06964373588562012, -1.9871137142181396, -6.794698856538162e-05, -0.22854286432266235, -0.0039026776794344187, -0.4671674966812134, -0.0006905793561600149, -1.4083915948867798, -0.01734340749680996, -0.009834527969360352, -0.6882685422897339, -1.5313359498977661, -0.05725528672337532, -0.1048927828669548, -1.7881233361549675e-05, -0.010871467180550098, -0.0009197533945553005, -0.01623551920056343, -0.00014101465058047324, -0.0017635759431868792, -4.0531076592742465e-06, -4.172316494077677e-06, -0.00036197309964336455, -5.94836674281396e-05, -5.531158240046352e-05, -0.016357257962226868, -3.6954811548639555e-06, -1.597391747054644e-05, -7.295342220459133e-05, -0.011430607177317142, -8.702239938429557e-06, -6.794906312279636e-06, -6.0794889577664435e-05, -7.247662142617628e-05, -0.11853425204753876, -0.02404923364520073, -0.98665452003479, -0.4160277247428894, -3.182837463100441e-05, -2.622600959512056e-06, -0.025762923061847687, -1.680836794548668e-05, -0.0008837846689857543, -7.199982064776123e-05, -0.00013863079948350787, -0.00010966652916977182, -0.0004931663861498237, -1.9073468138230965e-06, -3.2186455882765586e-06, -2.2411095415009186e-05, -5.9126061387360096e-05, -0.003002661047503352, -0.0030008782632648945, -0.0234613586217165, -0.0459846556186676, -2.145764938177308e-06, -2.1934269170742482e-05, -2.861018856492592e-06, -0.002174158114939928, -0.0009779914980754256, -1.3589766240329482e-05, -0.0021856960374861956, -0.03881103917956352, -0.0027524465695023537, -0.01883947104215622, -0.0010096696205437183, -1.549708758830093e-05, -1.6689160474925302e-05, -5.590759246842936e-05, -1.1025829315185547, -1.1920922133867862e-06, -4.768370445162873e-07, -7.271740287251305e-06, -0.00023779425828251988, -0.09897199273109436], "finish_reason": "stop"}], "metrics": {"energy": 239.593749666214, "energy_per_token": 1.2100694427586565, "time": 8.6052, "time_per_token": 0.04346060606060606}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        return 0\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    matches = [f for f in os.listdir(source_directory) if re.search(pattern, f)]\n    for match in matches:\n        shutil.move(os.path.join(source_directory, match), os.path.join(target_directory, match))\n    return len(matches)", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "matches", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", " if", " re", ".", "search", "(", "pattern", ",", " f", ")]", "\n", "    ", "for", " match", " in", " matches", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " match", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " match", "))", "\n", "    ", "return", " len", "(", "matches", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -0.33724328875541687, -0.0040573906153440475, -8.523101132595912e-05, -0.012767714448273182, -0.3307584822177887, -0.00017569905321579427, -2.6511003971099854, -0.030077721923589706, -0.011349048465490341, -0.0015826807357370853, -0.0013517538318410516, -0.003701859852299094, -0.7710302472114563, -0.0003412379592191428, -0.0022878681775182486, -2.6225699912174605e-05, -4.732496745418757e-05, -0.006119561847299337, -0.002792390063405037, -0.0006634180317632854, -0.026684017851948738, -0.0004530118894763291, -0.21903260052204132, -3.0278701160568744e-05, -0.0025769618805497885, -0.0002165798214264214, -0.0012286503333598375, -1.4543427823809907e-05, -2.0861407392658293e-05, -0.04489096626639366, -0.00782543234527111, -0.01622214913368225, -0.00038890427094884217, -3.7748208045959473, -0.02597910538315773, -2.196728229522705, -1.0990653038024902, -0.08030020445585251, -0.0009141556802205741, -0.0007121411035768688, -0.01543645840138197, -9.417489309271332e-06, -0.0005222387262620032, -4.172316494077677e-06, -0.00032789100077934563, -0.0019867937080562115, -1.0251946150674485e-05, -6.318072337307967e-06, -0.007026367355138063, -0.06432375311851501, -0.025795916095376015, -1.2993727978027891e-05, -0.5390750765800476, -0.00022635281493421644, -0.006770882289856672, -0.0009765623253770173, -0.02544535882771015, -0.03640567138791084, -0.0050900159403681755, -0.355878084897995, -0.9583175182342529, -0.5181211233139038, -0.002292982302606106, -0.0027505443431437016, -0.0004027270770166069, -0.0009553635609336197, -0.0016323111485689878, -0.527582049369812, -4.351044481154531e-05, -6.437280717364047e-06, -0.012527937069535255, -0.0015747062861919403, -0.1563064455986023, -1.597391747054644e-05, -0.0004312062228564173, -0.00018142008048016578, -0.0002687808300834149, -0.00010263393050990999, -0.0009370227344334126, -0.00014709345123264939, -1.2755313036905136e-05, -0.00025078488397412, -0.0014216327108442783, -7.86750388215296e-05, -0.00015364897262770683, -0.11052355170249939, -0.0001161031104857102, -9.536697689327411e-06, -8.046303264563903e-05, -2.52720492426306e-05, -4.339123915997334e-05, -0.003704591654241085, -8.583032467868179e-06, -2.109982233378105e-05, -0.0020361661445349455, -0.006016121711581945, -0.001947650802321732, -0.011476805433630943, -1.420690655708313, -0.026790795847773552, -0.004138002637773752, -0.0001971527235582471, -0.0006286313873715699, -1.3559027910232544, -2.264974000354414e-06, -5.960462772236497e-07, -9.536697689327411e-06, -0.00021860594279132783, -2.003706693649292, -0.004511416424065828], "finish_reason": "stop"}], "metrics": {"energy": 144.35504697990424, "energy_per_token": 1.154840375839234, "time": 5.2664385, "time_per_token": 0.042131508}}
{"outputs": [{"text": "# Check if source_directory exists and is a directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Create target_directory if it does not exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Find matching files and move them\n    matches = list()\n    for filename in os.listdir(source_directory):\n        if re.match(pattern, filename):\n            matches.append(filename)\n            shutil.move(os.path.join(source_directory, filename), target_directory)\n\n    return len(matches)", "tokens": ["#", " Check", " if", " source", "_", "directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " target", "_", "directory", " if", " it", " does", " not", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Find", " matching", " files", " and", " move", " them", "\n", "    ", "matches", " =", " list", "()", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", "):", "\n", "            ", "matches", ".", "append", "(", "filename", ")", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", ",", " target", "_", "directory", ")", "\n", "\n", "    ", "return", " len", "(", "matches", ")"], "logprobs": [-1.6943392753601074, -0.8999425768852234, -0.36428481340408325, -0.2014341950416565, -0.36538165807724, -0.00243926327675581, -0.08820692449808121, -0.31189072132110596, -0.0203692764043808, -0.0037074419669806957, -0.007205925416201353, -0.16726362705230713, -0.0008397151832468808, -0.01648695580661297, -0.044633690267801285, -0.013323089107871056, -6.794906312279636e-06, -0.00014232576359063387, -0.010592782869935036, -0.29701992869377136, -0.0003771070914808661, -2.2053474822314456e-05, -0.0006495987763628364, -5.376194530981593e-05, -1.4662635294371285e-05, -0.005516781006008387, -0.002209009835496545, -0.0006235085893422365, -0.3176150918006897, -0.0023888403084129095, -5.876845170860179e-05, -0.010415837168693542, -0.06024521216750145, -0.0003916450368706137, -0.07343810051679611, -0.6463326215744019, -0.08177557587623596, -0.8600422739982605, -0.0059119598008692265, -0.050264615565538406, -0.03355009853839874, -1.2132359743118286, -0.0002628219372127205, -0.037172190845012665, -0.026664866134524345, -0.00021240839851088822, -2.0260744094848633, -5.8412379075889476e-06, -0.003553862916305661, -1.4543427823809907e-05, -0.0003570872650016099, -0.00011014331539627165, -0.0038263218011707067, -5.125986263010418e-06, -1.2397689715726301e-05, -0.0015248350100591779, -0.0033205393701791763, 0.0, -4.0649541915627196e-05, -0.0028823756147176027, -0.0006603206275030971, -0.00032062159152701497, -0.014988893643021584, -0.013252154923975468, -0.0001431601122021675, -0.13508056104183197, -2.7257299423217773, -2.773643732070923, -0.3154556453227997, -1.1676015853881836, -0.12832209467887878, -0.013175921514630318, -2.3247640132904053, -0.00034624303225427866, -3.308319091796875, -0.009320084005594254, -3.279839515686035, -1.467852234840393, -0.030528297647833824, -0.02226661890745163, -0.1367882639169693, -0.5418939590454102, -0.0012471048394218087, -0.01233378890901804, -2.5748875486897305e-05, -0.0007676515378989279, -3.3378546504536644e-06, -0.00025912740966305137, -0.0006573423161171377, -2.706014311115723e-05, -4.0531076592742465e-06, -0.00020466140995267779, -0.0017749997787177563, -0.0012325793504714966, -1.461173176765442, -0.050257358700037, -8.4638240878121e-06, -0.7812671661376953, -0.00031025364296510816, -0.007698627654463053, -0.0023462644312530756, -0.010398495011031628, -0.07225749641656876, -0.009720256552100182, -0.0006636562757194042, -0.6042340993881226, -0.0007283418672159314, -0.0012010273057967424, -0.01939382404088974, -0.5451238751411438, -0.00026520551182329655, -0.002491348423063755, -0.6605063080787659, -0.5538836121559143, -3.2543604902457446e-05, -4.887569048150908e-06, -0.009011432528495789, -0.005922388285398483, -0.18949367105960846, -0.0007205988513305783, -0.0007007050444371998, -0.0009509570081718266, -0.00012087091454304755, -5.721882189391181e-05, -0.0016174342017620802, -0.00015352977789007127, -1.4662635294371285e-05, -0.00012730741582345217, -0.001773571828380227, -3.3854863431770355e-05, -0.0001110968878492713, -2.516460418701172, -2.6702524337451905e-05, -2.288792165927589e-05, -0.008627049624919891, -0.0028937868773937225, -0.19569997489452362, -0.0020889858715236187, -0.2320462167263031, -0.0025179844815284014, -7.509902934543788e-05, -0.00047886825632303953, -0.3237915635108948], "finish_reason": "stop"}], "metrics": {"energy": 153.88195185947419, "energy_per_token": 1.0760975654508684, "time": 6.104524, "time_per_token": 0.04268897902097902}}
{"outputs": [{"text": "if not os.path.exists(source_directory) or not os.path.isdir(source_directory):\n        return 0\n\n    move_count = 0\n\n    for file_name in os.listdir(source_directory):\n        file_path = os.path.join(source_directory, file_name)\n\n        if re.search(pattern, file_name):\n            target_path = os.path.join(target_directory, file_name)\n\n            try:\n                os.makedirs(target_directory, exist_ok=True)\n                shutil.move(file_path, target_path)\n                move_count += 1\n            except Exception as e:\n                print(f\"Error moving {file_path} to {target_path}: {e}\")\n\n    return move_count", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "move", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "name", ")", "\n", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " file", "_", "name", "):", "\n", "            ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "_", "name", ")", "\n", "\n", "            ", "try", ":", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " target", "_", "path", ")", "\n", "                ", "move", "_", "count", " +=", " ", "1", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "Error", " moving", " {", "file", "_", "path", "}", " to", " {", "target", "_", "path", "}:", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " move", "_", "count", "\n", "\n", "def"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -1.5157065391540527, -0.0038756034336984158, -0.012908234260976315, -0.0031604839023202658, -0.0005246216314844787, -0.0003854485403280705, -0.009756971150636673, -0.001111247343942523, -0.0006556744920089841, -0.00018094333063345402, -0.0015148365637287498, -5.3881147323409095e-05, -9.298280929215252e-06, -0.0010675451485440135, -0.006019439548254013, -0.0008964095613919199, -0.1536000519990921, -0.0033295690082013607, -5.590759246842936e-05, -0.025570515543222427, -0.2890225648880005, -0.0001731960946926847, -3.894545078277588, -0.03790311887860298, -0.24820202589035034, -0.009477739222347736, -0.0037182497326284647, -6.353653589030728e-05, -0.010896466672420502, -0.8178505301475525, -0.00014697425649501383, -0.20827177166938782, -1.26498544216156, -0.40388864278793335, -0.11357665807008743, -0.005648129619657993, -0.01132205780595541, -1.4185804502631072e-05, -0.00020346954988781363, -2.861018856492592e-06, -0.00012087091454304755, -0.0004536076739896089, -3.6477376852417365e-05, -3.576272320060525e-06, -0.0003588747640606016, -0.005045182537287474, -0.00692988745868206, -2.568171501159668, -0.010163105092942715, -0.036141715943813324, -0.0007857572636567056, -0.007598308380693197, -5.960446742392378e-06, -2.5033637939486653e-05, -0.0007769426447339356, -0.00010692501382436603, -5.018585216021165e-05, -0.0007789676310494542, -3.0397906812140718e-05, -5.125986263010418e-06, -7.4741430580616e-05, -0.00027569307712838054, -3.933898824470816e-06, -7.891343557275832e-05, -7.60526381782256e-05, -0.001122083282098174, -1.1896415948867798, -0.00015615197480656207, -0.33408305048942566, -0.2612285315990448, -6.9141146923357155e-06, -0.6116660237312317, -0.0002307625545654446, -0.002188669750466943, -0.0010493254521861672, -0.0048685576766729355, -1.3947389561508317e-05, -0.006170033942908049, -0.20048408210277557, -0.024530451744794846, -0.0038786910008639097, -0.8113940358161926, -0.019826801493763924, -0.346733957529068, -0.00033682872890494764, -0.00529055530205369, -1.5497195136049413e-06, -1.0132738680113107e-05, -5.519237674889155e-05, -0.00019369633810129017, -6.007967749610543e-05, -0.01907341368496418, -1.2755313036905136e-05, -1.4305012882687151e-05, -0.00020525732543319464, -0.024001052603125572, -5.8412379075889476e-06, -0.002458765869960189, -0.0007053509471006691, -0.0012517482973635197, -1.436046838760376, -0.0004077318590134382, -0.85915607213974, -5.793403761344962e-05, -0.0011207734933122993, -0.00047541281674057245, -1.5913641452789307, -1.311301275563892e-06, -0.5179343819618225, -0.00018976318824570626, -0.000529149197973311, -0.00014983485743869096, -1.2114571332931519, -9.536738616588991e-07, -0.10994712263345718, -0.06302746385335922, -0.0051583293825387955, -2.3841855067985307e-07, -3.421248038648628e-05, -0.003890684340149164, -0.001374729792587459, -0.001334848813712597, -0.040998753160238266, -0.27076438069343567, -0.07462771236896515, -2.658331868587993e-05, -3.576278118089249e-07, -0.019115634262561798, -9.536697689327411e-06, -0.005014936905354261, -8.153582894010469e-05, -0.0001823735801735893, -4.458328112377785e-05, -0.0006002769805490971, -5.245195097813848e-06, -0.0052535575814545155, -0.0007720588473603129, -0.009600422345101833, -0.04031943529844284, -0.04378090798854828, -2.3841830625315197e-06, -6.198863957251888e-06, -0.0009995469590649009, -0.0003979606262873858, -6.079655122448457e-06, -0.0017025275155901909, -0.07637954503297806, -0.0004959068610332906, -0.5444915890693665, -0.2239825278520584, -0.051395926624536514, -4.95898348162882e-05, -0.007471475284546614, -0.00028153270250186324, -0.06888824701309204, -0.01295530516654253, -0.06054361164569855, -0.09653936326503754, -0.41270914673805237, -0.133016437292099, -1.2695057392120361, -0.00419522263109684, -9.321732068201527e-05, -1.3449674844741821, -0.3743457496166229, -0.009177405387163162, -0.004597806371748447, -0.0008510305196978152, -4.410734163684538e-06, -0.07867787778377533, -0.038653355091810226, -0.023374371230602264, -0.10868846625089645, -0.0201613400131464, -0.0020147517789155245, -0.0015737541252747178, -0.04995065554976463, -0.004375170916318893, -0.05946281924843788, -0.0005067494930699468, -0.00011753345461329445, -1.6689286894688848e-06, -0.6118756532669067, -0.0036712170112878084, -1.8214170932769775], "finish_reason": "stop"}], "metrics": {"energy": 232.8447788057328, "energy_per_token": 1.1879835653353714, "time": 8.819918, "time_per_token": 0.04499958163265306}}
{"outputs": [{"text": "files_moved = 0\n    # Validate source directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Validate target directory\n    if not os.path.isdir(target_directory):\n        os.mkdir(target_directory)\n\n    for filename in os.listdir(source_directory):\n        # Validate regex pattern\n        if re.match(pattern, filename) is not None:\n            shutil.move(\n                os.path.join(source_directory, filename),\n                os.path.join(target_directory, filename)\n            )\n            files_moved += 1\n    return files_moved", "tokens": ["files", "_", "m", "oved", " =", " ", "0", "\n", "    ", "#", " Valid", "ate", " source", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Valid", "ate", " target", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "#", " Valid", "ate", " regex", " pattern", "\n", "        ", "if", " re", ".", "match", "(", "pattern", ",", " filename", ")", " is", " not", " None", ":", "\n", "            ", "sh", "util", ".", "move", "(", "\n", "                ", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", ",", "\n", "                ", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " filename", ")", "\n", "            ", ")", "\n", "            ", "files", "_", "m", "oved", " +=", " ", "1", "\n", "    ", "return", " files", "_", "m", "oved", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.271859645843506, -0.5579137802124023, -0.6390483379364014, -0.0005912224878557026, -0.05888697877526283, -0.014427040703594685, -4.458328112377785e-05, -0.038430601358413696, -0.7221639156341553, -2.7375454902648926, -3.6046242713928223, -0.14643904566764832, -0.9055032730102539, -0.9870220422744751, -0.979943573474884, -0.0016368337674066424, -0.09278009086847305, -0.051009826362133026, -0.0193979162722826, -1.8954096958623268e-05, -0.00023541064001619816, -0.013060619123280048, -0.17494399845600128, -0.0003002431185450405, -4.911301948595792e-05, -0.0009994279826059937, -0.00013684290752280504, -2.6464111215318553e-05, -0.005068073980510235, -0.0036381976678967476, -0.0006497179274447262, -0.6135929226875305, -0.8862593173980713, -0.00018666432879399508, -0.008550107479095459, -0.4162552058696747, -0.000626367807853967, -0.13905170559883118, -0.9171814918518066, -0.003249961184337735, -0.03303490951657295, -0.011389357037842274, -0.11896955221891403, -0.0005598884890787303, -0.17176181077957153, -0.02442808449268341, -0.0027363973204046488, -0.0009087961516343057, -0.00014280252798926085, -0.000727627135347575, -0.7343550324440002, -0.0017777367029339075, -0.00020001317898277193, -0.004079829435795546, -5.722029527532868e-06, -1.680836794548668e-05, -0.01125711016356945, -0.0016330252401530743, -0.0008127961773425341, -0.2728630602359772, -0.0005315321614034474, -1.8156025409698486, -3.5523738915799186e-05, -0.0005914607318118215, -0.004873065743595362, -2.539125671319198e-05, -9.595887240720913e-05, -0.0076805283315479755, -0.010520710609853268, -0.06803363561630249, -0.0022442173212766647, -1.5419379472732544, -0.8654850125312805, -0.0017996320966631174, -0.015765313059091568, -0.0003797286772169173, -0.0003067976504098624, -3.2186455882765586e-06, -0.0003200257197022438, -0.000927256653085351, -1.8596476365928538e-05, -5.483612312673358e-06, -0.00022468426323030144, -0.007186634000390768, -0.007024355232715607, -2.6192822456359863, -1.7982131242752075, -0.004450179636478424, -2.4768927097320557, -0.17912864685058594, -0.18816936016082764, -0.0022814455442130566, -0.5301091074943542, -1.681751012802124, -4.017272294731811e-05, -0.6506294012069702, -0.0006347072194330394, -0.008282716386020184, -0.0010044296504929662, -0.008178316988050938, -1.3184185028076172, -0.14493413269519806, -1.2418019771575928, -0.00015829740732442588, -0.007711403537541628, -0.00804469920694828, -0.01222863420844078, -1.847774863243103, -6.305972783593461e-05, -7.986990567587782e-06, -0.019733767956495285, -0.0010413468116894364, -2.1723811626434326, -0.0021547689102590084, -0.07450677454471588, -9.894321920000948e-06, -0.0007784912013448775, -6.806619057897478e-05, -0.001167092937976122, -0.00012635385792236775, -0.017847184091806412, -7.939023635117337e-05, -8.940656698541716e-06, -0.00035696811391972005, -0.0013254437362775207, -0.00010096516780322418, -0.0007529999129474163, -0.11590433865785599, -8.11782301752828e-05, -0.0016185053391382098, -0.00011431517486926168, -8.583032467868179e-06, -1.9907753085135482e-05, -5.066266385256313e-05, -3.1709168979432434e-05, -0.007112422026693821, -2.0265558760002023e-06, -6.556489552167477e-06, -0.000598251644987613, -0.010373719967901707, -0.09996628016233444, -0.736071765422821, -0.009355750866234303, -0.0017973711946979165, -0.0020912461914122105, -0.005608536768704653, -0.026294641196727753, -1.7881377516459906e-06, -3.576214658096433e-05, -4.529942543740617e-06, -0.009683304466307163, -0.0025663794949650764, -2.396077979938127e-05, -0.0048691509291529655, -1.456547498703003, -0.03472810238599777, -0.002659833524376154, -1.2159273865108844e-05, -2.777537883957848e-05, -9.16677454370074e-05, -1.1740878820419312, -9.536738616588991e-07, -4.768370445162873e-07, -2.8490614567999728e-05, -0.000198821333469823, -0.1587790697813034], "finish_reason": "stop"}], "metrics": {"energy": 240.2736993255615, "energy_per_token": 1.447431923647961, "time": 7.765274, "time_per_token": 0.04677875903614458}}
{"outputs": [{"text": "num_files_moved = 0\n\n    if not os.path.isdir(source_directory):\n        return num_files_moved\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    for filename in os.listdir(source_directory):\n        match = re.match(pattern, filename)\n        if match:\n            source_path = os.path.join(source_directory, filename)\n            target_path = os.path.join(target_directory, f\"{match.group()}-moved.txt\")\n            shutil.move(source_path, target_path)\n            num_files_moved += 1\n\n    return num_files_moved", "tokens": ["num", "_", "files", "_", "m", "oved", " =", " ", "0", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " num", "_", "files", "_", "m", "oved", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "match", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "match", ".", "group", "()", "}-", "m", "oved", ".", "txt", "\"", ")", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "            ", "num", "_", "files", "_", "m", "oved", " +=", " ", "1", "\n", "\n", "    ", "return", " num", "_", "files", "_", "m", "oved", "\n", "\n", "if"], "logprobs": [-3.764779567718506, -0.026816677302122116, -0.6322561502456665, -0.21158215403556824, -0.044890396296978, -0.00012087091454304755, -0.031993694603443146, -0.003725375747308135, -4.434487345861271e-05, -0.028317764401435852, -0.5719718933105469, -0.0002397011558059603, -0.5024052858352661, -0.1493905484676361, -0.025517642498016357, -1.2636104656849056e-05, -0.00019476900342851877, -0.008967128582298756, -0.3349217176437378, -0.0014115142403170466, -4.255681051290594e-05, -0.0051337797194719315, -3.6477376852417365e-05, -3.58813522325363e-05, -0.006316696759313345, -0.014242428354918957, -0.0006519814487546682, -0.38327160477638245, -0.5900537371635437, -0.00017987063620239496, -0.00010239553375868127, -4.529942543740617e-06, -2.0861407392658293e-05, -0.0006059955921955407, -0.024610593914985657, -0.028042279183864594, -0.00027307120035402477, -2.5464069843292236, -0.02163674868643284, -0.007887763902544975, -0.0010636154329404235, -0.0008317348547279835, -0.003325529396533966, -0.8068881630897522, -0.00023266946664080024, -0.001510670525021851, -8.106198947643861e-06, -2.372236667724792e-05, -0.005020037293434143, -0.0021922383457422256, -0.0005352256703190506, -0.036594513803720474, -0.0005930095794610679, -0.23650217056274414, -2.8967437174287625e-05, -0.0016645636642351747, -0.000161038784426637, -0.000952386180870235, -6.556489552167477e-06, -1.7881233361549675e-05, -0.06139298900961876, -0.006113756448030472, -0.009634307585656643, -0.0008158930577337742, -0.40317702293395996, -0.4867030084133148, -0.0019135037437081337, -0.012230283580720425, -0.00013839241000823677, -0.00011205045302631333, -1.6689286894688848e-06, -0.00011622230522334576, -0.0008441222598776221, -8.34461570775602e-06, -3.3378546504536644e-06, -0.0001720042055239901, -0.00354721094481647, -0.010163931176066399, -0.5308343768119812, -0.03053107298910618, -0.0025874252896755934, -1.1324817933200393e-05, -1.0051703453063965, -0.0003333727945573628, -0.00979274045675993, -0.000736918649636209, -0.006827122997492552, -0.01394481398165226, -0.005301701836287975, -0.18310727179050446, -0.006065058521926403, -0.020158419385552406, -0.15773357450962067, -0.009600657969713211, -0.0009704885887913406, -0.376881867647171, -0.08813881874084473, -1.0999255180358887, -0.0007742029847577214, -0.008182337507605553, -2.50339189733495e-06, -1.8358061424805783e-05, -0.0005290300468914211, -0.0001705739414319396, -8.713819261174649e-05, -0.0016807490028440952, -3.683499380713329e-05, -8.821448318485636e-06, -5.125868119648658e-05, -0.001965973060578108, -3.6954195820726454e-05, -0.0007982643437571824, -0.0015705404803156853, -0.03036629408597946, -0.0002097863471135497, -0.003849953645840287, -0.000120751719805412, -0.0007023728103376925, -4.005352093372494e-05, -2.264974000354414e-06, -0.00023398046323563904, -4.60137271147687e-05, -2.47952248173533e-05, -0.006582719273865223, -2.0265558760002023e-06, -7.390948667307384e-06, -7.033100700937212e-05, -3.0367274284362793, -0.148643359541893, -0.04767710715532303, -0.17063945531845093, -0.2713729739189148, -0.013704495504498482, -1.1911416053771973, -0.7030823826789856, -1.870399832725525, -0.044607583433389664, -0.0842035785317421, -0.029310718178749084, -0.00017736769223120064, -0.0005788319394923747, -0.003109978511929512, -0.0780341625213623, -0.4732348620891571, -2.634490556374658e-05, -1.1920922133867862e-06, -0.05347111076116562, -7.629365427419543e-06, -0.002757915062829852, -6.079655122448457e-06, -4.875540980719961e-05, -5.8410845667822286e-05, -0.00023552982020191848, -8.702239938429557e-06, -0.008578473702073097, -0.0020359281916171312, -0.005641965661197901, -0.0033454899676144123, -0.06511251628398895, -1.5497195136049413e-06, -3.671578815556131e-05, -7.271740287251305e-06, -7.867782187531702e-06, -1.07287787614041e-05, -0.0008760428754612803, -0.0007120219524949789, -1.2755313036905136e-05, -0.0016501632053405046, -0.07027009129524231, -0.0018339019734412432, -0.014237727038562298, -0.0003798478574026376, -2.276871418871451e-05, -7.510157047363464e-06, -5.578839045483619e-05, -1.4781842764932662e-05, -0.00016807096835691482, -0.7408205270767212, -0.005209087394177914, -0.6452760696411133], "finish_reason": "stop"}], "metrics": {"energy": 206.28107901096345, "energy_per_token": 1.1460059945053525, "time": 8.20466, "time_per_token": 0.045581444444444445}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        print(f\"{source_directory} is not a directory.\")\n        return 0\n\n    try:\n        os.makedirs(target_directory)  # create target directory if it doesn't exist\n    except FileExistsError:\n        pass\n\n    num_files = 0\n    for file in os.listdir(source_directory):\n        match = re.search(pattern, file)\n        if match:\n            source_file = os.path.join(source_directory, file)\n            target_file = os.path.join(target_directory, f\"{match.group()}.txt\")\n            try:\n                os.rename(source_file, target_file)  # move file to target directory\n            except FileNotFoundError:\n                continue\n            except Exception as e:\n                print(f\"An error occurred while moving {file}: {e}\")\n                continue\n            num_files += 1\n    print(f\"{num_files} files moved successfully.\")\n    return num_files", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", ".", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "  ", "#", " create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "except", " File", "Exists", "Error", ":", "\n", "        ", "pass", "\n", "\n", "    ", "num", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " file", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", "_", "file", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "            ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "match", ".", "group", "()}", ".", "txt", "\"", ")", "\n", "            ", "try", ":", "\n", "                ", "os", ".", "rename", "(", "source", "_", "file", ",", " target", "_", "file", ")", "  ", "#", " move", " file", " to", " target", " directory", "\n", "            ", "except", " File", "NotFound", "Error", ":", "\n", "                ", "continue", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " moving", " {", "file", "}:", " {", "e", "}\"", ")", "\n", "                ", "continue", "\n", "            ", "num", "_", "files", " +=", " ", "1", "\n", "    ", "print", "(", "f", "\"", "{", "num", "_", "files", "}", " files", " moved", " successfully", ".", "\"", ")", "\n", "    ", "return", " num", "_", "files", "\n", "\n", "def"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -0.21799525618553162, -0.0030978568829596043, -0.00012754580529872328, -0.008578355424106121, -7.366862701019272e-05, -3.4927710657939315e-05, -0.014438672922551632, -0.0344267338514328, -0.0007134514744393528, -1.5891640186309814, -0.16144077479839325, -0.7024174332618713, -0.12685801088809967, -0.7297471165657043, -0.008425168693065643, -0.00016723664884921163, -0.00018261195509694517, -0.027958469465374947, -0.1790315806865692, -0.0061933733522892, -0.006330556236207485, -0.07242316752672195, -0.874378502368927, -0.2311718910932541, -0.0011162485461682081, -0.007063891272991896, -0.009123304858803749, -0.014895175583660603, -0.010864274576306343, -0.00021705655672121793, -0.008785405196249485, -0.44857436418533325, -0.0002244459028588608, -2.960705280303955, -0.0002644904307089746, -0.0031083147041499615, -0.002305113710463047, -0.19852915406227112, -1.8000440832111053e-05, -0.5813093781471252, -8.821448318485636e-06, -0.005221657920628786, -0.0011027929140254855, -0.006161503493785858, -1.2755313036905136e-05, -1.6093124941107817e-05, -0.3143521547317505, -2.205399751663208, -0.00035446559195406735, -1.2120752334594727, -0.4769570231437683, -0.1547585278749466, -0.03024856187403202, -0.153816357254982, -0.21076957881450653, -0.00045503751607611775, -1.1205610462639015e-05, -0.05010226368904114, -0.04120743274688721, -0.056765686720609665, -0.00026723151677288115, -0.29027047753334045, -0.0078073348850011826, -4.815939246327616e-05, -0.02106577903032303, -0.028373965993523598, -0.00043466180795803666, -0.11447255313396454, -0.24423372745513916, -0.026452893391251564, -0.00013398226292338222, -3.127933979034424, -0.011432374827563763, -0.6185281872749329, -1.8415974378585815, -0.021606767550110817, -4.184158387943171e-05, -0.07919089496135712, -0.25671300292015076, -0.20213955640792847, -0.9946284294128418, -0.7751027345657349, -0.025334717705845833, -0.00016556799528189003, -0.0015481640584766865, -7.629365427419543e-06, -7.760223525110632e-05, -0.0007893307483755052, -2.777537883957848e-05, -3.6954811548639555e-06, -0.0003672163875307888, -0.042628489434719086, -0.0028703701682388783, -0.5358899235725403, -0.02378711849451065, -0.008301514200866222, -1.2397689715726301e-05, -0.6910063028335571, -0.00022766382608097047, -0.004995839670300484, -0.001602914067916572, -0.006483590696007013, -0.01749863289296627, -0.039174482226371765, -0.02183598093688488, -0.00862976722419262, -0.016857780516147614, -0.11615750193595886, -0.04537980630993843, -0.000552263343706727, -1.0523509979248047, -0.16762571036815643, -0.5407322645187378, -0.08365748822689056, -0.012258191592991352, -8.22540732769994e-06, -4.23184028477408e-05, -0.0006003961316309869, -0.00031144535751082003, -5.94836674281396e-05, -0.0013656823430210352, -7.176141662057489e-05, -1.5258672647178173e-05, -6.55629628454335e-05, -0.003243901301175356, -8.320462075062096e-05, -0.012530527077615261, -0.0014813889283686876, -0.1381077915430069, -0.0013424679636955261, -0.012013109400868416, -0.0008391196606680751, -0.004512247163802385, -6.151010165922344e-05, -4.529942543740617e-06, -0.0006762839620932937, -0.00019453064305707812, -6.83045873302035e-05, -0.012465540319681168, -2.264974000354414e-06, -5.125986263010418e-06, -9.667406266089529e-05, -2.1060729026794434, -0.07376580685377121, -0.028072183951735497, -0.09384404867887497, -0.299511581659317, -0.013332617469131947, -1.126307725906372, -0.0007225048611871898, -0.020046724006533623, -0.00028868322260677814, -0.0005517867393791676, -0.02484237402677536, -0.029438979923725128, -2.0619471073150635, -5.972207145532593e-05, -0.0021764179691672325, -0.0002795067266561091, -1.885340929031372, -8.106198947643861e-06, -0.3559405505657196, -3.1470757676288486e-05, -0.002875956939533353, -2.312633478140924e-05, -0.00012981049076188356, -5.113947918289341e-05, -0.00035470392322167754, -7.390948667307384e-06, -0.0005637010326609015, -0.0002623452164698392, -2.9185166358947754, -0.0001541257370263338, -0.18420273065567017, -0.11693125218153, -0.4847991168498993, -0.08615519851446152, -0.14380766451358795, -0.025326233357191086, -2.2915680408477783, -0.0004413345886860043, -0.42284318804740906, -0.4729010760784149, -6.556489552167477e-06, -0.02381168119609356, -0.09643013775348663, -0.0002882065309677273, -2.1868157386779785, -0.5488539934158325, -0.02835843898355961, -2.299870252609253, -1.845490574836731, -0.158539816737175, -0.053716182708740234, -5.3165931603871286e-05, -0.030146431177854538, -0.00012540031457319856, -0.030705302953720093, -0.0033005783334374428, -0.09749075770378113, -0.00790739618241787, -1.345468282699585, -0.023222850635647774, -0.003753879340365529, -0.21015578508377075, -0.07122038304805756, -0.2831887900829315, -0.27739062905311584, -0.26072606444358826, -0.013792329467833042, -0.19083918631076813, -0.02427579276263714, -0.001968114636838436, -0.011773740872740746, -0.6604138016700745, -0.022252628579735756, -0.016065552830696106, -0.02359083853662014, -0.6355693340301514, -7.390948667307384e-06, -1.6331539882230572e-05, -0.0011537569807842374, -0.0006293461774475873, -8.940656698541716e-06, -0.008001180365681648, -1.0574469566345215, -1.957401990890503, -0.001650758320465684, -0.09593195468187332, -0.004279503133147955, -0.3956426680088043, -0.040163591504096985, -6.55629628454335e-05, -7.331102824537084e-05, -0.00500924326479435, -0.060142505913972855, -0.8315414190292358, -0.7790743112564087, -0.3043918013572693, -0.003358677960932255, -0.0029717590659856796, -0.028258316218852997, -0.051910459995269775, -0.011428014375269413, -0.0017782127251848578, -0.00010609064338495955, -1.1444026313256472e-05, -0.4347042441368103, -0.006067309994250536, -1.586684226989746], "finish_reason": "stop"}], "metrics": {"energy": 314.44035427665705, "energy_per_token": 1.2282826338931916, "time": 11.356126, "time_per_token": 0.0443598671875}}
{"outputs": [{"text": "files_count = 0\n    if not os.path.isdir(source_directory):\n        return 0\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    for filename in os.listdir(source_directory):\n        match = re.search(pattern, filename)\n        if match:\n            source_file = os.path.join(source_directory, filename)\n            target_file = os.path.join(target_directory, match.group())\n            shutil.move(source_file, target_file)\n            files_count += 1\n\n    return files_count", "tokens": ["files", "_", "count", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "match", " =", " re", ".", "search", "(", "pattern", ",", " filename", ")", "\n", "        ", "if", " match", ":", "\n", "            ", "source", "_", "file", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " filename", ")", "\n", "            ", "target", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " match", ".", "group", "())", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "file", ",", " target", "_", "file", ")", "\n", "            ", "files", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " files", "_", "count", "\n", "\n", "def"], "logprobs": [-3.271859645843506, -0.5579137802124023, -2.514754056930542, -0.033038023859262466, -0.01201947033405304, -0.00014065706636756659, -0.028639862313866615, -0.6623060703277588, -0.7660160064697266, -0.2758215069770813, -0.0460016205906868, -1.3947389561508317e-05, -0.00043823651503771544, -0.008326222188770771, -0.23726202547550201, -0.004838662222027779, -9.333651541965082e-05, -0.01549949124455452, -4.053033626405522e-05, -2.753696753643453e-05, -0.016695892438292503, -0.02595691941678524, -0.0010477773612365127, -0.3438616394996643, -0.6480688452720642, -0.0001517419150331989, -0.010840218514204025, -0.5451956391334534, -1.7467855215072632, -0.02430674247443676, -0.005354823544621468, -0.001378777320496738, -0.0008557948167435825, -0.007134437561035156, -0.5521411299705505, -0.003123882692307234, -0.00011705666838679463, -0.0022312526125460863, -4.529942543740617e-06, -4.51792984677013e-05, -0.0033327771816402674, -0.002238270128145814, -0.001019792165607214, -0.09020260721445084, -0.0006347072194330394, -0.39047521352767944, -2.1219027985353023e-05, -0.005023239646106958, -0.000491855782456696, -0.002676716074347496, -1.5020257706055418e-05, -4.2437604861333966e-05, -0.0918525829911232, -0.010605993680655956, -1.8427155017852783, -0.0006295844214037061, -0.4832925498485565, -0.8279936909675598, -0.002600504318252206, -0.024234836921095848, -0.0004632591735571623, -0.0005511910421773791, -5.483612312673358e-06, -0.0004203628050163388, -0.0008772339206188917, -2.002696055569686e-05, -5.125986263010418e-06, -0.000337305391440168, -0.004802715498954058, -0.0029369338881224394, -0.6479219198226929, -0.043311722576618195, -0.005244900938123465, -2.038458114839159e-05, -0.504571259021759, -0.00036507140612229705, -0.008767325431108475, -0.0029309908859431744, -0.00969097763299942, -0.018831400200724602, -0.0051102968864142895, -0.02204788289964199, -0.012270556762814522, -0.04340269789099693, -0.19289027154445648, -0.0071292296051979065, -0.0007121411035768688, -1.0194748640060425, -0.1920955330133438, -0.4272141456604004, -0.3995676338672638, -0.022550459951162338, -5.483612312673358e-06, -7.70062324590981e-05, -0.0004984090337529778, -0.0004232226056046784, -0.00011622230522334576, -0.002946204738691449, -7.56950321374461e-05, -1.3828182090946939e-05, -9.417090768693015e-05, -0.01059136725962162, -7.903263758635148e-05, -0.0014319891342893243, -0.0017695259302854538, -0.09299442917108536, -0.001998928841203451, -0.011706231161952019, -0.0010618292726576328, -0.002764096949249506, -8.40390202938579e-05, -5.483612312673358e-06, -0.00023326536756940186, -0.0001230164198204875, -5.328513361746445e-05, -0.011764079332351685, -1.0132738680113107e-05, -1.6093124941107817e-05, -0.00010311071673640981, -1.4737739562988281, -0.09832987189292908, -0.01725061424076557, -1.0915164947509766, -0.7005082964897156, -0.020896514877676964, -0.5244789719581604, -3.218599158572033e-05, -2.145764938177308e-06, -0.03385092318058014, -2.312633478140924e-05, -0.001986198825761676, -2.145764938177308e-06, -0.0003518439189065248, -0.00010752100206445903, -0.0007987407734617591, -2.5629668016335927e-05, -0.09551197290420532, -0.003342163283377886, -0.006816348992288113, -0.002899730112403631, -0.06755039840936661, -8.821448318485636e-06, -1.2159273865108844e-05, -0.00468810461461544, -0.0016123164677992463, -1.3470558769768104e-05, -0.0017828536219894886, -0.5286798477172852, -0.0018985120113939047, -0.028294935822486877, -0.0015175743028521538, -1.0371154530730564e-05, -3.4570634852570947e-06, -0.4027690887451172, -0.005029644817113876, -1.5803134441375732], "finish_reason": "stop"}], "metrics": {"energy": 175.12997746658337, "energy_per_token": 1.1226280606832266, "time": 6.7299685, "time_per_token": 0.043140823717948716}}
{"outputs": [{"text": "# If the source directory doesn't exist or isn't a directory, return 0\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Create the target directory if it doesn't exist\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    # List files in the source directory\n    files = os.listdir(source_directory)\n\n    # Remove non-file elements from the list\n    files = [file for file in files if os.path.isfile(os.path.join(source_directory, file))]\n\n    # Filter files based on the given pattern\n    regex = re.compile(pattern)\n    files = [file for file in files if regex.match(file)]\n\n    # Move files to the target directory\n    for file in files:\n        shutil.move(os.path.join(source_directory, file), os.path.join(target_directory, file))\n\n    # Return the number of files moved\n    return len(files)", "tokens": ["#", " If", " the", " source", " directory", " doesn", "'", "t", " exist", " or", " isn", "'", "t", " a", " directory", ",", " return", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " List", " files", " in", " the", " source", " directory", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "\n", "    ", "#", " Remove", " non", "-", "file", " elements", " from", " the", " list", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " files", " if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "))", "]", "\n", "\n", "    ", "#", " Filter", " files", " based", " on", " the", " given", " pattern", "\n", "    ", "regex", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " files", " if", " regex", ".", "match", "(", "file", ")]", "\n", "\n", "    ", "#", " Move", " files", " to", " the", " target", " directory", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", "))", "\n", "\n", "    ", "#", " Return", " the", " number", " of", " files", " moved", "\n", "    ", "return", " len", "(", "files", ")", "\n", "\n", "if"], "logprobs": [-1.6943392753601074, -3.2359774112701416, -1.5925201177597046, -0.031017733737826347, -0.3195953965187073, -2.0701897144317627, -0.00047064671525731683, -2.50339189733495e-06, -0.005350080784410238, -0.6422225832939148, -0.8591016530990601, -0.0003022690652869642, -6.318072337307967e-06, -0.011081697419285774, -0.01526318583637476, -0.07488280534744263, -0.2946154773235321, -0.029958102852106094, -8.821098163025454e-05, -0.6837989687919617, -0.00159172632265836, -0.0204910971224308, -0.020856471732258797, -0.014733321033418179, -8.702239938429557e-06, -0.00021944021864328533, -0.01265424769371748, -0.16645468771457672, -0.00043442347669042647, -5.006664650863968e-05, -0.0008076743106357753, -7.748303323751315e-05, -3.8265450712060556e-05, -0.006538545247167349, -0.0037765626329928637, -0.0006282739923335612, -0.13491757214069366, -0.001735848723910749, -6.651657167822123e-05, -0.001358658540993929, -0.090316541492939, -0.000447530735982582, -0.0659574568271637, -0.5711772441864014, -0.16783909499645233, -0.01223546452820301, -0.016343068331480026, -0.05032866448163986, -0.011244969442486763, -0.021636981517076492, -9.941560711013153e-05, -4.887569048150908e-06, -0.09910663217306137, -0.07857870310544968, -0.00019870213873218745, -0.2064674198627472, -0.0021162275224924088, -0.0005812147865071893, -1.0251946150674485e-05, -1.7404405298293568e-05, -0.0005407063290476799, -0.48402369022369385, -5.900685573578812e-05, -5.602679812000133e-05, -0.0007569308509118855, -4.768370445162873e-07, -1.0847986231965479e-05, -0.0019701372366398573, -0.0005803807871416211, -0.00042906138696707785, -0.03138956427574158, -0.0005265279905870557, -0.28727325797080994, -6.437280717364047e-06, -0.0011098184622824192, -0.00010227633902104571, -0.0012242449447512627, -1.1801649634435307e-05, -1.4781842764932662e-05, -0.05212468281388283, -0.0030979756265878677, -0.011023219674825668, -0.0011564955348148942, -0.11841607838869095, -2.906240940093994, -1.4284582138061523, -0.21200819313526154, -0.04201497882604599, -0.00811139214783907, -0.0021742768585681915, -0.6171470284461975, -0.0002225389762315899, -0.7235657572746277, -0.16435101628303528, -0.5548376441001892, -1.4305104514278355e-06, -0.0003262225945945829, -4.768360213347478e-06, -0.00010573305189609528, -0.0004175029753241688, -1.883488948806189e-05, -6.794906312279636e-06, -0.00010525626566959545, -0.00039176418795250356, -0.036698512732982635, -0.00020632999076042324, -0.03600373491644859, -3.2648537158966064, -2.6199939250946045, -0.00885204877704382, -2.707002639770508, -3.733025074005127, -0.7620010375976562, -0.04142830893397331, -0.03996419906616211, -0.16634437441825867, -0.00013171759201213717, -0.2674122750759125, -0.012470131739974022, -0.0344243161380291, -1.2536927461624146, -0.0071120671927928925, -9.619726915843785e-05, -0.00017105070583056659, -0.0005554801900871098, -0.008176070638000965, -0.016007013618946075, -3.576272320060525e-06, -2.706014311115723e-05, -0.008205038495361805, -0.0008378094644285738, -0.00022265815641731024, -0.0005321278586052358, -0.06997191160917282, -0.00037651124875992537, -6.139089964563027e-05, -0.002861573826521635, -8.737658936297521e-05, -7.652943895664066e-05, -0.0016014858847483993, -0.00011812942830147222, -1.0967194612021558e-05, -9.536288416711614e-05, -0.0014318700414150953, -0.00019143179815728217, -0.001156852813437581, -0.0005098473629914224, -0.010037658736109734, -0.000300958170555532, -0.05119887739419937, -2.7164673805236816, -0.4514039158821106, -0.8785300254821777, -0.0002890407631639391, -0.21669551730155945, -2.4363346099853516, -0.2590652108192444, -0.11497784405946732, -0.0002884448622353375, -3.297957420349121, -0.05269131436944008, -0.0015939876902848482, -1.3351351299206726e-05, -0.0002172949316445738, -0.001141849672421813, -0.008572564460337162, -0.006508936639875174, -0.005517136305570602, -0.011727673932909966, -0.5284093022346497, -0.035990968346595764, -0.08732771128416061, -0.029744630679488182, -0.0006839081761427224, -0.00018594920402392745, -5.125868119648658e-05, -0.0003861635341309011, -0.0008286379743367434, -0.019848071038722992, -0.00011896379146492109, -0.85795658826828, -5.829164365422912e-05, -0.024795860052108765, -0.042656704783439636, -0.0014709139941260219, -0.006857669446617365, -0.0001070442158379592, -0.04269520193338394, -0.1529752016067505, -0.4454033076763153, -0.15910600125789642, -0.03886917605996132, -0.006141836289316416, -0.002747810212895274, -0.08397123217582703, -0.0007796823629178107, -0.5567234754562378, -0.01222133357077837, -0.013148508965969086, -0.001039203256368637, -0.00013624693383462727, -0.00037293630884960294, -0.000653411028906703, -1.048233985900879, -3.325883881188929e-05, -1.5497195136049413e-06, -0.0034887660294771194, -0.00016211149340961128, -0.1021789163351059, -5.483612312673358e-06, -3.075552376685664e-05, -3.9457496313843876e-05, -1.2755313036905136e-05, -2.3364747903542593e-05, -0.0005874100024811924, -0.00026174934464506805, -7.867782187531702e-06, -7.998623186722398e-05, -0.0003352795320097357, -2.8490614567999728e-05, -6.4490144723095e-05, -0.07616990059614182, -0.00011824862303910777, -5.006777428206988e-06, -6.222531374078244e-05, -1.9073304429184645e-05, -1.1324817933200393e-05, -0.0017127619357779622, -2.622600959512056e-06, -7.867782187531702e-06, -0.0022999995853751898, -0.001962879905477166, -0.0008793777669779956, -0.00880974717438221, -0.025182681158185005, -0.008181746117770672, -0.7800425291061401, -0.06270942091941833, -0.018319575116038322, -0.04877013713121414, -0.0003763920976780355, -0.2652133107185364, -0.6848996877670288, -0.09619629383087158, -0.00018940561858471483, -0.0026676803827285767, -0.00104301399551332, -0.00028153270250186324, -0.0010288427583873272, -0.4729575216770172, -0.2631573975086212, -0.004761784803122282, -0.6769118905067444], "finish_reason": "stop"}], "metrics": {"energy": 303.90804242992374, "energy_per_token": 1.2012175590115564, "time": 11.142218, "time_per_token": 0.044040387351778655}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        print(f\"{source_directory} does not exist\")\n        return 0\n    elif not os.path.isdir(source_directory):\n        print(f\"{source_directory} is not a directory\")\n        return 0\n    elif not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n    else:\n        os.chdir(source_directory)\n        file_list = [f for f in os.listdir(\".\") if re.search(pattern, f)]\n        for file in file_list:\n            shutil.move(file, target_directory)\n        print(f\"{len(file_list)} files moved successfully to {target_directory}\")", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "{", "source", "_", "directory", "}", " does", " not", " exist", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "elif", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "print", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " directory", "\"", ")", "\n", "        ", "return", " ", "0", "\n", "    ", "elif", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "else", ":", "\n", "        ", "os", ".", "ch", "dir", "(", "source", "_", "directory", ")", "\n", "        ", "file", "_", "list", " =", " [", "f", " for", " f", " in", " os", ".", "list", "dir", "(", "\"", ".", "\"", ")", " if", " re", ".", "search", "(", "pattern", ",", " f", ")]", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " target", "_", "directory", ")", "\n", "        ", "print", "(", "f", "\"", "{", "len", "(", "file", "_", "list", ")}", " files", " moved", " successfully", " to", " {", "target", "_", "directory", "}\"", ")", "\n", "\n", "if"], "logprobs": [-1.08534574508667, -0.08517586439847946, -0.053417883813381195, -2.9444261599564925e-05, -0.0003156163729727268, -0.005673140753060579, -1.6317354440689087, -0.0002618685248307884, -0.017302753403782845, -6.329813186312094e-05, -3.2305197237292305e-05, -0.24824480712413788, -0.019514478743076324, -0.000724887300748378, -1.7196519374847412, -0.10227125883102417, -0.39036524295806885, -0.11822279542684555, -1.4279426336288452, -0.0073597729206085205, -0.00011789103882620111, -0.00020585325546562672, -0.02674437128007412, -0.14179295301437378, -0.0006033745594322681, -0.004081610590219498, -1.035265564918518, -0.001263297046534717, -0.010305997915565968, -0.015612401068210602, -0.008531669154763222, -0.012251597829163074, -0.0002225389762315899, -0.007475971709936857, -0.6845889091491699, -1.3049005270004272, -0.04461989551782608, -0.008074380457401276, -0.0010642108973115683, -0.0003280101518612355, -0.0067257690243422985, -0.0013810392701998353, -0.0014673429541289806, -0.0001250427303602919, -0.0011937642702832818, -6.0794889577664435e-05, -1.7165990357170813e-05, -0.000927137560211122, -0.0018023689044639468, -0.00040439533768221736, -0.02107745222747326, -0.002499910071492195, -0.024834001436829567, -0.002287511248141527, -0.004977573174983263, -0.0006811682251282036, -0.00011860620725201443, -0.00012408917245920748, -0.0006262486567720771, -0.010758375748991966, -0.004932734649628401, -0.002907337388023734, -0.015624958090484142, -0.026418063789606094, -7.426462980220094e-05, -0.00030191155383363366, -0.0029719967860728502, -0.0012893705861642957, -0.0009298768127337098, -0.00025722055579535663, -0.00025912740966305137, -0.5642186403274536, -0.4200321137905121, -0.09218104928731918, -0.01855270192027092, -0.0004239375703036785, -0.007298237178474665, -0.0012312696781009436, -0.021710356697440147, -0.00010418349120300263, -0.0014586533652618527, -5.245195097813848e-06, -1.8358061424805783e-05, -0.003822521772235632, -0.0013946102699264884, -0.0011201781453564763, -0.21518002450466156, -0.00016318420239258558, -0.4331475794315338, -4.95898348162882e-05, -0.0023421018850058317, -0.0008927173912525177, -0.006942791398614645, -2.13382354559144e-05, -4.0649541915627196e-05, -0.0876491516828537, -0.01339801773428917, -0.39548051357269287, -0.7776859998703003, -0.00029392691794782877, -0.022556520998477936, -0.0023771857377141714, -3.9363865852355957, -0.0004820853646378964, -0.34489962458610535, -0.0032604176085442305, -0.0034242586698383093, -0.08547907322645187, -4.935142715112306e-05, -3.564294092939235e-05, -0.0003270567976869643, -0.021241551265120506, -0.05682087689638138, -2.1390576362609863, -0.023806676268577576, -0.6494082808494568, -0.019577838480472565, -0.981580376625061, -0.6811536550521851, -0.10131911933422089, -0.0006441186997108161, -0.000969535845797509, -0.02636152133345604, -0.0010413468116894364, -0.0005881248507648706, -2.0265558760002023e-06, -1.1560962200164795, -1.147965908050537, -0.007212790194898844, -0.05294324830174446, -0.059228140860795975, -0.016281144693493843, -0.10491156578063965, -1.2755313036905136e-05, -0.5732274651527405, -0.00046075694262981415, -0.011991319246590137, -0.0018581758486106992, -0.04327712953090668, -0.061454758048057556, -0.012913648039102554, -0.04367969185113907, -0.7946895956993103, -0.4901104271411896, -0.23219989240169525, -0.003010267624631524, -5.6980417866725475e-05, -5.364403477869928e-06, -0.0015735160559415817, -0.0017565549351274967, -0.002179748611524701, -0.3986099362373352, -4.7801782784517854e-05, -6.9141146923357155e-06, -0.019023822620511055, -0.0009084388730116189, -0.07218174636363983, -0.0009596510208211839, -0.32417163252830505, -2.52720492426306e-05, -3.635817120084539e-05, -0.10241556167602539, -0.01670527085661888, -0.29151690006256104, -1.3570075035095215, -0.004521384835243225, -0.1383972316980362, -0.016388336196541786, -0.33229073882102966, -0.06617595255374908, -0.0003051292151212692, -0.002471370855346322, -0.000324673397699371, -2.753696753643453e-05, -0.004798088688403368, -0.07691273093223572, -0.6155675649642944, -1.3836445808410645, -2.954497814178467, -0.02622171863913536, -0.0027782435063272715, -2.8371408916427754e-05, -2.90866428258596e-05, -0.08002161979675293, -0.09922246634960175, -0.16254228353500366, -1.896820306777954, -0.9962775111198425], "finish_reason": "stop"}], "metrics": {"energy": 211.6612996072769, "energy_per_token": 1.1258579766344516, "time": 8.183457, "time_per_token": 0.04352902659574468}}
{"outputs": [{"text": "try:\n        if os.path.isdir(source_directory) is False:\n            return 0\n        elif os.path.isdir(target_directory):\n            return 0\n        else:\n            file_list = os.listdir(source_directory)\n\n            regex = re.compile(pattern)\n            matches = list(filter(regex.match, file_list))\n            for file in matches:\n                source = source_directory + '/' + file\n                target = target_directory + '/' + file\n                shutil.move(source, target)\n\n    except:\n        return 0", "tokens": ["try", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", ")", " is", " False", ":", "\n", "            ", "return", " ", "0", "\n", "        ", "elif", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "            ", "return", " ", "0", "\n", "        ", "else", ":", "\n", "            ", "file", "_", "list", " =", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", "\n", "\n", "            ", "regex", " =", " re", ".", "compile", "(", "pattern", ")", "\n", "            ", "matches", " =", " list", "(", "filter", "(", "regex", ".", "match", ",", " file", "_", "list", "))", "\n", "            ", "for", " file", " in", " matches", ":", "\n", "                ", "source", " =", " source", "_", "directory", " +", " '/", "'", " +", " file", "\n", "                ", "target", " =", " target", "_", "directory", " +", " '/", "'", " +", " file", "\n", "                ", "sh", "util", ".", "move", "(", "source", ",", " target", ")", "\n", "\n", "    ", "except", ":", "\n", "        ", "return", " ", "0"], "logprobs": [-2.2588648796081543, -0.00048065552255138755, -0.00834750197827816, -0.004779106471687555, -1.4058940410614014, -2.302353620529175, -2.3841574147809297e-05, -0.035007622092962265, -0.014179903082549572, -0.26877105236053467, -0.08677130192518234, -0.00047267231275327504, -0.03285566344857216, -8.737658936297521e-05, -4.279521817807108e-05, -1.096468448638916, -1.4180991649627686, -0.1223980113863945, -0.06820579618215561, -0.035275328904390335, -0.0020399729255586863, -0.5085120797157288, -0.01215632725507021, -0.0002506657037883997, -0.011652502231299877, -0.9454049468040466, -2.023866891860962, -0.15439942479133606, -0.001039679627865553, -0.014543830417096615, -0.005079222843050957, -0.45346564054489136, -0.010238388553261757, -0.0009787060553207994, -0.006523503921926022, -1.0967194612021558e-05, -3.564294092939235e-05, -1.8540687561035156, -0.009445029310882092, -0.004610978066921234, -2.905555009841919, -0.08660809695720673, -0.007109107915312052, -0.003512643277645111, -0.3906749188899994, -0.404061496257782, -0.00014923889830242842, -0.004404724109917879, -0.017914632335305214, -2.2403342723846436, -0.04358040913939476, -0.9570592641830444, -0.04914870485663414, -0.5386331081390381, -0.00010966652916977182, -0.005508481990545988, -1.0490362910786644e-05, -0.001817957148887217, -0.0037845196202397346, -5.769562994828448e-05, -2.276871418871451e-05, -0.0008251837571151555, -0.010754129849374294, -2.5208349227905273, -0.09730107337236404, -2.727323532104492, -0.2310730218887329, -0.006000124849379063, -4.875540980719961e-05, -0.006790537387132645, -0.0020343814976513386, -0.028161082416772842, -0.0202539823949337, -0.015076027251780033, -0.32746434211730957, -2.1124629974365234, -0.02514873631298542, -1.899557113647461, -0.030100971460342407, -0.12331975996494293, -0.0018870895728468895, -0.13457366824150085, -5.23315102327615e-05, -0.31825605034828186, -0.0003784178989008069, -0.0030201321933418512, -1.3708974620385561e-05, -1.2040065485052764e-05, -0.0006884350441396236, -0.011647081933915615, -0.6623402237892151, -1.078531265258789, -1.019625186920166, -0.3411257863044739, -0.016048777848482132, -0.000694153131917119, -0.002140494529157877, -0.004888605792075396, -1.840480089187622, -0.9354705214500427, -2.5304129123687744, -0.0022017541341483593, -0.0004804172203876078, -0.031090307980775833, -0.8654745817184448, -0.0068976860493421555, -0.0036024453584104776, -0.010693510062992573, -0.005336800590157509, -0.0025755350943654776, -0.16051025688648224, -0.007461536210030317, -0.019274091348052025, -3.0517112463712692e-05, -6.508615479106084e-05, -0.00420388812199235, -0.003446117974817753, -0.0012784174177795649, -0.003793188836425543, -0.17735505104064941, -0.009059750474989414, -0.10293666273355484, -0.1944558024406433, -5.61460001335945e-05, -9.417489309271332e-06, -0.011950916610658169, -0.00019095504831057042, -0.0019365858752280474, -0.004484358709305525, -0.004126843065023422, -0.003233444644138217, -0.00283946399576962, -1.5264134407043457, -1.5557005405426025, -0.010485085658729076, -2.0715484619140625, -0.03354640677571297, -0.006187805440276861, -0.5343324542045593, -0.05495237931609154, -0.006047403905540705], "finish_reason": "stop"}], "metrics": {"energy": 152.21095367240903, "energy_per_token": 1.0795103097333973, "time": 6.1151123, "time_per_token": 0.04336959078014184}}
{"outputs": [{"text": "# Check that source_directory exists and is a directory\n    if not os.path.isdir(source_directory):\n        return 0\n\n    # Create target directory if it doesn't exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Count the number of files successfully moved\n    move_count = 0\n\n    # Iterate through the files in the source directory\n    for file in os.listdir(source_directory):\n        # Check if file matches the pattern\n        if re.search(pattern, file):\n            # Combine source and target paths with os.path.join to create the complete path\n            source_path = os.path.join(source_directory, file)\n            target_path = os.path.join(target_directory, file)\n            # Move file to target directory\n            shutil.move(source_path, target_path)\n            move_count += 1\n\n    return move_count", "tokens": ["#", " Check", " that", " source", "_", "directory", " exists", " and", " is", " a", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "return", " ", "0", "\n", "\n", "    ", "#", " Create", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " files", " successfully", " moved", "\n", "    ", "move", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " source", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "#", " Check", " if", " file", " matches", " the", " pattern", "\n", "        ", "if", " re", ".", "search", "(", "pattern", ",", " file", "):", "\n", "            ", "#", " Combine", " source", " and", " target", " paths", " with", " os", ".", "path", ".", "join", " to", " create", " the", " complete", " path", "\n", "            ", "source", "_", "path", " =", " os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", ")", "\n", "            ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " file", ")", "\n", "            ", "#", " Move", " file", " to", " target", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "source", "_", "path", ",", " target", "_", "path", ")", "\n", "            ", "move", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " move", "_", "count", "\n", "\n", "#"], "logprobs": [-1.6943392753601074, -0.8999425768852234, -2.4954493045806885, -0.28576838970184326, -0.3464019298553467, -0.004192373715341091, -0.21237555146217346, -0.2211432158946991, -0.015730343759059906, -0.00451545137912035, -0.011228584684431553, -0.11242132633924484, -0.00086198840290308, -0.025458725169301033, -0.03499611094594002, -0.014658726751804352, -9.417489309271332e-06, -0.0001774868869688362, -0.007766644936054945, -0.2646375298500061, -0.0003277718205936253, -3.421248038648628e-05, -0.0007884969236329198, -6.41325386823155e-05, -1.6569954823353328e-05, -0.0031835371628403664, -0.0020104688592255116, -0.0005894353962503374, -0.4522845447063446, -0.002734614070504904, -6.282132380874828e-05, -0.008477652445435524, -0.06132796034216881, -0.0003104920033365488, -0.05461573600769043, -0.7734083533287048, -0.20133399963378906, -0.5152881741523743, -0.044043537229299545, -0.04625820368528366, -0.3312720060348511, -0.00025662468397058547, -5.125986263010418e-06, -0.08647821843624115, -0.04714322090148926, -0.00017307691450696439, -0.1701781153678894, -0.0022518294863402843, -0.000559292733669281, -9.417489309271332e-06, -2.109982233378105e-05, -0.0006136203301139176, -0.7139121294021606, -9.583967766957358e-05, -0.0010319390567019582, -8.344646857949556e-07, -1.7046782886609435e-05, -0.0036937836557626724, -0.0007700338610447943, -0.0005916990339756012, -0.015548905357718468, -0.00025614796322770417, -0.09543969482183456, -1.4781842764932662e-05, -0.0013088955311104655, -9.30981186684221e-05, -0.0006833125371485949, -9.059865078597795e-06, -2.13382354559144e-05, -0.01944737136363983, -0.00194193993229419, -0.011639894917607307, -0.0007803970365785062, -0.15258045494556427, -1.9132205247879028, -0.5732952952384949, -0.05234995111823082, -0.0015165030490607023, -0.1348712146282196, -1.043481469154358, -0.011895434930920601, -0.05005259811878204, -0.0005422552349045873, -3.141106128692627, -0.009486477822065353, -0.089902363717556, -0.0037329767365008593, -0.004171361681073904, -2.4199192921514623e-05, -0.002574108075350523, -0.40208515524864197, -0.0001573438785271719, -0.3162032961845398, -0.6800837516784668, -0.0010406322544440627, -0.6865040063858032, -2.1959636211395264, -0.1487823724746704, -0.012171871960163116, -0.3650127053260803, -0.010440375655889511, -0.006354839541018009, -0.10753326117992401, -0.00017915551143232733, -0.017770597711205482, -0.8686927556991577, -0.7178147435188293, -0.008780323900282383, -2.4199192921514623e-05, -0.0005969410995021462, -1.7881377516459906e-06, -7.533743337262422e-05, -0.0002165798214264214, -3.611976353568025e-05, -3.576272320060525e-06, -0.00012337400403339416, -0.0009384519071318209, -0.04605250805616379, -1.2310736179351807, -0.37403908371925354, -0.050563402473926544, -1.9106361865997314, -0.051675472408533096, -0.08991118520498276, -0.4025284945964813, -0.12651152908802032, -0.0003415954706724733, -0.2247094064950943, -0.02576373517513275, -5.364403477869928e-06, -0.8664824366569519, -9.667406266089529e-05, -0.002806179691106081, -0.0003398079425096512, -0.0037269198801368475, -0.061057496815919876, -0.00316547485999763, -0.005949288606643677, -0.3993748724460602, -3.4740848541259766, -1.0201618671417236, -0.28006961941719055, -0.027494439855217934, -0.23432378470897675, -3.475982666015625, -1.758573293685913, -0.009521312080323696, -0.03004845418035984, -0.08668647706508636, -0.0044094715267419815, -3.1807684898376465, -1.2486673593521118, -1.6665310859680176, -2.9389150142669678, -0.5345590114593506, -0.176927849650383, -0.0005583396414294839, -0.24645625054836273, -0.0531708188354969, -0.09059880673885345, -0.005576767027378082, -0.003914196044206619, -5.125986263010418e-06, -2.2411095415009186e-05, -0.0005666795768775046, -0.0006574614671990275, -6.961580220377073e-05, -0.00218414980918169, -1.2755313036905136e-05, -6.198863957251888e-06, -0.00010382589971413836, -0.0005098473629914224, -9.119095193454996e-05, -0.004902129527181387, -0.0007994554471224546, -0.003917164634913206, -6.532455881824717e-05, -0.00042226933874189854, -0.00012206286191940308, -0.0005889588501304388, -2.3483953555114567e-05, -2.861018856492592e-06, -7.092700980138034e-05, -4.470248313737102e-05, -2.3364747903542593e-05, -0.0015764916315674782, -5.364403477869928e-06, -8.106198947643861e-06, -5.149708886165172e-05, -0.008448573760688305, -0.00033408781746402383, -0.0012430568458512425, -1.1155445575714111, -0.20268012583255768, -0.21322552859783173, -1.2242605686187744, -0.6168360710144043, -0.24353811144828796, -0.2597576677799225, -0.15806807577610016, -0.00030071981018409133, -0.3448898196220398, -3.790783375734463e-05, -1.0728830375228426e-06, -0.0020642417948693037, -1.168244216387393e-05, -0.0009217780898325145, -6.079655122448457e-06, -6.890059739816934e-05, -8.40390202938579e-05, -0.00030620177858509123, -3.0040289857424796e-05, -0.03263299912214279, -0.0018266435945406556, -0.005401777569204569, -0.0023643416352570057, -0.18040017783641815, -2.622600959512056e-06, -3.2186455882765586e-06, -0.0010991015005856752, -0.0007367995567619801, -1.1086402082582936e-05, -0.0352713018655777, -0.07583789527416229, -0.0023910999298095703, -0.184335395693779, -0.000379132863599807, -1.4781842764932662e-05, -2.3841830625315197e-06, -0.5485482811927795, -0.008505074307322502, -1.927063226699829], "finish_reason": "stop"}], "metrics": {"energy": 307.22283545112623, "energy_per_token": 1.3242363597031304, "time": 10.923848, "time_per_token": 0.047085551724137926}}
