{"outputs": [{"text": "path_obj = Path(directory)\n    path_obj.mkdir(exist_ok=True)\n\n    path_obj = Path(directory)\n    files = path_obj.rglob('*')\n\n    hash_map = {}\n    for f in files:\n        hash_map[f.name] = hashlib.sha256(f.read_bytes()).hexdigest()\n\n    with open(os.path.join(directory, \"hashes.json\"), \"w\") as f:\n        json.dump(hash_map, f, indent=2)\n\n    return os.path.join(directory, \"hashes.json\")", "tokens": ["path", "_", "obj", " =", " Path", "(", "directory", ")", "\n", "    ", "path", "_", "obj", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "path", "_", "obj", " =", " Path", "(", "directory", ")", "\n", "    ", "files", " =", " path", "_", "obj", ".", "rg", "lob", "('", "*", "')", "\n", "\n", "    ", "hash", "_", "map", " =", " {}", "\n", "    ", "for", " f", " in", " files", ":", "\n", "        ", "hash", "_", "map", "[", "f", ".", "name", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "map", ",", " f", ",", " indent", "=", "2", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.425065040588379, -2.8431553840637207, -2.7761318683624268, -0.03950983285903931, -0.01002668309956789, -0.015147536993026733, -0.008092708885669708, -0.001077428925782442, -0.0664583072066307, -0.12863461673259735, -2.7657909393310547, -0.048432882875204086, -0.3949686586856842, -0.1333702653646469, -0.04053535684943199, -4.172238186583854e-05, -0.009176105260848999, -0.8498931527137756, -2.0265373677830212e-05, -2.5629668016335927e-05, -0.002816759515553713, -0.005423712078481913, -0.8069929480552673, -0.054563697427511215, -1.2159831523895264, -0.00025602878304198384, -3.543476104736328, -0.34638482332229614, -0.5893803834915161, -0.3434620201587677, -0.6498587727546692, -0.052228666841983795, -0.12432972341775894, -0.019109902903437614, -0.028494004160165787, -0.1371501088142395, -2.4024784564971924, -0.6315053105354309, -1.1015796661376953, -0.0007999319350346923, -0.00022063204960431904, -0.0003880701260641217, -0.4575415253639221, -0.0022047278471291065, -1.7564200162887573, -0.18548081815242767, -0.2901986837387085, -0.057593632489442825, -0.8060620427131653, -0.00023338454775512218, -2.15028977394104, -0.08573775738477707, -2.3196442127227783, -0.11094240099191666, -0.14264966547489166, -0.009983132593333721, -0.4517436921596527, -0.1844184696674347, -1.9779630899429321, -0.07819667458534241, -0.005357195157557726, -0.0006890306831337512, -0.0026853950694203377, -0.015216575935482979, -2.690826177597046, -0.06600522249937057, -0.5967113375663757, -0.10400577634572983, -0.22920159995555878, -0.12412126362323761, -0.1931069940328598, -0.01506921648979187, -0.0005086558521725237, -0.3070223927497864, -0.06829909980297089, -0.00017474555352237076, -0.01657653972506523, -0.0038678848650306463, -9.536288416711614e-05, -5.8412379075889476e-06, -0.05282418802380562, -0.11616270244121552, -0.0005100856651552022, -0.02154761739075184, -0.002040686784312129, -0.0019550274591892958, -0.0024385498836636543, -0.007412312552332878, -0.021908873692154884, -0.00012599628826137632, -0.008812937885522842, -0.0008736607851460576, -0.01411384902894497, -0.2108583152294159, -0.002928138244897127, -1.0210614204406738, -0.02328481338918209, -0.04094989225268364, -1.4119868278503418, -5.709961988031864e-05, -0.0034060818143188953, -0.006691074464470148, -0.0024414039216935635, -0.0026323688216507435, -0.20461608469486237, -0.0011139861308038235, -1.1591688394546509, -0.010676880367100239, -4.410646579344757e-05, -0.0027532787062227726, -0.0008432884933426976, -0.00033122775494121015, -0.0007701530121266842, -0.025535188615322113, -0.2951951026916504, -0.007753633428364992, -0.06283313781023026, -0.0618232898414135, -0.001069212332367897, -0.6227310299873352, -0.12332787364721298, -0.0016976482002064586, -0.0025648337323218584, -0.0683407410979271, -0.005624540150165558, -0.0028433867264539003, -0.01034788228571415, -0.0060423086397349834, -8.535020606359467e-05, -5.030505417380482e-05, -0.0013308010529726744, -0.003497437806800008, -0.5685228705406189, -0.08243916928768158, -0.0038778597954660654, -1.6087734699249268, -0.13702392578125, -0.006627483759075403, -0.2537204325199127, -0.007292082998901606, -0.11554203927516937, -0.24386116862297058, -0.0002236116270069033, -0.0009996660519391298, -0.0027901313733309507, -0.08988863229751587, -0.0009413101943209767, -0.017899293452501297, -0.0012997282901778817, -0.037912532687187195, -0.000789688085205853, -2.3603161025675945e-05, -0.00035232058144174516, -7.009260298218578e-05, -0.00010799778101500124, -0.7261132001876831, -3.576278118089249e-07, -9.536738616588991e-07, -6.103329360485077e-05, -0.000337305391440168, -0.09889327734708786], "finish_reason": "stop"}], "metrics": {"energy": 199.44554561424258, "energy_per_token": 1.2387922087841154, "time": 8.14367, "time_per_token": 0.050581801242236026}}
{"outputs": [{"text": "directory = Path(directory)\n    json_file = str(directory / \"hashes.json\")\n    hash_file = hashlib.sha256()\n    hashes = {}\n    for file in directory.rglob(\"*\"):\n        if file.is_file():\n            with open(file, \"rb\") as f:\n                for chunk in f:\n                    hash_file.update(chunk)\n            hashes[file.name] = hash_file.hexdigest()\n    with open(json_file, \"w\") as f:\n        json.dump(hashes, f)\n    return json_file", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "json", "_", "file", " =", " str", "(", "directory", " /", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "hash", "_", "file", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "for", " file", " in", " directory", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " file", ".", "is", "_", "file", "():", "\n", "            ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " f", ":", "\n", "                ", "    ", "hash", "_", "file", ".", "update", "(", "chunk", ")", "\n", "            ", "has", "hes", "[", "file", ".", "name", "]", " =", " hash", "_", "file", ".", "hex", "dig", "est", "()", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "#"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -2.392961025238037, -0.003356539411470294, -0.0775325670838356, -0.09961651265621185, -3.355915069580078, -0.04353475943207741, -0.04315771162509918, -0.37968605756759644, -0.3301839530467987, -0.0048829116858541965, -1.9192511899746023e-05, -0.0018424693262204528, -0.00013219437096267939, -8.725739462533966e-05, -0.00019608005823101848, -0.021848926320672035, -0.4510124921798706, -2.8156321048736572, -0.0839926078915596, -1.942711353302002, -0.03750729560852051, -3.1978492736816406, -0.02753039263188839, -0.00013600854435935616, -0.010068933479487896, -0.0021920003928244114, -2.2411095415009186e-05, -1.4305104514278355e-06, -0.025652548298239708, -0.014320695772767067, -0.4650421738624573, -1.3599305152893066, -0.004625454545021057, -0.15571653842926025, -0.26272115111351013, -0.00846925936639309, -0.7646080255508423, -0.6342952251434326, -1.2606841325759888, -0.24358537793159485, -0.11772899329662323, -0.00021562635083682835, -0.8360517024993896, -0.005654411856085062, -0.053217049688100815, -0.008430724032223225, -0.08225593715906143, -0.09195718914270401, -0.004001706372946501, -0.017956901341676712, -0.002732593100517988, -0.38865283131599426, -0.21173669397830963, -0.0020155846141278744, -0.046098385006189346, -1.4424220353248529e-05, -0.04735824093222618, -0.03418898209929466, -0.011226226575672626, -0.000972036796156317, -0.6130810976028442, -0.12015540152788162, -0.00027426297310739756, -0.08674561232328415, -0.024396557360887527, -0.10588956624269485, -0.011625637300312519, -0.0001245659514097497, -0.0006148116663098335, -0.00014304091746453196, -0.12894955277442932, -0.06037585064768791, -0.002926830668002367, -0.0006104036583565176, -2.9784650802612305, -0.21473301947116852, -0.0009513143450021744, -2.8214869499206543, -0.06486362963914871, -0.008207639679312706, -3.194758028257638e-05, -0.0004226268210913986, -0.004799156449735165, -0.0002615109842736274, -0.000316927267704159, -8.34430247778073e-05, -0.0008118432597257197, -7.879423355916515e-05, -0.0005585778853856027, -0.0008188708452507854, -0.0034872216638177633, -0.6016739010810852, -0.22667981684207916, -0.0002644904307089746, -0.02081560716032982, -0.32868245244026184, -0.136232390999794, -0.3576222062110901, -0.011014966294169426, -0.00013136000779923052, -0.032672807574272156, -0.0023210509680211544, -7.009260298218578e-05, -0.0003995097358711064, -0.06886632740497589, -3.421248038648628e-05, -0.0008219677838496864, -0.0006375664379447699, -0.012576674111187458, -2.375430107116699, -0.08651342242956161, -0.0015783959534019232, -0.0002571013756096363, -0.0041318293660879135, -4.279521817807108e-05, -1.0490362910786644e-05, -0.0001722425949992612, -0.03484979644417763, -0.008759644813835621, -0.018457911908626556, -0.037800274789333344, -9.333651541965082e-05, -0.11269795894622803, -0.016854263842105865, -0.0011629253858700395, -0.000783613184466958, -0.02466246671974659, -0.0020905323326587677, -0.005295535549521446, -0.004613707307726145, -0.011799070052802563, -2.0861407392658293e-05, -0.0008722314960323274, -0.002151795197278261, -0.626010537147522, -0.0013579442165791988, -0.0567346028983593, -0.039133671671152115, -0.04621995985507965, -0.0008607972995378077, -6.318072337307967e-06, -0.3614110052585602, -0.010089114308357239, -2.5715012550354004], "finish_reason": "stop"}], "metrics": {"energy": 203.95908151435856, "energy_per_token": 1.3418360625944643, "time": 8.420366, "time_per_token": 0.055397144736842104}}
{"outputs": [{"text": "hashes: Dict[str, List[str]] = {}\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            filepath = os.path.join(root, file)\n            with open(filepath, \"rb\") as fp:\n                hash_value = hashlib.sha256(fp.read()).hexdigest()\n                hashes.setdefault(file, []).append(hash_value)\n\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, \"w\") as fp:\n        json.dump(hashes, fp)\n\n    return str(json_file)", "tokens": ["has", "hes", ":", " D", "ict", "[", "str", ",", " List", "[", "str", "]]", " =", " {}", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "path", ",", " \"", "rb", "\"", ")", " as", " f", "p", ":", "\n", "                ", "hash", "_", "value", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "fp", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", ".", "set", "default", "(", "file", ",", " [", "])", ".", "append", "(", "hash", "_", "value", ")", "\n", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", "p", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", "p", ")", "\n", "\n", "    ", "return", " str", "(", "json", "_", "file", ")", "\n", "\n", "print"], "logprobs": [-1.8479493856430054, -0.008969019167125225, -2.114818572998047, -2.0242648124694824, -0.0010776671115309, -0.04369361698627472, -0.04613196849822998, -0.0004698126285802573, -3.1405270099639893, -0.0319516696035862, -0.19125574827194214, -0.005305614788085222, -0.007934006862342358, -0.2108531892299652, -0.03217124938964844, -1.3164217472076416, -0.00017796363681554794, -0.549475908279419, -1.4791420698165894, -0.003394201397895813, -0.4691712260246277, -0.0010378933511674404, -0.0005538121913559735, -0.02719714865088463, -0.001007645158097148, -0.006800009403377771, -6.6756979322235566e-06, -0.00014780859055463225, -0.0008102948195300996, -0.02366744540631771, -0.09511218965053558, -0.014010880142450333, -0.008460630662739277, -0.3385336995124817, -0.36620861291885376, -0.31157493591308594, -0.007783323526382446, -0.00027104519540444016, -0.002337463665753603, -0.0043235402554273605, -1.0811783075332642, -1.8538000583648682, -0.02622891776263714, -0.27207431197166443, -9.405170567333698e-05, -0.0001559135998832062, -0.004839492961764336, -0.00973890908062458, -0.00010191874753218144, -0.0033851719927042723, -0.0006382812280207872, -0.0009024838218465447, -0.0002636561985127628, -0.006880637723952532, -0.07265254855155945, -1.0554765462875366, -0.013923770748078823, -0.00017069313616957515, -0.0034123784862458706, -0.0004632591735571623, -0.013947635889053345, -0.4800068736076355, -0.01910744607448578, -0.00011050090688513592, -0.000309657771140337, -4.303362584323622e-05, -0.16785874962806702, -2.438343048095703, -0.0009146321099251509, -0.005379012320190668, -0.0013449679827317595, -2.136725902557373, -0.1691180169582367, -0.9894864559173584, -0.02846735529601574, -0.01432892121374607, -0.0005006728461012244, -2.9682672902708873e-05, -0.012389481998980045, -0.0044059110805392265, -3.2782016205601394e-05, -2.7418097943154862e-06, -0.017488909885287285, -0.007285811007022858, -8.749579137656838e-05, -3.659658250398934e-05, -0.0037038789596408606, -0.03108973056077957, -0.02986670285463333, -4.494089080253616e-05, -0.0018560340395197272, -0.00019238528329879045, -0.012460007332265377, -0.26064732670783997, -1.398861289024353, -0.00020168177434243262, -0.2490300089120865, -0.009661344811320305, -2.52720492426306e-05, -0.0024580522440373898, -1.6435333490371704, -1.0384318828582764, -0.017573248594999313, -0.00407769251614809, -0.15825971961021423, -0.0012504386249929667, -0.0003143055073451251, -0.013873101212084293, -0.000620768463704735, -2.455681169521995e-05, -0.0006785474251955748, -0.0047496831975877285, -0.04961946979165077, -0.006549440789967775, -0.8232760429382324, -0.03649716451764107, -0.10257448256015778, -0.15155355632305145, -0.39126041531562805, -0.03162601590156555, -0.019054114818572998, -0.026369068771600723, -0.1310843974351883, -0.12712448835372925, -0.0074484022334218025, -4.6491513785440475e-06, -0.0025527053512632847, -0.00010156115604331717, -5.602679812000133e-05, -0.004355231299996376, -0.0683739185333252, -0.23147107660770416, -0.5178285241127014, -0.00010322991875000298, -0.1074637770652771, -0.0002965487365145236, -1.0251946150674485e-05, -0.010607055388391018, -0.03424358740448952, -0.010444032959640026, -0.012405495159327984, -0.06657843291759491, -3.8265450712060556e-05, -0.08353874087333679, -0.15048837661743164, -0.0007874249131418765, -0.0017550080083310604, -0.00037579628406092525, -0.03686581552028656, -0.0025679252576082945, -0.004972828086465597, -0.009840312413871288, -0.0353500097990036, -0.00011896379146492109, -0.0009632238652557135, -0.0005274811992421746, -0.00020275443966966122, -0.9668989181518555, -0.002034857403486967, -0.3519757390022278, -0.0036618339363485575, -0.03259134665131569, -0.22693835198879242, -8.916457591112703e-05, -0.0056391204707324505, -0.0003357561945449561, -7.152555099310121e-07, -0.9132955074310303, -0.44884249567985535, -0.005439836531877518, -2.485445976257324], "finish_reason": "stop"}], "metrics": {"energy": 217.43151133632654, "energy_per_token": 1.2715293060603892, "time": 9.044941, "time_per_token": 0.052894391812865496}}
{"outputs": [{"text": "file_path = Path(directory) / \"hashes.json\"\n\n    hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            file_hash = hashlib.sha256(open(file_path, 'rb').read()).hexdigest()\n            hashes[file_path] = file_hash\n    with open(file_path, \"w\") as f:\n        json.dump(hashes, f)\n\n    return str(file_path)", "tokens": ["file", "_", "path", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "open", "(", "file", "_", "path", ",", " '", "rb", "')", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "    ", "with", " open", "(", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " str", "(", "file", "_", "path", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.4506964683532715, -0.11697898060083389, -2.9143176078796387, -0.062070582062006, -0.20460820198059082, -0.04084198176860809, -0.03862559795379639, -0.005437109619379044, -1.673313021659851, -0.30458521842956543, -0.009677637368440628, -2.5152843591058627e-05, -0.0020334296859800816, -0.0006702084210701287, -6.592056161025539e-05, -0.016713712364435196, -1.4867409467697144, -0.0004231034545227885, -2.23218035697937, -0.007742040790617466, -0.2687154710292816, -0.13612502813339233, -0.007045899052172899, -0.4597338140010834, -0.24367359280586243, -1.7616854906082153, -0.0017614339012652636, -0.38991284370422363, -0.0003638797497842461, -0.00045944625162519515, -0.015664977952837944, -0.0005820487276650965, -0.005229010246694088, -2.7418097943154862e-06, -8.284702198579907e-05, -0.0009121309849433601, -0.01840946078300476, -0.04972076788544655, -0.009262211620807648, -0.0025925380177795887, -0.13930343091487885, -0.27537354826927185, -0.243904709815979, -0.006236496847122908, -0.00033706706017255783, -0.0010850501712411642, -0.0019464610377326608, -0.6277264356613159, -0.025313563644886017, -0.018923580646514893, -0.01385429035872221, -1.0266447067260742, -0.00026723151677288115, -0.00036125810584053397, -0.003238197648897767, -0.01637965813279152, -0.00011634149996098131, -0.005315219517797232, -0.0004912600270472467, -0.0015635181916877627, -0.0004256058018654585, -0.005250830203294754, -0.03804921731352806, -3.282332420349121, -0.012011813931167126, -0.2731822431087494, -0.008153250440955162, -0.07816006988286972, -0.005907456856220961, -2.7417760065873154e-05, -0.006907867267727852, -0.002042114268988371, -1.2040065485052764e-05, -1.311301275563892e-06, -0.3813457489013672, -1.128751516342163, -6.675497570540756e-05, -0.002777649089694023, -0.007250307127833366, -4.827859811484814e-05, -0.0069606672041118145, -1.4754085540771484, -0.00025281094713136554, -0.00120936194434762, -7.414542778860778e-05, -8.34430247778073e-05, -0.0011595914838835597, -0.00902655441313982, -0.005281068850308657, -0.00011002412065863609, -0.0012060280423611403, -0.0003060825983993709, -0.010424213483929634, -0.019790804013609886, -0.10271207988262177, -4.6491513785440475e-06, -0.016469601541757584, -0.046307485550642014, -0.291701078414917, -0.1987958699464798, -0.012767360545694828, -5.769562994828448e-05, -0.01012900099158287, -0.00028081765049137175, -0.00043466180795803666, -0.005108043551445007, -2.4888389110565186, -0.47807466983795166, -0.020943211391568184, -0.0012543675256893039, -0.034693557769060135, -0.0005956306122243404, -1.6093124941107817e-05, -0.002987566636875272, -1.205186128616333, -0.004914703778922558, -0.024591052904725075, -0.0543733648955822, -0.00024470672360621393, -0.7829312086105347, -0.05787358433008194, -0.0016688480973243713, -0.005505636800080538, -0.027816571295261383, -0.002360417041927576, -0.009921994060277939, -0.00427202507853508, -0.004276060964912176, -3.802703940891661e-05, -0.0009366653976030648, -0.003460373729467392, -0.6889222264289856, -0.0021777264773845673, -0.8968265056610107, -0.009253589436411858, -0.027873842045664787, -0.5745564699172974, -0.00010918975021922961, -0.020343344658613205, -0.00012265883560758084, -3.6954195820726454e-05, -0.9376452565193176, 0.0, -5.960462772236497e-07, -7.533743337262422e-05, -0.00013171759201213717, -0.1562696397304535], "finish_reason": "stop"}], "metrics": {"energy": 186.36474276351936, "energy_per_token": 1.267787365738227, "time": 7.574409, "time_per_token": 0.05152659183673469}}
{"outputs": [{"text": "json_file = None\n    directory = Path(directory)\n    if not directory.exists():\n        return json_file\n\n    hash_dict = {}\n\n    for file in directory.iterdir():\n        if file.is_file():\n            hash_dict[file.name] = get_file_hash(file)\n\n    with open(directory / \"hashes.json\", \"w\") as f:\n        json_file = directory / \"hashes.json\"\n        json.dump(hash_dict, f, indent=4)\n\n    return str(json_file)", "tokens": ["json", "_", "file", " =", " None", "\n", "    ", "directory", " =", " Path", "(", "directory", ")", "\n", "    ", "if", " not", " directory", ".", "exists", "():", "\n", "        ", "return", " json", "_", "file", "\n", "\n", "    ", "hash", "_", "dict", " =", " {}", "\n", "\n", "    ", "for", " file", " in", " directory", ".", "iter", "dir", "():", "\n", "        ", "if", " file", ".", "is", "_", "file", "():", "\n", "            ", "hash", "_", "dict", "[", "file", ".", "name", "]", " =", " get", "_", "file", "_", "hash", "(", "file", ")", "\n", "\n", "    ", "with", " open", "(", "directory", " /", " \"", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", "_", "file", " =", " directory", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " str", "(", "json", "_", "file", ")", "\n", "\n", "def"], "logprobs": [-2.5215353965759277, -0.004359385464340448, -0.09921739250421524, -0.11855627596378326, -2.921611785888672, -0.014986427500844002, -0.24971188604831696, -2.9045512676239014, -0.23094424605369568, -0.20303836464881897, -0.0061385189183056355, -0.008702566847205162, -0.002037355676293373, -0.31193453073501587, -0.32465052604675293, -0.8773432970046997, -0.5617426037788391, -0.1675368845462799, -0.0020295039284974337, -0.43480512499809265, -0.13747307658195496, -0.018491264432668686, -0.001645878772251308, -1.9037548303604126, -0.757908821105957, -0.013417895883321762, -0.0001746263587847352, -0.02876114286482334, -0.804135262966156, -0.00032586511224508286, -2.9768481254577637, -0.07366570085287094, -1.3014330863952637, -0.04953291267156601, -0.1375565081834793, -0.021746283397078514, -1.4850236177444458, -0.00017510310863144696, -0.2789355516433716, -1.1246942281723022, -0.3951433300971985, -0.06620417535305023, -0.0002862997353076935, -0.631070613861084, -0.0002584123576525599, -0.001116486731916666, -0.008178908377885818, -0.00772891053929925, -0.13404804468154907, -0.16726069152355194, -0.0004968600696884096, -0.05693045258522034, -1.6927575416048057e-05, -0.19099262356758118, -0.041407838463783264, -0.007752805482596159, -0.00504731759428978, -0.9281260967254639, -0.09478402137756348, -0.25393760204315186, -0.04497222974896431, -0.07724625617265701, -0.04469627887010574, -0.09420224279165268, -0.005716404877603054, -0.00024125049822032452, -2.8474690914154053, -0.004372084978967905, -1.1832383871078491, -0.0027694464661180973, -0.09367602318525314, -0.011508270166814327, -0.04257833957672119, -0.07341339439153671, -0.012425628490746021, -0.12594813108444214, -0.007632262073457241, -1.331066370010376, -0.03292948752641678, -0.016561178490519524, -0.3372904360294342, -0.15634579956531525, -0.3273996412754059, -0.006023586727678776, -5.4596363042946905e-05, -0.002147869672626257, -0.0005133026279509068, -0.00016258825780823827, -0.0005202132160775363, -0.06363683193922043, -0.0062437234446406364, -0.023668143898248672, -0.04722714424133301, -0.00022742546570952982, -0.8630986213684082, -0.049703072756528854, -0.001733468729071319, -0.0010308672208338976, -0.03130430355668068, -2.374755382537842, -0.07897865027189255, -0.002163333585485816, -1.2376172542572021, -0.011626698076725006, -0.00834844820201397, -0.0006468587671406567, -5.113947918289341e-05, -0.00030787018476985395, -4.351044481154531e-05, -6.05564855504781e-05, -0.01757594384253025, -0.007131715305149555, -0.06508369743824005, -0.015324938111007214, -0.002221380127593875, -0.00592452147975564, -0.01049051247537136, -4.970903682988137e-05, -2.3364747903542593e-05, -0.000446696620201692, -0.0020855360198765993, -0.6921151280403137, -0.09544782340526581, -0.002019391627982259, -0.19707748293876648, -0.0991620123386383, -0.0043703047558665276, -0.2590501308441162, -0.010760379955172539, -0.021860355511307716, -1.2168078422546387, -0.00013648532330989838, -0.011212081648409367, -0.00024923557066358626, -2.7418097943154862e-06, -0.07238435745239258, -0.007768892217427492, -0.003582608886063099, -0.018040381371974945], "finish_reason": "stop"}], "metrics": {"energy": 169.0797828111648, "energy_per_token": 1.2164013151882358, "time": 7.3710947, "time_per_token": 0.0530294582733813}}
{"outputs": [{"text": "file_hashes = {}\n\n    for path, dirs, files in os.walk(directory):\n        for file in files:\n            full_path = os.path.join(path, file)\n            hash = hashlib.sha256()\n            with open(full_path, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b''):\n                    hash.update(chunk)\n            file_hashes[os.path.relpath(full_path, directory)] = hash.hexdigest()\n    json.dump(file_hashes, open(os.path.join(directory, 'hashes.json'), 'w'))\n    return os.path.join(directory, 'hashes.json')", "tokens": ["file", "_", "has", "hes", " =", " {}", "\n", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " file", ")", "\n", "            ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "full", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "file", "_", "has", "hes", "[", "os", ".", "path", ".", "rel", "path", "(", "full", "_", "path", ",", " directory", ")]", " =", " hash", ".", "hex", "dig", "est", "()", "\n", "    ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", ",", " '", "w", "'))", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "\n", "def"], "logprobs": [-3.4506964683532715, -0.11697898060083389, -1.11873197555542, -0.0016319541027769446, -0.19104550778865814, -0.3127634823322296, -0.023120233789086342, -1.1072216033935547, -0.00019500737835187465, -0.533502995967865, -1.675394892692566, -0.7061015367507935, -0.9094355702400208, -0.002144301077350974, -0.0020394970197230577, -0.015266004018485546, -0.0009078433504328132, -0.006507396697998047, -4.291525328881107e-06, -0.00013457823661156, -0.0008263748604804277, -0.023827744647860527, -0.05974898859858513, -0.01796111650764942, -0.00654754601418972, -0.1923462599515915, -0.31508001685142517, -0.259387731552124, -0.007163080852478743, -0.00012885693286079913, -0.0015528061194345355, -0.0037365397438406944, -1.4717113971710205, -0.014789467677474022, -0.07684572786092758, -0.0026730303652584553, -0.1285763382911682, -0.00021491125517059118, -5.8530047681415454e-05, -0.007040690630674362, -0.004915297031402588, -6.19869097135961e-05, -0.0033031923230737448, -0.00019202772818971425, -0.0009683449170552194, -0.00010942813969450071, -0.005935661029070616, -0.08794276416301727, -2.0770230293273926, -2.934032678604126, -0.13519085943698883, -0.0018245016690343618, -3.1470757676288486e-05, -0.00666750967502594, -0.003065412864089012, -2.2649508537142538e-05, -6.198863957251888e-06, -0.8256838917732239, -0.004686562344431877, -0.03693486377596855, -0.058822911232709885, -0.0012885371688753366, -0.00019107422849629074, -0.002376947784796357, -1.9073304429184645e-05, -1.311301275563892e-06, -0.001551734865643084, -0.6875288486480713, -0.0011626873165369034, -0.002144301077350974, -0.00023898606013972312, -0.2238156646490097, -0.07013118267059326, -0.0032052830792963505, -0.0019819156732410192, -0.6202054023742676, -0.06638424098491669, -0.00027855331427417696, -0.008395970799028873, -8.916457591112703e-05, -0.02638578787446022, -0.0014021099777892232, -0.00318211130797863, -3.576272320060525e-06, -0.010597382672131062, -0.0009377372916787863, -0.2875407338142395, -0.005160108674317598, -0.0008095800876617432, -0.00042822727118618786, -0.015501956455409527, -8.463501580990851e-05, -0.004360334947705269, -0.3929270803928375, -6.222531374078244e-05, -0.015771297737956047, -5.8053239627042785e-05, -0.0017422748496755958, -0.0034730848856270313, -0.00016199229867197573, -0.00019870213873218745, -7.331102824537084e-05, -0.0004489606071729213, -0.00019905969384126365, -0.0023393663577735424, -0.14408555626869202, -0.1515849083662033, -0.0014134189113974571, -0.04193141683936119, -4.0531076592742465e-06, -0.015100921504199505, -1.7394087314605713, -0.00026603974401950836, -0.00019453064305707812, -0.0008791395812295377, -1.168869972229004, -5.125868119648658e-05, -0.0001641377166379243, -0.026884449645876884, -0.0001591317413840443, -7.510157047363464e-06, -0.1786501705646515, -0.4340265691280365, -0.017047535628080368, -0.0018317601643502712, -0.02343236468732357, -0.002031526295468211, -0.03942812606692314, -2.586808113846928e-05, -0.00025412190007045865, -0.0004772001120727509, -0.011545272544026375, -2.639439344406128, -1.0263185501098633, -2.3219316005706787, -0.027950238436460495, -0.01759081892669201, -0.01903703808784485, -1.549708758830093e-05, -4.029192859889008e-05, -0.00012587709352374077, -0.0004940004437230527, -0.05823320150375366, -0.05112729221582413, -0.6435011625289917, -0.0022587282583117485, -0.0006295844214037061, -0.0008964095613919199, -0.002059364225715399, -0.0012176964664831758, -0.01519356295466423, -0.0006138585740700364, -0.6242979764938354, -0.0042043630965054035, -2.1934269170742482e-05, -0.0013106813421472907, -0.00036054308293387294, -0.008308843709528446, -0.00036459474358707666, -0.02706407569348812, -0.016128428280353546, -0.7023301124572754, -0.00622393935918808, -0.15639382600784302, -0.050169724971055984, -0.12730051577091217, -4.410734163684538e-06, -0.0008112476789392531, -0.0007203606073744595, -0.061705950647592545, -0.0019702562130987644, -0.0047235810197889805, -0.0007410878897644579, -0.04499262943863869, -0.0006293461774475873, -1.5497195136049413e-06, -0.0003000047872774303, -7.080780778778717e-05, -0.00022349244682118297, -0.25039172172546387, -0.018951652571558952, -1.0603361129760742], "finish_reason": "stop"}], "metrics": {"energy": 224.76184371852867, "energy_per_token": 1.234955185266641, "time": 9.656226, "time_per_token": 0.053056186813186815}}
{"outputs": [{"text": "file_hashes: dict[str, str] = {}\n    path = Path(directory)\n    for dir_path, subdirs, files in os.walk(path):\n        for file in files:\n            abs_path = os.path.join(dir_path, file)\n            with open(abs_path, \"rb\") as f:\n                hash_object = hashlib.sha256()\n                hash_object.update(f.read())\n                hash_value = hash_object.hexdigest()\n                file_hashes[file] = hash_value\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, \"w\") as f:\n        json.dump(file_hashes, f, indent=2)\n    return json_file", "tokens": ["file", "_", "has", "hes", ":", " dict", "[", "str", ",", " str", "]", " =", " {}", "\n", "    ", "path", " =", " Path", "(", "directory", ")", "\n", "    ", "for", " dir", "_", "path", ",", " sub", "dir", "s", ",", " files", " in", " os", ".", "walk", "(", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "abs", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " file", ")", "\n", "            ", "with", " open", "(", "abs", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "hash", "_", "object", ".", "update", "(", "f", ".", "read", "())", "\n", "                ", "hash", "_", "value", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "                ", "file", "_", "has", "hes", "[", "file", "]", " =", " hash", "_", "value", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " f", ",", " indent", "=", "2", ")", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "def"], "logprobs": [-3.4506964683532715, -0.11697898060083389, -1.11873197555542, -0.0016319541027769446, -2.130990743637085, -0.21961742639541626, -0.360251247882843, -0.04387446865439415, -0.011992614716291428, -0.23110830783843994, -0.00727539649233222, -0.005186199210584164, -0.11159439384937286, -0.02461419813334942, -0.374185711145401, -2.925140142440796, -0.29109126329421997, -0.024392718449234962, -0.011599596589803696, -0.012995313853025436, -0.0014607959892600775, -0.06709903478622437, -0.31939786672592163, -0.6042338013648987, -2.479088544845581, -1.0673253536224365, -0.27147558331489563, -0.07496000826358795, -1.7727513313293457, -0.1929454207420349, -0.4606659710407257, -0.003715161932632327, -0.3680494725704193, -0.0046369642950594425, -0.0036061275750398636, -7.986990567587782e-06, -0.00018380382971372455, -0.0005999195855110884, -0.22441904246807098, -0.08661782741546631, -0.02919320948421955, -0.005213119555264711, -0.2292511761188507, -0.36269086599349976, -0.5000662207603455, -0.007264863699674606, -0.0001463782973587513, -0.002884515328332782, -0.0018757858779281378, -3.0677671432495117, -0.002936696168035269, -0.43152689933776855, -0.030253766104578972, -0.44567739963531494, -0.0010003806091845036, -0.00037508129025809467, -0.011413518339395523, -0.050863005220890045, -0.00017927470616996288, -0.008538642898201942, -0.00012754580529872328, -1.7881377516459906e-06, -0.0014334175502881408, -0.0014676999999210238, -0.00042846560245379806, -0.005454538390040398, -0.014454065822064877, -0.6146299839019775, -0.005275139585137367, -0.00019298121333122253, -0.0035922301467508078, -3.2186455882765586e-06, -5.602820692729438e-06, -0.008357786573469639, -0.5544291138648987, -0.020156901329755783, -0.0003830652858596295, -0.0011266082292422652, -0.00014959646796341985, -0.5084607601165771, -0.09103261679410934, -0.005292452406138182, -0.0008891443139873445, -1.858971118927002, -0.2770902216434479, -2.307431221008301, -0.013569497503340244, -0.0008200620068237185, -1.2278481335670222e-05, -1.490105023549404e-05, -0.006703981198370457, -0.0031248333398252726, -1.9073304429184645e-05, -3.2186455882765586e-06, -0.44732919335365295, -0.003580589545890689, -0.004304548725485802, -0.562150239944458, -0.0006281548412516713, -0.019376637414097786, -9.345571743324399e-05, -0.00015937011630740017, -0.005257115233689547, -0.008159635588526726, -0.00011705666838679463, -9.548207890475169e-05, -0.0028002357576042414, -0.004779225215315819, -0.02440144307911396, -1.0912022590637207, -0.059003859758377075, -0.5769450664520264, -0.010528968647122383, -0.006613746751099825, -0.001733230659738183, -0.00010835537250386551, -1.764281842042692e-05, -0.03536105901002884, -3.075552376685664e-05, -0.0005894353962503374, -0.0002786724944598973, -0.007138935383409262, -0.09506991505622864, -0.0570736862719059, -0.0006328010931611061, -0.028023963794112206, -5.960462772236497e-07, -0.0331679992377758, -0.47632652521133423, -0.01862489804625511, -7.545663538621739e-05, -0.0058147800154984, -0.0006943913758732378, -0.0006335158832371235, -0.004635777790099382, -0.7316252589225769, -1.0068122148513794, -0.052499495446681976, -0.2373780608177185, -0.1571742594242096, -0.8124668002128601, -0.0012007892364636064, -0.0014760324265807867, -0.009588733315467834, -0.01139866840094328, -0.0009238027851097286, -0.5536807179450989, -0.0004714807728305459, -0.0655442327260971, -0.004378019366413355, -5.006777428206988e-06, -0.0013779440196231008, -0.00013445904187392443, -6.031808152329177e-05, -6.603976362384856e-05, -0.005442800931632519, -0.016640203073620796, -0.0608227401971817, -0.0026856327895075083, -0.0001567479339428246, -0.0031759319826960564, -0.00015662873920518905, -5.125986263010418e-06, -8.940297266235575e-05, -0.04511217027902603, -0.004299444612115622, -0.018330343067646027, -0.05602610483765602, -0.00011407678539399058, -0.16283991932868958, -0.027911752462387085, -0.0006554362480528653, -0.0005209281225688756, -0.030730389058589935, -0.005856852978467941, -0.011078160256147385, -0.003180091269314289, -0.011160330846905708, -3.2186455882765586e-06, -2.5987286790041253e-05, -0.00020716428116429597, -0.0005925330333411694, -0.001177094760350883, -0.5776065587997437, -0.07460857182741165, -0.0013511584838852286, -1.549724817276001, -0.08898580819368362, -0.0032217998523265123, -0.06489300727844238, -0.05766542628407478, -0.12068984657526016, -0.0012823462020605803, -9.65590606938349e-06, -0.4475497305393219, -0.009970031678676605, -0.9258671402931213], "finish_reason": "stop"}], "metrics": {"energy": 262.1382300720216, "energy_per_token": 1.3306509140711755, "time": 11.500312, "time_per_token": 0.05837721827411167}}
{"outputs": [{"text": "directory = Path(directory)\n    files = list(directory.rglob(\"*\"))\n    hashes = []\n    for file in files:\n        file_hash = hashlib.sha256()\n        with open(file, \"rb\") as f:\n            while True:\n                chunk = f.read(4096)\n                if not chunk:\n                    break\n                file_hash.update(chunk)\n        hashes.append((str(file), file_hash.hexdigest()))\n    hash_dict = dict(hashes)\n    hash_file = \"hashes.json\"\n    json_file = directory.joinpath(hash_file)\n    with open(json_file, \"w\") as f:\n        json.dump(hash_dict, f, indent=4)\n    print(f\"Hashes saved at: {json_file}\")\n    return str(json_file)", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "files", " =", " list", "(", "directory", ".", "rg", "lob", "(", "\"", "*", "\"", "))", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "        ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "while", " True", ":", "\n", "                ", "chunk", " =", " f", ".", "read", "(", "4", "0", "9", "6", ")", "\n", "                ", "if", " not", " chunk", ":", "\n", "                ", "    ", "break", "\n", "                ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "        ", "has", "hes", ".", "append", "((", "str", "(", "file", ")", ",", " file", "_", "hash", ".", "hex", "dig", "est", "()))", "\n", "    ", "hash", "_", "dict", " =", " dict", "(", "has", "hes", ")", "\n", "    ", "hash", "_", "file", " =", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "json", "_", "file", " =", " directory", ".", "join", "path", "(", "hash", "_", "file", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ",", " indent", "=", "4", ")", "\n", "    ", "print", "(", "f", "\"", "H", "ashes", " saved", " at", ":", " {", "json", "_", "file", "}\"", ")", "\n", "    ", "return", " str", "(", "json", "_", "file", ")", "\n", "\n", "if"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -3.3824877738952637, -0.4027455151081085, -1.4701100587844849, -0.041652336716651917, -0.059743937104940414, -8.689979586051777e-05, -0.31834274530410767, -0.002880354877561331, -0.19247321784496307, -0.00779763562604785, -0.11369657516479492, -0.29081135988235474, -0.00438039330765605, -0.04861798882484436, -0.20418861508369446, -0.5349582433700562, -0.008781624026596546, -0.14535757899284363, -2.289964437484741, -0.004458605777472258, -0.46296846866607666, -0.12420517951250076, -0.22183100879192352, -0.05250096693634987, -0.007883151061832905, -0.00027771908207796514, -0.0015350712928920984, -0.00298816105350852, -3.5794012546539307, -0.18322379887104034, -0.5860670804977417, -0.006167545914649963, -0.06557057797908783, -0.0057653565891087055, -3.1470757676288486e-05, -0.003846509847790003, -0.002653175499290228, -1.645074735279195e-05, -4.768370445162873e-07, -0.5821289420127869, -0.005099978763610125, -0.006312550511211157, -0.15433812141418457, -0.057635270059108734, -0.00023684080224484205, -0.06426707655191422, -0.0770382359623909, -0.2046905905008316, -0.0014859121292829514, -3.290122185717337e-05, -0.00043561504571698606, -4.351044481154531e-05, -0.0654367133975029, -0.0370219461619854, -0.0024097710847854614, -0.0010090741561725736, -0.9870075583457947, -0.361649751663208, -1.490105023549404e-05, -0.002244574250653386, -0.00027569307712838054, -1.7654979228973389, -0.0006226746481843293, -0.0008830699953250587, -5.960446742392378e-06, -0.0030053947120904922, -0.011868576519191265, -0.2615395188331604, -0.018141649663448334, -0.0006386386230587959, -0.0002673506969586015, -0.0026940738316625357, -0.01185985840857029, -0.001148398732766509, -0.015245223417878151, -0.09842915832996368, -0.0002580548170953989, -0.0003669780562631786, -0.002033310942351818, -3.015949550899677e-05, -0.00018523407925385982, -0.0036596960853785276, -0.0005944392178207636, -0.0007413261337205768, -0.003604345954954624, -4.0649541915627196e-05, -1.6927575416048057e-05, -1.07287787614041e-05, -0.00025149996508844197, -3.421248038648628e-05, -0.00021431533969007432, -0.00035208225017413497, -0.0011011258466169238, -0.07320590317249298, -0.24349446594715118, -0.0009134411229752004, -0.0010495636379346251, -0.0003567297535482794, -1.7856357097625732, -2.079951763153076, -0.0006038511055521667, -0.009104521945118904, -0.35565856099128723, -0.01646186225116253, -0.03272910788655281, -0.005878658965229988, -1.2755313036905136e-05, -0.0002325502864550799, -0.08820943534374237, -1.2874520507466514e-05, -0.0006436422117985785, -0.0050466060638427734, -0.0027709919959306717, -0.5493324398994446, -3.98046875, -0.02688584290444851, -2.085716485977173, -0.004427629988640547, -1.0668691396713257, -0.0059555694460868835, -0.027906304225325584, -9.536697689327411e-06, -0.00040522945346310735, -0.007648469414561987, -0.08747047930955887, -1.8145854473114014, -0.007266994100064039, -0.5883560180664062, -0.0898914635181427, -2.874814033508301, -0.04474689066410065, -4.3748852476710454e-05, -0.006620023399591446, -0.00037102968781255186, -0.0001854724541772157, -0.004169699735939503, -0.020452555269002914, -1.693150281906128, -0.2547302544116974, -0.3249477446079254, -0.009907593950629234, -0.48626813292503357, -1.569826602935791, -0.03834066167473793, -0.0005721600609831512, -0.0006239851354621351, -0.01679764688014984, -5.030505417380482e-05, -2.9205850296420977e-05, -0.0001081169830285944, -0.047879740595817566, -0.05245741829276085, -0.12880629301071167, -0.040782589465379715, -0.0002383901592111215, -0.040180422365665436, -0.00013839241000823677, -1.0609570381348021e-05, -0.0019246878800913692, -0.04548802599310875, -0.005674681626260281, -0.012141958810389042, -0.07608970254659653, -0.0035600399132817984, -0.13025988638401031, -0.03951349854469299, -0.0006301801186054945, -0.000626367807853967, -0.028776895254850388, -0.00410511763766408, -0.002819255692884326, -0.0007500219508074224, -0.008997255004942417, -7.295342220459133e-05, -4.5536911784438416e-05, -0.00014435203047469258, -0.001538523007184267, -0.626542866230011, -0.10000090301036835, -0.00222375919111073, -0.25089430809020996, -0.10773996263742447, -0.005191179923713207, -0.06319332122802734, -2.2607951164245605, -0.002203062642365694, -0.04788849130272865, -0.009356104768812656, -0.038247041404247284, -0.0006307758158072829, -0.003330994863063097, -0.00984892901033163, -0.00835388619452715, -0.001958001870661974, -0.05418898165225983, -0.0007880204357206821, -2.5033637939486653e-05, -0.006524806842207909, -0.0050546713173389435, -0.01248602569103241, -0.07535344362258911, -0.013653108850121498, -0.4906465709209442, -0.0001411338453181088, -0.020314959809184074, -0.0005082983989268541, -9.536738616588991e-07, -0.30965784192085266, -0.09284212440252304, -0.01721206307411194, -0.5600961446762085], "finish_reason": "stop"}], "metrics": {"energy": 291.5617961196898, "energy_per_token": 1.3313324023730129, "time": 12.319513, "time_per_token": 0.05625348401826484}}
{"outputs": [{"text": "# create a Path instance from the given directory path\n    directory_path = Path(directory)\n\n    # create an empty dictionary to store hashes\n    hashes = {}\n\n    # check if the given path is a valid directory\n    if not directory_path.is_dir():\n        raise ValueError(\"Given path is not a directory\")\n\n    # loop through all files in the directory and create a hash for each file\n    for file_path in directory_path.rglob(\"*\"):\n        if not file_path.is_file():\n            continue  # skip directories\n\n        # read the file\n        with open(file_path, \"rb\") as f:\n            file_hash = hashlib.sha256(f.read()).hexdigest()\n            hashes[file_path.name] = file_hash\n\n    # write the hashes to a JSON file\n    json_file_path = directory_path / \"hashes.json\"\n    with open(json_file_path, \"w\") as f:\n        json.dump(hashes, f, indent=4", "tokens": ["#", " create", " a", " Path", " instance", " from", " the", " given", " directory", " path", "\n", "    ", "directory", "_", "path", " =", " Path", "(", "directory", ")", "\n", "\n", "    ", "#", " create", " an", " empty", " dictionary", " to", " store", " has", "hes", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " check", " if", " the", " given", " path", " is", " a", " valid", " directory", "\n", "    ", "if", " not", " directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Given", " path", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "#", " loop", " through", " all", " files", " in", " the", " directory", " and", " create", " a", " hash", " for", " each", " file", "\n", "    ", "for", " file", "_", "path", " in", " directory", "_", "path", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " not", " file", "_", "path", ".", "is", "_", "file", "():", "\n", "            ", "continue", "  ", "#", " skip", " directories", "\n", "\n", "        ", "#", " read", " the", " file", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "            ", "has", "hes", "[", "file", "_", "path", ".", "name", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "#", " write", " the", " has", "hes", " to", " a", " JSON", " file", "\n", "    ", "json", "_", "file", "_", "path", " =", " directory", "_", "path", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " open", "(", "json", "_", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ",", " indent", "=", "4"], "logprobs": [-1.676892638206482, -2.9237172603607178, -0.6434476971626282, -1.600590705871582, -1.7968865633010864, -1.2572853565216064, -0.05048384144902229, -0.8520335555076599, -0.03593427687883377, -1.4930498600006104, -0.09076059609651566, -0.0005575056420639157, -0.4073943495750427, -0.24658407270908356, -0.004474746063351631, -0.028424369171261787, -0.0025883764028549194, -0.0011439929949119687, -0.001259725191630423, -0.0005853846669197083, -0.02279728651046753, -0.20105460286140442, -0.00026663561584427953, -0.05007131025195122, -1.3410478830337524, -1.7281664609909058, -0.010169477201998234, -0.7224876284599304, -0.1436844915151596, -0.1941509246826172, -0.8222739100456238, -0.030525868758559227, -0.202890545129776, -0.00019453064305707812, -0.0647839680314064, -0.0007637205999344587, -0.24803729355335236, -0.05629399046301842, -0.0008002892718650401, -0.01796240545809269, -0.00017236177518498152, -0.04402003809809685, -3.178338050842285, -0.07859589159488678, -0.09313356876373291, -1.2591831684112549, -3.043314218521118, -0.8044599294662476, -0.12014450877904892, -2.1194286346435547, -0.02055976912379265, -0.18588584661483765, -0.0003233625029679388, -0.024628737941384315, -0.06804822385311127, -0.3376867473125458, -0.0007340597221627831, -7.152531907195225e-06, -0.00012766500003635883, -0.2146315574645996, -2.7418097943154862e-06, -0.000331704446580261, -0.0014553203945979476, -0.001387705677188933, -0.0007670559571124613, -0.3316466808319092, -0.5630217790603638, -7.033323527139146e-06, -0.013495992869138718, -0.7007531523704529, -2.7113194465637207, -0.2220209240913391, -0.01815815642476082, -0.00419557886198163, -0.01012109499424696, -0.517795741558075, -0.9970947504043579, -6.592056161025539e-05, -0.0015810144832357764, -0.013464237563312054, -0.0010367024224251509, -0.03731540963053703, -2.3287835121154785, -0.35203033685684204, -0.20263953506946564, -0.09229356050491333, -0.31095319986343384, -0.006457178853452206, -0.36440005898475647, -0.9675313234329224, -2.752551555633545, -2.293954372406006, -1.4410279989242554, -0.06753870099782944, -0.03074241243302822, -0.3244924247264862, -0.07701891660690308, -0.0009426202741451561, -0.02822239138185978, -0.32073163986206055, -0.3860832452774048, -0.03624967485666275, -0.0004457433824427426, -0.03297470137476921, -0.0001705739414319396, -7.033323527139146e-06, -3.4450891689630225e-05, -0.7198447585105896, -0.0018722163513302803, -0.05924094840884209, -0.0019442004850134254, -0.07450057566165924, -0.089681476354599, -0.0006870055221952498, -0.026646293699741364, -0.011746760457754135, -0.515870213508606, -1.849067211151123, -0.022879663854837418, -0.00012063252506777644, -1.2874520507466514e-05, -7.521823135903105e-05, -0.03127865493297577, -4.768370445162873e-07, -0.023076899349689484, -0.0049335649237036705, -0.025078171864151955, -0.0002493547508493066, -0.04724215343594551, -2.4498255252838135, -0.0003582789213396609, -0.17829865217208862, -0.8886877298355103, -0.07905145734548569, -0.9976807832717896, -0.00018416139937471598, -0.7639172077178955, -2.385806083679199, -0.15356366336345673, -0.793372392654419, -3.9326953887939453, -0.0002768848498817533, -0.10348276048898697, -0.4655391275882721, -0.00011932138295378536, -0.024869468063116074, -3.7788631743751466e-05, -3.814689989667386e-06, -0.01646045595407486, -0.09522805362939835, -0.018823210150003433, -0.00012313561455812305, -0.0003412379592191428, -6.01988795096986e-05, -0.8266124725341797, -0.04116213321685791, -0.0017658369615674019, -0.0014763895887881517, -0.6587719917297363, -0.01006928738206625, -0.42604750394821167, -0.014299307949841022, -0.011813207529485226, -0.0002650863316375762, -1.0013530300057027e-05, -0.008817782625555992, -0.0029963618144392967, -9.417489309271332e-06, -1.311301275563892e-06, -0.18484465777873993, -0.004340631887316704, -0.00017808281700126827, -1.728519782773219e-05, -0.0010339635191485286, -0.13899816572666168, -0.0290241576731205, -4.207999518257566e-05, -0.004379443824291229, -7.855583680793643e-05, -0.03194728121161461, -1.1675560474395752, -0.36182287335395813, -5.8412379075889476e-06, -0.008345137350261211, -0.13002701103687286, -2.7418097943154862e-06, -0.024665025994181633, -0.2419862300157547, -0.17266887426376343, -0.006062215194106102, -2.992108420585282e-05, -0.010681597515940666, -2.1219027985353023e-05, -0.0011261318577453494, -0.0766301080584526, -0.012027361430227757, -0.024371545761823654, -0.026048794388771057, -1.1387004852294922, -0.14923755824565887, -0.10421857982873917, -0.005687246099114418, -0.185881108045578, -0.07316645979881287, -0.046893347054719925, -0.0006148116663098335, -0.23895137012004852, -0.00041559641249477863, -1.2181438207626343, -0.023579077795147896, -0.235007643699646, -2.0603716373443604, -0.03420672565698624, -0.001982748508453369, -0.4564785957336426, -0.008863037452101707, -1.4305104514278355e-06, -0.08080437034368515, -0.04243095964193344, -0.0021707084961235523, -2.3841830625315197e-06, -0.0012181727215647697, -7.60526381782256e-05, -3.8742269680369645e-05, -0.010128293186426163, -0.0195262860506773, -0.04195748269557953, -0.16104407608509064, -4.756337511935271e-05, -0.004705427680164576, -4.851700214203447e-05, -5.125986263010418e-06, -2.1815061700181104e-05, -2.3841855067985307e-07, -0.0005260513862594962, -0.007165566086769104, -0.004474508576095104, -0.0033622421324253082, -0.026148788630962372, -3.814624506048858e-05, -0.04864796623587608, -0.005745444446802139, -0.000529149197973311, -0.00035577642847783864, -0.022351371124386787, -0.0018309272127225995, -0.003941387869417667, -0.0015326907159760594, -0.004902366548776627, -3.7431014789035544e-05, -0.000325388420606032, -0.0003293210465926677, -0.6714476346969604, -0.08293972909450531, -0.0004363300104159862, -0.31947606801986694], "finish_reason": "length"}], "metrics": {"energy": 340.3131362457278, "energy_per_token": 1.3293481884598741, "time": 14.777767, "time_per_token": 0.05772565234375}}
{"outputs": [{"text": "path_to_save = Path(directory) / \"hashes.json\"\n    hashes_dict = {}\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for f in filenames:\n            with open(os.path.join(dirpath, f), 'rb') as fp:\n                hashes_dict[os.path.join(dirpath, f)] = hashlib.sha256(fp.read()).hexdigest()\n\n    with open(path_to_save, 'w', encoding='utf-8') as f:\n        json.dump(hashes_dict, f, indent=4, sort_keys=True, ensure_ascii=False)\n\n    return path_to_save", "tokens": ["path", "_", "to", "_", "save", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "has", "hes", "_", "dict", " =", " {}", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " f", " in", " fil", "en", "ames", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " f", ")", ",", " '", "rb", "')", " as", " f", "p", ":", "\n", "                ", "has", "hes", "_", "dict", "[", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " f", ")]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "fp", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "with", " open", "(", "path", "_", "to", "_", "save", ",", " '", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", "_", "dict", ",", " f", ",", " indent", "=", "4", ",", " sort", "_", "keys", "=", "True", ",", " ensure", "_", "ascii", "=", "False", ")", "\n", "\n", "    ", "return", " path", "_", "to", "_", "save", "\n", "\n", "def"], "logprobs": [-3.453629970550537, -2.9036026000976562, -0.7251137495040894, -0.008180799894034863, -2.6250898838043213, -0.5390046238899231, -0.2530970871448517, -0.04271678999066353, -0.038746707141399384, -0.02184157818555832, -0.41576850414276123, -0.27479228377342224, -0.013442243449389935, -1.490105023549404e-05, -0.005806720349937677, -0.0004319211875554174, -6.496695277746767e-05, -0.014421164989471436, -0.23776355385780334, -2.0200753211975098, -0.008186357095837593, -1.4687424898147583, -0.6013665199279785, -0.13036297261714935, -0.21085387468338013, -0.012256307527422905, -0.4771752655506134, -0.4985121488571167, -1.9536153078079224, -0.3570388853549957, -0.0021607165690511465, -0.8291898369789124, -0.009269416332244873, -0.0006915323319844902, -0.01737879030406475, -0.00013195598148740828, -0.00010978573118336499, -0.0009154658182524145, -0.006336716003715992, -1.1801649634435307e-05, -4.279521817807108e-05, -0.0008025524439290166, -0.06314665824174881, -0.036285772919654846, -0.01794343627989292, -0.003832615679129958, -0.2679610848426819, -2.581918954849243, -0.8517366647720337, -0.020030716434121132, 0.0, -1.311301275563892e-06, -0.003375429892912507, -0.002285965019837022, -0.0017056216020137072, -2.791046142578125, -0.04831328243017197, -0.002945848274976015, -0.17748752236366272, -0.0024159548338502645, -0.0004499138449318707, -0.00462581031024456, -0.0020927926525473595, -0.00010716341057559475, -0.0063780564814805984, -7.939023635117337e-05, -0.0004408579843584448, -0.019635116681456566, -0.03854772076010704, -0.00032550760079175234, -1.4012248516082764, -0.010610593482851982, -0.010901655070483685, -0.0009087961516343057, -0.6191003322601318, -1.2384318113327026, -0.001949554425664246, -0.011758306995034218, -0.0014465117128565907, -0.45243340730667114, -0.048133570700883865, -0.04261089861392975, -0.0017218063585460186, -0.07041908800601959, -1.6609196662902832, -0.001629216712899506, -0.00011789103882620111, -0.0030732564628124237, -0.5488834381103516, -0.0015410225605592132, -0.030787957832217216, -0.00024232311989180744, -0.012022415176033974, -0.0085023557767272, -0.02543153055012226, -0.007274686358869076, -0.05202091485261917, -0.0015413797227665782, -0.0002694958820939064, -0.01713753677904606, -0.004523758310824633, -7.033100700937212e-05, -3.4570634852570947e-06, -0.0030525776091963053, -0.04989951103925705, -0.0005551227368414402, -0.00019369633810129017, -0.0026145342271775007, -0.01823600009083748, -0.02122439444065094, -5.1973900554003194e-05, -0.00031275625224225223, -0.0007295330869965255, -0.016522133722901344, -0.9762272238731384, -0.0041217380203306675, -0.1480022519826889, -0.012423038482666016, -0.0011737607419490814, -0.08235068619251251, -0.00019572250312194228, -6.079655122448457e-06, -2.7418097943154862e-06, -7.629365427419543e-06, -0.009425663389265537, -0.20951396226882935, -0.019655339419841766, -2.0987930297851562, -0.0016694430960342288, -0.010433533228933811, -0.24192044138908386, -0.04010266438126564, -0.14627313613891602, -0.0015185264637693763, -0.012695327401161194, -0.0006455483380705118, -0.3258776068687439, -0.4918442964553833, -0.0025207193102687597, -0.0020283141639083624, -0.05381525680422783, -0.005888139829039574, -0.0038727535866200924, -0.014365820214152336, -0.005177423357963562, 0.0, -4.660974445869215e-05, -1.6212332411669195e-05, -0.0011709030950441957, -0.005067362450063229, -0.26035648584365845, -1.1577376127243042, -0.004184301011264324, -0.18846136331558228, -0.6124312281608582, -0.5606294870376587, -1.1920928244535389e-07, -0.0002884448622353375, -0.0009005781612358987, -0.04286903887987137, -0.8883216977119446, -0.4269167482852936, 0.0, -5.23315102327615e-05, -0.00048101297579705715, -0.021966835483908653, -0.19189442694187164, -0.00517979497089982, -0.5679562091827393, -0.002726292237639427, -0.04252178966999054, -1.4404175281524658, -0.000248401309363544, -4.6491513785440475e-06, -1.0251946150674485e-05, -3.933898824470816e-06, -0.8728195428848267, -0.010228831321001053, -1.8029377460479736], "finish_reason": "stop"}], "metrics": {"energy": 229.90527908706665, "energy_per_token": 1.2843870340059589, "time": 10.268785, "time_per_token": 0.057367513966480446}}
{"outputs": [{"text": "path = Path(directory)\n\n    with path.joinpath(\"hashes.json\").open(\"w\") as file:\n        hashes = {\n            str(path.resolve()): hashlib.sha256(str(path.resolve()).encode()).hexdigest()\n        }\n        for subdirectory in path.rglob(\"*\"):\n            if not subdirectory.is_dir():\n                hashes[str(subdirectory.resolve())] = hashlib.sha256(str(subdirectory.resolve()).encode()).hexdigest()\n\n        json.dump(hashes, file, indent=4)\n        return str(path.joinpath(\"hashes.json\"))", "tokens": ["path", " =", " Path", "(", "directory", ")", "\n", "\n", "    ", "with", " path", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", ")", ".", "open", "(", "\"", "w", "\"", ")", " as", " file", ":", "\n", "        ", "has", "hes", " =", " {", "\n", "            ", "str", "(", "path", ".", "resolve", "()", "):", " hash", "lib", ".", "sha", "2", "5", "6", "(", "str", "(", "path", ".", "resolve", "())", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "        ", "for", " sub", "directory", " in", " path", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "            ", "if", " not", " sub", "directory", ".", "is", "_", "dir", "():", "\n", "                ", "has", "hes", "[", "str", "(", "sub", "directory", ".", "resolve", "()", ")]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "str", "(", "sub", "directory", ".", "resolve", "())", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " file", ",", " indent", "=", "4", ")", "\n", "        ", "return", " str", "(", "path", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", "))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.453629970550537, -0.09041020274162292, -0.03354709967970848, -0.016667285934090614, -0.012658249586820602, -0.0015886317705735564, -0.10578586906194687, -1.6293838024139404, -0.0004144048143643886, -2.6541428565979004, -1.2205026149749756, -0.00041166413575410843, -0.32211363315582275, -0.00012337400403339416, -0.19018089771270752, -0.010415483266115189, -0.011158443987369537, -5.936446541454643e-05, -0.005041861440986395, -0.0008303055074065924, -0.00010847456724150106, -0.0010761191369965672, -0.8446966409683228, -0.006540913600474596, -0.06667022407054901, -0.12253480404615402, -0.08105195313692093, -0.0431324802339077, -0.09961866587400436, -0.004687155596911907, -1.0173214673995972, -0.01615423522889614, -0.008600457571446896, -0.0163038969039917, -1.0086088180541992, -0.01910405606031418, -0.12248913198709488, -2.196692943572998, -0.44923609495162964, -0.004835696425288916, -1.2768242359161377, -0.01354103721678257, -1.2304444313049316, -0.30633559823036194, -2.48777174949646, -0.1786024123430252, -0.10880886763334274, -0.20177261531352997, -0.05658568814396858, -0.0001567479339428246, -0.006746253930032253, -0.0026336766313761473, -0.00010358751023886725, -3.2186455882765586e-06, -0.07796138525009155, -1.064103603363037, -0.006528596859425306, -0.027662012726068497, -0.21926584839820862, -0.07700809836387634, -0.043209318071603775, -0.0002890407631639391, -0.0014033003244549036, -0.2831666171550751, -0.012445525266230106, -0.028288446366786957, -4.339123915997334e-05, -0.004205906298011541, -0.001061591086909175, -0.07821210473775864, -0.3671474754810333, -0.0021805812139064074, -0.010758375748991966, -0.5540930032730103, -0.9009963274002075, -1.6368370056152344, -2.981698513031006, -0.14257347583770752, -0.24497197568416595, -0.001168402610346675, -1.6572117805480957, -0.0019199287053197622, -0.0195431187748909, -0.004235345870256424, -0.1263710856437683, -0.052819326519966125, -0.006886557210236788, -0.008967955596745014, -0.007136923260986805, -0.17932654917240143, -1.7363860607147217, -0.05163969844579697, -9.011816291604191e-05, -0.0007271506474353373, -0.03262503817677498, -6.437280717364047e-06, -0.5565872192382812, -0.06423509865999222, -0.018320627510547638, -0.0007429938414134085, -0.5434916615486145, -0.0002300474588992074, -0.14737048745155334, -0.1258116066455841, -0.0005359405186027288, -0.03583191707730293, -0.0003120412293355912, -0.28675246238708496, -0.028830986469984055, -0.012356161139905453, -0.0034720157273113728, -0.004453265108168125, -0.023933781310915947, -0.0003844952443614602, -0.0001746263587847352, -0.0005516675882972777, -0.00020239688456058502, -2.264974000354414e-06, -2.5987286790041253e-05, -0.0030613720882683992, -0.5972568988800049, -0.0005813338793814182, -0.019150251522660255, -8.451581379631534e-05, -0.010897763073444366, -0.0005284343496896327, -0.0012399612460285425, -0.003955874126404524, -0.0008912881603464484, -0.0012827033642679453, -0.004130167420953512, -0.00017772526189219207, -0.000570253818295896, -0.0010362261673435569, -0.00047886825632303953, -0.0016778928693383932, -0.5916135907173157, -0.3344881534576416, -0.3175818622112274, -0.015518623404204845, -0.0033211333211511374, -0.004947799723595381, -0.03457529842853546, -1.6927575416048057e-05, -0.0022238779347389936, -0.006715348921716213, -0.5035739541053772, -0.0780254527926445, -0.002385153668001294, -0.2626749575138092, -0.21366357803344727, -0.006506923120468855, -1.276818037033081, -0.32181957364082336, -0.5712087750434875, -0.0016321921721100807, -0.1345229148864746, -0.045384250581264496, -0.4380415976047516, -4.5298504119273275e-05, -0.006689061410725117, -0.0030852595809847116, -0.002253851620480418, -9.536697689327411e-06, -0.00038890427094884217, -9.023735765367746e-05, -7.998623186722398e-05, -0.3255036175251007, -1.3667247295379639, -7.152555099310121e-07, -1.311301275563892e-06, -0.0002734287118073553, -0.00039760314393788576, -0.08314751833677292], "finish_reason": "stop"}], "metrics": {"energy": 221.67835764694223, "energy_per_token": 1.2740135496950702, "time": 9.040447, "time_per_token": 0.05195659195402299}}
{"outputs": [{"text": "# Define a list to store all the files to be hashed\n    files_to_hash = []\n\n    # Recursively traverse all the files in the directory\n    for dirpath, dirnames, filenames in os.walk(directory):\n        # Add the files to the list\n        files_to_hash.extend([os.path.join(dirpath, file) for file in filenames])\n\n    # Sort the files by path\n    files_to_hash.sort()\n\n    # Convert the paths to file paths\n    file_paths = [Path(file) for file in files_to_hash]\n\n    # Generate the hashes for each file\n    hashes = {str(file): hashlib.sha256(file.read_bytes()).hexdigest() for file in file_paths}\n\n    # Write the hashes to a JSON file\n    with open(Path(directory, \"hashes.json\"), \"w\") as json_file:\n        json.dump(hashes, json_file)\n\n    # Return the path of the JSON file\n    return str(Path", "tokens": ["#", " Define", " a", " list", " to", " store", " all", " the", " files", " to", " be", " has", "hed", "\n", "    ", "files", "_", "to", "_", "hash", " =", " []", "\n", "\n", "    ", "#", " Rec", "urs", "ively", " traverse", " all", " the", " files", " in", " the", " directory", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "#", " Add", " the", " files", " to", " the", " list", "\n", "        ", "files", "_", "to", "_", "hash", ".", "extend", "([", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " file", ")", " for", " file", " in", " fil", "en", "ames", "])", "\n", "\n", "    ", "#", " Sort", " the", " files", " by", " path", "\n", "    ", "files", "_", "to", "_", "hash", ".", "sort", "()", "\n", "\n", "    ", "#", " Convert", " the", " paths", " to", " file", " paths", "\n", "    ", "file", "_", "paths", " =", " [", "Path", "(", "file", ")", " for", " file", " in", " files", "_", "to", "_", "hash", "]", "\n", "\n", "    ", "#", " Generate", " the", " has", "hes", " for", " each", " file", "\n", "    ", "has", "hes", " =", " {", "str", "(", "file", "):", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", " for", " file", " in", " file", "_", "paths", "}", "\n", "\n", "    ", "#", " Write", " the", " has", "hes", " to", " a", " JSON", " file", "\n", "    ", "with", " open", "(", "Path", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", ",", " \"", "w", "\"", ")", " as", " json", "_", "file", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " json", "_", "file", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " of", " the", " JSON", " file", "\n", "    ", "return", " str", "(", "Path"], "logprobs": [-1.676892638206482, -3.212606191635132, -1.7520544528961182, -1.7333699464797974, -0.1947159469127655, -0.14975638687610626, -2.671004056930542, -1.439889669418335, -1.593069314956665, -1.4031215906143188, -0.12272081524133682, -0.03423114866018295, -5.876845170860179e-05, -0.219122514128685, -0.0040076426230371, -0.4524346888065338, -0.22085565328598022, -0.1519375443458557, -0.00018487652414478362, -0.012575614266097546, -0.15695704519748688, -0.03980211168527603, -0.0017127619357779622, -0.1860538274049759, -0.00046659549116156995, -0.042628947645425797, -2.540489435195923, -0.0056454031728208065, -0.06207842379808426, -0.9772843718528748, -2.613173007965088, -2.042232036590576, -0.507840633392334, -0.5056877136230469, -0.010057131759822369, -0.8330634236335754, -0.8088319301605225, -0.0011829291470348835, -0.10401523113250732, -1.3125214576721191, -0.4382018446922302, -0.0005179494037292898, -0.6296250224113464, -0.002232917817309499, -5.793403761344962e-05, -0.0032480601221323013, -2.0146166207268834e-05, -4.7444173105759546e-05, -0.00014399446081370115, -0.002707983832806349, -5.006777428206988e-06, -5.721882189391181e-05, -0.0003923600015696138, -0.005108280573040247, -0.02584935538470745, -0.0032604176085442305, -0.009335909970104694, -0.9506300687789917, -0.8973183035850525, -1.117089033126831, -1.8290743827819824, -0.8957955837249756, -0.034838054329156876, -0.04668493941426277, -0.2776699662208557, -0.00045098623377270997, -0.7833360433578491, -0.00019572250312194228, -0.00024732868769206107, -1.966933996300213e-05, -2.312633478140924e-05, -0.15009182691574097, -0.0003698380314745009, -0.8033130168914795, -0.2865094542503357, -7.724463648628443e-05, -0.0002944036095868796, -0.010489686392247677, -0.013211097568273544, -0.00010168035078095272, -0.003278121817857027, -7.581423415103927e-05, -0.0001463782973587513, -2.8878026008605957, -0.043702058494091034, -0.007683485746383667, -0.00023767507809679955, -0.00015746307326480746, -0.0015432840446010232, -2.3841855067985307e-07, -1.4305104514278355e-06, -0.007114434149116278, -0.001167092937976122, -0.027426360175013542, -0.027029266580939293, -0.04814038798213005, -2.1802659034729004, -0.03519914671778679, -0.846087634563446, -1.3818799257278442, -1.8823044300079346, -0.8634060621261597, -0.00046719127567484975, -0.07737259566783905, -0.0011179156135767698, -0.0019339682767167687, -2.4914430468925275e-05, -0.00015221867943182588, -0.07469353824853897, -4.088794958079234e-05, -0.3535259962081909, -0.001898868940770626, -0.01557883433997631, -0.00019262365822214633, -0.043233975768089294, -2.9095544815063477, -0.28045061230659485, -2.7303755283355713, -0.093235544860363, -2.7811927795410156, -1.4460821151733398, -0.7402316927909851, -0.0004337085410952568, -1.2235552072525024, -0.16893288493156433, -0.03659290447831154, -0.01585085317492485, -0.06710974127054214, -0.0776624009013176, -0.009454476647078991, -0.3352557122707367, -0.2238115668296814, -0.14457404613494873, -1.7404405298293568e-05, -8.797258487902582e-05, -0.0007954055909067392, -9.059865078597795e-06, -1.6212332411669195e-05, -1.3232143828645349e-05, -1.9073304429184645e-05, -0.0054848892614245415, -0.0014281797921285033, -0.022618640214204788, -0.0002015625941567123, -0.02917688526213169, -3.2994985580444336, -1.1161987781524658, -0.6809660196304321, -0.037015970796346664, -0.8030626773834229, -0.7748985886573792, -0.019817333668470383, -0.2451101541519165, -0.0004950728034600616, -0.16761501133441925, -0.0034101211931556463, -0.0662982314825058, -1.4908533096313477, -1.786423921585083, -0.001551496796309948, -0.23665007948875427, -0.9263970851898193, -0.29902753233909607, -0.04891351982951164, -4.029192859889008e-05, -0.006064584944397211, -0.0012860370334237814, -1.9788545614574105e-05, -4.768370445162873e-07, -0.018413439393043518, -0.15616828203201294, -0.015559351071715355, -0.03255949914455414, -0.000774798565544188, -0.0008088654140010476, -0.0009702504030428827, -0.0007082099909894168, -0.03319786489009857, -6.83045873302035e-05, -0.0007597897201776505, -0.00026067672297358513, -0.11062847077846527, -0.0017239484004676342, -0.0005125877796672285, -0.0035169196780771017, -3.2186455882765586e-06, -6.079655122448457e-06, -0.02005840837955475, -0.0023390096612274647, -0.04870133101940155, -0.0001752223033690825, -0.05144122242927551, -1.6181637048721313, -0.04911987856030464, -0.06319019198417664, -0.0028493304271250963, -0.0786072388291359, -0.07421760261058807, -0.039669331163167953, -0.0009564354550093412, -0.1772507131099701, -0.0005565524916164577, -0.6421141624450684, -0.01932472176849842, -0.06048616021871567, -1.5652804374694824, -0.04385107755661011, -0.11249952018260956, -1.1757400035858154, -0.33626842498779297, -0.006170270964503288, -2.312633478140924e-05, -0.002110993256792426, -0.000120751719805412, -0.00014852374442853034, -0.0010638536186888814, -0.023398244753479958, -0.0537300780415535, -0.005992185790091753, -0.01406988874077797, -0.13313259184360504, -0.00013350549852475524, -2.0402798652648926, -0.004864287097007036, -0.0035523187834769487, -0.0024375985376536846, -0.0012902038870379329, -0.0006846229662187397, -0.02532937191426754, -0.005471136886626482, -0.002166901947930455, -0.010334078222513199, -0.015540102496743202, -2.2172682292875834e-05, -0.0002498314715921879, -0.0024845702573657036, -2.4676019165781327e-05, -5.722029527532868e-06, -0.8423566818237305, -0.003736895974725485, -0.05488738417625427, -0.005477538798004389, -0.5109561085700989, -0.05679057911038399, -0.00525581045076251, -2.155792474746704, -0.5133833885192871, -0.0012153151910752058, -0.07806337624788284, -0.0006469779182225466, -0.0807611495256424, -0.0003184764937032014, -0.011738395318388939, -0.842312216758728, -0.0007801587926223874, -0.02314213290810585], "finish_reason": "length"}], "metrics": {"energy": 336.65777959346786, "energy_per_token": 1.3150694515369838, "time": 14.294291, "time_per_token": 0.05583707421875}}
{"outputs": [{"text": "directory = Path(directory)\n    hashes = {}\n\n    for path in directory.rglob(\"*\"):\n        if path.is_file():\n            with open(path, \"rb\") as file:\n                hashes[path] = hashlib.sha256(file.read()).hexdigest()\n\n    json_file = directory / \"hashes.json\"\n    with json_file.open(\"w\") as file:\n        json.dump(hashes, file, indent=2)\n\n    return str(json_file)", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "for", " path", " in", " directory", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "if", " path", ".", "is", "_", "file", "():", "\n", "            ", "with", " open", "(", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "has", "hes", "[", "path", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " directory", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " json", "_", "file", ".", "open", "(", "\"", "w", "\"", ")", " as", " file", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " file", ",", " indent", "=", "2", ")", "\n", "\n", "    ", "return", " str", "(", "json", "_", "file", ")", "\n", "\n", "if"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -1.5061087608337402, -0.007117629982531071, -0.30980414152145386, -0.1737445741891861, -0.010876419954001904, -0.9073189496994019, -0.00018404220463708043, -0.4347475469112396, -1.4553889036178589, -0.09697622805833817, -0.06028135120868683, -0.00023982033599168062, -0.22948838770389557, -0.004061189480125904, -0.12776076793670654, -0.007428878452628851, -0.10265173017978668, -0.08308685570955276, -0.001812126487493515, -0.05335753783583641, -0.004387870896607637, -0.09817276149988174, -0.15315461158752441, -0.0003209791029803455, -0.034947995096445084, -0.00014065706636756659, -0.09633509069681168, -0.02392016351222992, -0.008902383036911488, -0.0022613448090851307, -1.0904247760772705, -0.3215082883834839, -9.154854342341423e-05, -0.032023943960666656, -0.012765595689415932, -0.1563897430896759, -0.01185125857591629, -8.284702198579907e-05, -0.00040189296123571694, -3.838465272565372e-05, -0.5298725366592407, -0.007627884857356548, -0.003942337818443775, -0.000663894519675523, -0.247538760304451, -0.02705618552863598, -0.013053324073553085, -0.13132862746715546, -1.947180151939392, -0.00012218205665703863, -0.015187105163931847, -0.0014953156933188438, -2.634490556374658e-05, -0.003758867271244526, -0.0020274813286960125, -3.0636318115284666e-05, -3.6954811548639555e-06, -0.0014782940270379186, -0.009140077978372574, -0.0003408804477658123, -5.6503606174374e-05, -0.0027821664698421955, -0.007102952804416418, -0.015170080587267876, -5.9126061387360096e-05, -0.007830873131752014, -0.000300958170555532, -0.011932894587516785, -0.0688033401966095, -0.0024717275518924, -1.0252835750579834, -0.05229417607188225, -0.06761669367551804, -0.028725234791636467, -0.6034626364707947, -0.09407801181077957, -0.053714826703071594, -0.0035191767383366823, -1.7881377516459906e-06, -0.0017396567855030298, -9.262132516596466e-05, -6.16293036728166e-05, -0.003007058519870043, -0.11957687884569168, -0.204800546169281, -1.3435113430023193, -0.007018554490059614, -0.00014172980445437133, -8.260862523457035e-05, -0.0008604400209151208, -0.011597003787755966, -0.03882009908556938, -0.0060361470095813274, -0.007544832304120064, -0.09479085355997086, -0.00021896349790040404, -0.3390216529369354, -0.0009461931767873466, -0.0010436094598844647, -0.00042715485324151814, -0.006129751447588205, -0.003084784373641014, -0.0013116337358951569, -0.004995483905076981, -0.005462126340717077, -0.00025245340657420456, -0.0009627474937587976, -0.0011239885352551937, -0.7330604791641235, -0.12677274644374847, -0.0008357845945283771, -1.5129716396331787, -0.11591240018606186, -0.001335444045253098, -0.19551244378089905, -0.0025326102040708065, -0.0274130217730999, -0.24476033449172974, -7.486063259420916e-05, -0.004704122431576252, -0.0002864189154934138, -4.768370445162873e-07, -0.8741571307182312, -0.2429184913635254, -0.006297505926340818, -0.7341045141220093], "finish_reason": "stop"}], "metrics": {"energy": 192.43857245159137, "energy_per_token": 1.4361087496387415, "time": 6.951996, "time_per_token": 0.0518805671641791}}
{"outputs": [{"text": "directory = Path(directory)\n    with directory.joinpath(\"hashes.json\").open(\"w\") as file:\n        json.dump(\n            {\n                filename.stem: hashlib.sha256(\n                    filename.read_bytes()\n                ).hexdigest()\n                for filename in sorted(directory.iterdir())\n                if not filename.is_dir()\n            },\n            file,\n            indent=4,\n        )\n    return directory.joinpath(\"hashes.json\").resolve()", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "with", " directory", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", ")", ".", "open", "(", "\"", "w", "\"", ")", " as", " file", ":", "\n", "        ", "json", ".", "dump", "(", "\n", "            ", "{", "\n", "                ", "filename", ".", "stem", ":", " hash", "lib", ".", "sha", "2", "5", "6", "(", "\n", "                ", "    ", "filename", ".", "read", "_", "bytes", "()", "\n", "                ", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "for", " filename", " in", " sorted", "(", "directory", ".", "iter", "dir", "())", "\n", "                ", "if", " not", " filename", ".", "is", "_", "dir", "()", "\n", "            ", "}", ",", "\n", "            ", "file", ",", "\n", "            ", "indent", "=", "4", ",", "\n", "        ", ")", "\n", "    ", "return", " directory", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", ")", ".", "resolve", "()", "\n", "\n", "def"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -3.819152355194092, -1.1669385433197021, -0.0011127954348921776, -0.357461154460907, -6.496695277746767e-05, -0.17266406118869781, -0.005939571652561426, -0.008254105225205421, -5.6622808187967166e-05, -0.0035100297536700964, -0.0008844992844387889, -7.271502545336261e-05, -0.0012231733417138457, -1.2928283214569092, -0.0044103022664785385, -0.08613529056310654, -0.1269618570804596, -0.10168574005365372, -0.039524730294942856, -0.10159183293581009, -0.02067549340426922, -1.268827199935913, -0.01342636439949274, -0.008526232093572617, -0.004755734000355005, -1.3254706859588623, -0.03327604755759239, -0.007686679717153311, -0.5218937993049622, -0.9013319611549377, -0.00623021787032485, -0.3137919008731842, -0.2270725965499878, -0.00048101297579705715, -2.0376579761505127, -0.8690593242645264, -1.0567747354507446, -0.020135054364800453, -0.14963383972644806, -0.048677943646907806, -0.00016878610767889768, -0.00536869652569294, -0.002197947818785906, -9.131014667218551e-05, -2.7418097943154862e-06, -0.017664022743701935, -1.0048854351043701, -4.637133679352701e-05, -0.001601009746082127, -1.323889136314392, -0.002617150079458952, -0.042642198503017426, -1.5497195136049413e-06, -0.02150188386440277, -0.013084856793284416, -0.04967494308948517, -0.00012063252506777644, -0.010649517178535461, -0.0007569308509118855, -0.03236193209886551, -0.00021514961554203182, -0.006498987786471844, -0.0011705459328368306, -0.07693039625883102, -0.0005383234238252044, -0.002056390279904008, -0.017382655292749405, -0.010165700688958168, -2.2904438972473145, -0.0033985970076173544, -0.12437509745359421, -0.00011228884250158444, -1.7388103008270264, -0.001866623992100358, -0.1810295283794403, -0.022476332262158394, -0.08272037655115128, -0.01386228483170271, -1.3669075965881348, -0.18494601547718048, -0.0004400238685775548, -0.16300542652606964, -3.909988299710676e-05, -0.4433997869491577, -0.006450427696108818, -0.09501094371080399, -0.08957139402627945, -0.0003741279651876539, -0.0022947664838284254, -0.012745704501867294, -0.0004291805380489677, -0.0370936244726181, -0.2762313485145569, -0.003731789067387581, -0.5541447401046753, -0.13165776431560516, -0.0021114691626280546, -0.3433379530906677, -0.09192630648612976, -0.005117057356983423, -0.3505314886569977, -0.002108614193275571, -0.0013230626937001944, -0.36976438760757446, -0.03663887083530426, -1.587672233581543, -0.043020352721214294, -0.018928609788417816, -2.1457441107486375e-05, -0.0004994813934899867, -0.0007291757501661777, -0.0019433676498010755, -6.318072337307967e-06, -0.00013767725613433868, -1.728519782773219e-05, -0.00015317220822907984, -0.020896632224321365, -0.35492104291915894, -1.0456196069717407, -0.006037569139152765, -0.7178978323936462, -0.012880108319222927, -1.2978870868682861], "finish_reason": "stop"}], "metrics": {"energy": 154.41165864562993, "energy_per_token": 1.1787149514933581, "time": 6.73324, "time_per_token": 0.051398778625954204}}
{"outputs": [{"text": "result = []\n    for file in Path(directory).rglob('*'):\n        if file.is_dir():\n            continue\n        try:\n            with open(file, 'rb') as f:\n                h = hashlib.sha256(f.read()).hexdigest()\n                result.append({'filename': str(file), 'hash': h})\n        except PermissionError:\n            continue\n    with open(Path(directory) / 'hashes.json', 'w') as f:\n        json.dump(result, f, indent=4)\n    return os.path.abspath(Path(directory) / 'hashes.json')", "tokens": ["result", " =", " []", "\n", "    ", "for", " file", " in", " Path", "(", "directory", ")", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "dir", "():", "\n", "            ", "continue", "\n", "        ", "try", ":", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "result", ".", "append", "({", "'", "filename", "':", " str", "(", "file", ")", ",", " '", "hash", "':", " h", "})", "\n", "        ", "except", " Perm", "ission", "Error", ":", "\n", "            ", "continue", "\n", "    ", "with", " open", "(", "Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "result", ",", " f", ",", " indent", "=", "4", ")", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "')", "\n", "\n", "def"], "logprobs": [-4.662185192108154, -0.7894824743270874, -0.7528377771377563, -0.0111017394810915, -0.20199890434741974, -0.6309189200401306, -2.367342948913574, -0.3866027593612671, -0.23804038763046265, -0.0018117694417014718, -0.004192966967821121, -0.001369729870930314, -3.349725011503324e-05, -0.45593780279159546, -0.002631655428558588, -1.8012088537216187, -0.169087216258049, -0.08493378758430481, -0.0012748456792905927, -0.0392787903547287, -0.008388523012399673, -0.27112603187561035, -0.2041320502758026, -0.0008669908274896443, -0.07120106369256973, -6.079655122448457e-06, -2.6274900436401367, -0.03910340741276741, -0.028267355635762215, -0.0014187756460160017, -0.10258620977401733, -0.014839974232017994, -0.0668572261929512, -3.5344011783599854, -0.0002451834443490952, -0.0025938458275049925, -0.0013463966315612197, -1.1764668226242065, -0.1455870121717453, -0.0006656814948655665, -0.027366742491722107, -0.09378369897603989, -0.4114140272140503, -0.11080849915742874, -0.009892367757856846, -0.0007203606073744595, -0.1989879608154297, -0.06420502811670303, -0.004439142532646656, -0.0013228246243670583, -2.4175527095794678, -0.18049533665180206, -0.00783808808773756, -0.0001497156627010554, -2.074220174108632e-05, -0.013300503604114056, -0.007134792860597372, -5.709961988031864e-05, -4.0531076592742465e-06, -0.9734539985656738, -0.006239813752472401, -0.00013779645087197423, -6.270212179515511e-05, -0.0029529796447604895, -0.5674713850021362, -0.049434661865234375, -0.00010144196130568162, -0.042862530797719955, -0.00047886825632303953, -0.007903967052698135, -0.4197455644607544, -0.10340407490730286, -0.0070674424059689045, -0.0070114522241055965, -0.8844926357269287, -0.5217032432556152, -2.263183116912842, -0.0066599310375750065, -1.9029642343521118, -0.0002699726028367877, -0.010625926777720451, -0.17334981262683868, -0.05426192656159401, -0.025359706953167915, -0.10530498623847961, -0.007486620452255011, -0.027581071481108665, -0.02320316806435585, -0.0019230222096666694, -0.05175652354955673, -0.0018334260676056147, -1.6703088283538818, -0.00013517419574782252, -0.0001951265730895102, -0.0973212942481041, -0.05630875378847122, -0.0023185533937066793, -0.9030574560165405, -0.012181175872683525, -0.44601646065711975, -1.0015383958816528, -0.0038351095281541348, -0.09863018989562988, -1.470035433769226, -0.018780509009957314, -0.01223287358880043, -0.17236711084842682, -0.3837762176990509, -0.293997585773468, -0.00689152954146266, -1.1205610462639015e-05, -0.002227089600637555, -0.0003924791526515037, -0.0011888825101777911, -0.00022897482267580926, -0.019176563248038292, -0.017163552343845367, -0.1515895128250122, -0.0009296386269852519, -0.19943152368068695, -0.03416939824819565, -0.0011976935202255845, -0.0017581019783392549, -0.0953519269824028, -0.003669197903946042, -0.003508485620841384, -0.023829840123653412, -0.013432951644062996, -0.0007393010891973972, -0.002630585338920355, -0.33772799372673035, -0.10431738942861557, -0.006796457339078188, -0.26527631282806396, -0.20002177357673645, -0.01939394138753414, -0.1259404569864273, -0.039368532598018646, -1.7413127422332764, -7.259582343976945e-05, -0.008604003116488457, -0.020105376839637756, -0.47491127252578735, -1.9192511899746023e-05, -1.3112935448589269e-05, -0.10136963427066803, -0.9150228500366211, -0.0024846892338246107, -0.0015945826889947057, -0.01640182174742222, -0.010879721492528915, -0.019932912662625313, -0.0006615119054913521, -1.9907753085135482e-05, -9.536288416711614e-05, -3.528532761265524e-05, -0.0006893880781717598, -0.6464522480964661, -0.029695913195610046, -1.3899097442626953], "finish_reason": "stop"}], "metrics": {"energy": 243.31370878791813, "energy_per_token": 1.5207106799244883, "time": 8.842229, "time_per_token": 0.055263931249999995}}
{"outputs": [{"text": "with os.scandir(directory) as entries:\n        hashes = {}\n        for entry in entries:\n            if entry.is_file():\n                with open(entry.path, \"rb\") as f:\n                    file_hash = hashlib.sha256(f.read()).hexdigest()\n                    hashes[entry.name] = file_hash\n        with open(directory + \"/hashes.json\", \"w\") as f:\n            json.dump(hashes, f)\n\n    return directory + \"/hashes.json\"", "tokens": ["with", " os", ".", "sc", "and", "ir", "(", "directory", ")", " as", " entries", ":", "\n", "        ", "has", "hes", " =", " {}", "\n", "        ", "for", " entry", " in", " entries", ":", "\n", "            ", "if", " entry", ".", "is", "_", "file", "():", "\n", "                ", "with", " open", "(", "entry", ".", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "    ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "    ", "has", "hes", "[", "entry", ".", "name", "]", " =", " file", "_", "hash", "\n", "        ", "with", " open", "(", "directory", " +", " \"/", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "            ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " directory", " +", " \"/", "has", "hes", ".", "json", "\"", "\n", "\n", "if"], "logprobs": [-3.793801784515381, -0.5716438293457031, -0.0002029928145930171, -0.023642996326088905, -0.00014220656885299832, -9.333651541965082e-05, -0.002382299629971385, -0.012337910011410713, -0.0006507901125587523, -0.0001821352052502334, -1.780005693435669, -0.0024361712858080864, -0.019721144810318947, -0.015043851919472218, -0.9713081121444702, -0.01654323935508728, -0.22787201404571533, -0.49385130405426025, -0.009114917367696762, -0.05912173539400101, -0.0652100145816803, -0.05378848314285278, -0.0014322272036224604, -0.003187933936715126, -0.00023600654094479978, -0.0045686149969697, -0.0032484165858477354, -0.10247453302145004, -0.10812798887491226, -0.00021181246847845614, -0.0895170047879219, -5.745722592109814e-05, -0.15661360323429108, -0.05940485745668411, -0.027591275051236153, -0.0017184742027893662, -1.0963642597198486, -0.11764135211706161, -0.00022420754248742014, -0.019650079309940338, -0.10585375130176544, -0.005851993802934885, -0.02177591249346733, -0.4397209584712982, -0.030934521928429604, -0.0001867835089797154, -0.0005627478822134435, -0.00013481661153491586, -0.6906816959381104, -0.05069803074002266, -0.005278341472148895, -0.00046993177966214716, -0.0004897110629826784, -3.2647595405578613, -0.023596076294779778, -0.16754111647605896, -0.009367442689836025, -0.006883834023028612, -0.00023707917716819793, -2.5987286790041253e-05, -0.007500345353037119, -0.0043335105292499065, -6.174850568640977e-05, -8.940656698541716e-06, -0.11381913721561432, -0.008711430244147778, -0.00016723664884921163, -2.8013790142722428e-05, -0.002522027352824807, -0.08206970244646072, -0.018861230462789536, -7.116541382856667e-05, -0.019996481016278267, -0.0002119316632160917, -0.006921363528817892, -0.005455723963677883, -0.1117982342839241, -0.15181854367256165, -2.098061486321967e-05, -0.012208850122988224, -0.10929811745882034, -0.00036090059438720345, -0.14920295774936676, -0.012250302359461784, -4.23184028477408e-05, -0.016196930781006813, -4.672895011026412e-05, -8.737658936297521e-05, -0.004282470792531967, -1.0782794952392578, -0.962497889995575, -0.02644302509725094, -0.008407200686633587, -2.112967014312744, -0.09469825029373169, -0.516994833946228, -0.006357800681143999, -2.9801878554280847e-05, -0.0022461204789578915, -0.0006059955921955407, -0.00014852374442853034, -0.00038246947224251926, -0.02379480190575123, -0.010072002187371254, -0.0352620966732502, -0.01355691347271204, -0.00016437610611319542, -0.3579433858394623, -0.013925181701779366, -0.0015038858400657773, -0.0020688814111053944, -0.0664156973361969, -0.0040994188748300076, -0.006432542577385902, -0.009391888044774532, -0.012504508718848228, -2.253030106658116e-05, -0.0019911956042051315, -0.0023258081637322903, -0.5384512543678284, -0.002337463665753603, -2.1180496215820312, -0.3684629499912262, -0.05040302500128746, -1.3826756477355957, -0.016606906428933144, -0.05525123327970505, -0.0006164796068333089, -7.986990567587782e-06, -0.0002961912250611931, -5.9960475482512265e-05, -0.010754483751952648, -0.37340569496154785, -0.007942285388708115, -1.0219342708587646], "finish_reason": "stop"}], "metrics": {"energy": 187.92403835296622, "energy_per_token": 1.3920299137256757, "time": 7.5812125, "time_per_token": 0.05615712962962963}}
{"outputs": [{"text": "with os.scandir(directory) as d:\n        for entry in d:\n            if entry.is_dir():\n                task_func(entry.path)\n            elif entry.is_file():\n                with open(entry.path, \"rb\") as f:\n                    print(hashlib.sha256(f.read()).hexdigest())", "tokens": ["with", " os", ".", "sc", "and", "ir", "(", "directory", ")", " as", " d", ":", "\n", "        ", "for", " entry", " in", " d", ":", "\n", "            ", "if", " entry", ".", "is", "_", "dir", "():", "\n", "                ", "task", "_", "func", "(", "entry", ".", "path", ")", "\n", "            ", "elif", " entry", ".", "is", "_", "file", "():", "\n", "                ", "with", " open", "(", "entry", ".", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "    ", "print", "(", "hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "())", "\n", "\n", "def"], "logprobs": [-3.793801784515381, -0.5716438293457031, -0.0002029928145930171, -0.023642996326088905, -0.00014220656885299832, -9.333651541965082e-05, -0.002382299629971385, -0.012337910011410713, -0.0006507901125587523, -0.0001821352052502334, -4.039701461791992, -1.3614654541015625, -0.02185370773077011, -0.014744832180440426, -2.6055057048797607, -0.6536638736724854, -0.0019474128494039178, -0.0031874587293714285, -0.00041130665340460837, -0.011958573013544083, -0.006527649238705635, -0.21309895813465118, -0.09381116181612015, -0.00017307691450696439, -0.06840008497238159, -0.0001397035230183974, -1.2273526191711426, -0.01772281713783741, -0.029683532193303108, -0.0021222943905740976, -0.36577102541923523, -0.006324988789856434, -0.0032949938904494047, -0.001987983239814639, -0.08181775361299515, -0.019146274775266647, -0.004867015406489372, -0.002262653084471822, -0.06047101318836212, -0.10658954828977585, -0.9295361638069153, -0.03157057613134384, -0.0002747396647464484, -0.019862912595272064, -0.0005287918029353023, -0.0005445189890451729, -0.01599833182990551, -0.0022814455442130566, -0.007496204227209091, -1.1286931037902832, -0.11880781501531601, -0.0013152052415534854, -0.02275160700082779, -0.04696989804506302, -0.007241904269903898, -0.02178034372627735, -0.6825083494186401, -0.08393539488315582, -0.0003927174839191139, -0.0006330393371172249, -0.3094435930252075, -0.38017940521240234, -0.06392594426870346, -0.0033895678352564573, -0.0019340872531756759, -0.0012010273057967424, -3.874037265777588, -0.023364122956991196, -1.6390299797058105, -0.014159570448100567, -0.0002004899288294837, -0.01788243092596531, -0.006808653008192778, -0.00014709345123264939, -9.298280929215252e-06, -0.0042527951300144196, -0.013089210726320744, -0.004831069614738226, -0.0003355178632773459, -0.029120150953531265, -0.0010826685465872288, -0.012916471809148788, -0.00017379203927703202, -0.006306272000074387, -0.01939592882990837, -0.10204242914915085, -0.668325662612915, -1.6479837894439697], "finish_reason": "stop"}], "metrics": {"energy": 143.3441299438477, "energy_per_token": 1.6289105675437237, "time": 4.6429753, "time_per_token": 0.05276108295454545}}
{"outputs": [{"text": "directory = os.path.abspath(directory)\n    path = Path(directory)\n    json_file = path / 'hashes.json'\n    hashes: dict[str, str] = {}\n\n    for file in path.rglob('*'):\n        if file.is_file():\n            hashes[file.name] = hashlib.sha256(\n                file.read_bytes()).hexdigest()\n\n    with json_file.open(mode='w', encoding='utf-8') as f:\n        json.dump(hashes, f, sort_keys=True, indent=4)\n\n    return os.path.abspath(str(json_file))", "tokens": ["directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "directory", ")", "\n", "    ", "path", " =", " Path", "(", "directory", ")", "\n", "    ", "json", "_", "file", " =", " path", " /", " '", "has", "hes", ".", "json", "'", "\n", "    ", "has", "hes", ":", " dict", "[", "str", ",", " str", "]", " =", " {}", "\n", "\n", "    ", "for", " file", " in", " path", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "():", "\n", "            ", "has", "hes", "[", "file", ".", "name", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "\n", "                ", "file", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "with", " json", "_", "file", ".", "open", "(", "mode", "='", "w", "'", ",", " encoding", "='", "utf", "-", "8", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ",", " sort", "_", "keys", "=", "True", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "str", "(", "json", "_", "file", "))", "\n", "\n", "if"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -2.5629947185516357, -0.00035589560866355896, -0.023631121963262558, -0.028558999300003052, -0.14799371361732483, -2.0861407392658293e-05, -1.823885577323381e-05, -0.0007774191326461732, -0.018703993409872055, -0.002039734972640872, -0.03703596070408821, -0.3017192482948303, -2.68218994140625, -0.20652948319911957, -0.07485315948724747, -0.00790290255099535, -0.01075554545968771, -0.0038302408065646887, -0.10625827312469482, -0.22226454317569733, -2.5558106899261475, -0.004036732017993927, -0.16118887066841125, -0.07648490369319916, -0.5599654912948608, -0.33106082677841187, -1.1564842462539673, -0.010878660716116428, -9.179073458653875e-06, -0.003109503071755171, -0.00023731753753963858, -0.0002631794777698815, -0.008054396137595177, -0.5922552943229675, -1.6179391145706177, -0.004499667789787054, -2.8759260177612305, -0.19680944085121155, -0.27623215317726135, -0.027109788730740547, -0.03314943239092827, -0.16377465426921844, -0.008018091320991516, -0.005795935168862343, -0.10380947589874268, -0.00872052926570177, -0.6930437088012695, -0.0002335037279408425, -0.5505951642990112, -1.0010164976119995, -0.3338874876499176, -0.14008715748786926, -0.0004542034293990582, -0.8629932403564453, -0.0016445695655420423, -0.5609205365180969, -0.0985206589102745, -0.15531879663467407, -0.0007887351675890386, -0.02274170331656933, -0.009175987914204597, -0.1293809711933136, -0.21362073719501495, -0.0016875325236469507, -0.06345236301422119, -1.6927575416048057e-05, -0.13885582983493805, -0.11715426295995712, -0.0079887630417943, -0.003966323100030422, -0.9021134376525879, -0.015012145973742008, -0.08005044609308243, -0.1790524125099182, -0.016088075935840607, -0.30001410841941833, -0.007402491290122271, -0.0004693360242526978, -0.16543883085250854, -0.05880773812532425, -0.00011085849109804258, -0.004944359418004751, -0.0025430740788578987, -5.6265202147187665e-05, -2.50339189733495e-06, -0.006481103599071503, -2.774841547012329, -0.003109978511929512, -0.18638581037521362, -0.0007453762227669358, -0.023976845666766167, -0.00018726025882642716, -0.006435740273445845, -0.35453101992607117, -0.00033718624035827816, -0.009828626178205013, -0.0003736513026524335, -0.03522699698805809, -0.0006606780225411057, -0.03669368848204613, -0.2411431223154068, -0.0076126232743263245, -0.41488155722618103, -1.4215713739395142, -0.023585133254528046, -0.00013755806139670312, -0.00019095504831057042, -0.0011840007500723004, -1.6641312837600708, -0.3517044186592102, -0.17075061798095703, -0.02096375823020935, -0.978918194770813, -0.000816012208815664, -0.012378649786114693, -0.02014416642487049, -0.05878458172082901, -0.14541354775428772, -0.004954323638230562, -0.01661042310297489, -0.001823549740947783, -0.7904211282730103, -0.20450328290462494, -0.0022184066474437714, -0.0013097288319841027, -0.038768038153648376, -0.007579734083265066, -0.0020641228184103966, -0.02482307143509388, -0.00906506646424532, -4.053033626405522e-05, -0.0010632582707330585, -0.003164405468851328, -0.36431676149368286, -2.902698040008545, 0.0, -0.0004557524516712874, -0.0012648447882384062, -0.01802106387913227, -0.15737013518810272, -0.05804109200835228, -0.007810764946043491, -0.13222788274288177, -0.43403786420822144, -0.005998940207064152, -0.3045059144496918, -0.00518145551905036, -0.05385863408446312, -2.6532061100006104, -5.578839045483619e-05, -0.004204956814646721, -0.0010971962474286556, -0.09296814352273941, -7.939023635117337e-05, -9.536697689327411e-06, -0.013795151375234127, -1.426011323928833, -0.00020430385484360158, -0.00874250940978527, -0.00036554806865751743, -4.291525328881107e-06, -0.023778505623340607, -0.7453750371932983, -0.00983299408107996, -0.567622184753418], "finish_reason": "stop"}], "metrics": {"energy": 220.53032971668244, "energy_per_token": 1.3205408965070806, "time": 9.042303, "time_per_token": 0.05414552694610779}}
{"outputs": [{"text": "# Create a list to store all hash values\n    hash_list = []\n\n    # Get the absolute path of the given directory\n    directory = Path(directory).absolute()\n\n    # Create a dictionary to store the hash values\n    hashes = {}\n\n    # Iterate through all files in the given directory and subdirectories\n    for file in directory.rglob(\"*\"):\n        # Skip files with a . directory file extension\n        if os.path.isfile(file):\n            # Calculate the MD5 hash of the file and append it to the list\n            md5_hash = hashlib.md5()\n            with open(file, \"rb\") as file_obj:\n                for chunk in iter(lambda: file_obj.read(4096), b\"\"):\n                    md5_hash.update(chunk)\n            hash_list.append(md5_hash.hexdigest())\n            hashes[file.name] = md5_hash.hexdigest()\n\n    # Create a JSON file with the hash values\n    json_file = directory / 'hashes.json", "tokens": ["#", " Create", " a", " list", " to", " store", " all", " hash", " values", "\n", "    ", "hash", "_", "list", " =", " []", "\n", "\n", "    ", "#", " Get", " the", " absolute", " path", " of", " the", " given", " directory", "\n", "    ", "directory", " =", " Path", "(", "directory", ")", ".", "absolute", "()", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " the", " hash", " values", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " files", " in", " the", " given", " directory", " and", " sub", "direct", "ories", "\n", "    ", "for", " file", " in", " directory", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "#", " Skip", " files", " with", " a", " ", ".", " directory", " file", " extension", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " of", " the", " file", " and", " append", " it", " to", " the", " list", "\n", "            ", "md", "5", "_", "hash", " =", " hash", "lib", ".", "md", "5", "()", "\n", "            ", "with", " open", "(", "file", ",", " \"", "rb", "\"", ")", " as", " file", "_", "obj", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " file", "_", "obj", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "hash", "_", "list", ".", "append", "(", "md", "5", "_", "hash", ".", "hex", "dig", "est", "())", "\n", "            ", "has", "hes", "[", "file", ".", "name", "]", " =", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " Create", " a", " JSON", " file", " with", " the", " hash", " values", "\n", "    ", "json", "_", "file", " =", " directory", " /", " '", "has", "hes", ".", "json"], "logprobs": [-1.676892638206482, -1.3739001750946045, -0.2707689106464386, -1.7570563554763794, -0.6634951233863831, -0.18944869935512543, -2.5254454612731934, -4.093108177185059, -0.18929481506347656, -0.33990976214408875, -0.005012208595871925, -0.5363753437995911, -0.027855873107910156, -0.8091960549354553, -0.10894346982240677, -0.030522054061293602, -0.0009712031460367143, -0.30945244431495667, -0.0004654039512388408, -0.11100684106349945, -1.673334002494812, -0.689466655254364, -0.4543742835521698, -0.06336699426174164, -0.2578893005847931, -0.028671834617853165, -1.9365427494049072, -0.01302720233798027, -0.08660952001810074, -0.0004940004437230527, -0.2740655839443207, -0.626392662525177, -0.36877283453941345, -0.0105351023375988, -0.005359092261642218, -0.0005365362740121782, -0.36028027534484863, -1.1353241205215454, -0.00016234986833296716, -0.019614310935139656, -0.04022073373198509, -0.0004001055203843862, -0.11137920618057251, -2.3210840225219727, -0.17534352838993073, -1.5641376972198486, -0.11431923508644104, -0.05951954424381256, -0.7470607161521912, -1.2929589748382568, -0.19765280187129974, -0.7742501497268677, -0.0011695933062583208, -1.7360087633132935, -0.026802286505699158, -0.15576143562793732, -0.13010342419147491, -0.0012011463986709714, -0.019074466079473495, -0.000325388420606032, -0.16497710347175598, -1.1322643756866455, -0.0028072495479136705, -0.7793022394180298, -0.4849627614021301, -0.11426287889480591, -0.4131961464881897, -0.006853407248854637, -0.8139857053756714, -0.0017347777029499412, -1.642754077911377, -0.575136661529541, -0.0054233563132584095, -0.0001578206429257989, -0.13802389800548553, -0.0007985025877133012, -0.02091192454099655, -0.7107270956039429, -0.45206838846206665, -0.03410361334681511, -0.00014697425649501383, -0.47985750436782837, -0.0018617454916238785, -0.14143256843090057, -0.00504731759428978, -0.08158078789710999, -0.1021432876586914, -0.0008874768391251564, -0.009745637886226177, -0.052184540778398514, -0.5562422871589661, -1.6551483869552612, -1.2959916591644287, -1.8225581645965576, -2.10180926322937, -1.589055061340332, -0.0010763572063297033, -4.065363883972168, -4.742494583129883, -0.9464571475982666, -0.3894801735877991, -0.00027056847466155887, -0.013134390115737915, -2.563091993331909, -6.55629628454335e-05, -0.035759687423706055, -0.004338851664215326, -0.32261669635772705, -0.2809756100177765, -0.0004876854654867202, -0.014388381503522396, -2.3346352577209473, -0.004421102814376354, -0.02672603353857994, -0.6241265535354614, -1.0827900171279907, -0.19277772307395935, -2.6294033527374268, -0.0030126445926725864, -0.08370967954397202, -0.42588865756988525, -0.056463904678821564, -0.034982528537511826, -2.3738386631011963, -1.769370198249817, -0.13416387140750885, -0.0031463427003473043, -0.02978362701833248, -1.1661498546600342, -0.05297038331627846, -0.0011049362365156412, -2.1927733421325684, -0.0032092041801661253, -0.7172918319702148, -0.040355388075113297, -0.014403187669813633, -0.00948234461247921, -0.0003215749457012862, -1.764281842042692e-05, -0.003918708302080631, -4.172316494077677e-06, -0.23946696519851685, -0.004171717446297407, -0.020692892372608185, -0.04875333234667778, -0.009825320914387703, -0.00010585224663373083, -0.01959782838821411, -0.002904722234234214, -0.20486271381378174, -0.00033504117163829505, -1.4543427823809907e-05, -0.0005152089870534837, -2.3245540432981215e-05, -2.8895719051361084, -0.5669007897377014, -1.176878571510315, -0.00034517052699811757, -0.0031916177831590176, -0.0005530973430722952, -0.7057124376296997, -0.17440494894981384, -0.001746677909977734, -0.03169219568371773, -9.917721035890281e-05, -0.017832312732934952, -0.002058174693956971, -0.0022593229077756405, -0.0001408954558428377, -6.318072337307967e-06, -6.6756979322235566e-06, -0.0028708456084132195, -0.0016928878612816334, -0.3747085630893707, -0.005096895154565573, -0.0006663962849415839, -0.0003970073303207755, -0.012320718728005886, -0.00013767725613433868, -0.0026521054096519947, -0.14216995239257812, -0.00011157367407577112, -0.00027426297310739756, -0.008694413118064404, -3.6954195820726454e-05, -0.0007459718617610633, -0.004638269543647766, -1.1920928244535389e-07, -7.593343616463244e-05, -5.8410845667822286e-05, -1.549708758830093e-05, -0.0001380348257953301, -6.615896563744172e-05, -0.0004677870310842991, -0.00018916724366135895, -0.002022841712459922, -0.29621419310569763, -0.13527175784111023, -0.015363678336143494, -0.21752284467220306, -0.0015222163638100028, -0.0015981532633304596, -0.05864137038588524, -0.05094650387763977, -9.989239333663136e-05, -8.797258487902582e-05, -1.8954096958623268e-05, -0.003836297197267413, -0.06287892162799835, -2.4914430468925275e-05, -0.0011364913079887629, -0.001958120847120881, -0.0033699646592140198, -0.8712337017059326, -0.5959213972091675, -0.00012909532233607024, -0.023458331823349, -0.19046491384506226, -0.1487686038017273, -0.13952337205410004, -0.02482830360531807, -0.00022623363474849612, -0.156840980052948, -3.158996332786046e-05, -7.462222856702283e-05, -5.602820692729438e-06, -0.0021533414255827665, -0.002102428348734975, -4.2914423829643056e-05, -0.0004994813934899867, -0.00022706791060045362, -0.015964778140187263, -0.1331944614648819, -0.047032225877046585, -0.06563790142536163, -1.7825171947479248, -0.3034055829048157, -0.150124654173851, -0.040491968393325806, -0.8341116905212402, -0.14174391329288483, -1.1570875644683838, -0.035253580659627914, -0.49082621932029724, -0.0008983152220025659, -1.4239535331726074, -0.137049600481987, -0.08150871098041534, -0.037147726863622665, -0.8716155886650085, -0.11366018652915955, -2.9072935581207275, -0.0071517182514071465, -1.6689286894688848e-06, -0.0036858259700238705, -0.00033504117163829505], "finish_reason": "length"}], "metrics": {"energy": 339.19924770355266, "energy_per_token": 1.3249970613420026, "time": 14.724123, "time_per_token": 0.05751610546875}}
{"outputs": [{"text": "json_file = Path(directory) / 'hashes.json'\n\n    # check if the directory is a valid directory\n    if not Path(directory).is_dir():\n        raise ValueError(f\"The path '{directory}' does not specify an existing directory.\")\n\n    # check if the file 'hashes.json' exists and if it does, delete it\n    if json_file.exists():\n        json_file.unlink()\n\n    # check if the file 'hashes.json' exists and if it does, delete it\n    if json_file.exists():\n        json_file.unlink()\n\n    # create a directory for storing the hash files\n    if not Path(directory).joinpath('hashes').is_dir():\n        Path(directory).joinpath('hashes').mkdir()\n\n    # create a directory for storing the hash files\n    if not Path(directory).joinpath('hashes').is_dir():\n        Path(directory).joinpath('hashes').mkdir()\n\n    # create a dictionary to store hashes\n    hashes", "tokens": ["json", "_", "file", " =", " Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", "\n", "\n", "    ", "#", " check", " if", " the", " directory", " is", " a", " valid", " directory", "\n", "    ", "if", " not", " Path", "(", "directory", ")", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " path", " '", "{", "directory", "}'", " does", " not", " specify", " an", " existing", " directory", ".", "\"", ")", "\n", "\n", "    ", "#", " check", " if", " the", " file", " '", "has", "hes", ".", "json", "'", " exists", " and", " if", " it", " does", ",", " delete", " it", "\n", "    ", "if", " json", "_", "file", ".", "exists", "():", "\n", "        ", "json", "_", "file", ".", "un", "link", "()", "\n", "\n", "    ", "#", " check", " if", " the", " file", " '", "has", "hes", ".", "json", "'", " exists", " and", " if", " it", " does", ",", " delete", " it", "\n", "    ", "if", " json", "_", "file", ".", "exists", "():", "\n", "        ", "json", "_", "file", ".", "un", "link", "()", "\n", "\n", "    ", "#", " create", " a", " directory", " for", " storing", " the", " hash", " files", "\n", "    ", "if", " not", " Path", "(", "directory", ")", ".", "join", "path", "('", "has", "hes", "')", ".", "is", "_", "dir", "():", "\n", "        ", "Path", "(", "directory", ")", ".", "join", "path", "('", "has", "hes", "')", ".", "mk", "dir", "()", "\n", "\n", "    ", "#", " create", " a", " directory", " for", " storing", " the", " hash", " files", "\n", "    ", "if", " not", " Path", "(", "directory", ")", ".", "join", "path", "('", "has", "hes", "')", ".", "is", "_", "dir", "():", "\n", "        ", "Path", "(", "directory", ")", ".", "join", "path", "('", "has", "hes", "')", ".", "mk", "dir", "()", "\n", "\n", "    ", "#", " create", " a", " dictionary", " to", " store", " has", "hes", "\n", "    ", "has", "hes"], "logprobs": [-2.5215353965759277, -0.004359385464340448, -0.09921739250421524, -0.11855627596378326, -0.4784010648727417, -0.039100658148527145, -0.04693622887134552, -0.043285008519887924, -0.15752024948596954, -2.0115654468536377, -0.006818125024437904, -4.529942543740617e-06, -0.0027393694035708904, -0.0002849888114724308, -0.0008217295398935676, -0.01271639671176672, -1.487020492553711, -0.000590865034610033, -1.697535753250122, -3.9942221641540527, -0.23682723939418793, -0.9701636433601379, -0.8745263814926147, -2.912742853164673, -2.148653030395508, -0.6730519533157349, -0.8126751780509949, -0.3928229510784149, -0.002866922877728939, -0.16936208307743073, -0.0662812739610672, -2.2712199687957764, -0.12957021594047546, -0.004059646278619766, -0.0010701649589464068, -0.000248043768806383, -0.13292908668518066, -4.2914423829643056e-05, -0.008326695300638676, -0.00781324878334999, -0.0030260744970291853, -0.003078961046412587, -0.413782000541687, -0.7618690729141235, -5.2569914259947836e-05, -0.1722802221775055, -0.5060663819313049, -0.1835278570652008, -2.706653118133545, -2.799190044403076, -1.0836868286132812, -0.0015394752845168114, -0.007898526266217232, -0.0017816636245697737, -2.279458999633789, -0.001980606932193041, -3.4972777366638184, -1.8597291707992554, -0.010072709992527962, -0.03287019580602646, -0.3683559000492096, -0.017255065962672234, -0.0005318895564414561, -0.0018343779956921935, -0.043463993817567825, -0.000940476544201374, -0.5528987646102905, -1.3634661436080933, -0.047652557492256165, -0.20353808999061584, -1.2794984579086304, -2.356438398361206, -0.0092624481767416, -0.00013183678674977273, -0.0016405232017859817, -0.0008332832949236035, -0.002049014437943697, -1.0401191711425781, -2.5805647373199463, -2.1081302165985107, -0.43215659260749817, -1.2162258625030518, -0.24311313033103943, -0.8488283157348633, -0.02398173324763775, -0.15624700486660004, -0.0012443665182217956, -0.09211843460798264, -0.26338881254196167, -0.0022088908590376377, -6.19869097135961e-05, -6.83045873302035e-05, -0.241500586271286, -0.009524618275463581, -0.002093387534841895, -0.001513170194812119, -0.47034063935279846, -0.0026637569535523653, -0.000563224486541003, -0.0009046276099979877, -0.003984489478170872, -0.0008896207436919212, -0.010281692259013653, -0.0054686469957232475, -0.03568963706493378, -0.0022475477308034897, -0.31976667046546936, -2.979579448699951, -0.09793012589216232, -0.33739131689071655, -1.1978964805603027, -0.265482097864151, -0.03178585320711136, -0.003669197903946042, -0.0017946342704817653, -0.002473986940458417, -0.002388007938861847, -1.3952281475067139, -0.29131880402565, -0.06988543272018433, -0.02915940061211586, -0.052386149764060974, -0.020670006051659584, -0.05296235531568527, -0.013300033286213875, -0.017752446234226227, -0.012045146897435188, -0.35569047927856445, -0.1500566303730011, -0.002913280390202999, -0.007830518297851086, -0.0007937379996292293, -0.01744415983557701, -0.004862151574343443, -0.0020904133561998606, -0.0007725353352725506, -0.13507504761219025, -0.0005413020844571292, -0.00032944019767455757, -0.0007879013428464532, -0.0016976482002064586, -7.390703103737906e-05, -0.0007458527106791735, -0.0006023023161105812, -0.024105442687869072, -0.0018260485958307981, -0.3520351052284241, -0.8774287700653076, -0.5216469764709473, -3.4771203994750977, -1.5875725746154785, -1.4013948440551758, -0.5990896821022034, -3.196777582168579, -0.6385042667388916, -0.27253198623657227, -0.003442435059696436, -1.9984638690948486, -0.0423140674829483, -0.7999889254570007, -0.051325153559446335, -0.1678735762834549, -0.009767123498022556, -0.4339718222618103, -0.9996436238288879, -1.4781842764932662e-05, -0.2558671832084656, -0.5290495157241821, -0.006315393373370171, -0.04701698571443558, -0.0025113255251199007, -0.9937400817871094, -0.00014709345123264939, -0.0004378790326882154, -0.003998856525868177, -0.004340988118201494, -0.003261605743318796, -0.366280198097229, -0.01351245865225792, -0.0022578956559300423, -0.001082311267964542, -0.00954669900238514, -0.08732453733682632, -2.264974000354414e-06, -0.01419012900441885, -0.0003093002596870065, -6.282132380874828e-05, -0.0009179668850265443, -0.0008200620068237185, -0.0006324436399154365, -0.00011514954530866817, -0.4179602861404419, -0.0015717307105660439, -0.07385483384132385, -0.0025328481569886208, -0.4215850830078125, -1.0185208320617676, -0.30775612592697144, -3.3543918132781982, -0.04389694333076477, -0.00889387633651495, -0.03227582946419716, -0.19844119250774384, -0.008006265386939049, -0.017761580646038055, -0.006579285021871328, -0.1841883659362793, -0.021155420690774918, -0.013536685146391392, -0.0021106365602463484, -0.005166631191968918, -0.0003875934926327318, -0.002183436183258891, -0.013698145747184753, -5.245195097813848e-06, -0.01197094190865755, -0.06472217291593552, -0.0005428509321063757, -0.01039224211126566, -0.00032586511224508286, -0.007023052778095007, -0.005062262061983347, -0.00011634149996098131, -0.0004704084130935371, -0.0007963585085235536, -0.0009467886411584914, -0.006767093203961849, -0.00032610344351269305, -0.0002455409849062562, -2.5987286790041253e-05, -0.002092435723170638, -0.0008393579046241939, -2.169585604860913e-05, -0.00046135272714309394, -0.0009409529156982899, -0.00017212340026162565, -0.00016223068814724684, -0.00023398046323563904, -0.0004253674705978483, -1.156323378381785e-05, -0.0016110072610899806, -0.0002256377338198945, -0.026891296729445457, -0.0014976962702348828, -0.3725531995296478, -0.9661485552787781, -0.17909786105155945, -1.3217086791992188, -0.2706676125526428, -0.13669146597385406, -2.506086826324463, -0.05710982903838158, -0.5407949686050415, -0.002198066795244813, -0.297095388174057, -0.004045517649501562], "finish_reason": "length"}], "metrics": {"energy": 331.401300713539, "energy_per_token": 1.2945363309122617, "time": 14.293835, "time_per_token": 0.05583529296875}}
{"outputs": [{"text": "directory = Path(directory)\n    if not directory.is_dir():\n        raise ValueError(f\"Directory '{directory}' does not exist or is not a directory.\")\n\n    hashes = {}\n\n    for subdir, subdirs, files in os.walk(directory):\n        for f in files:\n            path = os.path.join(subdir, f)\n            with open(path, 'rb') as file:\n                hashes[path] = hashlib.sha256(file.read()).hexdigest()\n\n    json_file = f\"{directory.parent.resolve()}/hashes.json\"\n    with open(json_file, 'w') as file:\n        json.dump(hashes, file, indent=4)\n\n    return json_file", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "if", " not", " directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "for", " sub", "dir", ",", " sub", "dir", "s", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "path", " =", " os", ".", "path", ".", "join", "(", "sub", "dir", ",", " f", ")", "\n", "            ", "with", " open", "(", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "has", "hes", "[", "path", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " f", "\"", "{", "directory", ".", "parent", ".", "resolve", "()", "}/", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " file", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "#"], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -1.3187956809997559, -0.0725097581744194, -0.11505530774593353, -0.0006725909770466387, -0.7220481038093567, -2.396077979938127e-05, -0.029998479411005974, -0.004876980558037758, -0.010837388224899769, -0.0011323237558826804, -0.4194210171699524, -0.5871909856796265, -3.2782016205601394e-05, -0.040845759212970734, -0.5409748554229736, -0.04592704400420189, -2.2841553688049316, -1.3440101146697998, -0.00038366109947673976, -0.010212075896561146, -0.035217445343732834, -0.6688041687011719, -0.0005900310934521258, -0.015150237828493118, -0.5224364995956421, -0.07127943634986877, -0.02554355561733246, -0.007343442644923925, -0.12135187536478043, -0.47585856914520264, -0.003874415997415781, -0.00011157367407577112, -0.0012016226537525654, -0.20571269094944, -0.00019608005823101848, -0.7547786831855774, -0.004775903187692165, -0.2455112487077713, -0.09400509297847748, -0.010698935016989708, -1.396125316619873, -0.000120751719805412, -0.19305981695652008, -2.2989985942840576, -0.34035107493400574, -0.03172533959150314, -2.591519832611084, -0.050612132996320724, -0.22348234057426453, -0.0004011779965367168, -0.10052995383739471, -0.0009517907164990902, -0.0012218636693432927, -2.0265558760002023e-06, -0.00014673586701974273, -0.00011324241495458409, -0.023861734196543694, -0.0487159788608551, -0.007856184616684914, -0.0015982723562046885, -0.14191997051239014, -2.387744903564453, -0.34538111090660095, -0.006286134012043476, -9.095255518332124e-05, -0.0014227039646357298, -0.0011316093150526285, -1.9744720458984375, -0.01578960195183754, -1.0365180969238281, -0.0001382732152706012, -0.00014518637908622622, -0.009655323810875416, -0.006822505500167608, -8.606540359323844e-05, -0.002283705398440361, -1.2159273865108844e-05, -0.00039402826223522425, -0.001423894427716732, -4.756337511935271e-05, -0.006578574422746897, -0.029881281778216362, -0.7193549871444702, -0.0027236768510192633, -8.856858039507642e-05, -0.0012430568458512425, -0.0032903600949794054, -0.6389358043670654, -0.009107356891036034, -0.007377049885690212, -0.00018404220463708043, -1.3187934160232544, -0.019148146733641624, -0.007173140998929739, -0.000785280775744468, -0.289691299200058, -0.039262399077415466, -0.028767282143235207, -0.45475485920906067, -0.012912588194012642, -0.00012396997772157192, -0.015437750145792961, -0.0010627818992361426, -2.7417760065873154e-05, -0.0062470403499901295, -0.001763456966727972, -2.0503786799963564e-05, -2.50339189733495e-06, -0.0019957164768129587, -0.0063499826937913895, -0.00019464982324279845, -8.189342770492658e-05, -0.0017765468219295144, -0.009573973715305328, -0.012712747789919376, -5.280832192511298e-05, -0.005619087256491184, -0.00021646064124070108, -0.013840299099683762, -0.02062387950718403, -0.001583751873113215, -0.8235656023025513, -0.018801918253302574, -0.08773345500230789, -0.026119522750377655, -3.5792078971862793, -0.1637255698442459, -0.0179242342710495, -0.020226063206791878, -1.977583885192871, -1.1427841186523438, -0.9594520926475525, -1.883521318435669, -0.004366506822407246, -0.3057027757167816, -0.008324685506522655, -3.4570634852570947e-06, -0.0024723222013562918, -0.0002131234941771254, -0.0002329078270122409, -0.010083095170557499, -0.11695574969053268, -0.06754817068576813, -0.003128517186269164, -0.0001677133986959234, -0.001188525347970426, -0.00014876213390380144, -8.34461570775602e-06, -0.00014709345123264939, -0.05593875050544739, -0.004779343493282795, -0.056042447686195374, -7.998623186722398e-05, -0.3237062692642212, -0.00038556772051379085, -0.00044490929576568305, -0.0005281960475258529, -0.018703525885939598, -0.0008144637104123831, -0.0038865283131599426, -0.0062430123798549175, -0.003386003663763404, -7.819823804311454e-05, -0.0005407063290476799, -0.0007771808886900544, -0.5955742597579956, -0.09202840924263, -0.001522811478935182, -0.25340813398361206, -0.11616408079862595, -0.013930941931903362, -0.22923429310321808, -0.0029755623545497656, -0.06301917880773544, -0.12051750719547272, -0.0009703694959171116, -1.6689286894688848e-06, -0.7585247159004211, -0.006114941090345383, -2.0401787757873535], "finish_reason": "stop"}], "metrics": {"energy": 244.27771161651606, "energy_per_token": 1.2993495298750855, "time": 10.310011, "time_per_token": 0.054840484042553185}}
{"outputs": [{"text": "directory = Path(directory)\n    if not directory.is_dir():\n        raise ValueError(f\"'{directory}' is not a directory.\")\n\n    file_hashes = {}\n    for dir_path, dir_names, file_names in os.walk(directory):\n        for filename in file_names:\n            file_path = os.path.join(dir_path, filename)\n            with open(file_path, \"rb\") as f:\n                file_hashes[filename] = hashlib.sha256(f.read()).hexdigest()\n\n    with open(directory / \"hashes.json\", \"w\") as f:\n        json.dump(file_hashes, f, indent=4)\n\n    return directory / \"hashes.json\"", "tokens": ["directory", " =", " Path", "(", "directory", ")", "\n", "    ", "if", " not", " directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "'{", "directory", "}'", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " dir", "_", "path", ",", " dir", "_", "names", ",", " file", "_", "names", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " file", "_", "names", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "has", "hes", "[", "filename", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "with", " open", "(", "directory", " /", " \"", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " f", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " directory", " /", " \"", "has", "hes", ".", "json", "\""], "logprobs": [-1.7949670553207397, -0.27368712425231934, -0.12901954352855682, -0.003987576812505722, -0.006053802091628313, -0.001383896335028112, -0.2285090982913971, -0.24987995624542236, -1.3187956809997559, -0.0725097581744194, -0.11505530774593353, -0.0006725909770466387, -0.7220481038093567, -2.396077979938127e-05, -0.029998479411005974, -0.004876980558037758, -0.010837388224899769, -0.0011323237558826804, -0.4194210171699524, -0.5871909856796265, -3.2782016205601394e-05, -0.040845759212970734, -0.5409748554229736, -0.04592704400420189, -1.8652558326721191, -0.008861501701176167, -0.11010441929101944, -0.023188374936580658, -0.003537470242008567, -0.010036006569862366, -0.26569369435310364, -0.8612921237945557, -0.01264930423349142, -9.023735765367746e-05, -0.0023707635700702667, -0.3432198166847229, -0.0002786724944598973, -3.0627403259277344, -0.12356926500797272, -0.8248326182365417, -0.0006011109799146652, -0.09669575095176697, -0.20381717383861542, -0.018741434440016747, -0.35965871810913086, -0.143584743142128, -2.1998744010925293, -1.1619328260421753, -0.20658105611801147, -0.01694299466907978, -1.7679526805877686, -0.017633218318223953, -0.016904667019844055, -0.0006245807744562626, -0.2722041606903076, -0.00011157367407577112, -0.0010590903693810105, -0.0007875440060161054, -0.0035969815216958523, -6.556489552167477e-06, -0.00014757021563127637, -0.0001456631434848532, -0.030232716351747513, -0.03172660991549492, -0.01173592172563076, -0.0017708349041640759, -0.20718659460544586, -1.8591445684432983, -0.0005527398898266256, -0.01497116032987833, -3.4450891689630225e-05, -0.0002108589978888631, -0.012240292504429817, -0.0021586944349110126, -0.0009238027851097286, -0.23105144500732422, -0.12892869114875793, -0.011179781518876553, -0.0008877150830812752, -0.6785946488380432, -0.0006515049026347697, -0.00025102324434556067, -0.011087710037827492, -0.002731047570705414, -4.6132929128361866e-05, -0.0016630165046080947, -3.1470757676288486e-05, -5.483612312673358e-06, -0.00018451895448379219, -0.0013402060139924288, -4.792098479811102e-05, -0.0024796947836875916, -0.01796814240515232, -0.531907856464386, -0.0017849955474957824, -7.843663479434326e-05, -0.002299404935911298, -3.683499380713329e-05, -1.168244216387393e-05, -0.002286678645759821, -0.6322957277297974, -0.0039043400902301073, -0.00015841660206206143, -0.000399033073335886, -3.8265450712060556e-05, -0.7778798341751099, -0.06014632433652878, -0.003786657238379121, -0.0004161922261118889, -0.3556360900402069, -0.0016931259306147695, -0.4015844762325287, -0.00018916724366135895, -0.032548077404499054, -0.42652058601379395, -0.009811981581151485, -0.00021562635083682835, -0.021014653146266937, -0.002295004203915596, -3.135155202471651e-05, -0.00405014818534255, -0.0019403931219130754, -1.4543427823809907e-05, -5.483612312673358e-06, -0.0025037152227014303, -0.01907329633831978, -0.00013445904187392443, -3.4450891689630225e-05, -0.0018954183906316757, -0.008061254397034645, -0.014766562730073929, -6.305972783593461e-05, -0.0030244106892496347, -0.0002917817619163543, -0.007481650914996862, -0.1275903731584549, -0.0021809381432831287, -1.2868006229400635, -0.0055761742405593395, -0.005432604346424341, -1.036509394645691, -0.090605229139328, -0.13615810871124268, -0.005714152939617634, -2.098061486321967e-05, -0.0012175773736089468, -0.00023445718397852033, -6.067568756407127e-05, -0.0001461399078834802, -0.006428870838135481, -0.0053137969225645065, -0.010498298332095146, -0.03149515017867088, -5.280832192511298e-05, -0.11372040957212448, -0.011358005926012993, -0.0005819296347908676, -0.0001892864383989945, -0.02990500070154667, -0.0030914393719285727, -0.005160582717508078, -0.005232686642557383, -0.019440123811364174, -1.9073468138230965e-06, -3.528532761265524e-05, -0.00012027494085486978, -0.0007115454645827413, -0.000560245884116739, -0.5667763948440552, -0.08367415517568588, -0.00048756631440483034, -0.29448699951171875, -0.12514041364192963, -0.00255555915646255, -0.30316272377967834, -0.004338732920587063, -0.0752224251627922, -1.2213917970657349, -0.025357846170663834, -0.003667535027489066, -0.0003493413969408721, -2.5510462364763953e-05, -0.00011789103882620111, -2.2649508537142538e-05, -0.0007850425899960101], "finish_reason": "stop"}], "metrics": {"energy": 233.2454972839355, "energy_per_token": 1.2607864718050568, "time": 10.309207, "time_per_token": 0.055725443243243244}}
{"outputs": [{"text": "hashes = {}\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            path = os.path.join(dirpath, filename)\n            with open(path, \"rb\") as f:\n                hashes[filename] = hashlib.sha256(f.read()).hexdigest()\n\n    json_file = Path(directory) / \"hashes.json\"\n    with open(json_file, \"w\") as f:\n        json.dump(hashes, f, indent=4)\n    return str(json_file)", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "has", "hes", "[", "filename", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ",", " indent", "=", "4", ")", "\n", "    ", "return", " str", "(", "json", "_", "file", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.8479493856430054, -0.008969019167125225, -0.4562702775001526, -0.20168189704418182, -0.01786978542804718, -0.28769955039024353, -0.5472832918167114, -1.5660544633865356, -0.3759361505508423, -0.0012960376916453242, -0.7915627360343933, -0.00379853299818933, -0.0001294529065489769, -0.013838183134794235, -4.255681051290594e-05, -7.617183291586116e-05, -0.00030632095877081156, -0.00825245026499033, -9.179073458653875e-06, -8.046303264563903e-05, -0.0005745429079979658, -0.016524948179721832, -0.034903328865766525, -0.01701577566564083, -0.0024758896324783564, -0.16982229053974152, -0.15226396918296814, -0.00026723151677288115, -0.004336952697485685, -5.006777428206988e-06, -3.576272320060525e-06, -0.0001935771433636546, -0.0013898485340178013, -0.0013172292383387685, -2.2582359313964844, -0.023709705099463463, -0.5045490264892578, -9.083335316972807e-05, -0.00025388356880284846, -0.008749009110033512, -0.005709648597985506, -0.00013934595335740596, -0.0015997005393728614, -2.1219027985353023e-05, -0.0002739054325502366, -0.0016354055842384696, -6.210611172718927e-05, -0.007513715419918299, -0.009519068524241447, -1.1751023530960083, -0.011823338456451893, -0.00013541258522309363, -0.0016044613439589739, -0.004932378884404898, -0.6110630035400391, -0.009930492378771305, -7.116541382856667e-05, -0.000286657246761024, -7.116541382856667e-05, -0.5272176265716553, -0.06320250034332275, -0.0021613112185150385, -0.000663894519675523, -0.30971014499664307, -0.020804282277822495, -0.02893104963004589, -1.1308650970458984, -0.007941930554807186, -0.00013636612857226282, -0.02022489346563816, -0.0012880609137937427, -3.2066785934148356e-05, -0.005397508852183819, -0.0020092790946364403, -2.8609820219571702e-05, -5.602820692729438e-06, -0.0007775382255204022, -0.017946012318134308, -5.435795901576057e-05, -4.482168878894299e-05, -0.0022741903085261583, -0.006148234009742737, -0.014267929829657078, -5.8053239627042785e-05, -0.002169756917282939, -0.00028939827461726964, -0.012710629031062126, -0.5844948887825012, -0.0021029042545706034, -0.7775973677635193, -0.014927707612514496, -0.10832119733095169, -0.029763029888272285, -0.4839637279510498, -0.027241811156272888, -0.0402001217007637, -0.008049429394304752, -0.12207794189453125, -0.1418018490076065, -0.006067547015845776, -5.364403477869928e-06, -0.0015756584471091628, -0.0001445904199499637, -0.00010108436981681734, -0.0042567127384245396, -0.022787731140851974, -0.1037641242146492, -0.3480548560619354, -7.235741941258311e-05, -0.047010499984025955, -0.00021240839851088822, -5.125986263010418e-06, -0.005104366689920425, -0.014082465320825577, -0.003402517642825842, -0.00564220268279314, -0.033558283001184464, -4.446407547220588e-05, -0.031072743237018585, -0.009013558737933636, -0.0004536076739896089, -0.00037472377880476415, -0.018363114446401596, -0.0011288706446066499, -0.005709411576390266, -0.0033896868117153645, -0.00629039853811264, -5.6980417866725475e-05, -0.0008895016508176923, -0.00043561504571698606, -0.9089405536651611, -0.10152484476566315, -0.000530936405993998, -0.2960541546344757, -0.07815367728471756, -0.0023959758691489697, -1.1603444814682007, -0.057866159826517105, -0.31623998284339905, -7.807903602952138e-05, -0.004345498513430357, -0.0003513672563713044, -8.344646857949556e-07, -1.4766361713409424, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.0001308832288486883, -0.00015841660206206143, -2.313819408416748, -0.004608367569744587], "finish_reason": "stop"}], "metrics": {"energy": 228.6263932113647, "energy_per_token": 1.5241759547424314, "time": 8.624864, "time_per_token": 0.057499093333333334}}
{"outputs": [{"text": "hashes = {}\n    for dir_path, subdirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(dir_path, file)\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.sha256(f.read()).hexdigest()\n                hashes[file] = file_hash\n\n    # Write the hashes to the JSON file\n    json_file = Path(directory).joinpath(\"hashes.json\")\n    with open(json_file, 'w') as f:\n        json.dump(hashes, f)\n\n    return str(json_file)", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " dir", "_", "path", ",", " sub", "dir", "s", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "#", " Write", " the", " has", "hes", " to", " the", " JSON", " file", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ")", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " str", "(", "json", "_", "file", ")"], "logprobs": [-1.8479493856430054, -0.008969019167125225, -0.4562702775001526, -0.20168189704418182, -0.01786978542804718, -0.28769955039024353, -0.5472832918167114, -1.5660544633865356, -1.477105736732483, -0.3030189573764801, -0.010425275191664696, -1.6984968185424805, -0.1524987816810608, -0.29536813497543335, -0.002360892714932561, -0.40166816115379333, -0.0027092916425317526, -0.00697783287614584, -6.079655122448457e-06, -0.00014149141497910023, -0.0006195771275088191, -0.01644274778664112, -0.033146318048238754, -0.018133221194148064, -0.0023005942348390818, -0.21441501379013062, -0.41925641894340515, -0.3738114833831787, -0.006710020359605551, -6.842378934379667e-05, -0.0018005840247496963, -0.0012266262201592326, -0.6095012426376343, -0.03235373646020889, -0.011695627123117447, -0.0010346779599785805, -0.2274789810180664, -0.0003810394846368581, -0.00014161060971673578, -0.0034417223650962114, -0.00331578659825027, -4.95898348162882e-05, -0.0011379201896488667, -8.785339014139026e-05, -9.536738616588991e-07, -0.00023493390472140163, -0.0008451942121610045, -8.093983342405409e-05, -0.005413159728050232, -0.0101087037473917, -0.8069301247596741, -0.00712804589420557, -0.00012718822108581662, -0.001456272671930492, -0.0007626485894434154, -2.622600959512056e-06, -0.004567191004753113, -0.7972633838653564, -0.008521386422216892, -0.002605498069897294, -0.0003407612966839224, -0.357105553150177, -0.052009597420692444, -0.0034849646035581827, -0.0013622299302369356, -2.63614821434021, -0.00839313305914402, -0.10325238108634949, -0.007644801866263151, -0.007879011332988739, -0.0001081169830285944, -1.5616295058862306e-05, -0.0070937201380729675, -0.00335962837561965, -2.002696055569686e-05, -3.4570634852570947e-06, -0.04338432103395462, -0.004516163375228643, -7.354942499659956e-05, -2.95634672511369e-05, -0.0016070796409621835, -0.03344288468360901, -0.01192688662558794, -8.165503095369786e-05, -0.0019812018144875765, -0.00019274283840786666, -0.007809818722307682, -0.20525658130645752, -0.1215243935585022, -4.291525328881107e-06, -0.020414479076862335, -0.12614066898822784, -0.5141286253929138, -0.00016020445036701858, -0.006078329402953386, -3.9934315282152966e-05, -0.0018722163513302803, -0.004928345326334238, -0.6750702857971191, -0.0036942586302757263, -3.297480344772339, -2.1331984996795654, -0.4378497302532196, -0.26891857385635376, -0.00724912341684103, -0.12999969720840454, -2.4225196838378906, -0.4813133478164673, -0.0018628163961693645, -0.1324952244758606, -0.0006250573205761611, -0.5794616937637329, -0.007579379249364138, -0.12730145454406738, -0.09326747059822083, -0.6718197464942932, -0.047713588923215866, -0.04444259777665138, -0.018985457718372345, -1.9453867673873901, -0.21597394347190857, -4.51792984677013e-05, -1.216428279876709, -0.01538938656449318, -0.0048182569444179535, -7.986990567587782e-06, -0.0020427091512829065, -0.00011276562872808427, -3.0397906812140718e-05, -2.2411095415009186e-05, -0.03514804691076279, -0.004044923931360245, -0.0520598441362381, -0.15020795166492462, -9.881961887003854e-05, -0.11495722830295563, -0.00018034738604910672, -1.1920858014491387e-05, -0.001531738555058837, -0.2881312668323517, -0.0031832996755838394, -0.034284595400094986, -7.080780778778717e-05, -0.052766744047403336, -0.006321553606539965, -0.0003110878460574895, -0.0005833592731505632, -0.026585932821035385, -0.001696815132163465, -0.005739517975598574, -0.006414420437067747, -0.004458131268620491, -5.9602869441732764e-05, -0.00026067672297358513, -0.0004042761866003275, -0.6487166881561279, -0.002228397876024246, -0.42224207520484924, -0.002968787681311369, -0.06644782423973083, -0.185292050242424, -7.974783511599526e-05, -0.008213315159082413, -0.00042822727118618786, -2.3841830625315197e-06, -0.6849251985549927], "finish_reason": "stop"}], "metrics": {"energy": 221.34762622451774, "energy_per_token": 1.3334194350874562, "time": 9.047063, "time_per_token": 0.05450037951807229}}
{"outputs": [{"text": "json_file = Path(directory) / \"hashes.json\"\n\n    if not json_file.exists():\n        os.makedirs(directory, exist_ok=True)\n        hashes = {}\n        for root, _, files in os.walk(directory):\n            for file in files:\n                file_path = os.path.join(root, file)\n                hash_obj = hashlib.sha256()\n                with open(file_path, 'rb') as f:\n                    for chunk in iter(lambda: f.read(4096), b\"\"):\n                        hash_obj.update(chunk)\n                hashes[file] = hash_obj.hexdigest()\n        json_file.write_text(json.dumps(hashes))\n    return str(json_file)", "tokens": ["json", "_", "file", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "\n", "    ", "if", " not", " json", "_", "file", ".", "exists", "():", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "has", "hes", " =", " {}", "\n", "        ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "                ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "    ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "        ", "hash", "_", "obj", ".", "update", "(", "chunk", ")", "\n", "                ", "has", "hes", "[", "file", "]", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "        ", "json", "_", "file", ".", "write", "_", "text", "(", "json", ".", "d", "umps", "(", "has", "hes", "))", "\n", "    ", "return", " str", "(", "json", "_", "file", ")"], "logprobs": [-2.5215353965759277, -0.004359385464340448, -0.09921739250421524, -0.11855627596378326, -0.4784010648727417, -0.039100658148527145, -0.04693622887134552, -0.043285008519887924, -0.15752024948596954, -0.20066942274570465, -0.0059905266389250755, -2.9802276912960224e-06, -0.0013725870521739125, -0.00012158608296886086, -5.793403761344962e-05, -0.01239536888897419, -1.3060935735702515, -0.0004742213059216738, -1.6942611932754517, -0.4570957124233246, -0.5348367094993591, -0.0007083290838636458, -4.851700214203447e-05, -0.002234939718618989, -0.6132098436355591, -0.02355823665857315, -0.02790270932018757, -0.013125566765666008, -3.5462441444396973, -0.0019221893744543195, -0.038056906312704086, -0.001141968765296042, -0.0010749283246695995, -0.0004203628050163388, -0.8639428615570068, -0.7121732831001282, -0.03134889900684357, -3.576278118089249e-07, -8.320462075062096e-05, -0.0024880189448595047, -0.014588944613933563, -0.002863594563677907, -0.03881138563156128, -0.7845999002456665, -1.8733007907867432, -0.006659812293946743, -0.2811444401741028, -0.15254411101341248, -0.006602969951927662, -0.6896678805351257, -0.2143300622701645, -1.8545814752578735, -0.001767264911904931, -1.0912508964538574, -0.02739156410098076, -0.1671740710735321, -0.0009305914281867445, -0.008579892106354237, -0.0003703146940097213, -6.97350042173639e-05, -0.0005106813623569906, -0.01028641127049923, -0.02934359572827816, -0.005245019216090441, -0.001167807262390852, -0.07045008987188339, -0.3401576578617096, -0.11608882993459702, -0.005099741276353598, -7.83174327807501e-05, -0.0007740838918834925, -0.0009910915978252888, -1.0542811155319214, -0.09536828845739365, -0.023002810776233673, -0.000575376907363534, -0.44912585616111755, -2.5152843591058627e-05, -9.083335316972807e-05, -0.007821055129170418, -0.006678048521280289, -5.0424259825376794e-05, -0.0028864170890301466, -0.0003399271226953715, -0.000648883986286819, -0.0001287377526750788, -0.002406679093837738, -0.01617722399532795, -2.023731231689453, -0.07194870710372925, -2.298363447189331, -0.000432278640801087, -0.0011932880152016878, -3.302042750874534e-05, -2.3007127310847864e-05, -0.006752884481102228, -0.0017860665684565902, -6.6756979322235566e-06, -8.344646857949556e-07, -0.015260368585586548, -0.0017924923449754715, -0.006652115378528833, -0.05873298645019531, -0.0005007919971831143, -6.949660019017756e-05, -0.0006597249885089695, -0.0007091629668138921, -3.576272320060525e-06, -0.0010010951664298773, -1.5444144010543823, -0.00040165462996810675, -0.0018908970523625612, -0.00010883215873036534, -0.18368779122829437, -0.05557447299361229, -0.0015686361584812403, -0.00015710550360381603, -0.0012869894271716475, -0.944145917892456, -0.05302691087126732, -0.00032228996860794723, -0.011877646669745445, -7.974783511599526e-05, -0.021493716165423393, -0.0011021974496543407, -0.004261341877281666, -2.7418097943154862e-06, -0.005180269479751587, -0.0010605193674564362, -0.22373665869235992, -0.003086091484874487, -0.00047291061491705477, -0.0004700509598478675, -0.012577497400343418, -6.913899414939806e-05, -0.0030822886619716883, -1.4504730701446533, -8.785339014139026e-05, -0.0016784878680482507, -0.007918396033346653, -5.0424259825376794e-05, -0.0008563903393223882, -0.0030326112173497677, -9.107174992095679e-05, -0.00021681819634977728, -1.0609570381348021e-05, -9.357491217087954e-05, -6.818538531661034e-05, -0.00048101297579705715, -0.00020454221521504223, -0.0015000768471509218, -0.02961421012878418, -0.33855926990509033, -4.911301948595792e-05, -0.022484607994556427, -0.13610775768756866, -1.008447289466858, -5.8410845667822286e-05, -0.014517394825816154, -0.0009049849468283355, -0.00040725519647821784, -0.00044169207103550434, -0.027999738231301308, -3.0278701160568744e-05, -0.001016457681544125, -0.0004644507134798914, -0.008597265928983688, -0.3316313624382019, -1.7987773418426514, -1.9120508432388306, -0.6642572283744812, -0.0076469313353300095, -0.06379085034132004, -8.356221951544285e-05, -0.0033800634555518627, -0.0008081507403403521, -0.007333502173423767, -0.00020275443966966122, -0.000587767455726862, -8.749579137656838e-05, -0.005160938482731581, -0.006694271694868803, -1.6927575416048057e-05, -0.7254935503005981, -0.005387667566537857, -1.1011557579040527, -0.5242400169372559, -0.33895209431648254, -0.00012206286191940308, -0.0031316070817410946, -0.00039450492477044463, -1.6689286894688848e-06, -0.41119566559791565], "finish_reason": "stop"}], "metrics": {"energy": 260.5042903995514, "energy_per_token": 1.3497631626919762, "time": 10.718298, "time_per_token": 0.05553522279792746}}
{"outputs": [{"text": "# create a list to store the paths of files to be hashed\n    paths_list = []\n\n    # get the absolute path of the directory and convert it to a Path object\n    directory = Path(directory)\n\n    # recursively iterate through all files and subdirectories in the given directory\n    for path in directory.rglob(\"*\"):\n        # if the path is a file, append it to the paths_list\n        if path.is_file():\n            paths_list.append(path)\n\n    # create a JSON file object\n    json_file = Path(directory, \"hashes.json\")\n    # create a JSON object with the file name as the key\n    json_data = {\"file_name\": json_file.name}\n\n    # if the directory already contains a hashes.json file, delete it\n    if json_file.exists():\n        os.remove(json_file)\n\n    # create a list of the SHA256 hashes of the files to be hashed\n    hash_list = []\n\n    # create an empty list to store all hashes\n    has", "tokens": ["#", " create", " a", " list", " to", " store", " the", " paths", " of", " files", " to", " be", " has", "hed", "\n", "    ", "paths", "_", "list", " =", " []", "\n", "\n", "    ", "#", " get", " the", " absolute", " path", " of", " the", " directory", " and", " convert", " it", " to", " a", " Path", " object", "\n", "    ", "directory", " =", " Path", "(", "directory", ")", "\n", "\n", "    ", "#", " recurs", "ively", " iterate", " through", " all", " files", " and", " sub", "direct", "ories", " in", " the", " given", " directory", "\n", "    ", "for", " path", " in", " directory", ".", "rg", "lob", "(", "\"", "*", "\"", "):", "\n", "        ", "#", " if", " the", " path", " is", " a", " file", ",", " append", " it", " to", " the", " paths", "_", "list", "\n", "        ", "if", " path", ".", "is", "_", "file", "():", "\n", "            ", "paths", "_", "list", ".", "append", "(", "path", ")", "\n", "\n", "    ", "#", " create", " a", " JSON", " file", " object", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "#", " create", " a", " JSON", " object", " with", " the", " file", " name", " as", " the", " key", "\n", "    ", "json", "_", "data", " =", " ", "{\"", "file", "_", "name", "\":", " json", "_", "file", ".", "name", "}", "\n", "\n", "    ", "#", " if", " the", " directory", " already", " contains", " a", " has", "hes", ".", "json", " file", ",", " delete", " it", "\n", "    ", "if", " json", "_", "file", ".", "exists", "():", "\n", "        ", "os", ".", "remove", "(", "json", "_", "file", ")", "\n", "\n", "    ", "#", " create", " a", " list", " of", " the", " SH", "A", "2", "5", "6", " has", "hes", " of", " the", " files", " to", " be", " has", "hed", "\n", "    ", "hash", "_", "list", " =", " []", "\n", "\n", "    ", "#", " create", " an", " empty", " list", " to", " store", " all", " has", "hes", "\n", "    ", "has"], "logprobs": [-1.676892638206482, -2.9237172603607178, -0.6434476971626282, -1.5906057357788086, -0.8086192607879639, -0.3436180055141449, -0.9023985266685486, -2.3124282360076904, -0.3853521943092346, -1.6321296691894531, -0.6372660994529724, -0.2570907473564148, -0.02313537709414959, -0.00012385078298393637, -0.06766749918460846, -0.0035984069108963013, -1.6257840394973755, -0.956639289855957, -1.7886914014816284, -0.13412299752235413, -0.10698991268873215, -0.0021636902820318937, -0.33921071887016296, -0.0004930472350679338, -0.08409059047698975, -2.0151209831237793, -0.8339184522628784, -0.49527809023857117, -0.03935706987977028, -0.130100280046463, -0.04206949844956398, -0.3360021710395813, -3.008769989013672, -0.9839342832565308, -0.07339058071374893, -0.12583282589912415, -0.15392491221427917, -0.258175253868103, -0.06534939259290695, -0.04601505398750305, -0.0007682471186853945, -0.23371607065200806, -1.066547155380249, -0.3137841522693634, -0.005123936105519533, -0.013150861486792564, -0.0005435658385977149, -0.3283972442150116, -0.1412961632013321, -0.00034671969478949904, -0.05540384352207184, -3.7222423553466797, -0.0004638549580704421, -2.828367233276367, -0.6251541972160339, -0.5644680261611938, -0.36602121591567993, -0.39620181918144226, -0.9823411703109741, -0.004256237763911486, -7.366862701019272e-05, -0.298205703496933, -0.004947918001562357, -1.7340086698532104, -0.009192169643938541, -0.1263502836227417, -0.0013237770181149244, -0.08023980259895325, -0.8230607509613037, -0.030741602182388306, -0.02951294183731079, -0.00021002470748499036, -0.08191012591123581, -0.003410002216696739, -0.1368860900402069, -0.004481273237615824, -0.14364680647850037, -0.03967837989330292, -0.001158043509349227, -0.019483497366309166, -0.04731867462396622, -0.5977717638015747, -0.565825343132019, -0.09132425487041473, -0.9497185349464417, -0.08421037346124649, -0.05839413031935692, -0.3822013735771179, -0.13023938238620758, -1.4409679174423218, -0.4101817309856415, -0.03162578493356705, -0.03395163640379906, -0.368821382522583, -0.2399725466966629, -0.00019798702851403505, -0.05706625431776047, -0.0005547653418034315, -0.008949879556894302, -0.02242317795753479, -1.7762025890988298e-05, -0.00028451209072954953, -5.960462772236497e-07, -1.3589766240329482e-05, -0.0034273474011570215, -0.0007832558476366103, -0.0005460678366944194, -0.013472117483615875, -2.3483953555114567e-05, -1.7881377516459906e-06, -0.0003668589051812887, -9.798523387871683e-05, -0.0006007535266689956, -0.33546182513237, -0.1965525895357132, -0.0005321278586052358, -0.15975385904312134, -0.0406213216483593, -0.03639383241534233, -0.9922531247138977, -0.2215805947780609, -2.567241907119751, -0.08012857288122177, -3.40681529045105, -1.6419012546539307, -0.00032848684350028634, -0.8176596164703369, -0.005707752425223589, -0.04223567619919777, -0.016754625365138054, -0.8227869272232056, -0.0776587650179863, -0.2338210940361023, -0.720755398273468, -0.08145124465227127, -0.004149280488491058, -7.867782187531702e-06, -0.0008257793379016221, -0.00014375607133843005, -3.0874729418428615e-05, -6.663577369181439e-05, -0.013245685026049614, -2.2304253578186035, -1.0204638242721558, -1.0116682052612305, -0.307669997215271, -2.238922119140625, -1.648209810256958, -1.608439564704895, -0.8592618107795715, -3.550189733505249, -1.0999932289123535, -0.7344631552696228, -0.4653097987174988, -0.1943402737379074, -1.870453119277954, -0.0013242532731965184, -0.7302025556564331, -0.01326638925820589, -1.6633492708206177, -0.010469513945281506, -0.49490511417388916, -0.0018786415457725525, -0.584915816783905, -0.2659482955932617, -0.08253027498722076, -0.005850808694958687, -0.49495527148246765, -0.003931413404643536, -0.00014935807848814875, -0.4690142273902893, -0.4405921995639801, -0.08215601742267609, -0.0011917401570826769, -0.28702035546302795, -0.0004648081958293915, -0.07867643982172012, -4.3311767578125, -0.19469837844371796, -2.4297685623168945, -2.404904365539551, -0.9780077338218689, -0.36707034707069397, -1.1879422664642334, -0.004791326355189085, -0.018778637051582336, -0.0004957877099514008, -0.028303511440753937, -0.05438341572880745, -0.8999143838882446, -0.02617933228611946, -0.23141300678253174, -0.0009345216676592827, -0.08301115781068802, -0.10173677653074265, -0.001660279231145978, -0.001974539365619421, -0.00015114595589693636, -0.18733754754066467, -0.002745432546362281, -0.0007559779332950711, -0.0008349508279934525, -0.9803516268730164, -0.00016139635408762842, -0.024931909516453743, -0.00021979777375236154, -0.054187629371881485, -0.0002980979916173965, -0.0012548437807708979, -0.008101814426481724, -0.0030854973010718822, -0.10991230607032776, -0.005933883599936962, -0.05875524505972862, -1.8161816596984863, -0.2715427279472351, -1.2434170246124268, -2.5782368183135986, -3.0888350009918213, -1.4722216129302979, -0.008696421980857849, -0.048686910420656204, -0.0001408954558428377, -0.0002739054325502366, -0.15038377046585083, -0.005939215887337923, -1.1557213068008423, -0.943731427192688, -0.02862781472504139, -3.3978638648986816, -0.0042586117051541805, -0.014721691608428955, -5.674201020156033e-05, -0.05374261736869812, -0.0013017522869631648, -2.9287643432617188, -0.020063316449522972, -0.07659919559955597, -0.025870148092508316, -0.29072195291519165, -0.0003831844369415194, -0.8208813071250916, -0.00020549570035655051, -0.29749777913093567, -3.4033398628234863, -2.0108182430267334, -1.2045233249664307, -1.7879886627197266, -0.3665200173854828, -0.062357347458601, -3.049736738204956, -1.8758431673049927, -0.12882044911384583, -0.5737550258636475, -0.0036767993588000536, -0.8057830333709717], "finish_reason": "length"}], "metrics": {"energy": 374.31087495231617, "energy_per_token": 1.462151855282485, "time": 14.717949, "time_per_token": 0.05749198828125}}
{"outputs": [{"text": "# create a JSON file with the name 'hashes.json'\n    hashes_file = Path(directory).joinpath(\"hashes.json\")\n    with hashes_file.open(mode=\"w\") as f:\n        json.dump([], f)\n\n    # create a dictionary that will contain hashes and their file names\n    hashes = {}\n\n    # traverse the directory recursively\n    for path, dirs, files in os.walk(directory):\n        # ignore directories starting with '.'\n        dirs[:] = [d for d in dirs if not d.startswith('.')]\n\n        # iterate over all files in the directory\n        for f in files:\n            if f.startswith('.'):\n                continue  # skip files starting with '.'\n\n            # calculate the SHA256 hash of the file\n            hash_ = hashlib.sha256()\n            with open(os.path.join(path, f), \"rb\") as file:\n                for chunk in iter(lambda: file.read(4096", "tokens": ["#", " create", " a", " JSON", " file", " with", " the", " name", " '", "has", "hes", ".", "json", "'", "\n", "    ", "has", "hes", "_", "file", " =", " Path", "(", "directory", ")", ".", "join", "path", "(", "\"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " has", "hes", "_", "file", ".", "open", "(", "mode", "=", "\"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "([]", ",", " f", ")", "\n", "\n", "    ", "#", " create", " a", " dictionary", " that", " will", " contain", " has", "hes", " and", " their", " file", " names", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " traverse", " the", " directory", " recurs", "ively", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "#", " ignore", " directories", " starting", " with", " '", ".", "'", "\n", "        ", "dir", "s", "[:", "]", " =", " [", "d", " for", " d", " in", " d", "irs", " if", " not", " d", ".", "start", "sw", "ith", "('", ".", "')", "]", "\n", "\n", "        ", "#", " iterate", " over", " all", " files", " in", " the", " directory", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "if", " f", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "                ", "continue", "  ", "#", " skip", " files", " starting", " with", " '", ".", "'", "\n", "\n", "            ", "#", " calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " file", "\n", "            ", "hash", "_", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "path", ",", " f", ")", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " file", ".", "read", "(", "4", "0", "9", "6"], "logprobs": [-1.676892638206482, -2.9237172603607178, -0.6434476971626282, -2.8957557678222656, -0.04797996208071709, -1.5105704069137573, -0.5058004260063171, -2.29779052734375, -0.34165796637535095, -0.006097523961216211, -9.893881360767409e-05, -0.006766027770936489, -0.0003968881501350552, -0.0014385362155735493, -1.5572293996810913, -0.005965168122202158, -1.4598535299301147, -0.004300157073885202, -0.2522219121456146, -0.27437007427215576, -0.10831927508115768, -0.4559420347213745, -0.042646538466215134, -0.0271099042147398, -0.03731701895594597, -2.044389486312866, -0.21827110648155212, -3.242440288886428e-05, -0.23068974912166595, -0.009851998649537563, -0.0036505504976958036, -4.8397800128441304e-05, -0.0012119814055040479, -0.00019834458362311125, -3.373566141817719e-05, -4.8993817472364753e-05, -0.01704706810414791, -0.4415333867073059, -1.3884474039077759, -0.8252643346786499, -9.321732068201527e-05, -3.659658250398934e-05, -2.8729025871143676e-05, -0.0003979606262873858, -0.0021943794563412666, -0.054084412753582, -1.4400047063827515, -0.09980931878089905, -0.00023362292267847806, -0.04553814232349396, -0.03508128970861435, -0.6127623915672302, -0.002725816797465086, -0.5757692456245422, -0.10484781116247177, -0.0034834202378988266, -0.04671372100710869, -1.4263392686843872, -0.043185342103242874, -0.010028217919170856, -1.544991374015808, -0.0002236116270069033, -0.0019610952585935593, -0.6043435335159302, -0.10060487687587738, -0.3194963335990906, -0.003765755333006382, -0.2289593666791916, -1.2753373384475708, -0.16191233694553375, -1.091541051864624, -3.262740135192871, -0.18328076601028442, -1.287710189819336, -2.571035385131836, -0.05705488100647926, -1.598393440246582, -1.5017139911651611, -2.233126401901245, -1.2351871728897095, -0.08141520619392395, -0.0015280486550182104, -0.20189370214939117, -0.012740643694996834, -0.5677126049995422, -0.12105386704206467, -0.0017573880031704903, -0.20023499429225922, -0.00023910524032544345, -0.14103664457798004, -3.305356502532959, -0.4765319526195526, -0.2830624282360077, -1.5683058500289917, -0.00010024998482549563, -1.4024691581726074, -0.0016977671766653657, -0.09145709872245789, -1.7149529457092285, -0.27498742938041687, -0.7652159929275513, -0.0008101756684482098, -0.0017971331253647804, -0.010684310458600521, -0.0012500813463702798, -0.004038275219500065, -3.2186455882765586e-06, -7.784063927829266e-05, -0.0003669780562631786, -0.006966823246330023, -0.08421387523412704, -0.004446500446647406, -0.03758295997977257, -0.7873523235321045, -3.210458755493164, -2.0705556869506836, -1.2881641387939453, -0.0024070357903838158, -0.833648681640625, -0.019200654700398445, -0.006431239657104015, -0.338766485452652, -0.00033825874561443925, -0.606899619102478, -0.0019890540279448032, -0.01934635452926159, -0.00011848701251437888, -8.11782301752828e-05, -0.2095307856798172, -0.04104543477296829, -0.0007977878558449447, -3.2543604902457446e-05, -2.062299427052494e-05, -0.0006161222117953002, -0.0001811817055568099, -0.0024924185127019882, -0.19257892668247223, -0.004173973109573126, -0.0024889700580388308, -0.0018434212543070316, -2.9682672902708873e-05, -1.1920928244535389e-07, -1.7507009506225586, -0.00041166413575410843, -0.0006005152827128768, -0.0019162403186783195, -0.003170584561303258, -0.8674850463867188, -0.0007379907765425742, -0.333028644323349, -3.3380675315856934, -0.4231450855731964, -0.9669725298881531, -0.1114274114370346, -0.3618176281452179, -0.09628648310899734, -1.5453258752822876, -0.11868533492088318, -0.00019691436318680644, -0.005759548861533403, -1.4046738147735596, -0.5201261043548584, -0.005918833427131176, -0.00022837892174720764, -0.0010846928926184773, -0.00959392823278904, -2.525806427001953, -0.533454954624176, -0.17289814352989197, -1.4680769443511963, -1.5020257706055418e-05, 0.0, -0.318487286567688, -0.01750156097114086, -0.003870022250339389, -0.03156907483935356, -0.08482526242733002, -0.0003195490571670234, -0.037122685462236404, -2.522681713104248, -0.000433112756581977, -1.8484299182891846, -0.30182716250419617, -0.09197545796632767, -0.00033909291960299015, -0.029627405107021332, -0.0001311216183239594, -0.0013458014000207186, -0.07387686520814896, -0.5820863246917725, -0.000520570669323206, -0.3231658935546875, -1.387732744216919, -0.37031546235084534, -0.5948641300201416, -0.0006908176001161337, -0.13642066717147827, -0.00011634149996098131, -0.00012778419477399439, -0.06399047374725342, -0.2989955246448517, -0.03107193484902382, -0.006844527553766966, -0.17032663524150848, -0.0003588747640606016, -1.4315433502197266, -0.10245376080274582, -1.8953876495361328, -0.05003468319773674, -0.000376034586224705, -2.7417760065873154e-05, -0.0012221018550917506, -0.001302228425629437, -5.245195097813848e-06, 0.0, -0.06161729618906975, -0.0029805542435497046, -0.03139488026499748, -0.053938377648591995, -0.03865794092416763, -0.0010249129263684154, -0.13735535740852356, -3.576214658096433e-05, -0.00010525626566959545, -0.0005921755800954998, -0.0006028980133123696, -3.814624506048858e-05, -0.010258565656840801, -6.961580220377073e-05, -0.002091722097247839, -0.00795801542699337, -8.916457591112703e-05, -0.8362540006637573, -0.0005685858195647597, -0.00010859376925509423, -0.0003259842633269727, -3.373566141817719e-05, -0.7608547806739807, -0.03550557419657707, -0.005648721940815449, -0.0004943578969687223, -0.7362725734710693, -0.1547366827726364, -0.00070296844933182, -0.006502777803689241, -5.781483559985645e-05, -0.026678213849663734, -0.0003355178632773459, -0.0008485292200930417, -4.410734163684538e-06, -0.005557206925004721, -0.000681883015204221, -0.27931147813796997, -0.005770097486674786, -0.00048387263086624444, -0.00036530973738990724], "finish_reason": "length"}], "metrics": {"energy": 363.82056844902064, "energy_per_token": 1.4211740955039869, "time": 14.2986355, "time_per_token": 0.055854044921875}}
{"outputs": [{"text": "dir_path = Path(directory)\n\n    hash_dict = {}\n\n    for dir_path, _, filenames in os.walk(directory):\n        for filename in filenames:\n            file_path = os.path.join(dir_path, filename)\n\n            # Compute hash for the file\n            with open(file_path, \"rb\") as file:\n                hash_dict[file_path] = hashlib.sha256(file.read()).hexdigest()\n\n    # Write hashes to JSON file\n    hashes_json_file = Path(dir_path, \"hashes.json\")\n    with open(hashes_json_file, \"w\") as file:\n        json.dump(hash_dict, file, indent=4)\n\n    return str(hashes_json_file)", "tokens": ["dir", "_", "path", " =", " Path", "(", "directory", ")", "\n", "\n", "    ", "hash", "_", "dict", " =", " {}", "\n", "\n", "    ", "for", " dir", "_", "path", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "_", "path", ",", " filename", ")", "\n", "\n", "            ", "#", " Compute", " hash", " for", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "hash", "_", "dict", "[", "file", "_", "path", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " Write", " has", "hes", " to", " JSON", " file", "\n", "    ", "has", "hes", "_", "json", "_", "file", " =", " Path", "(", "dir", "_", "path", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "has", "hes", "_", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " file", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " file", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " str", "(", "has", "hes", "_", "json", "_", "file", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-4.486413478851318, -0.2178664207458496, -0.11426617205142975, -0.044090647250413895, -0.0524316243827343, -0.005113973747938871, -0.014683748595416546, -0.0010174104245379567, -0.11852037906646729, -1.6624958515167236, -0.0002343380037928, -3.4294347763061523, -0.06179392710328102, -1.1657088994979858, -0.04064318537712097, -0.09775198251008987, -0.014740603044629097, -0.8199078440666199, -0.00014578233822248876, -0.3141304850578308, -2.127521514892578, -0.4356417953968048, -0.6271882653236389, -0.2314644604921341, -0.9700268507003784, -0.018450187519192696, -1.5428986549377441, -0.0003781795676331967, -8.904537389753386e-05, -0.0027733694296330214, -0.004174566827714443, -6.9141146923357155e-06, -8.296622399939224e-05, -0.00121174321975559, -0.5706163048744202, -0.01470724307000637, -0.012840800918638706, -0.014844906516373158, -0.12514051795005798, -0.10477609932422638, -0.00046230596490204334, -0.003673592582345009, -5.209310256759636e-05, -1.1086402082582936e-05, -6.151010165922344e-05, -0.0013852057745680213, -0.005864081904292107, -0.4985448122024536, -0.11950589716434479, -0.006949183996766806, -0.002351378323510289, -0.655336856842041, -0.0005355831235647202, -0.000259723310591653, -0.004875912796705961, -0.0022394596599042416, -7.021180499577895e-05, -0.004096094518899918, -2.8132995794294402e-05, -4.768370445162873e-07, -0.0005949157639406621, -0.0018206939566880465, -7.950943836476654e-05, -0.0027624324429780245, -2.321061611175537, -0.001211624126881361, -2.0147643089294434, -2.915896415710449, -1.799573540687561, -1.0520516633987427, -0.8265028595924377, -0.08301104605197906, -0.20965616405010223, -0.0011798333143815398, -0.5009891986846924, -0.000552263343706727, -0.00011264643399044871, -0.0023328252136707306, -0.00013672371278516948, -3.933898824470816e-06, -0.0009596510208211839, -0.7636286616325378, -0.0007001094636507332, -5.2927523938706145e-05, -0.00022885564249008894, -5.3165931603871286e-05, -1.0377169847488403, -0.021520551294088364, -0.0010649253381416202, -0.0008793777669779956, -0.46363237500190735, -0.061806704849004745, -1.2526992559432983, -0.021553684026002884, -1.0789284706115723, -0.05854322388768196, -0.00020728347590193152, -0.01060139387845993, -0.00017867876158561558, -0.027089949697256088, -0.0016486160457134247, -3.957670196541585e-05, -0.0065199509263038635, -0.002318315440788865, -1.2278481335670222e-05, -1.9073468138230965e-06, -0.010996809229254723, -0.0293824914842844, -0.0012043612077832222, -8.844937838148326e-05, -0.0028370865620672703, -0.00946191605180502, -0.01927783340215683, -4.827859811484814e-05, -0.0004447901446837932, -0.0002719986077863723, -0.011397371999919415, -0.019581228494644165, -0.01440365705639124, -0.50318843126297, -1.884657382965088, -1.431052327156067, -0.027262229472398758, -0.04309936612844467, -0.9894430637359619, -0.022649291902780533, -0.038737304508686066, -0.0011260127648711205, -1.9745872020721436, -0.0010727847693488002, -0.007797399070113897, -1.6052887439727783, -0.33203503489494324, -0.32757043838500977, -0.0720159262418747, -2.0156877040863037, -0.04327576234936714, -1.8037041425704956, -0.00010299152199877426, -2.6702524337451905e-05, -0.34793323278427124, -0.07279011607170105, -0.004071875009685755, -1.0132738680113107e-05, -0.0014481781981885433, -0.00014256415306590497, -8.844937838148326e-05, -5.090107151772827e-05, -0.013654167763888836, -0.09834488481283188, -0.04559987783432007, -0.13994735479354858, -8.67805938469246e-05, -0.06976292282342911, -7.629103492945433e-05, -3.6954811548639555e-06, -4.291525328881107e-06, -5.125986263010418e-06, -7.033323527139146e-06, -0.0011382774682715535, -0.021358830854296684, -0.0040582213550806046, -0.0036967527121305466, -0.05204988643527031, -4.088794958079234e-05, -0.3589654564857483, -0.000797311426140368, -0.0005336767644621432, -0.0005525015876628458, -0.015042208135128021, -0.002181770745664835, -0.006010078825056553, -0.0022142434027045965, -0.0034337628167122602, -2.169585604860913e-05, -1.9550132492440753e-05, -0.0005057962844148278, -0.001378896413370967, -0.7485136985778809, -0.1065066009759903, -0.0007154765771701932, -0.24086329340934753, -0.16410087049007416, -0.006534992251545191, -0.12602737545967102, -0.0032250082585960627, -0.07217775285243988, -0.25397995114326477, -8.689979586051777e-05, -0.013829953037202358, -2.932505594799295e-05, -7.629365427419543e-06, -2.9802276912960224e-06, -1.0967194612021558e-05, -8.344646857949556e-07, -0.9875970482826233, -1.1920928244535389e-07, -7.152555099310121e-07, -2.682172998902388e-05, -0.0003305127320345491, -0.08784165978431702], "finish_reason": "stop"}], "metrics": {"energy": 264.68768741607676, "energy_per_token": 1.316854166249138, "time": 11.151535, "time_per_token": 0.0554802736318408}}
{"outputs": [{"text": "file_list = []\n\n    # get all files in directory\n    for root, _, files in os.walk(directory):\n        for file in files:\n            file_list.append(os.path.join(root, file))\n\n    # hash files using SHA256\n    hasher = hashlib.sha256()\n    for file in file_list:\n        with open(file, 'rb') as f:\n            hasher.update(f.read())\n        filename = os.path.basename(file)\n        hashes[filename] = hasher.hexdigest()\n\n    # save hashes to json file\n    with open(\"hashes.json\", \"w\", encoding=\"utf-8\") as f:\n        json.dump(hashes, f, ensure_ascii=False, indent=2)\n        return \"hashes.json\"", "tokens": ["file", "_", "list", " =", " []", "\n", "\n", "    ", "#", " get", " all", " files", " in", " directory", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "list", ".", "append", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", "))", "\n", "\n", "    ", "#", " hash", " files", " using", " SH", "A", "2", "5", "6", "\n", "    ", "has", "her", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "has", "her", ".", "update", "(", "f", ".", "read", "())", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "has", "hes", "[", "filename", "]", " =", " has", "her", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " save", " has", "hes", " to", " json", " file", "\n", "    ", "with", " open", "(", "\"", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ",", " ensure", "_", "ascii", "=", "False", ",", " indent", "=", "2", ")", "\n", "        ", "return", " \"", "has", "hes", ".", "json", "\"", "\n", "\n", "def"], "logprobs": [-3.4506964683532715, -0.11697898060083389, -2.093209743499756, -0.1034853383898735, -0.5681923031806946, -0.02421540580689907, -1.6264441013336182, -0.0005237876321189106, -1.565880298614502, -3.165616512298584, -0.6502091288566589, -0.29926034808158875, -0.8330360651016235, -1.421657681465149, -0.7208824753761292, -0.002428798470646143, -0.12973451614379883, -1.035820722579956, -0.0031364792957901955, -1.6375876665115356, -0.06712902337312698, -0.10392336547374725, -0.0028216331265866756, -0.006775500252842903, -7.629365427419543e-06, -0.00010907054820563644, -0.001917668036185205, -0.01642422005534172, -0.03853074461221695, -0.007253384217619896, -0.0041025057435035706, -0.08623678237199783, -0.423103004693985, -0.20516599714756012, -0.006781775504350662, -0.0001429217227268964, -0.0018297373317182064, -0.0031105726957321167, -0.4167437255382538, -0.056148845702409744, -0.6186122298240662, -0.0026774294674396515, -0.002919580088928342, -0.041378214955329895, -0.3760323226451874, -0.0006295844214037061, -0.00018487652414478362, -0.004473322071135044, -0.0348251610994339, -0.0002728328399825841, -0.008537933230400085, -0.001210909802466631, -0.005633430555462837, -0.005817505531013012, -0.004817189183086157, -0.04527123272418976, -0.0018209319096058607, -0.38137903809547424, -2.0204176902770996, -0.9026409387588501, -2.837785005569458, -0.4225074350833893, -0.0007651500636711717, -0.07893722504377365, -0.00041547726141288877, -0.00022623363474849612, -0.4361983835697174, -0.0009484559996053576, -0.320409893989563, -3.0369532108306885, -0.005945615470409393, -0.0009632238652557135, -3.3378546504536644e-06, -1.7165990357170813e-05, -0.0014602008741348982, -0.0009066523634828627, -3.0040289857424796e-05, -4.768370445162873e-07, -0.0009893052047118545, -0.008706112392246723, -0.10078036040067673, -0.3214343786239624, -0.12483438104391098, -0.2427840232849121, -0.005081594921648502, -4.434487345861271e-05, -1.5616295058862306e-05, -0.00019572250312194228, -0.001178999780677259, -0.001843778183683753, -0.17932754755020142, -0.0017350156558677554, -0.00015662873920518905, -0.004450417123734951, -0.002153698354959488, -0.5843296647071838, -0.0027635025326162577, -0.0029762755148112774, -0.00038675934774801135, -0.04710887745022774, -0.036302097141742706, -0.0034720157273113728, -0.0013336582342162728, -0.5244895219802856, -0.00025054652360267937, -0.0004258441040292382, -0.00025245340657420456, -0.0013198483502492309, -0.002576129510998726, -5.507317473529838e-05, -6.603976362384856e-05, -0.005188926588743925, -0.0071830833330750465, -1.0141408443450928, -4.230536460876465, -0.3056909441947937, -0.3684487044811249, -0.00036161558819003403, -0.00012766500003635883, -0.004281995818018913, -0.1053808405995369, -3.576278118089249e-07, -0.0001070442158379592, -0.010383393615484238, -0.002720704535022378, -0.029254455119371414, -0.025366678833961487, -1.2218217849731445, -0.4379074275493622, -1.9845093488693237, -0.07475648075342178, -0.009823432192206383, -0.003412734717130661, -0.037579745054244995, -0.008713912218809128, -0.0007130940794013441, -0.03681767359375954, -1.9907753085135482e-05, -0.0014100857079029083, -0.0011460172245278955, -0.027798136696219444, -0.1544097363948822, -0.011288229376077652, -0.24055565893650055, -0.5231497287750244, -0.17218679189682007, -0.010760379955172539, -0.5534918308258057, -2.435544490814209, -0.1440383940935135, -0.061832476407289505, -0.0016544476384297013, -0.8060832619667053, -0.022974733263254166, -0.30922600626945496, -0.9779101014137268, -0.10447514802217484, -0.00014232576359063387, -0.004101080819964409, -0.0003979606262873858, -0.00021705655672121793, -0.0004439560289029032, -0.25599008798599243, -0.010200629942119122, -0.009209769777953625, -2.9817545413970947, -0.00945672020316124, -0.35139307379722595, -0.0013631823239848018, -0.04442332684993744, -0.11734244972467422, -0.0009579836623743176, -0.0010181248653680086, -0.00252404878847301, -0.0004932855372317135, -0.29820704460144043, -0.019789285957813263, -0.0012313887709751725, -0.0022643182892352343, -0.0424656942486763, -0.003061966272071004, -0.006636128760874271, -0.004583566915243864, -0.006903368514031172, -0.0006018257699906826, -0.0011025547282770276, -0.002415598137304187, -0.19220766425132751, -0.576289713382721, 0.0, -6.365573790390044e-05, -0.0005333193112164736, -0.00539964297786355, -0.5098347067832947, -0.07245221734046936, -0.0012206730898469687, -1.9737200736999512, -0.09183213859796524, -0.01054005604237318, -2.8553905487060547, -0.49517151713371277, -1.9507020711898804, -0.05093347281217575, -0.0002037079248111695, -0.006749095860868692, -0.000432278640801087, -0.00415913388133049, -0.3135826587677002, -0.05770425125956535, -1.3468494415283203], "finish_reason": "stop"}], "metrics": {"energy": 274.4914176969526, "energy_per_token": 1.3071019890331077, "time": 11.991457, "time_per_token": 0.057102176190476195}}
{"outputs": [{"text": "directory_path = Path(directory)\n\n    # Ensure the given directory path exists and is a valid directory\n    if not directory_path.is_dir():\n        raise ValueError(f\"Invalid directory: {directory}\")\n\n    # Create a list to store hashed files\n    hashed_files = []\n\n    # Iterate over all files and subdirectories\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            # Calculate the file path relative to the directory\n            file_path = Path(root) / file\n\n            # Skip the file if it is a directory\n            if file_path.is_dir():\n                continue\n\n            # Calculate the SHA256 hash of the file\n            with open(file_path, \"rb\") as f:\n                hash_ = hashlib.sha256(f.read())\n                hashed_files.append((hash_.hexdigest(), str(file_path)))\n\n    # Save the hashed files as JSON\n    with open(directory_path / \"hashes.json\", \"w\"", "tokens": ["directory", "_", "path", " =", " Path", "(", "directory", ")", "\n", "\n", "    ", "#", " Ensure", " the", " given", " directory", " path", " exists", " and", " is", " a", " valid", " directory", "\n", "    ", "if", " not", " directory", "_", "path", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Invalid", " directory", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Create", " a", " list", " to", " store", " has", "hed", " files", "\n", "    ", "h", "ashed", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " and", " sub", "direct", "ories", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Calculate", " the", " file", " path", " relative", " to", " the", " directory", "\n", "            ", "file", "_", "path", " =", " Path", "(", "root", ")", " /", " file", "\n", "\n", "            ", "#", " Skip", " the", " file", " if", " it", " is", " a", " directory", "\n", "            ", "if", " file", "_", "path", ".", "is", "_", "dir", "():", "\n", "                ", "continue", "\n", "\n", "            ", "#", " Calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "hash", "_", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", "\n", "                ", "h", "ashed", "_", "files", ".", "append", "((", "hash", "_", ".", "hex", "dig", "est", "()", ",", " str", "(", "file", "_", "path", ")))", "\n", "\n", "    ", "#", " Save", " the", " has", "hed", " files", " as", " JSON", "\n", "    ", "with", " open", "(", "directory", "_", "path", " /", " \"", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\""], "logprobs": [-1.7949670553207397, -1.5205247402191162, -0.05714540556073189, -0.025235570967197418, -0.029802488163113594, -0.0032894094474613667, -0.006692258641123772, -0.0011094611836597323, -0.10697341710329056, -1.3837471008300781, -0.00025340684805996716, -1.5225934982299805, -3.9699172973632812, -0.43207037448883057, -1.9309771060943604, -0.06950028985738754, -2.4412145614624023, -0.32978302240371704, -0.4145684838294983, -0.05010418966412544, -0.08973269909620285, -1.2375853061676025, -0.15834732353687286, -0.23544739186763763, -0.0005390383303165436, -0.041755929589271545, -0.05147213488817215, -0.14542271196842194, -0.00032264748006127775, -4.291525328881107e-06, -0.0003805628512054682, -1.1106878519058228, -3.814689989667386e-06, -0.003438514657318592, -0.008219108916819096, -0.0013458014000207186, -0.0004629017203114927, -0.2846306264400482, -0.5509310960769653, -7.629365427419543e-06, -0.007873570546507835, -0.26202479004859924, -0.01473461277782917, -1.7794276475906372, -0.04928726702928543, -1.0666249990463257, -0.11661940813064575, -0.00743089010939002, -0.8845009803771973, -8.49926145747304e-05, -0.0018101035384461284, -0.01279890350997448, -0.0005621521850116551, -0.5380956530570984, -0.8893361687660217, -0.49876850843429565, -1.4418493509292603, -0.31104910373687744, -0.26802438497543335, -1.7725155353546143, -2.06626558303833, -0.6462928056716919, -0.439536988735199, -0.0009153467253781855, -1.5313750505447388, -0.012143843807280064, -0.007101887371391058, -0.040611591190099716, -0.15107819437980652, -0.05527526140213013, -0.0006479309522546828, -0.038736846297979355, -0.00014518637908622622, -0.1697937250137329, -1.1080697774887085, -0.0035501806996762753, -0.7078288197517395, -0.5931519269943237, -0.08703238517045975, -1.321211338043213, -0.5591495633125305, -0.0075403363443911076, -6.544376083184034e-05, -1.3037313222885132, -0.0004654039512388408, -0.015699010342359543, -2.287112236022949, -0.005957228597253561, -0.7790537476539612, -0.00027998341829515994, -0.0004103533865418285, -0.03448639065027237, -0.0005665604257956147, -0.0022078203037381172, -1.311301275563892e-06, -0.0001389883691444993, -0.00011967896716669202, -0.0065011195838451385, -0.5419236421585083, -0.004391787573695183, -0.010705186054110527, -0.8209014534950256, -0.3275374472141266, -0.26798298954963684, -0.002756488509476185, -0.000226472009671852, -0.0035732248798012733, -0.005979625042527914, -0.9718509912490845, -0.6845455169677734, -0.33123862743377686, -3.096379280090332, -0.9822518229484558, -1.5975608825683594, -0.001191263902001083, -0.015903886407613754, -1.5449234247207642, -0.26858460903167725, -0.00015948931104503572, -0.279092013835907, -0.018140362575650215, -0.006163043901324272, -0.0039595551788806915, -1.4882228374481201, -0.001910886145196855, -0.05903981998562813, -0.7692005634307861, -0.02790340594947338, -0.04856904596090317, -0.004971286281943321, -0.47428369522094727, -0.0005085367010906339, -0.036033861339092255, -2.6003503799438477, -2.382932662963867, -0.5858238935470581, -0.015489866957068443, -0.11885989457368851, -0.6732966899871826, -0.5258752107620239, -0.4366571307182312, -0.39588212966918945, -6.842378934379667e-05, -0.006889753974974155, -0.4109453856945038, -0.0261221956461668, -2.276871418871451e-05, -0.0008735416340641677, -0.005757415201514959, -1.1920928244535389e-07, -0.007866237312555313, -0.0030310661531984806, -0.0025503274518996477, -6.592056161025539e-05, -0.00790798757225275, -0.0006908176001161337, -0.012664605863392353, -0.00020215852418914437, -0.03662301227450371, -0.4260583221912384, -0.12732717394828796, -0.2788669168949127, -0.0003104920033365488, -0.07940144836902618, -0.00010859376925509423, -4.410646579344757e-05, -0.03355574607849121, -0.4136989116668701, -0.006191478110849857, -0.0029396675527095795, -0.17187876999378204, -0.0002543602604418993, -0.9111350774765015, -0.3997282385826111, -0.0001829695247579366, -0.030850261449813843, -0.005481688305735588, -1.311301275563892e-06, -0.002671484835445881, -0.34213781356811523, -0.0007566926069557667, -7.748303323751315e-05, -0.00023147765023168176, -1.2755313036905136e-05, -0.22220955789089203, -0.02504410780966282, -0.0017891604220494628, -0.00033301531220786273, -0.9175215363502502, -0.07403773069381714, -2.658629894256592, -0.003153472673147917, -1.2397689715726301e-05, -7.510157047363464e-06, -0.0010008569806814194, -0.0018010600470006466, -4.768360213347478e-06, -2.3841855067985307e-07, -0.4243606925010681, -0.0029122107662260532, -0.00010096516780322418, -2.9801878554280847e-05, -0.0012440093560144305, -2.0073554515838623, -1.2822065353393555, -0.5579085946083069, -0.0058691781014204025, -0.004467862658202648, -0.22403673827648163, -0.0009385710000060499, -0.0008808070560917258, -1.1900476217269897, -1.5651915073394775, -0.0033116282429546118, -0.11033941805362701, -0.045000720769166946, -3.1470757676288486e-05, -0.0022526620887219906, -0.0022367238998413086, -0.0012175773736089468, -1.4670997858047485, -0.00041333239641971886, -0.0067908926866948605, -0.00445563904941082, -2.264974000354414e-06, -0.19301097095012665, -0.006303429137915373, -0.01690501719713211, -0.01866912841796875, -0.08170438557863235, -1.1364597082138062, -0.08664275705814362, -0.14033716917037964, -0.14878997206687927, -0.06283369660377502, -1.8557780981063843, -1.1346675157546997, -0.6564998030662537, -0.001057184999808669, -0.7374078631401062, -0.007971970364451408, -0.010848944075405598, -0.19485919177532196, -0.02985062077641487, -2.145764938177308e-06, -0.022495213896036148, -0.1217210441827774, -0.005111364647746086, -8.940656698541716e-06, -0.0014766276581212878, -0.00016223068814724684, -2.4676019165781327e-05, -0.00018523407925385982, -0.00892246887087822, -0.004660695791244507, -0.008483679965138435], "finish_reason": "length"}], "metrics": {"energy": 339.9283442935942, "energy_per_token": 1.3278450948968523, "time": 14.511669, "time_per_token": 0.05668620703125}}
