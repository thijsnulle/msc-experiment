{"outputs": [{"text": "hashes = {}\n\n    for root, _, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                hashes[file_path] = hashlib.sha256(f.read()).hexdigest()\n\n    json_filename = 'hashes.json'\n    json_file = os.path.join(directory, json_filename)\n    with open(json_file, 'w') as f:\n        json.dump(hashes, f)\n\n    return json_file", "tokens": ["has", "hes", " =", " {}", "\n", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "filename", " =", " '", "has", "hes", ".", "json", "'", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " json", "_", "filename", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "def"], "logprobs": [-0.9853741526603699, -0.0009396428358741105, -0.1858924925327301, -0.042514365166425705, -0.11939334124326706, -1.4518786668777466, -0.0004985281848348677, -0.2823540270328522, -0.4308059513568878, -0.0018273574532940984, -1.4604264497756958, -0.017838988453149796, -0.05256735906004906, -0.0007234578370116651, -0.00032872517476789653, -1.597391747054644e-05, -2.3364747903542593e-05, -0.0001512651506345719, -0.0035062285605818033, -0.0041368152014911175, -0.00922181736677885, -0.003492210991680622, -0.029469769448041916, -0.1704878807067871, -0.07979292422533035, -0.0005947966128587723, -4.0411134250462055e-05, -0.00035386974923312664, -0.0006381620769388974, -0.28164440393447876, -0.0530756376683712, -0.008823571726679802, -0.00016640232934150845, -0.06508816033601761, -1.1920928244535389e-07, -3.397406908334233e-05, -5.960446742392378e-06, -0.006013040896505117, -1.0132738680113107e-05, -0.000605638197157532, -0.00010275312524754554, -0.00017927470616996288, -0.0001481661747675389, -0.0014613912208005786, -0.07456176728010178, -0.4148862957954407, -0.0003225283289793879, -4.2914423829643056e-05, -0.0009006972541101277, -0.00012909532233607024, -2.3841855067985307e-07, -0.00039104922325350344, -0.6461966633796692, -0.001166140311397612, -0.00017152745567727834, -2.3007127310847864e-05, -0.07210543751716614, -0.010278741829097271, -0.0014192519010975957, -0.0004797023138962686, -2.0476083755493164, -0.30521532893180847, -0.002899611135944724, -0.01525085885077715, -0.042731981724500656, -3.576214658096433e-05, -0.03204541653394699, -2.372236667724792e-05, -0.002110398607328534, -0.00013314791431184858, -5.245195097813848e-06, -0.0026416426990181208, -0.0006255338666960597, -4.529942543740617e-06, -4.172316494077677e-06, -0.00040844682371243834, -0.0007520469953306019, -1.5258672647178173e-05, -2.145764938177308e-06, -8.5588610090781e-05, -0.0007370378007180989, -0.000779205875005573, -0.00011252723925281316, 0.0, -1.8000440832111053e-05, -0.0010969580616801977, -0.01500650867819786, -0.001387943746522069, -0.19226256012916565, -0.0018705505644902587, -2.8142571449279785, -0.000493762141559273, -0.7448371648788452, -0.0022959557827562094, -2.145764938177308e-06, -0.00026794656878337264, -9.48860906646587e-05, -1.3232143828645349e-05, -0.003931057173758745, -0.027929604053497314, -0.2134384661912918, -0.0069727422669529915, -0.5568221211433411, -0.6420876383781433, -0.3524690270423889, -9.179073458653875e-06, -1.6569954823353328e-05, -4.0531076592742465e-06, -0.21242566406726837, -0.00037126801908016205, -0.008540534414350986, -0.00023993951617740095, -0.0009731086320243776, -2.861018856492592e-06, -5.960462772236497e-07, -5.1377883210079744e-05, -0.0011093420907855034, -0.5611481666564941, -0.031130176037549973, -0.0006020640721544623, -0.0006731866160407662, -0.0005129451747052372, -4.529942543740617e-06, -1.3470558769768104e-05, -0.00013982271775603294, -0.012481669895350933, -0.0011934071080759168, -0.013214744627475739, -1.811964830267243e-05, -0.05882931873202324, -0.0036942586302757263, -0.00020883286197204143, -0.0005634627304971218, -0.004879827611148357, -0.00028546550311148167, -5.602820692729438e-06, -0.0014171091606840491, -0.0004239375703036785, 0.0, -5.400034933700226e-05, -3.755022044060752e-05, -0.2914380133152008, -0.0002540027489885688, -0.04452070593833923, -0.0012872274965047836, -0.043492186814546585, -0.6924785375595093, -0.0013555632904171944, -0.0014812698354944587, -0.03740441054105759, -0.008631067350506783, -0.5521209239959717], "finish_reason": "stop"}], "metrics": {"energy": 621.7079983491897, "energy_per_token": 4.090184199665721, "time": 16.668137, "time_per_token": 0.10965879605263158}}
{"outputs": [{"text": "hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            with open(os.path.join(root, file), 'rb') as f:\n                hash = hashlib.sha256(f.read()).hexdigest()\n                hash_dict[os.path.join(root, file)] = hash\n\n    json_path = Path(directory) / 'hashes.json'\n    with open(json_path, 'w') as f:\n        json.dump(hash_dict, f)\n\n    return json_path", "tokens": ["hash", "_", "dict", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "hash", "_", "dict", "[", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")]", " =", " hash", "\n", "\n", "    ", "json", "_", "path", " =", " Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ")", "\n", "\n", "    ", "return", " json", "_", "path", "\n", "\n", "def"], "logprobs": [-2.451821804046631, -0.04352083429694176, -0.22231684625148773, -0.01756797730922699, -0.029195409268140793, -0.05715294927358627, -0.2789844274520874, -0.18085862696170807, -0.4131407141685486, -0.003331707790493965, -0.26318156719207764, -0.0001399419124936685, -7.033100700937212e-05, -0.0051009273156523705, -0.00047100416850298643, -0.0005641775787808001, -2.038458114839159e-05, -3.683499380713329e-05, -0.00038020533975213766, -0.0034633437171578407, -0.006031407508999109, -0.011432021856307983, -0.0035532689653337, -0.02284051477909088, -0.15873543918132782, -0.0410996675491333, -0.0004065402317792177, -0.00033444532891735435, -0.00047159992391243577, -0.0010469438275322318, -2.433467149734497, -0.000805053801741451, -0.00046456989366561174, -0.029017440974712372, -9.536738616588991e-07, -3.480850500636734e-05, -5.960462772236497e-07, -0.00013183678674977273, -2.47952248173533e-05, -0.0027690897695720196, -4.827859811484814e-05, -0.0018017739057540894, -0.003134459024295211, -5.602679812000133e-05, -0.3970383107662201, -0.006268127355724573, -0.0004175029753241688, -3.099393507000059e-05, -0.06604918837547302, -0.010809793137013912, -0.001485078944824636, -0.0005082983989268541, -0.8929698467254639, -0.6148114204406738, -0.0005116345710121095, -2.4437606043647975e-05, -3.2186455882765586e-06, -0.003972972277551889, -0.0008690156391821802, -1.1920858014491387e-05, -7.390948667307384e-06, -0.33838462829589844, -0.00032908268622122705, -1.2993727978027891e-05, -1.4305104514278355e-06, -0.00011884459672728553, -0.021236183121800423, -0.000536655425094068, -4.756337511935271e-05, 0.0, -2.90866428258596e-05, -0.003298677271232009, -0.2028588205575943, -0.16731879115104675, -0.0001003691868390888, -0.000998594332486391, -0.016735751181840897, -0.7358528971672058, -1.728519782773219e-05, -1.597391747054644e-05, -4.529942543740617e-06, -0.04594048112630844, -0.0008903353591449559, -0.008591829799115658, -0.010219037532806396, -0.004744343925267458, -0.10102423280477524, -0.0008374521275982261, -0.004006693139672279, -0.001658851164393127, -1.0914466381072998, -0.002975800074636936, -0.23886153101921082, -0.0037263259291648865, -1.8947590589523315, -0.0016037471359595656, -0.7399951219558716, -0.033541105687618256, -0.05501093715429306, -0.4321812689304352, -0.07132983207702637, -0.1286323070526123, -0.005387312266975641, -7.510157047363464e-06, -0.0010553987231105566, -0.00012706902634818107, -3.111314072157256e-05, -0.0031122365035116673, -0.06690450012683868, -0.06555204838514328, -0.16073989868164062, -0.0017243054462596774, -0.013192509301006794, -3.8980677345534787e-05, -3.40932747349143e-05, -0.014170031063258648, -0.025644764304161072, -0.0023830130230635405, -0.018521690741181374, -3.862306402879767e-05, -0.3387194275856018, -0.01259998232126236, -0.00036542891757562757, -0.0011556621175259352, -0.005233872216194868, -0.00030882356804795563, -7.152531907195225e-06, -0.0011312521528452635, -0.00028427375946193933, -2.622600959512056e-06, -2.145764938177308e-06, -0.00010275312524754554, -0.0001399419124936685, -0.22840531170368195, -0.0003034608089365065, -0.08624914288520813, -0.001716689090244472, -0.043714381754398346, -0.9653340578079224, -6.222531374078244e-05, -5.125868119648658e-05, -2.5770325660705566, -0.022390305995941162, -0.9317219257354736], "finish_reason": "stop"}], "metrics": {"energy": 516.422505874634, "energy_per_token": 3.5862674019071807, "time": 12.196795, "time_per_token": 0.08469996527777778}}
{"outputs": [{"text": "file_hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as file_obj:\n                file_hash = hashlib.sha256()\n                file_hash.update(file_obj.read())\n            file_hashes[file] = file_hash.hexdigest()\n\n    json_file_path = os.path.join(directory, 'hashes.json')\n    with open(json_file_path, 'w') as json_file:\n        json.dump(file_hashes, json_file)\n\n    return json_file_path", "tokens": ["file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", "_", "obj", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "file", "_", "hash", ".", "update", "(", "file", "_", "obj", ".", "read", "())", "\n", "            ", "file", "_", "has", "hes", "[", "file", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "    ", "with", " open", "(", "json", "_", "file", "_", "path", ",", " '", "w", "')", " as", " json", "_", "file", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " json", "_", "file", ")", "\n", "\n", "    ", "return", " json", "_", "file", "_", "path", "\n", "\n", "if"], "logprobs": [-2.964351177215576, -0.045262690633535385, -0.32151180505752563, -0.00026842328952625394, -0.010258801281452179, -0.03656819462776184, -0.057664863765239716, -0.4458991587162018, -0.19056640565395355, -0.3845301866531372, -0.003123288508504629, -0.29682913422584534, -5.5549986427649856e-05, -5.769562994828448e-05, -0.003078485606238246, -0.0003457663697190583, -0.00048303857329301536, -1.6689160474925302e-05, -4.017272294731811e-05, -0.0002588890492916107, -0.004290898330509663, -0.005833979696035385, -0.0057972390204668045, -0.0032604176085442305, -0.028379296883940697, -0.16507171094417572, -0.031513746827840805, -0.00040797016117721796, -0.00021669900161214173, -0.0004605186404660344, -0.0007650309125892818, -0.15462495386600494, -0.04525425657629967, -0.003930107690393925, -0.0003359945258125663, -0.06621109694242477, -2.3841855067985307e-07, -4.1483970562694594e-05, -6.198863957251888e-06, -0.001755721983499825, -1.8596476365928538e-05, -0.0007072569569572806, -6.782778655178845e-05, -0.00041154498467221856, -9.083335316972807e-05, -0.0019342063460499048, -0.0028709645848721266, -0.37513962388038635, -0.00035661060246638954, -5.2927523938706145e-05, -0.0012190061388537288, -0.00016139635408762842, -9.536738616588991e-07, -0.0004120216181036085, -0.496928334236145, -0.0014721043407917023, -0.00024101213784888387, -4.637133679352701e-05, -2.869629383087158, -0.7190863490104675, -0.3077045977115631, -0.000200609109015204, -0.001625646254979074, -0.0005206898204050958, -0.24967418611049652, -3.7431014789035544e-05, -0.22771529853343964, -0.0016471878625452518, -0.0005561950383707881, -1.6331539882230572e-05, -2.145764938177308e-06, -0.0008839037618599832, -0.0007693191873840988, -4.6491513785440475e-06, -5.8412379075889476e-06, -0.7562306523323059, -0.0035843905061483383, -0.00028224775451235473, -0.17999431490898132, -7.748573807475623e-06, -0.14208318293094635, -0.0004936429904773831, -4.529942543740617e-06, -0.00017593742813915014, -0.0009457168052904308, -0.00019536493346095085, -7.199982064776123e-05, -2.1934269170742482e-05, -2.264974000354414e-06, -0.0009672730811871588, -0.0006009918288327754, -2.909796953201294, -0.1114666536450386, -0.00013672371278516948, -0.0491761676967144, -8.344646857949556e-07, -0.0028899831231683493, -0.04948379099369049, -2.549578905105591, -8.713819261174649e-05, -0.008512284606695175, -4.172316494077677e-06, -1.2755313036905136e-05, -0.001946580014191568, -0.0010091932490468025, -4.9470632802695036e-05, 0.0, -6.651657167822123e-05, -0.002570184413343668, -0.8292844891548157, -0.002412862842902541, -0.20728813111782074, -0.0010714748641476035, -0.40714821219444275, -2.0375030040740967, -0.16410258412361145, -0.000619696278590709, -0.2560426890850067, -1.8715683836489916e-05, -5.3165931603871286e-05, -4.529942543740617e-06, -0.022691944614052773, -0.0005270045949146152, -0.014646157622337341, -0.0004724340105894953, -0.056639645248651505, -0.007053711451590061, -4.6491513785440475e-06, -0.00039843725971877575, -0.0001532914029667154, -2.1934269170742482e-05, -0.001057423185557127, -0.023219356313347816, -0.03926801681518555, -0.0012173393042758107, -0.0007951673469506204, -0.0004801789182238281, -1.8954096958623268e-05, -4.768370445162873e-07, -5.936446541454643e-05, -1.6689286894688848e-06, -0.0004109491710551083, -0.005883755162358284, -0.0006096888100728393, -0.007962745614349842, -2.5033637939486653e-05, -0.02598015032708645, -0.00039915222441777587, -0.04652223363518715, -0.09853113442659378, -0.00022313489171210676, -0.001122202374972403, -0.0007746794726699591, -0.008878988213837147, -5.006777428206988e-06, -0.0005289109540171921, -0.0005293875001370907, -2.50339189733495e-06, -2.0861407392658293e-05, 0.0, -9.142934868577868e-05, -0.00012754580529872328, -1.9430925021879375e-05, -1.8715683836489916e-05, -0.22274130582809448, -0.00035553809721022844, -0.11037518084049225, -0.0025100174825638533, -0.08100820332765579, -0.8998323082923889, -0.005738806910812855, -3.71926071238704e-05, -0.0032417625188827515, -4.1483970562694594e-05, -0.02982354536652565, -0.012116520665585995, -1.5442132949829102], "finish_reason": "stop"}], "metrics": {"energy": 602.4348396949764, "energy_per_token": 3.4035866649433695, "time": 15.139011, "time_per_token": 0.08553113559322034}}
{"outputs": [{"text": "hashes = {}\n\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            file_path = os.path.join(dirpath, filename)\n\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.sha256(f.read()).hexdigest()\n                hashes[file_path] = file_hash\n\n    json_path = Path(directory) / 'hashes.json'\n\n    with open(json_path, 'w') as f:\n        json.dump(hashes, f, indent=4)\n\n    return json_path.resolve().absolute()", "tokens": ["has", "hes", " =", " {}", "\n", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "json", "_", "path", " =", " Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", "\n", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " json", "_", "path", ".", "resolve", "()", ".", "absolute", "()", "\n", "\n", "if"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -1.3216276168823242, -0.000545472139492631, -0.2395806759595871, -2.3027381896972656, -0.033068932592868805, -0.0005466635921038687, -0.2676049470901489, -0.00019000156316906214, -1.1205610462639015e-05, -0.002165474696084857, -1.1920928244535389e-07, -2.9205850296420977e-05, -0.00018952481332235038, -0.0007794441189616919, -6.556489552167477e-06, -3.4450891689630225e-05, -0.00031144535751082003, -0.002473630243912339, -0.0026314177084714174, -0.0077574183233082294, -0.005641965661197901, -0.04403635114431381, -0.14985531568527222, -1.0847986231965479e-05, -0.00010644822759786621, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.00043084874050691724, -0.0005609607324004173, -0.001076952670700848, -0.13970978558063507, -0.4318412244319916, -0.007029918488115072, -0.00019536493346095085, -0.059948068112134933, -2.0265558760002023e-06, -2.5748875486897305e-05, -3.576278118089249e-07, -0.0035818961914628744, -8.702239938429557e-06, -0.0029118540696799755, -4.768360213347478e-06, -9.142934868577868e-05, -0.00017498392844572663, -2.1219027985353023e-05, -0.000863894063513726, -2.2156317234039307, -0.0008668717346154153, -0.47301778197288513, -0.0005042473785579205, -4.5060096454108134e-05, -0.0008577005355618894, -7.748573807475623e-06, 0.0, -0.0004648081958293915, -0.6512317657470703, -0.0036828566808253527, -0.0002618685248307884, -2.7179348762729205e-05, -0.6221188902854919, -0.007060813717544079, -0.0016707521863281727, -0.0005221195751801133, -0.38044509291648865, -0.0006242233794182539, -0.19630134105682373, -0.0004553949984256178, -0.00037269797758199275, -1.3947389561508317e-05, -1.4305104514278355e-06, -0.0016614693449810147, -0.0006848612101748586, -5.006777428206988e-06, -8.940656698541716e-06, -1.0767947435379028, -0.0004020121123176068, -2.6464111215318553e-05, -1.0728830375228426e-06, -6.90197994117625e-05, -0.032435331493616104, -0.000856747676152736, -5.8530047681415454e-05, 0.0, -1.5616295058862306e-05, -0.0017360866768285632, -0.4829450249671936, -0.1351805478334427, -2.7418097943154862e-06, -0.0026812339201569557, -0.10300453007221222, -8.308542601298541e-05, -0.016506070271134377, -0.014757753349840641, -6.198863957251888e-06, -0.007680173497647047, -2.145764938177308e-06, -5.006777428206988e-06, -0.0008131535141728818, -0.021793991327285767, -0.010475176386535168, -0.1962067037820816, -0.0019112430745735765, -1.435364007949829, -0.001157686347141862, -1.0657954216003418, -0.019912462681531906, -0.0366743840277195, -0.5436756014823914, -0.035945892333984375, -0.154354989528656, -0.004217539913952351, -2.861018856492592e-06, -0.0004632591735571623, -7.652943895664066e-05, -2.1576648578047752e-05, -0.004200208466500044, -0.8978076577186584, -0.0002321927313460037, -0.009751777164638042, -0.05280202627182007, -0.0015907741617411375, -0.020184706896543503, -3.5523738915799186e-05, -3.933898824470816e-06, -0.010068225674331188, -0.018060168251395226, -0.0016575419576838613, -0.017648562788963318, -1.6569954823353328e-05, -0.432767391204834, -0.0036912893410772085, -0.0002826052950695157, -0.0008363801171071827, -0.002837562235072255, -0.00035470392322167754, -5.125986263010418e-06, -0.0007540719816461205, -0.00039104922325350344, 0.0, -5.447716102935374e-05, -6.711257447022945e-05, -1.3595657348632812, -0.013278035447001457, -0.0012481764424592257, -0.14502228796482086, -0.020505813881754875, -0.0006873629172332585, -0.008577173575758934, -0.002715235808864236, -0.05131473392248154, -1.0124824047088623, -0.0001137191939051263, -4.339123915997334e-05, -0.098426453769207, -0.7674410939216614, -0.00048792376765049994, -0.643551230430603, -0.8398560881614685, -0.0002294515579706058, -0.21900971233844757, -0.01391142699867487, -1.1476707458496094], "finish_reason": "stop"}], "metrics": {"energy": 556.1746172161099, "energy_per_token": 3.330386929437784, "time": 14.084772, "time_per_token": 0.08433995209580838}}
{"outputs": [{"text": "hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                file_hash = hashlib.sha256()\n                while chunk := f.read(8192):\n                    file_hash.update(chunk)\n            hashes[file_path] = file_hash.hexdigest()\n    json_file = str(Path(directory) / \"hashes.json\")\n    with open(json_file, \"w\") as f:\n        json.dump(hashes, f)\n    return json_file", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "while", " chunk", " :=", " f", ".", "read", "(", "8", "1", "9", "2", "):", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "    ", "json", "_", "file", " =", " str", "(", "Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "if"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -0.5124924778938293, -0.0014099667314440012, -0.30408358573913574, -0.00010609064338495955, -5.602679812000133e-05, -0.004596501123160124, -0.00040058218291960657, -0.0005068686441518366, -1.823885577323381e-05, -4.362964682513848e-05, -0.0002932118659373373, -0.004604214336723089, -0.006029867101460695, -0.005383636336773634, -0.003004919271916151, -0.020922431722283363, -0.196303591132164, -0.046081993728876114, -0.0005650115781463683, -0.00019071667338721454, -0.0005478549865074456, -0.0009255892946384847, -0.2963700294494629, -0.0500207357108593, -0.006147641688585281, -0.00018463814922142774, -0.047389961779117584, -2.3841855067985307e-07, -4.2199197196168825e-05, -6.198863957251888e-06, -0.002151795197278261, -1.8358061424805783e-05, -0.0010207447921857238, -0.00017045476124621928, -0.00032217081752605736, -0.00021705655672121793, -0.002317720791324973, -0.003888665698468685, -0.2549647390842438, -0.0003325386205688119, -4.029192859889008e-05, -0.0008717550663277507, -0.00011336160969221964, -3.576278118089249e-07, -0.0005465444410219789, -0.948051929473877, -0.0016747985500842333, -8.034383063204587e-05, -0.00012444675667211413, -1.3828182090946939e-05, -0.03894210234284401, -0.009902282617986202, -0.0013953244779258966, -0.0002454218047205359, -0.8452567458152771, -0.0011618537828326225, -0.07239977270364761, -0.00048565989709459245, -0.00041762212640605867, -1.5139465176616795e-05, -1.4305104514278355e-06, -0.0019243309507146478, -0.0005594118847511709, -4.410734163684538e-06, -7.152531907195225e-06, -1.1305080652236938, -0.00303082843311131, -0.0003003622987307608, -0.32493603229522705, -0.18916389346122742, -4.5298504119273275e-05, -0.0001408954558428377, -6.9141146923357155e-06, -1.6689286894688848e-06, -0.004956933204084635, -0.80764240026474, -0.0023098711390048265, -0.00032145579461939633, -0.00037722624256275594, -0.0010176486102864146, -0.03719252347946167, -3.635817120084539e-05, -0.0004140473320148885, -0.000595034915022552, -3.3378546504536644e-06, -3.4570634852570947e-06, -2.992108420585282e-05, -1.311301275563892e-06, -3.611976353568025e-05, -6.735097849741578e-05, -0.0002829628065228462, -0.00014530557382386178, -0.5129300951957703, -0.22152270376682281, -1.7881233361549675e-05, -0.001068736077286303, -0.05513131991028786, -0.11134668439626694, -0.0016052944120019674, -0.03573967516422272, -7.748573807475623e-06, -0.0025254758074879646, -3.814689989667386e-06, -5.960462772236497e-07, -0.0015417367685586214, -0.0010525407269597054, -4.589452510117553e-05, 0.0, -2.7417760065873154e-05, -0.0009124883217737079, -0.45789971947669983, -0.3080594539642334, -0.004065701272338629, -0.3131411075592041, -0.04772938787937164, -3.0382027626037598, -0.010029633529484272, -0.005989104975014925, -0.005023476667702198, -0.020940527319908142, -0.2829503118991852, -0.05521716922521591, -0.1199352815747261, -0.004269294906407595, -7.629365427419543e-06, -0.0006559127941727638, -0.00012134769349358976, -1.2874520507466514e-05, -0.00013529339048545808, -0.008597975596785545, -0.0013917532050982118, -0.00615380285307765, -0.0005791893927380443, -0.00020418466010596603, -0.0038371284026652575, -4.3987260141875595e-05, -8.344646857949556e-07, -0.00023445718397852033, -0.020395323634147644, -0.0007300095749087632, -0.002388721564784646, -0.007614634465426207, -1.7046782886609435e-05, -0.022563748061656952, -0.0018467529444023967, -0.00039426659350283444, -0.0006089740199968219, -0.0034063193015754223, -0.00015341058315243572, -5.125986263010418e-06, -0.0007203606073744595, -0.0016215997748076916, -1.1920928244535389e-07, -9.440929716220126e-05, -4.4225667807040736e-05, -0.2099272757768631, -0.0002517383254598826, -0.013010963797569275, -0.015437163412570953, -0.01865953393280506, -0.00040928093949332833, -3.4570634852570947e-06, -0.10757811367511749, -0.017640715464949608, -1.4749298095703125], "finish_reason": "stop"}], "metrics": {"energy": 627.8301959180834, "energy_per_token": 3.6501755576632755, "time": 15.000092, "time_per_token": 0.08720983720930232}}
{"outputs": [{"text": "# Initialize an empty dictionary to store file hashes\n    hashes = {}\n\n    # Iterate over files in the directory and its subdirectories\n    for path, dirs, files in os.walk(directory):\n        for file in files:\n            # Create an absolute path to the file\n            file_path = os.path.join(path, file)\n\n            # Create an absolute path to the directory\n            abs_directory = Path(directory).absolute()\n\n            # Create an absolute path to the hashes.json file\n            json_path = os.path.join(abs_directory, 'hashes.json')\n\n            # Calculate hash for the file\n            hash = hashlib.sha256()\n            with open(file_path, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b''):\n                    hash.update(chunk)\n\n            # Store file path and hash in the dictionary\n            hashes[file_path] = hash.hexdigest()\n\n    # Write file hashes to the hashes.json file\n    with open", "tokens": ["#", " Initialize", " an", " empty", " dictionary", " to", " store", " file", " has", "hes", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " files", " in", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Create", " an", " absolute", " path", " to", " the", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " file", ")", "\n", "\n", "            ", "#", " Create", " an", " absolute", " path", " to", " the", " directory", "\n", "            ", "abs", "_", "directory", " =", " Path", "(", "directory", ")", ".", "absolute", "()", "\n", "\n", "            ", "#", " Create", " an", " absolute", " path", " to", " the", " has", "hes", ".", "json", " file", "\n", "            ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "abs", "_", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "\n", "            ", "#", " Calculate", " hash", " for", " the", " file", "\n", "            ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "#", " Store", " file", " path", " and", " hash", " in", " the", " dictionary", "\n", "            ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " Write", " file", " has", "hes", " to", " the", " has", "hes", ".", "json", " file", "\n", "    ", "with", " open"], "logprobs": [-1.5498919486999512, -1.2209877967834473, -0.7730445265769958, -0.0017401328077539802, -0.035386256873607635, -0.10096561908721924, -0.11586250364780426, -1.2670176029205322, -0.29272720217704773, -2.634490556374658e-05, -0.0588030181825161, -0.0005616756388917565, -0.9090765714645386, -0.0002914242504630238, -0.38659197092056274, -0.012935653328895569, -0.001580062322318554, -0.10632762312889099, -0.000324673397699371, -0.004295883700251579, -0.8862636089324951, -0.0014554394874721766, -0.3696550726890564, -1.5505684614181519, -0.1157064288854599, -0.07948898524045944, -0.41097936034202576, -0.06914303451776505, -0.1676386147737503, -0.0005772831500507891, -0.006946342997252941, -1.4305104514278355e-06, -0.0987524539232254, -0.000243634101934731, -0.015595735050737858, -1.9026389122009277, -1.2940260171890259, -0.4264151155948639, -0.001374729792587459, -0.0003120412293355912, -0.014793814159929752, -0.0006328010931611061, -0.0007482351502403617, -9.083335316972807e-05, -4.732496745418757e-05, -0.00027616979787126184, -0.012657543644309044, -0.004537524189800024, -0.004265377763658762, -0.0058980947360396385, -0.1858089417219162, -0.18709099292755127, -0.11636795103549957, -0.000545472139492631, -3.909988299710676e-05, -0.001699671265669167, -0.002314628567546606, -0.27962544560432434, -2.220439910888672, -2.165631055831909, -0.10740049928426743, -0.06554490327835083, -0.6994916200637817, -0.03911028802394867, -0.02126815915107727, -0.06553317606449127, -7.629103492945433e-05, -0.2993648052215576, -0.045797351747751236, -0.005997992120683193, -0.00022456508304458112, -0.051968857645988464, -9.536738616588991e-07, -3.111314072157256e-05, -3.576272320060525e-06, -0.02915037050843239, -1.2874520507466514e-05, -0.023540189489722252, -0.00030048147891648114, -0.00040368037298321724, -4.5060096454108134e-05, -0.001725019421428442, -0.08710668981075287, -0.0006404255982488394, -0.040530890226364136, -2.2676138877868652, -2.4267513751983643, -2.1509478092193604, -0.09940639138221741, -0.2112036943435669, -0.09293218702077866, -1.3846112489700317, -0.9045066237449646, -0.0002315968304174021, -1.2370140552520752, -0.0018127213697880507, -1.960780143737793, -0.07327381521463394, -2.1793179512023926, -0.018298037350177765, -0.2278202921152115, -0.0007065422250889242, -0.015927469357848167, -2.140279769897461, -0.0008437649230472744, -0.03814205154776573, -0.041071176528930664, -0.0008417400531470776, -0.004816952161490917, -1.1303409337997437, -1.0609993934631348, -0.054799024015665054, -0.006255333311855793, -0.017988046631217003, -0.00952166598290205, -1.4137805700302124, -0.0015165030490607023, -0.7029440402984619, -0.0005388000281527638, -0.0060539208352565765, -0.18894927203655243, -0.00013529339048545808, -0.5743522047996521, -0.001838304684497416, -1.0899202823638916, -0.0022734766826033592, -0.24326474964618683, -1.823885577323381e-05, -4.0649541915627196e-05, -2.5510462364763953e-05, -0.004536337684839964, -0.00024423000286333263, -0.5090047717094421, -1.1920922133867862e-06, -5.8412379075889476e-06, -0.0026590011548250914, -0.594119131565094, -0.002615842269733548, -1.0728830375228426e-06, -0.000328367663314566, -4.017272294731811e-05, -0.00013505500101018697, -0.0013087764382362366, -0.006446163635700941, -0.0007740838918834925, -0.029596734791994095, -1.2207367420196533, -3.13869047164917, -1.2817842960357666, -0.41302570700645447, -0.06462763994932175, -0.06684818863868713, -0.00019095504831057042, -0.9432141184806824, -0.8596179485321045, -0.10473702102899551, -0.006101671140640974, -2.2053474822314456e-05, -0.0035550508182495832, -0.0015051951631903648, -1.2040065485052764e-05, -5.602820692729438e-06, -0.00647541880607605, -0.004054422490298748, -0.07028798013925552, -0.014158748090267181, -0.00023815179883968085, -8.606540359323844e-05, -0.002008565468713641, -0.0002366024418734014, 0.0, -0.00020585325546562672, -0.2594671845436096, -0.0015119798481464386, -0.00013410145766101778, -3.6477376852417365e-05, -0.043500062078237534, -0.010004495270550251, -0.0008700875914655626, -0.0005042473785579205, -0.06862449645996094, -0.19032301008701324, -2.5152843591058627e-05, -0.000263894529780373, -6.067568756407127e-05, -0.00023707917716819793, -0.0006684214458800852, -0.0001668790791882202, -7.390948667307384e-06, -1.6689286894688848e-06, -0.00035613393993116915, -0.08993832021951675, -7.354942499659956e-05, -0.00020132421923335642, -1.5735502529423684e-05, -0.0007923085941001773, -1.9907753085135482e-05, -0.0011249411618337035, -0.16215747594833374, -5.483612312673358e-06, -0.004297070670872927, -3.111314072157256e-05, -0.0003673355677165091, -0.00025948495022021234, -1.2874520507466514e-05, -2.0265558760002023e-06, -3.0517112463712692e-05, -7.390948667307384e-06, -0.0001517419150331989, -6.544376083184034e-05, -0.4213508367538452, -0.00352559145539999, -0.007000916637480259, -1.1950279474258423, -1.3937674760818481, -1.4585611820220947, -0.48235175013542175, -0.09924621134996414, -0.08222596347332001, -0.03824440389871597, -0.1390286684036255, -0.054804328829050064, -0.00030286493711173534, -0.07133793830871582, -2.3841855067985307e-07, -0.004354163073003292, -0.06370976567268372, -0.015275395475327969, -5.483612312673358e-06, -0.04881487041711807, -1.1205610462639015e-05, -0.004152841866016388, -0.0006125480867922306, -0.002062100451439619, -2.455681169521995e-05, 0.0, -1.2993727978027891e-05, -0.001081715920008719, -0.004766292870044708, -0.010401562787592411, -0.00549686374142766, -1.99310302734375, -0.9734663963317871, -0.14409175515174866, -5.006777428206988e-06, -0.061090465635061264, -0.9119614958763123, -1.8949339389801025, -3.313963316031732e-05, -0.0014449642039835453, -6.3774932641536e-05, -0.0019456282025203109, -0.16514962911605835, -0.0002975021197926253, -0.006844053976237774, -0.000865561596583575], "finish_reason": "length"}], "metrics": {"energy": 889.2105484113692, "energy_per_token": 3.473478704731911, "time": 22.165474, "time_per_token": 0.0865838828125}}
{"outputs": [{"text": "path_dir = Path(directory).resolve()\n    hashes = {}\n    for root, _, filenames in os.walk(directory):\n        for filename in filenames:\n            with open(os.path.join(root, filename), 'rb') as f:\n                file_hash = hashlib.sha256()\n                while chunk := f.read(4096):\n                    file_hash.update(chunk)\n            hashes[filename] = file_hash.hexdigest()\n\n    with open(path_dir / \"hashes.json\", \"w\") as f:\n        json.dump(hashes, f)\n\n    return str(path_dir / \"hashes.json\")", "tokens": ["path", "_", "dir", " =", " Path", "(", "directory", ")", ".", "resolve", "()", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " _", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "while", " chunk", " :=", " f", ".", "read", "(", "4", "0", "9", "6", "):", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "has", "hes", "[", "filename", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "with", " open", "(", "path", "_", "dir", " /", " \"", "has", "hes", ".", "json", "\"", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " str", "(", "path", "_", "dir", " /", " \"", "has", "hes", ".", "json", "\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.209817409515381, -1.836446762084961, -1.6959285736083984, -0.0359857939183712, -0.11781662702560425, -0.004909602925181389, -0.013230626471340656, -0.00302524259313941, -2.5141987800598145, -0.4196104109287262, -0.001551615772768855, -0.05660348758101463, -0.1642329841852188, -0.7213095426559448, -0.0012331746984273195, -0.22707544267177582, -0.1423611342906952, -0.03986591845750809, -0.3271276354789734, -0.11948379129171371, -1.1486449241638184, -0.003854228649288416, -1.8699277639389038, -0.028103478252887726, -2.419121265411377, -8.511180931236595e-05, -0.0001070442158379592, -0.001061352901160717, -0.0022722873836755753, -1.4305012882687151e-05, -2.109982233378105e-05, -0.0001967951684491709, -0.9383851289749146, -0.007103544659912586, -0.017535414546728134, -0.003421644913032651, -0.13026019930839539, -0.17841364443302155, -0.00015829740732442588, -0.0003352795320097357, -1.1920928244535389e-07, -1.1920928244535389e-07, -6.627816765103489e-05, -0.0005884823040105402, -0.000916537712328136, -1.8758087158203125, -0.0012460333527997136, -0.0015776818618178368, -0.2800900638103485, -3.6954811548639555e-06, -0.00011657988943625242, -1.1920922133867862e-06, -0.0008032671175897121, -4.565611743601039e-05, -0.012080127373337746, -0.00013183678674977273, -0.006324277725070715, -0.005495322402566671, -9.297892393078655e-05, -0.6986876726150513, -0.01017844583839178, -0.0006951061659492552, -8.332382276421413e-05, -0.47872328758239746, -0.012757827527821064, -0.004833679646253586, -0.0004681444843299687, -0.9602876901626587, -0.044122472405433655, -0.16003985702991486, -0.0015503065660595894, -0.0015712546883150935, -2.9682672902708873e-05, -2.3841830625315197e-06, -0.002092316746711731, -0.0009873997187241912, -4.887569048150908e-06, -1.0847986231965479e-05, -1.126689076423645, -0.004466438665986061, -0.0005771639989688993, -0.5192936658859253, -0.3795009255409241, -0.00010346830822527409, -0.00038926175329834223, -3.099436753473128e-06, -3.099436753473128e-06, -0.004336121492087841, -0.7735068798065186, -0.0023311602417379618, -0.0012527006911113858, -0.0003634030872490257, -0.0030189435929059982, -0.01943252421915531, -6.580135959666222e-05, -0.0004003438516519964, -0.001190311275422573, -4.172316494077677e-06, -1.0132738680113107e-05, -1.2278481335670222e-05, -2.622600959512056e-06, -5.98412734689191e-05, -7.664863369427621e-05, -0.0008432884933426976, -0.0002632986579556018, -0.6083886623382568, -0.6135158538818359, -4.815939246327616e-05, -0.017322203144431114, -0.7240080833435059, -0.00549318827688694, -6.305972783593461e-05, -0.01598695106804371, -2.0265558760002023e-06, -2.3841855067985307e-07, -0.003940556664019823, -0.0027381805703043938, -0.00012039413559250534, 0.0, -0.0001232548092957586, -0.0023491187021136284, -1.1381402015686035, -0.0037244255654513836, -1.377317190170288, -0.008199009113013744, -0.0734909325838089, -0.14819304645061493, -8.689979586051777e-05, -4.2914423829643056e-05, -0.06876639276742935, -1.9503508806228638, -0.01075554545968771, -1.2993727978027891e-05, -0.0009166568052023649, -9.142934868577868e-05, -2.169585604860913e-05, -0.0027322364039719105, -0.6108118891716003, -0.004114140290766954, -0.012717926874756813, -0.034350715577602386, -0.00011574551899684593, -0.1826033890247345, -0.024241352453827858, -0.0024547225330024958, -0.0022380324080586433, -0.007751858793199062, -0.0005174727994017303, -6.437280717364047e-06, -0.004598755855113268, -0.0021059971768409014, -1.1920928244535389e-07, -0.00018404220463708043, -0.000485183292767033, -0.22977255284786224, -0.0004301338049117476, -0.2535322904586792, -0.002907693851739168, -0.10707923769950867, -0.4233658015727997, -0.029707370325922966, -0.029396729543805122, -0.00012611546844709665, -8.821448318485636e-06, -0.03939477726817131, -0.014892473816871643, -0.00033682872890494764, -3.576272320060525e-06, -0.00030655929003842175, -8.904537389753386e-05, -2.5987286790041253e-05, -1.9860597848892212, -3.814689989667386e-06, -2.0265558760002023e-06, -1.6689286894688848e-06, -1.0251946150674485e-05, -0.12035749852657318], "finish_reason": "stop"}], "metrics": {"energy": 599.9410756072995, "energy_per_token": 3.3894976023011267, "time": 15.192015, "time_per_token": 0.08583059322033898}}
{"outputs": [{"text": "hashes = {}\n\n    for path, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(path, file)\n            with open(file_path, \"rb\") as f:\n                data = f.read()\n                hash_object = hashlib.sha256(data)\n                hashes[file_path] = hash_object.hexdigest()\n\n    json_file = Path(directory, \"hashes.json\")\n    with open(json_file, \"w\") as f:\n        json.dump(hashes, f)\n\n    return json_file.as_posix()", "tokens": ["has", "hes", " =", " {}", "\n", "\n", "    ", "for", " path", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "data", ")", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " json", "_", "file", ".", "as", "_", "pos", "ix", "()", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -1.3216276168823242, -0.000545472139492631, -0.2395806759595871, -2.156984329223633, -0.9599966406822205, -0.42791804671287537, -0.001019553979858756, -0.00023421882360707968, -0.012271616607904434, -0.0006893880781717598, -0.0011250602547079325, -3.266281055402942e-05, -5.2569914259947836e-05, -0.0003505330823827535, -0.008654940873384476, -0.0030997584108263254, -0.007865764200687408, -0.005720790475606918, -0.040216267108917236, -0.1208237037062645, -0.10998482257127762, -0.0012902038870379329, -8.451581379631534e-05, -0.0006301801186054945, -0.000992997083812952, -0.24614360928535461, -0.06857930123806, -0.006625470705330372, -0.0002488780301064253, -0.0643538162112236, -3.576278118089249e-07, -4.470248313737102e-05, -3.6954811548639555e-06, -0.002610729541629553, -1.597391747054644e-05, -0.005741414614021778, -0.00036971885128878057, -0.0005158047424629331, -0.000105375460407231, -0.0026121563278138638, -0.06964217871427536, -0.3110240399837494, -0.00027426297310739756, -4.827859811484814e-05, -0.001260320539586246, -9.250213042832911e-05, -1.1920928244535389e-07, -0.0011339908232912421, -0.8228124976158142, -0.0030216772574931383, -0.00011574551899684593, -0.00013219437096267939, -3.0040289857424796e-05, -0.03675286844372749, -0.009939462877810001, -0.002141922013834119, -0.00034445550409145653, -2.2337253093719482, -0.0016379047883674502, -0.0006093314150348306, -1.764281842042692e-05, -3.576272320060525e-06, -0.00032074074260890484, -0.0011960265692323446, -0.03483275696635246, -0.34265172481536865, -0.4339825510978699, -1.1817944049835205, -0.00021062063751742244, -4.160317621426657e-05, -3.4570634852570947e-06, -2.264974000354414e-06, -0.0008912881603464484, -0.0008842610404826701, -8.583032467868179e-06, -1.0013530300057027e-05, -0.13442912697792053, -0.00033802041434682906, -0.00021240839851088822, -0.007771731354296207, -0.006057238671928644, -2.002483367919922, -2.0861407392658293e-05, -0.0011756658786907792, -0.022951433435082436, -0.12662875652313232, -2.9205850296420977e-05, -0.025462675839662552, -1.3828182090946939e-05, -0.0058580380864441395, -1.6212332411669195e-05, -3.4570634852570947e-06, -0.0011867393041029572, -0.001073022955097258, -0.00024256148026324809, 0.0, -3.2305197237292305e-05, -0.0021728496067225933, -0.021986311301589012, -0.0028766700997948647, -0.23103441298007965, -0.0013019903562963009, -0.4746415913105011, -0.07749605178833008, -1.5321911573410034, -0.010118735022842884, -0.038816314190626144, -0.8268263339996338, -0.32424065470695496, -0.004071756266057491, -1.311301275563892e-06, -0.0007201223634183407, -0.00013052565918769687, -6.079655122448457e-06, -5.1616290875244886e-05, -0.0679963231086731, -0.124404676258564, -0.05163947120308876, -0.0813320130109787, -0.0002574589161667973, -0.012785721570253372, -6.758938252460212e-05, -4.768370445162873e-07, -0.005488445982336998, -0.04086098074913025, -0.00264140497893095, -0.004329593386501074, -0.008315227925777435, -1.7046782886609435e-05, -0.05138653144240379, -0.004195341374725103, -0.00032658010604791343, -0.0006542449118569493, -0.004792275372892618, -0.0003583981015253812, -7.986990567587782e-06, -0.0012498432770371437, -0.0009977606823667884, 0.0, -5.8053239627042785e-05, -4.6132929128361866e-05, -0.19644005596637726, -0.00038675934774801135, -0.04778371378779411, -0.00203473842702806, -0.03554503247141838, -0.8957598209381104, -0.0003723404952324927, -4.0531076592742465e-06, -0.45043718814849854, -3.1662886142730713, -2.8609820219571702e-05, -0.007750794291496277, 0.0, -0.0002047805901383981, -0.17774732410907745, -0.018822742626070976, -1.0473846197128296], "finish_reason": "stop"}], "metrics": {"energy": 544.1947019262311, "energy_per_token": 3.338617803228412, "time": 13.960996, "time_per_token": 0.08565028220858896}}
{"outputs": [{"text": "hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                data = f.read()\n                hash_obj = hashlib.sha256(data)\n                hash_value = hash_obj.hexdigest()\n                hashes[file_path] = hash_value\n    with open('hashes.json', 'w') as f:\n        json.dump(hashes, f)\n    return Path('hashes.json').resolve()", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "data", ")", "\n", "                ", "hash", "_", "value", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "value", "\n", "    ", "with", " open", "('", "has", "hes", ".", "json", "'", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " Path", "('", "has", "hes", ".", "json", "')", ".", "resolve", "()", "\n", "\n", "if"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -0.5124924778938293, -0.0014099667314440012, -0.30408358573913574, -0.00010609064338495955, -5.602679812000133e-05, -0.004596501123160124, -0.00040058218291960657, -0.0005068686441518366, -1.823885577323381e-05, -4.362964682513848e-05, -0.0002932118659373373, -0.004604214336723089, -0.006029867101460695, -0.005383636336773634, -0.003004919271916151, -0.020922431722283363, -0.196303591132164, -0.046081993728876114, -0.0005650115781463683, -0.00019071667338721454, -0.0005478549865074456, -0.0009255892946384847, -0.2963700294494629, -0.0500207357108593, -0.006147641688585281, -0.00018463814922142774, -0.047389961779117584, -2.3841855067985307e-07, -4.2199197196168825e-05, -6.198863957251888e-06, -0.002151795197278261, -1.8358061424805783e-05, -0.0010207447921857238, -0.00017045476124621928, -0.00032217081752605736, -0.00021705655672121793, -0.002317720791324973, -0.003888665698468685, -0.2549647390842438, -0.0003325386205688119, -4.029192859889008e-05, -0.0008717550663277507, -0.00011336160969221964, -3.576278118089249e-07, -0.0005465444410219789, -0.4952702224254608, -0.001191025716252625, -0.0001438752660760656, -2.8609820219571702e-05, -0.0562821589410305, -0.008838342502713203, -0.0008965287124738097, -0.00033539868309162557, -2.2205567359924316, -0.0017028844449669123, -0.0005249790847301483, -2.825220326485578e-05, -3.6954811548639555e-06, -0.00021562635083682835, -0.0008390005677938461, -0.03091510385274887, -0.3277624249458313, -0.29276472330093384, -0.9290931224822998, -0.0001560327800689265, -7.73638384998776e-05, -2.3841830625315197e-06, -2.0265558760002023e-06, -0.0007681279676035047, -0.0007233387441374362, -5.364403477869928e-06, -1.07287787614041e-05, -0.5444523692131042, -0.00022551853908225894, -5.61460001335945e-05, -0.004197359550744295, -0.004192966967821121, -0.9638946652412415, -0.44574305415153503, -0.4438256621360779, -0.0003675738989841193, -0.0015439982526004314, -5.2927523938706145e-05, -4.410734163684538e-06, -2.4318398573086597e-05, -0.0028059417381882668, -2.634490556374658e-05, 0.0, -3.2305197237292305e-05, -0.00238788896240294, -0.1371002197265625, -0.16839531064033508, -1.5497195136049413e-06, -0.0033696084283292294, -0.03528810292482376, -0.06165551766753197, -1.5020257706055418e-05, -0.02337646670639515, -1.490105023549404e-05, -0.013839594088494778, -7.748573807475623e-06, -4.136476854910143e-05, -0.0008430502493865788, -0.4232625365257263, -1.9938316345214844, -0.0032619622070342302, -0.5747864246368408, -0.010751299560070038, -3.814689989667386e-06, -0.0007053509471006691, -0.00046588058467023075, -0.0002798642381094396, -9.77468371274881e-05, -0.002393240574747324, -0.0010448002722114325, -0.017016245052218437, -3.361645576660521e-05, -0.10993313044309616, -0.0031661877874284983, -0.00042691652197390795, -0.0013391345273703337, -0.006602259818464518, -0.0007024919614195824, -4.410734163684538e-06, -0.0007344171172007918, -0.0002774807217065245, -1.1920928244535389e-07, -7.486063259420916e-05, -0.00011991735664196312, -0.2082512527704239, -0.0003106111544184387, -0.06105031818151474, -0.43485403060913086, -0.9706004858016968, -0.3068094551563263, -0.003997550345957279, -5.722029527532868e-06, -0.0007746794726699591, -6.711257447022945e-05, -9.77468371274881e-05, -0.022817326709628105, -0.9620857238769531, -0.0007279845303855836, -0.43888142704963684, -0.022837484255433083, -1.2527130842208862], "finish_reason": "stop"}], "metrics": {"energy": 537.2703419752123, "energy_per_token": 3.511570862583087, "time": 13.137246, "time_per_token": 0.08586435294117646}}
{"outputs": [{"text": "hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            hash = hashlib.sha256()\n            with open(file_path, \"rb\") as f:\n                for chunk in iter(lambda: f.read(4096), b\"\"):\n                    hash.update(chunk)\n            hash_dict[file] = hash.hexdigest()\n    json_file = str(Path(directory) / 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(hash_dict, f)\n    return json_file", "tokens": ["hash", "_", "dict", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "hash", "_", "dict", "[", "file", "]", " =", " hash", ".", "hex", "dig", "est", "()", "\n", "    ", "json", "_", "file", " =", " str", "(", "Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "')", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ")", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "print"], "logprobs": [-2.451821804046631, -0.04352083429694176, -0.22231684625148773, -0.01756797730922699, -0.029195409268140793, -0.05715294927358627, -0.2789844274520874, -0.18085862696170807, -0.4131407141685486, -0.003331707790493965, -0.26318156719207764, -0.0001399419124936685, -7.033100700937212e-05, -0.0051009273156523705, -0.00047100416850298643, -0.0005641775787808001, -2.038458114839159e-05, -3.683499380713329e-05, -0.00038020533975213766, -0.0034633437171578407, -0.006031407508999109, -0.011432021856307983, -0.0035532689653337, -0.02284051477909088, -0.15873543918132782, -0.0410996675491333, -0.0004065402317792177, -0.00033444532891735435, -0.00047159992391243577, -0.0010469438275322318, -0.29013562202453613, -0.05220309644937515, -0.00795399397611618, -0.00033098942367359996, -0.03494039922952652, -1.1920928244535389e-07, -4.160317621426657e-05, -2.3841830625315197e-06, -0.0015274535398930311, -1.811964830267243e-05, -0.0008363801171071827, -7.819823804311454e-05, -0.0007346553611569107, -0.0001551984460093081, -0.002043066080659628, -0.0038291718810796738, -2.4021048545837402, -2.22479510307312, -0.029628561809659004, -0.019074466079473495, -3.6477376852417365e-05, -0.004578227177262306, -0.0007099968497641385, -1.847726889536716e-05, -6.794906312279636e-06, -0.02906341291964054, -0.004242468159645796, -0.007149824406951666, -0.019665507599711418, -0.000364713923772797, -5.8053239627042785e-05, -0.0009723940747790039, -8.844937838148326e-05, -1.1920928244535389e-07, -0.00034767304896377027, -0.466183066368103, -0.0003618539194576442, -5.8053239627042785e-05, -0.0004117832868359983, -8.106198947643861e-06, -0.020478133112192154, -0.007521997671574354, -0.0017971331253647804, -0.0002580548170953989, -0.08007542788982391, -0.11306426674127579, -2.658331868587993e-05, -0.0018057008273899555, -3.4450891689630225e-05, -0.00020966715237591416, -0.0003305127320345491, -0.0002273062855238095, -1.1205610462639015e-05, -2.3841830625315197e-06, -0.0009639384225010872, -0.08411886543035507, -0.00012814177898690104, -0.00010477947944309562, -2.5629668016335927e-05, -0.0008764001540839672, -2.8609820219571702e-05, -0.0017432268941774964, -0.23240457475185394, -1.490105023549404e-05, -5.722029527532868e-06, -0.0023773047141730785, -7.211902266135439e-05, -0.00024828212917782366, -0.0004920940846204758, -3.111314072157256e-05, -2.0265558760002023e-06, -2.9801878554280847e-05, -2.396077979938127e-05, -8.225102646974847e-05, -6.031808152329177e-05, -0.016147196292877197, -0.12611250579357147, -0.0005626287311315536, -0.08389592915773392, -0.000816012208815664, -0.0436432883143425, -2.3319382667541504, -6.675497570540756e-05, -0.012395958416163921, -0.00031573555315844715, -0.0003327769518364221, -2.1219027985353023e-05, 0.0, -4.672895011026412e-05, -0.001500314916484058, -0.410865843296051, -0.18622314929962158, -0.005494610872119665, -0.4279152452945709, -0.03654152899980545, -3.2702839374542236, -0.014285323210060596, -0.012035606428980827, -0.00970325618982315, -0.028529688715934753, -0.2646175026893616, -0.08491933345794678, -1.5745381116867065, -0.004240094218403101, -6.437280717364047e-06, -0.0005691815749742091, -0.00021717573690693825, -0.00034850722295232117, -0.0089399553835392, -0.004237719811499119, -0.010688910260796547, -0.0005551227368414402, -0.0023272354155778885, -0.005189756862819195, -6.651657167822123e-05, -3.814689989667386e-06, -0.000658057106193155, -0.20381532609462738, -0.0012017417466267943, -0.010783141478896141, -6.0794889577664435e-05, -0.05513109266757965, -0.010768045671284199, -0.000532842765096575, -0.001957050058990717, -0.0034294859506189823, -0.00011145447206217796, -7.390948667307384e-06, -0.0012155532604083419, -0.00036173476837575436, -8.702239938429557e-06, -2.145764938177308e-06, -0.00015627116954419762, -0.0002646096108946949, -0.27338188886642456, -0.0004119024670217186, -0.02150760032236576, -0.020428145304322243, -0.03441210463643074, -0.0005005536950193346, -9.775113539944869e-06, -0.14627705514431, -0.025130949914455414, -3.3219878673553467], "finish_reason": "stop"}], "metrics": {"energy": 582.3881378078457, "energy_per_token": 3.3470582632634813, "time": 14.77946, "time_per_token": 0.08493942528735632}}
{"outputs": [{"text": "path = Path(directory).resolve()  # Resolve the path to get the absolute path\n\n    file_hashes = {}\n\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            file_path = Path(dirpath, filename)\n            with open(file_path, \"rb\") as f:\n                file_hash = hashlib.sha256()\n                while chunk := f.read(4096):\n                    file_hash.update(chunk)\n            file_hashes[str(file_path.relative_to(path))] = file_hash.hexdigest()\n\n    hashes_file = Path(path, \"hashes.json\")\n    with open(hashes_file, \"w\") as f:\n        json.dump(file_hashes, f)\n\n    return str(hashes_file.resolve())", "tokens": ["path", " =", " Path", "(", "directory", ")", ".", "resolve", "()", "  ", "#", " Res", "olve", " the", " path", " to", " get", " the", " absolute", " path", "\n", "\n", "    ", "file", "_", "has", "hes", " =", " {}", "\n", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " Path", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "while", " chunk", " :=", " f", ".", "read", "(", "4", "0", "9", "6", "):", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "file", "_", "has", "hes", "[", "str", "(", "file", "_", "path", ".", "relative", "_", "to", "(", "path", "))", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "has", "hes", "_", "file", " =", " Path", "(", "path", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "has", "hes", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " str", "(", "has", "hes", "_", "file", ".", "resolve", "())", "\n", "\n", "if"], "logprobs": [-3.209817409515381, -0.20244210958480835, -0.062127940356731415, -0.011307441629469395, -0.019865015521645546, -0.005534919444471598, -2.1383562088012695, -0.6184616088867188, -0.0009160612826235592, -2.8935837745666504, -0.00056429672986269, -1.3370747566223145, -0.0661463811993599, -0.1339547336101532, -1.3064519166946411, -0.31761595606803894, -1.0026419162750244, -0.08392739295959473, -0.11230797320604324, -0.061142388731241226, -0.21294809877872467, -1.7976635694503784, -0.0007260785205289721, -2.9388604164123535, -0.017738860100507736, -0.24549725651741028, -7.748303323751315e-05, -0.009147283621132374, -0.04990575090050697, -0.8984835743904114, -0.8616526126861572, -0.0003271759778726846, -0.3391057550907135, -2.90641713142395, -0.06969965994358063, -0.0006940339808352292, -0.31460946798324585, -0.0001212284987559542, -9.894321920000948e-06, -0.0016124354442581534, -1.1920928244535389e-07, -2.52720492426306e-05, -0.00031716562807559967, -0.0007376333815045655, -2.7894584491150454e-05, -2.455681169521995e-05, -0.0002592465898487717, -1.6140984296798706, -0.011547629721462727, -0.09882955998182297, -0.00915791466832161, -0.2000010758638382, -0.18396909534931183, -1.2993727978027891e-05, -8.141662692651153e-05, 0.0, -8.344646857949556e-07, -0.00036066226311959326, -0.006011974532157183, -0.0015667318366467953, -0.12915994226932526, -0.12010877579450607, -0.004041718319058418, -0.00030191155383363366, -2.183889865875244, -0.001065282616764307, -0.02391352877020836, -1.4305104514278355e-06, -0.4284907579421997, -0.000395815703086555, -6.258291978156194e-05, -0.3532663881778717, -0.11711163818836212, -1.230175256729126, -0.328943133354187, -5.328513361746445e-05, -0.008238380774855614, -4.3987260141875595e-05, -6.556489552167477e-06, -0.002566736191511154, -0.8136475086212158, -0.0017143089789897203, -0.0001532914029667154, -0.0003499372396618128, -4.756337511935271e-05, -0.5078122615814209, -0.012613872066140175, -0.06601906567811966, -0.00038628268521279097, -0.2478639781475067, -0.00023064337437972426, -0.37247326970100403, -0.0015474499668926, -0.0004646890447475016, -1.490105023549404e-05, -1.6689286894688848e-06, -0.0017864234978333116, -0.0006495987763628364, -6.198863957251888e-06, -5.006777428206988e-06, -0.5296695232391357, -0.04460860788822174, -0.0002693767019081861, -0.9662352800369263, -0.25312986969947815, -3.313963316031732e-05, -8.868777513271198e-05, -3.933898824470816e-06, -1.4305104514278355e-06, -0.00431178929284215, -0.9486966729164124, -0.0014636528212577105, -0.0008061258122324944, -0.00018535325943958014, -0.0010669498005881906, -0.16474246978759766, -4.970903682988137e-05, -0.00031668893643654883, -0.0024136954452842474, -7.152555099310121e-07, -4.291525328881107e-06, -2.634490556374658e-05, -9.536738616588991e-07, -3.969590397900902e-05, -4.60137271147687e-05, -0.00028463127091526985, -0.0018070096848532557, -0.7079199552536011, -0.13790571689605713, -0.00036423723213374615, -0.07106461375951767, -8.344646857949556e-07, -0.0013652060879394412, -0.1455862820148468, -0.00015686711412854493, -0.005694595165550709, -1.3708974620385561e-05, -0.0007172634359449148, -0.37506672739982605, -0.08823607116937637, -1.9073468138230965e-06, -5.960462772236497e-07, -2.0503786799963564e-05, -0.15620988607406616, -0.002315223217010498, -0.0016254083020612597, -6.23445157543756e-05, -0.006363012827932835, -1.311301275563892e-06, -6.556489552167477e-06, -0.000681883015204221, -0.0012076949933543801, -8.546940807718784e-05, 0.0, -0.00010954733443213627, -0.050686925649642944, -0.024884004145860672, -0.002484332537278533, -2.2900402545928955, -1.8000440832111053e-05, -0.0021408514585345984, -0.6122410297393799, -0.08957695215940475, -1.2384414672851562, -0.0036202622577548027, -0.43896982073783875, -0.015002868138253689, -0.09986261278390884, -0.002673862734809518, -2.264974000354414e-06, -0.000528076896443963, -9.738924563862383e-05, -9.775113539944869e-06, -3.397406908334233e-05, -0.03924761340022087, -0.06230022385716438, -0.12269846349954605, -0.2705633044242859, -0.00010191874753218144, -0.0014040146488696337, -1.1920928244535389e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0011014830088242888, -0.029584698379039764, -0.0014618673594668508, -0.0021054022945463657, -0.018932586535811424, -1.537788011773955e-05, -0.03770706430077553, -0.0019996424671262503, -0.004046705085784197, -0.00031156453769654036, -0.0015180503251031041, -7.652943895664066e-05, -5.960462772236497e-07, -0.00034350217902101576, -0.0022168601863086224, -8.344646857949556e-07, -1.311301275563892e-06, -1.1920928244535389e-07, -0.00010132275929208845, -4.207999518257566e-05, -0.6142137050628662, -0.0029345566872507334, -0.04369087517261505, -0.0016211237525567412, -0.060400426387786865, -0.15782012045383453, -5.94836674281396e-05, -0.007814904674887657, -2.3841855067985307e-07, -1.07287787614041e-05, -3.6954811548639555e-06, -0.5932173728942871, -0.23233522474765778, -0.00134080124553293, -0.2672332525253296, -0.021061111241579056, -1.1322505474090576], "finish_reason": "stop"}], "metrics": {"energy": 757.5983772611615, "energy_per_token": 3.4436289875507344, "time": 18.88441, "time_per_token": 0.08583822727272727}}
{"outputs": [{"text": "hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for filename in files:\n            file_path = os.path.join(root, filename)\n            with open(file_path, 'rb') as f:\n                contents = f.read()\n                hash_object = hashlib.sha256(contents)\n                hash_value = hash_object.hexdigest()\n            hashes[file_path] = hash_value\n    with open(os.path.join(directory, 'hashes.json'), 'w') as f:\n        json.dump(hashes, f)\n    return os.path.abspath(f.name)", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "contents", " =", " f", ".", "read", "()", "\n", "                ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "contents", ")", "\n", "                ", "hash", "_", "value", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "            ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "value", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "f", ".", "name", ")", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -0.5124924778938293, -0.0014099667314440012, -0.30408358573913574, -0.00010609064338495955, -5.602679812000133e-05, -0.004596501123160124, -0.00040058218291960657, -0.0005068686441518366, -1.823885577323381e-05, -4.362964682513848e-05, -0.0002932118659373373, -0.004604214336723089, -0.006029867101460695, -0.005383636336773634, -0.003004919271916151, -0.020922431722283363, -2.679908037185669, -8.105902816168964e-05, -0.0007376333815045655, -0.00017081231635529548, -0.0006472161621786654, -0.0008232779800891876, -0.21789135038852692, -0.36134496331214905, -0.004397721495479345, -0.0002444683632347733, -0.06742571294307709, -2.3841855067985307e-07, -2.6940935640595853e-05, -5.364403477869928e-06, -0.003183774882927537, -1.6093124941107817e-05, -0.0011099375551566482, -0.00016878610767889768, -0.0003293210465926677, -6.282132380874828e-05, -0.0021651177667081356, -0.006255451589822769, -0.3054867386817932, -0.00029988560709170997, -5.435795901576057e-05, -0.0008401916129514575, -6.6756979322235566e-06, -5.960462772236497e-07, -0.0005807381821796298, -0.5840713381767273, -0.001134109916165471, -0.00018523407925385982, -1.645074735279195e-05, -0.3030683398246765, -0.008479779586195946, -0.0014180614380165935, -0.0003190723655279726, -3.433384656906128, -0.00825245026499033, -0.0004412154376041144, -1.3589766240329482e-05, -2.9802276912960224e-06, -6.90197994117625e-05, -0.0008793777669779956, -0.05520453304052353, -0.41327404975891113, -0.16197256743907928, -0.8673977851867676, -0.0001746263587847352, -4.386805812828243e-05, -2.50339189733495e-06, -1.9073468138230965e-06, -0.0006850994541309774, -0.0007970731821842492, -6.437280717364047e-06, -1.9311717551317997e-05, -0.22894258797168732, -0.00015710550360381603, -0.00014709345123264939, -0.0024607873056083918, -0.01016959547996521, -0.8431869745254517, -0.27377596497535706, -0.23822283744812012, -0.0003880701260641217, -0.0007252446957863867, -1.490105023549404e-05, -3.576272320060525e-06, -5.686121585313231e-05, -0.00135389668866992, -2.7656173188006505e-05, 0.0, -2.3483953555114567e-05, -0.0019936938770115376, -1.941535472869873, -0.24709658324718475, -2.0265558760002023e-06, -0.004518893081694841, -0.18595059216022491, -1.7523612768854946e-05, -2.825220326485578e-05, -0.021728670224547386, -1.8715683836489916e-05, -0.009815877303481102, -1.1444026313256472e-05, -1.728519782773219e-05, -0.0009018882992677391, -0.4477677047252655, -2.184190511703491, -0.003838553326204419, -0.8527527451515198, -0.1289159059524536, -3.576272320060525e-06, -3.111314072157256e-05, -2.7418097943154862e-06, -0.0013148480793461204, -0.0007282227743417025, -0.003216333920136094, -0.0002768848498817533, -0.047072142362594604, -0.002872747601941228, -7.152555099310121e-07, -0.00031573555315844715, -0.0001255195093108341, -4.4225667807040736e-05, -0.00019488819816615433, -0.004820392467081547, -0.0009321396937593818, -0.01164920348674059, -5.519237674889155e-05, -0.14505724608898163, -0.0018882793374359608, -0.0005970602505840361, -0.001213052892126143, -0.00925914105027914, -0.0007469248375855386, -2.7418097943154862e-06, -0.0010600429959595203, -0.0003413571394048631, -1.1920928244535389e-07, -7.021180499577895e-05, -9.274052717955783e-05, -0.1889100968837738, -0.00032658010604791343, -0.033639661967754364, -0.19995589554309845, -0.17970171570777893, -2.1219027985353023e-05, -8.844937838148326e-05, -1.7165990357170813e-05, -0.13274766504764557, -1.2278481335670222e-05, -4.410734163684538e-06, -0.004513434134423733, -2.653773784637451, -0.10413876920938492, -0.00011050090688513592, -0.010833850130438805, -0.01983802020549774, -0.021330008283257484, -0.6481608152389526], "finish_reason": "stop"}], "metrics": {"energy": 547.1737835788723, "energy_per_token": 3.3364255096272704, "time": 14.093824, "time_per_token": 0.0859379512195122}}
{"outputs": [{"text": "path = Path(directory)\n    hashes = {}\n\n    for file_path in path.rglob('*'):\n        if file_path.is_file():\n            with open(file_path, \"rb\") as f:\n                hash_obj = hashlib.sha256()\n                hash_obj.update(f.read())\n                file_hash = hash_obj.hexdigest()\n                hashes[file_path.relative_to(path)] = file_hash\n\n    with open(path / 'hashes.json', 'w') as f:\n        json.dump(hashes, f)\n\n    return path / 'hashes.json'", "tokens": ["path", " =", " Path", "(", "directory", ")", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "for", " file", "_", "path", " in", " path", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", "_", "path", ".", "is", "_", "file", "():", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "hash", "_", "obj", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "hash", "_", "obj", ".", "update", "(", "f", ".", "read", "())", "\n", "                ", "file", "_", "hash", " =", " hash", "_", "obj", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", ".", "relative", "_", "to", "(", "path", ")]", " =", " file", "_", "hash", "\n", "\n", "    ", "with", " open", "(", "path", " /", " '", "has", "hes", ".", "json", "'", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " path", " /", " '", "has", "hes", ".", "json", "'", "\n", "\n", "#"], "logprobs": [-3.209817409515381, -0.20244210958480835, -0.062127940356731415, -0.011307441629469395, -0.019865015521645546, -0.005534919444471598, -0.16887569427490234, -0.14464904367923737, -0.72452312707901, -0.001608150894753635, -0.1645783632993698, -0.12810544669628143, -0.0472174771130085, -1.0422505140304565, -0.0002849888114724308, -0.1876651495695114, -0.7568233013153076, -1.5377612113952637, -0.08176502585411072, -0.0020158225670456886, -0.043630052357912064, -3.5523738915799186e-05, -0.3190077543258667, -7.510157047363464e-06, -1.0010242462158203, -0.039006419479846954, -0.017671285197138786, -0.0002828436263371259, -0.02112332358956337, -0.009639974683523178, -0.07878805696964264, -0.10017628222703934, -1.7881233361549675e-05, -4.172316494077677e-06, -0.0012338890228420496, -0.0034952994901686907, -5.006777428206988e-06, -0.023466017097234726, -0.061129942536354065, -0.012551716528832912, -0.0020935065113008022, -0.6130363941192627, -0.38968509435653687, -0.00014745102089364082, -0.02243821509182453, -1.6569954823353328e-05, -1.1920928244535389e-07, -0.010278506204485893, -2.0828771591186523, -0.007956004701554775, -0.0006375664379447699, -0.0002739054325502366, -2.5033637939486653e-05, -0.3245985805988312, -0.025504395365715027, -0.0033416880760341883, -0.00046361665590666234, -1.675536036491394, -0.5476988554000854, -0.7888898849487305, -0.0005778788472525775, -0.0002112165529979393, -7.152531907195225e-06, -8.106198947643861e-06, -0.0033060437999665737, -0.0011829291470348835, -1.1324817933200393e-05, -9.179073458653875e-06, -0.2522521913051605, -0.0029529796447604895, -0.0005545270396396518, -0.10333752632141113, -1.764281842042692e-05, -3.7788631743751466e-05, -6.758938252460212e-05, -1.0132738680113107e-05, -0.0002739054325502366, -0.0026430694852024317, -2.658331868587993e-05, -7.629365427419543e-06, -0.0007333449902944267, -0.0008167268824763596, -0.005314745474606752, -1.3836482763290405, -0.005987090524286032, -0.005720553454011679, -0.0010807631770148873, -0.0023795643355697393, -1.9430925021879375e-05, -2.3841855067985307e-07, -1.9550132492440753e-05, -0.004524707794189453, -1.9550132492440753e-05, 0.0, -4.303362584323622e-05, -0.003262793878093362, -0.4273342788219452, -0.2178097516298294, -7.390948667307384e-06, -0.004513552878051996, -1.3523509502410889, -6.878139538457617e-05, -0.01672496646642685, -0.10161584615707397, -2.0228278636932373, -3.2186455882765586e-06, -1.4424220353248529e-05, -4.255681051290594e-05, -0.025084566324949265, -1.1653050184249878, -0.0005749003030359745, -0.013561264611780643, -5.245195097813848e-06, -5.125986263010418e-06, -0.008754445239901543, -0.034776803106069565, -0.0052597238682210445, -1.819763422012329, -0.00720793753862381, -0.09622617810964584, -0.26866745948791504, -0.1362905353307724, -0.9388236999511719, -0.004651322029531002, -4.529942543740617e-06, -0.000445385929197073, -0.0001454247540095821, -7.724463648628443e-05, -0.0006694936309941113, -0.2594565153121948, -0.0032360588666051626, -0.030468864366412163, -3.2066785934148356e-05, -0.17478236556053162, -0.010756488889455795, -0.0010102650849148631, -0.0009697740315459669, -0.009851998649537563, -0.000609927112236619, -2.3841830625315197e-06, -0.00606695469468832, -0.0009334497735835612, 0.0, -0.0001802282058633864, -0.00019429226813372225, -0.3735753893852234, -0.00026973424246534705, -0.06536044180393219, -0.002660308964550495, -0.1125277504324913, -1.2492510080337524, -0.06941187381744385, -0.021004848182201385, -0.0003082277253270149, -1.5497195136049413e-06, -0.00019202772818971425, -0.00012182447244413197, -0.03689637780189514, -0.03980428725481033, -0.015486697666347027, -2.168743133544922], "finish_reason": "stop"}], "metrics": {"energy": 555.4978500432971, "energy_per_token": 3.4502972052378706, "time": 13.662256, "time_per_token": 0.08485873291925465}}
{"outputs": [{"text": "hashes = {}\n\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            hash_ = hashlib.sha256()\n            with open(file_path, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b\"\"):\n                    hash_.update(chunk)\n            hashes[file_path] = hash_.hexdigest()\n\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hashes, f)\n\n    return json_file.resolve().as_posix()", "tokens": ["has", "hes", " =", " {}", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "hash", "_", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "    ", "hash", "_", ".", "update", "(", "chunk", ")", "\n", "            ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " json", "_", "file", ".", "resolve", "()", ".", "as", "_", "pos", "ix", "()", "\n", "\n", "if"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -1.3216276168823242, -0.000545472139492631, -0.2395806759595871, -0.49172598123550415, -0.0019174300832673907, -0.3528517484664917, -8.225102646974847e-05, -5.6980417866725475e-05, -0.004687155596911907, -0.00038723601028323174, -0.0003692421887535602, -1.811964830267243e-05, -3.123234637314454e-05, -0.00019786784832831472, -0.004132778849452734, -0.005248339846730232, -0.005256166215986013, -0.004575972445309162, -0.02154761739075184, -0.19231350719928741, -0.0934455469250679, -0.00052426423644647, -0.00012170527770649642, -0.0004409771354403347, -0.0008609164506196976, -0.30520257353782654, -0.04621995985507965, -0.004531234968453646, -0.0001820160250645131, -0.06010883301496506, -1.1920928244535389e-07, -4.2914423829643056e-05, -3.576272320060525e-06, -0.002392170252278447, -1.5735502529423684e-05, -0.001026341924443841, -0.00011169286881340668, -0.0002530493075028062, -0.00011836781777674332, -0.0021630956325680017, -0.06509978324174881, -2.8878114223480225, -0.17645151913166046, -3.2508442401885986, -0.08767274022102356, -0.05352082848548889, -5.07818695041351e-05, -0.009034114889800549, -0.0009765623253770173, -1.1205610462639015e-05, -7.867782187531702e-06, -0.014289435930550098, -0.006494250148534775, -0.2531566023826599, -0.03147539496421814, -0.0008835464250296354, -6.568216485902667e-05, -0.0012697261990979314, -0.0002735478919930756, -4.768370445162873e-07, -0.00035363141796551645, -1.1714284420013428, -0.0014482972910627723, -0.0002366024418734014, -5.9602869441732764e-05, -0.10071579366922379, -0.024264739826321602, -0.0021657124161720276, -0.0003906917118001729, -0.19398097693920135, -0.10872899740934372, -5.090107151772827e-05, -0.0012723454274237156, -6.151010165922344e-05, -0.0006512666586786509, -0.0008844992844387889, -0.00043585337698459625, -2.038458114839159e-05, -2.0265558760002023e-06, -0.0012374608777463436, -0.0888218805193901, -0.00025054652360267937, -0.00023147765023168176, -4.2199197196168825e-05, -0.0014173472300171852, -4.684815212385729e-05, -0.001329015358351171, -1.7383012771606445, -5.745722592109814e-05, -2.407998726994265e-05, -0.0028884378261864185, -7.64102369430475e-05, -0.00028272447525523603, -0.0006540066679008305, -4.649054244509898e-05, -1.5139465176616795e-05, -2.9802276912960224e-06, -3.5523738915799186e-05, -0.00017498392844572663, -4.541770613286644e-05, -0.00011884459672728553, -0.045117300003767014, -0.35152485966682434, -1.168244216387393e-05, -0.0024700628127902746, -0.05266733840107918, -0.07722452282905579, -1.8715683836489916e-05, -0.037621304392814636, -1.0490362910786644e-05, -0.0023706448264420033, -8.702239938429557e-06, -0.0001081169830285944, -0.0006264869589358568, -1.7046782886609435e-05, 0.0, -2.7656173188006505e-05, -0.0011599486460909247, -0.016010180115699768, -0.0015573289711028337, -0.2744320333003998, -0.0027720618527382612, -0.27058321237564087, -0.03796658664941788, -1.4563108682632446, -0.011250391602516174, -0.014650033786892891, -0.48328253626823425, -0.044215429574251175, -0.16385844349861145, -0.004394279792904854, -4.172316494077677e-06, -0.0006512666586786509, -7.652943895664066e-05, -2.396077979938127e-05, -0.0024851649068295956, -0.09137800335884094, -0.031515248119831085, -0.086880162358284, -0.0013771107187494636, -0.007559148129075766, -4.1483970562694594e-05, -4.768370445162873e-07, -0.0042294105514883995, -0.02995636872947216, -0.0013956816401332617, -0.014199883677065372, -1.823885577323381e-05, -0.0349765419960022, -0.007036547642201185, -0.00040642108069732785, -0.00068926892708987, -0.0020553194917738438, -0.00022575691400561482, -8.702239938429557e-06, -0.0014054430648684502, -0.0003657863999251276, 0.0, -7.486063259420916e-05, -7.188061863416806e-05, -0.24139682948589325, -0.00028939827461726964, -0.04522474855184555, -0.0015141224721446633, -0.02543606236577034, -1.266503095626831, -0.00019643761334009469, -4.410734163684538e-06, -0.07858883589506149, -0.6018587350845337, -0.0003570872650016099, -1.0084450244903564, -0.3888351619243622, -9.536738616588991e-07, -0.003568236017599702, 0.0, -9.333651541965082e-05, -0.19556380808353424, -0.021140247583389282, -1.1016029119491577], "finish_reason": "stop"}], "metrics": {"energy": 631.0160293083192, "energy_per_token": 3.410897455720644, "time": 15.982088, "time_per_token": 0.08638966486486487}}
{"outputs": [{"text": "hashes = {}\n    for dirpath, dirnames, filenames in os.walk(directory):\n        for filename in filenames:\n            file_path = os.path.join(dirpath, filename)\n            with open(file_path, \"rb\") as f:\n                contents = f.read()\n                hash = hashlib.sha256(contents).hexdigest()\n                hashes[file_path] = hash\n\n    json_filename = \"hashes.json\"\n    json_file_path = os.path.join(directory, json_filename)\n    with open(json_file_path, \"w\") as f:\n        json.dump(hashes, f)\n\n    return os.path.abspath(json_file_path)", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "contents", " =", " f", ".", "read", "()", "\n", "                ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "contents", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "\n", "\n", "    ", "json", "_", "filename", " =", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "json", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " json", "_", "filename", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", "_", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "json", "_", "file", "_", "path", ")", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -2.180455446243286, -0.027508821338415146, -0.0003271759778726846, -0.18246454000473022, -0.00018976318824570626, -1.1205610462639015e-05, -0.0025694710202515125, -1.1920928244535389e-07, -2.658331868587993e-05, -0.0001479277852922678, -0.0007236960809677839, -7.748573807475623e-06, -3.58813522325363e-05, -0.00024327656137757003, -0.002564596012234688, -0.0026246407069265842, -0.008968192152678967, -0.0032484165858477354, -0.03095567226409912, -0.11111053824424744, -9.65590606938349e-06, -0.0001282609737245366, -1.1920928244535389e-07, -2.9802276912960224e-06, -0.0006087357178330421, -0.000597179401665926, -0.0008384049870073795, -0.15664948523044586, -0.30267807841300964, -0.0095572080463171, -0.00020275443966966122, -0.049532461911439896, -1.6689286894688848e-06, -2.2053474822314456e-05, -3.576278118089249e-07, -0.0025418850127607584, -9.179073458653875e-06, -0.002654958749189973, -3.6954811548639555e-06, -0.00014959646796341985, -0.0002232540718978271, -2.1457441107486375e-05, -0.000871278636623174, -0.0062838830053806305, -0.19454148411750793, -0.00031609306461177766, -4.31528314948082e-05, -0.0010561132803559303, -4.529942543740617e-06, -2.3841855067985307e-07, -0.0007130940794013441, -0.8040362000465393, -0.001978465588763356, -6.41325386823155e-05, -0.00017426878912374377, -2.372236667724792e-05, -0.11900363117456436, -0.006656852085143328, -0.0016157679492607713, -0.00021371940965764225, -2.779270648956299, -0.004891097079962492, -0.0004129749140702188, -1.0490362910786644e-05, -2.622600959512056e-06, -8.797258487902582e-05, -0.0005920564290136099, -0.0714518204331398, -0.5615676045417786, -1.856951355934143, -0.00028463127091526985, -6.9141146923357155e-06, -1.4305104514278355e-06, -0.0008654424455016851, -0.0006903410539962351, -5.125986263010418e-06, -8.940656698541716e-06, -0.015533295460045338, -0.0002012050390476361, -0.0002115741081070155, -0.008704693987965584, -0.0009121309849433601, -2.2172682292875834e-05, 0.0, -1.7404405298293568e-05, -0.002929207868874073, -0.09688415378332138, -0.11269540339708328, -3.933898824470816e-06, -0.001977156847715378, -0.1826961487531662, -5.125868119648658e-05, -1.4185804502631072e-05, -0.02173776924610138, -9.894321920000948e-06, -0.011649085208773613, -0.0009496469865553081, -1.0489107370376587, -0.003364499658346176, -0.2480311542749405, -0.0017315646400675178, -1.9523100852966309, -0.0004758894501719624, -0.7024486064910889, -0.0037028100341558456, -1.6689286894688848e-06, -0.00043871314846910536, -7.211902266135439e-05, -1.1324817933200393e-05, -0.0026657781563699245, -0.004575022961944342, -0.18574172258377075, -0.0031097407918423414, -0.5758314728736877, -1.1112430095672607, -0.005280001554638147, -0.00022790218645241112, -0.04723384976387024, -7.867782187531702e-06, -9.298280929215252e-06, -5.364403477869928e-06, -0.04623737558722496, -8.189342770492658e-05, -0.013444477692246437, -0.0002441108226776123, -0.0008456706418655813, -2.622600959512056e-06, -7.152555099310121e-07, -3.4450891689630225e-05, -0.0009011736838147044, -0.2002493441104889, -0.027753962203860283, -0.0005079409456811845, -7.712543447269127e-05, -0.00045193947153165936, -6.6756979322235566e-06, -3.158996332786046e-05, -1.5020257706055418e-05, -1.311301275563892e-06, -0.00024279984063468874, -0.009958229027688503, -0.0005845506675541401, -0.001450797077268362, -0.010670392774045467, -9.65590606938349e-06, -0.1510133147239685, -0.00038258862332440913, -0.00047636605449952185, -0.0005595310358330607, -0.0022182876709848642, -0.0006918897270224988, -7.867782187531702e-06, -0.00037746457383036613, -0.0008703258354216814, 0.0, -3.7431014789035544e-05, -4.100715523236431e-05, -0.23147401213645935, -0.0002611534437164664, -0.081415094435215, -0.0015747062861919403, -0.07305388152599335, -1.0795210599899292, -2.3007127310847864e-05, -0.00011896379146492109, -1.5020257706055418e-05, -0.014566505327820778, -2.5987286790041253e-05, -9.536738616588991e-07, -0.00010358751023886725, -0.0016645636642351747, -1.6212332411669195e-05, -0.00024911639047786593, -0.0003483880718704313, -2.50339189733495e-06, -0.06331238895654678, -0.031203320249915123, -0.02540840208530426, -0.6441478133201599], "finish_reason": "stop"}], "metrics": {"energy": 650.6925630130776, "energy_per_token": 3.4983471129735353, "time": 15.981249, "time_per_token": 0.08592069354838709}}
{"outputs": [{"text": "# Convert the directory path to an absolute path\n    directory_path = os.path.abspath(directory)\n\n    # Create an empty dictionary to store the hashes\n    hash_dict = {}\n\n    # Iterate through all files and directories in the given directory\n    for root, dirs, files in os.walk(directory_path):\n        for file in files:\n            # Create a path to the file\n            file_path = os.path.join(root, file)\n\n            # Calculate the SHA256 hash of the file\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.sha256(f.read()).hexdigest()\n\n            # Store the hash with the file path as the key in the dictionary\n            hash_dict[file_path] = file_hash\n\n    # Create a JSON file to store the hashes\n    json_path = Path(directory) / \"hashes.json\"\n\n    # Ensure that the parent directory of the JSON file exists\n    json_path.parent.mkdir(parents=True, exist_ok", "tokens": ["#", " Convert", " the", " directory", " path", " to", " an", " absolute", " path", "\n", "    ", "directory", "_", "path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "directory", ")", "\n", "\n", "    ", "#", " Create", " an", " empty", " dictionary", " to", " store", " the", " has", "hes", "\n", "    ", "hash", "_", "dict", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " files", " and", " directories", " in", " the", " given", " directory", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Create", " a", " path", " to", " the", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "\n", "            ", "#", " Calculate", " the", " SH", "A", "2", "5", "6", " hash", " of", " the", " file", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Store", " the", " hash", " with", " the", " file", " path", " as", " the", " key", " in", " the", " dictionary", "\n", "            ", "hash", "_", "dict", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "#", " Create", " a", " JSON", " file", " to", " store", " the", " has", "hes", "\n", "    ", "json", "_", "path", " =", " Path", "(", "directory", ")", " /", " \"", "has", "hes", ".", "json", "\"", "\n", "\n", "    ", "#", " Ensure", " that", " the", " parent", " directory", " of", " the", " JSON", " file", " exists", "\n", "    ", "json", "_", "path", ".", "parent", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok"], "logprobs": [-1.5498919486999512, -3.9839653968811035, -0.5840430855751038, -0.3035382032394409, -0.8042441606521606, -0.01804705522954464, -0.7932905554771423, -0.009221580810844898, -0.014717227779328823, -0.3555964231491089, -0.0005637010326609015, -0.5307614207267761, -1.5415855646133423, -0.05728523060679436, -0.004409946501255035, -0.9402568340301514, -8.34461570775602e-06, -0.00019774865359067917, -4.2914423829643056e-05, -0.004759056027978659, -1.9073468138230965e-06, -3.361645576660521e-05, -7.283422019099817e-05, -0.004864879883825779, -0.00036197309964336455, -0.001629216712899506, -0.17499133944511414, -0.0003978414461016655, -0.0190268624573946, -1.074520468711853, -1.076674461364746, -0.0021363310515880585, -0.011687850579619408, -0.035511210560798645, -0.05628024414181709, -0.5010719299316406, -0.46303534507751465, -0.001517931348644197, -0.07227091491222382, -0.00011455356434453279, -2.053342819213867, -0.0031949449330568314, -0.05457024648785591, -0.011013551615178585, -0.009045455604791641, -0.0006176709430292249, -0.005741769913583994, -0.00022575691400561482, -0.015317777171730995, -0.9639763236045837, -0.0009556017466820776, -1.2176756858825684, -0.41412436962127686, -0.16252252459526062, -1.5352003574371338, -1.3302193880081177, -0.203447163105011, -0.0038425910752266645, -1.2078481912612915, -0.03511800616979599, -0.47402867674827576, -0.00010942813969450071, -0.012710511684417725, -0.19897575676441193, -0.0023340145125985146, -0.2407032549381256, -1.5258672647178173e-05, -3.313963316031732e-05, -0.0015612567076459527, -0.00039200251922011375, -0.00011193125828867778, -4.768360213347478e-06, -1.4424220353248529e-05, -4.792098479811102e-05, -0.0011126763420179486, -0.12954403460025787, -2.145764938177308e-06, -0.004612995311617851, -0.0011751896236091852, -0.016001148149371147, -0.3715074360370636, -0.11824673414230347, -0.16721652448177338, -6.139089964563027e-05, -0.0008141063735820353, -0.0008623456815257668, -0.002077446784824133, -0.1723102182149887, -2.0005383491516113, -1.2895058393478394, -1.4297593832015991, -0.4593196511268616, -0.13970407843589783, -0.2422674149274826, -0.38216954469680786, -7.664863369427621e-05, -0.0321621298789978, -0.015594092197716236, -0.0010712367948144674, -0.00017629499780014157, -0.013921301811933517, -7.152555099310121e-07, -3.182837463100441e-05, -3.576272320060525e-06, -0.0026120375841856003, -8.821448318485636e-06, -0.003476411337032914, -3.766942609217949e-05, -0.00034707720624282956, -4.95898348162882e-05, -0.0006911749369464815, -0.13984660804271698, -0.00026520551182329655, -0.011216796934604645, -0.7767738699913025, -0.10342374444007874, -0.5998041033744812, -1.597391747054644e-05, -0.029651012271642685, -5.006664650863968e-05, -4.529942543740617e-06, -0.004183589015156031, -0.07559476047754288, -0.007582218386232853, -0.007921588607132435, -0.1460365504026413, -0.00020454221521504223, -1.4612321853637695, -0.00043132537393830717, -5.1377883210079744e-05, -0.0011735226726159453, -9.536288416711614e-05, 0.0, -0.00027366707217879593, -0.3927654027938843, -0.00028379703871905804, -0.00014888131408952177, -4.541770613286644e-05, -0.17876702547073364, -0.012288101948797703, -0.003088349476456642, -0.00038246947224251926, -0.604707658290863, -0.0002768848498817533, -0.12785780429840088, -0.0010545651894062757, -0.0007353700930252671, -2.753696753643453e-05, -1.4305104514278355e-06, -0.0002563863235991448, -0.00034350217902101576, -5.006777428206988e-06, -3.3378546504536644e-06, -0.15530195832252502, -0.0001720042055239901, -1.07287787614041e-05, -9.536738616588991e-07, -5.245071224635467e-05, -0.03246314451098442, -0.0009291622554883361, -1.0251946150674485e-05, 0.0, -7.033323527139146e-06, -0.0012301980750635266, -0.010787032544612885, -0.0062430123798549175, -0.001210552523843944, -1.4831876754760742, -0.0031463427003473043, -0.20727777481079102, -3.0554418563842773, -0.1331396847963333, -0.48726534843444824, -0.484919011592865, -0.29654815793037415, -0.4904392659664154, -0.005361226387321949, -0.2493179589509964, -0.004661882296204567, -0.45733872056007385, -0.0030490122735500336, -0.00018809456378221512, -0.03852282837033272, -1.7881377516459906e-06, -0.00015007323236204684, -0.0017838055500760674, -0.02408437803387642, -0.0010442048078402877, -0.00045170116936787963, -0.008258952759206295, -7.033323527139146e-06, -0.0020360471680760384, -3.576272320060525e-06, -1.0728830375228426e-06, -0.00019560330838430673, -0.005043047480285168, -0.008045408874750137, -0.00369010167196393, -0.5705310106277466, -0.1874227374792099, -0.6838985681533813, -0.01921188086271286, -1.5680816173553467, -0.2522064447402954, -0.00851382128894329, -0.04932607710361481, -0.00025054652360267937, -0.06570666283369064, -0.0005096090608276427, -0.13207267224788666, -0.0001463782973587513, -2.0629568099975586, -0.000809699238743633, -1.5866906642913818, -0.0205827746540308, -0.06068374961614609, -1.809442400932312, -0.025146296247839928, -1.9121284484863281, -0.005584117025136948, -8.940656698541716e-06, -0.0021381154656410217, -0.00012718822108581662, -1.0251946150674485e-05, -0.011857384815812111, -0.6613649725914001, -0.000444551813416183, -0.06966853141784668, -2.448310613632202, -0.9579575657844543, -0.06510324031114578, -1.1786279678344727, -0.10187944024801254, -1.8849260807037354, -0.024559879675507545, -0.013917540200054646, -0.011787524446845055, -0.0029859028290957212, -0.04415600746870041, -0.00012408917245920748, -0.061399489641189575, -3.3378546504536644e-06, -0.0010593285551294684, -0.00041368984966538846, -0.0023260461166501045, -1.549708758830093e-05, -1.0251946150674485e-05, -4.6491513785440475e-06, -2.002696055569686e-05, -0.02213580161333084, -0.0009459549910388887, -8.451581379631534e-05, -4.1483970562694594e-05, -7.235741941258311e-05, -1.7881377516459906e-06, -5.006777428206988e-06], "finish_reason": "length"}], "metrics": {"energy": 872.2050228176116, "energy_per_token": 3.4070508703812954, "time": 22.279303, "time_per_token": 0.08702852734375}}
{"outputs": [{"text": "file_hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.sha256(f.read()).hexdigest()\n                file_hashes[file_path] = file_hash\n\n    hashes_json = json.dumps(file_hashes, indent=4)\n    json_path = Path(directory, 'hashes.json')\n    json_path.write_text(hashes_json)\n\n    return json_path.resolve()", "tokens": ["file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "has", "hes", "_", "json", " =", " json", ".", "d", "umps", "(", "file", "_", "has", "hes", ",", " indent", "=", "4", ")", "\n", "    ", "json", "_", "path", " =", " Path", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "    ", "json", "_", "path", ".", "write", "_", "text", "(", "has", "hes", "_", "json", ")", "\n", "\n", "    ", "return", " json", "_", "path", ".", "resolve", "()", "\n", "\n", "def"], "logprobs": [-2.964351177215576, -0.045262690633535385, -0.32151180505752563, -0.00026842328952625394, -0.010258801281452179, -0.03656819462776184, -0.057664863765239716, -0.4458991587162018, -0.19056640565395355, -0.3845301866531372, -0.003123288508504629, -0.29682913422584534, -5.5549986427649856e-05, -5.769562994828448e-05, -0.003078485606238246, -0.0003457663697190583, -0.00048303857329301536, -1.6689160474925302e-05, -4.017272294731811e-05, -0.0002588890492916107, -0.004290898330509663, -0.005833979696035385, -0.0057972390204668045, -0.0032604176085442305, -0.028379296883940697, -0.16507171094417572, -0.031513746827840805, -0.00040797016117721796, -0.00021669900161214173, -0.0004605186404660344, -0.0007650309125892818, -0.15462495386600494, -0.04525425657629967, -0.003930107690393925, -0.0003359945258125663, -0.06621109694242477, -2.3841855067985307e-07, -4.1483970562694594e-05, -6.198863957251888e-06, -0.001755721983499825, -1.8596476365928538e-05, -0.0007072569569572806, -6.782778655178845e-05, -0.00041154498467221856, -9.083335316972807e-05, -0.0019342063460499048, -0.0028709645848721266, -0.37513962388038635, -0.00035661060246638954, -5.2927523938706145e-05, -0.0012190061388537288, -0.00016139635408762842, -9.536738616588991e-07, -0.0004120216181036085, -0.496928334236145, -0.0014721043407917023, -0.00024101213784888387, -4.637133679352701e-05, -0.07111036032438278, -0.009420112706720829, -0.0017678599106147885, -0.0004086851258762181, -0.3431715965270996, -0.00011657988943625242, -0.316346138715744, -0.0008937893435359001, -0.0003632839070633054, -1.2159273865108844e-05, -1.1920922133867862e-06, -0.0015453074593096972, -0.0006149308173917234, -5.722029527532868e-06, -1.0132738680113107e-05, -0.4944636821746826, -0.0002422039397060871, -1.966933996300213e-05, -1.7881377516459906e-06, -0.00010477947944309562, -0.01885315775871277, -0.00038723601028323174, -4.494089080253616e-05, 0.0, -2.0265373677830212e-05, -0.0017896364443004131, -0.2222227305173874, -0.035887815058231354, -0.00017808281700126827, -0.027857031673192978, -2.3841855067985307e-07, -0.003870259737595916, -0.038150086998939514, -0.08639074862003326, -0.0043069226667284966, -0.030601369217038155, -1.4781842764932662e-05, -0.006588522344827652, -1.156323378381785e-05, -2.7179348762729205e-05, -0.0010258655529469252, -0.8305954337120056, -0.0034085765946656466, -2.648099184036255, -1.3589766240329482e-05, -0.004982792306691408, -0.7401696443557739, -0.04545726999640465, -0.09323564916849136, -0.00018857131362892687, -0.00010144196130568162, -1.1920928244535389e-07, -0.0015374518698081374, -0.001176023157313466, -5.960462772236497e-07, -2.264974000354414e-06, -3.576278118089249e-07, -0.2616959810256958, -0.03680377081036568, -0.0012672259472310543, -0.1523938626050949, -0.09751638770103455, -0.003775018732994795, -0.20770478248596191, -0.7338481545448303, -0.0004563482361845672, -1.3854632377624512, -0.0015679220668971539, -0.46393951773643494, -0.016378367319703102, -0.02360469289124012, -0.9635531902313232, -0.07790834456682205, -0.002414408838376403, -3.2186455882765586e-06, -0.0005722792120650411, -0.0001399419124936685, -3.635817120084539e-05, -0.09659218043088913, -0.019540313631296158, -0.994522750377655, -0.00015400654228869826, -0.006333873141556978, -0.005200548563152552, -0.08782485127449036, -3.2305197237292305e-05, -0.00027021096320822835, -0.00010477947944309562, -0.0010409895330667496, 0.0, -5.960462772236497e-07, -4.768370445162873e-07, -0.09200122952461243, -0.007591209840029478, -0.6474993228912354, -0.0023166504688560963, -0.06380393356084824, -1.0905323028564453, -0.00015555603022221476, -0.00012218205665703863, -0.11910141259431839, -0.7286144495010376, -0.000942977552767843, -0.9927371740341187, -0.011914636008441448, -0.9577403664588928], "finish_reason": "stop"}], "metrics": {"energy": 555.1411841926567, "energy_per_token": 3.3850072206869313, "time": 14.081667, "time_per_token": 0.0858638231707317}}
{"outputs": [{"text": "hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                content = f.read()\n                hash = hashlib.sha256(content).hexdigest()\n                hashes[file_path] = hash\n    json_path = os.path.join(directory, \"hashes.json\")\n    with open(json_path, \"w\") as json_file:\n        json.dump(hashes, json_file)\n    return os.path.abspath(json_path)", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "content", " =", " f", ".", "read", "()", "\n", "                ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "\n", "    ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " \"", "w", "\"", ")", " as", " json", "_", "file", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " json", "_", "file", ")", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "json", "_", "path", ")", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -0.5124924778938293, -0.0014099667314440012, -0.30408358573913574, -0.00010609064338495955, -5.602679812000133e-05, -0.004596501123160124, -0.00040058218291960657, -0.0005068686441518366, -1.823885577323381e-05, -4.362964682513848e-05, -0.0002932118659373373, -0.004604214336723089, -0.006029867101460695, -0.005383636336773634, -0.003004919271916151, -0.020922431722283363, -0.196303591132164, -0.046081993728876114, -0.0005650115781463683, -0.00019071667338721454, -0.0005478549865074456, -0.0009255892946384847, -0.2963700294494629, -0.0500207357108593, -0.006147641688585281, -0.00018463814922142774, -0.047389961779117584, -2.3841855067985307e-07, -4.2199197196168825e-05, -6.198863957251888e-06, -0.002151795197278261, -1.8358061424805783e-05, -0.0010207447921857238, -0.00017045476124621928, -0.00032217081752605736, -0.00021705655672121793, -0.002317720791324973, -0.003888665698468685, -0.2549647390842438, -0.0003325386205688119, -4.029192859889008e-05, -0.0008717550663277507, -0.00011336160969221964, -3.576278118089249e-07, -0.0005465444410219789, -0.948051929473877, -0.0016747985500842333, -8.034383063204587e-05, -0.00012444675667211413, -1.3828182090946939e-05, -0.03894210234284401, -0.009902282617986202, -0.0013953244779258966, -0.0002454218047205359, -2.206501007080078, -0.02655482292175293, -0.0005544078885577619, -1.8954096958623268e-05, -2.50339189733495e-06, -8.463501580990851e-05, -0.0009552444680593908, -0.08612380921840668, -0.4617944359779358, -1.7504620552062988, -0.00039200251922011375, -7.390948667307384e-06, -1.7881377516459906e-06, -0.0006569849792867899, -0.0006100462633185089, -3.933898824470816e-06, -1.3112935448589269e-05, -0.038957349956035614, -0.0004146431456319988, -0.0001299296854995191, -0.009697825647890568, -0.0011204162146896124, -3.290122185717337e-05, 0.0, -1.811964830267243e-05, -0.0037265634164214134, -0.08578896522521973, -0.11047530919313431, -3.576272320060525e-06, -0.0020277192816138268, -0.060259804129600525, -0.08473765105009079, -3.361645576660521e-05, -0.03527141734957695, -1.4781842764932662e-05, -0.008673377335071564, -0.0009582218481227756, -0.40434175729751587, -0.20276100933551788, -0.0058569712564349174, -1.4391705989837646, -0.001206504413858056, -0.6032695174217224, -2.109982233378105e-05, -8.105902816168964e-05, -1.6093124941107817e-05, -0.036320146173238754, -0.0003404037852305919, -0.029888108372688293, -0.0006227937992662191, -0.05188974738121033, -0.004308347124606371, -3.933898824470816e-06, -0.0004638549580704421, -8.928377064876258e-05, -1.0013530300057027e-05, -4.2676016164477915e-05, -0.002336869016289711, -0.0018380667315796018, -0.03690028190612793, -0.0022964314557611942, -0.00016664070426486433, -0.0012981806648895144, -2.932505594799295e-05, -7.617183291586116e-05, -0.0004159538948442787, -0.007969959639012814, -0.0009631047723814845, -0.0024081061128526926, -0.008054041303694248, -1.8358061424805783e-05, -1.7664272785186768, -0.006349153816699982, -0.019290227442979813, -0.0001793938863556832, -0.00033790123416110873, -0.0007622911944054067, -0.001374134561046958, -0.005927602760493755, -6.794906312279636e-06, -0.0008772339206188917, -0.0010794533882290125, 0.0, -5.602679812000133e-05, -0.00014327930693980306, -2.407998726994265e-05, -1.1801649634435307e-05, -0.16284732520580292, -0.00035577642847783864, -0.020225828513503075, -0.03219179809093475, -0.5494568943977356, -5.817244164063595e-05, -5.6265202147187665e-05, -2.6702524337451905e-05, -0.008087269961833954, -3.015949550899677e-05, -1.7881377516459906e-06, -0.00018165845540352166, -0.001742631895467639, -3.6954195820726454e-05, -0.007556190248578787, -0.044668689370155334, -0.01641390100121498, -0.030681373551487923, -0.6654332280158997], "finish_reason": "stop"}], "metrics": {"energy": 565.603803159714, "energy_per_token": 3.38684912071685, "time": 14.305173, "time_per_token": 0.08565971856287426}}
{"outputs": [{"text": "# Initialize empty dictionary to hold hash values\n    hash_dict = {}\n\n    # Iterate through each file in directory and all subdirectories\n    for root, dirs, files in os.walk(directory):\n        for name in files:\n            # Create absolute path to file\n            file_path = os.path.join(root, name)\n\n            # Calculate SHA256 hash value\n            with open(file_path, 'rb') as f:\n                file_hash = hashlib.sha256()\n                while chunk := f.read(8192):\n                    file_hash.update(chunk)\n\n            # Add hash value to dictionary along with absolute path to file\n            hash_dict[file_path] = file_hash.hexdigest()\n\n    # Create absolute path to output JSON file\n    output_path = os.path.join(directory, 'hashes.json')\n\n    # Convert hash dictionary to JSON file\n    with open(output_path, 'w') as f:\n        json.dump(hash_dict, f, indent=4)\n\n    # Return absolute", "tokens": ["#", " Initialize", " empty", " dictionary", " to", " hold", " hash", " values", "\n", "    ", "hash", "_", "dict", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " file", " in", " directory", " and", " all", " sub", "direct", "ories", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " name", " in", " files", ":", "\n", "            ", "#", " Create", " absolute", " path", " to", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " name", ")", "\n", "\n", "            ", "#", " Calculate", " SH", "A", "2", "5", "6", " hash", " value", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "                ", "while", " chunk", " :=", " f", ".", "read", "(", "8", "1", "9", "2", "):", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "#", " Add", " hash", " value", " to", " dictionary", " along", " with", " absolute", " path", " to", " file", "\n", "            ", "hash", "_", "dict", "[", "file", "_", "path", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " Create", " absolute", " path", " to", " output", " JSON", " file", "\n", "    ", "output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "\n", "    ", "#", " Convert", " hash", " dictionary", " to", " JSON", " file", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "#", " Return", " absolute"], "logprobs": [-1.5498919486999512, -1.2209877967834473, -2.5185012817382812, -0.14037375152111053, -0.4394923746585846, -2.2086384296417236, -3.2073092460632324, -0.2552611529827118, -0.3665226697921753, -0.000773369160015136, -0.7888606786727905, -0.01992730237543583, -0.2785850763320923, -0.020087268203496933, -0.02028563991189003, -0.002340436913073063, -0.26306813955307007, -0.00042763148667290807, -0.00841500237584114, -1.1755986213684082, -0.0024183334317058325, -0.8446618318557739, -3.4273455142974854, -0.08881184458732605, -0.1584954708814621, -2.574507713317871, -0.1285034716129303, -2.897514581680298, -0.18284687399864197, -0.03929586708545685, -5.340433563105762e-05, -0.09157773852348328, -0.0002138386043952778, -0.029229100793600082, -0.8253477215766907, -0.004217658657580614, -0.39109426736831665, -0.00018439977429807186, -8.034383063204587e-05, -0.003150858450680971, -0.0004300146538298577, -0.0006189814303070307, -0.00011181206355104223, -3.4689302992774174e-05, -0.0003763920976780355, -0.0062356675043702126, -0.007837851531803608, -0.00368760759010911, -0.008597029373049736, -0.08310934901237488, -2.6124656200408936, -0.000683074293192476, -0.0005496421363204718, -0.0009108209051191807, -0.0019564551766961813, -0.008185411803424358, -0.1687447875738144, -2.1184768676757812, -1.0994458198547363, -0.08023562282323837, -0.6211689710617065, -0.09088882803916931, -0.1743014007806778, -0.00012230125139467418, -0.19728714227676392, -0.197967067360878, -0.009496869519352913, -0.0005567907355725765, -0.050334446132183075, -5.960462772236497e-07, -2.586808113846928e-05, -2.264974000354414e-06, -0.03189508989453316, -1.847726889536716e-05, -0.006945395842194557, -4.160317621426657e-05, -0.0010789770167320967, -3.0040289857424796e-05, -0.002428798470646143, -0.26704248785972595, -0.000750736624468118, -0.02877596952021122, -0.9611701965332031, -0.4595898687839508, -2.8490614567999728e-05, -0.025827864184975624, -0.00017593742813915014, -3.2305197237292305e-05, -0.015726236626505852, -1.113429069519043, -2.052997350692749, -0.0002181292074965313, -0.9282981753349304, -0.0023497133515775204, -8.5588610090781e-05, -0.0014178233686834574, -1.3470558769768104e-05, 0.0, -0.0007265550084412098, -0.3341553509235382, -0.0009302341495640576, -0.00024029705673456192, -5.757642793469131e-05, -0.1772075742483139, -0.021744534373283386, -0.003072305815294385, -0.0005776405450887978, -1.5042805671691895, -0.002474581589922309, -0.27731943130493164, -0.0036640907637774944, -0.0011511372867971659, -2.4199192921514623e-05, -2.50339189733495e-06, -0.0005488081369549036, -0.0006733057671226561, -1.1801649634435307e-05, -6.794906312279636e-06, -1.003656029701233, -0.011211609467864037, -0.0010481346398591995, -0.36947327852249146, -0.3710353970527649, -6.651657167822123e-05, -0.0003097769513260573, -8.821448318485636e-06, -4.529942543740617e-06, -0.005741177126765251, -0.5553491115570068, -0.003984489478170872, -0.0002195594133809209, -0.00026472879108041525, -0.002274665981531143, -0.04639511927962303, -5.1616290875244886e-05, -0.0007834940915927291, -0.002195450011640787, -2.264974000354414e-06, -1.7881377516459906e-06, -4.017272294731811e-05, -2.3841830625315197e-06, -4.911301948595792e-05, -8.165503095369786e-05, -0.0002661589242052287, -0.00012206286191940308, -0.3018854260444641, -0.036644961684942245, -0.0056832158006727695, -0.4431508481502533, -0.3065945506095886, -0.07971356064081192, -0.29356375336647034, -0.04270388185977936, -2.934744358062744, -0.00020692592079285532, -3.1554956436157227, -0.2474226951599121, -1.2378208637237549, -0.023624835535883904, -0.22217968106269836, -0.00032205163734033704, -0.012789134867489338, -2.455681169521995e-05, -0.0005750194541178644, -0.0064970930106937885, -0.0656755194067955, -8.22540732769994e-06, -0.09085018932819366, -0.006396534387022257, -4.625213477993384e-05, -0.0039054087828844786, -4.172316494077677e-06, -2.3841855067985307e-07, -0.0023637469857931137, -0.002414408838376403, -0.00014983485743869096, 0.0, -2.9682672902708873e-05, -0.0013637775555253029, -0.0049649993889033794, -0.010004849173128605, -0.0026553154457360506, -0.8732055425643921, -1.052146077156067, -0.007638176903128624, -0.308332234621048, -2.5587987899780273, -0.5887050032615662, -0.0009940688032656908, -0.17397519946098328, -0.0003762729174923152, -1.0679867267608643, -0.023034147918224335, -0.7587192058563232, -0.002458765869960189, -0.7581925392150879, -7.271502545336261e-05, -6.389413465512916e-05, -1.7881377516459906e-06, -0.22931049764156342, -0.0008738989708945155, -0.0780697762966156, -0.0006600823253393173, -0.12928377091884613, -0.00784116331487894, -4.172316494077677e-06, -0.0008836655179038644, -0.00012230125139467418, -4.0411134250462055e-05, -0.0005067494930699468, -0.043772805482149124, -0.0003262225945945829, -0.003153234953060746, -2.3383984565734863, -2.1865713596343994, -0.1848449558019638, -0.026933304965496063, -0.007841045036911964, -3.268928050994873, -0.07980205863714218, -9.643566590966657e-05, -0.040342219173908234, -0.001844849088229239, -0.0012260308722034097, -0.0017159751150757074, -5.960462772236497e-07, -1.311301275563892e-06, -0.0002714027068577707, -0.01955668069422245, -0.0019507441902533174, -0.022559436038136482, -2.0861407392658293e-05, -0.17813774943351746, -0.0027598170563578606, -0.00019262365822214633, -0.0007213136414065957, -0.013936232775449753, -0.0002936885575763881, -1.0728830375228426e-06, -0.00030012393835932016, -0.0002933310461230576, -1.7881377516459906e-06, -2.0265558760002023e-06, -8.999896090244874e-05, -0.0001003691868390888, -1.5806608200073242, -0.018275097012519836, -0.004961559548974037, -0.12299472093582153, -0.02508247271180153, -0.0006376855308189988, -0.011145712807774544, -0.0015791100449860096, -0.3672989010810852, -0.06236249953508377, -0.07082808762788773], "finish_reason": "length"}], "metrics": {"energy": 882.8167746009831, "energy_per_token": 3.44850302578509, "time": 22.071869, "time_per_token": 0.08621823828125}}
{"outputs": [{"text": "hashes = {}\n    for current_dir, directories, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(current_dir, file_name)\n            with open(file_path, 'rb') as file:\n                content = file.read()\n                hash_ = hashlib.sha256(content).hexdigest()\n                hashes[file_path] = hash_\n    json_path = os.path.join(directory, 'hashes.json')\n    with open(json_path, 'w') as json_file:\n        json.dump(hashes, json_file)\n    return json_path", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " current", "_", "dir", ",", " directories", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "current", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "content", " =", " file", ".", "read", "()", "\n", "                ", "hash", "_", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "\n", "    ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " '", "w", "')", " as", " json", "_", "file", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " json", "_", "file", ")", "\n", "    ", "return", " json", "_", "path", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -3.2759926319122314, -0.025194421410560608, -0.15888920426368713, -0.009225006215274334, -1.9396312236785889, -0.005173983983695507, -0.21627146005630493, -0.0020960045512765646, -0.0007189311436377466, -1.5020257706055418e-05, -3.290122185717337e-05, -0.00021920185827184469, -0.006499817129224539, -0.004966778680682182, -0.011128028854727745, -0.003792951349169016, -0.03806241601705551, -0.13749437034130096, -1.341784119606018, -0.02772868424654007, -0.0003250309091527015, -0.0004615910293068737, -0.00040737437666393816, -0.0010787388309836388, -0.0009298768127337098, -0.25343820452690125, -0.015140961855649948, -0.004662950057536364, -0.0005756151513196528, -0.14987348020076752, -8.344646857949556e-07, -3.2066785934148356e-05, -6.556489552167477e-06, -0.0024528198409825563, -1.6689160474925302e-05, -0.005494136828929186, -5.960462772236497e-07, -5.960462772236497e-07, -0.0002337421028641984, -0.0005153281381353736, -2.622600959512056e-06, -3.576278118089249e-07, -4.1483970562694594e-05, -0.0020674539264291525, -0.006111031398177147, -0.3936954736709595, -0.0004887578543275595, -6.48477507638745e-05, -0.0017551269847899675, -2.50339189733495e-06, -8.654219709569588e-05, -0.0008555566309951246, -0.6245375275611877, -0.0051343729719519615, -0.0001586549769854173, -5.8410845667822286e-05, -0.9973982572555542, -0.015601368620991707, -0.0015260252403095365, -0.0003579214389901608, -1.3810901641845703, -0.026606246829032898, -0.0005137792322784662, -5.9602869441732764e-05, -5.960446742392378e-06, -0.00012659224739763886, -0.0009055804111994803, -0.025930320844054222, -0.34042784571647644, -0.06073524057865143, -3.0929200649261475, -0.0003700763627421111, -4.8636207793606445e-05, -2.0265558760002023e-06, -0.0023558977991342545, -0.0011995985405519605, -1.2636104656849056e-05, -1.9311717551317997e-05, -0.09494654834270477, -0.00044586253352463245, -0.00013398226292338222, -0.07165146619081497, -0.0019363479223102331, -4.076874756719917e-05, 0.0, -2.539125671319198e-05, -0.005773060489445925, -0.05154063552618027, -0.1221197247505188, -1.7881377516459906e-06, -0.005492358468472958, -0.03509095683693886, -0.0024903970770537853, -0.02458186447620392, -0.055424369871616364, -1.9550132492440753e-05, -0.01201134268194437, -9.357491217087954e-05, -0.0012819890398532152, -0.4433496594429016, -0.1559423953294754, -0.004929650574922562, -1.6473866701126099, -0.002169875893741846, -1.5069856643676758, -8.165503095369786e-05, -0.0002456601650919765, -1.728519782773219e-05, -0.06604740768671036, -0.0008978387922979891, -0.034205228090286255, -0.0006945105269551277, -0.1107521578669548, -0.005169951822608709, -6.9141146923357155e-06, -0.0006731866160407662, -8.618460560683161e-05, -3.862306402879767e-05, -0.0025056179147213697, -0.0027707540430128574, -0.05701817572116852, -0.002391575602814555, -0.001764646964147687, -0.0025613855104893446, -5.113947918289341e-05, -7.83174327807501e-05, -0.000534868217073381, -0.021285781636834145, -0.0020769708789885044, -0.018153121694922447, -5.280832192511298e-05, -0.4016457498073578, -0.0030286891851574183, -0.006739859934896231, -0.0004295380203984678, -0.0005075835506431758, -0.001116010476835072, -0.0015870844945311546, -0.005161531735211611, -7.748573807475623e-06, -0.0013223483692854643, -0.0007439468172378838, -1.1920928244535389e-07, -9.405170567333698e-05, -0.00014649749209638685, -1.5139465176616795e-05, -1.0847986231965479e-05, -0.17201286554336548, -0.000601349223870784, -0.023482436314225197, -0.03264938294887543, -0.8414839506149292, -0.0004107108688913286, -0.0013246104354038835, -0.02746126987040043, -0.015401712618768215, -0.5523441433906555], "finish_reason": "stop"}], "metrics": {"energy": 587.076251081466, "energy_per_token": 3.579733238301622, "time": 14.094845, "time_per_token": 0.08594417682926829}}
{"outputs": [{"text": "path = Path(directory)\n    hashes = []\n    for file in path.glob('**/*'):\n        if file.is_file():\n            with open(file, 'rb') as f:\n                hashes.append((file.stem, hashlib.sha256(f.read()).hexdigest()))\n    json_file = json.dumps(hashes)\n    json_path = os.path.join(path, 'hashes.json')\n    with open(json_path, 'w') as f:\n        json.dump(hashes, f)\n    return json_path", "tokens": ["path", " =", " Path", "(", "directory", ")", "\n", "    ", "has", "hes", " =", " []", "\n", "    ", "for", " file", " in", " path", ".", "glob", "('", "**", "/*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "():", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "has", "hes", ".", "append", "((", "file", ".", "stem", ",", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()))", "\n", "    ", "json", "_", "file", " =", " json", ".", "d", "umps", "(", "has", "hes", ")", "\n", "    ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "has", "hes", ".", "json", "')", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " json", "_", "path", "\n", "\n", "def"], "logprobs": [-3.209817409515381, -0.20244210958480835, -0.062127940356731415, -0.011307441629469395, -0.019865015521645546, -0.005534919444471598, -0.16887569427490234, -0.14464904367923737, -0.72452312707901, -0.001608150894753635, -0.1645783632993698, -2.8419382572174072, -0.03385714441537857, -0.3463241159915924, -0.0784580260515213, -0.7812961339950562, -0.29309773445129395, -0.11063498258590698, -4.756337511935271e-05, -1.0415600538253784, -0.4727379083633423, -0.007923835888504982, -0.006443084217607975, -0.0376860536634922, -0.00018082413589581847, -0.012924473732709885, -0.006906209979206324, -0.10131081938743591, -0.11108183860778809, -0.0004226268210913986, -0.00712804589420557, -1.3470558769768104e-05, -0.020597372204065323, -0.049984678626060486, -0.0061847250908613205, -0.002462095348164439, -0.6300166845321655, -0.31180667877197266, -0.00044145373976789415, -0.022904830053448677, -0.03794294595718384, -0.17394383251667023, -0.010718748904764652, -0.000578474544454366, -2.52720492426306e-05, -0.06609538942575455, -0.02463548444211483, -0.0023199806455522776, -0.0006672301678918302, -1.655006766319275, -0.041459646075963974, -0.0015381659613922238, -0.00037865620106458664, -1.9298211336135864, -0.2605797350406647, -0.123221755027771, -2.6861395835876465, -0.00859064795076847, -0.040345996618270874, -0.00024434918304905295, -1.2159273865108844e-05, -0.007280722260475159, -0.0012287693098187447, -1.490105023549404e-05, -9.179073458653875e-06, -0.0004183370911050588, -0.0014336556196212769, -7.009260298218578e-05, -1.0609570381348021e-05, -0.0016069606645032763, -7.211902266135439e-05, -0.0010022860951721668, -0.00012587709352374077, 0.0, -0.008975044824182987, -0.005256996490061283, -0.38461241126060486, -1.3894801139831543, -0.13619129359722137, -0.36289113759994507, -0.018462007865309715, -2.732318639755249, -0.0008829509024508297, -0.040989942848682404, -5.125986263010418e-06, -0.05878918990492821, -0.15251770615577698, -2.3841855067985307e-07, -0.3462548851966858, -0.006919350940734148, -0.02484063059091568, -3.106747627258301, -0.04802529886364937, -0.28431904315948486, -0.0025805288460105658, -2.0717928409576416, -0.00016842853801790625, -0.0020201054867357016, -0.00010191874753218144, -0.04388895630836487, -0.002082324121147394, -1.093078374862671, -0.057768385857343674, -0.10469827055931091, -0.0055014872923493385, -1.9907753085135482e-05, -0.0011267272057011724, -0.00022909401741344482, -9.226373367710039e-05, -0.003288577776402235, -0.005003431346267462, -0.021432694047689438, -0.0010249129263684154, -0.0051087550818920135, -0.002404895145446062, -2.0503786799963564e-05, -0.0015610187547281384, -0.0006890306831337512, -0.044466886669397354, -0.008450583554804325, -0.01233378890901804, -0.00022706791060045362, -0.12163681536912918, -0.01057402789592743, -0.0009274948388338089, -0.001954194623976946, -2.499835729598999, -0.002001189161092043, -3.397406908334233e-05, -0.003878809744492173, -0.5029265880584717, 0.0, -0.0002619877050165087, -0.0005614373367279768, -0.04386032000184059, -0.0006157647585496306, -0.022419564425945282, -0.05463458597660065, -0.17698119580745697, -0.002303091809153557, -0.02745813876390457, -0.10769757628440857, -0.028254956007003784, -0.9749785661697388], "finish_reason": "stop"}], "metrics": {"energy": 514.1883421039579, "energy_per_token": 3.5707523757219297, "time": 12.202407, "time_per_token": 0.0847389375}}
{"outputs": [{"text": "hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            with open(os.path.join(root, file), 'rb') as f:\n                data = f.read()\n                hash = hashlib.sha256(data).hexdigest()\n                hashes[file] = hash\n    json_file = Path(directory) / 'hashes.json'\n    with open(json_file, 'w') as f:\n        json.dump(hashes, f)\n    return str(json_file.absolute())", "tokens": ["has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "]", " =", " hash", "\n", "    ", "json", "_", "file", " =", " Path", "(", "directory", ")", " /", " '", "has", "hes", ".", "json", "'", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " str", "(", "json", "_", "file", ".", "absolute", "())", "\n", "\n", "def"], "logprobs": [-0.9272303581237793, -0.0008642514003440738, -0.16129590570926666, -0.045647140592336655, -0.12108471244573593, -0.31047913432121277, -0.18359126150608063, -0.5124924778938293, -0.0014099667314440012, -0.30408358573913574, -0.00010609064338495955, -5.602679812000133e-05, -0.004596501123160124, -0.00040058218291960657, -0.0005068686441518366, -1.823885577323381e-05, -4.362964682513848e-05, -0.0002932118659373373, -0.004604214336723089, -0.006029867101460695, -0.005383636336773634, -0.003004919271916151, -0.020922431722283363, -0.196303591132164, -0.046081993728876114, -0.0005650115781463683, -0.00019071667338721454, -0.0005478549865074456, -0.0009255892946384847, -2.508244037628174, -0.0006605588714592159, -0.00024232311989180744, -0.014137239195406437, -8.344646857949556e-07, -3.886147169396281e-05, -1.1920922133867862e-06, -8.964136941358447e-05, -1.6093124941107817e-05, -0.0017720249015837908, -3.135155202471651e-05, -0.0010755236726254225, -0.0031502642668783665, -4.327203714638017e-05, -0.4406757652759552, -0.0030898945406079292, -0.0003381395654287189, -1.6927575416048057e-05, -0.043251559138298035, -0.007790183648467064, -0.001050516264513135, -0.00038235029205679893, -2.225055694580078, -0.0037762064021080732, -0.0023104657884687185, -4.4225667807040736e-05, -4.291525328881107e-06, -0.00043072958942502737, -0.0019621660467237234, -0.035567354410886765, -0.4991166591644287, -0.8872057199478149, -0.0004967409186065197, -9.059865078597795e-06, -1.5497195136049413e-06, -0.0010004997020587325, -0.0006755692302249372, -6.556489552167477e-06, -1.2516897186287679e-05, -0.03442293405532837, -0.0005663221818394959, -0.00022504181833937764, -0.005213119555264711, -0.001958953682333231, -2.884823152271565e-05, 0.0, -3.1709168979432434e-05, -0.0031742684077471495, -0.08785498142242432, -0.30949321389198303, -1.2278481335670222e-05, -0.009723443537950516, -0.5340605974197388, -0.0022840620949864388, -4.708655978902243e-05, -0.03789519891142845, -0.002013562014326453, -0.5258913636207581, -0.578602135181427, -0.03202475234866142, -0.3071795403957367, -0.01467740535736084, -1.4231986999511719, -0.01709863170981407, -0.021784542128443718, -0.47468289732933044, -0.06436756998300552, -0.1105022057890892, -0.0032020746730268, -5.960446742392378e-06, -0.0004209585895296186, -0.0001445904199499637, -2.2172682292875834e-05, -0.0032743194606155157, -0.0012660353677347302, -0.05247969925403595, -0.10234002023935318, -0.0017742858035489917, -0.006349035073071718, -0.00011085849109804258, -9.536738616588991e-07, -0.0049674902111291885, -0.010094542056322098, -0.0016755126416683197, -0.012967425398528576, -4.494089080253616e-05, -0.027194248512387276, -0.0041783656924963, -0.0004637358069885522, -0.0007173825288191438, -0.006176550406962633, -0.00013600854435935616, -9.65590606938349e-06, -0.0014416311169043183, -0.0005169962532818317, 0.0, -4.815939246327616e-05, -9.393251093570143e-05, -0.15843819081783295, -0.0003084660565946251, -0.018846256658434868, -0.021724704653024673, -0.409887433052063, -0.00021765247220173478, -0.005958176217973232, -6.639736966462806e-05, -1.9073468138230965e-06, -0.05408938229084015, -0.5109061598777771, -0.0002748588449321687, -0.2030906230211258, -0.03399277478456497, -0.897175133228302], "finish_reason": "stop"}], "metrics": {"energy": 487.86148801612853, "energy_per_token": 3.435644281803722, "time": 11.992185, "time_per_token": 0.08445200704225352}}
{"outputs": [{"text": "path = Path(directory)\n    hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            with open(Path(root, file), \"rb\") as f:\n                hash = hashlib.sha256(f.read()).hexdigest()\n                hashes[file] = hash\n    json_file = Path(path, \"hashes.json\")\n    with open(json_file, \"w\") as f:\n        json.dump(hashes, f)\n    return str(json_file.resolve())", "tokens": ["path", " =", " Path", "(", "directory", ")", "\n", "    ", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "with", " open", "(", "Path", "(", "root", ",", " file", ")", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "                ", "has", "hes", "[", "file", "]", " =", " hash", "\n", "    ", "json", "_", "file", " =", " Path", "(", "path", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " f", ")", "\n", "    ", "return", " str", "(", "json", "_", "file", ".", "resolve", "())", "\n", "\n", "def"], "logprobs": [-3.209817409515381, -0.20244210958480835, -0.062127940356731415, -0.011307441629469395, -0.019865015521645546, -0.005534919444471598, -0.16887569427490234, -0.14464904367923737, -0.72452312707901, -0.001608150894753635, -0.1645783632993698, -0.12810544669628143, -0.0472174771130085, -0.4351261854171753, -0.09757693856954575, -2.3226170539855957, -0.002258371328935027, -0.13458220660686493, -0.00020489977032411844, -0.00016664070426486433, -0.006517226807773113, -0.0007332258974201977, -0.00230202148668468, -2.5510462364763953e-05, -3.1470757676288486e-05, -0.0005625095800496638, -0.893825113773346, -0.010790099389851093, -0.008931566029787064, -0.003696990432217717, -0.07179893553256989, -0.16099119186401367, -0.09035956114530563, -0.001871978398412466, -0.00040880427695810795, -0.0004988856380805373, -0.0012725834967568517, -2.113734483718872, -0.0019142176024615765, -0.0006853376980870962, -3.051222562789917, -0.0058081429451704025, -0.022431105375289917, -0.8428095579147339, -0.019647274166345596, -0.007639833260327578, -0.005025611724704504, -0.9171313047409058, -0.0049838596023619175, -0.00027366707217879593, -0.00022623363474849612, -1.6569954823353328e-05, -0.06943423300981522, -0.027116749435663223, -0.005354705266654491, -0.0003197873884346336, -1.473775029182434, -0.37798523902893066, -0.0011305375955998898, -2.825220326485578e-05, -2.622600959512056e-06, -0.003685707226395607, -0.0008403107640333474, -5.483612312673358e-06, -1.3828182090946939e-05, -0.26964929699897766, -0.0008783058729022741, -3.302042750874534e-05, -2.0265558760002023e-06, -0.00016962042718660086, -0.02649712562561035, -0.0010844547068700194, -3.766942609217949e-05, 0.0, -4.6132929128361866e-05, -0.003995650913566351, -0.21611569821834564, -0.1429159939289093, -7.748573807475623e-06, -0.011920172721147537, -0.35674849152565, -0.00321752205491066, -6.210611172718927e-05, -0.028785698115825653, -0.0020342625211924314, -0.3212912976741791, -0.8461998105049133, -0.05298282206058502, -0.35126134753227234, -0.013022612780332565, -1.796295166015625, -0.005536934826523066, -0.5764694213867188, -0.06118253245949745, -0.245199054479599, -0.0060257199220359325, -7.390948667307384e-06, -0.0008038626983761787, -0.00023982033599168062, -7.748573807475623e-06, -8.248942322097719e-05, -0.05593254789710045, -0.0013168720761314034, -0.07197654992341995, -0.03573518618941307, -0.0002351722796447575, -0.007680764887481928, -0.000219321038457565, -5.125986263010418e-06, -0.0044078100472688675, -0.03983544558286667, -0.003907071426510811, -0.006727663800120354, -0.007707499898970127, -2.95634672511369e-05, -0.06088847294449806, -0.005582575686275959, -0.00042441420373506844, -0.0011252983240410686, -0.005255929194390774, -0.00018094333063345402, -1.7523612768854946e-05, -0.002121580531820655, -0.002223640214651823, 0.0, -0.00010013079008786008, -0.00014304091746453196, -0.17042656242847443, -0.0003856868715956807, -0.021496515721082687, -0.027941660955548286, -0.37241873145103455, -0.00012766500003635883, -0.017116092145442963, -8.642300235806033e-05, -6.437280717364047e-06, -0.10308292508125305, -1.2153379917144775, -0.004048248287290335, -0.21050924062728882, -0.027236243709921837, -0.9734101295471191], "finish_reason": "stop"}], "metrics": {"energy": 509.7504201259616, "energy_per_token": 3.589791691027899, "time": 11.986696, "time_per_token": 0.08441335211267606}}
{"outputs": [{"text": "file_hashes = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                file_content = f.read()\n                file_hash = hashlib.sha256(file_content).hexdigest()\n                file_hashes[file_path] = file_hash\n    json_file = os.path.join(directory, \"hashes.json\")\n    with open(json_file, \"w\") as f:\n        json.dump(file_hashes, f)\n    return os.path.abspath(json_file)", "tokens": ["file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "file", "_", "content", " =", " f", ".", "read", "()", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", "_", "content", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "has", "hes", ".", "json", "\"", ")", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " f", ")", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "json", "_", "file", ")", "\n", "\n", "#"], "logprobs": [-2.964351177215576, -0.045262690633535385, -0.32151180505752563, -0.00026842328952625394, -0.010258801281452179, -0.03656819462776184, -0.057664863765239716, -0.4458991587162018, -0.19056640565395355, -0.3845301866531372, -0.003123288508504629, -0.29682913422584534, -5.5549986427649856e-05, -5.769562994828448e-05, -0.003078485606238246, -0.0003457663697190583, -0.00048303857329301536, -1.6689160474925302e-05, -4.017272294731811e-05, -0.0002588890492916107, -0.004290898330509663, -0.005833979696035385, -0.0057972390204668045, -0.0032604176085442305, -0.028379296883940697, -0.16507171094417572, -0.031513746827840805, -0.00040797016117721796, -0.00021669900161214173, -0.0004605186404660344, -0.0007650309125892818, -0.15462495386600494, -0.04525425657629967, -0.003930107690393925, -0.0003359945258125663, -0.06621109694242477, -2.3841855067985307e-07, -4.1483970562694594e-05, -6.198863957251888e-06, -0.001755721983499825, -1.8596476365928538e-05, -0.0007072569569572806, -6.782778655178845e-05, -0.00041154498467221856, -9.083335316972807e-05, -0.0019342063460499048, -0.0028709645848721266, -0.37513962388038635, -0.00035661060246638954, -5.2927523938706145e-05, -0.0012190061388537288, -0.00016139635408762842, -9.536738616588991e-07, -0.0004120216181036085, -0.9469558000564575, -0.0020548435859382153, -7.366862701019272e-05, -0.00011014331539627165, -3.0517112463712692e-05, -0.06524351984262466, -0.010288181714713573, -0.001734658726491034, -0.0002797450579237193, -0.40599846839904785, -0.00014649749209638685, -2.789653778076172, -0.0015844660811126232, -0.00043823651503771544, -2.3483953555114567e-05, -2.50339189733495e-06, -0.00013052565918769687, -0.00048411093303002417, -0.04728899896144867, -0.1503760814666748, -5.1973900554003194e-05, -0.00902419164776802, -0.0018267625709995627, -0.0003620922507252544, -7.271740287251305e-06, -1.5497195136049413e-06, -0.000493762141559273, -0.0005734706646762788, -3.814689989667386e-06, -3.397406908334233e-05, -0.008706584572792053, -0.0007613382767885923, -3.099436753473128e-06, -2.6464111215318553e-05, -7.343022298300639e-05, -0.00541493808850646, -0.001122440560720861, -2.2649508537142538e-05, 0.0, -1.847726889536716e-05, -0.002852421021088958, -0.08288080990314484, -0.08154585212469101, -7.545663538621739e-05, -0.049871500581502914, -3.576278118089249e-07, -0.0025469979736953974, -0.03868546709418297, -0.09977015852928162, -0.008399044163525105, -0.043404754251241684, -9.775113539944869e-06, -0.009031043387949467, -6.794906312279636e-06, -8.583032467868179e-06, -0.0007740838918834925, -0.6045719385147095, -0.21364836394786835, -0.003446117974817753, -0.48743119835853577, -0.13072799146175385, -0.8106189370155334, -1.9550132492440753e-05, -5.531158240046352e-05, -7.986990567587782e-06, -0.02957150526344776, -0.0002603192115202546, -0.01639513671398163, -0.0004096384218428284, -0.049305424094200134, -0.00522035313770175, -1.9073468138230965e-06, -0.00044943721150048077, -0.00010585224663373083, -1.4543427823809907e-05, -3.111314072157256e-05, -0.0010887415846809745, -0.0011978124966844916, -0.014814368449151516, -0.0009577454766258597, -0.00011538793478393927, -0.0004924515378661454, -3.1709168979432434e-05, -1.4305104514278355e-06, -0.00017617580306250602, -0.01156978402286768, -0.0006831934442743659, -0.0013608013978227973, -0.006067902315407991, -1.2755313036905136e-05, -0.03299015760421753, -0.0011606630869209766, -0.0002926159941125661, -0.0004812512779608369, -0.005422763526439667, -0.0004773192631546408, -4.529942543740617e-06, -0.0002520958660170436, -0.0011157722910866141, -8.344646857949556e-07, -3.2186455882765586e-06, -1.1920928244535389e-07, -8.105902816168964e-05, -6.115249561844394e-05, -0.27891525626182556, -0.0003147821989841759, -0.019483964890241623, -0.022122276946902275, -1.0617702007293701, -8.749579137656838e-05, -6.067568756407127e-05, -2.90866428258596e-05, -0.008223128505051136, -3.540453326422721e-05, -2.50339189733495e-06, -0.00016378014697693288, -0.0011693552369251847, -0.00011538793478393927, -7.867782187531702e-06, -0.01785268820822239, -0.010338207706809044, -0.02814358100295067, -2.195406913757324], "finish_reason": "stop"}], "metrics": {"energy": 598.4577743396757, "energy_per_token": 3.38111736915071, "time": 15.143208, "time_per_token": 0.08555484745762712}}
{"outputs": [{"text": "# Get the absolute path of the given directory.\n    abs_dir = Path(directory).absolute()\n\n    # Initialize an empty dictionary to store the file names and their hashes.\n    hashes = {}\n\n    # Iterate over all files in the directory and its subdirectories.\n    for root, _, files in os.walk(directory):\n        for file in files:\n            # Get the absolute path of each file.\n            file_path = Path(root, file).absolute()\n\n            # Generate the hash for the current file.\n            file_hash = hashlib.sha256()\n            with open(file_path, 'rb') as f:\n                while True:\n                    # Read a chunk of data from the file.\n                    chunk = f.read(8192)\n                    if not chunk:\n                        # If we've read all data, break the loop.\n                        break\n                    # Update the hash with the current chunk.\n                    file_hash.update(chunk)\n\n            # Store the hash in the 'hashes' dictionary with the file name as the", "tokens": ["#", " Get", " the", " absolute", " path", " of", " the", " given", " directory", ".", "\n", "    ", "abs", "_", "dir", " =", " Path", "(", "directory", ")", ".", "absolute", "()", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " dictionary", " to", " store", " the", " file", " names", " and", " their", " has", "hes", ".", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " directory", " and", " its", " sub", "direct", "ories", ".", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Get", " the", " absolute", " path", " of", " each", " file", ".", "\n", "            ", "file", "_", "path", " =", " Path", "(", "root", ",", " file", ")", ".", "absolute", "()", "\n", "\n", "            ", "#", " Generate", " the", " hash", " for", " the", " current", " file", ".", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "while", " True", ":", "\n", "                ", "    ", "#", " Read", " a", " chunk", " of", " data", " from", " the", " file", ".", "\n", "                ", "    ", "chunk", " =", " f", ".", "read", "(", "8", "1", "9", "2", ")", "\n", "                ", "    ", "if", " not", " chunk", ":", "\n", "                ", "        ", "#", " If", " we", "'", "ve", " read", " all", " data", ",", " break", " the", " loop", ".", "\n", "                ", "        ", "break", "\n", "                ", "    ", "#", " Update", " the", " hash", " with", " the", " current", " chunk", ".", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "#", " Store", " the", " hash", " in", " the", " '", "has", "hes", "'", " dictionary", " with", " the", " file", " name", " as", " the"], "logprobs": [-1.5498919486999512, -2.5730977058410645, -0.4888995587825775, -0.1068887934088707, -0.06422369927167892, -0.09153411537408829, -0.011795418336987495, -1.356366515159607, -0.005970145110040903, -2.8393144607543945, -0.014409414492547512, -0.0005899119423702359, -0.9016762375831604, -0.0014631766825914383, -0.5293154716491699, -0.14801736176013947, -0.9764062762260437, -0.002533561550080776, -0.05575600638985634, -0.0006859333370812237, -0.01267355214804411, -1.7893989086151123, -0.0001714082609396428, -0.03971412777900696, -0.4571325480937958, -0.0004899493651464581, -0.01660444401204586, -0.9217920899391174, -0.35173603892326355, -0.0014948395546525717, -0.04336240515112877, -0.08949945867061615, -0.06918986886739731, -0.7028669714927673, -1.274784803390503, -3.0279486179351807, -0.021988876163959503, -0.6190167665481567, -0.3261587917804718, -0.0008914072532206774, -0.010907314717769623, -0.0010938619961962104, -0.00011419598013162613, -0.5738511681556702, -0.0004638549580704421, -0.18139272928237915, -0.05123976245522499, -0.0009848987683653831, -0.019077857956290245, -0.0001740304142003879, -0.006030104123055935, -0.9547027349472046, -0.0011180347064509988, -0.41026297211647034, -0.3299543857574463, -0.1569002866744995, -0.2714223265647888, -0.011783165857195854, -0.3360894024372101, -0.08746337890625, -0.03492842614650726, -0.0006759266252629459, -0.005378063768148422, -3.576278118089249e-07, -0.1897432804107666, -0.003222394036129117, -0.00027843413408845663, -0.0341198593378067, -1.0079773664474487, -0.00298816105350852, -0.9217249155044556, -0.016134176403284073, -0.03062969632446766, -0.0012366274604573846, -0.0004294188693165779, -0.0007017772295512259, -1.8715683836489916e-05, -0.00013398226292338222, -0.8643786907196045, -0.0047648693434894085, -0.0059130266308784485, -0.00994996726512909, -0.0850297063589096, -0.16745512187480927, -0.15359361469745636, -0.00037222131504677236, -1.4781842764932662e-05, -0.0004885195521637797, -0.011041494086384773, -0.07092814892530441, -1.24298095703125, -0.003677749540656805, -0.16687729954719543, -0.023257210850715637, -0.02282385155558586, -2.2690985202789307, -0.001334729720838368, -0.128874734044075, -0.0014234182890504599, -3.576214658096433e-05, -0.5038220286369324, -0.03526543080806732, -0.03643463924527168, -0.00027569307712838054, -0.45658040046691895, -0.0007412070408463478, -0.05666825920343399, -0.09540177136659622, -0.0033918251283466816, -0.00019202772818971425, -0.3390013575553894, -0.006584258750081062, -3.9219088648678735e-05, -0.0030277385376393795, -0.12721602618694305, -0.0005708495154976845, -0.0053148637525737286, -2.3235907554626465, -0.42670950293540955, -0.6393582224845886, -1.510265588760376, -0.07628677040338516, -1.414962649345398, -9.023735765367746e-05, -0.17366109788417816, -0.0008266131044365466, -0.00022146634000819176, -1.4145931005477905, -0.0009283285471610725, -0.0018640062771737576, -0.0013254437362775207, -0.41995787620544434, -0.07602529227733612, -1.6331539882230572e-05, -0.002579696709290147, -0.0007855190197005868, -3.6954811548639555e-06, -7.390948667307384e-06, -0.05038602277636528, -0.005709885619580746, -0.19938717782497406, -0.037879932671785355, -0.11356165260076523, -3.58813522325363e-05, -0.016722621396183968, -0.000713213172275573, -5.125986263010418e-06, -0.0010854073334485292, -0.6681897044181824, -0.0011628062929958105, -7.30726242181845e-05, -2.455681169521995e-05, -0.07557718455791473, -0.019748378545045853, -0.00221519498154521, -0.00036769305006600916, -1.588929295539856, -0.23131908476352692, -2.9802276912960224e-06, -0.0004901876673102379, -5.471556869451888e-05, -0.0002786724944598973, -3.204615354537964, -0.008009695447981358, -1.0190068483352661, -0.13026805222034454, -0.006514029111713171, -0.754006028175354, -0.1714833825826645, -0.002008327515795827, -0.0009070096421055496, -0.30580243468284607, -0.004023552872240543, -5.757642793469131e-05, -4.8636207793606445e-05, -0.630551278591156, -0.0007101159426383674, -9.727005090098828e-05, -2.622600959512056e-06, -2.145764938177308e-06, -0.0025345126632601023, -1.157718539237976, -0.007783678360283375, -0.000176652567461133, -0.0005501187406480312, -0.0028846340719610453, -0.03825817257165909, -0.09658536314964294, -7.629365427419543e-06, -0.31379956007003784, -0.0006360176485031843, -2.038458114839159e-05, -3.433168603805825e-05, -0.028133844956755638, -1.5139465176616795e-05, -0.0008114859228953719, -0.036393143236637115, -0.5911703109741211, -1.7527759075164795, -0.20198264718055725, -0.004544169642031193, -2.490468740463257, -0.31841984391212463, -1.6298398971557617, -0.9684619307518005, -0.04052115976810455, -0.7427636981010437, -0.0005312938592396677, -0.012829267419874668, -0.000613143783994019, -4.410734163684538e-06, -1.883488948806189e-05, -0.0004316828562878072, -4.029192859889008e-05, -0.024569418281316757, -0.0002796259068418294, -0.18698598444461823, -0.01692470908164978, -0.0010717130498960614, -0.14188739657402039, -0.1363140493631363, -0.012428454123437405, -1.2705631256103516, -0.002724508987739682, -0.6496175527572632, -0.00037472377880476415, -1.4066597032069694e-05, -0.00012587709352374077, -0.00020418466010596603, -3.4570634852570947e-06, -1.1920922133867862e-06, -6.067568756407127e-05, -1.9073468138230965e-06, -4.5536911784438416e-05, -0.00026592056383378804, -6.961580220377073e-05, -2.1934269170742482e-05, -0.03221534565091133, -0.021354980766773224, -0.001444607158191502, -1.5285714864730835, -0.002442355267703533, -0.9109614491462708, -0.7807796001434326, -0.010882197879254818, -1.6111265420913696, -0.002016774145886302, -1.0728830375228426e-06, -0.0003408804477658123, -0.0023783750366419554, -1.5020241737365723, -0.053601957857608795, -0.27020516991615295, -0.5907130837440491, -0.024700148031115532, -0.22385169565677643], "finish_reason": "length"}], "metrics": {"energy": 898.3835272321706, "energy_per_token": 3.5093106532506666, "time": 22.059801, "time_per_token": 0.08617109765625}}
{"outputs": [{"text": "hash_dict = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            with open(file_path, \"rb\") as f:\n                data = f.read()\n                file_hash = hashlib.sha256(data).hexdigest()\n                hash_dict[file_path] = file_hash\n\n    json_file = \"hashes.json\"\n    with open(json_file, \"w\") as f:\n        json.dump(hash_dict, f, indent=4)\n    return Path(json_file).absolute()", "tokens": ["hash", "_", "dict", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "hash", "_", "dict", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "\n", "    ", "json", "_", "file", " =", " \"", "has", "hes", ".", "json", "\"", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "hash", "_", "dict", ",", " f", ",", " indent", "=", "4", ")", "\n", "    ", "return", " Path", "(", "json", "_", "file", ")", ".", "absolute", "()", "\n", "\n", "def"], "logprobs": [-2.451821804046631, -0.04352083429694176, -0.22231684625148773, -0.01756797730922699, -0.029195409268140793, -0.05715294927358627, -0.2789844274520874, -0.18085862696170807, -0.4131407141685486, -0.003331707790493965, -0.26318156719207764, -0.0001399419124936685, -7.033100700937212e-05, -0.0051009273156523705, -0.00047100416850298643, -0.0005641775787808001, -2.038458114839159e-05, -3.683499380713329e-05, -0.00038020533975213766, -0.0034633437171578407, -0.006031407508999109, -0.011432021856307983, -0.0035532689653337, -0.02284051477909088, -0.15873543918132782, -0.0410996675491333, -0.0004065402317792177, -0.00033444532891735435, -0.00047159992391243577, -0.0010469438275322318, -0.29013562202453613, -0.05220309644937515, -0.00795399397611618, -0.00033098942367359996, -0.03494039922952652, -1.1920928244535389e-07, -4.160317621426657e-05, -2.3841830625315197e-06, -0.0015274535398930311, -1.811964830267243e-05, -0.0008363801171071827, -7.819823804311454e-05, -0.0007346553611569107, -0.0001551984460093081, -0.002043066080659628, -0.0038291718810796738, -0.3408847153186798, -0.00044907975825481117, -5.972207145532593e-05, -0.0011044599814340472, -0.00010287232726113871, -3.576278118089249e-07, -0.0005327236140146852, -1.032071828842163, -0.0027933409437537193, -0.0001546025014249608, -0.00020621081057470292, -2.6940935640595853e-05, -0.04963047429919243, -0.013244155794382095, -0.0017553649377077818, -0.00029404606902971864, -2.6187949180603027, -0.008182928897440434, -0.0014580582501366735, -1.2159273865108844e-05, -4.410734163684538e-06, -0.00040725519647821784, -0.0009773960337042809, -0.08494693040847778, -2.26503324508667, -0.005576530005782843, -0.004047655034810305, -0.0009712031460367143, -0.0008447177824564278, -2.5510462364763953e-05, -2.145764938177308e-06, -0.0008073169738054276, -0.0006914132391102612, -4.887569048150908e-06, -4.815939246327616e-05, -0.004594365134835243, -0.00033396866638213396, -0.0001358893496217206, -0.003827153006568551, -0.0016030330443754792, -4.9828242481453344e-05, 0.0, -2.4676019165781327e-05, -0.004404130857437849, -0.11313846707344055, -0.17311212420463562, -1.0132738680113107e-05, -0.0003518439189065248, -0.004493378102779388, -0.035659730434417725, -0.11149661988019943, -0.00569388410076499, -0.042622894048690796, -1.7165990357170813e-05, -0.0078497976064682, -1.0967194612021558e-05, -3.4570634852570947e-06, -0.0010425376240164042, -0.8938512802124023, -0.003417368046939373, -0.20913802087306976, -0.0009561972692608833, -0.4933133125305176, -0.10977943241596222, -2.289128303527832, -0.027889493852853775, -6.794906312279636e-06, -0.0010740946745499969, -0.0002575780963525176, -3.8980677345534787e-05, -0.0061109126545488834, -0.006387650966644287, -0.12834222614765167, -0.0029158953111618757, -0.00027998341829515994, -0.07029831409454346, -0.0008661571191623807, -8.22540732769994e-06, -0.00012540031457319856, -0.02107745222747326, -0.001077190856449306, -0.0012382942950353026, -0.012710629031062126, -4.529942543740617e-06, -0.029827363789081573, -0.003170703537762165, -0.0002847504511009902, -0.0006107610533945262, -0.004752530250698328, -0.000388665939681232, -9.894321920000948e-06, -0.0005007919971831143, -0.0004146431456319988, -4.6491513785440475e-06, -1.9073468138230965e-06, -6.05564855504781e-05, -5.686121585313231e-05, -1.6379343271255493, -0.01568962261080742, -0.001693839905783534, -0.12930335104465485, -0.018109455704689026, -0.0007521660882048309, -2.0779459476470947, -0.15009552240371704, -1.5181686878204346, -0.1328660398721695, -0.2323424071073532, -0.0004690977220889181, -1.2040065485052764e-05, -0.0005449955351650715, -0.01226702332496643, -0.7697221040725708, -0.0013994909822940826, -0.08361176401376724, -0.02737126499414444, -1.011807918548584], "finish_reason": "stop"}], "metrics": {"energy": 555.3613956451416, "energy_per_token": 3.40712512665731, "time": 13.881452, "time_per_token": 0.08516228220858896}}
{"outputs": [{"text": "file_hashes = {}\n    for root, _, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            hash_object = hashlib.sha256()\n            with open(file_path, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b''):\n                    hash_object.update(chunk)\n            file_hashes[file_path] = hash_object.hexdigest()\n\n    json_file = os.path.join(directory, 'hashes.json')\n    with open(json_file, 'w') as f:\n        json.dump(file_hashes, f, indent=4)\n\n    return json_file", "tokens": ["file", "_", "has", "hes", " =", " {}", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "hash", "_", "object", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "hash", "_", "object", ".", "update", "(", "chunk", ")", "\n", "            ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "json", ".", "dump", "(", "file", "_", "has", "hes", ",", " f", ",", " indent", "=", "4", ")", "\n", "\n", "    ", "return", " json", "_", "file", "\n", "\n", "def"], "logprobs": [-2.964351177215576, -0.045262690633535385, -0.32151180505752563, -0.00026842328952625394, -0.010258801281452179, -0.03656819462776184, -0.057664863765239716, -0.4458991587162018, -0.19056640565395355, -0.3845301866531372, -0.003123288508504629, -1.483890414237976, -0.019483614712953568, -0.029066307470202446, -0.0008399534272029996, -0.000442407006630674, -3.0517112463712692e-05, -2.3364747903542593e-05, -0.00016306500765495002, -0.0036855884827673435, -0.004299325868487358, -0.008039969019591808, -0.002476840978488326, -0.032290950417518616, -0.14610226452350616, -0.058335766196250916, -0.0004499138449318707, -3.790783375734463e-05, -0.0003738896339200437, -0.0006802152493037283, -0.20729966461658478, -0.04436357319355011, -0.004775665700435638, -0.00025614796322770417, -0.0793522298336029, -2.3841855067985307e-07, -4.970903682988137e-05, -5.364403477869928e-06, -0.006317052058875561, -1.2755313036905136e-05, -0.0006630606367252767, -6.985420623095706e-05, -0.0002874914789572358, -9.679325739853084e-05, -0.0016411182004958391, -0.003503258805721998, -3.274296522140503, -0.051858168095350266, -0.9605222940444946, -0.00022539935889653862, -0.000916537712328136, -0.00018285033002030104, -8.22540732769994e-06, -0.0022897711023688316, -0.0007737264968454838, -5.722029527532868e-06, -5.8412379075889476e-06, -0.007390184793621302, -0.0015698263887315989, -0.009242250584065914, -0.03696737810969353, -0.0007565735140815377, -3.5523738915799186e-05, -0.0008690156391821802, -0.00019488819816615433, -1.4305104514278355e-06, -0.0001147919538198039, -1.2543480396270752, -0.00014685506175737828, -0.00012981049076188356, -3.7431014789035544e-05, -0.29866254329681396, -0.01242080144584179, -0.0006007535266689956, -0.0002760506176855415, -0.40506139397621155, -0.032496377825737, -9.536697689327411e-06, -0.0033787565771490335, -2.6940935640595853e-05, -0.00019095504831057042, -0.0003680505615193397, -0.00022182388056535274, -1.7046782886609435e-05, -1.7881377516459906e-06, -0.0009752523037604988, -0.05719640851020813, -0.00015043080202303827, -0.00022206225548870862, -3.111314072157256e-05, -0.0005833592731505632, -3.6954195820726454e-05, -0.0010825494537129998, -0.12817560136318207, -1.3589766240329482e-05, -0.0028276958037167788, -4.3748852476710454e-05, -0.0003592322755139321, -0.00036459474358707666, -3.099436753473128e-06, -5.125986263010418e-06, -2.50339189733495e-06, -1.1920922133867862e-06, -1.8596476365928538e-05, -2.1219027985353023e-05, -6.258291978156194e-05, -0.0001677133986959234, -0.028143929317593575, -0.10536625236272812, -6.425174069590867e-05, -0.34052249789237976, -8.344646857949556e-07, -0.0020384264644235373, -0.033302683383226395, -0.09406368434429169, -4.887569048150908e-06, -0.02570541389286518, -6.556489552167477e-06, -0.0023551841732114553, -1.3470558769768104e-05, -3.814689989667386e-06, -0.00011240804451517761, -0.00048315772437490523, -9.179073458653875e-06, 0.0, -2.47952248173533e-05, -0.0015712546883150935, -0.9320940971374512, -0.0016445695655420423, -0.2228395640850067, -0.0004102342063561082, -0.4403912425041199, -0.09498752653598785, -0.5000632405281067, -1.2874520507466514e-05, -7.903263758635148e-05, -6.794906312279636e-06, -0.04620402306318283, -0.0006179092451930046, -0.017828332260251045, -0.0003190723655279726, -0.053223151713609695, -0.005288420710712671, -2.50339189733495e-06, -0.0002983363519888371, -9.738924563862383e-05, -2.074220174108632e-05, -0.001613387605175376, -0.009739617817103863, -0.01941218040883541, -0.0018555581336840987, -0.001046705641783774, -0.0005709686665795743, -1.0371154530730564e-05, -1.1920928244535389e-07, -0.00024125049822032452, -0.0060092490166425705, -0.0010973153403028846, -0.014681869186460972, -1.7523612768854946e-05, -0.022621087729930878, -0.0024846892338246107, -0.0003471963864285499, -0.0004909025738015771, -0.0058921691961586475, -0.0003232433518860489, -1.9073468138230965e-06, -0.0005453529884107411, -0.00036054308293387294, -1.6689286894688848e-06, -1.5497195136049413e-06, -7.152555099310121e-07, -7.92710343375802e-05, -4.2437604861333966e-05, -1.630049228668213, -0.006393928546458483, -0.0010446811793372035, -0.07969055324792862, -0.012590446509420872, -0.0008740180637687445, -0.18445594608783722, -0.0011104138102382421, -0.048623666167259216, -1.0099084377288818, -0.00863614957779646, -2.3245540432981215e-05, -0.027479827404022217, -0.008238380774855614, -0.6140548586845398], "finish_reason": "stop"}], "metrics": {"energy": 632.3352093734741, "energy_per_token": 3.3456889384839896, "time": 16.188618, "time_per_token": 0.0856540634920635}}
{"outputs": [{"text": "# Construct absolute path for the JSON file\n    json_path = os.path.join(os.path.abspath(directory), 'hashes.json')\n\n    # Create empty dictionary to store file hashes\n    hashes = {}\n\n    # Use pathlib to traverse directory structure\n    for file in Path(directory).rglob('*'):\n        if file.is_file():\n            # Read file content\n            with open(file, 'rb') as f:\n                content = f.read()\n\n            # Compute SHA256 hash\n            h = hashlib.sha256()\n            h.update(content)\n            sha256_hash = h.hexdigest()\n\n            # Add file hash to dictionary\n            hashes[file.absolute()] = sha256_hash\n\n    # Save file hashes in a JSON file\n    with open(json_path, 'w') as jf:\n        json.dump(hashes, jf)\n\n    # Return the absolute path of the JSON file containing the hashes\n    return json_path", "tokens": ["#", " Construct", " absolute", " path", " for", " the", " JSON", " file", "\n", "    ", "json", "_", "path", " =", " os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "ab", "sp", "ath", "(", "directory", ")", ",", " '", "has", "hes", ".", "json", "')", "\n", "\n", "    ", "#", " Create", " empty", " dictionary", " to", " store", " file", " has", "hes", "\n", "    ", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Use", " path", "lib", " to", " traverse", " directory", " structure", "\n", "    ", "for", " file", " in", " Path", "(", "directory", ")", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "file", "():", "\n", "            ", "#", " Read", " file", " content", "\n", "            ", "with", " open", "(", "file", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "content", " =", " f", ".", "read", "()", "\n", "\n", "            ", "#", " Compute", " SH", "A", "2", "5", "6", " hash", "\n", "            ", "h", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "h", ".", "update", "(", "content", ")", "\n", "            ", "sha", "2", "5", "6", "_", "hash", " =", " h", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Add", " file", " hash", " to", " dictionary", "\n", "            ", "has", "hes", "[", "file", ".", "absolute", "()", "]", " =", " sh", "a", "2", "5", "6", "_", "hash", "\n", "\n", "    ", "#", " Save", " file", " has", "hes", " in", " a", " JSON", " file", "\n", "    ", "with", " open", "(", "json", "_", "path", ",", " '", "w", "')", " as", " j", "f", ":", "\n", "        ", "json", ".", "dump", "(", "has", "hes", ",", " j", "f", ")", "\n", "\n", "    ", "#", " Return", " the", " absolute", " path", " of", " the", " JSON", " file", " containing", " the", " has", "hes", "\n", "    ", "return", " json", "_", "path", "\n", "\n", "if"], "logprobs": [-1.5498919486999512, -3.9522385597229004, -2.6668012142181396, -0.18079166114330292, -1.5619497299194336, -0.685075044631958, -1.586800456047058, -0.01723737269639969, -0.8398191332817078, -0.0016764646861702204, -0.40758582949638367, -0.0022401732858270407, -1.4155166149139404, -0.012302350252866745, -1.4740190505981445, -6.174850568640977e-05, -0.0004539651272352785, -7.557583012385294e-05, -0.6007132530212402, -0.0013518728082999587, -0.7308946847915649, -8.940656698541716e-06, -0.043425414711236954, -3.099436753473128e-06, -0.02662923000752926, -5.960462772236497e-07, -5.006777428206988e-06, -0.0008593680104240775, -0.017164958640933037, -0.0023894349578768015, -0.0004601611872203648, -0.6267468929290771, -0.003838909789919853, -3.2186455882765586e-06, -0.0009632238652557135, -9.989239333663136e-05, -0.00013445904187392443, -0.002605379093438387, -0.2782229483127594, -0.000406301929615438, -0.04177536815404892, -1.8429524898529053, -1.828173279762268, -0.10493163764476776, -0.363670289516449, -0.15891341865062714, -1.6563982963562012, -0.381867378950119, -6.675497570540756e-05, -0.023817269131541252, -8.415821503149346e-05, -0.5816284418106079, -0.0002451834443490952, -0.3215351700782776, -0.02993970923125744, -0.0008075552177615464, -0.025591431185603142, -0.0003502947511151433, -0.022858109325170517, -3.625735282897949, -3.5175814628601074, -0.0038088648580014706, -0.9793604016304016, -2.0916543006896973, -1.0030759572982788, -2.513477325439453, -0.6373378038406372, -0.0003399271226953715, -0.4206997752189636, -0.8327705264091492, -0.5151316523551941, -0.0020874394103884697, -0.0013331820955500007, -0.036267608404159546, -0.00018308870494365692, -2.7418097943154862e-06, -0.15162116289138794, -0.00011240804451517761, -0.17780190706253052, -0.014388146810233593, -0.005473626311868429, -5.5549986427649856e-05, -0.00925099104642868, -0.03827136754989624, -1.0283863544464111, -0.32576340436935425, -0.00046850196667946875, -0.0011177966371178627, -5.960446742392378e-06, -0.007700638845562935, -0.035310082137584686, -0.6472856402397156, -0.008962048217654228, -0.1674814373254776, -1.7105717658996582, -0.43708065152168274, -1.2668049335479736, -2.2724454402923584, -0.0002090712368953973, -0.32250261306762695, -0.23940147459506989, -0.00018380382971372455, -0.02717847004532814, -0.02990395948290825, -0.08813172578811646, -0.04781314730644226, -0.0005766874528490007, -3.099436753473128e-06, -0.10407087951898575, -0.04566149041056633, -0.0010786197381094098, -0.0005439232336357236, -0.48985108733177185, -0.004906637128442526, -0.00016723664884921163, -5.006777428206988e-06, -2.50339189733495e-06, -5.471556869451888e-05, -0.000972036796156317, -0.5400920510292053, -0.019392304122447968, -0.0006367324967868626, -1.7974343299865723, -0.5097638368606567, -4.0411134250462055e-05, -0.029136013239622116, -0.00014697425649501383, -4.0531076592742465e-06, -0.020890677347779274, -0.6502538323402405, -0.00015686711412854493, -1.653519868850708, -0.3465237617492676, -0.00012730741582345217, -2.3841830625315197e-06, -2.50339189733495e-06, -0.0006307758158072829, -0.0005410637822933495, -9.298280929215252e-06, -5.245195097813848e-06, -0.5083688497543335, -0.0022061550989747047, -0.0010988633148372173, -0.00035744477645494044, -1.6927575416048057e-05, -2.145764938177308e-06, -6.83045873302035e-05, -0.001665277755819261, -0.00030250742565840483, -0.00033623288618400693, -0.06622314453125, -2.140733003616333, -0.06755708903074265, -0.00013815402053296566, -2.8609820219571702e-05, -0.7705425024032593, -0.036395326256752014, -0.0017842815723270178, -0.0008286379743367434, -1.5139465176616795e-05, -0.007793732453137636, -1.1801649634435307e-05, 0.0, -1.8954096958623268e-05, -0.0023834886960685253, -0.01571931317448616, -0.000700466800481081, -0.005163785070180893, -0.8070142865180969, -0.8897531032562256, -0.6410744786262512, -0.023076551035046577, -0.12185846269130707, -0.05608629435300827, -0.00011503035057103261, -0.048141635954380035, -1.1920922133867862e-06, -0.01009064819663763, -0.5718080401420593, -0.04446973651647568, -2.0657763481140137, -6.389413465512916e-05, -0.05398593097925186, -3.3378044463461265e-05, -0.01825074851512909, -2.3841855067985307e-07, -6.556489552167477e-06, -2.9802276912960224e-06, -5.7338023907504976e-05, -3.6954811548639555e-06, -4.768370445162873e-07, -0.0014817459741607308, -0.006756910588592291, -0.0064048259519040585, -0.004481035750359297, -0.8409780263900757, -1.1846274137496948, -0.008516184985637665, -4.053033626405522e-05, -1.0075069665908813, -2.1155688762664795, -0.019213750958442688, -0.0063294898718595505, -0.06641067564487457, -0.0002008474839385599, -0.007180952932685614, -0.0005270045949146152, -0.0017777367029339075, -0.000592890428379178, -7.510157047363464e-06, -0.00012754580529872328, -0.00020990552729927003, -0.030885746702551842, -0.0024442579597234726, -0.03814595565199852, -2.8490614567999728e-05, -3.1575767993927, -1.069544792175293, -0.0004483648226596415, -0.00035613393993116915, -0.0015868464251980186, -0.02752598561346531, -0.0013159195659682155, -3.099436753473128e-06, -0.0019703751895576715, -0.0006051616510376334, 0.0, -8.463501580990851e-05, -0.0002858230145648122, -8.106198947643861e-06, -0.33416295051574707, -0.0006697318749502301, -0.021658213809132576, -0.0016449266113340855, -0.4841121435165405, -0.06302611529827118, -1.356935739517212, -0.09867782145738602, -0.007032285910099745, -0.0791114866733551, -0.01626308262348175, -0.02380935288965702, -0.0009142747730948031, -1.490767478942871, -0.1966712772846222, -0.08990105241537094, -0.0001113352773245424, -0.00855566281825304, -0.00027211778797209263, -0.0032501989044249058, -0.24790054559707642, -0.0010826685465872288, -0.0002623452164698392, -0.14811399579048157, -0.0215707179158926, -1.3245736360549927], "finish_reason": "stop"}], "metrics": {"energy": 917.1110324611661, "energy_per_token": 3.58246497055143, "time": 22.058376, "time_per_token": 0.08616553125}}
{"outputs": [{"text": "# Initialize a dictionary to store the file hashes\n    file_hashes = {}\n\n    # Iterate over the files in the directory and its subdirectories\n    for root, _, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n\n            # Ignore any files ending with \".json\" or are hidden\n            if file.endswith(\".json\") or file.startswith(\".\"):\n                continue\n\n            # Calculate the hash of the file\n            try:\n                with open(file_path, 'rb') as file:\n                    file_bytes = file.read()\n                    file_hash = hashlib.sha256(file_bytes).hexdigest()\n                    file_hashes[file_path] = file_hash\n            except Exception as e:\n                print(f\"Error calculating hash for file: {file_path} - {e}\")\n\n    # Save the hashes to a JSON file\n    json_file = os.path.join(directory, 'hashes", "tokens": ["#", " Initialize", " a", " dictionary", " to", " store", " the", " file", " has", "hes", "\n", "    ", "file", "_", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "\n", "            ", "#", " Ign", "ore", " any", " files", " ending", " with", " \"", ".", "json", "\"", " or", " are", " hidden", "\n", "            ", "if", " file", ".", "end", "sw", "ith", "(", "\"", ".", "json", "\"", ")", " or", " file", ".", "start", "sw", "ith", "(", "\"", ".", "\"", "):", "\n", "                ", "continue", "\n", "\n", "            ", "#", " Calculate", " the", " hash", " of", " the", " file", "\n", "            ", "try", ":", "\n", "                ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "    ", "file", "_", "bytes", " =", " file", ".", "read", "()", "\n", "                ", "    ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "(", "file", "_", "bytes", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "    ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "Error", " calculating", " hash", " for", " file", ":", " {", "file", "_", "path", "}", " -", " {", "e", "}\"", ")", "\n", "\n", "    ", "#", " Save", " the", " has", "hes", " to", " a", " JSON", " file", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes"], "logprobs": [-1.5498919486999512, -1.2209877967834473, -1.1382198333740234, -0.04985777661204338, -0.029304930940270424, -0.09396505355834961, -1.0515438318252563, -0.9493337869644165, -0.9525918364524841, -2.288792165927589e-05, -0.05989619717001915, -0.0006345880683511496, -0.5117933750152588, -0.0008962904685176909, -0.019515179097652435, -5.722029527532868e-06, -0.01927993819117546, -0.008304824121296406, -0.0013097288319841027, -0.07134215533733368, -0.0003106111544184387, -0.005597275216132402, -1.1676764488220215, -0.0006896263221278787, -0.4760532081127167, -1.127415418624878, -0.44106268882751465, -0.10836901515722275, -0.005982113536447287, -0.2631221115589142, -0.09954291582107544, -0.06368370354175568, -0.0005158047424629331, -0.011940079741179943, -2.622600959512056e-06, -0.06832560151815414, -0.00025722055579535663, -0.020106779411435127, -0.40922489762306213, -0.004338732920587063, -1.0190248489379883, -0.008963348343968391, -0.013819018378853798, -0.0006075443816371262, -0.00037651124875992537, -0.00013207517622504383, -2.4318398573086597e-05, -0.00012110930401831865, -0.0034079826436936855, -0.002563525689765811, -0.003546616993844509, -0.0034240209497511387, -0.028073806315660477, -0.15406429767608643, -0.10576795786619186, -0.00017951308109331876, -1.2636104656849056e-05, -0.00027104519540444016, -0.0022155519109219313, -1.802262544631958, -0.04901693016290665, -0.0024404525756835938, -0.00012289722508285195, -0.05880751088261604, -1.1920922133867862e-06, -5.209310256759636e-05, -2.264974000354414e-06, -0.0023378203622996807, -8.34461570775602e-06, -0.0005670370301231742, -2.8967437174287625e-05, -9.190614218823612e-05, -3.683499380713329e-05, -0.0032396235037595034, -0.5489508509635925, -0.0004978132783435285, -0.020098835229873657, -2.675302505493164, -0.0007689617923460901, -3.291360855102539, -0.689192533493042, -2.8351078033447266, -0.09712454676628113, -1.2559850215911865, -0.12452993541955948, -0.35511472821235657, -0.0006224363460205495, -2.6469645500183105, -3.065053939819336, -2.6827549934387207, -0.7566551566123962, -5.3881147323409095e-05, -0.009026199579238892, -0.4783742427825928, -0.3573988676071167, -0.006435977295041084, -3.576278118089249e-07, 0.0, -0.0969170406460762, -0.0005241450853645802, -0.0034734413493424654, -0.00030596344731748104, -1.0847986231965479e-05, -0.0018112935358658433, -0.00015400654228869826, -0.02556493692100048, -0.000902126485016197, -8.356221951544285e-05, -2.7418097943154862e-06, 0.0, -0.04568278789520264, -0.0014605579199269414, -0.00014876213390380144, -9.035655966727063e-05, -0.002904841210693121, -0.0011157722910866141, -0.00014506718434859067, -0.006923967972397804, -0.0006940339808352292, -0.0039727347902953625, -0.0004325169720686972, -0.055498238652944565, -0.932269275188446, -0.04306134581565857, -1.1932408809661865, -0.20220685005187988, -0.0192010048776865, -0.029866009950637817, -0.2585395574569702, -0.00015841660206206143, -3.2601308822631836, -3.0636318115284666e-05, -0.00027164106722921133, -0.0002338612830499187, -0.5568076372146606, -0.0013266343157738447, -2.706014311115723e-05, -0.0009717986104078591, -0.0001045410826918669, -1.1920928244535389e-07, -0.0009188005933538079, -1.371274471282959, -0.0014799605123698711, -0.0005228344234637916, -1.3828182090946939e-05, -2.236337184906006, -0.2563399076461792, -0.002563644666224718, -7.343022298300639e-05, -0.00046588058467023075, -0.6211998462677002, -0.00020489977032411844, -1.335992693901062, -0.00025281094713136554, -0.00026174934464506805, -9.524368942948058e-05, -9.536738616588991e-07, -0.001036583329550922, -0.006723400671035051, -0.004052878823131323, -0.01158380601555109, -0.4987746775150299, -0.00020930961181875318, -0.0037969890981912613, -0.0016502822982147336, -0.00037877538125030696, -4.410734163684538e-06, -4.768370445162873e-07, -0.0005052005290053785, -0.0008667526417411864, -1.1324817933200393e-05, -8.642300235806033e-05, -0.020709006115794182, -0.0002547178009990603, -3.2186455882765586e-06, 0.0, -3.838465272565372e-05, -0.018773840740323067, -0.002009873976930976, -7.510157047363464e-06, 0.0, -6.437280717364047e-06, -0.002836611121892929, -0.5861126184463501, -0.009680353105068207, -0.11138443648815155, -6.758938252460212e-05, -0.030120057985186577, -2.3841855067985307e-07, -0.002574821701273322, -0.030527256429195404, -0.038144003599882126, -0.0007894498412497342, -0.015747828409075737, -3.099436753473128e-06, -0.00847375113517046, -1.3708974620385561e-05, -2.6225699912174605e-05, -0.0020123724825680256, -0.09114536643028259, -0.0011853104224428535, -0.49237245321273804, -0.08412445336580276, -0.03513573110103607, -0.00016175392374861985, -0.031073089689016342, -0.0002157455455744639, -0.10291676968336105, -0.0005156855913810432, -0.012930240482091904, -0.008307188749313354, -0.07582397013902664, -1.7694159746170044, -0.02249894291162491, -0.022755568847060204, -0.9780439734458923, -1.538191556930542, -0.00640577357262373, -0.0037443782202899456, -0.023982081562280655, -1.7165990357170813e-05, -0.4152768552303314, -1.3838698863983154, -0.10618419945240021, -0.15327203273773193, -0.003392062848433852, -0.0003711488388944417, -0.0012018608395010233, -0.08261732012033463, -0.0024994343984872103, -0.017720473930239677, -0.4249119758605957, -0.018123503774404526, -1.4842166900634766, -0.00026222606538794935, -1.0814241170883179, -0.052338749170303345, -0.015919726341962814, -0.0002090712368953973, -0.23334704339504242, -0.0003815161471720785, -0.09597191959619522, -0.00012861855793744326, -0.309283584356308, -0.14205008745193481, -0.3298271894454956, -4.410734163684538e-06, -3.0397906812140718e-05, -4.291525328881107e-06, -0.01616830937564373, -0.00025245340657420456, -0.009085385128855705, -0.00020728347590193152, -0.3770899474620819, -0.0054505071602761745, -2.3841830625315197e-06], "finish_reason": "length"}], "metrics": {"energy": 869.0317959289553, "energy_per_token": 3.3946554528474815, "time": 22.281057, "time_per_token": 0.08703537890625}}
{"outputs": [{"text": "# Initialize an empty dictionary to store file hashes\n    file_hashes = {}\n\n    # Iterate over all files in the directory and its subdirectories\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            # Construct the absolute path of the file\n            file_path = os.path.join(root, file)\n\n            # Calculate the hash of the file\n            file_hash = hashlib.sha256()\n            with open(file_path, 'rb') as f:\n                # Read chunks of the file at a time to avoid memory issues\n                for chunk in iter(lambda: f.read(4096), b''):\n                    file_hash.update(chunk)\n\n            # Store the file hash in the dictionary\n            file_hashes[file_path] = file_hash.hexdigest()\n\n    # Construct the absolute path of the JSON file\n    json_file = os.path.join(directory, 'hashes.json')\n\n    # Save the hashes to the JSON file\n    with open(json_file, '", "tokens": ["#", " Initialize", " an", " empty", " dictionary", " to", " store", " file", " has", "hes", "\n", "    ", "file", "_", "has", "hes", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " in", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Construct", " the", " absolute", " path", " of", " the", " file", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "\n", "            ", "#", " Calculate", " the", " hash", " of", " the", " file", "\n", "            ", "file", "_", "hash", " =", " hash", "lib", ".", "sha", "2", "5", "6", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "#", " Read", " chunks", " of", " the", " file", " at", " a", " time", " to", " avoid", " memory", " issues", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "file", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "            ", "#", " Store", " the", " file", " hash", " in", " the", " dictionary", "\n", "            ", "file", "_", "has", "hes", "[", "file", "_", "path", "]", " =", " file", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "#", " Construct", " the", " absolute", " path", " of", " the", " JSON", " file", "\n", "    ", "json", "_", "file", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "has", "hes", ".", "json", "')", "\n", "\n", "    ", "#", " Save", " the", " has", "hes", " to", " the", " JSON", " file", "\n", "    ", "with", " open", "(", "json", "_", "file", ",", " '"], "logprobs": [-1.5498919486999512, -1.2209877967834473, -0.7730445265769958, -0.0017401328077539802, -0.035386256873607635, -0.10096561908721924, -0.11586250364780426, -1.2670176029205322, -0.29272720217704773, -2.634490556374658e-05, -0.0588030181825161, -0.0005616756388917565, -0.664209246635437, -0.001856985967606306, -0.04923926666378975, -1.2874520507466514e-05, -0.033353760838508606, -0.005976899527013302, -0.0014157997211441398, -0.07268714159727097, -0.0003406421164982021, -0.004136459436267614, -0.9790370464324951, -0.001311871805228293, -0.3349851667881012, -0.553939700126648, -0.05398141220211983, -0.1328011155128479, -0.021127525717020035, -0.37546372413635254, -0.12102323770523071, -0.07999938726425171, -0.0005996812833473086, -0.010004730895161629, -2.3841830625315197e-06, -0.09387150406837463, -0.00021634146105498075, -0.021438878029584885, -0.4118715226650238, -0.00367216719314456, -0.6279475092887878, -5.173549288883805e-05, -2.610649426060263e-05, -0.003419268876314163, -0.0003808011533692479, -0.00031716562807559967, -2.729855441430118e-05, -2.5629668016335927e-05, -0.00015484087634831667, -0.003240930614992976, -0.003669435391202569, -0.0022971450816839933, -0.005919662769883871, -0.0822952389717102, -0.16478857398033142, -0.08822526037693024, -0.00011896379146492109, -8.570780482841656e-05, -0.0006457865820266306, -0.002290009055286646, -0.16570612788200378, -1.216284990310669, -0.032670266926288605, -0.6562413573265076, -0.19089452922344208, -0.3549422025680542, -0.042052239179611206, -0.06234435737133026, -0.037914253771305084, -4.5298504119273275e-05, -0.07250044494867325, -0.016426095739006996, -0.001157686347141862, -0.00016258825780823827, -0.03811784088611603, -9.536738616588991e-07, -2.1934269170742482e-05, -2.9802276912960224e-06, -0.007241904269903898, -8.106198947643861e-06, -0.008890568278729916, -1.9430925021879375e-05, -0.0001754606782924384, -3.755022044060752e-05, -0.0014137759571895003, -0.08795411884784698, -0.00041214076918549836, -0.04201989248394966, -0.8874977827072144, -0.08470260351896286, -1.542733907699585, -0.0854739248752594, -0.005207901354879141, -0.008073907345533371, -0.6717273592948914, -0.0001652104256208986, -1.77644681930542, -0.00036376056959852576, -0.002556034829467535, -0.0014271085383370519, -0.1577615737915039, -0.0280858613550663, -1.0132738680113107e-05, -0.0017791647696867585, -0.0008385241380892694, -1.3589766240329482e-05, -6.6756979322235566e-06, -0.005416835192590952, -0.006243131123483181, -0.10608932375907898, -0.01860067807137966, -0.00023493390472140163, -2.9682672902708873e-05, -0.0008488865569233894, -0.00018356545479036868, -1.6689286894688848e-06, -0.0001399419124936685, -0.5244665741920471, -0.0001134808044298552, -5.173549288883805e-05, -9.059865078597795e-06, -0.08118968456983566, -0.007261786609888077, -0.001179595128633082, -0.00022980909852776676, -2.786790370941162, -0.050285812467336655, -3.289457321166992, -0.0051284427754580975, -1.0563474893569946, -0.0035606338642537594, -2.333916187286377, -0.0015850611962378025, -5.030505417380482e-05, -0.26442405581474304, -0.07326462119817734, -1.2011096477508545, -0.21895340085029602, -1.5887184143066406, -2.9205850296420977e-05, -0.1988661289215088, -0.0037582735531032085, -6.568216485902667e-05, -0.0003721021639648825, -3.731181277544238e-05, -0.00024029705673456192, -0.0003816353273577988, -0.00010084597306558862, -7.986990567587782e-06, -1.311301275563892e-06, -0.00040665941196493804, -0.1171027272939682, -0.00039545822073705494, -7.045020902296528e-05, -1.7404405298293568e-05, -0.000773369160015136, -2.706014311115723e-05, -0.0024917051196098328, -0.13744378089904785, -4.887569048150908e-06, -0.005263281520456076, -1.966933996300213e-05, -0.0003782987187150866, -0.0060718124732375145, -3.2186455882765586e-06, -5.960462772236497e-07, -2.992108420585282e-05, -1.0728830375228426e-06, -1.1801649634435307e-05, -7.152531907195225e-06, -2.1934269170742482e-05, -6.48477507638745e-05, -0.06548695266246796, -0.003233444644138217, -0.002398473210632801, -1.407928466796875, -0.010246530175209045, -0.9715503454208374, -0.4952177107334137, -0.14913220703601837, -0.00892246887087822, -0.02418515272438526, -0.36685946583747864, -0.0001289761275984347, -0.015010971575975418, -3.2782016205601394e-05, -0.00522011611610651, -1.1920928244535389e-07, -0.0013781820889562368, -0.04585963860154152, -0.0347994863986969, -0.00036352223833091557, -0.01738874800503254, -3.933898824470816e-06, -0.0009913297835737467, -3.4570634852570947e-06, -7.152555099310121e-07, -0.00077622797107324, -0.0006792622152715921, -5.054346183896996e-05, 0.0, -9.179073458653875e-06, -0.0015612567076459527, -0.002889864146709442, -0.003561346558853984, -0.004991569556295872, -1.0865610837936401, -0.0222554262727499, -0.39574649930000305, -0.004566479008644819, -0.1520170122385025, -0.01035165786743164, -0.22536933422088623, -0.0047764964401721954, -0.8876332640647888, -0.00025769727653823793, -0.12532268464565277, -0.0001961992384167388, -0.17113052308559418, -0.0961742028594017, -0.330031156539917, -1.2755313036905136e-05, -1.728519782773219e-05, -1.1920922133867862e-06, -0.21472936868667603, -0.0003943857445847243, -0.09771566092967987, -0.00020668754586949944, -0.09185235947370529, -0.00362691399641335, -1.7881377516459906e-06, -0.000336590368533507, -9.357491217087954e-05, -1.4662635294371285e-05, -0.0003812778159044683, -0.023501066491007805, -0.00019667598826345056, -0.002022246830165386, -0.49778681993484497, -0.05596388503909111, -2.1095736026763916, -0.0003446938644628972, -0.9366601705551147, -0.1311168223619461, -0.004260867368429899, -5.8530047681415454e-05, -0.01856803148984909, -7.068861305015162e-05, -0.003579520620405674, -0.0008083889842964709, -0.00037865620106458664, -0.0004033228906337172, -2.4318398573086597e-05, -1.4305104514278355e-06, -9.345571743324399e-05, -0.005178965162485838], "finish_reason": "length"}], "metrics": {"energy": 919.1649718666067, "energy_per_token": 3.5904881713539325, "time": 22.275747, "time_per_token": 0.08701463671875}}
