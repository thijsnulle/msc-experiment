{"outputs": [{"text": "_name, col_data in dataframe.iteritems():", "tokens": ["_", "name", ",", " col", "_", "data", " in", " data", "frame", ".", "iter", "items", "():", "\n"], "logprobs": [-1.7056589126586914, -0.08146344125270844, -0.634195864200592, -0.4303136467933655, -0.5426017642021179, -0.317446231842041, -0.0454881377518177, -0.032106027007102966, -0.00038532938924618065, -0.004302768036723137, -1.3522690534591675, -0.003214670345187187, -0.0005316513124853373, -0.022720495238900185], "finish_reason": "stop"}, {"text": " dataframe[col].astype('str')", "tokens": [" data", "frame", "[", "col", "]", ".", "ast", "ype", "('", "str", "')", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -3.172020673751831, -0.000610999355558306, -2.43999981880188, -0.2915450632572174, -0.0005415403284132481, -0.25610554218292236], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -0.06706883013248444, -0.09267187118530273, -0.012343090958893299], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -0.33773037791252136], "finish_reason": "stop"}], "metrics": {"energy": 103.01866792106628, "energy_per_token": 2.289303731579251, "time": 3.560514, "time_per_token": 0.07912253333333333}}
{"outputs": [{"text": "_name, col_values in dataframe.items():", "tokens": ["_", "name", ",", " col", "_", "values", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.5864999294281006, -2.190854549407959, -0.0014809127897024155, -0.018424909561872482, -0.0003262225945945829, -0.003301528748124838, -0.5970432758331299, -0.0003815161471720785, -0.025882694870233536], "finish_reason": "stop"}, {"text": " re.sub(data_pattern, lambda match: float(match.group(0).strip('><')), dataframe[col])", "tokens": [" re", ".", "sub", "(", "data", "_", "pattern", ",", " lambda", " match", ":", " float", "(", "match", ".", "group", "(", "0", ")", ".", "strip", "('", "><", "'))", ",", " data", "frame", "[", "col", "])", "\n"], "logprobs": [-2.498844623565674, -0.00034409802174195647, -0.02011285535991192, -0.014139354228973389, -0.21297545731067657, -0.00024971229140646756, -8.95221673999913e-05, -0.003004919271916151, -0.7072259783744812, -1.993553876876831, -0.006980436854064465, -2.8927700519561768, -0.0038747722283005714, -0.028900939971208572, -0.03720848634839058, -0.010418668389320374, -0.45363354682922363, -0.124915711581707, -2.1452598571777344, -0.05910937488079071, -0.4685091972351074, -0.1756816953420639, -0.8826497197151184, -0.056063976138830185, -0.04032527282834053, -0.2595643103122711, -0.0002195594133809209, -0.0051102968864142895, -0.0005104430601932108, -0.016275513917207718, -0.07535654306411743], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -0.3799627125263214, -0.04491934925317764, -5.173549288883805e-05, -0.08437900245189667, -0.06326057761907578, -0.012406319379806519], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 70.57588097572327, "energy_per_token": 1.1202520789797343, "time": 3.5960884, "time_per_token": 0.05708076825396826}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " np.array(", "tokens": [" np", ".", "array", "(", "\n"], "logprobs": [-3.2332444190979004, -0.000205018965061754, -2.8731932640075684, -0.21250760555267334, -1.1035020351409912], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) is not None else np.NaN)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " is", " not", " None", " else", " np", ".", "NaN", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -2.882812261581421, -0.0022795426193624735, -8.463501580990851e-05, -0.5360361933708191, -0.05017063021659851, -3.7788631743751466e-05, -2.861375570297241, -0.06250641494989395, -0.016075992956757545], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 83.69521601104738, "energy_per_token": 2.461624000324923, "time": 2.3291302, "time_per_token": 0.0685038294117647}}
{"outputs": [{"text": ", row in dataframe.iteritems():", "tokens": [",", " row", " in", " data", "frame", ".", "iter", "items", "():", "\n"], "logprobs": [-2.493961811065674, -0.9589052200317383, -0.048133231699466705, -0.09424357861280441, -0.0007767044589854777, -0.004074249416589737, -0.3748578727245331, -0.600626528263092, -0.0014429405564442277, -0.019323084503412247], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: _process_cell(x, data_pattern))", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " _", "process", "_", "cell", "(", "x", ",", " data", "_", "pattern", "))", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -2.3700742721557617, -3.1076149940490723, -0.06883728504180908, -0.5250614881515503, -0.12491192668676376, -0.16069146990776062, -0.008822626434266567, -0.12250811606645584, -0.02451719157397747, -0.0005770448478870094, -0.06823797523975372, -0.009466403163969517], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 52.976652454376215, "energy_per_token": 1.0187817779687733, "time": 2.7460582, "time_per_token": 0.052808811538461536}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: np.nan if not re.search(data_pattern, x) else float(re.search(data_pattern, x).group(0).replace('<','').replace('>','')))", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " np", ".", "nan", " if", " not", " re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " float", "(", "re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", ".", "group", "(", "0", ")", ".", "replace", "('", "<'", ",", "'')", ".", "replace", "('", ">'", ",", "''", ")))", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -2.288577079772949, -0.0015708976425230503, -0.046401720494031906, -0.0466727651655674, -0.9031661748886108, -0.08893422037363052, -0.00014327930693980306, -0.19341062009334564, -0.0022653888445347548, -0.04847513139247894, -0.00014530557382386178, -8.630380034446716e-05, -0.0013380631571635604, -0.3020976483821869, -0.011291764676570892, -0.051479946821928024, -1.0253983736038208, -0.003925001714378595, -0.13545802235603333, -0.0008149401983246207, -0.22475387156009674, -0.0016237420495599508, -0.14742562174797058, -0.00010251473577227443, -2.586808113846928e-05, -0.0006586528033949435, -0.029339080676436424, -0.1106407418847084, -0.000346362212439999, -0.007639241870492697, -0.3014735281467438, -0.3095824420452118, -0.947407066822052, -0.014357241801917553, -1.1600284576416016, -0.11737287044525146, -1.2657890319824219, -0.00030191155383363366, -3.1849868297576904, -0.005210984963923693, -0.006945987697690725, -0.007728555705398321, -0.008396442979574203, -0.0001161031104857102, -0.10797123610973358, -0.18875652551651, -0.02934568002820015], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 127.32245190429686, "energy_per_token": 1.5157434750511531, "time": 4.218924, "time_per_token": 0.050225285714285715}}
{"outputs": [{"text": " in dataframe:", "tokens": [" in", " data", "frame", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -1.847975730895996, -0.03404784947633743], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x:", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -3.2733383178710938], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 43.368722047805775, "energy_per_token": 1.2046867235501604, "time": 2.1315827, "time_per_token": 0.05921063055555556}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.findall(data_pattern, str(x))[0])", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "data", "_", "pattern", ",", " str", "(", "x", "))", "[", "0", "])", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -1.4165033102035522, -0.0005858612130396068, -0.00424804724752903, -0.058357808738946915, -4.2914423829643056e-05, -7.1403817855753e-05, -0.0023551841732114553, -1.5154640674591064, -0.000542493537068367, -0.0064940135926008224, -0.05897340178489685, -0.19734527170658112, -0.0018866135505959392, -1.9429736137390137, -0.23491133749485016], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 54.59063122749328, "energy_per_token": 1.0109376153239498, "time": 2.9543235, "time_per_token": 0.05470969444444445}}
{"outputs": [{"text": ", row in dataframe.iterrows():", "tokens": [",", " row", " in", " data", "frame", ".", "iter", "rows", "():", "\n"], "logprobs": [-2.493961811065674, -0.9589052200317383, -0.048133231699466705, -0.09424357861280441, -0.0007767044589854777, -0.004074249416589737, -0.3748578727245331, -0.801432192325592, -0.0017754758009687066, -0.025602120906114578], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: np.nan if re.match(data_pattern, str(x)) is None", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " np", ".", "nan", " if", " re", ".", "match", "(", "data", "_", "pattern", ",", " str", "(", "x", "))", " is", " None", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -2.288577079772949, -0.0015708976425230503, -0.046401720494031906, -0.0466727651655674, -1.2855075597763062, -5.1616290875244886e-05, -2.4829025268554688, -0.006088519003242254, -0.04890375956892967, -0.00015841660206206143, -7.009260298218578e-05, -0.0014725804794579744, -1.5710088014602661, -0.00044860312482342124, -0.005431418772786856, -0.011834058910608292, -0.05228455737233162, -0.0016767027555033565, -2.634267568588257], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 100.53295883560183, "energy_per_token": 1.7039484548407091, "time": 3.1718519, "time_per_token": 0.05376020169491526}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -1.590567708015442], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)<|endoftext|>#!/usr/bin/env python3", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.14389067888259888, -6.437094270950183e-05, -0.0255690049380064, -0.001840446493588388, -0.014424807392060757, -5.4834770708112046e-05, -4.589452510117553e-05, -0.00034457468427717686, -0.02728983759880066, -0.003134459024295211, -0.34378597140312195, -0.04698559269309044, -3.266281055402942e-05, -0.0816996619105339, -2.809126377105713, -2.7894584491150454e-05, -1.0728830375228426e-06, -0.00022194306075107306, -6.5205356804654e-05, -0.0910230353474617, -0.9482585191726685, -1.1007665395736694, -0.054005470126867294, -0.08621447533369064, -0.00030429501202888787, -0.00428698118776083, -0.0004037995240651071, -0.059127017855644226, -0.005976306740194559, -0.9372397065162659, -0.02230473980307579], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.017438888549804688, -5.376194530981593e-05, -0.3016281723976135], "finish_reason": "stop"}], "metrics": {"energy": 85.12405249977111, "energy_per_token": 1.7024810499954222, "time": 2.749806, "time_per_token": 0.05499612}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: float(re.search(data_pattern, x).group(0).lstrip('>').rstrip('<')))", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " float", "(", "re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", ".", "group", "(", "0", ")", ".", "lst", "rip", "('", ">", "')", ".", "r", "strip", "('<", "'))", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -2.4819631576538086, -0.027970757335424423, -0.2793755829334259, -0.00022599527437705547, -1.5965611934661865, -0.002970451721921563, -0.09179548919200897, -0.0001958416833076626, -0.00012635385792236775, -0.0019909576512873173, -0.543728768825531, -0.04024913161993027, -0.007212198339402676, -0.009742450900375843, -0.4326961636543274, -0.7821936011314392, -1.5995618104934692, -0.09902014583349228, -2.249441146850586, -7.271740287251305e-06, -0.07367777079343796, -0.014219510369002819, -0.09602227807044983, -0.006753832101821899, -0.01713413931429386, -0.0008334023877978325, -0.06850895285606384, -0.04936658591032028, -1.0198360681533813, -0.2845171093940735], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.1332644820213318, -7.819823804311454e-05, -0.040440794080495834, -0.002108614193275571, -0.012287630699574947, -5.495397272170521e-05, -4.589452510117553e-05, -0.00029213930247351527, -0.03171228989958763, -0.0037669430021196604, -1.3175853490829468], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.0171983540058136, -8.5588610090781e-05, -0.2752833962440491], "finish_reason": "stop"}], "metrics": {"energy": 78.24402459526061, "energy_per_token": 1.2620003966977518, "time": 3.1710322, "time_per_token": 0.05114568064516129}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.sub(data_pattern, 'NaN', str(x)))", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " '", "NaN", "'", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -0.4077046811580658, -0.015409225597977638, -0.12168537080287933, -7.772143726469949e-05, -0.00013052565918769687, -0.0027970261871814728, -3.0372867584228516, -0.27537834644317627, -0.0013613966293632984, -0.006489868275821209, -1.505176305770874, -0.0006852186052128673, -0.006086860317736864, -0.05173082649707794, -0.20470458269119263], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -1.7925300598144531, -2.622600959512056e-06, -8.344646857949556e-07, -5.9126061387360096e-05, -6.103329360485077e-05, -0.06865087151527405, -1.0249663591384888, -2.603743553161621, -0.009482227265834808, -0.016325006261467934, -0.002806655131280422, -0.02178909257054329, -0.003733451943844557, -0.00019727191829588264, -0.006733347196131945, -0.002741509350016713, -0.001142087858170271], "finish_reason": "stop"}], "metrics": {"energy": 116.757266626358, "energy_per_token": 1.6679609518051144, "time": 3.7936177, "time_per_token": 0.05419453857142857}}
{"outputs": [{"text": ", val in dataframe.iteritems():", "tokens": [",", " val", " in", " data", "frame", ".", "iter", "items", "():", "\n"], "logprobs": [-2.493961811065674, -2.28592586517334, -0.25234055519104004, -0.23933251202106476, -0.00552590936422348, -0.03215751424431801, -1.306486964225769, -0.010388584807515144, -0.0008395960903726518, -0.023196645081043243], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.sub(data_pattern, r\"\\1\", x) if re.search(data_pattern, x) else np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " r", "\"", "\\", "1", "\"", ",", " x", ")", " if", " re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -0.4077046811580658, -0.015409225597977638, -0.12168537080287933, -7.772143726469949e-05, -0.00013052565918769687, -0.0027970261871814728, -2.2931976318359375, -3.051098346710205, -0.13930094242095947, -0.200626403093338, -0.13272084295749664, -0.007698272820562124, -0.16965319216251373, -1.0695374011993408, -0.49690258502960205, -0.47295427322387695, -0.00029047083808109164, -0.23883852362632751, -0.004439142532646656, -0.08572769165039062, -0.00015531764074694365, -0.00016234986833296716, -0.0005681092734448612, -0.09954787790775299, -0.0055879103019833565, -0.02060110867023468, -0.11270850151777267, -0.00229322025552392, -0.12612174451351166, -0.04524024575948715, -0.04134161025285721], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 75.37781727790833, "energy_per_token": 1.032572839423402, "time": 3.8020952, "time_per_token": 0.05208349589041096}}
{"outputs": [{"text": "_name, col in dataframe.items():", "tokens": ["_", "name", ",", " col", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.8163678646087646, -0.028429005295038223, -0.0002648479712661356, -0.002837562235072255, -0.4885370135307312, -0.0004922132357023656, -0.01957959309220314], "finish_reason": "stop"}, {"text": " pd.to_numeric(", "tokens": [" pd", ".", "to", "_", "numeric", "(", "\n"], "logprobs": [-3.083031177520752, -0.0026051413733512163, -0.247355118393898, -3.4570634852570947e-06, -0.0002315968304174021, -0.004611452575773001, -1.2552306652069092], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -1.3649861812591553], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 29.98580946922302, "energy_per_token": 0.9370565459132194, "time": 2.117797, "time_per_token": 0.06618115625}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].str.replace(data_pattern, '').fillna(np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "str", ".", "replace", "(", "data", "_", "pattern", ",", " '", "')", ".", "fill", "na", "(", "np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -1.6915404796600342, -0.0040937201119959354, -1.2978034019470215, -0.00759937334805727, -0.19381628930568695, -0.002138234442099929, -0.00020323118951637298, -0.00187090749386698, -0.8906770944595337, -0.3086777627468109, -0.758623480796814, -3.370990753173828, -3.504691630951129e-05, -0.2129378765821457, -0.0909435823559761, -3.576214658096433e-05, -0.10888595134019852, -0.08763626217842102, -0.9548892378807068], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)<|endoftext|>#!/usr/bin/env python", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -0.06706883013248444, -2.6588072776794434, -2.5152843591058627e-05, -1.0728830375228426e-06, -0.00016973962192423642, -6.675497570540756e-05, -0.08954240381717682, -0.8833138942718506, -1.1431937217712402, -0.053662970662117004, -0.0772944837808609, -0.00034540885826572776, -0.005390868987888098, -0.0004196478403173387, -0.06825200468301773, -0.005412448197603226, -0.437514990568161], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -0.33773037791252136], "finish_reason": "stop"}], "metrics": {"energy": 64.26426832580566, "energy_per_token": 0.9886810511662409, "time": 3.369062, "time_per_token": 0.051831723076923075}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.search(data_pattern, x).group(0) if re.search(data_pattern, x) else np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", ".", "group", "(", "0", ")", " if", " re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -2.517716646194458, -0.004208636935800314, -0.05849229171872139, -0.00011252723925281316, -0.00012027494085486978, -0.00312816072255373, -0.3255241811275482, -0.05142684280872345, -0.025499282404780388, -0.02888808399438858, -0.3571438193321228, -0.43989327549934387, -0.42685917019844055, -0.6104187369346619, -0.40661337971687317, -0.00018308870494365692, -0.014296486973762512, -0.0016349294455721974, -0.059724170714616776, -5.113947918289341e-05, -1.6569954823353328e-05, -0.00030727434204891324, -0.045261893421411514, -0.0016263603465631604, -0.02569960430264473, -0.12469905614852905, -0.0002008474839385599, -0.15579795837402344, -0.052113596349954605, -0.035402365028858185], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -1.2156643867492676], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 68.17155581665038, "energy_per_token": 1.0651805596351622, "time": 3.3815937, "time_per_token": 0.0528374015625}}
{"outputs": [{"text": "_name, col_data in dataframe.items():", "tokens": ["_", "name", ",", " col", "_", "data", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.5864999294281006, -0.37481632828712463, -0.05401529371738434, -0.03328273445367813, -0.0004032037395518273, -0.006186976097524166, -0.2649106979370117, -0.00037067217635922134, -0.02016601338982582], "finish_reason": "stop"}, {"text": " dataframe[col].apply(", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -1.590567708015442], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.14389067888259888, -6.437094270950183e-05, -0.0255690049380064, -0.001840446493588388, -0.014424807392060757, -5.4834770708112046e-05, -4.589452510117553e-05, -0.00034457468427717686, -0.02728983759880066, -0.003134459024295211, -0.34378597140312195, -0.04698559269309044, -3.266281055402942e-05, -0.0816996619105339, -0.0808701142668724, -0.013540918938815594], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.017438888549804688, -5.376194530981593e-05, -0.3016281723976135], "finish_reason": "stop"}], "metrics": {"energy": 75.04519300270081, "energy_per_token": 1.8303705610414833, "time": 2.330613, "time_per_token": 0.05684421951219512}}
{"outputs": [{"text": "_name in dataframe.columns:", "tokens": ["_", "name", " in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.7503026723861694, -0.043593306094408035, -0.0006521005416288972, -0.13401050865650177, -0.028921784833073616, -0.016331341117620468, -0.01828925870358944], "finish_reason": "stop"}, {"text": " dataframe[col].astype(str).replace(r'\\d+', '', regex=True)", "tokens": [" data", "frame", "[", "col", "]", ".", "ast", "ype", "(", "str", ")", ".", "replace", "(", "r", "'\\", "d", "+'", ",", " ''", ",", " regex", "=", "True", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -3.172020673751831, -0.000610999355558306, -0.09188966453075409, -0.14457498490810394, -0.004296002443879843, -1.107932209968567, -0.9428930282592773, -0.3299911320209503, -2.7627270221710205, -2.127854824066162, -1.881831169128418, -1.0337024927139282, -0.004692731890827417, -1.4386084079742432, -0.003905290039256215, -0.0766773670911789, -0.009008478373289108, -0.005352333653718233, -0.054657384753227234, -0.8531007766723633], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -1.3267269134521484], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -0.33773037791252136], "finish_reason": "stop"}], "metrics": {"energy": 54.48939556312561, "energy_per_token": 1.1120284808801146, "time": 2.7511654, "time_per_token": 0.05614623265306123}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].str.extract(data_pattern)", "tokens": [" data", "frame", "[", "col", "]", ".", "str", ".", "extract", "(", "data", "_", "pattern", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -1.6915404796600342, -0.0040937201119959354, -0.4477992355823517, -0.035118237137794495, -0.1606811136007309, -0.0008735416340641677, -0.00010716341057559475, -0.2626737654209137, -1.1930339336395264], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -0.06706883013248444, -0.09267187118530273, -0.012343090958893299], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>from django.utils.safestring import SafeText", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "from", " django", ".", "utils", ".", "s", "af", "est", "ring", " import", " Safe", "Text", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -1.959970474243164, -2.622600959512056e-06, -7.152555099310121e-07, -5.054346183896996e-05, -5.9126061387360096e-05, -0.08328485488891602, -1.517021894454956, -4.395271301269531, -0.12042514234781265, -2.7853739261627197, -0.07717927545309067, -2.692556142807007, -0.011482933536171913, -0.0018011790234595537, -0.0020258158911019564, -0.00043084874050691724, -0.5203646421432495, -1.0637168884277344, -0.0850297063589096], "finish_reason": "stop"}], "metrics": {"energy": 80.33981950569151, "energy_per_token": 1.3616918560286697, "time": 3.1700895, "time_per_token": 0.053730330508474575}}
{"outputs": [{"text": "_name, col in dataframe.iteritems():", "tokens": ["_", "name", ",", " col", " in", " data", "frame", ".", "iter", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.8163678646087646, -0.028429005295038223, -0.0002648479712661356, -0.002837562235072255, -0.9818784594535828, -0.0013512775767594576, -0.000614335120189935, -0.021177945658564568], "finish_reason": "stop"}, {"text": " dataframe[col].str.replace(data_pattern, 'NaN', regex=True).str.replace('NaN', np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "str", ".", "replace", "(", "data", "_", "pattern", ",", " '", "NaN", "'", ",", " regex", "=", "True", ")", ".", "str", ".", "replace", "('", "NaN", "'", ",", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -1.6915404796600342, -0.0040937201119959354, -1.2978034019470215, -0.00759937334805727, -0.19381628930568695, -0.002138234442099929, -0.00020323118951637298, -0.00187090749386698, -0.8906770944595337, -2.1898937225341797, -1.8565969467163086, -0.002028790069743991, -0.132075697183609, -0.007041992619633675, -0.010426809079945087, -0.04082596302032471, -1.3345249891281128, -2.108729362487793, -0.012308708392083645, -0.4088248908519745, -0.42302390933036804, -2.5234341621398926, -0.030507368966937065, -0.004890860058367252, -0.2948194146156311, -1.5139465176616795e-05, -0.162296324968338, -0.18350425362586975, -0.6709862351417542], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -0.06706883013248444, -0.09267187118530273, -0.012343090958893299], "finish_reason": "stop"}, {"text": " dataframe<|endoftext|>import re", "tokens": [" data", "frame", "<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -1.959970474243164, -2.622600959512056e-06, -7.152555099310121e-07, -5.054346183896996e-05, -5.9126061387360096e-05, -0.08328485488891602, -1.0904300212860107, -1.1650426387786865, -0.02100391313433647], "finish_reason": "stop"}], "metrics": {"energy": 72.88735864162447, "energy_per_token": 0.9849643059678983, "time": 3.79355, "time_per_token": 0.051264189189189194}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].map(", "tokens": [" data", "frame", "[", "col", "]", ".", "map", "(", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -2.5601718425750732, -0.0219161044806242, -1.1331796646118164], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -0.06706883013248444, -0.09267187118530273, -0.012343090958893299], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05], "finish_reason": "stop"}], "metrics": {"energy": 31.890255443572997, "energy_per_token": 0.9379486895168528, "time": 2.13315, "time_per_token": 0.06273970588235295}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: _re.sub(data_pattern, '', x) if _re.search(data_pattern, x) else np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " _", "re", ".", "sub", "(", "data", "_", "pattern", ",", " ''", ",", " x", ")", " if", " _", "re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -2.3700742721557617, -3.776951313018799, -2.620485544204712, -0.16370947659015656, -0.04278886318206787, -0.21557916700839996, -7.748303323751315e-05, -0.00010585224663373083, -0.003067195415496826, -1.3973355293273926, -0.002292387653142214, -0.24869893491268158, -1.361466407775879, -0.2538907825946808, -0.37703943252563477, -0.02488098107278347, -0.00020585325546562672, -0.34061872959136963, -0.008741210214793682, -0.06256162375211716, -0.00023934361524879932, -0.00013863079948350787, -0.0006139777251519263, -0.08853932470083237, -0.005639831535518169, -0.04259410500526428, -0.07818862795829773, -2.825220326485578e-05, -0.10778716206550598, -0.07962770015001297, -0.06271132826805115], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)<|endoftext|>import re", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -2.7935631275177, -2.0265373677830212e-05, -1.0728830375228426e-06, -0.00020454221521504223, -5.495397272170521e-05, -0.08461388200521469, -1.1538808345794678, -1.085586667060852, -0.015512637794017792], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 119.7417295627594, "energy_per_token": 1.5965563941701253, "time": 3.7977998, "time_per_token": 0.05063733066666667}}
{"outputs": [{"text": "_name, col_data in dataframe.items():", "tokens": ["_", "name", ",", " col", "_", "data", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.5864999294281006, -0.37481632828712463, -0.05401529371738434, -0.03328273445367813, -0.0004032037395518273, -0.006186976097524166, -0.2649106979370117, -0.00037067217635922134, -0.02016601338982582], "finish_reason": "stop"}, {"text": " dataframe[col].replace('>', '', regex=True)", "tokens": [" data", "frame", "[", "col", "]", ".", "replace", "('", ">'", ",", " ''", ",", " regex", "=", "True", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -3.1901214122772217, -2.431978702545166, -0.6641823649406433, -0.0615977942943573, -1.931143879890442, -0.001653733546845615, -0.02390887401998043, -0.007017489522695541, -0.008491245098412037, -0.09194044768810272, -1.0805457830429077], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -1.3267269134521484], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -0.33773037791252136], "finish_reason": "stop"}], "metrics": {"energy": 37.666311010360715, "energy_per_token": 0.8560525229627435, "time": 2.5406747, "time_per_token": 0.057742606818181816}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].map(", "tokens": [" data", "frame", "[", "col", "]", ".", "map", "(", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -2.5601718425750732, -0.0219161044806242, -1.1331796646118164], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.NaN)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "NaN", ")", "\n"], "logprobs": [-0.12629228830337524, -5.23315102327615e-05, -0.035547103732824326, -0.0016230279579758644, -0.014440905302762985, -4.494089080253616e-05, -3.85038583772257e-05, -0.00032574593205936253, -0.02909930795431137, -0.002823891816660762, -0.37409207224845886, -0.04277447238564491, -4.4225667807040736e-05, -2.7750003337860107, -0.06951641291379929, -0.018184728920459747], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01960975117981434, -5.006664650863968e-05, -0.33773037791252136], "finish_reason": "stop"}], "metrics": {"energy": 31.5772453660965, "energy_per_token": 0.9022070104598999, "time": 2.120576, "time_per_token": 0.06058788571428571}}
{"outputs": [{"text": "_name in dataframe.columns:", "tokens": ["_", "name", " in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.7503026723861694, -0.043593306094408035, -0.0006521005416288972, -0.13401050865650177, -0.028921784833073616, -0.016331341117620468, -0.01828925870358944], "finish_reason": "stop"}, {"text": " np.nan", "tokens": [" np", ".", "nan", "\n"], "logprobs": [-3.2332444190979004, -0.000205018965061754, -0.8871970176696777, -0.2517544627189636], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -1.3649861812591553], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 31.431126276016233, "energy_per_token": 1.1641157880006012, "time": 2.1212263, "time_per_token": 0.07856393703703704}}
{"outputs": [{"text": ", data in dataframe.items():", "tokens": [",", " data", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-2.493961811065674, -2.00100040435791, -0.06931956112384796, -0.045797351747751236, -0.0004674295778386295, -0.012873518280684948, -0.3299451172351837, -0.000476246903417632, -0.028589583933353424], "finish_reason": "stop"}, {"text": " pd.to_numeric(pd.DataFrame.apply(dataframe, lambda row: re.sub(data_pattern, \"\", str(row[col])), axis=1).apply(pd.to_numeric), errors='coerce')", "tokens": [" pd", ".", "to", "_", "numeric", "(", "pd", ".", "DataFrame", ".", "apply", "(", "data", "frame", ",", " lambda", " row", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " \"", "\"", ",", " str", "(", "row", "[", "col", "]))", ",", " axis", "=", "1", ")", ".", "apply", "(", "pd", ".", "to", "_", "numeric", ")", ",", " errors", "='", "co", "er", "ce", "')", "\n"], "logprobs": [-3.083031177520752, -0.0026051413733512163, -0.247355118393898, -3.4570634852570947e-06, -0.0002315968304174021, -0.004611452575773001, -3.0570437908172607, -0.0004032037395518273, -1.7322919368743896, -2.427236795425415, -0.22479261457920074, -0.0014994817320257425, -0.4384077191352844, -0.004184657242149115, -0.19216813147068024, -0.6183668375015259, -2.1029562950134277, -0.014510580338537693, -0.5909652709960938, -0.0007214327342808247, -0.18145684897899628, -0.04519728943705559, -0.20990271866321564, -0.0005741854547522962, -0.00016091958968900144, -0.0037258509546518326, -2.401498794555664, -0.4827798902988434, -0.0029646276962012053, -0.8156878352165222, -0.0008582960581406951, -0.006686100736260414, -0.03373855724930763, -0.0029111409094184637, -0.1381281465291977, -0.1190304085612297, -0.18764756619930267, -0.04349161684513092, -0.07768170535564423, -0.3639051914215088, -2.921250820159912, -1.6416064500808716, -0.008812346495687962, -0.84532231092453, -0.002586236223578453, -0.2435290366411209, -0.0012269833823665977, -0.0013050857232883573, -1.1722080707550049, -0.15366794168949127, -0.19496306777000427, -0.38322770595550537, -0.045404184609651566, -0.0003147821989841759, -9.894321920000948e-06, -0.03468687832355499, -0.10502855479717255], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -0.3799627125263214, -0.04491934925317764, -5.173549288883805e-05, -0.08437900245189667, -0.06326057761907578, -0.012406319379806519], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 141.2703985366821, "energy_per_token": 1.6620046886668483, "time": 4.642936, "time_per_token": 0.05462277647058823}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.findall(data_pattern, x)[0] if len(re.findall(data_pattern, x)) > 0 else np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "find", "all", "(", "data", "_", "pattern", ",", " x", ")[", "0", "]", " if", " len", "(", "re", ".", "find", "all", "(", "data", "_", "pattern", ",", " x", "))", " >", " ", "0", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -1.4165033102035522, -0.0005858612130396068, -0.00424804724752903, -0.058357808738946915, -4.2914423829643056e-05, -7.1403817855753e-05, -0.0023551841732114553, -0.2850506007671356, -0.4413757622241974, -0.0012841321295127273, -0.14612698554992676, -0.31023868918418884, -2.0975005626678467, -0.00034850722295232117, -0.08166296780109406, -0.0002113357331836596, -0.00025662468397058547, -1.8358061424805783e-05, -0.0005807381821796298, -0.01283397525548935, -3.731181277544238e-05, -1.4543427823809907e-05, -0.0002675890573300421, -0.04528091847896576, -0.0016102931695058942, -0.608733057975769, -0.0171152725815773, -0.0010214593494310975, -0.030900193378329277, -0.13039278984069824, -2.3841574147809297e-05, -0.14487658441066742, -0.05339754372835159, -0.03735927864909172], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -1.2156643867492676], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 72.76351905441284, "energy_per_token": 1.0700517508001888, "time": 3.5926232, "time_per_token": 0.05283269411764706}}
{"outputs": [{"text": "_name, col in dataframe.items():", "tokens": ["_", "name", ",", " col", " in", " data", "frame", ".", "items", "():", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.6407979726791382, -0.43024030327796936, -0.8163678646087646, -0.028429005295038223, -0.0002648479712661356, -0.002837562235072255, -0.4885370135307312, -0.0004922132357023656, -0.01957959309220314], "finish_reason": "stop"}, {"text": " re.sub(data_pattern, '', dataframe[col])", "tokens": [" re", ".", "sub", "(", "data", "_", "pattern", ",", " ''", ",", " data", "frame", "[", "col", "])", "\n"], "logprobs": [-2.498844623565674, -0.00034409802174195647, -0.02011285535991192, -0.014139354228973389, -0.21297545731067657, -0.00024971229140646756, -8.95221673999913e-05, -0.003004919271916151, -2.3583109378814697, -0.002481597475707531, -0.07631327956914902, -0.0009467886411584914, -0.0063714231364429, -0.0001419681793777272, -0.10602627694606781, -0.400850385427475], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12238946557044983, -5.817244164063595e-05, -0.04090457782149315, -0.001927424455061555, -0.014597873203456402, -4.637133679352701e-05, -3.516612196108326e-05, -0.00031680811662226915, -0.031223541125655174, -0.00393260084092617, -1.3649861812591553], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01813087984919548, -6.031808152329177e-05, -0.2821475565433502], "finish_reason": "stop"}], "metrics": {"energy": 44.04557836532592, "energy_per_token": 1.074282399154291, "time": 2.5406568, "time_per_token": 0.06196723902439024}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.sub(data_pattern, r'\\1', x))", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " r", "'\\", "1", "'", ",", " x", "))", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -0.4077046811580658, -0.015409225597977638, -0.12168537080287933, -7.772143726469949e-05, -0.00013052565918769687, -0.0027970261871814728, -2.2931976318359375, -0.6713835000991821, -0.29379427433013916, -0.12792105972766876, -0.00548643060028553, -0.19573085010051727, -0.60294109582901, -0.32198700308799744], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05], "finish_reason": "stop"}], "metrics": {"energy": 93.27874930572509, "energy_per_token": 1.7938221020331748, "time": 2.9658976, "time_per_token": 0.0570364923076923}}
{"outputs": [{"text": "_name in dataframe.columns:", "tokens": ["_", "name", " in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-1.6996790170669556, -0.07870454341173172, -0.7503026723861694, -0.043593306094408035, -0.0006521005416288972, -0.13401050865650177, -0.028921784833073616, -0.016331341117620468, -0.01828925870358944], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.sub(data_pattern, '', x)).astype('float')", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " ''", ",", " x", "))", ".", "ast", "ype", "('", "float", "')", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -0.4077046811580658, -0.015409225597977638, -0.12168537080287933, -7.772143726469949e-05, -0.00013052565918769687, -0.0027970261871814728, -0.8518542647361755, -0.006710967514663935, -0.18194074928760529, -0.4240889549255371, -1.2744048833847046, -1.6142642498016357, -4.1960789531003684e-05, -2.5031561851501465, -0.1767529547214508, -0.5379276871681213, -0.37326717376708984], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -1.2156643867492676], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 55.08189119243622, "energy_per_token": 1.039280965895023, "time": 2.9641724, "time_per_token": 0.05592778113207547}}
{"outputs": [{"text": " in dataframe.columns:", "tokens": [" in", " data", "frame", ".", "columns", ":", "\n"], "logprobs": [-0.351173996925354, -0.07721337676048279, -0.0010149095905944705, -0.17282775044441223, -0.05429873615503311, -0.010212783701717854, -0.01615024544298649], "finish_reason": "stop"}, {"text": " dataframe[col].apply(lambda x: re.sub(data_pattern, x, '')).replace('nan', np.nan)", "tokens": [" data", "frame", "[", "col", "]", ".", "apply", "(", "lambda", " x", ":", " re", ".", "sub", "(", "data", "_", "pattern", ",", " x", ",", " ''", "))", ".", "replace", "('", "nan", "'", ",", " np", ".", "nan", ")", "\n"], "logprobs": [-0.24752479791641235, -0.0033835088834166527, -0.0036645657382905483, -0.0005588161875493824, -0.0012143626809120178, -0.01802890934050083, -0.44624215364456177, -0.009861796163022518, -0.40168485045433044, -0.14596083760261536, -0.0022250674664974213, -1.1092329025268555, -0.001311752712354064, -0.4077046811580658, -0.015409225597977638, -0.12168537080287933, -7.772143726469949e-05, -0.00013052565918769687, -0.0027970261871814728, -2.5689048767089844, -0.41909077763557434, -2.006661891937256, -0.12438341230154037, -1.238267421722412, -0.7563201189041138, -0.8601894974708557, -1.54198157787323, -0.020366355776786804, -0.0008298290777020156, -0.07729834318161011, -5.173549288883805e-05, -0.13725528120994568, -0.14029863476753235, -0.24051901698112488], "finish_reason": "stop"}, {"text": " re.search(data_pattern, x) else np.nan)", "tokens": [" re", ".", "search", "(", "data", "_", "pattern", ",", " x", ")", " else", " np", ".", "nan", ")", "\n"], "logprobs": [-0.12071911245584488, -6.317892984952778e-05, -0.03208836540579796, -0.0017232344252988696, -0.012648127041757107, -5.280832192511298e-05, -4.31528314948082e-05, -0.0002932118659373373, -0.03211595490574837, -0.003720031352713704, -0.41314560174942017, -0.045416828244924545, -4.351044481154531e-05, -0.07741010934114456, -0.08283362537622452, -0.012062578462064266], "finish_reason": "stop"}, {"text": " dataframe", "tokens": [" data", "frame", "\n"], "logprobs": [-0.01685965619981289, -6.174850568640977e-05, -0.36328887939453125], "finish_reason": "stop"}], "metrics": {"energy": 97.01831106758117, "energy_per_token": 1.6169718511263527, "time": 3.1710823, "time_per_token": 0.05285137166666667}}
