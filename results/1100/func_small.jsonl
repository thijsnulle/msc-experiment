{"outputs": [{"text": "texts = [re.sub(r\"(https?)://(www\\.)?([-\\w]+)([\\.\\/\\w]+)\", r\"\", text) for text in texts]\n    vectorizer = TfidfVectorizer()\n    return vectorizer.fit_transform(texts), vectorizer.get_feature_names()\n\nclass TestTaskFunc(unittest.TestCase):\n    \"\"\"\n    Unit test suite to validate the correctness of the task_func function.\n    \"\"\"\n\n    def test_task_func(self):\n        \"\"\"\n        Test case to validate the task_func function with sample inputs.\n        \"\"\"\n        texts = [\n            \"I like Python. I have Python skills. Python is great.\",\n            \"Python is a programming language that is used widely in web development.\",\n            \"Python is a programming language that is used in web development. I have Python skills.\",\n        ]\n        expected_tfidf_scores, expected_features = task_func(texts)\n        expected_tfidf_scores_dense = np", "tokens": ["text", "s", " =", " [", "re", ".", "sub", "(", "r", "\"", "(", "https", "?", ")", "://", "(", "www", "\\", ".", ")", "?", "([", "-\\", "w", "]+", ")(", "[\\", ".", "\\", "/\\", "w", "]+", ")\"", ",", " r", "\"", "\"", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "return", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "    ", "\"", "\"", "\"", "\n", "    ", "Unit", " test", " suite", " to", " validate", " the", " correctness", " of", " the", " task", "_", "func", " function", ".", "\n", "    ", "\"", "\"", "\"", "\n", "\n", "    ", "def", " test", "_", "task", "_", "func", "(", "self", "):", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "Test", " case", " to", " validate", " the", " task", "_", "func", " function", " with", " sample", " inputs", ".", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "text", "s", " =", " [", "\n", "            ", "\"", "I", " like", " Python", ".", " I", " have", " Python", " skills", ".", " Python", " is", " great", ".", "\"", ",", "\n", "            ", "\"", "Python", " is", " a", " programming", " language", " that", " is", " used", " widely", " in", " web", " development", ".", "\"", ",", "\n", "            ", "\"", "Python", " is", " a", " programming", " language", " that", " is", " used", " in", " web", " development", ".", " I", " have", " Python", " skills", ".", "\"", ",", "\n", "        ", "]", "\n", "        ", "expected", "_", "tf", "id", "f", "_", "scores", ",", " expected", "_", "features", " =", " task", "_", "func", "(", "text", "s", ")", "\n", "        ", "expected", "_", "tf", "id", "f", "_", "scores", "_", "dense", " =", " np"], "logprobs": [-2.782748222351074, -0.07967173308134079, -0.1582709103822708, -0.14109297096729279, -0.7593837976455688, -0.0002090712368953973, -0.033378321677446365, -0.11840103566646576, -0.11084360629320145, -1.3504643440246582, -1.710593819618225, -0.8969392776489258, -0.05816156044602394, -3.3118481636047363, -0.02300630509853363, -3.103677749633789, -0.0832437202334404, -0.9221643805503845, -0.0036551826633512974, -0.2655854821205139, -0.00019786784832831472, -1.9177594184875488, -2.0265729427337646, -0.0007110689766705036, -1.054983139038086, -2.9437341690063477, -2.6802444458007812, -0.06219414621591568, -0.08719049394130707, -0.19792023301124573, -0.2394711822271347, -1.1516138315200806, -0.38023000955581665, -0.001708358759060502, -0.8920121192932129, -0.39085114002227783, -1.6424742937088013, -0.0006231511943042278, -0.6720059514045715, -0.17998714745044708, -0.13795806467533112, -0.0020999303087592125, -0.00027938754647038877, -0.0015376898227259517, -0.009802065789699554, -0.06561657786369324, -0.3076989948749542, -0.4909050464630127, -0.006538545247167349, -0.0022665781434625387, -0.00047886825632303953, -2.145764938177308e-06, -1.3708974620385561e-05, -2.264974000354414e-06, -1.07287787614041e-05, -9.536738616588991e-07, -0.765273928642273, -0.016796709969639778, -0.03206181153655052, -2.1541430950164795, -0.18246334791183472, -0.0007431129342876375, -0.00017486473370809108, -0.0020786363165825605, -0.013332734815776348, -6.05564855504781e-05, -0.0793483778834343, -0.003511455375701189, -9.560128091834486e-05, -0.005000466015189886, -0.502443253993988, -0.0772370994091034, -2.3364747903542593e-05, -3.6238969187252223e-05, -0.032838936895132065, -1.7881377516459906e-06, -0.00028010259848088026, -7.152555099310121e-07, -0.003910396248102188, -0.5206021666526794, -0.6501446962356567, -0.014679167419672012, -3.2118613719940186, -0.48135673999786377, -0.1526697874069214, -0.10366719216108322, -0.0405503511428833, -0.08026356995105743, -4.0531076592742465e-06, -0.0004909025738015771, -0.00018404220463708043, -0.001190073206089437, -0.0006299418746493757, -0.14332211017608643, -1.45081627368927, -0.0009947833605110645, -2.8371408916427754e-05, -0.3747427463531494, -0.005217862781137228, -1.3142585754394531, -1.623533010482788, -3.6652421951293945, -2.5326836109161377, -1.5633803606033325, -0.13839764893054962, -0.9940980672836304, -0.01671406254172325, -0.3116203248500824, -0.48967137932777405, -0.06828886270523071, -0.0015462597366422415, -0.2124468833208084, -0.22835247218608856, -0.012566196732223034, -0.39278897643089294, -0.0968092754483223, -1.537788011773955e-05, -2.0265558760002023e-06, -0.0001731960946926847, -0.5393167734146118, -0.000270091783022508, -0.2077847719192505, -0.1005454733967781, -0.013623475097119808, -0.7233830094337463, -0.007877473719418049, -0.014087755233049393, -0.394498348236084, -7.295342220459133e-05, -0.027145057916641235, -0.0031673761550337076, -0.00236969324760139, -0.40071040391921997, -0.000300958170555532, -2.8609820219571702e-05, -0.03674252703785896, -0.0014178233686834574, -0.5297648310661316, -0.5775562524795532, -0.5034098625183105, -1.4834072589874268, -0.10593611001968384, -0.9334585666656494, -0.016535500064492226, -0.0002146728802472353, -0.013022848404943943, -1.84397292137146, -1.8546549081802368, -1.1973108053207397, -0.1672597974538803, -0.0061887530609965324, -0.1789199411869049, -0.08857162296772003, -1.07287787614041e-05, -3.2186455882765586e-06, -2.1219027985353023e-05, -0.03288980573415756, -0.5691473484039307, -0.023481270298361778, -0.03226059302687645, -0.8833026885986328, -0.37946024537086487, -0.008182219229638577, -0.47582176327705383, -2.5166945457458496, -1.835900902748108, -1.130487322807312, -0.7498029470443726, -1.9950214624404907, -3.8942203521728516, -3.7549638748168945, -2.649679183959961, -0.16460587084293365, -2.01699161529541, -0.12474820017814636, -0.5081506371498108, -0.22188858687877655, -0.3847513794898987, -0.0017945152940228581, -0.0034626307897269726, -0.0006586528033949435, -0.011746760457754135, -0.672113299369812, -0.14635460078716278, -1.918110966682434, -1.4243111610412598, -0.00043871314846910536, -1.3400075435638428, -0.9413827061653137, -0.9005031585693359, -3.753037691116333, -0.8302937746047974, -2.3005194664001465, -0.02062586508691311, -0.6131864786148071, -0.3004757761955261, -0.021442610770463943, -0.0008295908919535577, -0.015838416293263435, -0.003557307878509164, -0.6279388070106506, -0.15345455706119537, -0.6052931547164917, -1.1837801933288574, -0.001740013831295073, -0.2310730218887329, -0.25157129764556885, -0.32113197445869446, -0.9362223744392395, -1.9187240600585938, -0.0713096335530281, -1.250847339630127, -2.896946668624878, -1.7464457750320435, -0.42353713512420654, -0.026294060051441193, -0.05214901268482208, -0.06878364831209183, -0.2796570956707001, -0.0005292683490552008, -0.9419803619384766, -3.969590397900902e-05, -0.00022218143567442894, -0.1522112339735031, -0.7194276452064514, -0.06502348929643631, -2.626380443572998, -0.3026585280895233, -0.0278962180018425, -0.8108019828796387, -0.6212485432624817, -0.38018354773521423, -0.05323852226138115, -0.00018285033002030104, -0.7161715626716614, -0.01072759460657835, -0.2243504673242569, -3.218599158572033e-05, -1.490105023549404e-05, -0.004943647887557745, -0.002371001522988081, -3.194758028257638e-05, -0.0017551269847899675, -0.0009347598534077406, -0.25684604048728943, -0.8387216329574585, -0.004725360777229071, -0.18125967681407928, -0.001409133430570364, -0.0001174142598756589, -0.0027035849634557962, -0.011434967629611492, -2.9133429527282715, -0.6202471256256104, -0.26848071813583374, -0.8970181941986084], "finish_reason": "length"}], "metrics": {"energy": 367.7879017496112, "energy_per_token": 1.4366714912094187, "time": 13.499617, "time_per_token": 0.05273287890625}}
{"outputs": [{"text": "texts = [s.strip() for s in texts]\n    tfidf_vec = TfidfVectorizer(lowercase=False).fit(texts)\n    scores = tfidf_vec.transform([s.lower() for s in texts])\n    feature_names = tfidf_vec.get_feature_names()\n    return [tuple(np.round(s, 8)) for s in scores], feature_names", "tokens": ["text", "s", " =", " [", "s", ".", "strip", "()", " for", " s", " in", " texts", "]", "\n", "    ", "tf", "id", "f", "_", "vec", " =", " T", "f", "id", "f", "Vector", "izer", "(", "low", "erc", "ase", "=", "False", ")", ".", "fit", "(", "text", "s", ")", "\n", "    ", "scores", " =", " tf", "id", "f", "_", "vec", ".", "transform", "([", "s", ".", "lower", "()", " for", " s", " in", " texts", "])", "\n", "    ", "feature", "_", "names", " =", " tf", "id", "f", "_", "vec", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " [", "tuple", "(", "np", ".", "round", "(", "s", ",", " ", "8", "))", " for", " s", " in", " scores", "]", ",", " feature", "_", "names", "\n", "\n", "if"], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -3.708251953125, -0.08642257004976273, -1.9196760654449463, -0.05322778597474098, -0.33670762181282043, -0.0021059971768409014, -0.0001646144810365513, -0.026559118181467056, -0.49073201417922974, -0.08390995860099792, -0.15484961867332458, -3.4416449069976807, -0.40746843814849854, -0.00259860185906291, -0.9936079382896423, -2.3869197368621826, -0.006908459588885307, -0.0019069596892222762, -5.722029527532868e-06, -0.001970613142475486, -2.7418097943154862e-06, -1.5139465176616795e-05, -1.1920922133867862e-06, -0.4662092626094818, -2.8116018772125244, -0.0006544832140207291, -0.00011157367407577112, -0.003925357945263386, -0.37939614057540894, -1.0587890148162842, -2.4654269218444824, -0.004914466291666031, -0.20626239478588104, -0.013473764061927795, -0.000169382052263245, -0.0026071625761687756, -0.027171973139047623, -0.07083853334188461, -1.995059609413147, -0.06971589475870132, -0.05578114837408066, -2.002696055569686e-05, -7.152555099310121e-07, -1.883488948806189e-05, -1.6927575416048057e-05, -7.354942499659956e-05, -0.09821122884750366, -2.956596612930298, -0.7470325827598572, -0.19217078387737274, -1.9045722484588623, -0.0009678685455583036, -0.173362135887146, -0.0003551805857568979, -0.00026651646476238966, -0.007584584876894951, -0.0360153466463089, -0.37627914547920227, -0.10345577448606491, -3.2049078941345215, -0.011248034425079823, -0.3156718909740448, -0.007943704724311829, -0.11185792833566666, -3.576272320060525e-06, -1.311301275563892e-06, -2.861018856492592e-06, -2.145764938177308e-06, -3.540453326422721e-05, -0.03403298556804657, -1.7881377516459906e-06, -0.00020752183627337217, -6.079655122448457e-06, -0.004102030768990517, -0.33581236004829407, -0.007659707684069872, -0.14004932343959808, -0.4238947033882141, -3.6444549560546875, -0.8892812132835388, -0.13376140594482422, -3.4734580516815186, -0.00139639584813267, -0.22851772606372833, -0.05979312211275101, -1.2341820001602173, -1.2999664545059204, -0.15957258641719818, -0.012833857908844948, -0.10188719630241394, -0.006738557480275631, -0.0008556757238693535, -0.000500196241773665, -0.04649993032217026, -0.18727487325668335, -0.0019135037437081337, -0.11481110751628876, -0.00014149141497910023, -7.152555099310121e-07, -0.5232200026512146, -0.011011429131031036, -0.9558407664299011], "finish_reason": "stop"}], "metrics": {"energy": 135.73984611892703, "energy_per_token": 1.2805645860276136, "time": 4.6405773, "time_per_token": 0.04377903113207547}}
{"outputs": [{"text": "# Removing URLs using regular expression\n    cleaned_texts = [re.sub(r'http\\S+|www\\S+|https\\S+', '', text) for text in texts]\n\n    # Create a vectorizer object using TfidfVectorizer\n    vectorizer = TfidfVectorizer()\n\n    # Fit and transform the cleaned text documents to generate the TF-IDF scores\n    tfidf_matrix = vectorizer.fit_transform(cleaned_texts)\n\n    # Convert the dense matrix into a list of tuples and a list of words\n    scores_list = tfidf_matrix.toarray()\n    unique_words = vectorizer.get_feature_names()\n\n    return scores_list, unique_words", "tokens": ["#", " Rem", "oving", " URLs", " using", " regular", " expression", "\n", "    ", "cleaned", "_", "text", "s", " =", " [", "re", ".", "sub", "(", "r", "'", "http", "\\", "S", "+|", "www", "\\", "S", "+|", "https", "\\", "S", "+'", ",", " ''", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Create", " a", " vector", "izer", " object", " using", " T", "f", "id", "f", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "\n", "    ", "#", " Fit", " and", " transform", " the", " cleaned", " text", " documents", " to", " generate", " the", " TF", "-", "ID", "F", " scores", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cleaned", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Convert", " the", " dense", " matrix", " into", " a", " list", " of", " t", "up", "les", " and", " a", " list", " of", " words", "\n", "    ", "scores", "_", "list", " =", " tf", "id", "f", "_", "matrix", ".", "to", "array", "()", "\n", "    ", "unique", "_", "words", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "return", " scores", "_", "list", ",", " unique", "_", "words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5304116010665894, -4.136186122894287, -0.27060049772262573, -0.4171498119831085, -3.2100372314453125, -0.501154363155365, -0.6726614236831665, -0.26890161633491516, -0.005452997051179409, -2.2482476234436035, -0.01496928185224533, -0.08660339564085007, -0.01320039201527834, -0.009541739709675312, -0.4623631536960602, -0.08052647113800049, -7.235741941258311e-05, -0.005277274176478386, -0.028642874211072922, -0.09533035755157471, -0.33472734689712524, -0.4941456913948059, -0.42419564723968506, -0.014361237175762653, -0.9539985656738281, -1.5779213905334473, -0.30576732754707336, -0.07299215346574783, -0.48905718326568604, -2.491702079772949, -0.07727175205945969, -0.0003859252028632909, -0.39590346813201904, -5.352353764465079e-05, -0.19975997507572174, -6.067568756407127e-05, -0.23023855686187744, -0.08044321089982986, -0.08591050654649734, -0.00021562635083682835, -3.790783375734463e-05, -0.0004188137245364487, -0.0031018974259495735, -0.0018737631617113948, -0.09879392385482788, -0.00038246947224251926, -0.11528330296278, -3.2191896438598633, -0.4818727672100067, -1.4677306413650513, -0.007294568233191967, -0.8207706212997437, -3.1370816230773926, -1.0229060649871826, -0.00020346954988781363, -0.014348780736327171, -0.00010394509445177391, -0.0046156058087944984, -0.00011574551899684593, -0.4547261893749237, -0.0005168771021999419, -0.05856233462691307, -0.0012260308722034097, -0.0005292683490552008, -0.0003177614707965404, -2.145764938177308e-06, -0.0001711698860162869, -1.1920928244535389e-07, -6.437280717364047e-06, -9.512448741588742e-05, -0.587985098361969, -0.0029372903518378735, -0.08431271463632584, -0.00021741411183029413, -0.007420950569212437, -0.5878164768218994, -1.0506486892700195, -0.018317818641662598, -0.1965259462594986, -0.5681887269020081, -1.2156394720077515, -0.37735915184020996, -1.3295462131500244, -1.4344942569732666, -1.4678599834442139, -0.6154413819313049, -0.005706329829990864, -0.00012265883560758084, -0.00021991695393808186, -0.07234487682580948, -0.09966225922107697, -0.00036435641231946647, -1.0802642107009888, -0.22003833949565887, -0.003685113275423646, -0.19216133654117584, -1.3724453449249268, -0.012388893403112888, -0.0029038903303444386, -9.417489309271332e-06, -2.5152843591058627e-05, -7.462222856702283e-05, -0.0004843492351938039, -3.075552376685664e-05, -0.006735597271472216, -0.0014581772265955806, -2.50339189733495e-06, -1.311301275563892e-06, -4.0531076592742465e-06, -0.00044824567157775164, -0.16163752973079681, -0.07271529734134674, -0.00025674383505247533, -0.025082705542445183, -1.959883213043213, -0.14749856293201447, -2.3956165313720703, -0.1870734989643097, -1.9317246675491333, -0.05645601823925972, -0.16424016654491425, -0.024119755253195763, -0.17297114431858063, -8.141662692651153e-05, -1.1801649634435307e-05, -2.556137800216675, -2.400015354156494, -0.08234596252441406, -0.005718656815588474, -1.079657793045044, -0.2609494924545288, -0.0007183355046436191, -1.5243829488754272, -1.634769320487976, -0.3805258274078369, -0.03346271440386772, -1.0099236965179443, -1.2040065485052764e-05, -7.152555099310121e-07, -3.635817120084539e-05, -0.00022301571152638644, -0.0029435898177325726, -0.37216916680336, -0.1684492975473404, -0.003922626841813326, -0.3482750356197357, -0.03250237926840782, -2.493335008621216, -0.00032824851223267615, -0.11175250262022018, -0.03323107585310936, -0.10205491632223129, -8.106198947643861e-06, -6.079655122448457e-06, -0.03785456717014313, -7.152555099310121e-07, -0.0002847504511009902, 0.0, -0.001960024470463395, -0.2556907832622528, -0.0055109718814492226, -0.09326551854610443, -0.00011729506513802335, -0.5561496019363403, -0.42018240690231323, -2.0503786799963564e-05, -6.6756979322235566e-06, -0.0005125877796672285, -0.006008537951856852, -0.00012170527770649642, -5.364403477869928e-06, -1.0082412958145142, -1.311301275563892e-06, -1.4305104514278355e-06, -6.031808152329177e-05, -0.0003985564399044961, -0.10916313529014587], "finish_reason": "stop"}], "metrics": {"energy": 192.6475960235595, "energy_per_token": 1.0884044973082456, "time": 7.787792, "time_per_token": 0.04399882485875706}}
{"outputs": [{"text": "stopwords_list = re.compile('[' + re.sub('|', '', r'\\W') + ']').split(',')\n\n    stopword_dict = {}\n    for s in stopwords_list:\n        stopword_dict[s] = s\n\n    vectorizer = TfidfVectorizer(stop_words='english')\n\n    tfidf = vectorizer.fit_transform(texts)\n    tfidf_matrix = tfidf.toarray()\n\n    tfidf_dict = {}\n    for i in range(len(tfidf_matrix)):\n        tfidf_dict[texts[i]] = tfidf_matrix[i]\n\n    tfidf_matrix = np.zeros((len(texts), len(vectorizer.vocabulary_)))\n    for i, doc in enumerate(texts):\n        doc = doc.split(' ')\n        for j, w in enumerate(doc):\n            if w.lower() not in stopword_dict:\n                tfidf_matrix[i, j] = tfidf_dict", "tokens": ["stop", "words", "_", "list", " =", " re", ".", "compile", "('", "['", " +", " re", ".", "sub", "('", "|", "'", ",", " ''", ",", " r", "'\\", "W", "')", " +", " '", "]", "')", ".", "split", "('", ",", "')", "\n", "\n", "    ", "stop", "word", "_", "dict", " =", " {}", "\n", "    ", "for", " s", " in", " stop", "words", "_", "list", ":", "\n", "        ", "stop", "word", "_", "dict", "[", "s", "]", " =", " s", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "\n", "    ", "tf", "id", "f", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " tf", "id", "f", ".", "to", "array", "()", "\n", "\n", "    ", "tf", "id", "f", "_", "dict", " =", " {}", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "tf", "id", "f", "_", "matrix", "))", ":", "\n", "        ", "tf", "id", "f", "_", "dict", "[", "text", "s", "[", "i", "]]", " =", " tf", "id", "f", "_", "matrix", "[", "i", "]", "\n", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " np", ".", "zeros", "((", "len", "(", "text", "s", ")", ",", " len", "(", "vector", "izer", ".", "voc", "abulary", "_", ")))", "\n", "    ", "for", " i", ",", " doc", " in", " enumerate", "(", "text", "s", "):", "\n", "        ", "doc", " =", " doc", ".", "split", "('", " '", ")", "\n", "        ", "for", " j", ",", " w", " in", " enumerate", "(", "doc", "):", "\n", "            ", "if", " w", ".", "lower", "()", " not", " in", " stop", "word", "_", "dict", ":", "\n", "                ", "tf", "id", "f", "_", "matrix", "[", "i", ",", " j", "]", " =", " tf", "id", "f", "_", "dict"], "logprobs": [-3.75119686126709, -1.6857870817184448, -2.3786325454711914, -0.5574405193328857, -0.01889655739068985, -3.265320062637329, -0.00010775939153973013, -0.6520552635192871, -0.9934321641921997, -0.33035898208618164, -0.10075470805168152, -0.03470680117607117, -0.00041059168870560825, -0.2632054090499878, -0.2931291162967682, -0.1768253743648529, -0.00023147765023168176, -0.012883403338491917, -0.9089729189872742, -0.0001691436773398891, -1.1186717748641968, -2.364410638809204, -0.6580462455749512, -0.39723947644233704, -0.005437109619379044, -0.09950298815965652, -0.04731367155909538, -0.09148374944925308, -1.4209051132202148, -1.0082608461380005, -0.37661096453666687, -3.1797080039978027, -0.02059445157647133, -0.050654854625463486, -1.4507373571395874, -0.0003196682082489133, -2.3553669452667236, -2.7335896492004395, -0.031515710055828094, -2.6201934814453125, -0.014301540330052376, -1.2066665887832642, -0.01588628813624382, -0.10737641155719757, -0.11401784420013428, -3.3332180976867676, -0.041197825223207474, -0.01468492392450571, -0.00012146688823122531, -0.004152960609644651, -9.65590606938349e-06, -0.007954703643918037, -0.00658402219414711, -0.010439549572765827, -0.19729232788085938, -0.000976800569333136, -0.003499576123431325, -0.0002740246127359569, -0.03872411698102951, -0.012252303771674633, -0.1554315686225891, -0.00010227633902104571, -3.0596745014190674, -0.0721953883767128, -0.2011079341173172, -0.0005231918767094612, -1.1742899417877197, -0.016766464337706566, -0.005297077354043722, -0.001388658070936799, -2.9802276912960224e-06, -1.4543427823809907e-05, -3.2186455882765586e-06, -1.5616295058862306e-05, -1.0728830375228426e-06, -0.09673546999692917, -0.47981300950050354, -0.000683074293192476, -0.0018331881146878004, -0.9791148900985718, -0.015955979004502296, -5.829164365422912e-05, -0.8934552073478699, -0.009220518171787262, -1.535793423652649, -0.0001668790791882202, -2.0231170654296875, -0.2707117199897766, -0.014983256347477436, -0.9942981004714966, -0.048796363174915314, -1.7523612768854946e-05, -0.0006699701189063489, -0.0025680442340672016, -0.043243225663900375, -7.557583012385294e-05, -0.0667375773191452, -0.02744932472705841, -0.0002809368306770921, -0.004758106544613838, -0.06328967213630676, -0.7905464172363281, -2.0198380947113037, -0.08148673921823502, -0.01287904940545559, -0.29624611139297485, -1.565735101699829, -0.022598594427108765, -0.07420487701892853, -7.271740287251305e-06, -2.7418097943154862e-06, -0.005942178890109062, -0.8583259582519531, -0.01797095313668251, -0.001536499592475593, -0.03336828947067261, -0.5137704014778137, -0.00013279033009894192, -2.1219053268432617, -0.13364502787590027, -0.010183991864323616, -0.019680587574839592, -2.415903091430664, -0.052316803485155106, -0.3180793821811676, -0.0041678003035485744, -0.2492067515850067, -0.29008620977401733, -0.623666524887085, -0.6840160489082336, -0.06862527132034302, -0.0007743220776319504, -0.6175459623336792, -0.0001515035255579278, -0.5167959928512573, -6.198863957251888e-06, -5.245195097813848e-06, -0.04413342475891113, -0.0009735850035212934, -0.2596582770347595, -0.00010585224663373083, -0.004857524763792753, -0.009258432313799858, -0.6964009404182434, -0.024405281990766525, -0.0023258081637322903, -0.005572143942117691, -0.20366014540195465, -0.05701085552573204, -1.458084225654602, -0.0006724718841724098, -0.0005498804384842515, -0.0017923733685165644, -0.02065470814704895, -0.0014348459662869573, -0.4162192642688751, -2.407998726994265e-05, -9.536697689327411e-06, -0.04050959646701813, -0.0043088216334581375, -0.0012291265884414315, -0.0025649527087807655, -0.04899865761399269, -0.027708740904927254, -0.06161864101886749, -0.00047231485950760543, -1.982749581336975, -0.029566876590251923, -0.0067322817631065845, -0.02965645119547844, -2.827838897705078, -0.29622048139572144, -1.877858281135559, -0.0013871104456484318, -3.5386972427368164, -0.31091564893722534, -0.18012204766273499, -0.00023803261865396053, -1.4854142665863037, -0.00021920185827184469, -0.011578268371522427, -0.0025305887684226036, -0.2951452434062958, -0.0002694958820939064, -0.20421087741851807, -1.6927575416048057e-05, -0.0002134810492862016, -0.7629514336585999, -0.0026968084275722504, -0.02153828553855419, -0.2008836716413498, -0.012415856122970581, -0.6450949907302856, -0.24458560347557068, -0.4236377477645874, -1.6519582271575928, -2.0146865844726562, -0.08957542479038239, -0.01823810674250126, -0.00014757021563127637, -0.6026861667633057, -0.00016091958968900144, -0.0012828224571421742, -0.0019556223414838314, -0.010234259068965912, -2.5220394134521484, -1.013631820678711, -0.9638450145721436, -0.012231696397066116, -0.7988279461860657, -1.5531458854675293, -0.021126357838511467, -0.0009505997295491397, -0.003372578416019678, -0.09187661111354828, -0.7723494172096252, -1.4847296476364136, -0.2413899004459381, -2.4332308769226074, -0.05395927280187607, -0.05408339574933052, -0.0010707604233175516, -0.05412529408931732, -0.0017101438716053963, -0.000707971747033298, -0.0080165546387434, -0.38530734181404114, -0.1919003278017044, -1.622902274131775, -0.09729404002428055, -0.0014937683008611202, -0.6533330678939819, -2.098061486321967e-05, -0.035964980721473694, -0.014740251004695892, -7.390948667307384e-06, -3.6238969187252223e-05, -0.3868655264377594, -0.004114377778023481, -0.0019165972480550408, -0.27945050597190857, -0.008825935423374176, -6.747018051100895e-05, -0.0030404552817344666, -0.0059927781112492085, -0.0005180685548111796, -0.00047017011092975736, -0.7740062475204468, -1.2656478881835938, -0.0143966069445014, -0.018200883641839027, -0.3693569302558899, -0.005275732837617397, -0.00025018901214934886, -1.26102614402771, -0.012690972536802292], "finish_reason": "length"}], "metrics": {"energy": 273.884916212082, "energy_per_token": 1.0698629539534452, "time": 11.35375, "time_per_token": 0.0443505859375}}
{"outputs": [{"text": "docs = re.sub('\\s+', ' ', ' '.join(texts))\n    tfidf_vectorizer = TfidfVectorizer(\n        stop_words='english',\n        token_pattern=r'[\\S]+'\n    )\n    vectorizer = tfidf_vectorizer.fit_transform(docs)\n    scores = vectorizer.todense()\n\n    unique_words = tfidf_vectorizer.get_feature_names()\n    scores = tfidf_vectorizer.transform(docs).todense()\n    return (scores, unique_words)", "tokens": ["docs", " =", " re", ".", "sub", "('", "\\", "s", "+'", ",", " '", " '", ",", " '", " '", ".", "join", "(", "text", "s", "))", "\n", "    ", "tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "stop", "_", "words", "='", "eng", "lish", "'", ",", "\n", "        ", "token", "_", "pattern", "=", "r", "'", "[\\", "S", "]+", "'", "\n", "    ", ")", "\n", "    ", "vector", "izer", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "docs", ")", "\n", "    ", "scores", " =", " vector", "izer", ".", "t", "od", "ense", "()", "\n", "\n", "    ", "unique", "_", "words", " =", " tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "scores", " =", " tf", "id", "f", "_", "vector", "izer", ".", "transform", "(", "docs", ")", ".", "t", "od", "ense", "()", "\n", "    ", "return", " (", "scores", ",", " unique", "_", "words", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-4.184535026550293, -0.28898248076438904, -2.893343448638916, -0.00029345019720494747, -0.28639864921569824, -1.8602817058563232, -2.3132197856903076, -1.8921891450881958, -1.0485007762908936, -0.0008758046315051615, -0.07021519541740417, -0.008423632010817528, -0.0004406196530908346, -0.5328350067138672, -0.017716258764266968, -0.0017065736465156078, -0.00013517419574782252, -0.03851594775915146, -0.068027064204216, -0.004008355084806681, -0.06607229262590408, -0.5896773338317871, -0.11855362355709076, -2.728376626968384, -0.4614771008491516, -0.003824065439403057, -1.3000602722167969, -0.2635520398616791, -0.034104421734809875, -0.002176893875002861, -0.001007645158097148, -3.814689989667386e-06, -0.0011433976469561458, -3.3378546504536644e-06, -8.940656698541716e-06, -0.00018261195509694517, -0.37173226475715637, -3.7982237339019775, -0.022924870252609253, -1.2314170598983765, -3.099393507000059e-05, -0.00043108707177452743, -0.23442421853542328, -0.03192834556102753, -3.611976353568025e-05, -0.018134158104658127, -0.050465818494558334, -0.19324761629104614, -0.027758946642279625, -1.619800090789795, -1.6820104122161865, -0.06838616728782654, -0.40946847200393677, -0.12960383296012878, -1.5963411331176758, -0.6841258406639099, -2.438237428665161, -0.08312371373176575, -0.13129183650016785, -1.2313644886016846, -0.01943369209766388, -0.0002989322238136083, -0.06349856406450272, -0.185543492436409, -2.2559733390808105, -0.893825352191925, -0.16475601494312286, -0.04548734053969383, -9.417489309271332e-06, -2.3841855067985307e-07, -1.9311717551317997e-05, -5.364403477869928e-06, -2.2411095415009186e-05, -0.011799188330769539, -0.049630701541900635, -1.0968577861785889, -6.878139538457617e-05, -0.4052187204360962, -0.08700856566429138, -0.2118464559316635, -0.020505929365754128, -0.17127446830272675, -2.109494686126709, -0.15470543503761292, -0.20260633528232574, -0.0005345107638277113, -0.004652627278119326, -1.1366462707519531, -0.00028355870745144784, -0.0010030006524175406, -0.010754365473985672, -0.24352483451366425, -2.0104222297668457, -0.00019739109848160297, -2.555654525756836, -0.014179903082549572, -0.22641226649284363, -0.033574651926755905, -0.2295723557472229, -7.116541382856667e-05, -4.768370445162873e-07, -1.811964830267243e-05, -1.3589766240329482e-05, -2.288792165927589e-05, -0.0001699779968475923, -0.17272885143756866, -3.4570634852570947e-06, -0.0004127365828026086, -4.768370445162873e-07, -0.0015831567579880357, -0.3020433783531189, -0.007318355143070221, -0.4404062032699585, -2.932563543319702, -0.41375645995140076, -4.0601935386657715, -0.23492923378944397, -0.00020466140995267779, -5.3881147323409095e-05, -0.007615226320922375, -0.004529692232608795, -0.0012678211787715554, -0.3969278633594513, -0.17572949826717377, -0.21215486526489258, -0.02303869090974331, -0.46215954422950745, -0.1605086326599121, -9.250213042832911e-05, -0.00011121608258690685, -0.004658204037696123, -0.1626216173171997, -0.33305615186691284, -0.9182952642440796, -1.280621886253357, -0.19122472405433655, -0.04325863718986511, -0.04808346927165985, -4.911301948595792e-05, -7.867782187531702e-06, -1.382730484008789, -3.576278118089249e-07, -2.3841830625315197e-06, -8.177422569133341e-05, -0.0004897110629826784, -0.1121964156627655], "finish_reason": "stop"}], "metrics": {"energy": 149.20715175724033, "energy_per_token": 1.0219667928578104, "time": 6.3210645, "time_per_token": 0.043294962328767124}}
{"outputs": [{"text": "tfidf = TfidfVectorizer()\n    words = re.findall(r'\\S+', \" \".join(texts))\n    texts = re.findall(r'https?://\\S+', \" \".join(texts))\n    return tfidf.fit_transform(texts), list(tfidf.get_feature_names())", "tokens": ["tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "words", " =", " re", ".", "find", "all", "(", "r", "'\\", "S", "+'", ",", " \"", " \"", ".", "join", "(", "text", "s", "))", "\n", "    ", "text", "s", " =", " re", ".", "find", "all", "(", "r", "'", "https", "?", "://", "\\", "S", "+'", ",", " \"", " \"", ".", "join", "(", "text", "s", "))", "\n", "    ", "return", " tf", "id", "f", ".", "fit", "_", "transform", "(", "text", "s", ")", ",", " list", "(", "tf", "id", "f", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "#"], "logprobs": [-2.6171674728393555, -0.2689514458179474, -0.0027197536546736956, -0.5298093557357788, -0.013543977402150631, -6.794906312279636e-06, -0.0007587176514789462, -1.9073468138230965e-06, -5.709961988031864e-05, -3.2186455882765586e-06, -0.771168053150177, -0.058888211846351624, -0.14542467892169952, -3.1329598426818848, -0.31666719913482666, -2.254398822784424, -0.0002401778765488416, -1.4110305309295654, -0.0014067525044083595, -0.1557091921567917, -0.04236822947859764, -0.37063413858413696, -3.0996298789978027, -0.028445573523640633, -7.83174327807501e-05, -1.9999630451202393, -0.11773323267698288, -0.0013190149329602718, -0.00023529145983047783, -0.007448520511388779, -0.034108567982912064, -0.0015112657565623522, -0.015594678930938244, -0.08398712426424026, -0.08251523971557617, -3.016603946685791, -0.2908911406993866, -0.2162688672542572, -2.5188724994659424, -0.001347110839560628, -1.0823678970336914, -0.0035397273022681475, -0.03294505923986435, -0.021616799756884575, -0.6183825135231018, -0.768118679523468, -0.14333564043045044, -0.29852503538131714, -0.7057704925537109, -0.0032864389941096306, -0.20989209413528442, -6.01988795096986e-05, -0.04114279896020889, -0.015472260303795338, -6.365573790390044e-05, -0.0005564333405345678, -0.0027336629573255777, -0.04098719358444214, -0.0004297763225622475, -0.03661037236452103, -0.02355148270726204, -0.08977432548999786, -1.8148924112319946, -0.17236289381980896, -9.536697689327411e-06, -7.152555099310121e-07, -0.00017045476124621928, -0.0030513890087604523, -0.017521124333143234, -8.237022848334163e-05, -0.2957363426685333, -0.13826508820056915, -0.0003143055073451251, -0.15286031365394592, -0.6273870468139648, -2.217007875442505, -0.001895775320008397, -0.26237165927886963, -0.0002787916746456176, -4.768370445162873e-07, -9.238292841473594e-05, -0.326554536819458, -2.52720492426306e-05, -0.0002857038634829223, -7.152555099310121e-07, -0.0028363734018057585, -0.3334304094314575, -0.4559553265571594, -0.024473220109939575, -2.2984180450439453], "finish_reason": "stop"}], "metrics": {"energy": 108.83544965362545, "energy_per_token": 1.2092827739291716, "time": 3.7972791, "time_per_token": 0.04219199}}
{"outputs": [{"text": "def remove_url_from_text(text):\n        regex = re.compile(\n            r'http://[^\\s]')\n        return regex.sub('', text)\n\n    vectorizer = TfidfVectorizer(stop_words='english',\n                               analyzer='word_tokenize')\n    vectorizer.fit(list(map(remove_url_from_text, texts)))\n    scores = vectorizer.transform(list(map(remove_url_from_text, texts)))\n    return scores.toarray(), vectorizer.get_feature_names()", "tokens": ["def", " remove", "_", "url", "_", "from", "_", "text", "(", "text", "):", "\n", "        ", "regex", " =", " re", ".", "compile", "(", "\n", "            ", "r", "'", "http", "://", "[", "^\\", "s", "]", "')", "\n", "        ", "return", " regex", ".", "sub", "('", "'", ",", " text", ")", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "'", ",", "\n", "                ", "               ", "analy", "zer", "='", "word", "_", "token", "ize", "')", "\n", "    ", "vector", "izer", ".", "fit", "(", "list", "(", "map", "(", "remove", "_", "url", "_", "from", "_", "text", ",", " texts", ")))", "\n", "    ", "scores", " =", " vector", "izer", ".", "transform", "(", "list", "(", "map", "(", "remove", "_", "url", "_", "from", "_", "text", ",", " texts", ")))", "\n", "    ", "return", " scores", ".", "to", "array", "()", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "print"], "logprobs": [-4.156296730041504, -0.7975054979324341, -0.01529018860310316, -0.9530203342437744, -2.656250238418579, -0.6159108877182007, -0.010938325896859169, -0.3442936837673187, -0.11893144994974136, -0.12578994035720825, -0.06706369668245316, -0.00594940735027194, -0.00459222961217165, -2.335707187652588, -0.04205978289246559, -0.5244364738464355, -3.45700973412022e-05, -0.004705546423792839, -0.05925420671701431, -0.7104922533035278, -0.023906197398900986, -0.15691088140010834, -0.7294659614562988, -0.2992907464504242, -0.30695074796676636, -1.9494364261627197, -0.27151891589164734, -0.04396219924092293, -2.0203986167907715, -3.3279776573181152, -0.40537720918655396, -0.030893374234437943, -1.4401617050170898, -0.1558123379945755, -9.858122211880982e-05, -0.0003430254873819649, -0.47590768337249756, -0.0947347953915596, -0.00016592556494288146, -0.015184874646365643, -0.03531825169920921, -0.03993109613656998, -0.0952271819114685, -0.0003147821989841759, -1.1266586780548096, -0.0067743160761892796, -0.002796788467094302, -0.0006874820101074874, -3.814689989667386e-06, -9.179073458653875e-06, -2.622600959512056e-06, -2.0146166207268834e-05, -8.344646857949556e-07, -0.5020094513893127, -1.130721926689148, -1.1086402082582936e-05, -0.00042500998824834824, -0.12057329714298248, -0.005716997664421797, -8.11782301752828e-05, -1.6990994215011597, -0.006088282447308302, -2.7704739570617676, -0.008724311366677284, -0.9490059018135071, -2.6816320419311523, -0.010452172718942165, -0.7548062205314636, -0.1126241460442543, -0.4737359583377838, -0.45910364389419556, -0.07217010110616684, -0.8120150566101074, -0.04008124768733978, -0.21314606070518494, -1.5496811866760254, -0.7442588210105896, -0.02278435230255127, -0.11170058697462082, -0.1996481865644455, -1.1073963642120361, -0.0014103237772360444, -0.005206478293985128, -0.0001714082609396428, -0.015190275385975838, -1.6689286894688848e-06, -1.2159273865108844e-05, -2.1576648578047752e-05, -3.3378546504536644e-06, -2.7656173188006505e-05, -1.1920922133867862e-06, -0.0006790239713154733, -0.008992647752165794, -0.005301346071064472, -0.019105223938822746, -0.28961625695228577, -2.3292336463928223, -0.08577682077884674, -0.04106408357620239, -5.769562994828448e-05, -7.009260298218578e-05, -0.2565614581108093, -0.0066996002569794655, -0.7047649025917053, -0.0001951265730895102, -0.004430597182363272, -5.1616290875244886e-05, -0.0011698314920067787, -4.100715523236431e-05, -2.0265558760002023e-06, -1.1920922133867862e-06, -2.9802276912960224e-06, -1.6689160474925302e-05, -4.768370445162873e-07, -4.672895011026412e-05, -0.0006852186052128673, -0.00991373136639595, -0.3832798898220062, -0.19447769224643707, -1.0103130340576172, -0.8838370442390442, -0.4662684202194214, -0.08972441405057907, -0.12453761696815491, -0.005842512473464012, -0.09866658598184586, -0.22939059138298035, -1.5139465176616795e-05, -0.00021217002358753234, -0.05362274870276451, -5.722029527532868e-06, -0.0002330270071979612, -4.768370445162873e-07, -0.00434490479528904, -0.13220542669296265, -0.6826975345611572, -0.01762584038078785, -2.537492275238037], "finish_reason": "stop"}], "metrics": {"energy": 165.68288499259947, "energy_per_token": 1.200600615888402, "time": 6.101922, "time_per_token": 0.04421682608695652}}
{"outputs": [{"text": "texts = [s for s in texts if '://' not in s]\n    vectorizer = TfidfVectorizer(analyzer='word_shape')\n    tfidf_mat = vectorizer.fit_transform(texts)\n    features = vectorizer.get_feature_names_out()\n\n    # Round the scores to 8 decimal places for precision\n    tfidf_mat_rnd = np.around(tfidf_mat.toarray(), decimals=8)\n\n    return (tfidf_mat_rnd, features)", "tokens": ["text", "s", " =", " [", "s", " for", " s", " in", " texts", " if", " '", "://", "'", " not", " in", " s", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "_", "shape", "')", "\n", "    ", "tf", "id", "f", "_", "mat", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Round", " the", " scores", " to", " ", "8", " decimal", " places", " for", " precision", "\n", "    ", "tf", "id", "f", "_", "mat", "_", "r", "nd", " =", " np", ".", "around", "(", "tf", "id", "f", "_", "mat", ".", "to", "array", "()", ",", " dec", "imals", "=", "8", ")", "\n", "\n", "    ", "return", " (", "tf", "id", "f", "_", "mat", "_", "r", "nd", ",", " features", ")", "\n", "\n", "if"], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -3.708251953125, -2.7465198040008545, -0.013332381844520569, -0.0005647733341902494, -0.05669810622930527, -0.03168422728776932, -1.5433638095855713, -2.881417989730835, -0.005285100545734167, -0.005366087891161442, -0.00013863079948350787, -0.005885888356715441, -0.17273016273975372, -0.059934597462415695, -0.20112937688827515, -0.6337061524391174, -0.009164883755147457, -0.0027557751163840294, -0.0007778956205584109, -2.622600959512056e-06, -2.098061486321967e-05, -3.3378546504536644e-06, -1.0251946150674485e-05, -9.536738616588991e-07, -0.6532568335533142, -1.3665119409561157, -0.010050758719444275, -0.185441792011261, -0.16767066717147827, -2.2424631118774414, -2.2298810482025146, -0.674218475818634, -0.013442478142678738, -0.0294793751090765, -1.8165514469146729, -0.5298959016799927, -0.015046670101583004, -0.954045295715332, -3.025733470916748, -0.11767155677080154, -0.014565682969987392, -9.417489309271332e-06, -4.303362584323622e-05, -0.0009433348895981908, -0.002183198230341077, -5.9960475482512265e-05, -0.026775823906064034, -0.005357195157557726, -8.225102646974847e-05, -0.0017939202953130007, -0.11835910379886627, -0.12340342998504639, -2.8648054599761963, -0.028087947517633438, -0.2098817527294159, -3.886147169396281e-05, -2.396077979938127e-05, -0.047223050147295, -3.814689989667386e-06, -0.0005078217945992947, -1.4305104514278355e-06, -0.007094785571098328, -1.4534499645233154, -0.00036435641231946647, -0.013850410468876362, -0.012560663744807243, -2.10524845123291, -0.0010149095905944705, -2.460230588912964, -1.3050518035888672, -0.7769634127616882, -0.5144025087356567, -0.060832276940345764, -0.06459254771471024, -0.005091794766485691, -0.03358110412955284, -0.00488647073507309, -0.6388477087020874, -0.033243414014577866, -0.07505091279745102, -0.0006995138246566057, -0.7517486214637756, -0.006591127719730139, -0.005439836531877518, -0.010429994203150272, -0.10004588216543198, -2.828227996826172, -3.0481629371643066, -1.4625904560089111, -0.01826069876551628, -1.3981707096099854, -0.0007413261337205768, -0.5827027559280396, -0.003563603386282921, -0.013008610345423222, -6.6756979322235566e-06, -3.576272320060525e-06, -6.925819616299123e-05, -6.079655122448457e-06, -0.5908985137939453, -0.6267806887626648, -0.005051468964666128, -0.003525828942656517, -0.010049460455775261, -0.5058329105377197, -3.6477376852417365e-05, -0.0008945039589889348, -0.01042893249541521, -0.0071620154194533825, -0.02987607568502426, -0.31619131565093994, -5.769562994828448e-05, -0.13868212699890137, -1.0122610330581665, -0.013060853816568851, -2.861018856492592e-06, -2.0265558760002023e-06, -1.5735502529423684e-05, -1.1920858014491387e-05, -0.006227256264537573, -2.9444261599564925e-05, -1.3470558769768104e-05, -0.02677071839570999, -0.025347735732793808, -0.33380475640296936, -0.16061614453792572, -0.009777394123375416, -0.9593631625175476], "finish_reason": "stop"}], "metrics": {"energy": 136.3966859025955, "energy_per_token": 1.0333082265348144, "time": 5.6827745, "time_per_token": 0.043051321969696965}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer()\n    vectorized_documents = vectorizer.fit_transform(texts)\n    words_and_scores = vectorized_documents.toarray().T\n    unique_words = sorted(vectorizer.vocabulary_.keys())\n    return words_and_scores, unique_words", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vector", "ized", "_", "doc", "uments", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "words", "_", "and", "_", "scores", " =", " vector", "ized", "_", "doc", "uments", ".", "to", "array", "()", ".", "T", "\n", "    ", "unique", "_", "words", " =", " sorted", "(", "vector", "izer", ".", "voc", "abulary", "_", ".", "keys", "())", "\n", "    ", "return", " words", "_", "and", "_", "scores", ",", " unique", "_", "words", "\n", "\n", "if"], "logprobs": [-1.8747929334640503, -0.00777350552380085, -0.0037709809839725494, -0.0013043713988736272, -4.0531076592742465e-06, -1.3351351299206726e-05, -4.410734163684538e-06, -1.07287787614041e-05, -8.344646857949556e-07, -0.7183762788772583, -0.017334504052996635, -0.16258341073989868, -1.472822666168213, -1.0973073244094849, -0.10850132256746292, -2.226297616958618, -0.025736086070537567, -0.010547369718551636, -0.6716662049293518, -2.2411095415009186e-05, -2.7417760065873154e-05, -0.004033051431179047, -0.0027656422462314367, -0.00010561384988250211, -0.16886471211910248, -0.048191510140895844, -0.0005203323671594262, -0.0018317601643502712, -0.05279546603560448, -0.24106134474277496, -3.673370838165283, -1.457427740097046, -2.685243606567383, -0.00010978573118336499, -0.08793392032384872, -0.030806567519903183, -1.3786859512329102, -0.24349157512187958, -6.854299135738984e-05, -4.0411134250462055e-05, -1.645074735279195e-05, -0.004112122114747763, -0.14323017001152039, -0.06963217258453369, -0.009636197239160538, -1.1840105056762695, -2.5022356510162354, -0.20097319781780243, -0.1782979518175125, -1.120607852935791, -0.0003819928097072989, -0.10561887919902802, -0.03081408143043518, -2.78385329246521, -0.023780949413776398, -0.11742512881755829, -0.0008286379743367434, -2.396077979938127e-05, -0.9643351435661316, -0.008283544331789017, -0.3821384906768799, -0.0627765953540802, -0.047500692307949066, -0.013293327763676643, -0.016590608283877373, -0.29824772477149963, -0.09847734123468399, -0.37159302830696106, -6.198863957251888e-06, -3.099393507000059e-05, -4.577531944960356e-05, -1.0013530300057027e-05, -0.004169936757534742, -0.00877075269818306, -0.00015496007108595222, -1.3232143828645349e-05, -0.41930314898490906, -0.008154078386723995, -0.8097509145736694], "finish_reason": "stop"}], "metrics": {"energy": 84.8593820915222, "energy_per_token": 1.0741693935635723, "time": 3.3752694, "time_per_token": 0.04272492911392405}}
{"outputs": [{"text": "# Create an instance of the TfidfVectorizer with no stop words.\n    vectorizer = TfidfVectorizer(stop_words='')\n\n    # Calculate the TF-IDF scores for each document.\n    scores = vectorizer.fit_transform(texts).todense()\n\n    # Get the unique words (features) across all documents as a list.\n    unique_words = vectorizer.get_feature_names()\n\n    # Round the scores to 8 decimal places for precision.\n    rounded_scores = [tuple(round(score, 8) for score in score_row) for score_row in scores]\n\n    # Return the scores and unique words as a tuple.\n    return rounded_scores, unique_words", "tokens": ["#", " Create", " an", " instance", " of", " the", " T", "f", "id", "f", "Vector", "izer", " with", " no", " stop", " words", ".", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "')", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " document", ".", "\n", "    ", "scores", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", ".", "t", "od", "ense", "()", "\n", "\n", "    ", "#", " Get", " the", " unique", " words", " (", "features", ")", " across", " all", " documents", " as", " a", " list", ".", "\n", "    ", "unique", "_", "words", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "#", " Round", " the", " scores", " to", " ", "8", " decimal", " places", " for", " precision", ".", "\n", "    ", "rounded", "_", "scores", " =", " [", "tuple", "(", "round", "(", "score", ",", " ", "8", ")", " for", " score", " in", " score", "_", "row", ")", " for", " score", "_", "row", " in", " scores", "]", "\n", "\n", "    ", "#", " Return", " the", " scores", " and", " unique", " words", " as", " a", " tuple", ".", "\n", "    ", "return", " rounded", "_", "scores", ",", " unique", "_", "words", "\n", "\n", "def"], "logprobs": [-1.5304116010665894, -2.351714611053467, -1.753551959991455, -0.13063499331474304, -0.0016384999034926295, -0.8043910264968872, -0.033130403608083725, -0.00026925752172246575, -0.01477877888828516, -0.0001839230244513601, -0.0032759830355644226, -0.0001225396408699453, -1.8713948726654053, -4.155481338500977, -0.6567140221595764, -0.42108026146888733, -3.545537233352661, -0.051306694746017456, -0.0024921807926148176, -0.6876329779624939, -0.002386699663475156, -0.003049249993637204, -0.0005963454605080187, -4.768360213347478e-06, -0.00041333239641971886, -2.3841855067985307e-07, -1.3112935448589269e-05, -1.8000440832111053e-05, -0.12588360905647278, -0.10752876102924347, -2.658331868587993e-05, -0.00013660451804753393, -0.48602575063705444, -0.30178070068359375, -0.00265733664855361, -0.344028115272522, -0.00040451448876410723, -0.019390316680073738, -3.9894964694976807, -0.30230507254600525, -0.10554980486631393, -0.0049098399467766285, -7.10462118149735e-05, -0.0004997196956537664, -0.08683425933122635, -0.06108441203832626, -0.3378790020942688, -0.6244781613349915, -1.0789742469787598, -0.029125012457370758, -0.0007111880695447326, -1.7216689586639404, -0.09985031187534332, -0.05960861220955849, -2.1219027985353023e-05, -3.4450891689630225e-05, -0.0030423568096011877, -0.0011622109450399876, -7.462222856702283e-05, -0.014200235716998577, -0.009720256552100182, -0.000164018536452204, -0.001134705264121294, -1.4048855304718018, -1.6636303663253784, -0.00010632903286023065, -0.001601009746082127, -0.008162355050444603, -0.08758111298084259, -0.08130519837141037, -0.00041333239641971886, -0.02234029769897461, -1.2508726119995117, -0.3185861110687256, -0.31913068890571594, -0.07505346089601517, -0.48245081305503845, -0.007493128068745136, -0.0008728270186111331, -0.7640484571456909, -0.033866364508867264, -0.007228057365864515, -2.8347232341766357, -0.10273036360740662, -0.09690947085618973, -0.2986023426055908, -0.011450053192675114, -0.00029905137489549816, -1.8076754808425903, -0.004254813306033611, -0.14622534811496735, -0.008556489832699299, -0.17618948221206665, -0.00011097769311163574, -9.536697689327411e-06, -0.05245990678668022, -2.0265558760002023e-06, -0.00031704644788987935, -1.1920928244535389e-07, -0.0058735632337629795, -0.3136500120162964, -0.003864678554236889, -0.01704343408346176, -0.00015937011630740017, -0.4812849164009094, -1.822300672531128, -0.11732961982488632, -0.4107666611671448, -0.03843691200017929, -0.06998580694198608, -0.004145006649196148, -0.018678488209843636, -0.0015912501839920878, -1.1213281154632568, -0.04173923656344414, -0.034628383815288544, -0.0010081215295940638, -0.0004631400224752724, -1.3212435245513916, -0.009672796353697777, -0.0038682410959154367, -0.0014033003244549036, -0.6309645771980286, -0.1198001429438591, -0.14351090788841248, -0.1277700960636139, -0.001831522211432457, -0.12962143123149872, -0.001135776867158711, -0.0021287179552018642, -0.009144803509116173, -0.00015341058315243572, -0.003207065397873521, -5.006664650863968e-05, -1.9907753085135482e-05, -0.8814096450805664, -0.0036781057715415955, -1.430091142654419, -0.02054143324494362, -0.12428856641054153, -0.0006567466771230102, -5.1377883210079744e-05, -9.417489309271332e-06, -0.00011622230522334576, -0.0013258008984848857, -0.025285203009843826, -0.0007334641413763165, -0.016201388090848923, -0.00014149141497910023, -0.41394346952438354, -0.32540297508239746, -0.143906369805336, -0.5094543099403381, -0.8708459734916687, -0.23045215010643005, -0.026392754167318344, -0.304400235414505, -0.07943954318761826, -0.014612911269068718, -0.07261873781681061, -0.0017487009754404426, -0.0007658647373318672, -0.0035409152042120695, -1.1866390705108643, -0.00014673586701974273, -8.880697714630514e-05, -0.0003209791029803455, -0.0073209586553275585, -9.345571743324399e-05, -6.794906312279636e-06, -0.5483231544494629, -0.006591245997697115, -1.3084574937820435], "finish_reason": "stop"}], "metrics": {"energy": 194.3696668939591, "energy_per_token": 1.123524086092249, "time": 7.578327, "time_per_token": 0.04380535838150289}}
{"outputs": [{"text": "# remove URLs from texts\n    texts = [re.sub(r\"http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\\\'\\\\(\\\\),]|(?:\\\\\\\\|[\\\\'\\\"\\\\\\\\])+)*\\n?\", \"\", text) for text in texts]\n\n    # remove non-alphanumeric characters from texts\n    texts = [re.sub('[^a-zA-Z0-9]', ' ', text) for text in texts]\n\n    # remove whitespaces from texts\n    texts = [text.strip() for text in texts]\n\n    # remove extra whitespaces from texts\n    texts = [re.sub(' +', ' ', text) for text in texts]\n\n    # convert texts into lowercase\n    texts = [text.lower() for text in texts]\n\n    # create TfidfVectorizer object\n    tfidf = TfidfVectorizer()\n\n    # fit_transform to create a dense matrix for TF-IDF scores\n", "tokens": ["#", " remove", " URLs", " from", " texts", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "r", "\"", "http", "[", "s", "]", "?", "://", "(", "?", ":[", "a", "-", "z", "A", "-", "Z", "]", "|", "[", "0", "-", "9", "]", "|", "[", "$-", "_", "@", ".", "&+", "]", "|", "[", "!", "*", "\\\\'", "\\\\", "(\\\\", ")", ",", "]", "|", "(", "?", ":", "\\\\\\\\", "|", "[\\\\", "'\\\"", "\\\\\\\\", "]", ")+", ")", "*\\", "n", "?", "\"", ",", " \"", "\"", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " remove", " non", "-", "al", "phan", "umeric", " characters", " from", " texts", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "('", "[", "^", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "]", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " remove", " whites", "paces", " from", " texts", "\n", "    ", "text", "s", " =", " [", "text", ".", "strip", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " remove", " extra", " whites", "paces", " from", " texts", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "('", " +", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " convert", " texts", " into", " lower", "case", "\n", "    ", "text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " create", " T", "f", "id", "f", "Vector", "izer", " object", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "\n", "    ", "#", " fit", "_", "transform", " to", " create", " a", " dense", " matrix", " for", " TF", "-", "ID", "F", " scores", "\n"], "logprobs": [-1.5304116010665894, -2.4049878120422363, -0.6848520636558533, -0.5292143821716309, -1.9327951669692993, -0.24902257323265076, -0.0030190625693649054, -0.7462863326072693, -0.023621108382940292, -0.13021552562713623, -0.046286314725875854, -0.21957962214946747, -0.00013767725613433868, -0.00857871025800705, -0.03988172486424446, -0.05866014212369919, -1.8172290325164795, -0.8209714293479919, -1.5116780996322632, -0.016714297235012054, -0.008393014781177044, -0.0015351902693510056, -0.008547507226467133, -0.26137834787368774, -0.04674375802278519, -0.02676224522292614, -0.0009117737063206732, -1.1920928244535389e-07, -0.00044050050200894475, -0.01882847398519516, -9.464769391342998e-05, -0.00011431517486926168, -0.005887310486286879, -0.015836890786886215, -0.04889637976884842, -0.0009789442410692573, -3.576278118089249e-07, -7.867782187531702e-06, -0.009763936512172222, -0.0021376395598053932, -0.0020688814111053944, -0.004158065654337406, -0.0005003153928555548, -0.0185548085719347, -0.00011336160969221964, -0.00962273683398962, -0.18448390066623688, -0.011310388334095478, -0.012661309912800789, -0.058743104338645935, -0.4360792338848114, -1.2525038719177246, -2.37929105758667, -0.2399173080921173, -0.24725262820720673, -0.020072078332304955, -0.020361334085464478, -0.004640049301087856, -0.8183872103691101, -0.0003228858404327184, -0.6753466725349426, -2.0422468185424805, -0.6554370522499084, -1.0527994632720947, -2.7688610553741455, -0.9750944972038269, -1.8864487409591675, -0.2373911291360855, -0.7155444622039795, -0.18491549789905548, -1.816037893295288, -0.36514973640441895, -0.004908060654997826, -0.001650877296924591, -0.8592625856399536, -0.2652985155582428, -0.0010604002745822072, -0.4225899577140808, -0.05287156626582146, -0.49604347348213196, -0.006647970527410507, -0.0015944637125357985, -0.0041326601058244705, -0.01184006780385971, -0.0020568659529089928, -0.1619308888912201, -0.00039295581518672407, -0.1830267757177353, -2.6475181579589844, -2.2614970207214355, -0.01990673691034317, -2.01994252204895, -0.007940157316625118, -0.004536693450063467, -0.05613464489579201, -0.8360635638237, -1.1133697032928467, -0.12071213871240616, -0.000610999355558306, -0.06154511123895645, -0.0006671110168099403, -0.0037108862306922674, -0.020064249634742737, -0.24200588464736938, -0.001503290724940598, -0.00447166059166193, -2.568958282470703, -0.06481089442968369, -0.02653636410832405, -0.23588193953037262, -6.01988795096986e-05, -0.00013600854435935616, -0.030555352568626404, -1.2874520507466514e-05, -0.00013791563105769455, -0.052522797137498856, -2.1219027985353023e-05, -8.284702198579907e-05, -1.1286420822143555, -0.003187577472999692, -2.682172998902388e-05, -0.24028824269771576, -0.0003319427778478712, -4.23184028477408e-05, -0.014258293434977531, -0.04146971181035042, -0.11002123355865479, -6.961580220377073e-05, -1.4066597032069694e-05, -8.618460560683161e-05, -0.0006441186997108161, -0.00021407696476671845, -0.04433232918381691, -0.0005005536950193346, -0.12247742712497711, -0.9755145311355591, -2.317509651184082, -0.8437947630882263, -0.3825703561306, -0.010460549034178257, -0.033448994159698486, -0.00012265883560758084, -0.004257187247276306, -0.00019405389321036637, -0.0008238735608756542, -0.012886816635727882, -0.17139922082424164, -0.0011606630869209766, -0.04016370326280594, -0.0025490194093436003, -0.007845066487789154, -4.446407547220588e-05, -1.537788011773955e-05, -8.010543388081715e-05, -0.009319965727627277, -0.00018809456378221512, -0.019543703645467758, -0.0004440752090886235, -0.15898409485816956, -0.8506671190261841, -3.474350929260254, -0.7102079391479492, -0.026330171152949333, -0.36648860573768616, -0.012079067528247833, -0.028622137382626534, -0.0003446938644628972, -0.013357672840356827, -0.0006011109799146652, -0.0018651961581781507, -0.06302197277545929, -0.5459163784980774, -0.0008470999309793115, -0.00019012074335478246, -0.24958938360214233, -0.15740293264389038, -0.0038392660208046436, -5.924526340095326e-05, -0.0024856405798345804, -0.0002369599969824776, -8.368142152903602e-05, -0.0038435410242527723, -0.00832716841250658, -0.008772761560976505, -1.7046782886609435e-05, -5.245195097813848e-06, -7.772143726469949e-05, -0.0005352256703190506, -0.0007761088781990111, -0.015101977623999119, -0.0004700509598478675, -0.22976478934288025, -2.6725692749023438, -0.3002382814884186, -2.666215658187866, -1.0036426782608032, -0.09357268363237381, -0.12617197632789612, -0.0003359945258125663, -0.007908697240054607, -0.000359351426595822, -0.0024406902957707644, -0.005276799667626619, -0.004122925456613302, -0.0004401430196594447, -0.00035124807618558407, -0.00011848701251437888, -0.0010744519531726837, -6.437280717364047e-06, -9.894321920000948e-06, -4.9470632802695036e-05, -0.00024244230007752776, -0.00028534632292576134, -0.010989970527589321, -0.0004596845537889749, -0.19158050417900085, -1.779323697090149, -1.955399513244629, -0.0003281293320469558, -0.09250615537166595, -0.0008724696817807853, -0.00980360060930252, -0.0006889115320518613, -0.4281889796257019, -0.30233776569366455, -0.0005063920398242772, -0.9580015540122986, -0.06561590731143951, -0.0006787856691516936, -0.6735574007034302, -0.0005820487276650965, -1.5497195136049413e-06, -0.0016584941186010838, -5.960462772236497e-07, -1.4543427823809907e-05, -1.2636104656849056e-05, -0.7464204430580139, -0.0024541281163692474, -0.026279546320438385, -0.00022230061586014926, -0.020367875695228577, -0.36377179622650146, -2.9623913764953613, -0.0015265013789758086, -1.9726457595825195, -2.7085604667663574, -1.570406436920166, -1.2037116289138794, -0.22821053862571716, -2.6679539680480957, -2.326963424682617, -0.014417639933526516, -0.000590865034610033, -0.0004433602443896234, -0.13935020565986633, -0.15547198057174683], "finish_reason": "length"}], "metrics": {"energy": 280.04359740924815, "energy_per_token": 1.0939203023798756, "time": 11.565913, "time_per_token": 0.04517934765625}}
{"outputs": [{"text": "texts = [re.sub('\\w+://\\S+', '', text) for text in texts]\n    vectorizer = TfidfVectorizer(stop_words='english')\n    tf_idf_scores = vectorizer.fit_transform(texts)\n    feature_names = vectorizer.get_feature_names_out()\n\n    return tf_idf_scores, feature_names", "tokens": ["text", "s", " =", " [", "re", ".", "sub", "('", "\\", "w", "+", "://", "\\", "S", "+'", ",", " ''", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "tf", "_", "id", "f", "_", "scores", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "return", " tf", "_", "id", "f", "_", "scores", ",", " feature", "_", "names", "\n", "\n", "def"], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -0.7395113706588745, -0.00018356545479036868, -0.02678406424820423, -2.2366693019866943, -2.1126439571380615, -1.0865180492401123, -0.6038545370101929, -0.14187249541282654, -0.1649063378572464, -0.9933004379272461, -0.36625441908836365, -7.188061863416806e-05, -0.24975228309631348, -7.092700980138034e-05, -0.6459636092185974, -0.08270829916000366, -0.1823151409626007, -0.0018685277318581939, -8.797258487902582e-05, -0.0010488491971045732, -0.012635884806513786, -0.09660279005765915, -0.27433300018310547, -0.4160722494125366, -0.0057409401051700115, -0.0017973711946979165, -0.00043501926120370626, -2.0265558760002023e-06, -2.0861407392658293e-05, -1.7881377516459906e-06, -1.0609570381348021e-05, -8.344646857949556e-07, -0.6695181131362915, -1.1157103776931763, -1.7046782886609435e-05, -0.00036125810584053397, -0.08915221691131592, -0.006156527437269688, -2.1815061700181104e-05, -0.19437581300735474, -0.014851836487650871, -0.026253070682287216, -1.753121256828308, -1.1644389629364014, -0.108122318983078, -0.004698308650404215, -0.8460958003997803, -1.0540578365325928, -0.08621206879615784, -0.04475019872188568, -2.1815061700181104e-05, -5.3165931603871286e-05, -0.001496029901318252, -0.004557698033750057, -6.460934673668817e-05, -0.01427568681538105, -0.002179629635065794, -5.590759246842936e-05, -0.0007688426994718611, -0.39803266525268555, -0.15826642513275146, -2.4359512329101562, -0.001882449141703546, -0.25758546590805054, -0.0061109126545488834, -0.057228945195674896, -2.6464111215318553e-05, -1.2993727978027891e-05, -0.005312610883265734, -7.152555099310121e-07, -0.0002047805901383981, -7.152555099310121e-07, -0.002754824236035347, -1.2480995655059814, -0.00014244495832826942, -0.0034860337618738413, -0.00631563039496541, -2.1145026683807373, -0.00044383687782101333, -0.30240216851234436, -0.6863105893135071, -1.9192511899746023e-05, -4.6491513785440475e-06, -5.960462772236497e-07, -2.3603161025675945e-05, -2.539125671319198e-05, -0.2588824927806854, -0.058074951171875, -5.829164365422912e-05, -1.311301275563892e-06, -0.7616353034973145, -0.00953536294400692, -1.395110845565796], "finish_reason": "stop"}], "metrics": {"energy": 94.52537605381013, "energy_per_token": 0.9744884129258776, "time": 4.2072387, "time_per_token": 0.04337359484536083}}
{"outputs": [{"text": "# Remove all URLs from the text documents\n    texts = [re.sub(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+#]|[!*\\\\(\\\\),]|(?:\\\\\\|))+'\n                    r'|(?:www.|[a-zA-Z])(?:[-a-zA-Z0-9@&#/%?=[]{},.;:+\\\\]\\\\'\"\\\\\\\\]| &gt;&gt;| &gt;)',\n                    '', text) for text in texts]\n\n    # Calculate TF-IDF scores for each word in the documents\n    vectorizer = TfidfVectorizer()\n    vector = vectorizer.fit_transform(texts)\n    return (vector.toarray(), vectorizer.get_feature_names_out())", "tokens": ["#", " Remove", " all", " URLs", " from", " the", " text", " documents", "\n", "    ", "text", "s", " =", " [", "re", ".", "sub", "(", "r", "'", "http", "[", "s", "]", "?", "://", "(", "?", ":[", "a", "-", "z", "A", "-", "Z", "]", "|", "[", "0", "-", "9", "]", "|", "[", "$-", "_", "@", ".", "&+", "#", "]", "|", "[", "!", "*\\\\", "(\\\\", ")", ",", "]", "|", "(", "?", ":", "\\\\\\", "|", "))", "+'", "\n", "                ", "    ", "r", "'", "|", "(", "?", ":", "www", ".", "|", "[", "a", "-", "z", "A", "-", "Z", "]", ")(", "?", ":", "[-", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "@", "&#", "/%", "?", "=[", "]{", "}", ",", ".", ";", ":", "+\\\\", "]\\\\", "'", "\"", "\\\\\\\\", "]", "|", " &", "gt", ";&", "gt", ";", "|", " &", "gt", ";", ")'", ",", "\n", "                ", "    ", "''", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Calculate", " TF", "-", "ID", "F", " scores", " for", " each", " word", " in", " the", " documents", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vector", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "return", " (", "vector", ".", "to", "array", "()", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "())", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5304116010665894, -1.4278597831726074, -2.163723945617676, -0.12835103273391724, -0.5339905023574829, -0.18081165850162506, -1.1940290927886963, -0.1992432177066803, -0.41786035895347595, -0.0023889592848718166, -0.7936500906944275, -0.04367022216320038, -0.0936499759554863, -0.02709772251546383, -0.19525612890720367, -7.748303323751315e-05, -0.0051143295131623745, -0.03768869489431381, -0.0551244392991066, -0.2584715485572815, -0.4829624593257904, -1.0632472038269043, -0.03251703456044197, -0.004775309935212135, -0.0006354220095090568, -0.00949663296341896, -0.11683250963687897, -0.07872812449932098, -0.03762234002351761, -0.0010578995570540428, -1.1920928244535389e-07, -0.0005404680268839002, -0.021670812740921974, -8.165503095369786e-05, -7.60526381782256e-05, -0.003624300705268979, -0.010530265979468822, -0.0551970899105072, -0.001157805323600769, -3.576278118089249e-07, -4.291525328881107e-06, -0.008858075365424156, -0.0016124354442581534, -0.002213291823863983, -0.003507297718897462, -0.00042691652197390795, -0.017723284661769867, -0.00015114595589693636, -0.01411714032292366, -2.2706496715545654, -0.043973952531814575, -0.10312969982624054, -0.0027004939038306475, -0.010400618426501751, -1.2975462675094604, -0.0016430224059149623, -0.15292476117610931, -0.08887477964162827, -0.01708410121500492, -0.029065381735563278, -1.5946487188339233, -0.0005701346672140062, -0.15368643403053284, -3.0210437774658203, -0.2838103473186493, -0.6329041123390198, -0.015924887731671333, -0.37001660466194153, -0.024538012221455574, -0.16225558519363403, -0.19105781614780426, -0.09508714824914932, -1.6889681816101074, -1.2452447414398193, -0.03474433720111847, -0.015502660535275936, -0.13653038442134857, -0.28362247347831726, -0.2657424211502075, -1.2439179420471191, -0.01262941025197506, -9.059865078597795e-06, -0.0022741903085261583, -0.004925024230033159, -1.6689286894688848e-06, -0.0001554368354845792, -0.0708368644118309, -2.875331163406372, -0.0005734706646762788, -1.0518717765808105, -0.2583686113357544, -0.11565301567316055, -1.9311717551317997e-05, -0.0001668790791882202, -0.0036159863229840994, -2.9682672902708873e-05, -2.9444261599564925e-05, -0.00571427121758461, -0.0001559135998832062, -9.417489309271332e-06, -0.029693135991692543, -3.376406669616699, -1.130838394165039, -0.034812264144420624, -2.730823516845703, -0.1975056529045105, -1.0719374418258667, -1.0520009994506836, -0.13229817152023315, -0.800658106803894, -1.5384671688079834, -2.6197550296783447, -2.9186081886291504, -2.2176527976989746, -0.5036769509315491, -0.9270315170288086, -0.445429265499115, -0.2921130359172821, -2.9000790119171143, -1.8656280040740967, -2.0816524028778076, -1.6839710474014282, -0.7070576548576355, -2.41823148727417, -0.6946516633033752, -1.0734264850616455, -1.1398310661315918, -1.4337387084960938, -0.1481979787349701, -0.6378408670425415, -0.01365816593170166, -0.07791419327259064, -0.2544427514076233, -0.00013445904187392443, -0.703909695148468, -0.032383281737565994, -0.23094916343688965, -0.00042822727118618786, -0.00014733182615600526, -0.0007694382802583277, -0.009320437908172607, -0.0006096888100728393, -0.08179918676614761, -0.00040904260822571814, -0.09940272569656372, -2.077390432357788, -0.55238276720047, -0.004406385589390993, -6.878139538457617e-05, -0.00028165188268758357, -0.10401640832424164, -0.2160947620868683, -0.3720591366291046, -0.18126901984214783, -0.4393303692340851, -1.123772144317627, -1.328279733657837, -0.1370709091424942, -0.0010034770239144564, -0.2919815480709076, -0.0009066523634828627, -0.00038795097498223186, -0.00024303820100612938, -2.264974000354414e-06, -3.40932747349143e-05, -2.0265558760002023e-06, -7.152531907195225e-06, -9.536738616588991e-07, -0.7204952836036682, -0.009324335493147373, -0.005791668314486742, -1.3145123720169067, -1.5128775835037231, -0.002063527936115861, -3.0278701160568744e-05, -3.194758028257638e-05, -0.0021431115455925465, -0.02628825418651104, -5.531158240046352e-05, -0.08311713486909866, -0.0026291587855666876, -3.123234637314454e-05, -0.0007986216805875301, -0.024076813831925392, -0.9619200229644775, -2.611835241317749, -0.7298334240913391, -0.13721194863319397, -0.11983218044042587, -0.7020821571350098, -0.03140076994895935, -0.0036178866866976023, -0.05271314084529877, -0.05814851447939873, -0.10611451417207718, -1.8954096958623268e-05, -0.01563422940671444, -3.099436753473128e-06, -0.00029595286468975246, -9.536738616588991e-07, -0.004613469820469618, -1.3731186389923096, -0.0001597276859683916, -0.006214580032974482, -1.0789527893066406, -2.0265558760002023e-06, -1.5497195136049413e-06, -0.0001722425949992612, -0.00023910524032544345, -0.1668991893529892], "finish_reason": "stop"}], "metrics": {"energy": 225.79456110477463, "energy_per_token": 1.075212195737022, "time": 9.260132, "time_per_token": 0.04409586666666667}}
{"outputs": [{"text": "# Define the regular expression pattern for extracting words from the text.\n    word_regex = re.compile(r'\\b[\\w]{1,}\\b')\n\n    # Define the vectorizer object to process the text documents.\n    vectorizer = TfidfVectorizer(stop_words='english')\n    # Convert the list of text documents to a sparse matrix (array of tuples)\n    sparse_matrix = vectorizer.fit_transform(texts)\n    # Extract the unique words (features) from the vectorizer\n    feature_names = vectorizer.get_feature_names_out()\n\n    # Return the sparse matrix as the first element and the feature names as the second element\n    return (sparse_matrix.todense(), feature_names)", "tokens": ["#", " Define", " the", " regular", " expression", " pattern", " for", " extracting", " words", " from", " the", " text", ".", "\n", "    ", "word", "_", "regex", " =", " re", ".", "compile", "(", "r", "'\\", "b", "[\\", "w", "]{", "1", ",", "}\\", "b", "')", "\n", "\n", "    ", "#", " Define", " the", " vector", "izer", " object", " to", " process", " the", " text", " documents", ".", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "#", " Convert", " the", " list", " of", " text", " documents", " to", " a", " sparse", " matrix", " (", "array", " of", " t", "up", "les", ")", "\n", "    ", "sparse", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "#", " Ext", "ract", " the", " unique", " words", " (", "features", ")", " from", " the", " vector", "izer", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "    ", "#", " Return", " the", " sparse", " matrix", " as", " the", " first", " element", " and", " the", " feature", " names", " as", " the", " second", " element", "\n", "    ", "return", " (", "sparse", "_", "matrix", ".", "t", "od", "ense", "()", ",", " feature", "_", "names", ")", "\n", "\n", "def"], "logprobs": [-1.5304116010665894, -3.5579676628112793, -1.6568481922149658, -0.9092667102813721, -0.015406525693833828, -0.32618993520736694, -0.646471381187439, -1.767777442932129, -1.8351813554763794, -0.5873600244522095, -1.1549718379974365, -0.30319151282310486, -2.149351119995117, -0.03890116885304451, -0.004322709050029516, -0.9767975211143494, -0.0018599607283249497, -1.8242541551589966, -0.004094195086508989, -0.31969213485717773, -2.8132995794294402e-05, -0.0004570631426759064, -0.12145745754241943, -0.02234216220676899, -0.17582789063453674, -0.5629653930664062, -1.9344911575317383, -0.004852898418903351, -3.301783561706543, -0.40593254566192627, -0.004935581702739, -0.44141319394111633, -0.00397605961188674, -0.10611087083816528, -0.013622064143419266, -0.21526135504245758, -0.0004471732536330819, -0.043548908084630966, -1.834373116493225, -0.7091128826141357, -1.5654056072235107, -0.003217284567654133, -1.5162757635116577, -1.3544286489486694, -2.359466075897217, -0.2398565411567688, -0.28198516368865967, -0.3912118077278137, -0.47043463587760925, -0.010508797131478786, -0.000331704446580261, -0.11032169312238693, -0.004259324166923761, -0.0013848486123606563, -0.0004323977918829769, -1.7881377516459906e-06, -1.6212332411669195e-05, -1.0728830375228426e-06, -1.0132738680113107e-05, -1.1920922133867862e-06, -0.623205840587616, -1.8167072534561157, -1.3470558769768104e-05, -0.0003736513026524335, -0.08435095101594925, -0.005735606420785189, -5.8887653722194955e-05, -0.35634854435920715, -0.016362769529223442, -2.9357621669769287, -1.1125187873840332, -2.4070518016815186, -0.1370452344417572, -1.1766210794448853, -0.0060779741033911705, -0.5523985028266907, -0.16047868132591248, -0.5283232927322388, -0.12919703125953674, -1.7093995809555054, -0.04121670126914978, -4.020184516906738, -3.565538167953491, -0.6184032559394836, -2.1234521865844727, -0.0001652104256208986, -0.00018010901112575084, -0.1458524465560913, -2.6082630157470703, -0.004750038962811232, -1.2146577835083008, -0.04265248030424118, -0.2947450280189514, -0.02194654382765293, -0.013218156062066555, -1.0490362910786644e-05, -4.351044481154531e-05, -0.0034524141810834408, -0.0004180987598374486, -8.010543388081715e-05, -0.011924766935408115, -0.011370028369128704, -0.00016950124700088054, -0.0013311582151800394, -0.05746915563941002, -0.8307899832725525, -0.13530778884887695, -2.4602413177490234, -0.00326825981028378, -0.3777180016040802, -0.6673872470855713, -0.1189773827791214, -0.6278451681137085, -0.012742879800498486, -0.0017138330731540918, -0.8744364976882935, -0.029693251475691795, -1.5550196170806885, -0.08322079479694366, -1.8995604515075684, -0.0016956250183284283, -2.050846576690674, -0.00399220734834671, -0.30847883224487305, -0.006828070152550936, -0.03969327732920647, -2.7656173188006505e-05, -1.7762025890988298e-05, -0.009697471745312214, -1.1920922133867862e-06, -0.00015031162183731794, -4.529942543740617e-06, -0.0030131200328469276, -1.6422274112701416, -0.00018702188390307128, -0.004129929933696985, -0.008322793990373611, -0.8635724782943726, -0.000952386180870235, -0.19107642769813538, -2.034358501434326, -0.19273799657821655, -0.7974310517311096, -0.0810118317604065, -1.996828556060791, -2.9457509517669678, -0.1072540208697319, -0.10109944641590118, -0.560494601726532, -0.15101228654384613, -0.9689580202102661, -0.1471065729856491, -0.058974526822566986, -0.03932876139879227, -0.001823549740947783, -0.1122831478714943, -0.9292097687721252, -0.0019094583112746477, -0.023200487717986107, -0.3317791223526001, -0.016837971284985542, -5.674201020156033e-05, -2.634490556374658e-05, -0.3968772292137146, -1.5328152179718018, -9.226373367710039e-05, -0.0026586444582790136, -0.005624658428132534, -0.042311783879995346, -0.028391579166054726, -6.913899414939806e-05, -9.536738616588991e-07, -0.29540467262268066, -0.2092771828174591, -0.026498636230826378, -1.5019652843475342], "finish_reason": "stop"}], "metrics": {"energy": 205.5771175346374, "energy_per_token": 1.1680518041740762, "time": 7.7842765, "time_per_token": 0.044228843749999996}}
{"outputs": [{"text": "texts = [text.lower() for text in texts]\n\n    url_regex = r'\\bhttps?://\\S+'\n\n    for i, text in enumerate(texts):\n        texts[i] = re.sub(url_regex, ' ', text)\n\n    vectorizer = TfidfVectorizer(\n        analyzer='char_wb',\n        stop_words='english',\n        use_idf=False,\n        smooth_idf=False\n    )\n\n    X = vectorizer.fit_transform(texts)\n\n    return (X, vectorizer.get_feature_names())", "tokens": ["text", "s", " =", " [", "text", ".", "lower", "()", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "url", "_", "regex", " =", " r", "'\\", "b", "https", "?", "://", "\\", "S", "+'", "\n", "\n", "    ", "for", " i", ",", " text", " in", " enumerate", "(", "text", "s", "):", "\n", "        ", "text", "s", "[", "i", "]", " =", " re", ".", "sub", "(", "url", "_", "regex", ",", " '", " '", ",", " text", ")", "\n", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "\n", "        ", "analy", "zer", "='", "char", "_", "wb", "'", ",", "\n", "        ", "stop", "_", "words", "='", "eng", "lish", "'", ",", "\n", "        ", "use", "_", "id", "f", "=", "False", ",", "\n", "        ", "smooth", "_", "id", "f", "=", "False", "\n", "    ", ")", "\n", "\n", "    ", "X", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "return", " (", "X", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -1.630599856376648, -0.1622491031885147, -1.0532562732696533, -0.0007893307483755052, -0.5727392435073853, -0.004076267592608929, -0.00038509105797857046, -0.0062867263332009315, -0.11515454202890396, -0.08970142155885696, -1.7023259401321411, -0.00029571453342214227, -2.685274124145508, -0.07479310035705566, -0.7127310037612915, -0.0033289750572293997, -1.5620334148406982, -2.8643250465393066, -0.012875283136963844, -1.018686056137085, -0.003221681108698249, -0.7581326961517334, -0.2658931016921997, -0.0012880609137937427, -0.7463625073432922, -0.0868903249502182, -1.9015108346939087, -0.00023552982020191848, -0.8412110209465027, -0.46009016036987305, -0.3082749545574188, -0.1450091004371643, -0.002293101279065013, -0.00037079135654494166, -7.211902266135439e-05, -0.00034433635300956666, -9.417489309271332e-06, -0.002102547325193882, -0.00200130813755095, -0.0033115092664957047, -0.13595637679100037, -0.16498862206935883, -0.0002307625545654446, -8.583032467868179e-06, -0.00017998983094003052, -0.0001586549769854173, -0.01669917441904545, -2.4318398573086597e-05, -0.009263865649700165, -0.0006831934442743659, -0.005069497041404247, -1.4066597032069694e-05, -2.5748875486897305e-05, -5.6622808187967166e-05, -1.6404061317443848, -0.2164755016565323, -0.0029696195852011442, -0.011449817568063736, -0.019331971183419228, -0.05276448279619217, -0.034446198493242264, -0.0033726973924785852, -0.410888135433197, -0.0045508150942623615, -0.001279012649320066, -0.0004435985756572336, -1.9073468138230965e-06, -8.702239938429557e-06, -1.9073468138230965e-06, -5.960446742392378e-06, -8.344646857949556e-07, -0.8028498888015747, -3.782911777496338, -0.01436499785631895, -1.1184345483779907, -0.01521551888436079, -0.1320694237947464, -2.1863343715667725, -0.9265214800834656, -0.46534356474876404, -0.02770642191171646, -0.009872655384242535, -0.1824985146522522, -0.005875814706087112, -3.2503767013549805, -1.764281842042692e-05, -0.0008322112844325602, -0.08670046925544739, -0.18149025738239288, -4.792098479811102e-05, -0.021448679268360138, -0.07497140020132065, -0.010533451102674007, -0.04733288660645485, -3.6803009510040283, -0.00016425691137555987, -0.2789756655693054, -0.00029976642690598965, -0.0006677066558040679, -0.2511756122112274, -0.2146548330783844, -0.019123001024127007, -0.0741656944155693, -1.4077399969100952, -0.0005604841862805188, -0.003962048329412937, -0.0002759314374998212, -0.0001494772732257843, -0.040388476103544235, -1.7980766296386719, -0.011334315873682499, -6.580135959666222e-05, -0.01502424106001854, -0.39286115765571594, -4.565611743601039e-05, -2.8088955879211426, -0.064860500395298, -0.01622719131410122, -2.7418097943154862e-06, -2.4199192921514623e-05, -0.002158218529075384, -0.0021295505575835705, -9.643566590966657e-05, -0.03525104746222496, -0.005467698443681002, -0.000243634101934731, -0.0017989181214943528, -0.04093776270747185, -0.4108617603778839, -6.210611172718927e-05, -1.1780905723571777, -0.5424352884292603, -0.23214848339557648, -2.4616708755493164, -0.061043255031108856, -3.099436753473128e-06, -0.00013290952483657748, -0.013188980519771576, -2.3841830625315197e-06, -0.0002889215829782188, -7.152555099310121e-07, -0.004627946298569441, -0.3173215091228485, -0.9853504300117493, -2.145764938177308e-06, -2.3841830625315197e-06, -0.000205018965061754, -0.00038223114097490907, -2.2725560665130615, -0.003571680746972561], "finish_reason": "stop"}], "metrics": {"energy": 171.66151770973204, "energy_per_token": 1.1146851799333248, "time": 6.740611, "time_per_token": 0.0437702012987013}}
{"outputs": [{"text": "# Step 1: Remove URL patterns from the text documents\n    cleaned_texts = []\n    for doc in texts:\n        url_pattern = re.compile(r'(https?://[^\\s]+)')\n        cleaned_text = re.sub(url_pattern, '', doc)\n        cleaned_texts.append(cleaned_text)\n\n    # Step 2: Create a TfidfVectorizer object for extracting words and their frequencies in text documents\n    vectorizer = TfidfVectorizer(analyzer='word')\n\n    # Step 3: Fit the vectorizer on the cleaned text data\n    tfidf_matrix = vectorizer.fit_transform(cleaned_texts)\n\n    # Step 4: Calculate the word frequencies in the text documents using the TfidfVectorizer object\n    word_frequencies = dict(zip(vectorizer.get_feature_names(),\n                                 tfidf_matrix.mean(axis=0)))\n\n    # Step 5: Calculate the TF-IDF scores for each word in the cleaned text data using the TfidfVectorizer object\n    tf", "tokens": ["#", " Step", " ", "1", ":", " Remove", " URL", " patterns", " from", " the", " text", " documents", "\n", "    ", "cleaned", "_", "text", "s", " =", " []", "\n", "    ", "for", " doc", " in", " texts", ":", "\n", "        ", "url", "_", "pattern", " =", " re", ".", "compile", "(", "r", "'(", "https", "?", "://", "[", "^\\", "s", "]+", ")", "')", "\n", "        ", "cleaned", "_", "text", " =", " re", ".", "sub", "(", "url", "_", "pattern", ",", " ''", ",", " doc", ")", "\n", "        ", "cleaned", "_", "text", "s", ".", "append", "(", "cleaned", "_", "text", ")", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Create", " a", " T", "f", "id", "f", "Vector", "izer", " object", " for", " extracting", " words", " and", " their", " frequencies", " in", " text", " documents", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "')", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Fit", " the", " vector", "izer", " on", " the", " cleaned", " text", " data", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "cleaned", "_", "text", "s", ")", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Calculate", " the", " word", " frequencies", " in", " the", " text", " documents", " using", " the", " T", "f", "id", "f", "Vector", "izer", " object", "\n", "    ", "word", "_", "f", "requ", "encies", " =", " dict", "(", "zip", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", ",", "\n", "                ", "                ", " tf", "id", "f", "_", "matrix", ".", "mean", "(", "axis", "=", "0", ")))", "\n", "\n", "    ", "#", " Step", " ", "5", ":", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " word", " in", " the", " cleaned", " text", " data", " using", " the", " T", "f", "id", "f", "Vector", "izer", " object", "\n", "    ", "tf"], "logprobs": [-1.5304116010665894, -2.9109387397766113, -0.02761296182870865, -0.031437505036592484, -0.07218962162733078, -0.8379256725311279, -2.9032559394836426, -2.0177431106567383, -0.5663347840309143, -0.35516461730003357, -1.029811978340149, -0.43136507272720337, -0.5502424836158752, -0.013403193093836308, -1.530824065208435, -0.004373628180474043, -0.15755660831928253, -0.003118534805253148, -0.008889504708349705, -0.7765625715255737, -0.004561613779515028, -0.03478278964757919, -0.04433073103427887, -1.4182453155517578, -0.01865953393280506, -0.002927900291979313, -0.00014494798961095512, -0.0010444429935887456, -0.00238788896240294, -3.465364694595337, -0.041760846972465515, -0.28545641899108887, -0.001090646837837994, -0.11389849334955215, -1.5735502529423684e-05, -0.01848869025707245, -0.03317307308316231, -0.09835287928581238, -2.301285982131958, -0.3789106607437134, -0.03283339738845825, -0.41680341958999634, -1.888977289199829, -0.14769047498703003, -0.016757907345891, -0.366574227809906, -0.1331629604101181, -0.006955221761018038, -0.027106307446956635, -0.0016933638835325837, -0.7074717283248901, -0.03160984814167023, -0.5865907073020935, -0.7446854114532471, -1.6509872674942017, -0.0004228651523590088, -0.0003895000845659524, -0.0006696127820760012, -0.0009504806366749108, -1.6569954823353328e-05, -3.242440288886428e-05, -5.793403761344962e-05, -0.314429372549057, -6.4490144723095e-05, -0.0021423976868391037, -0.07268724590539932, -0.05093744024634361, -0.0022507591638714075, -0.005339409224689007, -3.373566141817719e-05, -0.00011419598013162613, -0.0045896186493337154, -0.00010346830822527409, -0.00010418349120300263, -0.00029571453342214227, -0.00048375347978435457, -0.00017009719158522785, -7.033323527139146e-06, -0.01702948845922947, -0.0007726544863544405, -0.030483433976769447, -0.000436091679148376, -0.010760970413684845, -0.007178348954766989, -0.00015245705435518175, -0.0014999578706920147, -0.002683730563148856, -1.0066497325897217, -0.3047522306442261, -0.6948479413986206, -0.00016723664884921163, -0.053127411752939224, -0.0008780676289461553, -0.00984609592705965, -0.00019572250312194228, -0.5851518511772156, -2.3131890296936035, -2.4739465713500977, -3.2142839431762695, -0.49591121077537537, -0.39121687412261963, -1.6055032014846802, -2.125739812850952, -2.738558053970337, -0.018403492867946625, -0.021041734144091606, -0.000746448349673301, -0.23231160640716553, -0.0008077934035100043, -0.0003325386205688119, -0.00019476900342851877, -1.5497195136049413e-06, -0.00013720047718379647, -1.5497195136049413e-06, -6.556489552167477e-06, -1.2516897186287679e-05, -0.8080819845199585, -1.646213173866272, -0.021906308829784393, -0.037751372903585434, -0.057034727185964584, -1.5657395124435425, -0.02507561445236206, -0.1340431421995163, -0.0001754606782924384, -0.0013875867007300258, -0.007053356617689133, -0.0001299296854995191, -0.002024388173595071, -0.0025315401144325733, -1.0030041933059692, -0.13210640847682953, -0.12845158576965332, -0.0009341643890365958, -0.397994726896286, -0.13633058965206146, -0.10908981412649155, -0.18663717806339264, -2.1492674350738525, -0.7562078833580017, -0.00036554806865751743, -1.5545324087142944, -0.33163580298423767, -0.0021820086985826492, -0.1527872532606125, -0.38707438111305237, -0.0043165371753275394, -0.0012996093137189746, -2.7418097943154862e-06, -1.2040065485052764e-05, -8.070142939686775e-05, -0.0001646144810365513, -8.916457591112703e-05, -0.0013084192760288715, -0.00096703483723104, -2.3841855067985307e-07, -3.576278118089249e-07, -1.7523612768854946e-05, -0.0003904534096363932, -0.0249148178845644, -0.043008819222450256, -0.00026842328952625394, -0.011681370437145233, -0.028702646493911743, -0.0002172949316445738, -0.0026057357899844646, -0.0051463511772453785, -0.7633258104324341, -0.38120636343955994, -2.1852877140045166, -0.4787800908088684, -1.129798412322998, -0.6844629049301147, -1.1232213973999023, -0.19710959494113922, -2.1707072257995605, -0.40916186571121216, -1.3557844161987305, -0.00021443451987579465, -0.009626515209674835, -0.0005333193112164736, -0.03429761528968811, -0.0005353448214009404, -0.4446079134941101, -0.032279521226882935, -0.001069569610990584, -0.1540389508008957, -0.005743666552007198, -0.2975480556488037, -0.00011359999916749075, -0.00043871314846910536, -0.004768072627484798, -2.481860637664795, -0.02508479729294777, -0.11309407651424408, -0.010496292263269424, -0.011211138218641281, -1.7881377516459906e-06, -7.867782187531702e-06, -0.03134254366159439, -2.861018856492592e-06, -0.0003066784702241421, -2.3841855067985307e-07, -0.0007773000397719443, -0.13112716376781464, -0.0002848696312867105, -2.2656726837158203, -0.0053130853921175, -0.0822773426771164, -1.2306909561157227, -1.1086402082582936e-05, -7.152555099310121e-07, -6.556489552167477e-06, -0.00010013079008786008, -0.013411073945462704, -2.432433605194092, -0.0003849719068966806, -0.007907277904450893, -0.003240336664021015, -0.00405976502224803, -1.9682462215423584, -0.013695676811039448, -0.02354240231215954, -0.00040070133400149643, -0.05581226572394371, -0.030681835487484932, -0.00018404220463708043, -0.002646992914378643, -0.002729264320805669, -0.8777292370796204, -0.3596653938293457, -0.40727776288986206, -0.00500900624319911, -0.0001525762490928173, -0.0011834054021164775, -0.09192000329494476, -0.09136385470628738, -0.15569593012332916, -0.03923546150326729, -0.4698415696620941, -0.36308202147483826, -1.2953815460205078, -0.036555320024490356, -0.39679303765296936, -2.072324514389038, -0.07644503563642502, -0.5356415510177612, -0.0052307890728116035, -0.010920756496489048, -0.0001931004080688581, -0.029752152040600777, -0.0011724510695785284, -0.028306525200605392, -0.030416250228881836, -0.0017992750508710742, -0.6784119009971619], "finish_reason": "length"}], "metrics": {"energy": 282.9333219575882, "energy_per_token": 1.1052082888968289, "time": 11.552512, "time_per_token": 0.045127}}
{"outputs": [{"text": "tf_idf_vec = TfidfVectorizer(analyzer='char', n_features=0)\n    tf_idf_vec.fit_transform(texts)\n    return (tf_idf_vec.transform(texts).toarray(), tf_idf_vec.get_feature_names())", "tokens": ["tf", "_", "id", "f", "_", "vec", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "char", "'", ",", " n", "_", "features", "=", "0", ")", "\n", "    ", "tf", "_", "id", "f", "_", "vec", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "return", " (", "tf", "_", "id", "f", "_", "vec", ".", "transform", "(", "text", "s", ")", ".", "to", "array", "()", ",", " tf", "_", "id", "f", "_", "vec", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "def"], "logprobs": [-2.6171674728393555, -1.681070327758789, -0.17998106777668, -0.0008803306263871491, -0.5156333446502686, -3.194514751434326, -0.014213752001523972, -0.003263863269239664, -8.940656698541716e-06, -0.0001479277852922678, -3.576272320060525e-06, -2.4199192921514623e-05, -1.0728830375228426e-06, -0.500588059425354, -1.4611417055130005, -0.030693743377923965, -0.38048338890075684, -1.3744920492172241, -0.9025786519050598, -0.00026472879108041525, -0.7416340112686157, -1.8713849782943726, -0.7462860941886902, -0.007581035606563091, -3.8264997005462646, -0.8330286741256714, -0.13703817129135132, -0.1312568187713623, -1.8288837671279907, -0.21148239076137543, -0.04665865749120712, -0.008814946748316288, -0.17133082449436188, -0.992075502872467, -0.07460281252861023, -0.03477392718195915, -2.065511465072632, -0.0005716835148632526, -0.20340581238269806, -0.08927815407514572, -0.0025705411098897457, -0.009388700127601624, -0.18332037329673767, -0.2816900908946991, -1.4236078262329102, -1.2056801319122314, -0.06794097274541855, -8.582700684200972e-05, -2.0503786799963564e-05, -3.576278118089249e-07, -1.7165990357170813e-05, -4.792098479811102e-05, -0.003971666097640991, -0.3308514952659607, -0.009049354121088982, -0.007129584904760122, -0.0003415954706724733, -0.007536787074059248, -0.02148403227329254, -0.3069896996021271, -0.01936868578195572, -0.007147812284529209, -0.11482598632574081, -0.1681298315525055, -1.3351351299206726e-05, -2.622600959512056e-06, -4.768370445162873e-07, -3.981510963058099e-05, -2.7418097943154862e-06, -0.00018285033002030104, -0.24608750641345978, -7.271740287251305e-06, -0.0002379134384682402, -4.768370445162873e-07, -0.008574219420552254, -0.20340026915073395, -0.4087027609348297, -0.014383446425199509, -0.9154847264289856], "finish_reason": "stop"}], "metrics": {"energy": 93.37060039806369, "energy_per_token": 1.181906334152705, "time": 3.3792348, "time_per_token": 0.04277512405063291}}
{"outputs": [{"text": "tfidf_vectorizer = TfidfVectorizer(analyzer='word', stop_words='none')\n\n    # remove URLs from texts\n    texts_cleaned = [text.replace(\"https://\", \"\").replace(\"http://\", \"\").replace(\"www.\", \"\").replace(\".\", \" \") for text in texts]\n\n    doc_mat = tfidf_vectorizer.fit_transform(texts_cleaned)\n\n    unique_words = tfidf_vectorizer.get_feature_names()\n\n    return (doc_mat.todense(), unique_words)", "tokens": ["tf", "id", "f", "_", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "'", ",", " stop", "_", "words", "='", "none", "')", "\n", "\n", "    ", "#", " remove", " URLs", " from", " texts", "\n", "    ", "text", "s", "_", "cleaned", " =", " [", "text", ".", "replace", "(", "\"", "https", "://", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "\"", "http", "://", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "\"", "www", ".", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "\"", ".", "\"", ",", " \"", " \"", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "doc", "_", "mat", " =", " tf", "id", "f", "_", "vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", "_", "cleaned", ")", "\n", "\n", "    ", "unique", "_", "words", " =", " tf", "id", "f", "_", "vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "return", " (", "doc", "_", "mat", ".", "t", "od", "ense", "()", ",", " unique", "_", "words", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.6171674728393555, -0.2689514458179474, -0.0027197536546736956, -0.954337477684021, -0.1976335197687149, -0.017916271463036537, -0.0032497234642505646, -0.001663373550400138, -3.933898824470816e-06, -0.00013863079948350787, -1.0728830375228426e-06, -9.417489309271332e-06, -6.818538531661034e-05, -0.6571142077445984, -1.1636067628860474, -0.015445144847035408, -0.33287954330444336, -0.24952270090579987, -0.5752196311950684, -0.00023552982020191848, -0.9553014039993286, -2.7418097943154862e-06, -0.0003968881501350552, -0.09808025509119034, -3.0312790870666504, -0.2813655436038971, -0.046041011810302734, -1.6816461086273193, -0.0003134713042527437, -0.9075882434844971, -1.7226561307907104, -0.507741391658783, -0.38422077894210815, -1.4899907112121582, -0.31996631622314453, -0.000842692912556231, -0.7362058758735657, -0.03167140856385231, -1.4960565567016602, -2.1294007301330566, -0.007545660249888897, -0.7825798988342285, -2.8383355140686035, -0.09193837642669678, -0.5794596672058105, -0.3718210458755493, -1.486191987991333, -0.6734611392021179, -0.08733633905649185, -0.17767317593097687, -0.0003554189461283386, -0.03429899737238884, -0.08412182331085205, -0.0019287331961095333, -0.0793277844786644, -0.011976830661296844, -0.0018386616138741374, -0.002895094221457839, -0.08076467365026474, -0.0020718553569167852, -0.0008257793379016221, -6.48477507638745e-05, -0.0016669438919052482, -0.0005550036439672112, -0.0024969372898340225, -0.5860689282417297, -0.17591577768325806, -0.003981046378612518, -0.009475613944232464, -0.0698358491063118, -0.013662045821547508, -0.00017998983094003052, -0.000200609109015204, -0.0032245328184217215, -0.002012729411944747, -0.004626285284757614, -0.7302240133285522, -0.34707456827163696, -0.0071847401559352875, -0.01952301152050495, -0.5421119332313538, -0.5816807746887207, -0.0004403813509270549, -0.0085811922326684, -0.6992359161376953, -0.005751015152782202, -0.9084831476211548, -0.0252431258559227, -0.0037397462874650955, -0.005789890885353088, -0.01003317441791296, -0.002743649296462536, -0.25494664907455444, -0.00013314791431184858, -3.309379816055298, -1.7299349308013916, -3.8772478103637695, -0.2516946792602539, -0.03318126127123833, -4.23184028477408e-05, 0.0, -2.884823152271565e-05, -4.327203714638017e-05, -5.602820692729438e-06, -5.9126061387360096e-05, -0.0012300790986046195, -0.0009535771678201854, -0.00010918975021922961, -0.006001428235322237, -0.004020228516310453, -6.294052582234144e-05, -0.003734877100214362, -9.870042413240299e-05, -0.0013275867095217109, -0.10418689250946045, -0.7413107752799988, -0.00016151554882526398, -2.6435675621032715, -0.0017947532469406724, -0.24740678071975708, -0.04439561814069748, -0.07370678335428238, -1.6689160474925302e-05, -4.768370445162873e-07, -8.702239938429557e-06, -6.318072337307967e-06, -4.207999518257566e-05, -2.1219027985353023e-05, -0.07813548296689987, -1.1920922133867862e-06, -0.00037245964631438255, -1.1920928244535389e-07, -0.0012374608777463436, -0.31758299469947815, -0.012254894711077213, -0.2496943324804306, -0.00011705666838679463, -0.4119710922241211, -0.489016592502594, -0.02523394301533699, -1.811964830267243e-05, -2.002696055569686e-05, -0.0659119263291359, -1.0206242799758911, -8.964136941358447e-05, -0.00215143826790154, -0.008515003137290478, -0.1158374473452568, -0.022577617317438126, -7.199982064776123e-05, -4.172316494077677e-06, -1.3663986921310425, -1.0728830375228426e-06, -2.264974000354414e-06, -5.829164365422912e-05, -0.0003331344632897526, -0.08132025599479675], "finish_reason": "stop"}], "metrics": {"energy": 183.2468399009704, "energy_per_token": 1.1671773242100025, "time": 6.7235503, "time_per_token": 0.042825161146496815}}
{"outputs": [{"text": "texts = [t.replace(' ', '') for t in texts]\n    vectorizer = TfidfVectorizer()\n    vectorizer.fit(texts)\n    doc_matrix = vectorizer.transform(texts)\n    tfidf_scores = doc_matrix.toarray()\n\n    uniq_words = sorted(vectorizer.get_feature_names())\n\n    return (tfidf_scores, uniq_words)", "tokens": ["text", "s", " =", " [", "t", ".", "replace", "('", " '", ",", " '", "')", " for", " t", " in", " texts", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "s", ")", "\n", "    ", "doc", "_", "matrix", " =", " vector", "izer", ".", "transform", "(", "text", "s", ")", "\n", "    ", "tf", "id", "f", "_", "scores", " =", " doc", "_", "matrix", ".", "to", "array", "()", "\n", "\n", "    ", "un", "iq", "_", "words", " =", " sorted", "(", "vector", "izer", ".", "get", "_", "feature", "_", "names", "())", "\n", "\n", "    ", "return", " (", "tf", "id", "f", "_", "scores", ",", " un", "iq", "_", "words", ")", "\n", "\n", "#"], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -2.9112777709960938, -0.20026768743991852, -0.9524979591369629, -0.8362382054328918, -2.9837896823883057, -0.09815752506256104, -0.13982431590557098, -0.31310251355171204, -0.40258365869522095, -0.003037127433344722, -0.0008250646642409265, -0.011720015667378902, -0.16365481913089752, -0.05906577780842781, -0.14630846679210663, -1.5704104900360107, -0.010663787834346294, -0.003361885668709874, -0.0010188394226133823, -4.291525328881107e-06, -2.7179348762729205e-05, -3.3378546504536644e-06, -9.179073458653875e-06, -9.536738616588991e-07, -0.9371488690376282, -0.01582445204257965, -0.048503294587135315, -1.0154824256896973, -0.47132325172424316, -0.017926927655935287, -0.030782178044319153, -0.183454230427742, -0.010709785856306553, -8.49926145747304e-05, -0.0024018031544983387, -0.02003597468137741, -0.10632462054491043, -3.3419346809387207, -0.29630735516548157, -1.7880656719207764, -0.04152083024382591, -0.03253653645515442, -1.9550132492440753e-05, -3.576214658096433e-05, -0.19900603592395782, -0.06884651631116867, -0.0033229156397283077, -0.0001591317413840443, -0.0006909366929903626, -0.16139674186706543, -0.09709209203720093, -3.255007266998291, -0.689535915851593, -0.015070508234202862, -0.1583631932735443, -0.7296159267425537, -0.04516458883881569, -1.091052770614624, -4.482168878894299e-05, -0.00019977481861133128, -0.008037603460252285, -0.2378874272108078, -0.026495037600398064, -0.008419021964073181, -0.209302619099617, -1.970740795135498, -0.0004919749335385859, -4.645864009857178, -0.4754173755645752, -0.039224687963724136, -0.16672556102275848, -0.02609269507229328, -1.9678757190704346, -0.018350357189774513, -0.13846834003925323, -1.7404405298293568e-05, -2.6702524337451905e-05, -0.8583499789237976, -5.006777428206988e-06, -0.0003771070914808661, -7.152555099310121e-07, -0.0022774015087634325, -0.14474529027938843, -0.015590570867061615, -1.0983448028564453, -0.00020692592079285532, -0.31898054480552673, -1.291069507598877, -0.06452818214893341, -9.179073458653875e-06, -3.6954811548639555e-06, -4.303362584323622e-05, -3.504691630951129e-05, -0.003708629636093974, -0.02267143316566944, -2.145764938177308e-06, -3.099436753473128e-06, -4.768360213347478e-06, -0.2709213197231293, -0.15209759771823883, -0.013766344636678696, -2.5766525268554688], "finish_reason": "stop"}], "metrics": {"energy": 136.86877670288084, "energy_per_token": 1.2912148745554797, "time": 4.638907, "time_per_token": 0.04376327358490566}}
{"outputs": [{"text": "regex = re.compile('(https?://)?(www.)?([\\w-])+(\\.(com|org|io|edu))')\n    texts = [regex.sub('', text) for text in texts]\n    tfidf = TfidfVectorizer()\n    score_matrix, feature_list = tfidf.fit_transform(texts).toarray(), tfidf.get_feature_names()\n\n    return score_matrix, feature_list", "tokens": ["regex", " =", " re", ".", "compile", "('", "(", "https", "?", "://", ")", "?", "(", "www", ".", ")", "?", "(", "[\\", "w", "-", "]", ")+", "(\\", ".", "(", "com", "|", "org", "|", "io", "|", "edu", "))", "')", "\n", "    ", "text", "s", " =", " [", "regex", ".", "sub", "('", "'", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "score", "_", "matrix", ",", " feature", "_", "list", " =", " tf", "id", "f", ".", "fit", "_", "transform", "(", "text", "s", ")", ".", "to", "array", "()", ",", " tf", "id", "f", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "return", " score", "_", "matrix", ",", " feature", "_", "list", "\n", "\n", "if"], "logprobs": [-3.8768930435180664, -0.2649928331375122, -0.23587383329868317, -0.00017271934484597296, -0.002773607149720192, -1.0689387321472168, -1.727601408958435, -0.696994423866272, -0.07816866785287857, -0.5573387742042542, -0.6403815150260925, -0.013299915939569473, -0.23201248049736023, -0.00667899614199996, -0.2403554469347, -0.012898937799036503, -2.1219027985353023e-05, -1.1487700939178467, -2.769352912902832, -0.00272843218408525, -0.1845579445362091, -0.10448481142520905, -2.3724029064178467, -0.08045211434364319, -6.949660019017756e-05, -0.3028930425643921, -1.2449063062667847, -0.12907664477825165, -0.09214245527982712, -0.12915438413619995, -3.195962429046631, -0.22413888573646545, -1.2859920263290405, -1.2764439582824707, -0.7792733907699585, -0.02674657665193081, -0.16691310703754425, -1.1661815643310547, -0.07663629204034805, -0.11444969475269318, -0.14355717599391937, -0.1731293648481369, -0.0017550080083310604, -0.0004010588163509965, -0.0853726863861084, -0.07149699330329895, -0.0021224133670330048, -0.5682175159454346, -0.06841978430747986, -0.13644656538963318, -0.0010469438275322318, -6.878139538457617e-05, -0.00044550508027896285, -0.019481392577290535, -0.05196240544319153, -0.6626827120780945, -1.8265918493270874, -0.4396112859249115, -0.0013387774815782905, -0.48643070459365845, -0.0016413562698289752, -5.483612312673358e-06, -0.003143371781334281, -4.768370445162873e-07, -2.2172682292875834e-05, -3.2186455882765586e-06, -0.44945043325424194, -0.1496463567018509, -0.03927569463849068, -4.295795440673828, -0.8199489116668701, -0.24994662404060364, -1.060463786125183, -2.1136374473571777, -0.01906791515648365, -1.7624289989471436, -0.003626557532697916, -0.01591327227652073, -6.318072337307967e-06, 0.0, -6.818538531661034e-05, -0.0040932451374828815, -0.003102491609752178, -7.331102824537084e-05, -0.11647225171327591, -0.007544003892689943, -0.0001461399078834802, -0.003103561233729124, -0.09781846404075623, -0.15300394594669342, -0.11481758952140808, -0.004684189334511757, -0.3710442781448364, -0.07472163438796997, -1.6212332411669195e-05, -1.311301275563892e-06, -7.223821739898995e-05, -0.059585925191640854, -7.390948667307384e-06, -0.00015496007108595222, -1.9907753085135482e-05, -0.017677726224064827, -0.1422991007566452, -0.008791668340563774, -1.9371304512023926, -0.0005125877796672285, -0.42314252257347107, -0.6885372400283813, -1.5735502529423684e-05, -3.40932747349143e-05, -0.0093507906422019, -0.025045037269592285, -0.00010311071673640981, -6.9141146923357155e-06, -0.645518958568573, -0.010309536941349506, -0.764360785484314], "finish_reason": "stop"}], "metrics": {"energy": 120.13086228179932, "energy_per_token": 1.0267595066820454, "time": 5.0601773, "time_per_token": 0.04324937863247864}}
{"outputs": [{"text": "texts = [re.sub(r'http\\S+', '', text) for text in texts]\n    vectorizer = TfidfVectorizer(analyzer=\"word\")\n    vectors = vectorizer.fit_transform(texts)\n    scores = vectors.toarray().round(8)\n    features = vectorizer.get_feature_names()\n    return scores, features", "tokens": ["text", "s", " =", " [", "re", ".", "sub", "(", "r", "'", "http", "\\", "S", "+'", ",", " ''", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "=", "\"", "word", "\"", ")", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "scores", " =", " vectors", ".", "to", "array", "()", ".", "round", "(", "8", ")", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " scores", ",", " features", "\n", "\n", "print"], "logprobs": [-2.5596837997436523, -0.08515692502260208, -0.14389470219612122, -0.13240322470664978, -0.7395113706588745, -0.00018356545479036868, -0.02678406424820423, -0.11449785530567169, -0.10234185308218002, -0.5510176420211792, -0.7831578254699707, -0.5376780033111572, -0.012981075793504715, -0.7556184530258179, -3.7788631743751466e-05, -0.19199369847774506, -9.536288416711614e-05, -0.6546427011489868, -0.17177094519138336, -0.10419107973575592, -0.00100514420773834, -5.2569914259947836e-05, -0.0007761088781990111, -0.02214699611067772, -0.10317066311836243, -0.28899553418159485, -0.45707857608795166, -0.004971286281943321, -0.0017199022695422173, -0.00040737437666393816, -2.3841830625315197e-06, -2.0503786799963564e-05, -2.264974000354414e-06, -1.07287787614041e-05, -9.536738616588991e-07, -0.7607612609863281, -1.3202354907989502, -0.01920848898589611, -2.041917562484741, -0.3159033954143524, -0.15621070563793182, -0.033313408493995667, -0.8081081509590149, -0.024573372676968575, -0.031358372420072556, -2.3995132446289062, -0.022203078493475914, -0.021323824301362038, -2.4318398573086597e-05, -2.2291887944447808e-05, -0.0016289787599816918, -0.0032828745897859335, -9.798523387871683e-05, -0.049859363585710526, -0.002568519674241543, -5.364274329622276e-05, -0.0006610354175791144, -0.09199046343564987, -0.10559109598398209, -1.4705957174301147, -0.03007529117166996, -0.14563904702663422, -0.001450201845727861, -0.4310978651046753, -0.024433551356196404, -0.0025883764028549194, -0.9125493168830872, -0.17664486169815063, -0.0015910121146589518, -0.04285978898406029, -0.00040356122190132737, -0.01725190319120884, -0.08805826306343079, -1.3160368204116821, -0.005928195081651211, -0.07693834602832794, -3.862306402879767e-05, -8.940656698541716e-06, -0.02460663951933384, -2.264974000354414e-06, -0.00046397410915233195, -3.576278118089249e-07, -0.004783377517014742, -0.2823675274848938, -0.003512286813929677, -0.1428179144859314, -0.04374736174941063, -0.4909951388835907, -0.0012301980750635266, -0.013276741839945316, -0.687993049621582, -0.008923650719225407, -3.1194448471069336], "finish_reason": "stop"}], "metrics": {"energy": 118.8944855442047, "energy_per_token": 1.2784353284323087, "time": 4.0124617, "time_per_token": 0.04314474946236559}}
{"outputs": [{"text": "# Remove URLs from the texts\n    texts = [text.replace(url, ' ') for text in texts]\n\n    # Convert text documents to feature vectors using a vectorizer\n    vectorizer = TfidfVectorizer()\n    vectors = vectorizer.fit_transform(texts)\n\n    # Calculate the TF-IDF scores for each word in each document\n    scores = vectors.dot(vectors.T).todense()\n\n    # Extract the unique words as features\n    features = vectorizer.get_feature_names()\n\n    # Round the scores to 8 decimal places\n    scores = [tuple(round(score, 8) for score in row) for row in scores]\n\n    return scores, features\n\nclass TestTaskFunc(unittest.TestCase):\n\n    def test_task_func(self):\n        texts = ['Python is great.', 'I love Python.']\n        scores, features = task_func(texts)\n        expected_scores = [(0.0, 0.0, 0.0, 0.0, 0.0, 0.", "tokens": ["#", " Remove", " URLs", " from", " the", " texts", "\n", "    ", "text", "s", " =", " [", "text", ".", "replace", "(", "url", ",", " '", " '", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Convert", " text", " documents", " to", " feature", " vectors", " using", " a", " vector", "izer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vectors", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " word", " in", " each", " document", "\n", "    ", "scores", " =", " vectors", ".", "dot", "(", "vectors", ".", "T", ")", ".", "t", "od", "ense", "()", "\n", "\n", "    ", "#", " Ext", "ract", " the", " unique", " words", " as", " features", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "    ", "#", " Round", " the", " scores", " to", " ", "8", " decimal", " places", "\n", "    ", "scores", " =", " [", "tuple", "(", "round", "(", "score", ",", " ", "8", ")", " for", " score", " in", " row", ")", " for", " row", " in", " scores", "]", "\n", "\n", "    ", "return", " scores", ",", " features", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "\n", "    ", "def", " test", "_", "task", "_", "func", "(", "self", "):", "\n", "        ", "text", "s", " =", " ['", "Python", " is", " great", ".", "'", ",", " '", "I", " love", " Python", ".", "']", "\n", "        ", "scores", ",", " features", " =", " task", "_", "func", "(", "text", "s", ")", "\n", "        ", "expected", "_", "scores", " =", " [(", "0", ".", "0", ",", " ", "0", ".", "0", ",", " ", "0", ".", "0", ",", " ", "0", ".", "0", ",", " ", "0", ".", "0", ",", " ", "0", "."], "logprobs": [-1.5304116010665894, -1.4278597831726074, -0.5512264966964722, -0.3025573194026947, -0.48642101883888245, -0.9230039715766907, -0.4135887324810028, -0.002167496830224991, -0.7101141810417175, -0.028202224522829056, -0.11075354367494583, -0.02554367296397686, -2.350822687149048, -0.12308906018733978, -0.3559716045856476, -0.2536766827106476, -1.9410934448242188, -0.05263702943921089, -0.1813400238752365, -2.1535837650299072, -0.0026751705445349216, -0.12101605534553528, -0.05597031116485596, -0.009997296147048473, -0.0003904534096363932, -0.5552130937576294, -0.0010617101797834039, -0.18147923052310944, -0.0002668739762157202, -0.06633749604225159, -1.7814043760299683, -1.9517462253570557, -0.3886706233024597, -0.2414017915725708, -3.4160232543945312, -0.1251991093158722, -0.55237877368927, -1.6588479280471802, -1.6492559909820557, -0.0014627005439251661, -0.2809698283672333, -0.0003438596613705158, -0.07169796526432037, -0.0009891861118376255, -0.0006908176001161337, -0.0005772831500507891, -2.7418097943154862e-06, -1.3112935448589269e-05, -2.3841830625315197e-06, -9.059865078597795e-06, -7.152555099310121e-07, -0.5259643793106079, -0.018122684210538864, -0.005585776641964912, -1.2680797576904297, -0.009984903037548065, -0.017560482025146484, -1.0251946150674485e-05, -1.0609570381348021e-05, -0.002731047570705414, -0.00034433635300956666, -8.296622399939224e-05, -0.025264164432883263, -0.00129413278773427, -7.080780778778717e-05, -0.0005190217634662986, -0.06088656559586525, -0.1477392166852951, -0.00020037073409184813, -0.03392893821001053, -1.0575519800186157, -0.8941795229911804, -0.3905601501464844, -0.0048477970995008945, -7.879423355916515e-05, -0.000709282117895782, -0.06955377757549286, -0.2064378410577774, -0.1382053941488266, -0.1509290635585785, -0.7473480105400085, -1.1338812112808228, -0.09669185429811478, -0.14813825488090515, -0.0006429274217225611, -0.6068452596664429, -0.029196104034781456, -0.38406360149383545, -0.011598535813391209, -2.3949310779571533, -0.012238291092216969, -0.00791969709098339, -0.000952386180870235, -0.023070143535733223, -0.018642332404851913, -0.685107946395874, -1.2236294746398926, -4.1483970562694594e-05, -0.002463641343638301, -0.004146075341850519, -0.3107263147830963, -0.15899324417114258, -0.0002383901592111215, -0.05852928012609482, -1.6964845657348633, -0.0019156454363837838, -0.7583215832710266, -0.3437618017196655, -0.09685049951076508, -2.4684972763061523, -0.2737325429916382, -0.7610564231872559, -0.0001784403866622597, -0.29305991530418396, -0.0025197681970894337, -0.06010625138878822, -9.059865078597795e-06, -1.2516897186287679e-05, -0.020864060148596764, -1.311301275563892e-06, -0.0003108495147898793, -2.861018856492592e-06, -0.01813368871808052, -0.2652972340583801, -0.002587544033303857, -0.0827464908361435, -8.535020606359467e-05, -0.7288822531700134, -0.6683512926101685, -0.2787400782108307, -0.21015086770057678, -0.029894355684518814, -0.0550503134727478, -0.004782546777278185, -0.021404456347227097, -0.0014804366510361433, -0.6783197522163391, -0.00040618274942971766, -0.2912372052669525, -0.020782100036740303, -0.7737694382667542, -0.172953799366951, -0.1449243277311325, -0.13433220982551575, -0.0030423568096011877, -0.17040686309337616, -0.0011476842919364572, -0.001746558933518827, -0.007293148431926966, -0.00012611546844709665, -0.0050195627845823765, -5.745722592109814e-05, -1.0013530300057027e-05, -0.46470195055007935, -0.0020965994335711002, -0.006293478421866894, -3.981510963058099e-05, -1.2159273865108844e-05, -0.0015244778478518128, -0.005007463973015547, -0.0008253029081970453, -0.026002684608101845, -6.818538531661034e-05, -0.6042330861091614, -0.46553435921669006, -0.00036352223833091557, -0.009816586039960384, -0.4033656120300293, -0.005393121857196093, -3.266620635986328, -0.6422265768051147, -0.12269508838653564, -0.1351184844970703, -0.03464853763580322, -0.05041515454649925, -2.7418097943154862e-06, -0.00013684290752280504, -0.0002076410164590925, -0.0008578196284361184, -0.00032610344351269305, -2.000831127166748, -0.003258516313508153, -0.21593590080738068, -0.11335168033838272, -0.010772173292934895, -0.4055391848087311, -0.019458245486021042, -0.022117728367447853, -0.24587582051753998, -6.389413465512916e-05, -0.006466890685260296, -0.004098350182175636, -0.027402235195040703, -0.7608755230903625, -0.05562600493431091, -0.03671276196837425, -0.6729354858398438, -2.7854738235473633, -0.12813334167003632, -0.7171565890312195, -0.16853471100330353, -0.06385146826505661, -0.00019000156316906214, -0.049174580723047256, -0.9533219933509827, -0.13966582715511322, -0.024396905675530434, -0.05242133140563965, -1.1485167741775513, -0.0022367238998413086, -0.060444530099630356, -0.8807510733604431, -0.02472713030874729, -0.015050427988171577, -0.0009600082994438708, -0.0017314456636086106, -3.540453326422721e-05, -4.172316494077677e-06, -0.002610729541629553, -0.0008928364841267467, -1.0728830375228426e-06, -0.0013063953956589103, -0.001033129869028926, -0.4761049747467041, -1.9421091079711914, -0.052374158054590225, -0.10105472803115845, -0.008426705375313759, -0.6770673990249634, -0.0455763004720211, -0.03982525318861008, -0.18334586918354034, -0.0053370376117527485, -0.003254238748922944, -0.027512185275554657, -0.0011526852613314986, -0.39615458250045776, -0.013895203359425068, -0.000894146622158587, -0.0739230364561081, -0.0007367995567619801, -0.33338794112205505, -0.021104298532009125, -0.0009617946925573051, -0.02469584532082081, -0.00030620177858509123, -0.1573171764612198, -0.009266936220228672, -0.0011562574654817581, -0.022233856841921806, -0.0004060635983478278, -0.20489923655986786, -0.004967608954757452, -0.0009415484382770956, -0.03351043909788132, -0.0002022777043748647], "finish_reason": "length"}], "metrics": {"energy": 295.0821556510926, "energy_per_token": 1.1526646705120804, "time": 11.349211, "time_per_token": 0.04433285546875}}
{"outputs": [{"text": "# create an instance of the TfidfVectorizer\n    vectorizer = TfidfVectorizer(analyzer='char',\n                                char_length=10,\n                                min_df=2,\n                                max_df=0.5,\n                                norm='l1')\n\n    # fit the vectorizer using the texts to generate the feature matrix and analyze the words\n    feature_matrix = vectorizer.fit_transform(texts)\n    words = vectorizer.get_feature_names()\n    return feature_matrix, words", "tokens": ["#", " create", " an", " instance", " of", " the", " T", "f", "id", "f", "Vector", "izer", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "char", "'", ",", "\n", "                ", "                ", "char", "_", "length", "=", "1", "0", ",", "\n", "                ", "                ", "min", "_", "df", "=", "2", ",", "\n", "                ", "                ", "max", "_", "df", "=", "0", ".", "5", ",", "\n", "                ", "                ", "norm", "='", "l", "1", "')", "\n", "\n", "    ", "#", " fit", " the", " vector", "izer", " using", " the", " texts", " to", " generate", " the", " feature", " matrix", " and", " analyze", " the", " words", "\n", "    ", "feature", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "words", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " feature", "_", "matrix", ",", " words", "\n", "\n", "if"], "logprobs": [-1.5304116010665894, -4.208942890167236, -1.9710124731063843, -0.18946999311447144, -0.009693929925560951, -1.078409194946289, -0.05511022359132767, -0.00048673225683160126, -0.019733767956495285, -0.00022933237778488547, -0.00389519683085382, -0.00019441144831944257, -0.8047176003456116, -0.002593608107417822, -0.5517765879631042, -0.00382608431391418, -0.0023587520699948072, -0.0008830699953250587, -4.6491513785440475e-06, -0.00034624303225427866, -1.0728830375228426e-06, -9.059865078597795e-06, -1.2159273865108844e-05, -0.7610815167427063, -1.4130785465240479, -0.008811047300696373, -0.2646602988243103, -2.2165870666503906, -0.6732547283172607, -0.00021550717065110803, -3.3870115280151367, -0.004035069607198238, -0.01478700153529644, -2.5949206352233887, -0.05923915281891823, -3.377319574356079, -0.11898013204336166, -2.2556750774383545, -1.3452906608581543, -0.5501282811164856, -0.07981196790933609, -0.0007923085941001773, -0.00031025364296510816, -2.2150137424468994, -2.169585604860913e-05, -0.04298049956560135, -0.002983169164508581, -1.6415902376174927, -0.2183738350868225, -0.09812024235725403, -0.0006883158930577338, -0.00069165148306638, -1.3618277311325073, -0.00037150635034777224, -0.20809723436832428, -0.0011016021016985178, -0.13497589528560638, -0.000337305391440168, -1.8327703475952148, -0.16229186952114105, -0.006088874768465757, -0.00045253525604493916, -0.0006878394051454961, -3.340066909790039, -0.2831815183162689, -0.05717996880412102, -1.1905454397201538, -0.788686990737915, -0.016317501664161682, -0.4051029682159424, -0.001277822069823742, -0.08666188269853592, -1.3108590841293335, -0.12062496691942215, -0.3067789375782013, -0.0033736478071659803, -3.1733481884002686, -0.09516172111034393, -1.7189960479736328, -3.0484633445739746, -1.9226162433624268, -0.9258716702461243, -2.361232280731201, -0.5552658438682556, -2.425238847732544, -4.875666618347168, -0.5801185965538025, -1.403356909751892, -0.4253595769405365, -0.002086011925712228, -2.1302437782287598, -0.007252319250255823, -0.045666273683309555, -0.06270505487918854, -0.0035295113921165466, -2.145764938177308e-06, -4.494089080253616e-05, -0.00013040646445006132, -0.0020692383404821157, -7.426462980220094e-05, -0.012763476930558681, -0.018996568396687508, -0.0003251500893384218, -0.005404504481703043, -0.07688072323799133, -0.2589483857154846, -1.3787857294082642, -0.052497006952762604, -0.15755081176757812, -1.811964830267243e-05, -3.1709168979432434e-05, -0.04995564743876457, -1.6689286894688848e-06, -0.00039414744242094457, -5.960462772236497e-07, -0.00412838626652956, -0.22683773934841156, -0.010279095731675625, -2.33176326751709, -0.8384391665458679, -0.4370992183685303, -0.0006033745594322681, -9.798523387871683e-05, -0.3894404470920563, -0.02442738600075245, -0.36162707209587097, -0.011342212557792664, -0.8598892688751221], "finish_reason": "stop"}], "metrics": {"energy": 132.13960605907434, "energy_per_token": 1.0323406723365183, "time": 5.459114, "time_per_token": 0.042649328125}}
{"outputs": [{"text": "urls_pattern = re.compile('((https?)\\:\\/\\/)?([0-9a-zA-Z\\-\\.]+)\\.([a-zA-Z]{2,3})(\\.[a-zA-Z])?(\\/[a-zA-Z0-9\\.\\/\\-\\_\\?%&=]+)?')\n    texts = [urls_pattern.sub('', text) for text in texts]\n    vectorizer = TfidfVectorizer()\n    tfidf_matrix = vectorizer.fit_transform(texts).toarray()\n    unique_words = vectorizer.get_feature_names()\n    return tfidf_matrix, unique_words", "tokens": ["urls", "_", "pattern", " =", " re", ".", "compile", "('", "((", "https", "?", ")\\", ":\\", "/\\", "/)", "?", "([", "0", "-", "9", "a", "-", "z", "A", "-", "Z", "\\", "-\\", ".", "]+", ")\\", ".", "([", "a", "-", "z", "A", "-", "Z", "]{", "2", ",", "3", "})", "(\\", ".", "[", "a", "-", "z", "A", "-", "Z", "])", "?", "(\\", "/", "[", "a", "-", "z", "A", "-", "Z", "0", "-", "9", "\\", ".", "\\", "/\\", "-\\", "_\\", "?", "%", "&=", "]+", ")", "?", "')", "\n", "    ", "text", "s", " =", " [", "urls", "_", "pattern", ".", "sub", "('", "'", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "tf", "id", "f", "_", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", ".", "to", "array", "()", "\n", "    ", "unique", "_", "words", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " tf", "id", "f", "_", "matrix", ",", " unique", "_", "words", "\n", "\n", "def"], "logprobs": [-4.39896297454834, -1.9214507341384888, -1.34702730178833, -0.0037108862306922674, -0.21292169392108917, -2.95634672511369e-05, -0.00046171018038876355, -2.6147255897521973, -3.620253562927246, -1.9598464965820312, -0.8677672147750854, -3.8874359130859375, -0.24262933433055878, -0.0017827346455305815, -0.048597320914268494, -0.051562488079071045, -1.249625325202942, -4.0107269287109375, -0.00039545822073705494, -0.03149202838540077, -0.05688687041401863, -5.113947918289341e-05, -0.00024077377747744322, -0.20281736552715302, -0.00021526881027966738, -0.000825898430775851, -0.9556891322135925, -1.8517675399780273, -0.034123778343200684, -1.0821335315704346, -1.2388874292373657, -0.1854855716228485, -0.1433204561471939, -0.01986595056951046, -0.0007520469953306019, -0.0005604841862805188, -0.20899884402751923, -0.00025614796322770417, -0.0013454442378133535, -0.13231205940246582, -0.011627993546426296, -0.0034765300806611776, -2.1926376819610596, -0.6855208873748779, -0.4017353355884552, -2.416343927383423, -0.042032696306705475, -0.028748981654644012, -0.00011765264935093, -0.00016819016309455037, -0.04031187668442726, -0.00010823617776622996, -0.0010619483655318618, -2.8318755626678467, -0.09690871089696884, -0.42830419540405273, -1.1664625406265259, -0.46816858649253845, -0.9047793745994568, -0.000581572181545198, -0.0017016944475471973, -0.012804081663489342, -0.0005383234238252044, -0.0069727422669529915, -0.22873453795909882, -0.0003978414461016655, -0.0006096888100728393, -0.30623117089271545, -1.2742300033569336, -0.43998923897743225, -0.7369609475135803, -1.8900789022445679, -0.9577251672744751, -0.16351372003555298, -2.902860164642334, -1.0353962182998657, -1.3559786081314087, -0.06577932834625244, -0.06557158380746841, -0.05032141134142876, -0.011958102695643902, -0.27660152316093445, -0.9710018038749695, -0.0769919902086258, -0.33840206265449524, -0.12191934883594513, -0.4610024392604828, -0.00015245705435518175, -0.00025817399728111923, -0.00032479254878126085, -0.00036554806865751743, -0.049743905663490295, -0.10078703612089157, -0.00038938093348406255, -0.3069346249103546, -0.051938075572252274, -0.08635346591472626, -0.0006972504197619855, -7.271502545336261e-05, -0.00043764073052443564, -0.005794868338853121, -0.04294007271528244, -0.7430063486099243, -0.3882649838924408, -0.006799772847443819, -0.0019972631707787514, -0.0004563482361845672, -1.6689286894688848e-06, -1.2993727978027891e-05, -1.9073468138230965e-06, -9.775113539944869e-06, -1.5497195136049413e-06, -0.5033394694328308, -0.008831370621919632, -0.02840038388967514, -1.631097674369812, -0.4627781808376312, -0.010712026618421078, -0.5110775232315063, -0.6088570952415466, -0.016324538737535477, -0.009427198208868504, -5.722029527532868e-06, -3.9219088648678735e-05, -0.0005447572330012918, -0.0010590903693810105, -4.8397800128441304e-05, -0.015080606564879417, -0.003214313881471753, -0.00010859376925509423, -0.0010305099422112107, -2.208353042602539, -0.4457586407661438, -0.0092815812677145, -0.0018120075110346079, -0.03548244759440422, -0.07407470047473907, -1.968112826347351, -0.0010353925172239542, -0.3844078779220581, -0.01677033305168152, -0.2538829445838928, -4.95898348162882e-05, -1.0847986231965479e-05, -0.057345230132341385, -8.344646857949556e-07, -0.0003326578007545322, -2.3841855067985307e-07, -0.0015831567579880357, -0.2531343102455139, -0.005359922535717487, -0.1098388209939003, -0.11821972578763962, -0.4517577886581421, -4.0531076592742465e-06, -1.9073468138230965e-06, -2.288792165927589e-05, -8.964136941358447e-05, -0.001562208984978497, -0.01171636302024126, -0.00011920218821614981, -7.867782187531702e-06, -0.6279458403587341, -0.013396253809332848, -1.2682948112487793], "finish_reason": "stop"}], "metrics": {"energy": 182.2000150852202, "energy_per_token": 1.1042425156680011, "time": 7.160538, "time_per_token": 0.0433972}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer(analyzer='word', stop_words='english')\n\n    word_list = []\n    for doc in texts:\n        text_without_url = ''.join([ch for ch in doc if ch.isalnum()])\n        tokens = re.findall(r\"\\w+|[^\\w\\s]+\", text_without_url, re.UNICODE)\n        word_list.append(tokens)\n\n    vectorized = vectorizer.fit_transform(word_list)\n    scores = vectorized.toarray()\n\n    for i in range(scores.shape[0]):\n        scores[i] = map(lambda x: round(x, 8), scores[i])\n\n    return scores, vectorizer.get_feature_names()", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "word", "'", ",", " stop", "_", "words", "='", "eng", "lish", "')", "\n", "\n", "    ", "word", "_", "list", " =", " []", "\n", "    ", "for", " doc", " in", " texts", ":", "\n", "        ", "text", "_", "without", "_", "url", " =", " ''", ".", "join", "([", "ch", " for", " ch", " in", " doc", " if", " ch", ".", "isal", "num", "()", "])", "\n", "        ", "tokens", " =", " re", ".", "find", "all", "(", "r", "\"", "\\", "w", "+|", "[", "^\\", "w", "\\", "s", "]+", "\"", ",", " text", "_", "without", "_", "url", ",", " re", ".", "UN", "IC", "ODE", ")", "\n", "        ", "word", "_", "list", ".", "append", "(", "tokens", ")", "\n", "\n", "    ", "vector", "ized", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "word", "_", "list", ")", "\n", "    ", "scores", " =", " vector", "ized", ".", "to", "array", "()", "\n", "\n", "    ", "for", " i", " in", " range", "(", "scores", ".", "shape", "[", "0", "]", "):", "\n", "        ", "scores", "[", "i", "]", " =", " map", "(", "lambda", " x", ":", " round", "(", "x", ",", " ", "8", ")", ",", " scores", "[", "i", "])", "\n", "\n", "    ", "return", " scores", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "\n", "if"], "logprobs": [-1.8747929334640503, -0.00777350552380085, -0.0037709809839725494, -0.0013043713988736272, -4.0531076592742465e-06, -1.3351351299206726e-05, -4.410734163684538e-06, -1.07287787614041e-05, -8.344646857949556e-07, -0.670639157295227, -1.4996670484542847, -0.017809946089982986, -0.3333970904350281, -0.32655394077301025, -0.6711333394050598, -0.00017295771976932883, -1.0588587522506714, -2.861018856492592e-06, -0.0006295844214037061, -0.09255930036306381, -0.3870896100997925, -7.64102369430475e-05, -0.2537465989589691, -0.028595145791769028, -2.1857638359069824, -0.00044169207103550434, -4.159674167633057, -0.0309140644967556, -2.3704233169555664, -0.12898507714271545, -1.1922672986984253, -0.04089554026722908, -0.1273583471775055, -0.7680180668830872, -1.9065402746200562, -0.042079899460077286, -0.025440478697419167, -0.0016767027555033565, -0.004280215594917536, -0.013850763440132141, -3.342803478240967, -1.6580318212509155, -1.2160499095916748, -0.0016231469344347715, -0.22280952334403992, -0.019481627270579338, -2.8395066261291504, -0.3380663990974426, -0.00015162272029556334, -1.858393907546997, -3.2041573524475098, -0.10289063304662704, -0.0007939761853776872, -0.0003718638326972723, -0.05534056946635246, -0.016048895195126534, -1.1457200050354004, -1.1461231708526611, -0.32961758971214294, -0.00022098960471339524, -0.001978822285309434, -2.0558218955993652, -0.11062057316303253, -0.02321236953139305, -3.376227617263794, -0.04128888249397278, -0.6293206810951233, -4.076874756719917e-05, -0.5633722543716431, -0.0010127659188583493, -0.17532002925872803, -0.06894610822200775, -2.3645315170288086, -0.8483009338378906, -0.10940080881118774, -1.572575330734253, -0.04693622887134552, -0.10767637938261032, -0.04566194862127304, -0.08030548691749573, -0.0011999557027593255, -1.907029390335083, -0.023439817130565643, -0.00020358874462544918, -0.017855381593108177, -0.0003516055876389146, -0.00018356545479036868, -6.222531374078244e-05, -5.245195097813848e-06, -2.4574501514434814, -0.4513271749019623, -8.582700684200972e-05, -0.20920175313949585, -0.0004807746736332774, -0.0005115154199302197, -0.01876647025346756, -0.009813516400754452, -0.08702638000249863, -0.8989933729171753, -0.0049887229688465595, -0.10431770980358124, -0.08586182445287704, -0.12879885733127594, -0.14645561575889587, -0.41261398792266846, -0.0025227407459169626, -0.0014231802197173238, -0.18782828748226166, -0.0025127525441348553, -1.6019866466522217, -1.668594479560852, -1.5799381732940674, -0.006421645637601614, -3.361645576660521e-05, -5.876845170860179e-05, -0.0026349846739321947, -0.014564272947609425, -0.00018344627460464835, -0.004269532393664122, -0.019573630765080452, -3.6477376852417365e-05, -5.006777428206988e-06, -0.0012254356406629086, -0.05981995910406113, -0.3258047103881836, -1.5901985168457031, -0.07336487621068954, -0.1757279932498932, -0.17046195268630981, -0.003739390056580305, -0.4586228132247925, -0.020210757851600647, -0.004984215367585421, -0.4164092242717743, -0.9998013973236084, -0.00021407696476671845, -3.75834059715271, -0.6188044548034668, -0.42150741815567017, -0.005309527739882469, -0.0009629856795072556, -2.324627637863159, -0.005665791220963001, -0.015486697666347027, -0.001658732071518898, -0.6451898217201233, -0.0008713977294974029, -0.001649211160838604, -0.007306520827114582, -0.001979893073439598, -0.24250036478042603, -0.0016468308167532086, -0.00021765247220173478, -0.09191054105758667, -0.01678076758980751, -4.185879707336426, -0.010492635890841484, -0.23819607496261597, -0.14417803287506104, -0.009078888222575188, -0.06234962120652199, -0.0006337541271932423, -0.020899666473269463, -0.00798273179680109, -0.01741967722773552, -0.012976604513823986, -5.185469490243122e-05, -0.0012772268382832408, -0.017720239236950874, -0.00015031162183731794, -7.343022298300639e-05, -0.0024726788979023695, -0.00745715806260705, -0.0945543423295021, -0.0003510097449179739, -0.30036595463752747, -0.8143282532691956, -0.014806381426751614, -0.047763824462890625, -0.011168936267495155, -0.0005650115781463683, -0.07490293681621552, -2.145764938177308e-06, -0.00030882356804795563, -4.768370445162873e-07, -0.0021526277996599674, -0.19264352321624756, -0.5544202327728271, -0.011844190768897533, -0.6823039054870605], "finish_reason": "stop"}], "metrics": {"energy": 229.69209362983713, "energy_per_token": 1.2089057559465113, "time": 8.41212, "time_per_token": 0.04427431578947368}}
{"outputs": [{"text": "url_pattern = re.compile(r'https?://(www\\.)?[\\w-]+(?:.[\\w-]+)+/?(?:[\\w-./?%&=@;]*)?')\n    vectorizer = TfidfVectorizer(analyzer='char_wb')\n    matrix = vectorizer.fit_transform(texts)\n    scores = list(matrix.toarray()[0])\n\n    return matrix, vectorizer.get_feature_names_out()", "tokens": ["url", "_", "pattern", " =", " re", ".", "compile", "(", "r", "'", "https", "?", "://", "(", "www", "\\", ".", ")", "?", "[\\", "w", "-", "]", "+(", "?", ":", ".", "[\\", "w", "-", "]+", ")+", "/", "?", "(", "?", ":", "[\\", "w", "-", ".", "/", "?", "%", "&=", "@", ";", "]", "*)", "?", "')", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "analy", "zer", "='", "char", "_", "wb", "')", "\n", "    ", "matrix", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "scores", " =", " list", "(", "matrix", ".", "to", "array", "()[", "0", "])", "\n", "\n", "    ", "return", " matrix", ",", " vector", "izer", ".", "get", "_", "feature", "_", "names", "_", "out", "()", "\n", "\n", "if"], "logprobs": [-3.13167667388916, -0.14661911129951477, -0.8108446598052979, -0.0026661348529160023, -0.09286732971668243, -3.361645576660521e-05, -0.00026353701832704246, -0.06329918652772903, -0.10766953229904175, -0.48432689905166626, -0.21625226736068726, -0.003423545742407441, -0.20790505409240723, -1.6882554292678833, -0.795414924621582, -0.04671144858002663, -0.0034872216638177633, -0.006161740515381098, -6.854299135738984e-05, -1.160870909690857, -0.017205385491251945, -0.5266962647438049, -0.7627382278442383, -0.2636234760284424, -1.1207152605056763, -0.6052120327949524, -0.28709855675697327, -0.027155499905347824, -3.266281055402942e-05, -0.006113756448030472, -0.00778474286198616, -0.14128892123699188, -0.7329041361808777, -0.11455994099378586, -0.8485233187675476, -0.15156421065330505, -0.4306100606918335, -0.12466959655284882, -0.003863966092467308, -1.1940515041351318, -0.3044086694717407, -0.2563461661338806, -0.2743556499481201, -0.38820022344589233, -0.026242388412356377, -1.6040494441986084, -2.2673654556274414, -1.4172229766845703, -0.02465537190437317, -0.26318761706352234, -0.0484515056014061, -0.0329330638051033, -0.24860234558582306, -1.8243833780288696, -0.009032579138875008, -0.0030815755017101765, -0.0005423743859864771, -1.9073468138230965e-06, -2.0503786799963564e-05, -1.9073468138230965e-06, -1.585470999998506e-05, -8.344646857949556e-07, -0.36046385765075684, -1.0811275243759155, -0.03740200027823448, -0.23955008387565613, -1.3477306365966797, -1.1453849077224731, -0.39890605211257935, -1.0066454410552979, -0.029844142496585846, -0.15474127233028412, -4.4721293449401855, -0.21764789521694183, -0.08985790610313416, -4.565611743601039e-05, -0.00011979816190432757, -0.0022898900788277388, -0.0019760860595852137, -6.389413465512916e-05, -0.3919443190097809, -0.3742305636405945, -0.0031041554175317287, -0.0036251323763281107, -0.1429716795682907, -0.13692496716976166, -1.9876124858856201, -0.10541581362485886, -2.4705777168273926, -0.035813286900520325, -0.23580189049243927, -0.024212846532464027, -0.4701467454433441, -0.07489098608493805, -2.5866458415985107, -0.0036286956164985895, -0.02993612177670002, -0.032876886427402496, -2.5588598251342773, -0.0002615109842736274, -1.7522512674331665, -3.260610342025757, -0.20109574496746063, -0.23645690083503723, -1.3708974620385561e-05, -0.00017391123401466757, -0.09822635352611542, -4.6491513785440475e-06, -0.00031096869497559965, -4.768370445162873e-07, -0.0032522189430892467, -0.9519879817962646, -0.00018690270371735096, -0.04085274040699005, -0.348696768283844, -0.017746005207300186, -0.8614190816879272], "finish_reason": "stop"}], "metrics": {"energy": 150.8092068405151, "energy_per_token": 1.2889675798334623, "time": 5.0611873, "time_per_token": 0.04325801111111111}}
{"outputs": [{"text": "vectorizer = TfidfVectorizer()\n    vector = vectorizer.fit_transform(texts)\n    features = vectorizer.get_feature_names()\n    return (vector.todense(), features)", "tokens": ["vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "()", "\n", "    ", "vector", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", "\n", "    ", "features", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " (", "vector", ".", "t", "od", "ense", "()", ",", " features", ")", "\n", "\n", "#"], "logprobs": [-1.8747929334640503, -0.00777350552380085, -0.0037709809839725494, -0.0013043713988736272, -4.0531076592742465e-06, -1.3351351299206726e-05, -4.410734163684538e-06, -1.07287787614041e-05, -8.344646857949556e-07, -0.7183762788772583, -0.017334504052996635, -0.16258341073989868, -1.472822666168213, -1.9152604341506958, -0.011195342056453228, -8.546940807718784e-05, -0.0001528146385680884, -0.0036975841503590345, -0.07465625554323196, -8.260862523457035e-05, -0.08266977965831757, -0.04125204682350159, -0.0003808011533692479, -0.001505909371189773, -0.026369532570242882, -0.22091279923915863, -2.59844970703125, -0.02450486086308956, -0.10315227508544922, -0.002212459221482277, -2.372236667724792e-05, -0.01442786306142807, -2.0265558760002023e-06, -0.0005995621904730797, -2.50339189733495e-06, -0.009193114936351776, -0.24313482642173767, -0.011936192400753498, -0.17123158276081085, -0.7382760047912598, -0.3228616714477539, -0.2536182105541229, -0.07656717300415039, -1.2151811122894287, -8.546940807718784e-05, -0.0009951406391337514, -0.007629777304828167, -0.03939225524663925, -0.04372259974479675, -0.2868104577064514, -0.15295125544071198, -0.01289117056876421, -2.428753614425659], "finish_reason": "stop"}], "metrics": {"energy": 50.27059435653687, "energy_per_token": 0.9485017803120164, "time": 2.1205478, "time_per_token": 0.04001033584905661}}
{"outputs": [{"text": "documents = []\n    all_words = []\n    for doc in texts:\n        # remove URLs\n        text = re.sub(r'http\\S+', ' ', doc)\n        # split text into words\n        words = [word.lower() for word in text.split()]\n        # create a list of words without duplicates\n        words_set = set(words)\n        # remove duplicates from all_words\n        all_words = list(all_words)\n        for word in words_set:\n            # add word to all_words if not already exists\n            if not word in all_words:\n                all_words.append(word)\n        doc = [1.0 if word in words else 0.0 for word in all_words]\n        documents.append(tuple(doc))\n    tfidf = TfidfVectorizer().fit(documents)\n    return (tfidf.transform(documents).toarray(), all_words)", "tokens": ["doc", "uments", " =", " []", "\n", "    ", "all", "_", "words", " =", " []", "\n", "    ", "for", " doc", " in", " texts", ":", "\n", "        ", "#", " remove", " URLs", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "http", "\\", "S", "+'", ",", " '", " '", ",", " doc", ")", "\n", "        ", "#", " split", " text", " into", " words", "\n", "        ", "words", " =", " [", "word", ".", "lower", "()", " for", " word", " in", " text", ".", "split", "()", "]", "\n", "        ", "#", " create", " a", " list", " of", " words", " without", " dup", "licates", "\n", "        ", "words", "_", "set", " =", " set", "(", "words", ")", "\n", "        ", "#", " remove", " dup", "licates", " from", " all", "_", "words", "\n", "        ", "all", "_", "words", " =", " list", "(", "all", "_", "words", ")", "\n", "        ", "for", " word", " in", " words", "_", "set", ":", "\n", "            ", "#", " add", " word", " to", " all", "_", "words", " if", " not", " already", " exists", "\n", "            ", "if", " not", " word", " in", " all", "_", "words", ":", "\n", "                ", "all", "_", "words", ".", "append", "(", "word", ")", "\n", "        ", "doc", " =", " [", "1", ".", "0", " if", " word", " in", " words", " else", " ", "0", ".", "0", " for", " word", " in", " all", "_", "words", "]", "\n", "        ", "doc", "uments", ".", "append", "(", "tuple", "(", "doc", "))", "\n", "    ", "tf", "id", "f", " =", " T", "f", "id", "f", "Vector", "izer", "()", ".", "fit", "(", "doc", "uments", ")", "\n", "    ", "return", " (", "tf", "id", "f", ".", "transform", "(", "doc", "uments", ")", ".", "to", "array", "()", ",", " all", "_", "words", ")", "\n", "\n", "def"], "logprobs": [-3.856095314025879, -0.12759341299533844, -0.1294119656085968, -0.71266108751297, -0.0225977785885334, -0.06008245050907135, -4.567945957183838, -0.011002232320606709, -0.3221508860588074, -0.03914811834692955, -0.655813455581665, -0.007636402267962694, -0.6495598554611206, -0.5342949032783508, -1.6396381855010986, -0.05826874077320099, -0.020488878712058067, -0.0008274468709714711, -0.004688342101871967, -0.00819357018917799, -1.7570221424102783, -1.3517807722091675, -0.8514699935913086, -1.166642427444458, -0.0006208876147866249, -2.9860169887542725, -0.13612398505210876, -0.15859811007976532, -4.5298504119273275e-05, -0.023294828832149506, -0.09810326993465424, -0.056676704436540604, -0.3746028244495392, -0.6362076997756958, -0.28842639923095703, -0.011442393064498901, -0.6482724547386169, -2.539125671319198e-05, -1.6224960088729858, -0.21390530467033386, -8.046303264563903e-05, -0.005561711732298136, -0.11494266986846924, -0.025796381756663322, -0.1942065805196762, -0.7731441259384155, -1.2256109714508057, -1.2251276969909668, -0.13044019043445587, -0.141535222530365, -0.2635522186756134, -0.00034028460504487157, -0.08647439628839493, -0.008713084273040295, -1.6512463092803955, -0.18616555631160736, -0.7847405076026917, -0.364922434091568, -6.353653589030728e-05, -0.03360358253121376, -0.0011998366098850965, -0.00032550760079175234, -0.21244899928569794, -0.001948602613992989, -0.037355147302150726, -0.04622394219040871, -0.20654383301734924, -0.0025634069461375475, -0.022909024730324745, -0.3642174005508423, -3.562126636505127, -0.4624764621257782, -1.3065032958984375, -0.06415807455778122, -1.109324336051941, -2.373413324356079, -0.275845468044281, -0.0019234981155022979, -0.3825865387916565, -0.0003014348621945828, -0.7489445805549622, -0.6591609120368958, -1.142167091369629, -0.0011625682236626744, -0.06387271732091904, -0.006543637719005346, -0.002714879112318158, -0.0002766464895103127, -0.004829052835702896, -0.02025725319981575, -0.6984300017356873, -1.9530093669891357, -1.9855488538742065, -0.0016913408180698752, -1.2329813241958618, -0.976759135723114, -0.3697512745857239, -0.0014356792671605945, -0.48404842615127563, -0.0006692553870379925, -0.14471383392810822, -5.006664650863968e-05, -0.000366263062460348, -0.7708418965339661, -0.5224688649177551, -0.017743779346346855, -0.5685713291168213, -7.10462118149735e-05, -8.22540732769994e-06, -0.5392950177192688, -1.0158076286315918, -0.06804043054580688, -0.7857323288917542, -0.056107934564352036, -0.002339247614145279, -0.044932566583156586, -0.2168753743171692, -5.113947918289341e-05, -0.005179557949304581, -0.0015403084689751267, -0.002262415364384651, -2.0419130325317383, -2.0468835830688477, -0.5831829905509949, -0.0643799751996994, -0.05191713571548462, -0.011071204207837582, -0.0007844470092095435, -0.32569074630737305, -1.1189759969711304, -0.20882336795330048, -3.381281852722168, -0.037714410573244095, -0.0004262015863787383, -0.014756930992007256, -2.7328622341156006, -0.5785308480262756, -0.006216949317604303, -0.0007482351502403617, -2.706014311115723e-05, -3.933898824470816e-06, -0.0011992413783445954, -0.005226756911724806, -0.0007949291029945016, -0.005579849239438772, -8.583032467868179e-06, -4.410734163684538e-06, -0.008858075365424156, -0.002176299225538969, -0.0007612191257067025, -0.00047505536349490285, -0.0004676678800024092, -0.00030012393835932016, -0.22411134839057922, -1.676737904548645, -2.745593786239624, -1.394934058189392, -2.2818782329559326, -1.639606237411499, -0.026482615619897842, -0.6014017462730408, -0.14187052845954895, -0.05863765999674797, -0.008010996505618095, -0.01319262757897377, -0.0016387379728257656, -0.00036864637513644993, -0.05311610549688339, -0.002250283258035779, -0.011145830154418945, -0.0014953156933188438, -0.00018535325943958014, -0.013953513465821743, -0.00018249277491122484, -3.933898824470816e-06, -0.0013246104354038835, -0.008962875232100487, -0.004466913174837828, -0.11138315498828888, -0.004657610785216093, -0.00033849707688204944, -0.000811366830021143, -0.006878743413835764, -1.2615618705749512, -0.0010810013627633452, -0.013813492842018604, -0.0013525871327146888, -0.0018153393175452948, -0.21564096212387085, -1.95762300491333, -0.21172483265399933, -0.0011856677010655403, -0.5422810316085815, -0.0019074357114732265, -2.7418097943154862e-06, -0.00044848397374153137, -5.960462772236497e-07, -4.994744449504651e-05, -7.152531907195225e-06, -0.37971624732017517, -1.85127592086792, -0.0030235787853598595, -0.700316309928894, -0.6708512306213379, -3.349725011503324e-05, -0.010121684521436691, -0.04676298424601555, -0.027636617422103882, -1.1056913137435913, -1.3766119480133057, -0.08022484183311462, -4.100715523236431e-05, -5.960462772236497e-07, -0.004387752152979374, -0.010887740179896355, -0.0047189537435770035, -0.010004376992583275, -8.022463589441031e-05, -0.0027718241326510906, -0.12032420933246613, -0.19916664063930511, -0.006679706275463104, -0.004199139773845673, -0.021896861493587494, -0.023997562006115913, -0.00010513706365600228, -3.814689989667386e-06, -0.35271528363227844, -0.2449893355369568, -0.028572091832756996, -1.3798203468322754], "finish_reason": "stop"}], "metrics": {"energy": 269.2492440757752, "energy_per_token": 1.1655811431851741, "time": 10.309931, "time_per_token": 0.04463173593073593}}
{"outputs": [{"text": "# Remove all URLs from the text documents using regular expressions\n    texts_processed = [re.sub(r'https?://[\\S]+', ' ', text) for text in texts]\n\n    # Create a TF-IDF vectorizer with a lowercase tokenizer and n-gram extraction\n    vectorizer = TfidfVectorizer(tokenizer=str.split, lowercase=True, ngram_range=(1, 3), analyzer='word')\n\n    # Fit the vectorizer on the processed text documents\n    vectorizer.fit(texts_processed)\n\n    # Calculate the TF-IDF scores for each word across all documents\n    tf_idf_scores = vectorizer.fit_transform(texts_processed)\n    feature_names = vectorizer.get_feature_names()\n    return tf_idf_scores.toarray(), feature_names", "tokens": ["#", " Remove", " all", " URLs", " from", " the", " text", " documents", " using", " regular", " expressions", "\n", "    ", "text", "s", "_", "processed", " =", " [", "re", ".", "sub", "(", "r", "'", "https", "?", "://", "[\\", "S", "]+", "'", ",", " '", " '", ",", " text", ")", " for", " text", " in", " texts", "]", "\n", "\n", "    ", "#", " Create", " a", " TF", "-", "ID", "F", " vector", "izer", " with", " a", " lower", "case", " token", "izer", " and", " n", "-", "gram", " extraction", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "token", "izer", "=", "str", ".", "split", ",", " lower", "case", "=", "True", ",", " n", "gram", "_", "range", "=(", "1", ",", " ", "3", ")", ",", " analy", "zer", "='", "word", "')", "\n", "\n", "    ", "#", " Fit", " the", " vector", "izer", " on", " the", " processed", " text", " documents", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "s", "_", "processed", ")", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " word", " across", " all", " documents", "\n", "    ", "tf", "_", "id", "f", "_", "scores", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", "_", "processed", ")", "\n", "    ", "feature", "_", "names", " =", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "\n", "    ", "return", " tf", "_", "id", "f", "_", "scores", ".", "to", "array", "()", ",", " feature", "_", "names", "\n", "\n", "if"], "logprobs": [-1.5304116010665894, -1.4278597831726074, -2.163723945617676, -0.12835103273391724, -0.5339905023574829, -0.18081165850162506, -1.1940290927886963, -0.1992432177066803, -1.9309028387069702, -0.5318683385848999, -0.07022686302661896, -0.26641345024108887, -0.0028998488560318947, -1.0823540687561035, -0.03634382784366608, -1.864866018295288, -3.909369468688965, -0.00856098160147667, -0.31026211380958557, -0.06242275610566139, -8.666139910928905e-05, -0.004618453793227673, -0.025601191446185112, -0.057586316019296646, -0.313717782497406, -0.7543760538101196, -0.0014182995073497295, -0.06685633212327957, -3.192377805709839, -0.2580585777759552, -0.17685584723949432, -0.049232229590415955, -2.2649508537142538e-05, -1.4385286569595337, -0.17761369049549103, -0.00023993951617740095, -0.33609476685523987, -0.06833650916814804, -0.12290996313095093, -0.00011836781777674332, -4.9232225137529895e-05, -0.0003685271949507296, -0.0029671236407011747, -0.0015166220255196095, -0.07547195255756378, -0.00031406714697368443, -0.04611785337328911, -0.6849408745765686, -0.2315019965171814, -2.112244129180908, -0.009402871131896973, -6.329813186312094e-05, -0.00010477947944309562, -0.03695634752511978, -0.0025038341991603374, -1.6194850206375122, -1.6577770709991455, -1.8543156385421753, -0.2837405204772949, -0.803070068359375, -0.12227659672498703, -0.5604744553565979, -4.115161895751953, -0.9363980293273926, -0.699516236782074, -0.995941162109375, -0.2561686635017395, -0.00023147765023168176, -0.20356114208698273, -0.0003912875254172832, -0.0004514628672040999, -0.0006100462633185089, -1.5497195136049413e-06, -4.005352093372494e-05, -5.006777428206988e-06, -9.059865078597795e-06, -2.50339189733495e-06, -0.005329567473381758, -0.9841206669807434, -0.32070204615592957, -0.017173394560813904, -1.4869716167449951, -0.0021946171764284372, -1.5563852787017822, -0.005456672515720129, -1.832052230834961, -3.4450891689630225e-05, -0.00034957972820848227, -0.004984334111213684, -0.10348480194807053, -0.2109074592590332, -0.3112064003944397, -0.0001408954558428377, -0.003519295481964946, -0.009044274687767029, -0.06951174139976501, -0.00029774048016406596, -0.015075675211846828, -1.4455842971801758, -2.1795032024383545, -0.0011745942756533623, -1.2306443452835083, -0.00013815402053296566, -0.06413359194993973, -0.5613124966621399, -0.2065015435218811, -0.0030537659768015146, -0.06968175619840622, -0.00024768622824922204, -0.017190268263220787, -1.152479648590088, -0.3551373779773712, -0.028706585988402367, -0.0012412709183990955, -0.2759443521499634, -0.03961719945073128, -0.3813401460647583, -0.25199806690216064, -0.18109776079654694, -0.39014407992362976, -0.00012540031457319856, -0.2770591378211975, -0.12492465227842331, -0.003177952254191041, -4.684815212385729e-05, -0.23979875445365906, -0.0016288596671074629, -4.23184028477408e-05, -0.004965710919350386, -1.9311717551317997e-05, -0.00022909401741344482, -0.0015242397785186768, -0.02155100181698799, -0.00022516099852509797, -0.01033690944314003, -0.7179637551307678, -0.35914719104766846, -0.04468795657157898, -0.0013468727702274919, -3.266281055402942e-05, -0.0002791491860989481, -0.038790054619312286, -0.06276405602693558, -0.22186098992824554, -0.40133488178253174, -1.6393117904663086, -0.09749411046504974, -0.2155800461769104, -0.1838126927614212, -0.00035315475543029606, -0.8271557092666626, -1.1180288791656494, -0.05606386438012123, -0.006814809516072273, -0.41314253211021423, -0.22646625339984894, -0.020440876483917236, -0.08282078802585602, -9.047575440490618e-05, -2.372236667724792e-05, -0.40756893157958984, -0.001598986447788775, -0.0001161031104857102, -0.01670808345079422, -0.001670038211159408, -7.283422019099817e-05, -0.02935204654932022, -6.437280717364047e-06, -0.0009385710000060499, -0.3975415825843811, -2.865002155303955, -2.521878242492676, -0.0013930626446381211, -0.20161408185958862, -0.01008651778101921, -0.043069224804639816, -0.00014244495832826942, -7.629365427419543e-06, -0.004514620639383793, -5.960462772236497e-07, -0.00027771908207796514, -8.344646857949556e-07, -0.004015004262328148, -0.3010566830635071, -0.01550219114869833, -2.863030433654785, -0.7114918231964111, -0.4022863209247589, -2.13382354559144e-05, -2.264974000354414e-06, -1.311301275563892e-06, -2.5987286790041253e-05, -2.3841574147809297e-05, -2.5352749824523926, -0.26163530349731445, -0.039965685456991196, -0.0036184806376695633, -0.004529336001724005, -0.038772739470005035, -6.139089964563027e-05, -7.152555099310121e-07, -0.8458203673362732, -0.014148051850497723, -0.8578652739524841], "finish_reason": "stop"}], "metrics": {"energy": 238.92597912406922, "energy_per_token": 1.1712057800199471, "time": 9.045548, "time_per_token": 0.04434092156862745}}
{"outputs": [{"text": "# Remove URLs from texts\n    for text in texts:\n        text = re.sub(r'http\\S+', '', text)\n\n    # Create a TfidfVectorizer object and fit it on the processed texts\n    vectorizer = TfidfVectorizer(stop_words='english')\n    vectorizer.fit(texts)\n\n    # Convert the texts to a numpy array\n    texts = np.asarray(texts)\n\n    # Calculate the TF-IDF scores for each word across all documents\n    scores = vectorizer.fit_transform(texts).toarray()\n\n    # Split the words and features into separate lists\n    words = [word for word in vectorizer.get_feature_names()]\n\n    # Round the scores to 8 decimal places\n    scores = np.around(scores, decimals=8)\n\n    # Return the scores as a list of tuples and the list of unique words\n    return scores, words", "tokens": ["#", " Remove", " URLs", " from", " texts", "\n", "    ", "for", " text", " in", " texts", ":", "\n", "        ", "text", " =", " re", ".", "sub", "(", "r", "'", "http", "\\", "S", "+'", ",", " ''", ",", " text", ")", "\n", "\n", "    ", "#", " Create", " a", " T", "f", "id", "f", "Vector", "izer", " object", " and", " fit", " it", " on", " the", " processed", " texts", "\n", "    ", "vector", "izer", " =", " T", "f", "id", "f", "Vector", "izer", "(", "stop", "_", "words", "='", "eng", "lish", "')", "\n", "    ", "vector", "izer", ".", "fit", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Convert", " the", " texts", " to", " a", " numpy", " array", "\n", "    ", "text", "s", " =", " np", ".", "as", "array", "(", "text", "s", ")", "\n", "\n", "    ", "#", " Calculate", " the", " TF", "-", "ID", "F", " scores", " for", " each", " word", " across", " all", " documents", "\n", "    ", "scores", " =", " vector", "izer", ".", "fit", "_", "transform", "(", "text", "s", ")", ".", "to", "array", "()", "\n", "\n", "    ", "#", " Split", " the", " words", " and", " features", " into", " separate", " lists", "\n", "    ", "words", " =", " [", "word", " for", " word", " in", " vector", "izer", ".", "get", "_", "feature", "_", "names", "()", "]", "\n", "\n", "    ", "#", " Round", " the", " scores", " to", " ", "8", " decimal", " places", "\n", "    ", "scores", " =", " np", ".", "around", "(", "scores", ",", " dec", "imals", "=", "8", ")", "\n", "\n", "    ", "#", " Return", " the", " scores", " as", " a", " list", " of", " t", "up", "les", " and", " the", " list", " of", " unique", " words", "\n", "    ", "return", " scores", ",", " words", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5304116010665894, -1.4278597831726074, -0.5512264966964722, -0.3025573194026947, -2.4189486503601074, -0.3802708387374878, -0.0026963327545672655, -2.4371118545532227, -2.7405498027801514, -0.05096927285194397, -0.014026396907866001, -0.005934357643127441, -0.0023240242153406143, -0.001129227806814015, -0.1477229744195938, -0.09409309178590775, -0.055045463144779205, -3.611976353568025e-05, -0.008560508489608765, -0.043931398540735245, -0.059818048030138016, -0.3246554434299469, -0.8038097620010376, -0.3642997741699219, -0.00972438883036375, -0.6373787522315979, -1.6927575416048057e-05, -0.1856580525636673, -2.6464111215318553e-05, -0.001327705685980618, -0.18342287838459015, -0.0694853886961937, -0.11919591575860977, -0.0012369846226647496, -0.1574094444513321, -0.9415075778961182, -0.6867825388908386, -0.6409193277359009, -0.00024196557933464646, -0.03936726972460747, -0.0005852655158378184, -0.008885723538696766, -0.00023993951617740095, -0.5333704948425293, -3.5437536239624023, -0.11681915074586868, -0.09516660124063492, -0.8990784287452698, -0.2619938850402832, -1.9532644748687744, -0.11696476489305496, -0.09079684317111969, -0.0005305789527483284, -0.20420251786708832, -0.0010587330907583237, -0.00042512916843406856, -0.000448841426987201, -2.7418097943154862e-06, -0.0002946419408544898, -4.768370445162873e-07, -7.033323527139146e-06, -5.578839045483619e-05, -0.7709209322929382, -0.667140007019043, -7.867782187531702e-06, -0.0003698380314745009, -0.07040365040302277, -0.003509317059069872, -2.038458114839159e-05, -0.23150616884231567, -0.016463035717606544, -0.00938220415264368, -0.47794386744499207, -0.2556912302970886, -0.003270160872489214, -0.0010600429959595203, -0.5179586410522461, -0.0020154656376689672, -9.297892393078655e-05, -0.000758955895435065, -0.007818334735929966, -0.10116279870271683, -0.00018463814922142774, -0.010239805094897747, -3.339501142501831, -0.8192349672317505, -0.5031082630157471, -0.26985782384872437, -0.2672201991081238, -3.4229397773742676, -0.1354844719171524, -1.1331617832183838, -0.00030870441696606576, -1.103679895401001, -0.14311158657073975, -0.882874071598053, -0.2961014211177826, -0.00047636605449952185, -1.5369635820388794, -0.03352634981274605, -0.1534542590379715, -0.34995779395103455, -0.0001472126314183697, -0.03665611147880554, -0.008934875018894672, -0.03856079652905464, -0.0003026265767402947, -0.009673386812210083, -0.41587233543395996, -0.6247950196266174, -0.10213015228509903, -0.004346804227679968, -9.512448741588742e-05, -0.0005057962844148278, -0.05812039226293564, -0.2597312927246094, -0.1638793796300888, -0.528488278388977, -1.9572181701660156, -0.19422416388988495, -0.17116276919841766, -0.14187994599342346, -0.0003044141922146082, -0.6472499370574951, -0.026952220126986504, -0.05788686126470566, -3.8980677345534787e-05, -1.811964830267243e-05, -0.8343086838722229, -0.004446262959390879, -0.00013374387344811112, -0.0011865011183544993, -0.002054129960015416, -0.00011276562872808427, -0.006239813752472401, -0.3012745678424835, -0.45432645082473755, -0.007733997423201799, -0.0005559567362070084, -0.05752025544643402, -0.08694452792406082, -0.00025233422638848424, -0.15944482386112213, -3.6493191719055176, -0.3243061900138855, -1.117497444152832, -2.075918436050415, -3.4680562019348145, -0.38884103298187256, -0.6074798703193665, -0.0665244534611702, -0.1039796695113182, -0.00030119650182314217, -0.2849571108818054, -0.0420701839029789, -2.9290902614593506, -0.5074005126953125, -0.27862459421157837, -0.46585991978645325, -0.5885629057884216, -0.01414499618113041, -8.34461570775602e-06, -3.6477376852417365e-05, -0.0719711109995842, -2.0265558760002023e-06, -0.0010486110113561153, -5.960462772236497e-07, -0.004720140248537064, -0.6424887776374817, -0.0028986602555960417, -0.006898277904838324, -2.196207046508789, -0.00010859376925509423, -0.9029486179351807, -1.4215165376663208, -0.2562218904495239, -0.25211378931999207, -0.02863488160073757, -0.07237670570611954, -0.004255407024174929, -0.028029179200530052, -0.0020905323326587677, -0.5710718631744385, -0.00022218143567442894, -0.20885848999023438, -0.014113261364400387, -0.30447638034820557, -0.0005993238883093, -0.6574037075042725, -0.0005006728461012244, -0.0013984196120873094, -0.0010387268848717213, -0.48195576667785645, -9.142934868577868e-05, -0.001999404514208436, -0.007133609149605036, -0.0007096394547261298, -0.012476960197091103, -0.014647802338004112, -8.570780482841656e-05, -0.6820645332336426, -0.4078904688358307, -0.21160462498664856, -0.6884904503822327, -0.9786646366119385, -0.04235760495066643, -2.6994001865386963, -0.022886887192726135, -0.015212701633572578, -0.00011991735664196312, -2.062299427052494e-05, -0.4038729667663574, -0.44391316175460815, -2.0952320098876953, -0.0006540066679008305, -1.9305131435394287, -0.126919224858284, -0.12540388107299805, -0.0006158839096315205, -0.009167955256998539, -0.5857927203178406, -0.01927093416452408, -0.01730310544371605, -1.1264269351959229, -4.529942543740617e-06, -1.6689286894688848e-06, -6.210611172718927e-05, -0.0002961912250611931, -0.08218193054199219], "finish_reason": "stop"}], "metrics": {"energy": 232.7927905750275, "energy_per_token": 1.0165624042577621, "time": 10.092389, "time_per_token": 0.04407156768558952}}
