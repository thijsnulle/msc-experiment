{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.0738329067826271, -0.016681354492902756, -0.07386668026447296, -0.0694950595498085], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.RequestException:", "tokens": [" requests", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -1.9152494668960571, -1.7165990357170813e-05, -0.7825430035591125, -0.014984313398599625], "finish_reason": "stop"}, {"text": "\"Error:\", e)", "tokens": ["\"", "Error", ":\"", ",", " e", ")", "\n"], "logprobs": [-2.338947057723999, -0.6513981223106384, -0.4811410903930664, -0.001341753639280796, -0.34052953124046326, -0.009015449322760105, -0.011156911961734295], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005276002921164036, -0.14157630503177643], "finish_reason": "stop"}], "metrics": {"energy": 648.0108666419981, "energy_per_token": 7.200120740466645, "time": 19.028152, "time_per_token": 0.21142391111111108}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " (requests.HTTPError, requests.ConnectionError, requests.Timeout, LookupError, requests.TooManyRedirects) as e:", "tokens": [" (", "requests", ".", "HTTP", "Error", ",", " requests", ".", "Connection", "Error", ",", " requests", ".", "Timeout", ",", " Look", "up", "Error", ",", " requests", ".", "Too", "Many", "Red", "irect", "s", ")", " as", " e", ":", "\n"], "logprobs": [-1.273903250694275, -0.3446294665336609, -2.169585604860913e-05, -2.2788267135620117, -1.9073468138230965e-06, -0.00024768622824922204, -0.007599609903991222, -4.768360213347478e-06, -0.20385052263736725, -1.1920928244535389e-07, -0.10027506202459335, -0.04402733966708183, -1.811964830267243e-05, -0.023523421958088875, -0.8467593193054199, -3.379161834716797, -3.4570634852570947e-06, -0.00018654513405635953, -0.8016880750656128, -0.7214649319648743, -0.0001515035255579278, -1.4576493501663208, -0.00033778208307921886, -1.8715683836489916e-05, -1.2755313036905136e-05, -1.311301275563892e-06, -0.9180176258087158, -0.0008550802012905478, -0.161590576171875, -0.0006160030607134104, -0.0034350694622844458], "finish_reason": "stop"}, {"text": "f\"Error fetching or decoding: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " decoding", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -2.877607583999634, -3.4577040672302246, -0.011724256910383701, -0.47923848032951355, -0.020987454801797867, -0.005580797791481018, -0.007193616591393948], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0005447572330012918, -2.5394678115844727, -5.674201020156033e-05, -3.2186455882765586e-06, -2.861018856492592e-06, -1.764281842042692e-05, -0.08956147730350494], "finish_reason": "stop"}], "metrics": {"energy": 535.5968337039945, "energy_per_token": 4.250768521460274, "time": 14.520662, "time_per_token": 0.11524334920634921}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise exception for non-2xx response codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " exception", " for", " non", "-", "2", "xx", " response", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -2.123333692550659, -0.1367354393005371, -0.3460555374622345, -0.0005241450853645802, -0.0947689563035965, -2.5869357585906982, -2.975013017654419, -0.2826021611690521, -0.01659928448498249], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -0.3270971477031708, -0.00189779803622514, -0.010228005237877369], "finish_reason": "stop"}, {"text": "f\"Error processing task: {str(e)}\")", "tokens": ["f", "\"", "Error", " processing", " task", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -3.807676315307617, -3.3392744064331055, -0.7720161080360413, -0.01192087959498167, -1.7387378215789795, -3.71926071238704e-05, -0.00010656742961145937, -0.0037681306712329388, -0.005407942924648523, -0.013227920979261398, -0.017173629254102707], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 498.09635569953934, "energy_per_token": 4.369266278066134, "time": 13.474959, "time_per_token": 0.1182013947368421}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an HTTPError if the response is an error", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " HTTP", "Error", " if", " the", " response", " is", " an", " error", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -2.520129442214966, -0.07584607601165771, -0.12885816395282745, -0.4890713691711426, -0.6714037656784058, -1.3579909801483154, -0.30254366993904114, -0.14399050176143646, -0.2139618992805481], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.9060707688331604, -0.00634844321757555], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing webpage: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -2.2766964435577393, -0.13878174126148224, -0.001327943871729076, -0.5051651000976562, -0.00944585632532835, -0.0013180625392124057, -0.0038267967756837606], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 490.36310995101934, "energy_per_token": 4.339496548239109, "time": 13.440297, "time_per_token": 0.1189406814159292}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(", "tokens": [" response", ".", "content", ".", "decode", "(", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -2.9977176189422607], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28324276208877563, -0.015397956594824791, -3.576272320060525e-06, -0.0002653246629051864, -0.0014434166951104999, -0.001368777477182448, -5.8412379075889476e-06, -4.172316494077677e-06, -5.960462772236497e-07, -0.009919043630361557, -0.021582268178462982, -0.00023326536756940186, -0.001301871263422072, -3.755022044060752e-05, -1.537788011773955e-05, -0.010711083188652992], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0017307315720245242, -1.5497195136049413e-06, -3.576278118089249e-07, -4.7444173105759546e-05, -0.0014379409840330482, 0.0, -3.576278118089249e-07, 0.0, -0.0007940953364595771, -0.0023431722074747086, -0.02783001959323883, -0.0038397409953176975], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0013606823049485683, -0.005660338792949915], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0015357855008915067, -0.0621214434504509], "finish_reason": "stop"}, {"text": " (ConnectionError, HTTPError, UnicodeDecodeError):", "tokens": [" (", "Connection", "Error", ",", " HTTP", "Error", ",", " Un", "icode", "Dec", "ode", "Error", "):", "\n"], "logprobs": [-1.2617566585540771, -2.8907554149627686, -0.002613345393911004, -0.00016223068814724684, -0.9303142428398132, -0.0011451836908236146, -0.014703718945384026, -0.505627453327179, -0.00028355870745144784, -0.04096854478120804, -1.2636104656849056e-05, -1.6689286894688848e-06, -1.032606840133667, -0.003073850879445672], "finish_reason": "stop"}, {"text": "f\"Exception in function '{task_func.__name__}': {e}\")", "tokens": ["f", "\"", "Exception", " in", " function", " '", "{", "task", "_", "func", ".", "__", "name", "__", "}", "':", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1633394956588745, -0.007355513051152229, -3.1018226146698, -2.457371473312378, -2.9812655448913574, -1.1043798923492432, -0.8359560966491699, -0.05877019464969635, -0.0007333449902944267, -0.0009651293512433767, -0.008342182263731956, -0.0002992897352669388, -0.0020165364257991314, -2.5748875486897305e-05, -0.05655786395072937, -0.011750530451536179, -0.06537149846553802, -0.4575539529323578, -0.017306150868535042, -0.024041086435317993, -0.014813547022640705], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.00047231485950760543, -0.16267570853233337], "finish_reason": "stop"}], "metrics": {"energy": 487.10502849769614, "energy_per_token": 4.510231745349039, "time": 13.037982, "time_per_token": 0.12072205555555555}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -0.3270971477031708, -0.00189779803622514, -0.010228005237877369], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -0.23266713321208954, -0.008724547922611237, -0.28685706853866577, -0.0014828173443675041, -0.4483448565006256, -0.009177759289741516, -0.0015666127437725663, -0.002684087259694934], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 457.0055535860063, "energy_per_token": 4.436947122194236, "time": 12.825188, "time_per_token": 0.12451638834951458}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -0.15590985119342804, -0.09043699502944946, -0.5118719935417175, -0.00010322991875000298, -0.04395809397101402, -0.12471610307693481, -1.2755313036905136e-05, -0.09867620468139648, -0.009932144545018673, -0.04345269501209259], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None  # Handle other unsuccessful HTTP statuses as needed", "tokens": [" None", "  ", "#", " Handle", " other", " unsuccessful", " HTTP", " stat", "uses", " as", " needed", "\n"], "logprobs": [-0.0016356435371562839, -2.820756435394287, -0.0003070359816774726, -1.4683862924575806, -2.1207752227783203, -2.9116227626800537, -0.1424540877342224, -3.1846914291381836, -0.00026794656878337264, -1.9100040197372437, -0.19582317769527435, -0.039861563593149185], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -0.3270971477031708, -0.00189779803622514, -0.010228005237877369], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {url}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "url", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -0.23266713321208954, -0.008724547922611237, -0.28685706853866577, -0.0014828173443675041, -3.0491483211517334, -1.2787425518035889, -0.0546845868229866, -0.0037338081747293472], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 521.8655413475036, "energy_per_token": 4.109177490925226, "time": 14.512561, "time_per_token": 0.11427213385826772}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -0.15590985119342804, -0.09043699502944946, -0.5118719935417175, -0.00010322991875000298, -0.04395809397101402, -0.12471610307693481, -1.2755313036905136e-05, -0.09867620468139648, -0.009932144545018673, -0.04345269501209259], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " (requests.RequestException, ValueError, LookupError, UnicodeDecodeError) as e:", "tokens": [" (", "requests", ".", "Request", "Exception", ",", " Value", "Error", ",", " Look", "up", "Error", ",", " Un", "icode", "Dec", "ode", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-1.273903250694275, -0.3446294665336609, -2.169585604860913e-05, -0.6983403563499451, -5.125986263010418e-06, -0.0036251323763281107, -1.8757184743881226, -2.3841855067985307e-07, -0.648084819316864, -0.5284005403518677, -3.2186455882765586e-06, -1.6093124941107817e-05, -1.403494119644165, -0.2331957072019577, -4.327203714638017e-05, -0.05128438398241997, -2.9802276912960224e-06, 0.0, -0.29050490260124207, -0.00035363141796551645, -0.18391792476177216, -0.00021371940965764225, -0.0023538758978247643], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -0.23266713321208954, -0.008724547922611237, -0.28685706853866577, -0.0014828173443675041, -0.4483448565006256, -0.009177759289741516, -0.0015666127437725663, -0.002684087259694934], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 547.7454824628828, "energy_per_token": 4.246089011340177, "time": 14.919423, "time_per_token": 0.11565444186046511}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raises an HTTPError for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ises", " an", " HTTP", "Error", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -2.627469778060913, -0.15123797953128815, -0.9972018003463745, -0.020509783178567886, -1.8430651426315308, -0.3045934736728668, -0.0007060657371766865, -0.008106071501970291, -0.3220648467540741, -4.088794958079234e-05, -0.11416642367839813, -0.07029598206281662, -0.05842696130275726], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.4251775741577148, -0.03720228374004364, -6.437280717364047e-06, -0.0001419681793777272, -0.0015873225638642907, -0.0013740155845880508, -8.702239938429557e-06, -4.887569048150908e-06, -8.344646857949556e-07, -0.012460007332265377, -0.005944667384028435, -0.0002227773511549458, -0.0013169910525903106, -6.472854875028133e-05, -4.0411134250462055e-05, -0.013270506635308266], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0017778557958081365, -1.5497195136049413e-06, -2.3841855067985307e-07, -4.732496745418757e-05, -0.0012823462020605803, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008298290777020156, -0.002342220861464739, -0.025610603392124176, -0.0043909563682973385], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0015115038258954883, -0.005118717905133963], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0015993434935808182, -0.07161851227283478], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-1.083456039428711, -2.5357961654663086], "finish_reason": "stop"}, {"text": "f\"Error: {e}\")", "tokens": ["f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.16159352660179138, -0.005889798980206251, -0.3922175168991089, -0.9264050722122192, -0.07669404149055481, -0.3538094162940979, -0.03400279954075813, -0.002746740123257041, -0.011922410689294338], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0004857790481764823, -2.497101306915283, -6.639736966462806e-05, -4.768360213347478e-06, -2.861018856492592e-06, -1.3589766240329482e-05, -0.08386918157339096], "finish_reason": "stop"}], "metrics": {"energy": 503.5477034778595, "energy_per_token": 4.662478735906107, "time": 13.459519, "time_per_token": 0.12462517592592592}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url, timeout=30)", "tokens": [" requests", ".", "get", "(", "url", ",", " timeout", "=", "3", "0", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -2.4174561500549316, -0.2878044843673706, -0.007897225208580494, -2.063298225402832, -0.284095823764801, -0.12058122456073761, -0.07686880230903625], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.005507533438503742, -1.1920928244535389e-07, -4.768370445162873e-07, -3.576278118089249e-07, -9.536738616588991e-07, -0.00028046013903804123, -0.3049941658973694], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.041751470416784286, -0.004185250960290432, -0.11672771722078323, -8.093983342405409e-05, -1.4305104514278355e-06, -0.0194621030241251, -0.009528987109661102, -0.000550357042811811, -3.3378546504536644e-06, -3.4450891689630225e-05, -0.007452188525348902, -0.007291846442967653], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0020666210912168026, -4.768360213347478e-06, -0.0002485204895492643, -0.001785828499123454, -2.0861407392658293e-05, -0.001450439915060997, -0.06047146022319794, -9.179073458653875e-06, -2.622600959512056e-06, -0.2465992569923401, -0.030676402151584625], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.3096708655357361, -0.017108358442783356, -3.099436753473128e-06, -0.0003629264247138053, -0.0012827033642679453, -0.0015793481143191457, -4.6491513785440475e-06, -2.7418097943154862e-06, -5.960462772236497e-07, -0.011324061080813408, -0.019680937752127647, -0.0002834395272657275, -0.0013594918418675661, -4.649054244509898e-05, -1.7523612768854946e-05, -0.0076905833557248116], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0019094583112746477, -1.311301275563892e-06, -2.3841855067985307e-07, -4.434487345861271e-05, -0.0013473490253090858, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0006575806182809174, -0.0023328252136707306, -0.0334017239511013, -0.004258492961525917], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0012478192802518606, -0.005673733074218035], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.001956336200237274, -0.07499528676271439], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.5728135704994202, -5.817244164063595e-05, -0.12686799466609955, 0.0, -0.0006202919175848365, -0.13793645799160004, -2.861018856492592e-06, -0.7668011784553528, -0.006970493122935295], "finish_reason": "stop"}, {"text": "\"Error:\", str(e))", "tokens": ["\"", "Error", ":\"", ",", " str", "(", "e", "))", "\n"], "logprobs": [-2.51094126701355, -0.6239297986030579, -0.4285256266593933, -0.0014997198013588786, -1.1639814376831055, -4.255681051290594e-05, -0.00019274283840786666, -0.00983157753944397, -0.009222171269357204], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005206898204050958, -0.1446145921945572], "finish_reason": "stop"}], "metrics": {"energy": 479.1146507616038, "energy_per_token": 4.7911465076160376, "time": 13.67603, "time_per_token": 0.1367603}}
{"outputs": [{"text": " not url:  # Check if the URL is empty or None", "tokens": [" not", " url", ":", "  ", "#", " Check", " if", " the", " URL", " is", " empty", " or", " None", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -3.0447378158569336, -0.0010645681759342551, -0.7169280052185059, -0.1729714572429657, -0.09953600913286209, -0.06353089958429337, -0.009673151187598705, -0.454759418964386, -0.06041669845581055, -0.004702223930507898, -0.04799825698137283], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -0.15590985119342804, -0.09043699502944946, -0.5118719935417175, -0.00010322991875000298, -0.04395809397101402, -0.12471610307693481, -1.2755313036905136e-05, -0.09867620468139648, -0.009932144545018673, -0.04345269501209259], "finish_reason": "stop"}, {"text": " response.encoding == 'ISO-8859-1':", "tokens": [" response", ".", "encoding", " ==", " '", "ISO", "-", "8", "8", "5", "9", "-", "1", "':", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -2.814074993133545, -0.2789548337459564, -1.691978096961975, -0.12273315340280533, -0.00012885693286079913, -3.099436753473128e-06, -1.1920928244535389e-07, -5.960462772236497e-07, -2.7179348762729205e-05, -2.8371408916427754e-05, -0.00036197309964336455, -0.03526128828525543, -0.0218940619379282], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0023118930403143167, -4.6491513785440475e-06, -0.0003761537664104253, -0.002085417043417692, -2.13382354559144e-05, -0.0015244778478518128, -0.0731712207198143, -7.510157047363464e-06, -2.861018856492592e-06, -0.2374480962753296, -0.02771013230085373], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.3563879430294037, -0.02302890457212925, -3.099436753473128e-06, -0.0004247716860845685, -0.0013378250878304243, -0.001476865611039102, -7.271740287251305e-06, -2.622600959512056e-06, -7.152555099310121e-07, -0.010393657721579075, -0.017035113647580147, -0.00035172473872080445, -0.0011762612266466022, -4.160317621426657e-05, -1.8596476365928538e-05, -0.006634707562625408], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0016637305961921811, -1.5497195136049413e-06, -2.3841855067985307e-07, -4.672895011026412e-05, -0.0010352734243497252, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.000724887300748378, -0.0026702960021793842, -0.03061293065547943, -0.004125774838030338], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0013181816320866346, -0.006216119974851608], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0014991246862336993, -0.08348478376865387], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.5985597968101501, -4.815939246327616e-05, -0.19435402750968933, 0.0, -0.0006048041977919638, -0.12377563118934631, -3.099436753473128e-06, -0.8065130710601807, -0.007316934876143932], "finish_reason": "stop"}, {"text": "f\"Error: {str(e)}\")", "tokens": ["f", "\"", "Error", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.16349276900291443, -0.007850034162402153, -0.4026455581188202, -0.9282470941543579, -0.051357202231884, -1.3489336967468262, -1.966933996300213e-05, -6.48477507638745e-05, -0.0028969962149858475, -0.009675158187747002, -0.003943643998354673, -0.010678884573280811], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.000608854868914932, -0.12656426429748535], "finish_reason": "stop"}], "metrics": {"energy": 603.3539863815307, "energy_per_token": 4.826831891052246, "time": 16.186205, "time_per_token": 0.12948964000000002}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-2.5703110694885254, -0.1428031474351883, -0.07304124534130096, -0.00040082051418721676, -0.004122450482100248], "finish_reason": "stop"}, {"text": "f\"Error: {e}\")", "tokens": ["f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.16737021505832672, -0.007695906795561314, -0.3774270713329315, -0.9890414476394653, -0.060578059405088425, -0.33904799818992615, -0.03638061136007309, -0.0025399825535714626, -0.014957889914512634], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0005439232336357236, -2.539217710494995, -5.1616290875244886e-05, -3.933898824470816e-06, -3.099436753473128e-06, -1.5735502529423684e-05, -0.10195932537317276], "finish_reason": "stop"}], "metrics": {"energy": 449.74042771339396, "energy_per_token": 4.684796122014521, "time": 12.405268, "time_per_token": 0.12922154166666666}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " (requests.exceptions.HTTPError, requests.exceptions.ConnectionError, requests.exceptions.Timeout):", "tokens": [" (", "requests", ".", "except", "ions", ".", "HTTP", "Error", ",", " requests", ".", "except", "ions", ".", "Connection", "Error", ",", " requests", ".", "except", "ions", ".", "Timeout", "):", "\n"], "logprobs": [-1.273903250694275, -0.3446294665336609, -2.169585604860913e-05, -1.4293241500854492, 0.0, -1.8954096958623268e-05, -1.9976487159729004, -3.814689989667386e-06, -0.0005996812833473086, -0.028562244027853012, -9.65590606938349e-06, -0.0008850948070175946, 0.0, -5.125986263010418e-06, -1.352920651435852, -2.3841855067985307e-07, -0.3919820785522461, -0.25475946068763733, -4.434487345861271e-05, -0.00030071981018409133, -4.768370445162873e-07, -5.209310256759636e-05, -0.1793150007724762, -0.7369870543479919, -0.002451511798426509], "finish_reason": "stop"}, {"text": "\"Error:\", str(e))", "tokens": ["\"", "Error", ":\"", ",", " str", "(", "e", "))", "\n"], "logprobs": [-2.338947057723999, -0.6513981223106384, -0.4811410903930664, -0.001341753639280796, -1.314719319343567, -3.8265450712060556e-05, -0.00016807096835691482, -0.01102475170046091, -0.010803189128637314], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005276002921164036, -0.14157630503177643], "finish_reason": "stop"}], "metrics": {"energy": 486.55135115242007, "energy_per_token": 4.383345505877658, "time": 13.448918, "time_per_token": 0.12116142342342343}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-2.5703110694885254, -0.1428031474351883, -0.07304124534130096, -0.00040082051418721676, -0.004122450482100248], "finish_reason": "stop"}, {"text": "f\"Error occurred while fetching or parsing the webpage: {e}\")", "tokens": ["f", "\"", "Error", " occurred", " while", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.16737021505832672, -0.007695906795561314, -0.3774270713329315, -2.3678274154663086, -1.231762170791626, -0.3917320966720581, -0.00022933237778488547, -0.36417704820632935, -0.04823842644691467, -0.4611172378063202, -0.014919133856892586, -0.12825362384319305, -0.0015138844028115273, -0.4522760510444641, -0.010398967191576958, -0.0011835244949907064, -0.0010214593494310975], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005439232336357236, -0.1443735808134079], "finish_reason": "stop"}], "metrics": {"energy": 464.6951696910858, "energy_per_token": 4.693890602940261, "time": 11.992711, "time_per_token": 0.12113849494949495}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Check for HTTP errors", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Check", " for", " HTTP", " errors", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.9390256404876709, -0.12507562339305878, -0.5417802929878235, -0.006415367592126131, -0.10761483013629913], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as re:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " re", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -3.1710798740386963, -0.10417700558900833, -0.0056091295555233955], "finish_reason": "stop"}, {"text": "f\"An error occurred: {e}\")", "tokens": ["f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -1.8144309520721436, -0.0315760038793087, -0.006524925120174885, -0.641523003578186, -0.0005708495154976845, -0.6709674596786499, -0.013384726829826832, -0.0011039836099371314, -0.004017259925603867], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005124686285853386, -0.15311850607395172], "finish_reason": "stop"}], "metrics": {"energy": 511.6589800157548, "energy_per_token": 4.872942666816712, "time": 13.869282, "time_per_token": 0.1320884}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding, errors='ignore')", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ",", " errors", "='", "ignore", "')", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -1.4345027208328247, -0.22882415354251862, -0.8387036919593811, -0.5507165789604187, -0.0002683041093405336, -0.03325044736266136], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as re:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " re", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -3.1710798740386963, -0.10417700558900833, -0.0056091295555233955], "finish_reason": "stop"}, {"text": "f\"Error in task_func: {str(e)}\")", "tokens": ["f", "\"", "Error", " in", " task", "_", "func", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -2.312488555908203, -0.4868689477443695, -0.053655512630939484, -0.013847000896930695, -0.1991407573223114, -0.008172523230314255, -1.0379655361175537, -3.349725011503324e-05, -0.00010859376925509423, -0.002047943649813533, -0.0038259655702859163, -0.004980063997209072, -0.018773840740323067], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 477.91585015296926, "energy_per_token": 4.425146760675641, "time": 13.039804, "time_per_token": 0.12073892592592593}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Check if the request was successful", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Check", " if", " the", " request", " was", " successful", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.9390256404876709, -2.7051384449005127, -0.0909188762307167, -0.755917489528656, -0.06712445616722107, -0.008214734494686127, -0.7761622071266174], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding, errors=\"replace\")", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ",", " errors", "=", "\"", "replace", "\"", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -1.4345027208328247, -0.22882415354251862, -0.5672536492347717, -0.00022599527437705547, -1.236865758895874, -1.680836794548668e-05, -0.0003474347176961601, -0.025937754660844803], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.4251775741577148, -0.03720228374004364, -6.437280717364047e-06, -0.0001419681793777272, -0.0015873225638642907, -0.0013740155845880508, -8.702239938429557e-06, -4.887569048150908e-06, -8.344646857949556e-07, -0.012460007332265377, -0.005944667384028435, -0.0002227773511549458, -0.0013169910525903106, -6.472854875028133e-05, -4.0411134250462055e-05, -0.013270506635308266], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0017778557958081365, -1.5497195136049413e-06, -2.3841855067985307e-07, -4.732496745418757e-05, -0.0012823462020605803, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008298290777020156, -0.002342220861464739, -0.025610603392124176, -0.0043909563682973385], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0015115038258954883, -0.005118717905133963], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0015993434935808182, -0.07161851227283478], "finish_reason": "stop"}, {"text": " (requests.RequestException, UnicodeDecodeError):", "tokens": [" (", "requests", ".", "Request", "Exception", ",", " Un", "icode", "Dec", "ode", "Error", "):", "\n"], "logprobs": [-1.083456039428711, -0.3731851577758789, -1.811964830267243e-05, -0.3932346999645233, -6.6756979322235566e-06, -0.003270873799920082, -0.5875345468521118, -2.3483953555114567e-05, -0.020151760429143906, -2.3364747903542593e-05, -8.344646857949556e-07, -0.6392573118209839, -0.005525791086256504], "finish_reason": "stop"}, {"text": "f\"Error: {e}\")", "tokens": ["f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.16159352660179138, -0.005889798980206251, -0.3922175168991089, -0.9264050722122192, -0.07669404149055481, -0.3538094162940979, -0.03400279954075813, -0.002746740123257041, -0.011922410689294338], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0004857790481764823, -0.13819937407970428], "finish_reason": "stop"}], "metrics": {"energy": 512.6567721614838, "energy_per_token": 4.536785594349414, "time": 13.660473, "time_per_token": 0.12088914159292036}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding, errors='ignore')", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ",", " errors", "='", "ignore", "')", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -1.4345027208328247, -0.22882415354251862, -0.8387036919593811, -0.5507165789604187, -0.0002683041093405336, -0.03325044736266136], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as request_error:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " request", "_", "error", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -2.209665536880493, -0.013551974669098854, -0.9878140091896057, -0.0010844547068700194, -0.00605012895539403], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage. {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ".", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -0.23266713321208954, -0.008724547922611237, -2.760852336883545, -2.9072988033294678, -0.6279788613319397, -0.03005724586546421, -0.001520192832686007, -0.0053877863101661205], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 481.6514531631467, "energy_per_token": 4.418820671221529, "time": 13.047672, "time_per_token": 0.1197034128440367}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception for HTTP errors", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " for", " HTTP", " errors", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -0.15590985119342804, -0.09043699502944946, -1.010298490524292, -0.01796310767531395, -0.24538198113441467], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-1.273903250694275, -2.5764849185943604], "finish_reason": "stop"}, {"text": "f\"Error: {e}\")", "tokens": ["f", "\"", "Error", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -0.8616161346435547, -0.05507276579737663, -0.308297723531723, -0.04945100098848343, -0.002460311632603407, -0.013415190391242504], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 449.6523882274627, "energy_per_token": 4.635591631210956, "time": 11.98843, "time_per_token": 0.1235920618556701}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url, headers={\"Accept-Encoding\": None})", "tokens": [" requests", ".", "get", "(", "url", ",", " headers", "=", "{\"", "Accept", "-", "Encoding", "\":", " None", "})", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -2.4174561500549316, -2.110711097717285, -0.3859446942806244, -0.0985574945807457, -0.7479896545410156, -0.05976886674761772, -0.39122316241264343, -0.001212100381962955, -0.23864717781543732, -0.10492798686027527, -0.1556648164987564], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004171717446297407, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -8.344646857949556e-07, -0.0002485204895492643, -0.30128762125968933], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.05450669303536415, -0.004557935055345297, -0.12169940769672394, -6.460934673668817e-05, -1.5497195136049413e-06, -0.021947942674160004, -0.006954274605959654, -0.0005933669744990766, -4.0531076592742465e-06, -3.635817120084539e-05, -0.008014070801436901, -0.007158228196203709], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0016797969583421946, -4.410734163684538e-06, -0.00019298121333122253, -0.0021798675879836082, -2.5987286790041253e-05, -0.0014519874239340425, -0.06554479151964188, -9.417489309271332e-06, -2.622600959512056e-06, -0.278166264295578, -0.03049071878194809], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.2784186899662018, -0.018130410462617874, -2.861018856492592e-06, -0.00034648136352188885, -0.0012362702982500196, -0.0014912686310708523, -5.245195097813848e-06, -2.7418097943154862e-06, -8.344646857949556e-07, -0.009329886175692081, -0.019202524796128273, -0.00030393750057555735, -0.001348301419056952, -4.458328112377785e-05, -1.9192511899746023e-05, -0.009926007129251957], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0015169790713116527, -1.7881377516459906e-06, -1.1920928244535389e-07, -4.637133679352701e-05, -0.0010109796421602368, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.0006559127941727638, -0.002128598978742957, -0.025965863838791847, -0.0040345946326851845], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.00141258561052382, -0.006114348769187927], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.001796776195988059, -0.0720239132642746], "finish_reason": "stop"}, {"text": " requests.RequestException:", "tokens": [" requests", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.6685255169868469, -5.721882189391181e-05, -1.779964566230774, -2.3841574147809297e-05, -0.9211607575416565, -0.009872418828308582], "finish_reason": "stop"}, {"text": "f\"Error in fetching/decoding the webpage: {str(e)}\")", "tokens": ["f", "\"", "Error", " in", " fetch", "ing", "/", "dec", "oding", " the", " webpage", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.1677900105714798, -0.006948473863303661, -0.3673446476459503, -2.423269510269165, -2.138854742050171, -0.26090219616889954, -2.9560394287109375, -2.1433353424072266, -0.00032908268622122705, -2.139730930328369, -0.511134684085846, -0.6257510781288147, -0.0036305959802120924, -1.0789823532104492, -4.815939246327616e-05, -0.00016902448260225356, -0.0021563153713941574, -0.006149656139314175, -0.003278834745287895, -0.0038640848360955715], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005075835506431758, -0.12445110082626343], "finish_reason": "stop"}], "metrics": {"energy": 474.43867565345744, "energy_per_token": 4.2360596040487275, "time": 13.048047, "time_per_token": 0.11650041964285715}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an HTTPError if the response status code is 400 or 500.", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " HTTP", "Error", " if", " the", " response", " status", " code", " is", " ", "4", "0", "0", " or", " ", "5", "0", "0", ".", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -2.520129442214966, -0.07584607601165771, -0.12885816395282745, -0.4890713691711426, -0.6714037656784058, -0.4248397946357727, -0.11492811143398285, -0.03247629851102829, -0.04392055794596672, -0.00031442465842701495, -0.732155442237854, -0.011079574935138226, -3.45700973412022e-05, -0.003796870354562998, -3.802703940891661e-05, -5.221230458118953e-05, -5.8412379075889476e-06, -1.4462170600891113, -0.006546953693032265], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -0.3270971477031708, -0.00189779803622514, -0.010228005237877369], "finish_reason": "stop"}, {"text": "f\"An error occurred: {e}\")", "tokens": ["f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -1.8144309520721436, -0.0315760038793087, -0.006524925120174885, -0.641523003578186, -0.0005708495154976845, -0.6709674596786499, -0.013384726829826832, -0.0011039836099371314, -0.004017259925603867], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005124686285853386, -0.15311850607395172], "finish_reason": "stop"}], "metrics": {"energy": 505.80337979888895, "energy_per_token": 4.145929342613844, "time": 13.86859, "time_per_token": 0.11367696721311475}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.9060707688331604, -0.00634844321757555], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.1847226619720459, -0.007622915785759687, -0.36838412284851074, -1.2890605926513672, -0.000507464399561286, -0.11076517403125763, -0.08260557800531387, -0.23266713321208954, -0.008724547922611237, -0.28685706853866577, -0.0014828173443675041, -0.4483448565006256, -0.009177759289741516, -0.0015666127437725663, -0.002684087259694934], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005447572330012918, -0.13625818490982056], "finish_reason": "stop"}], "metrics": {"energy": 449.5526604576109, "energy_per_token": 4.4510164401743655, "time": 12.440463, "time_per_token": 0.123172900990099}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an error for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " error", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -2.7801716327667236, -0.446211576461792, -0.2620220482349396, -0.00021717573690693825, -0.042793888598680496, -0.17146740853786469, -2.2172682292875834e-05, -0.07553683966398239, -0.025366447865962982, -0.04826318845152855], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.4251775741577148, -0.03720228374004364, -6.437280717364047e-06, -0.0001419681793777272, -0.0015873225638642907, -0.0013740155845880508, -8.702239938429557e-06, -4.887569048150908e-06, -8.344646857949556e-07, -0.012460007332265377, -0.005944667384028435, -0.0002227773511549458, -0.0013169910525903106, -6.472854875028133e-05, -4.0411134250462055e-05, -0.013270506635308266], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0017778557958081365, -1.5497195136049413e-06, -2.3841855067985307e-07, -4.732496745418757e-05, -0.0012823462020605803, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008298290777020156, -0.002342220861464739, -0.025610603392124176, -0.0043909563682973385], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0015115038258954883, -0.005118717905133963], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0015993434935808182, -0.07161851227283478], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.6234702467918396, -5.030505417380482e-05, -0.1726842224597931, 0.0, -0.0006908176001161337, -0.14032815396785736, -3.6954811548639555e-06, -0.9568050503730774, -0.0069752284325659275], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {e}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "e", "}\"", ")", "\n"], "logprobs": [-0.16159352660179138, -0.005889798980206251, -0.3922175168991089, -1.2243291139602661, -0.0004524161049630493, -0.12049362063407898, -0.057715728878974915, -0.21719124913215637, -0.007531462702900171, -0.22886569797992706, -0.0014918637461960316, -0.46181321144104004, -0.01001700572669506, -0.0011018402874469757, -0.0028145008254796267], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0004857790481764823, -0.13819937407970428], "finish_reason": "stop"}], "metrics": {"energy": 512.7749483547211, "energy_per_token": 4.458912594388879, "time": 14.099727, "time_per_token": 0.12260632173913043}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception for non-200 status codes", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " for", " non", "-", "2", "0", "0", " status", " codes", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -1.458828091621399, -0.00011395759065635502, -0.5984914302825928, -0.07557276636362076, -0.17133603990077972, -0.15590985119342804, -0.09043699502944946, -0.5118719935417175, -0.00010322991875000298, -0.04395809397101402, -0.12471610307693481, -1.2755313036905136e-05, -0.09867620468139648, -0.009932144545018673, -0.04345269501209259], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.48755303025245667, -5.1616290875244886e-05, -0.17039167881011963, 0.0, -0.00042429505265317857, -0.12301000207662582, -3.3378546504536644e-06, -0.5249872803688049, -0.3270971477031708, -0.00189779803622514, -0.010228005237877369], "finish_reason": "stop"}, {"text": "\"Error in task_func:\", str(e))", "tokens": ["\"", "Error", " in", " task", "_", "func", ":\"", ",", " str", "(", "e", "))", "\n"], "logprobs": [-2.338947057723999, -0.6513981223106384, -2.484847068786621, -0.5841777324676514, -0.05544568598270416, -0.011967171914875507, -0.09669120609760284, -0.002359227742999792, -0.37799251079559326, -5.5549986427649856e-05, -0.00020168177434243262, -0.004453621339052916, -0.010372421704232693], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005276002921164036, -0.14157630503177643], "finish_reason": "stop"}], "metrics": {"energy": 502.07081690406756, "energy_per_token": 4.365833190470153, "time": 13.463921, "time_per_token": 0.11707757391304346}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.4251775741577148, -0.03720228374004364, -6.437280717364047e-06, -0.0001419681793777272, -0.0015873225638642907, -0.0013740155845880508, -8.702239938429557e-06, -4.887569048150908e-06, -8.344646857949556e-07, -0.012460007332265377, -0.005944667384028435, -0.0002227773511549458, -0.0013169910525903106, -6.472854875028133e-05, -4.0411134250462055e-05, -0.013270506635308266], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0017778557958081365, -1.5497195136049413e-06, -2.3841855067985307e-07, -4.732496745418757e-05, -0.0012823462020605803, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008298290777020156, -0.002342220861464739, -0.025610603392124176, -0.0043909563682973385], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0015115038258954883, -0.005118717905133963], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0015993434935808182, -0.07161851227283478], "finish_reason": "stop"}, {"text": " (requests.RequestException, UnicodeDecodeError, bs4.parser.HTMLParseError):", "tokens": [" (", "requests", ".", "Request", "Exception", ",", " Un", "icode", "Dec", "ode", "Error", ",", " bs", "4", ".", "parser", ".", "HTML", "Parse", "Error", "):", "\n"], "logprobs": [-1.083456039428711, -0.3731851577758789, -1.811964830267243e-05, -0.3932346999645233, -6.6756979322235566e-06, -0.003270873799920082, -0.5875345468521118, -2.3483953555114567e-05, -0.020151760429143906, -2.3364747903542593e-05, -8.344646857949556e-07, -1.6958426237106323, -1.9798539876937866, -0.0015623279614374042, -0.008455075323581696, -2.798844814300537, -0.000144709600135684, -0.01838219165802002, -0.9786977171897888, -0.0005555993411689997, -1.0316272974014282, -0.0038035206962376833], "finish_reason": "stop"}, {"text": "f\"Error fetching or parsing the webpage: {str(e)}\")", "tokens": ["f", "\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.16159352660179138, -0.005889798980206251, -0.3922175168991089, -1.2243291139602661, -0.0004524161049630493, -0.12049362063407898, -0.057715728878974915, -0.21719124913215637, -0.007531462702900171, -0.22886569797992706, -0.0014918637461960316, -1.1246321201324463, -3.4689302992774174e-05, -0.00019035911827813834, -0.0015194787411019206, -0.0051706633530557156, -0.0012453190283849835, -0.0017679788870736957], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0004857790481764823, -2.497101306915283, -6.639736966462806e-05, -4.768360213347478e-06, -2.861018856492592e-06, -1.3589766240329482e-05, -0.08386918157339096], "finish_reason": "stop"}], "metrics": {"energy": 559.8511434383395, "energy_per_token": 4.588943798674913, "time": 14.542554, "time_per_token": 0.11920126229508198}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url, timeout=5)", "tokens": [" requests", ".", "get", "(", "url", ",", " timeout", "=", "5", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -2.4174561500549316, -0.2878044843673706, -0.007897225208580494, -1.494858741760254, -0.07888148725032806, -0.05706692859530449], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.005507533438503742, -1.1920928244535389e-07, -4.768370445162873e-07, -3.576278118089249e-07, -9.536738616588991e-07, -0.00028046013903804123, -0.3049941658973694], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.041751470416784286, -0.004185250960290432, -0.11672771722078323, -8.093983342405409e-05, -1.4305104514278355e-06, -0.0194621030241251, -0.009528987109661102, -0.000550357042811811, -3.3378546504536644e-06, -3.4450891689630225e-05, -0.007452188525348902, -0.007291846442967653], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0020666210912168026, -4.768360213347478e-06, -0.0002485204895492643, -0.001785828499123454, -2.0861407392658293e-05, -0.001450439915060997, -0.06047146022319794, -9.179073458653875e-06, -2.622600959512056e-06, -0.2465992569923401, -0.030676402151584625], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.3096708655357361, -0.017108358442783356, -3.099436753473128e-06, -0.0003629264247138053, -0.0012827033642679453, -0.0015793481143191457, -4.6491513785440475e-06, -2.7418097943154862e-06, -5.960462772236497e-07, -0.011324061080813408, -0.019680937752127647, -0.0002834395272657275, -0.0013594918418675661, -4.649054244509898e-05, -1.7523612768854946e-05, -0.0076905833557248116], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0019094583112746477, -1.311301275563892e-06, -2.3841855067985307e-07, -4.434487345861271e-05, -0.0013473490253090858, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0006575806182809174, -0.0023328252136707306, -0.0334017239511013, -0.004258492961525917], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0012478192802518606, -0.005673733074218035], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.001956336200237274, -0.07499528676271439], "finish_reason": "stop"}, {"text": " (requests.RequestException, UnicodeDecodeError):", "tokens": [" (", "requests", ".", "Request", "Exception", ",", " Un", "icode", "Dec", "ode", "Error", "):", "\n"], "logprobs": [-1.1226792335510254, -0.34861013293266296, -1.9073304429184645e-05, -0.6137808561325073, -7.629365427419543e-06, -0.004001824650913477, -0.764675498008728, -2.276871418871451e-05, -0.01331685483455658, -1.8954096958623268e-05, -7.152555099310121e-07, -0.6632086038589478, -0.005348776467144489], "finish_reason": "stop"}, {"text": "\"Error fetching or parsing the webpage:\", e)", "tokens": ["\"", "Error", " fetch", "ing", " or", " parsing", " the", " webpage", ":\"", ",", " e", ")", "\n"], "logprobs": [-2.51094126701355, -0.6239297986030579, -2.1902406215667725, -0.0013944911770522594, -0.11551634222269058, -0.05206301435828209, -0.1146215945482254, -0.00482193473726511, -0.07768567651510239, -0.004354400094598532, -0.9628581404685974, -0.009264219552278519, -0.0026880106888711452], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005206898204050958, -0.1446145921945572], "finish_reason": "stop"}], "metrics": {"energy": 452.371485572815, "energy_per_token": 4.227770893203878, "time": 12.841628, "time_per_token": 0.12001521495327103}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.encoding == 'ISO-8859-1':", "tokens": [" response", ".", "encoding", " ==", " '", "ISO", "-", "8", "8", "5", "9", "-", "1", "':", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -2.814074993133545, -0.2789548337459564, -1.691978096961975, -0.12273315340280533, -0.00012885693286079913, -3.099436753473128e-06, -1.1920928244535389e-07, -5.960462772236497e-07, -2.7179348762729205e-05, -2.8371408916427754e-05, -0.00036197309964336455, -0.03526128828525543, -0.0218940619379282], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0023118930403143167, -4.6491513785440475e-06, -0.0003761537664104253, -0.002085417043417692, -2.13382354559144e-05, -0.0015244778478518128, -0.0731712207198143, -7.510157047363464e-06, -2.861018856492592e-06, -0.2374480962753296, -0.02771013230085373], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.2414129972457886, -0.03183423727750778, -7.390948667307384e-06, -0.00016246906307060272, -0.0014555584639310837, -0.0015480450820177794, -9.536697689327411e-06, -3.933898824470816e-06, -7.152555099310121e-07, -0.01268661767244339, -0.0064519671723246574, -0.0002051381452474743, -0.0014862692914903164, -6.305972783593461e-05, -3.862306402879767e-05, -0.01117907464504242], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.001630644896067679, -1.4305104514278355e-06, -4.768370445162873e-07, -5.304672595229931e-05, -0.0015592334093526006, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008716359734535217, -0.0022580146323889494, -0.023021217435598373, -0.0032410495914518833], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0014206803170964122, -0.005897857714444399], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0014872215688228607, -0.07607677578926086], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.5616322159767151, -4.8993817472364753e-05, -0.14467215538024902, 0.0, -0.0005353448214009404, -0.15323981642723083, -3.814689989667386e-06, -0.6153132915496826, -0.31821632385253906, -0.0016142207896336913, -0.010182221420109272], "finish_reason": "stop"}, {"text": "f\"Exception occurred: {str(e)}\")", "tokens": ["f", "\"", "Exception", " occurred", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.13509181141853333, -0.007362494710832834, -3.085418701171875, -0.5968983173370361, -0.33140134811401367, -0.001790588372386992, -0.8423834443092346, -3.123234637314454e-05, -0.00011932138295378536, -0.002321407664567232, -0.005332057364284992, -0.003121386980637908, -0.012618698179721832], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0004932855372317135, -0.14953458309173584], "finish_reason": "stop"}], "metrics": {"energy": 505.1556632556913, "energy_per_token": 4.857265992843185, "time": 13.715682, "time_per_token": 0.1318815576923077}}
{"outputs": [{"text": " not url:  # Check if the URL is empty or None", "tokens": [" not", " url", ":", "  ", "#", " Check", " if", " the", " URL", " is", " empty", " or", " None", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -3.0447378158569336, -0.0010645681759342551, -0.7169280052185059, -0.1729714572429657, -0.09953600913286209, -0.06353089958429337, -0.009673151187598705, -0.454759418964386, -0.06041669845581055, -0.004702223930507898, -0.04799825698137283], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.encoding == response.apparent_encoding:", "tokens": [" response", ".", "encoding", " ==", " response", ".", "apparent", "_", "encoding", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -2.814074993133545, -0.2789548337459564, -0.7802025079727173, -1.4662635294371285e-05, -0.027604147791862488, -7.152555099310121e-07, -1.1920928244535389e-07, -0.01018163189291954, -0.009193941950798035], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.0023118930403143167, -4.6491513785440475e-06, -0.0003761537664104253, -0.002085417043417692, -2.13382354559144e-05, -0.0015244778478518128, -0.0731712207198143, -7.510157047363464e-06, -2.861018856492592e-06, -0.2374480962753296, -0.02771013230085373], "finish_reason": "stop"}, {"text": " 'lxml' if use_lxml else 'html.parser'", "tokens": [" '", "l", "xml", "'", " if", " use", "_", "l", "xml", " else", " '", "html", ".", "parser", "'", "\n"], "logprobs": [-1.2414129972457886, -0.03183423727750778, -7.390948667307384e-06, -0.00016246906307060272, -0.0014555584639310837, -0.0015480450820177794, -9.536697689327411e-06, -3.933898824470816e-06, -7.152555099310121e-07, -0.01268661767244339, -0.0064519671723246574, -0.0002051381452474743, -0.0014862692914903164, -6.305972783593461e-05, -3.862306402879767e-05, -0.01117907464504242], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.001630644896067679, -1.4305104514278355e-06, -4.768370445162873e-07, -5.304672595229931e-05, -0.0015592334093526006, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0008716359734535217, -0.0022580146323889494, -0.023021217435598373, -0.0032410495914518833], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0014206803170964122, -0.005897857714444399], "finish_reason": "stop"}, {"text": " None  # Invalid status code", "tokens": [" None", "  ", "#", " Invalid", " status", " code", "\n"], "logprobs": [-0.0014872215688228607, -2.681457757949829, -0.0002379134384682402, -2.7828285694122314, -1.1023969650268555, -0.005306800827383995, -1.0220543146133423], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", ":", "\n"], "logprobs": [-0.5616322159767151, -4.8993817472364753e-05, -0.14467215538024902, 0.0, -0.0005353448214009404, -0.15323981642723083, -3.814689989667386e-06, -0.7879416942596436, -0.007035008631646633], "finish_reason": "stop"}, {"text": "f\"Error: {str(e)}\")", "tokens": ["f", "\"", "Error", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n"], "logprobs": [-0.13509181141853333, -0.007362494710832834, -0.41314512491226196, -0.8957299590110779, -0.06933624297380447, -1.0904126167297363, -1.9550132492440753e-05, -9.119095193454996e-05, -0.003573700087144971, -0.01116540003567934, -0.0029639145359396935, -0.014456062577664852], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0004932855372317135, -0.14953458309173584], "finish_reason": "stop"}], "metrics": {"energy": 545.5584394760134, "energy_per_token": 4.871057495321549, "time": 14.712765, "time_per_token": 0.1313639732142857}}
{"outputs": [{"text": " url:", "tokens": [" url", ":", "\n"], "logprobs": [-2.976032257080078, -2.0898289680480957, -0.09360546618700027], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url, timeout=2)", "tokens": [" requests", ".", "get", "(", "url", ",", " timeout", "=", "2", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -2.4174561500549316, -0.2878044843673706, -0.007897225208580494, -3.322110176086426, -0.9495484828948975, -0.07384708523750305], "finish_reason": "stop"}, {"text": "raise_for_status()  # Raise an exception if the status code is not 200 (OK)", "tokens": ["raise", "_", "for", "_", "status", "()", "  ", "#", " Ra", "ise", " an", " exception", " if", " the", " status", " code", " is", " not", " ", "2", "0", "0", " (", "OK", ")", "\n"], "logprobs": [-0.005507533438503742, -1.1920928244535389e-07, -4.768370445162873e-07, -3.576278118089249e-07, -9.536738616588991e-07, -0.00028046013903804123, -1.430173397064209, -0.000120751719805412, -0.602235734462738, -0.0937473401427269, -0.19080451130867004, -0.21234729886054993, -2.408393621444702, -0.15099547803401947, -1.7603405714035034, -0.03135606274008751, -0.1465640366077423, -0.29189297556877136, -0.04812493547797203, -0.0008585343020968139, -0.10230063647031784, -5.4834770708112046e-05, -2.5828969478607178, -3.0715065002441406, -0.0013098479248583317, -0.11691820621490479], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.041751470416784286, -0.004185250960290432, -0.11672771722078323, -8.093983342405409e-05, -1.4305104514278355e-06, -0.0194621030241251, -0.009528987109661102, -0.000550357042811811, -3.3378546504536644e-06, -3.4450891689630225e-05, -0.007452188525348902, -0.007291846442967653], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding, errors=\"replace\")", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ",", " errors", "=", "\"", "replace", "\"", ")", "\n"], "logprobs": [-0.0020666210912168026, -4.768360213347478e-06, -0.0002485204895492643, -0.001785828499123454, -2.0861407392658293e-05, -0.001450439915060997, -0.06047146022319794, -9.179073458653875e-06, -2.622600959512056e-06, -1.527273178100586, -0.25555193424224854, -0.5363744497299194, -0.00025960413040593266, -1.0505372285842896, -2.3841574147809297e-05, -0.0003325386205688119, -0.024172468110919], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.3096708655357361, -0.017108358442783356, -3.099436753473128e-06, -0.0003629264247138053, -0.0012827033642679453, -0.0015793481143191457, -4.6491513785440475e-06, -2.7418097943154862e-06, -5.960462772236497e-07, -0.011324061080813408, -0.019680937752127647, -0.0002834395272657275, -0.0013594918418675661, -4.649054244509898e-05, -1.7523612768854946e-05, -0.0076905833557248116], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0019094583112746477, -1.311301275563892e-06, -2.3841855067985307e-07, -4.434487345861271e-05, -0.0013473490253090858, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -0.0006575806182809174, -0.0023328252136707306, -0.0334017239511013, -0.004258492961525917], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0012478192802518606, -0.005673733074218035], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.001956336200237274, -0.07499528676271439], "finish_reason": "stop"}, {"text": " requests.exceptions.RequestException as e:", "tokens": [" requests", ".", "except", "ions", ".", "Request", "Exception", " as", " e", ":", "\n"], "logprobs": [-0.5728135704994202, -5.817244164063595e-05, -0.12686799466609955, 0.0, -0.0006202919175848365, -0.13793645799160004, -2.861018856492592e-06, -0.63343745470047, -0.26271143555641174, -0.002470895182341337, -0.009068256244063377], "finish_reason": "stop"}, {"text": "\"Error:\", str(e))", "tokens": ["\"", "Error", ":\"", ",", " str", "(", "e", "))", "\n"], "logprobs": [-2.51094126701355, -0.6239297986030579, -0.4285256266593933, -0.0014997198013588786, -1.1639814376831055, -4.255681051290594e-05, -0.00019274283840786666, -0.00983157753944397, -0.009222171269357204], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005206898204050958, -0.1446145921945572], "finish_reason": "stop"}], "metrics": {"energy": 520.9916809806823, "energy_per_token": 4.167933447845458, "time": 14.301476, "time_per_token": 0.11441180799999999}}
{"outputs": [{"text": " not url:", "tokens": [" not", " url", ":", "\n"], "logprobs": [-0.07382969558238983, -0.014663073234260082, -0.06782969832420349, -0.07262317091226578], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.047829851508140564, -0.05264833942055702], "finish_reason": "stop"}, {"text": " requests.get(url)", "tokens": [" requests", ".", "get", "(", "url", ")", "\n"], "logprobs": [-0.000601349223870784, -4.279521817807108e-05, -0.0011728082317858934, -5.4596363042946905e-05, -0.003441603621467948, -0.10679494589567184, -0.008190377615392208], "finish_reason": "stop"}, {"text": "raise_for_status()", "tokens": ["raise", "_", "for", "_", "status", "()", "\n"], "logprobs": [-0.004849101882427931, -1.1920928244535389e-07, -3.576278118089249e-07, -3.576278118089249e-07, -7.152555099310121e-07, -0.0003104920033365488, -0.2947503328323364], "finish_reason": "stop"}, {"text": " response.status_code == 200:", "tokens": [" response", ".", "status", "_", "code", " ==", " ", "2", "0", "0", ":", "\n"], "logprobs": [-0.04167875275015831, -0.005349843762814999, -0.08982042223215103, -7.772143726469949e-05, -1.1920922133867862e-06, -0.01766577921807766, -0.005312729626893997, -0.0005740663618780673, -3.099436753473128e-06, -3.1709168979432434e-05, -0.00888076052069664, -0.00699073588475585], "finish_reason": "stop"}, {"text": " response.content.decode(from_encoding)", "tokens": [" response", ".", "content", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.002118606586009264, -4.172316494077677e-06, -0.000266278104390949, -0.0017964191501960158, -2.5629668016335927e-05, -0.0016847953666001558, -0.06440624594688416, -8.702239938429557e-06, -2.861018856492592e-06, -0.27370941638946533, -0.029025083407759666], "finish_reason": "stop"}, {"text": " \"lxml\" if use_lxml else \"html.parser\"", "tokens": [" \"", "l", "xml", "\"", " if", " use", "_", "l", "xml", " else", " \"", "html", ".", "parser", "\"", "\n"], "logprobs": [-0.28484630584716797, -0.0217264536768198, -2.9802276912960224e-06, -0.0003149013500660658, -0.0011183919850736856, -0.0012850845232605934, -7.271740287251305e-06, -4.0531076592742465e-06, -5.960462772236497e-07, -0.010946343652904034, -0.022880828008055687, -0.00033790123416110873, -0.0009372609201818705, -2.4199192921514623e-05, -1.9430925021879375e-05, -0.008453420363366604], "finish_reason": "stop"}, {"text": " BeautifulSoup(decoded_content, parser)", "tokens": [" Beautiful", "S", "oup", "(", "dec", "oded", "_", "content", ",", " parser", ")", "\n"], "logprobs": [-0.0014886498684063554, -1.1920922133867862e-06, -4.768370445162873e-07, -4.5536911784438416e-05, -0.0011709030950441957, -1.1920928244535389e-07, -2.3841855067985307e-07, 0.0, -0.000816012208815664, -0.002040686784312129, -0.02694641798734665, -0.004298732616007328], "finish_reason": "stop"}, {"text": " soup", "tokens": [" soup", "\n"], "logprobs": [-0.0011922164121642709, -0.005629637278616428], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0016356435371562839, -0.06823107600212097], "finish_reason": "stop"}, {"text": " (requests.ConnectionError, requests.Timeout, requests.HTTPError, UnicodeDecodeError) as e:", "tokens": [" (", "requests", ".", "Connection", "Error", ",", " requests", ".", "Timeout", ",", " requests", ".", "HTTP", "Error", ",", " Un", "icode", "Dec", "ode", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-1.273903250694275, -0.3446294665336609, -2.169585604860913e-05, -1.8576154708862305, -8.344646857949556e-07, -0.00017653337272349745, -0.010887386277318, -2.0503786799963564e-05, -1.6348800659179688, -0.15500929951667786, -0.09791110455989838, -9.179073458653875e-06, -0.06878899037837982, -1.311301275563892e-06, -0.40823280811309814, -0.3172125816345215, -3.1470757676288486e-05, -0.034034255892038345, -6.794906312279636e-06, -9.536738616588991e-07, -1.0063396692276, -0.0004553949984256178, -0.16875143349170685, -0.00010787858627736568, -0.0010351543314754963], "finish_reason": "stop"}, {"text": "\"Exception:\", str(e))", "tokens": ["\"", "Exception", ":\"", ",", " str", "(", "e", "))", "\n"], "logprobs": [-2.338947057723999, -2.924337863922119, -1.1219723224639893, -0.00325055536814034, -0.8108036518096924, -6.4490144723095e-05, -0.0003816353273577988, -0.005918003618717194, -0.02445937693119049], "finish_reason": "stop"}, {"text": " None", "tokens": [" None", "\n"], "logprobs": [-0.0005276002921164036, -0.14157630503177643], "finish_reason": "stop"}], "metrics": {"energy": 530.3455867557527, "energy_per_token": 4.777888168970745, "time": 14.505681, "time_per_token": 0.13068181081081082}}
