{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.8615455627441406, -0.017624201253056526, -0.0447528176009655], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -0.19483917951583862, -0.3491675555706024, -0.08834531158208847], "finish_reason": "stop"}, {"text": " extracted_text.strip() != \"\":", "tokens": [" extracted", "_", "text", ".", "strip", "()", " ", "!", "=", " \"", "\":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -1.7793102264404297, -0.7726150155067444, -0.9725092649459839, -1.4554734230041504, -1.6331539882230572e-05, -5.495397272170521e-05, -0.2054561823606491, -0.014081055298447609, -0.1475154310464859], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2738569378852844, -4.1960789531003684e-05, -1.156323378381785e-05, -0.009261030703783035, -0.2753075659275055, -0.005738214123994112, -0.4002149701118469, -4.768360213347478e-06, -1.645074735279195e-05, -0.07543094456195831, -0.8994449973106384], "finish_reason": "stop"}, {"text": " (ValueError, LookupError):", "tokens": [" (", "Value", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.7658759951591492, -1.8036179542541504, -1.6689160474925302e-05, -0.005962916649878025, -0.08268975466489792, -3.7788631743751466e-05, -1.0371154530730564e-05, -0.14122091233730316, -0.02645277790725231], "finish_reason": "stop"}, {"text": " ValueError(\"Unable to convert text using the specified encodings.\") from exc", "tokens": [" Value", "Error", "(", "\"", "Un", "able", " to", " convert", " text", " using", " the", " specified", " enc", "od", "ings", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.04984031245112419, -2.7179348762729205e-05, -0.09970995038747787, -1.7576947212219238, -1.3794409036636353, -0.45629408955574036, -0.001437702914699912, -0.43388238549232483, -0.9651809930801392, -2.7393910884857178, -1.4738874435424805, -1.530399203300476, -1.147331953048706, -0.00015722469834145159, -2.5033637939486653e-05, -1.0305917263031006, -0.2414463609457016, -0.0681750625371933, -0.03174647316336632, -0.0006015875260345638, -0.004355231299996376], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.1500414609909058, -0.03820757195353508, -0.13768230378627777, -4.291525328881107e-06, -1.0251946150674485e-05, -0.1310402750968933, -0.029699964448809624, -0.006423659157007933, -0.007174324709922075], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.22702917456626892, -0.0017927302978932858, -0.11711502820253372, -1.199041724205017], "finish_reason": "stop"}, {"text": " comment.strip():", "tokens": [" comment", ".", "strip", "():", "\n"], "logprobs": [-0.35355478525161743, -3.1152188777923584, -0.7308000326156616, -0.15642400085926056, -0.0334617905318737], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.055395498871803284, -0.001128751551732421, -0.013486466370522976, -0.025950299575924873, -0.500602126121521, -1.2397689715726301e-05, -2.3364747903542593e-05, -0.030067889019846916, -0.06607173383235931, -0.026695623993873596, -0.0009190387791022658, -0.006987421307712793, -2.729855441430118e-05, -1.0371154530730564e-05, -0.011246384121477604, -0.014102213084697723], "finish_reason": "stop"}, {"text": "encode(comment, to_encoding)", "tokens": ["encode", "(", "comment", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-3.1521008014678955, -0.0016030330443754792, -0.04241473600268364, -0.1394321173429489, -0.9035032987594604, -8.129743218887597e-05, -6.401333666872233e-05, -0.07448475807905197, -0.4893333911895752], "finish_reason": "stop"}, {"text": "replace(\"\\r\\n\", \"\\n\")", "tokens": ["replace", "(", "\"", "\\", "r", "\\", "n", "\"", ",", " \"", "\\", "n", "\"", ")", "\n"], "logprobs": [-3.293890953063965, -0.019297126680612564, -0.5016712546348572, -0.12136106193065643, -1.2715121507644653, -0.6922928690910339, -0.003160246182233095, -0.022243067622184753, -0.0023994247894734144, -0.003930700942873955, -0.15254124999046326, -0.008087743073701859, -0.006165887229144573, -0.005233042407780886, -0.07443650811910629], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0011545903980731964, -0.156219482421875, -0.7188321948051453, -0.00024470672360621393, -6.198863957251888e-06, -0.01808030530810356, -0.031261321157217026], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11098742485046387, -0.04194250702857971, -2.2291887944447808e-05, -0.013178862631320953, -9.536738616588991e-07, -1.6689286894688848e-06, -0.0012656782055273652, -0.002297026105225086, -3.611976353568025e-05, -3.099436753473128e-06, -0.0772746205329895, -0.00010513706365600228, -0.0033116282429546118, -0.0004481264913920313, -0.0008839037618599832], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004287931136786938, -2.861018856492592e-06, -0.000780754373408854, -0.03232107311487198, -0.030413128435611725, -8.344646857949556e-07, -7.390948667307384e-06, -0.022362329065799713, -0.01487156841903925, -0.02870681695640087, -0.0013562776148319244, -0.00031549722189083695, -0.005495796445757151, -9.083335316972807e-05, -0.012425039894878864], "finish_reason": "stop"}, {"text": " comment<|endoftext|>def get_all_subclasses(cls: type) -> list[type]:", "tokens": [" comment", "<", "|", "end", "of", "text", "|>", "def", " get", "_", "all", "_", "sub", "classes", "(", "cls", ":", " type", ")", " ->", " list", "[", "type", "]:", "\n"], "logprobs": [-0.09183931350708008, -2.0921900272369385, -1.1324817933200393e-05, -2.622600959512056e-06, -0.0018887552432715893, -1.3112935448589269e-05, -0.12462329119443893, -3.3586411476135254, -3.4227802753448486, -0.119399793446064, -4.928317070007324, -0.0712442472577095, -2.2505970001220703, -0.5352174639701843, -0.03343366086483002, -0.11305563896894455, -2.5095348358154297, -0.18532463908195496, -0.41444680094718933, -0.00024673278676345944, -0.17234092950820923, -1.1039963960647583, -0.008627403527498245, -0.020709356293082237, -0.004179077688604593], "finish_reason": "stop"}], "metrics": {"energy": 316.7610356235503, "energy_per_token": 1.5527501746252466, "time": 11.981714, "time_per_token": 0.05873389215686275}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus', config='--psm 1 --oem 1')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "'", ",", " config", "='", "--", "ps", "m", " ", "1", " --", "o", "em", " ", "1", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -2.5397346019744873, -0.0015630420530214906, -0.7033814191818237, -0.37461161613464355, -0.1359456479549408, -0.15479682385921478, -0.00028200942324474454, -0.0027725372929126024, -0.9074360728263855, -2.2552905082702637, -0.2328307330608368, -0.024767018854618073, -0.011925002560019493, -0.8161196708679199, -0.5065683126449585, -0.06850706040859222], "finish_reason": "stop"}, {"text": " from_encoding != \"utf8\":", "tokens": [" from", "_", "encoding", " ", "!", "=", " \"", "utf", "8", "\":", "\n"], "logprobs": [-2.3559603691101074, -2.0503786799963564e-05, -7.879423355916515e-05, -0.687623918056488, -2.455681169521995e-05, -0.00016318420239258558, -0.4823426902294159, -1.1980037689208984, -0.1202864721417427, -0.08930148184299469, -0.045707616955041885], "finish_reason": "stop"}, {"text": " codecs.decode(extracted_text, from_encoding, 'replace').encode(to_encoding).decode('utf8', 'replace')", "tokens": [" codec", "s", ".", "decode", "(", "ext", "racted", "_", "text", ",", " from", "_", "encoding", ",", " '", "replace", "')", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "('", "utf", "8", "'", ",", " '", "replace", "')", "\n"], "logprobs": [-1.5917245149612427, -7.152555099310121e-07, -3.480850500636734e-05, -0.1680605113506317, -0.00257422705180943, -0.02191307209432125, -1.1086402082582936e-05, -6.198863957251888e-06, -3.099436753473128e-06, -0.5954610109329224, -0.14680276811122894, -0.00017617580306250602, -3.325883881188929e-05, -1.251335859298706, -1.8354134559631348, -0.7066460847854614, -0.00968389492481947, -0.7999545335769653, -0.8975213766098022, -0.01138028223067522, -0.01189484540373087, -7.986990567587782e-06, -7.390948667307384e-06, -0.398013710975647, -1.6566187143325806, -0.007809937000274658, -1.9088530540466309, -0.08895112574100494, -0.4687919020652771, -2.9973347187042236, -0.02598200924694538, -0.10078984498977661, -0.5751969218254089, -0.0027526842895895243, -0.04385484382510185], "finish_reason": "stop"}, {"text": " LookupError as e:", "tokens": [" Look", "up", "Error", " as", " e", ":", "\n"], "logprobs": [-1.3832420110702515, -0.00012063252506777644, -2.1219027985353023e-05, -2.2301597595214844, -0.2763204276561737, -0.003528204746544361, -0.027017895132303238], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during conversion: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " conversion", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.04676912724971771, -2.312633478140924e-05, -0.10358615964651108, -0.5853197574615479, -0.07981284707784653, -1.8051925897598267, -1.8977875709533691, -0.8205406665802002, -0.49151694774627686, -0.01760382018983364, -0.03408575803041458, -0.15053154528141022, -0.001503528794273734, -0.2762337028980255], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-1.9428843259811401, -0.6682886481285095, -0.0006413786904886365, -0.05445634573698044, -1.5497195136049413e-06, -3.2186455882765586e-06, -0.0032942809630185366, -0.02262493409216404, -2.2411095415009186e-05, -2.3841830625315197e-06, -0.14693419635295868, -0.0001752223033690825, -0.010897999629378319, -0.005409721285104752, -0.008024240843951702], "finish_reason": "stop"}, {"text": " codecs.getreader(from_encoding)(image.comment)", "tokens": [" codec", "s", ".", "get", "reader", "(", "from", "_", "encoding", ")(", "image", ".", "comment", ")", "\n"], "logprobs": [-2.730916738510132, -2.622600959512056e-06, -4.207999518257566e-05, -0.751062273979187, -0.3432806134223938, -0.08288124948740005, -1.011946439743042, -7.748573807475623e-06, -8.702239938429557e-06, -0.02860001102089882, -0.20887193083763123, -0.03889841586351395, -0.9895927906036377, -0.49329766631126404, -0.21908095479011536], "finish_reason": "stop"}, {"text": " comment and comment.startswith(\"Text:\"):", "tokens": [" comment", " and", " comment", ".", "start", "sw", "ith", "(", "\"", "Text", ":\"", "):", "\n"], "logprobs": [-0.3906191289424896, -2.8465681076049805, -1.0227106809616089, -0.27762988209724426, -1.8089685440063477, -6.556489552167477e-06, -5.960462772236497e-07, -0.07519666105508804, -0.1597687005996704, -3.141646385192871, -0.7349456548690796, -0.053020693361759186, -0.0171116404235363], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04338306561112404, -0.0009752523037604988, -0.011821571737527847, -0.03986305370926857, -0.5105316638946533, -1.7165990357170813e-05, -2.5033637939486653e-05, -0.03387949988245964, -0.057528357952833176, -0.023874420672655106, -0.001004906021989882, -0.007127099204808474, -2.706014311115723e-05, -9.536697689327411e-06, -0.013447889126837254, -0.01375529170036316], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.17950548231601715, -0.0008391196606680751, -0.060909561812877655, -0.07047852873802185, -0.26210999488830566, -0.00022551853908225894, -5.280832192511298e-05, -0.05918499454855919, -0.6765663027763367], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5893301367759705, -0.01108629535883665, -0.09849300235509872, -8.272782724816352e-05, -2.0861407392658293e-05, -0.07900453358888626, -0.024739690124988556], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0013240152038633823, -0.12464191764593124, -0.6357755064964294, -0.00024339574156329036, -6.198863957251888e-06, -0.020556265488266945, -0.029986215755343437], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09713828563690186, -0.03799045830965042, -2.1457441107486375e-05, -0.013509518466889858, -1.0728830375228426e-06, -2.145764938177308e-06, -0.0011322046630084515, -0.002419046824797988, -2.5629668016335927e-05, -3.4570634852570947e-06, -0.08278962224721909, -0.00011824862303910777, -0.0038890219293534756, -0.0003567297535482794, -0.0009610801353119314], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004756801761686802, -3.814689989667386e-06, -0.0010558750946074724, -0.021380651742219925, -0.02629394456744194, -9.536738616588991e-07, -6.794906312279636e-06, -0.02175748161971569, -0.011326772160828114, -0.02695697732269764, -0.0015643513761460781, -0.0003307510633021593, -0.006602969951927662, -7.343022298300639e-05, -0.014495541341602802], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.07764375954866409, -0.5046440958976746], "finish_reason": "stop"}], "metrics": {"energy": 285.8753421649933, "energy_per_token": 1.2762292060937201, "time": 12.829322, "time_per_token": 0.05727375892857143}}
{"outputs": [{"text": " open(filename, 'rb') as f:", "tokens": [" open", "(", "filename", ",", " '", "rb", "')", " as", " f", ":", "\n"], "logprobs": [-2.387890100479126, -0.0018233117880299687, -0.02481493167579174, -0.006966467946767807, -0.9079805612564087, -0.019505241885781288, -0.007099756971001625, -0.0015770867466926575, -0.9577626585960388, -0.09065422415733337, -0.06146148592233658], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " len(extracted_text) > 0:", "tokens": [" len", "(", "ext", "racted", "_", "text", ")", " >", " ", "0", ":", "\n"], "logprobs": [-2.4373984336853027, -0.0004866131057497114, -0.005774127319455147, -2.90866428258596e-05, -1.1324817933200393e-05, -1.0251946150674485e-05, -0.23753684759140015, -0.924671471118927, -0.0035157317761331797, -0.10823091119527817, -0.015791479498147964, -0.06333912909030914], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -0.4097268879413605, -5.483612312673358e-06, -1.6689160474925302e-05, -0.06843692809343338, -0.742069661617279], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6632929444313049, -0.38305357098579407, -2.5748875486897305e-05, -0.0834563821554184, -5.960462772236497e-07, -1.2159273865108844e-05, -0.004385615698993206, -0.008201255463063717, -4.172238186583854e-05, -1.4424220353248529e-05, -0.166689932346344, -0.02930469997227192], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to decode {from_encoding} to {to_encoding}: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " decode", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.05067933350801468, -2.586808113846928e-05, -0.08834782242774963, -0.6206344366073608, -0.08682245016098022, -1.0172919034957886, -0.3351171612739563, -0.0017483439296483994, -1.163647174835205, -2.9150750637054443, -0.7167435884475708, -3.397406908334233e-05, -0.00018010901112575084, -0.23162512481212616, -0.9817129373550415, -0.03792423754930496, -0.010882316157221794, -7.164221460698172e-05, -0.00015352977789007127, -0.51710444688797, -0.016272230073809624, -0.0329425223171711, -0.12598586082458496, -0.0017108578467741609, -1.2153209447860718, -0.025476155802607536, -0.00809448305517435], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.138629674911499, -0.03670598194003105, -0.16042588651180267, -4.0531076592742465e-06, -9.775113539944869e-06, -0.14212071895599365, -0.03048563189804554, -0.006333873141556978, -0.0063793594017624855], "finish_reason": "stop"}, {"text": " image.info.get('comment', '')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " '", "')", "\n"], "logprobs": [-0.25117921829223633, -0.0017297795275226235, -2.996699571609497, -0.17818932235240936, -0.006787577178329229, -1.141329288482666, -0.014861584641039371, -0.6516062021255493, -3.540453326422721e-05, -0.1786002218723297, -0.0034656007774174213, -0.19157657027244568], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.6289699077606201, -0.06150856614112854, -0.09284050017595291, -0.02987237274646759], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.044117338955402374, -0.0011932880152016878, -0.010152130387723446, -0.03219999372959137, -0.4561324417591095, -1.3112935448589269e-05, -1.6331539882230572e-05, -0.03343746438622475, -0.06561389565467834, -0.021998554468154907, -0.000916418619453907, -0.005982231814414263, -3.0278701160568744e-05, -7.629365427419543e-06, -0.014468870125710964, -0.012317068874835968], "finish_reason": "stop"}, {"text": "getreader(from_encoding)(comment).read()", "tokens": ["get", "reader", "(", "from", "_", "encoding", ")(", "comment", ")", ".", "read", "()", "\n"], "logprobs": [-2.473837375640869, -1.0967031717300415, -0.0026853950694203377, -0.45224618911743164, -7.510157047363464e-06, -1.6331539882230572e-05, -0.03536059707403183, -0.18856710195541382, -0.1584782749414444, -1.2792688608169556, -0.1746576428413391, -0.07284519821405411, -0.687606155872345], "finish_reason": "stop"}, {"text": "decode(to_encoding, \"ignore\")", "tokens": ["decode", "(", "to", "_", "encoding", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.5206946134567261, -0.013168391771614552, -0.10432329773902893, -8.427741704508662e-05, -1.8715683836489916e-05, -2.5495223999023438, -0.6402618885040283, -0.7817686796188354, -0.0005392765742726624, -0.0018274764297530055, -0.012724283151328564], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.001214600750245154, -2.1383285522460938, -0.013558677397668362], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11660699546337128, -0.03569481521844864, -2.777537883957848e-05, -0.012666607275605202, -1.0728830375228426e-06, -1.5497195136049413e-06, -0.0013328249333426356, -0.0022205475252121687, -3.635817120084539e-05, -3.2186455882765586e-06, -0.07259867340326309, -0.00012718822108581662, -0.004832137376070023, -0.0005374894244596362, -0.0007133323233574629], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004641473293304443, -3.3378546504536644e-06, -0.0007260785205289721, -0.03214816376566887, -0.031211985275149345, -7.152555099310121e-07, -7.986990567587782e-06, -0.023699693381786346, -0.011002704501152039, -0.033504560589790344, -0.0015122179174795747, -0.00033146608620882034, -0.005905797705054283, -8.201262971851975e-05, -0.016705740243196487], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09294858574867249, -0.5192693471908569], "finish_reason": "stop"}], "metrics": {"energy": 249.577568977356, "energy_per_token": 1.327540260517851, "time": 11.163483, "time_per_token": 0.05938022872340425}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " not extracted_text.strip():", "tokens": [" not", " extracted", "_", "text", ".", "strip", "():", "\n"], "logprobs": [-1.8359084129333496, -0.04049059376120567, -0.00011777184408856556, -6.246371776796877e-05, -1.775853157043457, -0.30442801117897034, -0.020993640646338463, -0.1268787980079651], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -0.4097268879413605, -5.483612312673358e-06, -1.6689160474925302e-05, -0.06843692809343338, -0.742069661617279], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6632929444313049, -0.38305357098579407, -2.5748875486897305e-05, -0.0834563821554184, -5.960462772236497e-07, -1.2159273865108844e-05, -0.004385615698993206, -0.008201255463063717, -4.172238186583854e-05, -1.4424220353248529e-05, -0.166689932346344, -0.02930469997227192], "finish_reason": "stop"}, {"text": " ValueError(f\"{exc} during decoding using '{to_encoding}' encoding.\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "{", "exc", "}", " during", " decoding", " using", " '", "{", "to", "_", "encoding", "}'", " encoding", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.05067933350801468, -2.586808113846928e-05, -0.08834782242774963, -0.6206344366073608, -0.08682245016098022, -3.0810928344726562, -0.6788551211357117, -1.0146821737289429, -1.9816642999649048, -3.235304832458496, -3.9762754440307617, -1.7071499824523926, -0.09393010288476944, -0.19984997808933258, -6.067568756407127e-05, -8.284702198579907e-05, -0.021044418215751648, -0.9185543060302734, -1.3322707414627075, -0.10444604605436325, -0.0027733694296330214, -1.0505411624908447, -0.02371366322040558, -0.0056832158006727695], "finish_reason": "stop"}, {"text": " FileNotFoundError:", "tokens": [" File", "NotFound", "Error", ":", "\n"], "logprobs": [-2.5915439128875732, -0.0034202192910015583, -2.0861407392658293e-05, -0.9554132223129272, -0.05192302167415619], "finish_reason": "stop"}, {"text": " image.comment.split(b'=')[-1].decode(from_encoding).strip()", "tokens": [" image", ".", "comment", ".", "split", "(", "b", "'=", "')", "[-", "1", "]", ".", "decode", "(", "from", "_", "encoding", ")", ".", "strip", "()", "\n"], "logprobs": [-0.25117921829223633, -0.0017297795275226235, -0.09440357983112335, -0.5100552439689636, -1.204569697380066, -0.44835710525512695, -1.8937814235687256, -3.628424644470215, -0.9633947610855103, -1.2116100788116455, -0.003217284567654133, -0.002635460114106536, -0.19687201082706451, -0.6115979552268982, -0.5334129333496094, -0.5294003486633301, -1.4185804502631072e-05, -1.9430925021879375e-05, -0.029387816786766052, -1.9929964542388916, -0.5850875377655029, -0.09479551762342453, -0.07591347396373749], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.2642025649547577, -0.10464189946651459, -0.005934120621532202], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0545349158346653, -0.0012251974549144506, -0.009599950164556503, -0.03402745723724365, -0.4289862811565399, -1.168244216387393e-05, -2.3364747903542593e-05, -0.029582269489765167, -0.0650763213634491, -0.030328014865517616, -0.0009866851614788175, -0.005264467094093561, -3.099393507000059e-05, -9.417489309271332e-06, -0.010234140790998936, -0.012599511072039604], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1786656230688095, -0.0008168459753505886, -0.06662784516811371, -0.06817907094955444, -0.211652472615242, -0.00016783259343355894, -7.1403817855753e-05, -0.05505121871829033, -0.6507053971290588], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5280910730361938, -0.011955157853662968, -0.09384241700172424, -0.00011038171214750037, -1.9430925021879375e-05, -0.09714661538600922, -0.02627803571522236], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0014115142403170466, -0.11892096698284149, -0.8261218667030334, -0.0874834731221199, -0.3887364864349365, -9.16677454370074e-05, -0.013232744298875332, -0.10197751969099045], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09241105616092682, -0.04971180483698845, -2.706014311115723e-05, -0.012428689748048782, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.0011956692906096578, -0.0023677905555814505, -3.242440288886428e-05, -3.576272320060525e-06, -0.06420614570379257, -0.00010430268594063818, -0.003671692218631506, -0.0003586364327929914, -0.0008226824575103819], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004969625733792782, -3.576272320060525e-06, -0.0008798541966825724, -0.03369303047657013, -0.0321374274790287, -7.152555099310121e-07, -7.867782187531702e-06, -0.0225604847073555, -0.012525228783488274, -0.026017319411039352, -0.0018715023761615157, -0.00031883400515653193, -0.007915675640106201, -7.617183291586116e-05, -0.014773845672607422], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.08477883040904999], "finish_reason": "stop"}], "metrics": {"energy": 270.82673304176313, "energy_per_token": 1.4560577045256082, "time": 10.944769, "time_per_token": 0.05884284408602151}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus+eng\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "+", "eng", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -2.0137956142425537, -0.2768285870552063, -0.024780159816145897, -0.37833520770072937, -0.08118023723363876], "finish_reason": "stop"}, {"text": " from_encoding != 'cp1251':", "tokens": [" from", "_", "encoding", " ", "!", "=", " '", "cp", "1", "2", "5", "1", "':", "\n"], "logprobs": [-2.3559603691101074, -2.0503786799963564e-05, -7.879423355916515e-05, -0.687623918056488, -2.455681169521995e-05, -0.00016318420239258558, -1.608759880065918, -0.5140714645385742, -0.003976772073656321, -0.0002619877050165087, -5.507317473529838e-05, -0.0005996812833473086, -0.07149310410022736, -0.08291592448949814], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -0.4097268879413605, -5.483612312673358e-06, -1.6689160474925302e-05, -0.06843692809343338, -0.6653217673301697, -0.0009182051289826632, -0.11446797847747803, -1.7382357120513916, -7.962863310240209e-05, -8.702239938429557e-06, -0.042366400361061096, -0.0315060056746006], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6632929444313049, -0.38305357098579407, -2.5748875486897305e-05, -0.0834563821554184, -5.960462772236497e-07, -1.2159273865108844e-05, -0.004385615698993206, -0.008201255463063717, -4.172238186583854e-05, -1.4424220353248529e-05, -0.166689932346344, -0.02930469997227192], "finish_reason": "stop"}, {"text": " ValueError(f\"{exc.__class__.__name__}: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "exc", ".", "__", "class", "__", ".", "__", "name", "__", "}:", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.05067933350801468, -2.586808113846928e-05, -0.08834782242774963, -0.6206344366073608, -0.08682245016098022, -3.0810928344726562, -0.6788551211357117, -0.8724263906478882, -0.131853386759758, -0.027069875970482826, -0.0008875959902070463, -0.0448867492377758, -0.0009723940747790039, -0.003596862778067589, -0.00022599527437705547, -0.30648109316825867, -0.4318017363548279, -0.08790138363838196, -0.24331821501255035, -0.005351266358047724, -0.5369855165481567], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.138629674911499, -0.03670598194003105, -0.16042588651180267, -4.0531076592742465e-06, -9.775113539944869e-06, -0.14212071895599365, -0.03048563189804554, -0.006333873141556978, -0.0063793594017624855], "finish_reason": "stop"}, {"text": " image.comment.split(';')[-1]", "tokens": [" image", ".", "comment", ".", "split", "('", ";", "')", "[-", "1", "]", "\n"], "logprobs": [-0.25117921829223633, -0.0017297795275226235, -0.09440357983112335, -0.5100552439689636, -1.204569697380066, -1.175917148590088, -0.42273664474487305, -0.22681882977485657, -2.367621421813965, -0.03846260905265808, -0.00883515179157257, -0.9182068109512329], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.7073884010314941, -0.06454930454492569, -0.11071768403053284, -0.03181922808289528], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0545349158346653, -0.0012251974549144506, -0.009599950164556503, -0.03402745723724365, -0.4289862811565399, -1.168244216387393e-05, -2.3364747903542593e-05, -0.029582269489765167, -0.0650763213634491, -0.030328014865517616, -0.0009866851614788175, -0.005264467094093561, -3.099393507000059e-05, -9.417489309271332e-06, -0.010234140790998936, -0.012599511072039604], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.1786656230688095, -0.0008168459753505886, -0.06662784516811371, -0.06817907094955444, -0.211652472615242, -0.00016783259343355894, -7.1403817855753e-05, -0.05505121871829033, -0.8458805680274963, -0.013339557684957981, -0.013217451050877571, -0.03670334070920944, -8.49926145747304e-05, -1.3708974620385561e-05, -0.059805698692798615, -0.06337739527225494], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0782676935195923, -0.003504327731207013, -0.206200510263443, -3.9457496313843876e-05, -1.0251946150674485e-05, -0.04261935129761696, -0.015395843423902988], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0015666127437725663, -0.12064419686794281, -0.8487424254417419, -0.07994216680526733, -0.34266898036003113, -9.190614218823612e-05, -0.012663899920880795, -0.10371383279561996], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09991590678691864, -0.03967162221670151, -2.3841574147809297e-05, -0.010746699757874012, -8.344646857949556e-07, -1.7881377516459906e-06, -0.0010840974282473326, -0.0024531767703592777, -3.7788631743751466e-05, -2.145764938177308e-06, -0.08692015707492828, -0.0001006075763143599, -0.0036083844024688005, -0.00038068200228735805, -0.0008368566050194204], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004542626906186342, -3.3378546504536644e-06, -0.0008640132145956159, -0.025998851284384727, -0.027981190010905266, -8.344646857949556e-07, -8.106198947643861e-06, -0.024449720978736877, -0.012401138432323933, -0.02685137651860714, -0.00156589865218848, -0.0003289635351393372, -0.006866549141705036, -8.785339014139026e-05, -0.01604103483259678], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.0943993553519249, -0.6235716938972473], "finish_reason": "stop"}], "metrics": {"energy": 262.26802140331273, "energy_per_token": 1.298356541600558, "time": 11.7740345, "time_per_token": 0.0582872995049505}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -1.1151421070098877, -5.125986263010418e-06, -2.610649426060263e-05, -0.05864305794239044, -0.023697132244706154], "finish_reason": "stop"}, {"text": " UnicodeDecodeError:", "tokens": [" Un", "icode", "Dec", "ode", "Error", ":", "\n"], "logprobs": [-2.4178643226623535, -3.85038583772257e-05, -0.04813288897275925, -9.536738616588991e-07, -4.386805812828243e-05, -0.10917413979768753, -0.06235085055232048], "finish_reason": "stop"}, {"text": " ValueError(exc)", "tokens": [" Value", "Error", "(", "exc", ")", "\n"], "logprobs": [-0.05156509205698967, -2.729855441430118e-05, -0.08116605132818222, -2.7221412658691406, -0.054711222648620605, -0.399286687374115], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-1.7970850467681885, -0.6200605034828186, -0.0007038023322820663, -0.047237034887075424, -1.5497195136049413e-06, -3.099436753473128e-06, -0.002990775741636753, -0.020493900403380394, -2.6702524337451905e-05, -2.145764938177308e-06, -0.13652965426445007, -0.00017617580306250602, -0.009068019688129425, -0.005294231232255697, -0.012252068147063255], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.23065303266048431, -0.001934444298967719, -0.10368213057518005, -1.3032327890396118], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.34517019987106323, -0.09249713271856308, -0.007538916543126106], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.045403387397527695, -0.0009554826538078487, -0.009498050436377525, -0.034563321620225906, -1.3523727655410767, -7.152301259338856e-05, -1.156323378381785e-05, -0.038134366273880005, -0.009124367497861385], "finish_reason": "stop"}, {"text": "decode(comment, \"utf-8\")", "tokens": ["decode", "(", "comment", ",", " \"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.2002555876970291, -0.0008798541966825724, -0.07958388328552246, -0.07560978829860687, -2.5318095684051514, -0.6350879669189453, -0.6322602033615112, -0.15744000673294067, -0.011873523704707623, -0.045995015650987625, -0.40164512395858765], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.4855979084968567, -0.010767574422061443, -0.08976975083351135, -8.546940807718784e-05, -2.109982233378105e-05, -0.10948938876390457, -0.025058872997760773], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0014034194173291326, -0.15362714231014252, -0.6714584827423096, -0.0002588890492916107, -7.510157047363464e-06, -0.019808920100331306, -0.027072081342339516], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09345347434282303, -0.04326970875263214, -2.5033637939486653e-05, -0.011370970867574215, -9.536738616588991e-07, -2.145764938177308e-06, -0.0012025751639157534, -0.0024975319392979145, -2.992108420585282e-05, -3.3378546504536644e-06, -0.07721613347530365, -0.00011789103882620111, -0.003487934358417988, -0.0003718638326972723, -0.0008821171941235662], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004513196647167206, -3.3378546504536644e-06, -0.0008280424517579377, -0.027893899008631706, -0.03000079281628132, -8.344646857949556e-07, -7.748573807475623e-06, -0.02503841184079647, -0.012330020777881145, -0.027790946885943413, -0.0015995815629139543, -0.00026520551182329655, -0.005769860465079546, -7.760223525110632e-05, -0.01699327491223812], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09520355612039566, -0.5593408942222595], "finish_reason": "stop"}], "metrics": {"energy": 202.11337946701056, "energy_per_token": 1.4233336582183842, "time": 9.254147, "time_per_token": 0.06517004929577465}}
{"outputs": [{"text": " open(filename, \"rb\") as img_file:", "tokens": [" open", "(", "filename", ",", " \"", "rb", "\"", ")", " as", " img", "_", "file", ":", "\n"], "logprobs": [-2.387890100479126, -0.0018233117880299687, -0.02481493167579174, -0.006966467946767807, -0.7315508127212524, -0.007797162514179945, -0.009828035719692707, -0.0025270215701311827, -0.0005566716426983476, -1.6263154745101929, -0.28577330708503723, -0.3285026550292969, -0.009993990883231163, -0.08250986039638519], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -2.8873276710510254], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(from_encoding).encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -0.45964935421943665, -8.940297266235575e-05, -1.7165990357170813e-05, -0.07129842042922974, -0.13703900575637817, -0.004002537112683058, -0.0008699684985913336, -0.004401282407343388, -4.0531076592742465e-06, -1.1801649634435307e-05, -0.00996436644345522, -0.03238270431756973], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.7225346565246582, -0.2967722415924072, -2.52720492426306e-05, -0.07231438159942627, -4.768370445162873e-07, -1.2874520507466514e-05, -0.00633434671908617, -0.007522352505475283, -3.7431014789035544e-05, -1.2755313036905136e-05, -0.20438522100448608, -0.03790116682648659], "finish_reason": "stop"}, {"text": " ValueError(\"Failed to convert text from {encoding} to {encoding}.\".format(encoding=from_encoding)) from exc", "tokens": [" Value", "Error", "(", "\"", "Failed", " to", " convert", " text", " from", " {", "encoding", "}", " to", " {", "encoding", "}", ".", "\"", ".", "format", "(", "encoding", "=", "from", "_", "encoding", "))", " from", " exc", "\n"], "logprobs": [-0.050255659967660904, -2.062299427052494e-05, -0.08763670176267624, -1.7695999145507812, -2.354978084564209, -0.021483564749360085, -0.3534129858016968, -0.7944268584251404, -1.5818731784820557, -2.0701541900634766, -3.309018135070801, -0.37461233139038086, -0.04378992319107056, -0.020749172195792198, -3.3321588039398193, -2.371934413909912, -0.5657209753990173, -0.7735656499862671, -0.6636140942573547, -0.007406987715512514, -0.001532214693725109, -0.5273767113685608, -0.003490429138764739, -0.3490143418312073, -7.366862701019272e-05, -0.00017295771976932883, -0.03950559347867966, -0.07182478159666061, -0.004703885409981012, -0.006348324473947287], "finish_reason": "stop"}, {"text": " (FileNotFoundError, ValueError) as exc:", "tokens": [" (", "File", "NotFound", "Error", ",", " Value", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-1.8853057622909546, -3.343235969543457, -0.0005855038180015981, -3.397406908334233e-05, -0.008056997321546078, -2.362522602081299, -0.0001284993631998077, -0.7711136341094971, -0.00025614796322770417, -0.026819461956620216, -0.006838962901383638, -0.010760379955172539], "finish_reason": "stop"}, {"text": " image.comment.strip()", "tokens": [" image", ".", "comment", ".", "strip", "()", "\n"], "logprobs": [-0.24006472527980804, -0.0015553055563941598, -0.10508962720632553, -0.4852356016635895, -1.7016973495483398, -0.1735977679491043, -0.5166997909545898], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.30037441849708557, -0.09748373180627823, -0.006330556236207485], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04693998396396637, -0.0008599635912105441, -0.010756724514067173, -0.029882438480854034, -0.4823753833770752, -1.2278481335670222e-05, -2.074220174108632e-05, -0.0318005196750164, -0.08144981414079666, -0.016894234344363213, -0.0009941878961399198, -0.007313502952456474, -2.9444261599564925e-05, -1.1324817933200393e-05, -0.012595037929713726, -0.015211292542517185], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2007560282945633, -0.0009519098093733191, -0.0658336877822876, -0.06805724650621414, -0.22836850583553314, -0.0002181292074965313, -5.590759246842936e-05, -0.060496821999549866, -0.8327920436859131, -0.014488961547613144, -0.011329011991620064, -0.03115525096654892, -8.666139910928905e-05, -1.0490362910786644e-05, -0.08013495057821274, -0.07214780896902084], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0701771974563599, -0.003481994615867734, -0.1920488029718399, -3.218599158572033e-05, -1.2397689715726301e-05, -0.05475591495633125, -0.014870980754494667], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.0011235122801735997, -0.1272505521774292, -0.7367462515830994, -0.08172536641359329, -1.1256014108657837, -0.0017610769718885422, -5.149708886165172e-05, -0.013965269550681114, -0.09509820491075516], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09544955939054489, -0.04556730017066002, -2.4914430468925275e-05, -0.014688448049128056, -9.536738616588991e-07, -1.9073468138230965e-06, -0.001178047270514071, -0.0024758896324783564, -2.3841574147809297e-05, -2.861018856492592e-06, -0.07902833074331284, -0.00010942813969450071, -0.0033743607345968485, -0.0003446938644628972, -0.0008175606490112841], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0044538588263094425, -3.814689989667386e-06, -0.0008599635912105441, -0.023951588198542595, -0.02573387883603573, -8.344646857949556e-07, -8.34461570775602e-06, -0.026246452704072, -0.011499431915581226, -0.027726946398615837, -0.0016174342017620802, -0.00034409802174195647, -0.006148234009742737, -7.784063927829266e-05, -0.012763123959302902], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08983611315488815, -0.5327058434486389], "finish_reason": "stop"}], "metrics": {"energy": 251.15686739253988, "energy_per_token": 1.2946230277965973, "time": 11.363714, "time_per_token": 0.05857584536082474}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -2.8873276710510254], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " codecs.decode(extracted_text, from_encoding)", "tokens": [" codec", "s", ".", "decode", "(", "ext", "racted", "_", "text", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-1.768267273902893, -8.344646857949556e-07, -3.4927710657939315e-05, -0.14295515418052673, -0.00271904026158154, -0.02144821174442768, -1.0013530300057027e-05, -6.079655122448457e-06, -2.50339189733495e-06, -0.5717633366584778, -0.15214499831199646, -0.00016473367577418685, -3.7788631743751466e-05, -0.24932622909545898, -0.40170302987098694], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6822994947433472, -0.3546275198459625, -2.9444261599564925e-05, -0.09088480472564697, -4.768370445162873e-07, -1.4305012882687151e-05, -0.005595260299742222, -0.008387104608118534, -3.397406908334233e-05, -1.4781842764932662e-05, -0.18069007992744446, -0.036400385200977325], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.047008682042360306, -2.7179348762729205e-05, -0.10622922331094742, -2.002243995666504], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-1.9590967893600464, -0.619657576084137, -0.0007663412252441049, -0.0575067475438118, -1.5497195136049413e-06, -3.576272320060525e-06, -0.0032278599683195353, -0.022601159289479256, -2.002696055569686e-05, -2.145764938177308e-06, -0.13174617290496826, -0.00019107422849629074, -0.009615299291908741, -0.0052835592068731785, -0.010054653510451317], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.22492057085037231, -0.001957882894203067, -0.08881271630525589, -1.2476677894592285], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3605414927005768, -0.12549997866153717, -0.006449835374951363], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.048039842396974564, -0.001082073082216084, -0.0097008952870965, -0.03288080915808678, -0.5114136338233948, -1.2397689715726301e-05, -2.4437606043647975e-05, -0.03329818695783615, -0.06795790046453476, -0.02159300073981285, -0.0008504349971190095, -0.005229010246694088, -4.3748852476710454e-05, -9.65590606938349e-06, -0.011065899394452572, -0.012956482358276844], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.17360949516296387, -0.0008192281820811331, -0.06057312339544296, -0.07943084836006165, -0.2295440137386322, -0.00021610308613162488, -6.890059739816934e-05, -0.06795333325862885, -0.6702913045883179], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5148517489433289, -0.01093938760459423, -0.08562187850475311, -7.033100700937212e-05, -1.883488948806189e-05, -0.08816130459308624, -0.024630017578601837], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.0013143719406798482, -0.1322997361421585, -0.6704951524734497, -0.08661586046218872, -1.1129229068756104, -0.0014718662714585662, -6.246371776796877e-05, -0.01279184129089117, -0.10146356374025345], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1069687008857727, -0.044649310410022736, -2.0503786799963564e-05, -0.016686394810676575, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0010600429959595203, -0.0022155519109219313, -3.373566141817719e-05, -3.6954811548639555e-06, -0.08269655704498291, -0.00012516192509792745, -0.003130656434223056, -0.00046075694262981415, -0.0009579836623743176], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0051788464188575745, -3.814689989667386e-06, -0.0008354272576980293, -0.02298731543123722, -0.02692320942878723, -7.152555099310121e-07, -9.059865078597795e-06, -0.02488807402551174, -0.012268437072634697, -0.02472933940589428, -0.0014542490243911743, -0.00030119650182314217, -0.0065901800990104675, -7.73638384998776e-05, -0.01206929236650467], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09387160837650299, -0.4733847975730896], "finish_reason": "stop"}], "metrics": {"energy": 213.97100224876414, "energy_per_token": 1.3894220925244425, "time": 9.675647, "time_per_token": 0.06282887662337662}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -0.19483917951583862, -0.3491675555706024, -0.08834531158208847], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -1.1151421070098877, -5.125986263010418e-06, -2.610649426060263e-05, -0.05864305794239044, -0.023697132244706154], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.4150490760803223, -0.00013183678674977273, -1.9550132492440753e-05, -0.11750590056180954, -0.15445785224437714], "finish_reason": "stop"}, {"text": " ValueError(f\"Conversion failed: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Con", "version", " failed", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.05156509205698967, -2.729855441430118e-05, -0.08116605132818222, -0.5675278306007385, -0.0801471695303917, -2.246323585510254, -0.29559195041656494, -1.158247709274292, -0.5630406737327576, -0.03493982180953026, -0.05754254013299942, -0.21623507142066956, -0.0017532228957861662, -0.4118731617927551], "finish_reason": "stop"}, {"text": " UnicodeEncodeError:", "tokens": [" Un", "icode", "Enc", "ode", "Error", ":", "\n"], "logprobs": [-1.219717264175415, -0.03115270845592022, -2.903437376022339, -0.01149542536586523, -0.0001599660754436627, -1.4121198654174805, -0.04247140511870384], "finish_reason": "stop"}, {"text": " image.comment.strip()", "tokens": [" image", ".", "comment", ".", "strip", "()", "\n"], "logprobs": [-0.23065303266048431, -0.001934444298967719, -0.10368213057518005, -0.4698244333267212, -1.5218417644500732, -0.1795356720685959, -0.5137311816215515], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.34517019987106323, -0.09249713271856308, -0.007538916543126106], "finish_reason": "stop"}, {"text": " comment.decode(\"utf8\").encode(from_encoding).decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "8", "\"", ")", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.045403387397527695, -0.0009554826538078487, -0.009498050436377525, -0.034563321620225906, -2.580890417098999, -0.2712566554546356, -0.752333402633667, -0.00016378014697693288, -0.03325702250003815, -1.5699974298477173, -0.6541271805763245, -0.00455591781064868, -1.016579508781433, -6.83045873302035e-05, -1.645074735279195e-05, -0.018307752907276154, -0.02618328109383583, -0.0005267662927508354, -0.0013424679636955261, -0.013884034939110279, -8.761498611420393e-05, -1.2755313036905136e-05, -0.0038966217543929815, -0.0066284313797950745], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2002555876970291, -0.0008798541966825724, -0.07958388328552246, -0.07560978829860687, -0.20649398863315582, -0.00021050144277978688, -5.864924969500862e-05, -0.05765226110816002, -0.7567384839057922, -0.01557308342307806, -0.013298386707901955, -0.036419350653886795, -0.000105375460407231, -1.3470558769768104e-05, -0.0859944149851799, -0.06378234922885895], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0419516563415527, -0.003524641040712595, -0.1880645751953125, -4.8040190449682996e-05, -1.1920858014491387e-05, -0.04224081709980965, -0.012759239412844181], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0011990031925961375, -0.12547622621059418, -0.7449732422828674, -0.06859955936670303, -0.386793851852417, -8.976056415122002e-05, -0.011707644909620285, -0.11043357104063034], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1048586517572403, -0.046124570071697235, -2.4914430468925275e-05, -0.013033085502684116, -9.536738616588991e-07, -2.145764938177308e-06, -0.0011195826809853315, -0.002352448645979166, -3.516612196108326e-05, -4.291525328881107e-06, -0.07033742964267731, -0.00012396997772157192, -0.0028388698119670153, -0.0003660247311927378, -0.000969297660049051], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004708987195044756, -3.933898824470816e-06, -0.0008013612823560834, -0.024015134200453758, -0.02876855619251728, -8.344646857949556e-07, -8.34461570775602e-06, -0.023613890632987022, -0.012168456800282001, -0.02782352641224861, -0.0016601602546870708, -0.00036197309964336455, -0.005217744503170252, -8.594620157964528e-05, -0.01451551541686058], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.106232650578022, -0.587992787361145], "finish_reason": "stop"}], "metrics": {"energy": 259.681003112793, "energy_per_token": 1.527535312428194, "time": 10.29998, "time_per_token": 0.06058811764705882}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -0.45964935421943665, -8.940297266235575e-05, -1.7165990357170813e-05, -0.07129842042922974, -2.0793569087982178], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.4150490760803223, -0.00013183678674977273, -1.9550132492440753e-05, -0.11750590056180954, -0.15445785224437714], "finish_reason": "stop"}, {"text": " ValueError(\"Failed to decode the extracted text.\") from exc", "tokens": [" Value", "Error", "(", "\"", "Failed", " to", " decode", " the", " extracted", " text", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.05156509205698967, -2.729855441430118e-05, -0.08116605132818222, -1.7902469635009766, -2.4352028369903564, -0.018799228593707085, -1.2248811721801758, -1.4047203063964844, -0.5817756056785583, -0.015003455802798271, -1.6161644458770752, -0.43192869424819946, -0.07878849655389786, -0.01900510862469673, -0.0006516240537166595, -0.009216737933456898], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.1217759847640991, -0.025511251762509346, -0.15592709183692932, -3.814689989667386e-06, -9.298280929215252e-06, -0.13802503049373627, -0.02883758768439293, -0.007344744633883238, -0.007775989361107349], "finish_reason": "stop"}, {"text": " image.comment.split(\"/\")[1]", "tokens": [" image", ".", "comment", ".", "split", "(", "\"", "/\"", ")[", "1", "]", "\n"], "logprobs": [-0.20913995802402496, -0.0016853903653100133, -0.08839365839958191, -0.5725278258323669, -1.0576257705688477, -0.5150048732757568, -0.32515034079551697, -1.3547849655151367, -0.8099645376205444, -0.4313737452030182, -0.05069145932793617, -0.7657121419906616], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3294418156147003, -0.11822809278964996, -0.0072633251547813416], "finish_reason": "stop"}, {"text": " comment.decode(\"utf8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.04561012610793114, -0.0011123190633952618, -0.009138897061347961, -0.02940818853676319, -2.522249698638916, -0.2528730034828186, -0.6433356404304504, -0.00017736769223120064, -0.03871024027466774, -0.25538432598114014], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.18118588626384735, -0.0009047467028722167, -0.06602475047111511, -0.07506716996431351, -0.23498597741127014, -0.00013159839727450162, -4.660974445869215e-05, -0.05106646567583084, -0.8487727046012878, -0.01624068059027195, -0.012526994571089745, -0.0352921299636364, -8.475421054754406e-05, -1.2516897186287679e-05, -0.0790945291519165, -0.06582073867321014], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5420852303504944, -0.013214627280831337, -0.08245860040187836, -7.784063927829266e-05, -1.6569954823353328e-05, -0.10086216032505035, -0.026348982006311417], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0013513966696336865, -2.106398582458496, -0.014029805548489094], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09494383633136749, -0.045305073261260986, -2.407998726994265e-05, -0.013565028086304665, -9.536738616588991e-07, -1.6689286894688848e-06, -0.0012504386249929667, -0.0025710167828947306, -3.0040289857424796e-05, -4.0531076592742465e-06, -0.0809905007481575, -0.00012981049076188356, -0.0028229409363120794, -0.00036864637513644993, -0.0009703694959171116], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.005051231477409601, -2.9802276912960224e-06, -0.00096703483723104, -0.02402898482978344, -0.026078876107931137, -9.536738616588991e-07, -8.4638240878121e-06, -0.02436014451086521, -0.01095459796488285, -0.028602097183465958, -0.0015976772410795093, -0.00037531962152570486, -0.008991939015686512, -8.21318244561553e-05, -0.012651893310248852], "finish_reason": "stop"}, {"text": " comment<|endoftext|>\"\"\"", "tokens": [" comment", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.08926485478878021, -2.1362051963806152, -1.2040065485052764e-05, -2.3841830625315197e-06, -0.0032410495914518833, -1.168244216387393e-05, -2.380775213241577, -0.006511423736810684, -0.002019391627982259, -0.0005957497633062303, -0.252157986164093], "finish_reason": "stop"}], "metrics": {"energy": 257.5554354763031, "energy_per_token": 1.5800946961736386, "time": 9.889721, "time_per_token": 0.06067313496932515}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -0.4662676453590393, -0.0007007050444371998, -0.08249789476394653, -1.3699893951416016, -8.487341256113723e-05, -1.1444026313256472e-05, -0.03111838921904564, -0.027942009270191193], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.677395224571228, -0.29252639412879944, -2.288792165927589e-05, -0.08320192992687225, -4.768370445162873e-07, -1.5020257706055418e-05, -0.005404860246926546, -0.008132676593959332, -3.7431014789035544e-05, -1.1324817933200393e-05, -0.20776326954364777, -0.038092710077762604], "finish_reason": "stop"}, {"text": " ValueError(exc) from exc", "tokens": [" Value", "Error", "(", "exc", ")", " from", " exc", "\n"], "logprobs": [-0.04525084048509598, -2.2649508537142538e-05, -0.09486761689186096, -2.7781708240509033, -0.04622678831219673, -1.2895070314407349, -0.03530110791325569, -0.02692471817135811], "finish_reason": "stop"}, {"text": " OSError as exc:", "tokens": [" O", "SE", "rror", " as", " exc", ":", "\n"], "logprobs": [-1.7507860660552979, -0.00022921319759916514, -2.658331868587993e-05, -0.27801209688186646, -0.06876305490732193, -0.0017520328983664513, -0.005057636648416519], "finish_reason": "stop"}, {"text": " image.comment.encode('cp1251').decode('utf8')", "tokens": [" image", ".", "comment", ".", "encode", "('", "cp", "1", "2", "5", "1", "')", ".", "decode", "('", "utf", "8", "')", "\n"], "logprobs": [-0.22826632857322693, -0.0016345723997801542, -0.09183137118816376, -0.5457480549812317, -2.023392915725708, -3.0022740364074707, -1.6093319654464722, -0.04544394090771675, -0.0018052248051390052, -0.0009302341495640576, -0.003896503010764718, -0.07007928192615509, -0.1926048845052719, -0.006667154375463724, -0.31612831354141235, -0.715406596660614, -0.27530738711357117, -0.024933652952313423, -0.15850839018821716], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.4016118049621582, -0.06749279052019119, -0.09269893169403076, -0.02347114123404026], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.05543046072125435, -0.0011530425399541855, -0.010663080960512161, -0.03408149257302284, -0.40604573488235474, -1.1205610462639015e-05, -1.9788545614574105e-05, -0.02837570384144783, -0.059150613844394684, -0.023568017408251762, -0.000920825288631022, -0.006474115885794163, -3.218599158572033e-05, -9.179073458653875e-06, -0.0134189547970891, -0.01799003779888153], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding, errors=\"ignore\") or \"\"", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ",", " errors", "=", "\"", "ignore", "\"", ")", " or", " \"", "\"", "\n"], "logprobs": [-0.1671469360589981, -0.0009107018122449517, -0.06712021678686142, -0.07038764655590057, -0.21663101017475128, -0.00015984688070602715, -6.90197994117625e-05, -0.05795987322926521, -0.7799844741821289, -0.01607470214366913, -0.011707762256264687, -0.031237753108143806, -0.0001110968878492713, -1.4185804502631072e-05, -2.651360034942627, -0.763381838798523, -0.009561575949192047, -0.00029118589009158313, -0.6183777451515198, -7.712543447269127e-05, -0.003998025320470333, -2.3185317516326904, -0.24354708194732666, -0.007833711802959442, -0.006435859017074108], "finish_reason": "stop"}, {"text": "decode(\"utf-8\", \"ignore\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.486550897359848, -0.010762385092675686, -3.0192322731018066, -0.1465398371219635, -0.6171544194221497, -0.01525672897696495, -0.0009633429581299424, -1.6608904600143433, -0.5673936605453491, -0.6495652794837952, -0.0001896439935080707, -0.0036929522175341845, -0.028283115476369858], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.0014912686310708523, -0.13541169464588165, -0.7872899174690247, -0.0885356143116951, -1.0645897388458252, -0.0014334175502881408, -5.221230458118953e-05, -0.014121371321380138, -0.10210174322128296], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09278758615255356, -0.048181965947151184, -2.610649426060263e-05, -0.012412677519023418, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.001167926355265081, -0.0021106365602463484, -3.0636318115284666e-05, -3.576272320060525e-06, -0.07078477740287781, -0.00012039413559250534, -0.0027133338153362274, -0.0003225283289793879, -0.0008268513483926654], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004260154906660318, -3.576272320060525e-06, -0.0008310201810672879, -0.02680414356291294, -0.027641139924526215, -9.536738616588991e-07, -7.033323527139146e-06, -0.02451067604124546, -0.010029751807451248, -0.02778596244752407, -0.0016511153662577271, -0.0003494605771265924, -0.006863944232463837, -8.785339014139026e-05, -0.016114821657538414], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09807462990283966, -0.5961189270019531], "finish_reason": "stop"}], "metrics": {"energy": 271.83089436531066, "energy_per_token": 1.408450229872076, "time": 11.340575, "time_per_token": 0.05875945595854922}}
{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.8615455627441406, -0.017624201253056526, -0.0447528176009655], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -0.4662676453590393, -0.0007007050444371998, -0.08249789476394653, -1.3699893951416016, -8.487341256113723e-05, -1.1444026313256472e-05, -0.03111838921904564, -0.027942009270191193], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.677395224571228, -0.29252639412879944, -2.288792165927589e-05, -0.08320192992687225, -4.768370445162873e-07, -1.5020257706055418e-05, -0.005404860246926546, -0.008132676593959332, -3.7431014789035544e-05, -1.1324817933200393e-05, -0.20776326954364777, -0.038092710077762604], "finish_reason": "stop"}, {"text": " ValueError(exc) from exc", "tokens": [" Value", "Error", "(", "exc", ")", " from", " exc", "\n"], "logprobs": [-0.04525084048509598, -2.2649508537142538e-05, -0.09486761689186096, -2.7781708240509033, -0.04622678831219673, -1.2895070314407349, -0.03530110791325569, -0.02692471817135811], "finish_reason": "stop"}, {"text": " IOError as exc:", "tokens": [" IO", "Error", " as", " exc", ":", "\n"], "logprobs": [-3.177644968032837, -0.0002466136065777391, -0.31355583667755127, -0.118706613779068, -0.004907230380922556, -0.009338508360087872], "finish_reason": "stop"}, {"text": " image.comment or \"\"", "tokens": [" image", ".", "comment", " or", " \"", "\"", "\n"], "logprobs": [-0.22826632857322693, -0.0016345723997801542, -0.09183137118816376, -2.6518194675445557, -0.21120639145374298, -0.031610310077667236, -0.0701107308268547], "finish_reason": "stop"}, {"text": " isinstance(comment, bytes):", "tokens": [" isinstance", "(", "comment", ",", " bytes", "):", "\n"], "logprobs": [-3.303518772125244, -0.00011097769311163574, -0.0007286992622539401, -0.0009925207123160362, -0.8387624621391296, -0.02419690415263176, -0.020864292979240417], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.058163922280073166, -0.001077905297279358, -0.009217564947903156, -0.03131839632987976, -1.1846657991409302, -6.627816765103489e-05, -1.7404405298293568e-05, -0.04992389306426048, -0.00808679684996605], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding) or comment.decode(from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", " or", " comment", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.1931888610124588, -0.0007060657371766865, -0.06320597231388092, -0.07735329121351242, -0.205845445394516, -0.00014494798961095512, -6.270212179515511e-05, -0.05212785303592682, -3.2318434715270996, -1.3317344188690186, -0.3934292793273926, -0.012779836542904377, -0.060155753046274185, -0.7648767828941345, -5.507317473529838e-05, -2.5152843591058627e-05, -0.08469580858945847, -0.09299616515636444], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0370478630065918, -0.003554100636392832, -0.17819620668888092, -4.172238186583854e-05, -1.168244216387393e-05, -0.04461259767413139, -0.014577195979654789], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0018217648612335324, -2.0745108127593994, -0.01254771463572979], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09534217417240143, -0.040725935250520706, -2.3603161025675945e-05, -0.013999242335557938, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.001420323271304369, -0.0025888520758599043, -2.777537883957848e-05, -3.4570634852570947e-06, -0.08196141570806503, -0.00013553177996072918, -0.003017042065039277, -0.00035232058144174516, -0.0008765193051658571], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004266683477908373, -3.2186455882765586e-06, -0.0008357845945283771, -0.030193159356713295, -0.029921775683760643, -8.344646857949556e-07, -6.794906312279636e-06, -0.02441272884607315, -0.012129239737987518, -0.02552182599902153, -0.0016596842324361205, -0.00027056847466155887, -0.00705098919570446, -7.354942499659956e-05, -0.014801565557718277], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08762457966804504, -0.562223494052887], "finish_reason": "stop"}], "metrics": {"energy": 245.0817809638976, "energy_per_token": 1.522247086732283, "time": 9.681859, "time_per_token": 0.0601357701863354}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -0.19483917951583862, -0.3491675555706024, -0.08834531158208847], "finish_reason": "stop"}, {"text": " extracted_text == \"\":", "tokens": [" extracted", "_", "text", " ==", " \"", "\":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -3.153654098510742, -0.5107064843177795, -0.24295850098133087, -0.11097291857004166], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2738569378852844, -4.1960789531003684e-05, -1.156323378381785e-05, -0.009261030703783035, -0.2753075659275055, -0.005738214123994112, -1.1623265743255615, -9.619726915843785e-05, -1.3947389561508317e-05, -0.06313490867614746, -0.002775033703073859, -0.00017736769223120064, -0.0049935863353312016, -0.015177125111222267, -1.9907753085135482e-05, -9.65590606938349e-06, -0.022870225831866264, -0.023451577872037888], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.7313278913497925, -0.3530963957309723, -2.6702524337451905e-05, -0.0837046355009079, -4.768370445162873e-07, -1.2755313036905136e-05, -0.005782542284578085, -0.007471830118447542, -3.957670196541585e-05, -1.3351351299206726e-05, -0.17735794186592102, -0.029649509117007256], "finish_reason": "stop"}, {"text": " ValueError(\"Could not decode text to UTF-8\") from exc", "tokens": [" Value", "Error", "(", "\"", "Could", " not", " decode", " text", " to", " U", "TF", "-", "8", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.05573830381035805, -2.2172682292875834e-05, -0.09500855952501297, -1.7152831554412842, -3.0164637565612793, -0.26801031827926636, -1.0471888780593872, -1.0021218061447144, -3.493039131164551, -2.19411039352417, -0.0019593106117099524, -0.17801883816719055, -0.000508417550008744, -1.3533380031585693, -0.06253530830144882, -0.07733839750289917, -0.0007955246837809682, -0.011126496829092503], "finish_reason": "stop"}, {"text": " PIL.UnidentifiedImageError as exc:", "tokens": [" P", "IL", ".", "Un", "identified", "Image", "Error", " as", " exc", ":", "\n"], "logprobs": [-3.2464165687561035, -0.00976133905351162, -0.0036986530758440495, -0.46383464336395264, -0.015456413850188255, -0.05778391286730766, -0.0003122795606032014, -0.42028719186782837, -0.046627938747406006, -0.005288658197969198, -0.004874963779002428], "finish_reason": "stop"}, {"text": " image.comment.strip()", "tokens": [" image", ".", "comment", ".", "strip", "()", "\n"], "logprobs": [-0.2340589314699173, -0.001739894854836166, -0.08308597654104233, -0.5120120644569397, -1.5796294212341309, -0.1682865023612976, -0.5405559539794922], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3288557827472687, -0.1193714439868927, -0.00690396036952734], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.048999905586242676, -0.0012646066024899483, -0.010167471133172512, -0.0288492850959301, -0.4630291759967804, -1.1920858014491387e-05, -2.074220174108632e-05, -0.03376022353768349, -0.07535664737224579, -0.02275790087878704, -0.0009563163621351123, -0.008702566847205162, -3.576214658096433e-05, -9.179073458653875e-06, -0.013528217561542988, -0.017336612567305565], "finish_reason": "stop"}, {"text": "decode(comment, \"raw-unicode-escape\")", "tokens": ["decode", "(", "comment", ",", " \"", "raw", "-", "un", "icode", "-", "escape", "\"", ")", "\n"], "logprobs": [-0.20408189296722412, -0.0007768235518597066, -0.06630168855190277, -0.08487432450056076, -2.403427839279175, -2.628227710723877, -1.0524604320526123, -0.06722632795572281, -0.0030841901898384094, -0.00016544880054425448, -0.06120731681585312, -3.242440288886428e-05, -0.04944181069731712, -0.7143895626068115], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.42197421193122864, -0.0127838384360075, -2.85257625579834, -0.1737632006406784, -0.6890191435813904, -0.01358866598457098, -0.0011187491472810507, -0.24450980126857758, -0.05841436982154846], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.001190549461171031, -0.15435722470283508, -0.593742311000824, -0.0001984637783607468, -7.510157047363464e-06, -0.019525934010744095, -0.030283721163868904], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.10025349259376526, -0.04392683506011963, -2.1457441107486375e-05, -0.010616491548717022, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.001013599568977952, -0.0025889708194881678, -2.658331868587993e-05, -2.861018856492592e-06, -0.06973912566900253, -0.00012957210128661245, -0.0034834202378988266, -0.00038413776201196015, -0.0007893307483755052], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004257899709045887, -3.576272320060525e-06, -0.000985136954113841, -0.02841857634484768, -0.02452068030834198, -9.536738616588991e-07, -8.4638240878121e-06, -0.02557806670665741, -0.01195492222905159, -0.030113812536001205, -0.0018641252536326647, -0.0002991705550812185, -0.005433197133243084, -8.880697714630514e-05, -0.012731109745800495], "finish_reason": "stop"}, {"text": " comment or \"\"", "tokens": [" comment", " or", " \"", "\"", "\n"], "logprobs": [-0.09101095795631409, -2.496907949447632, -0.01793840155005455, -0.0054106698371469975, -0.63941490650177], "finish_reason": "stop"}], "metrics": {"energy": 240.25829771232605, "energy_per_token": 1.2779696686825854, "time": 10.937042, "time_per_token": 0.05817575531914894}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(to_encoding, errors=\"ignore\")", "tokens": [" extracted", "_", "text", ".", "decode", "(", "to", "_", "encoding", ",", " errors", "=", "\"", "ignore", "\"", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -1.1151421070098877, -5.125986263010418e-06, -2.610649426060263e-05, -2.916114568710327, -0.8224012851715088, -0.7158293128013611, -0.001036583329550922, -0.840752899646759, -8.701899787411094e-05, -0.0006961782928556204, -0.06849392503499985], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.7225346565246582, -0.2967722415924072, -2.52720492426306e-05, -0.07231438159942627, -4.768370445162873e-07, -1.2874520507466514e-05, -0.00633434671908617, -0.007522352505475283, -3.7431014789035544e-05, -1.2755313036905136e-05, -0.20438522100448608, -0.03790116682648659], "finish_reason": "stop"}, {"text": " ValueError(str(exc)) from exc", "tokens": [" Value", "Error", "(", "str", "(", "exc", "))", " from", " exc", "\n"], "logprobs": [-0.050255659967660904, -2.062299427052494e-05, -0.08763670176267624, -2.9915695190429688, -0.0007266741595230997, -0.0018261675722897053, -0.039671506732702255, -1.1122374534606934, -0.03891056776046753, -0.016846058890223503], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError, RuntimeError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ",", " Runtime", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-1.8921571969985962, -0.692583441734314, -0.0010713557712733746, -0.05902363732457161, -1.4305104514278355e-06, -3.4570634852570947e-06, -0.003265170380473137, -0.023116622120141983, -2.5629668016335927e-05, -2.145764938177308e-06, -2.1313793659210205, -2.8250832557678223, -0.001949435449205339, -0.25325313210487366, -0.00017808281700126827, -0.013502932153642178, -0.005958294961601496, -0.008488290011882782], "finish_reason": "stop"}, {"text": " image.comment.split(\";\", 1)[0]  # Try to get the first comment", "tokens": [" image", ".", "comment", ".", "split", "(", "\"", ";", "\"", ",", " ", "1", ")[", "0", "]", "  ", "#", " Try", " to", " get", " the", " first", " comment", "\n"], "logprobs": [-0.22426120936870575, -0.002390980953350663, -0.09607101231813431, -0.5208996534347534, -0.9891369938850403, -0.499044805765152, -0.29468482732772827, -0.7421476244926453, -0.15487249195575714, -2.221883773803711, -0.22880148887634277, -0.07316368818283081, -0.2022513598203659, -0.6474214196205139, -0.0019740634597837925, -3.1480984687805176, -0.0005937243695370853, -4.315285682678223, -0.4461744725704193, -1.5795164108276367, -0.1313842386007309, -0.9877369999885559, -0.2731780707836151, -1.0358061790466309], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3336763381958008, -0.10523803532123566, -0.007434912957251072], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.048275116831064224, -0.0010249129263684154, -0.009839368052780628, -0.03161481395363808, -0.46507224440574646, -1.156323378381785e-05, -2.13382354559144e-05, -0.025779303163290024, -0.07103485614061356, -0.021689826622605324, -0.0009829933987930417, -0.0068731787614524364, -3.182837463100441e-05, -8.821448318485636e-06, -0.01136967446655035, -0.014395784586668015], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.17770910263061523, -0.0008648469229228795, -0.05060986801981926, -0.07729150354862213, -0.21090580523014069, -0.00020692592079285532, -6.294052582234144e-05, -0.05922892689704895, -0.6655530333518982], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.4524003565311432, -0.012379827909171581, -0.08230578154325485, -9.643566590966657e-05, -1.811964830267243e-05, -0.10053210705518723, -0.02402782067656517], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0011257746955379844, -0.1287037879228592, -0.703557014465332, -0.00022885564249008894, -7.748573807475623e-06, -0.018237639218568802, -0.0283204298466444], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09143446385860443, -0.038151003420352936, -2.682172998902388e-05, -0.011551165021955967, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0010065733222290874, -0.0021350225433707237, -3.218599158572033e-05, -3.2186455882765586e-06, -0.07857231050729752, -0.00012206286191940308, -0.0026525810826569796, -0.00038842763751745224, -0.0008112476789392531], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0038353470154106617, -3.3378546504536644e-06, -0.000894027529284358, -0.024521145969629288, -0.026759576052427292, -8.344646857949556e-07, -6.6756979322235566e-06, -0.023924702778458595, -0.012170812115073204, -0.027512067928910255, -0.001396991079673171, -0.0003887851198669523, -0.009162167087197304, -7.855583680793643e-05, -0.014789115637540817], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.07761707156896591, -0.5332287549972534], "finish_reason": "stop"}], "metrics": {"energy": 277.5840905094145, "energy_per_token": 1.5004545432941325, "time": 10.923535, "time_per_token": 0.05904613513513513}}
{"outputs": [{"text": " open(filename, \"rb\") as im:", "tokens": [" open", "(", "filename", ",", " \"", "rb", "\"", ")", " as", " im", ":", "\n"], "logprobs": [-2.387890100479126, -0.0018233117880299687, -0.02481493167579174, -0.006966467946767807, -0.7315508127212524, -0.007797162514179945, -0.009828035719692707, -0.0025270215701311827, -0.0005566716426983476, -3.982656955718994, -1.6535499095916748, -0.0825193002820015], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -1.009099006652832], "finish_reason": "stop"}, {"text": " (ValueError, UnicodeDecodeError, LookupError):", "tokens": [" (", "Value", "Error", ",", " Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.677395224571228, -1.9430543184280396, -1.8954096958623268e-05, -0.006543045397847891, -2.6013424396514893, -0.00014435203047469258, -0.13449738919734955, -1.6689286894688848e-06, -3.862306402879767e-05, -1.3637220859527588, -0.008969137445092201, -2.5748875486897305e-05, -6.6756979322235566e-06, -0.23555834591388702, -0.027433086186647415], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to convert extracted text to {to_encoding}: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " convert", " extracted", " text", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.05177474766969681, -2.2053474822314456e-05, -0.10618998855352402, -0.5603065490722656, -0.0740920826792717, -1.131788730621338, -0.4043101668357849, -0.0019356340635567904, -0.44760018587112427, -1.805743932723999, -0.031229432672262192, -0.9445000886917114, -1.0364432334899902, -0.011097141541540623, -9.798523387871683e-05, -7.92710343375802e-05, -0.5461760759353638, -0.0187002494931221, -0.06587754935026169, -0.10119921714067459, -0.0014986485475674272, -0.3606084883213043], "finish_reason": "stop"}, {"text": " Exception as exc:", "tokens": [" Exception", " as", " exc", ":", "\n"], "logprobs": [-3.145756244659424, -0.08825746178627014, -0.04267178475856781, -0.005245968233793974, -0.025216972455382347], "finish_reason": "stop"}, {"text": " image.comment.strip() or image.info[\"comment\"] or \"\"", "tokens": [" image", ".", "comment", ".", "strip", "()", " or", " image", ".", "info", "[", "\"", "comment", "\"", "]", " or", " \"", "\"", "\n"], "logprobs": [-0.21374349296092987, -0.001813197392039001, -0.11606823652982712, -0.522026002407074, -1.5838525295257568, -0.14437337219715118, -3.2819228172302246, -2.1286306381225586, -0.000995974289253354, -0.9367072582244873, -2.2155492305755615, -0.011465491726994514, -0.8230818510055542, -0.003007890423759818, -0.001127441762946546, -1.8355638980865479, -0.1170005053281784, -0.01643676869571209, -0.033391695469617844], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3655361533164978, -0.11061139404773712, -0.006231402512639761], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.05253557860851288, -0.0008624648326076567, -0.010987140238285065, -0.03406063839793205, -1.2517039775848389, -7.462222856702283e-05, -1.645074735279195e-05, -0.04557857662439346, -0.010246766731142998], "finish_reason": "stop"}, {"text": "decode(", "tokens": ["decode", "(", "\n"], "logprobs": [-0.17968618869781494, -0.0007664603181183338, -2.8666133880615234], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0316802263259888, -0.003590329783037305, -0.1948109120130539, -4.51792984677013e-05, -1.2159273865108844e-05, -0.04386032000184059, -0.01374365109950304], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0015851801726967096, -0.13394586741924286, -0.8561766147613525, -0.07734358310699463, -0.4487573504447937, -7.92710343375802e-05, -0.014947320334613323, -0.08709707856178284], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09005478024482727, -0.042083900421857834, -2.1934269170742482e-05, -0.01699233613908291, -1.0728830375228426e-06, -1.7881377516459906e-06, -0.001095290994271636, -0.002266816096380353, -2.682172998902388e-05, -3.099436753473128e-06, -0.0752730667591095, -0.0001006075763143599, -0.0032360588666051626, -0.0003601856005843729, -0.0008482910343445837], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.005049927160143852, -3.3378546504536644e-06, -0.0008880723617039621, -0.032107990235090256, -0.029240794479846954, -9.536738616588991e-07, -7.390948667307384e-06, -0.023282017558813095, -0.012715337797999382, -0.02970910631120205, -0.0015443552983924747, -0.00032014489988796413, -0.006433016154915094, -9.393251093570143e-05, -0.013709199614822865], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09359081089496613, -0.5496888160705566], "finish_reason": "stop"}], "metrics": {"energy": 258.69393665504447, "energy_per_token": 1.5217290391473204, "time": 10.2943325, "time_per_token": 0.060554897058823526}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus+eng\", output_type=pytesseract.Output.DARK_TEXT)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "+", "eng", "\"", ",", " output", "_", "type", "=", "py", "t", "ess", "er", "act", ".", "Output", ".", "D", "ARK", "_", "TEXT", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -2.0137956142425537, -0.2768285870552063, -0.024780159816145897, -1.1564152240753174, -1.763331651687622, -0.18995881080627441, -0.06325767189264297, -0.03904975578188896, -0.9924303293228149, -1.3589766240329482e-05, -2.6225699912174605e-05, -0.0007359656738117337, -3.266281055402942e-05, -7.390703103737906e-05, -0.01255948655307293, -0.19627626240253448, -1.1506149768829346, -2.097750663757324, -0.3262104094028473, -0.13226047158241272, -0.11613117903470993, -0.04440576583147049], "finish_reason": "stop"}, {"text": " len(extracted_text.strip()):", "tokens": [" len", "(", "ext", "racted", "_", "text", ".", "strip", "()", "):", "\n"], "logprobs": [-2.4373984336853027, -0.0004866131057497114, -0.005774127319455147, -2.90866428258596e-05, -1.1324817933200393e-05, -1.0251946150674485e-05, -1.7516169548034668, -0.2002524584531784, -2.9205825328826904, -0.11800415813922882, -0.10640864819288254], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -0.4097268879413605, -5.483612312673358e-06, -1.6689160474925302e-05, -0.06843692809343338, -0.742069661617279], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6632929444313049, -0.38305357098579407, -2.5748875486897305e-05, -0.0834563821554184, -5.960462772236497e-07, -1.2159273865108844e-05, -0.004385615698993206, -0.008201255463063717, -4.172238186583854e-05, -1.4424220353248529e-05, -0.166689932346344, -0.02930469997227192], "finish_reason": "stop"}, {"text": " ValueError(f\"Error decoding text: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " decoding", " text", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.05067933350801468, -2.586808113846928e-05, -0.08834782242774963, -0.6206344366073608, -0.08682245016098022, -1.7891844511032104, -1.9010603427886963, -0.6864659190177917, -0.8506265878677368, -0.01231082808226347, -0.07857517153024673, -0.13615603744983673, -0.0010799296433106065, -0.4314541220664978], "finish_reason": "stop"}, {"text": " (FileNotFoundError, RuntimeError) as exc:", "tokens": [" (", "File", "NotFound", "Error", ",", " Runtime", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-2.0704238414764404, -3.2901504039764404, -0.0005918181850574911, -3.290122185717337e-05, -0.008728447370231152, -2.825275421142578, -0.00386040355078876, -0.5965035557746887, -0.0002588890492916107, -0.023947980254888535, -0.0036570830270648003, -0.006749095860868692], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.25117921829223633, -0.0017297795275226235, -2.996699571609497, -0.17818932235240936, -0.006787577178329229, -0.3852505087852478, -0.0020870824810117483, -0.022192351520061493, -0.0013913960428908467, -0.5448142290115356, -0.07947907596826553, -0.004091939423233271, -0.0002787916746456176, -0.23349447548389435], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.32047799229621887, -0.09484777599573135, -0.006409682333469391], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.055594656616449356, -0.0009286858257837594, -0.010395428165793419, -0.029076149687170982, -0.5157079696655273, -1.3708974620385561e-05, -1.9311717551317997e-05, -0.032901689410209656, -0.07620546966791153, -0.023746958002448082, -0.0009615565068088472, -0.006058305036276579, -3.325883881188929e-05, -9.179073458653875e-06, -0.01250933576375246, -0.01212217379361391], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.17245961725711823, -0.0009108209051191807, -0.049272969365119934, -0.06725765019655228, -0.2187548577785492, -0.00017510310863144696, -6.222531374078244e-05, -0.0551723837852478, -0.6858550906181335], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5356022119522095, -0.013070149347186089, -0.10245935618877411, -8.5588610090781e-05, -2.098061486321967e-05, -0.10495299845933914, -0.028660830110311508], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0013391345273703337, -2.215064287185669, -0.014549704268574715], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09873323142528534, -0.046591755002737045, -2.3841574147809297e-05, -0.01148528978228569, -1.0728830375228426e-06, -2.145764938177308e-06, -0.0011405398836359382, -0.0024334362242370844, -3.421248038648628e-05, -2.861018856492592e-06, -0.07263448089361191, -0.00010179955279454589, -0.004994534887373447, -0.000476246903417632, -0.0009241600637324154], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004467862658202648, -3.4570634852570947e-06, -0.0008930747280828655, -0.02755173109471798, -0.029511552304029465, -9.536738616588991e-07, -8.4638240878121e-06, -0.022379115223884583, -0.011941257864236832, -0.029525209218263626, -0.00163588160648942, -0.0002983363519888371, -0.008933220990002155, -8.201262971851975e-05, -0.01314639113843441], "finish_reason": "stop"}, {"text": " comment<|endoftext|>import os", "tokens": [" comment", "<", "|", "end", "of", "text", "|>", "import", " os", "\n"], "logprobs": [-0.07741618156433105, -2.1074042320251465, -1.2278481335670222e-05, -2.9802276912960224e-06, -0.0035147815942764282, -1.0251946150674485e-05, -0.10931799560785294, -1.0371031761169434, -1.730601191520691, -0.08497802168130875], "finish_reason": "stop"}], "metrics": {"energy": 251.06358346652985, "energy_per_token": 1.242889027062029, "time": 11.558038, "time_per_token": 0.057218009900990095}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:  # OCR can produce empty string", "tokens": [" extracted", "_", "text", ":", "  ", "#", " O", "CR", " can", " produce", " empty", " string", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -2.605691432952881, -0.0008883106056600809, -3.1039490699768066, -0.0008466235012747347, -4.1480889320373535, -4.093356132507324, -0.48179399967193604, -2.4906609058380127, -1.3420292139053345], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -1.2825512886047363, -0.00012230125139467418, -1.537788011773955e-05, -0.063446544110775, -0.002864426700398326, -0.0001938155182870105, -0.004158658906817436, -0.013701556250452995, -1.883488948806189e-05, -1.0967194612021558e-05, -0.0268742386251688, -0.027673838660120964], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.5175790786743164, -0.00016378014697693288, -2.13382354559144e-05, -0.11221857368946075, -0.15759286284446716], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during conversion: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " conversion", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.04881589114665985, -2.169585604860913e-05, -0.09386705607175827, -0.6019792556762695, -0.09354032576084137, -1.8014377355575562, -1.918281078338623, -0.9287589192390442, -0.5405608415603638, -0.014409767463803291, -0.04175490140914917, -0.1459774225950241, -0.001479722443036735, -1.3313701152801514, -0.01384864654392004, -0.0129007026553154], "finish_reason": "stop"}, {"text": " LookupError as exc:", "tokens": [" Look", "up", "Error", " as", " exc", ":", "\n"], "logprobs": [-4.060948371887207, -0.00016234986833296716, -0.00013159839727450162, -0.3703635334968567, -0.05313204601407051, -0.007468635682016611, -0.008504720404744148], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.24473866820335388, -0.0017431078013032675, -0.09618416428565979, -1.1769165992736816], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.34402474761009216, -0.1121198982000351, -0.007164382841438055], "finish_reason": "stop"}, {"text": " comment.decode(\"utf-8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.04850613325834274, -0.0009779914980754256, -0.010394011624157429, -0.03779958561062813, -2.609314441680908, -0.2905009686946869, -0.7110105156898499, -0.007125087082386017, -0.00023767507809679955, -0.0311291366815567, -0.16653119027614594], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.16002003848552704, -0.0009139174944721162, -0.06553664058446884, -0.0701131746172905, -0.19622531533241272, -0.00017426878912374377, -6.41325386823155e-05, -0.055754654109478, -0.8568031787872314, -0.014113144017755985, -0.011335376650094986, -0.03156953677535057, -9.393251093570143e-05, -1.07287787614041e-05, -0.08535397052764893, -0.0728318989276886], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.1746547222137451, -0.003717537270858884, -0.18748748302459717, -5.376194530981593e-05, -1.07287787614041e-05, -0.05650513991713524, -0.01701061986386776], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0013138956855982542, -0.150481715798378, -0.5988350510597229, -0.0002493547508493066, -6.198863957251888e-06, -0.01900440640747547, -0.026779886335134506], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.10183712840080261, -0.040273863822221756, -2.3364747903542593e-05, -0.011667231097817421, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0013716346584260464, -0.0022568251006305218, -3.0397906812140718e-05, -3.099436753473128e-06, -0.08079436421394348, -9.583967766957358e-05, -0.004329712130129337, -0.0004318020073696971, -0.0008607972995378077], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0040773362852633, -3.6954811548639555e-06, -0.000938332756049931, -0.023219473659992218, -0.025901976972818375, -1.0728830375228426e-06, -8.4638240878121e-06, -0.024621758610010147, -0.012758297845721245, -0.032571613788604736, -0.0017196642002090812, -0.00035768310772255063, -0.006622628308832645, -8.546940807718784e-05, -0.01605910062789917], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.09259048849344254], "finish_reason": "stop"}], "metrics": {"energy": 219.7015961103439, "energy_per_token": 1.3478625528241956, "time": 9.895069, "time_per_token": 0.06070594478527607}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -1.3916301727294922, -0.00543414568528533, -1.1151421070098877, -5.125986263010418e-06, -2.610649426060263e-05, -0.05864305794239044, -0.023697132244706154], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.4150490760803223, -0.00013183678674977273, -1.9550132492440753e-05, -0.11750590056180954, -0.15445785224437714], "finish_reason": "stop"}, {"text": " ValueError(exc) from exc", "tokens": [" Value", "Error", "(", "exc", ")", " from", " exc", "\n"], "logprobs": [-0.05156509205698967, -2.729855441430118e-05, -0.08116605132818222, -2.7221412658691406, -0.054711222648620605, -1.1475529670715332, -0.034616295248270035, -0.03139834478497505], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.219717264175415, -0.03115270845592022, -0.14229455590248108, -4.6491513785440475e-06, -1.0847986231965479e-05, -0.13726505637168884, -0.030479617416858673, -0.006112097762525082, -0.007189355790615082], "finish_reason": "stop"}, {"text": " codecs.decode(image.comment, from_encoding) or \"\"", "tokens": [" codec", "s", ".", "decode", "(", "image", ".", "comment", ",", " from", "_", "encoding", ")", " or", " \"", "\"", "\n"], "logprobs": [-2.7871410846710205, -3.814689989667386e-06, -4.8040190449682996e-05, -1.6669716835021973, -0.06690895557403564, -0.13767243921756744, -0.0015079329023137689, -0.152469202876091, -0.39335930347442627, -0.21384023129940033, -8.415821503149346e-05, -6.41325386823155e-05, -0.110219307243824, -2.427048444747925, -0.29938557744026184, -0.02007511630654335, -0.04615894705057144], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.35883182287216187, -0.09773868322372437, -0.007177875377237797], "finish_reason": "stop"}, {"text": " comment.decode(\"utf-8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.048617761582136154, -0.0009697740315459669, -0.010335021652281284, -0.03349141776561737, -2.573030710220337, -0.2642688453197479, -0.6227559447288513, -0.006289332173764706, -0.00026520551182329655, -0.02869025245308876, -0.17708875238895416], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding, errors=\"strict\")", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ",", " errors", "=", "\"", "strict", "\"", ")", "\n"], "logprobs": [-0.17594237625598907, -0.0010705222375690937, -0.06695890426635742, -0.07758805900812149, -0.2411385327577591, -0.00021479207498487085, -6.675497570540756e-05, -2.9923834800720215, -1.0819408893585205, -0.00925146322697401, -0.0006245807744562626, -1.8754363059997559, -0.00017629499780014157, -0.0057682013139128685, -0.7863909602165222], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.0289719104766846, -0.003766824258491397, -0.1686096489429474, -4.362964682513848e-05, -9.417489309271332e-06, -0.04442914202809334, -0.014283795841038227], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0012134101707488298, -0.15241628885269165, -0.6662411093711853, -0.0003522014303598553, -7.152531907195225e-06, -0.017748581245541573, -0.02299209125339985], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.08965259045362473, -0.04746977239847183, -2.2053474822314456e-05, -0.011586044915020466, -9.536738616588991e-07, -1.9073468138230965e-06, -0.001105531700886786, -0.0021730875596404076, -3.504691630951129e-05, -3.099436753473128e-06, -0.07278002798557281, -0.00012492353562265635, -0.003181279404088855, -0.0004042761866003275, -0.0008904544520191848], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004251726903021336, -4.410734163684538e-06, -0.0008297099848277867, -0.029622197151184082, -0.026266075670719147, -8.344646857949556e-07, -8.22540732769994e-06, -0.02567950449883938, -0.01226101815700531, -0.029651707038283348, -0.001729184528812766, -0.0003280101518612355, -0.007634746376425028, -7.855583680793643e-05, -0.013159685768187046], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.08765123039484024], "finish_reason": "stop"}], "metrics": {"energy": 255.2695278244018, "energy_per_token": 1.6575943365220895, "time": 9.681899, "time_per_token": 0.06286947402597402}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " extracted_text is None:", "tokens": [" extracted", "_", "text", " is", " None", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -3.0369091033935547, -0.7360457181930542, -0.4549312889575958, -0.08059851080179214], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding, \"ignore\").decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ",", " \"", "ignore", "\"", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2738569378852844, -4.1960789531003684e-05, -1.156323378381785e-05, -0.009261030703783035, -0.2753075659275055, -0.005738214123994112, -1.1623265743255615, -9.619726915843785e-05, -1.3947389561508317e-05, -2.8114144802093506, -0.7918885350227356, -0.8379852771759033, -7.545663538621739e-05, -0.0008883106056600809, -0.011415050365030766, -0.00036435641231946647, -0.002273238729685545, -0.02811390906572342, -2.884823152271565e-05, -8.583032467868179e-06, -0.5345126390457153, -0.037414517253637314], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.3233146667480469, -0.0001472126314183697, -2.109982233378105e-05, -0.11859163641929626, -0.26277193427085876], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.04672248288989067, -2.4199192921514623e-05, -0.10623843967914581, -2.0029382705688477], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.2139755487442017, -0.030426425859332085, -0.1388690024614334, -4.291525328881107e-06, -9.894321920000948e-06, -0.1624714434146881, -0.034216515719890594, -0.007217524107545614, -0.007621259428560734], "finish_reason": "stop"}, {"text": " image.comment.split(\";\")[0].replace(\"Comment: \", \"\")", "tokens": [" image", ".", "comment", ".", "split", "(", "\"", ";", "\"", ")[", "0", "]", ".", "replace", "(", "\"", "Comment", ":", " \"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.22639238834381104, -0.0015237637562677264, -0.10827295482158661, -0.5619339346885681, -1.0192463397979736, -0.4768868088722229, -0.3341156542301178, -0.791654109954834, -0.18143180012702942, -0.49820759892463684, -0.33722779154777527, -0.0022521864157170057, -0.7477058172225952, -3.263561964035034, -0.25964513421058655, -0.07519567012786865, -2.716254711151123, -1.9346619844436646, -0.008821327239274979, -0.0009067714563570917, -0.0208372063934803, -0.002558531705290079, -0.010165818966925144, -0.43120840191841125], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.34214282035827637, -0.13090746104717255, -0.0080014169216156], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04934287071228027, -0.0012168630491942167, -0.011136163957417011, -0.028633028268814087, -1.1862305402755737, -7.593343616463244e-05, -1.680836794548668e-05, -0.04407832771539688, -0.009710103273391724], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.15236838161945343, -0.0010021670022979379, -0.08876547962427139, -0.07107160985469818, -0.22425273060798645, -0.00016497205069754273, -5.3881147323409095e-05, -0.0622665099799633, -0.6836446523666382], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5425410866737366, -0.014514927752315998, -0.10328205674886703, -0.000102037942269817, -2.002696055569686e-05, -0.07677408307790756, -0.026038456708192825], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.001471271039918065, -0.12512852251529694, -0.7093173861503601, -0.00021765247220173478, -6.318072337307967e-06, -0.022375501692295074, -0.031836431473493576], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.10399094969034195, -0.04678585007786751, -2.6940935640595853e-05, -0.012667195871472359, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0012865131720900536, -0.0021145620848983526, -2.8609820219571702e-05, -3.2186455882765586e-06, -0.07655281573534012, -0.0001161031104857102, -0.0032812110148370266, -0.00035255891270935535, -0.0008610355434939265], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.005098673980683088, -3.576272320060525e-06, -0.0008013612823560834, -0.02383926883339882, -0.02599048800766468, -8.344646857949556e-07, -7.986990567587782e-06, -0.026017898693680763, -0.010388113558292389, -0.028235021978616714, -0.0015844660811126232, -0.0004096384218428284, -0.005841446109116077, -7.414542778860778e-05, -0.01495178323239088], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.08087462931871414], "finish_reason": "stop"}], "metrics": {"energy": 253.8954324035644, "energy_per_token": 1.567255755577558, "time": 9.906165, "time_per_token": 0.061149166666666664}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus+eng\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "+", "eng", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -2.0137956142425537, -0.2768285870552063, -0.024780159816145897, -0.37833520770072937, -0.08118023723363876], "finish_reason": "stop"}, {"text": " extracted_text is None or len(extracted_text.strip()) == 0:", "tokens": [" extracted", "_", "text", " is", " None", " or", " len", "(", "ext", "racted", "_", "text", ".", "strip", "())", " ==", " ", "0", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -3.0369091033935547, -0.7360457181930542, -1.0102653503417969, -1.4108139276504517, -0.00024423000286333263, -0.0030599460005760193, -3.6954811548639555e-06, -4.887569048150908e-06, -3.6954811548639555e-06, -0.9591622352600098, -0.01838640496134758, -0.006558559834957123, -0.11155526340007782, -0.00035446559195406735, -0.0001045410826918669, -0.004575853701680899, -0.07798299938440323], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2738569378852844, -4.1960789531003684e-05, -1.156323378381785e-05, -0.009261030703783035, -0.2753075659275055, -0.005738214123994112, -1.1623265743255615, -9.619726915843785e-05, -1.3947389561508317e-05, -0.06313490867614746, -0.002775033703073859, -0.00017736769223120064, -0.0049935863353312016, -0.015177125111222267, -1.9907753085135482e-05, -9.65590606938349e-06, -0.022870225831866264, -0.023451577872037888], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.7313278913497925, -0.3530963957309723, -2.6702524337451905e-05, -0.0837046355009079, -4.768370445162873e-07, -1.2755313036905136e-05, -0.005782542284578085, -0.007471830118447542, -3.957670196541585e-05, -1.3351351299206726e-05, -0.17735794186592102, -0.029649509117007256], "finish_reason": "stop"}, {"text": " ValueError(f\"Failed to convert text from {from_encoding} to {to_encoding}: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Failed", " to", " convert", " text", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.05573830381035805, -2.2172682292875834e-05, -0.09500855952501297, -0.5306097865104675, -0.08234179019927979, -2.2770328521728516, -0.02187761850655079, -0.4211866557598114, -0.8923066854476929, -1.130967617034912, -0.8205994963645935, -0.04846365749835968, -1.07287787614041e-05, -0.00012683063687290996, -0.20918019115924835, -0.039785727858543396, -0.006576324347406626, -0.0018904210301116109, -7.4741430580616e-05, -0.00011896379146492109, -0.44377556443214417, -0.010650931857526302, -0.022134169936180115, -0.08385822176933289, -0.0016678959364071488, -1.2346993684768677, -0.03903083875775337, -0.0062970323488116264], "finish_reason": "stop"}, {"text": " (ValueError, IOError, OSError) as exc:", "tokens": [" (", "Value", "Error", ",", " IO", "Error", ",", " O", "SE", "rror", ")", " as", " exc", ":", "\n"], "logprobs": [-1.9356729984283447, -3.2186355590820312, -9.929640509653836e-05, -0.005122513044625521, -3.921727180480957, -6.55629628454335e-05, -0.8563967347145081, -1.6977806091308594, -1.1086402082582936e-05, -6.615896563744172e-05, -0.3787069320678711, -0.00026353701832704246, -0.0428922213613987, -0.00910263229161501, -0.010297502391040325], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.22612324357032776, -0.0019841762259602547, -0.0922929123044014, -1.2247282266616821], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3732329308986664, -0.11550837755203247, -0.006849499884992838], "finish_reason": "stop"}, {"text": " codecs.getreader(to_encoding)(comment).read()", "tokens": [" codec", "s", ".", "get", "reader", "(", "to", "_", "encoding", ")(", "comment", ")", ".", "read", "()", "\n"], "logprobs": [-2.957576274871826, -3.6954811548639555e-06, -3.1470757676288486e-05, -2.0703914165496826, -0.676277220249176, -0.004596382845193148, -0.9104165434837341, -1.645074735279195e-05, -1.4066597032069694e-05, -0.02067829668521881, -0.013962212949991226, -0.13081207871437073, -0.23941010236740112, -0.956454873085022, -0.053574614226818085, -0.060681167989969254], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.19974581897258759, -0.0008842610404826701, -0.08762774616479874, -0.07723622024059296, -0.20842093229293823, -0.00020430385484360158, -6.09140915912576e-05, -0.06923669576644897, -0.7098479866981506], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.46121811866760254, -0.01695319078862667, -0.08690004795789719, -9.536288416711614e-05, -1.9907753085135482e-05, -0.08489535003900528, -0.02565266378223896], "finish_reason": "stop"}, {"text": "decode(\"utf8\")  # Fall back to utf-8 if possible", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "  ", "#", " Fall", " back", " to", " utf", "-", "8", " if", " possible", "\n"], "logprobs": [-0.0013818725710734725, -0.13385172188282013, -0.8232259154319763, -0.0803685188293457, -0.43372485041618347, -8.928377064876258e-05, -0.013412484899163246, -2.516770839691162, -0.0017243054462596774, -0.9479596614837646, -1.9037742614746094, -0.037103503942489624, -0.42095819115638733, -0.5913235545158386, -0.0006165986997075379, -0.9610447287559509, -3.09785795211792, -0.06902354955673218], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09568726271390915, -0.051148585975170135, -2.1219027985353023e-05, -0.01256290078163147, -9.536738616588991e-07, -1.9073468138230965e-06, -0.0011138670379295945, -0.002147155813872814, -3.302042750874534e-05, -2.861018856492592e-06, -0.07377256453037262, -0.00013040646445006132, -0.0033394305501133204, -0.0004226268210913986, -0.0009569118265062571], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004458962008357048, -3.814689989667386e-06, -0.0008054111385717988, -0.032287370413541794, -0.031483251601457596, -8.344646857949556e-07, -7.748573807475623e-06, -0.022347990423440933, -0.01200616080313921, -0.0273195318877697, -0.0015397133538499475, -0.000356253091013059, -0.007018436212092638, -7.795983401592821e-05, -0.014342905953526497], "finish_reason": "stop"}, {"text": " comment<|endoftext|># -*- coding: utf-8 -*-", "tokens": [" comment", "<", "|", "end", "of", "text", "|>", "#", " -", "*-", " coding", ":", " utf", "-", "8", " -", "*-", "\n"], "logprobs": [-0.09821370989084244, -2.452810525894165, -9.894321920000948e-06, -2.861018856492592e-06, -0.002852183301001787, -1.7404405298293568e-05, -0.11664974689483643, -1.1681959629058838, -1.887434482574463, -0.004158658906817436, -0.04612627625465393, -0.0017216873820871115, -0.03457322716712952, -0.006481932941824198, -5.149708886165172e-05, -0.009204926900565624, -0.002433792920783162, -0.0023910999298095703], "finish_reason": "stop"}], "metrics": {"energy": 293.15274933814993, "energy_per_token": 1.269059520944372, "time": 12.823237, "time_per_token": 0.05551184848484849}}
{"outputs": [{"text": " open(filename, \"rb\") as image_file:", "tokens": [" open", "(", "filename", ",", " \"", "rb", "\"", ")", " as", " image", "_", "file", ":", "\n"], "logprobs": [-2.387890100479126, -0.0018233117880299687, -0.02481493167579174, -0.006966467946767807, -0.7315508127212524, -0.007797162514179945, -0.009828035719692707, -0.0025270215701311827, -0.0005566716426983476, -1.3077844381332397, -0.19478777050971985, -0.04936828836798668, -0.0063270023092627525, -0.045592132955789566], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " codecs.decode(extracted_text.encode(from_encoding), to_encoding)", "tokens": [" codec", "s", ".", "decode", "(", "ext", "racted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-1.768267273902893, -8.344646857949556e-07, -3.4927710657939315e-05, -0.14295515418052673, -0.00271904026158154, -0.02144821174442768, -1.0013530300057027e-05, -6.079655122448457e-06, -2.50339189733495e-06, -0.8341057896614075, -0.015658993273973465, -0.0775054320693016, -0.3562043011188507, -8.11782301752828e-05, -1.3828182090946939e-05, -0.013900375925004482, -0.00452553853392601, -0.036670129746198654, -5.4834770708112046e-05, -1.2636104656849056e-05, -0.01488401833921671, -0.05208790674805641], "finish_reason": "stop"}, {"text": " (LookupError, UnicodeError):", "tokens": [" (", "Look", "up", "Error", ",", " Un", "icode", "Error", "):", "\n"], "logprobs": [-0.6822994947433472, -1.9965914487838745, -5.8410845667822286e-05, -9.775113539944869e-06, -0.005022171884775162, -0.3348556160926819, -3.58813522325363e-05, -2.955268383026123, -0.24978598952293396, -0.040315885096788406], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to convert text: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " convert", " text", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.05846552923321724, -2.407998726994265e-05, -0.09118149429559708, -0.49444615840911865, -0.09032034873962402, -1.3317686319351196, -0.33910906314849854, -0.001615172834135592, -0.5006162524223328, -1.15365731716156, -1.777209758758545, -0.03430314362049103, -0.0842600092291832, -0.14723622798919678, -0.001280560391023755, -0.4620383381843567], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.2605888843536377, -0.043546512722969055, -0.1300925463438034, -4.291525328881107e-06, -9.775113539944869e-06, -0.13023225963115692, -0.033892177045345306, -0.007394681219011545, -0.006234008818864822], "finish_reason": "stop"}, {"text": " image.comment.decode(from_encoding)", "tokens": [" image", ".", "comment", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.24721017479896545, -0.001666824915446341, -0.1013798713684082, -0.49615752696990967, -1.383293867111206, -0.45599642395973206, -0.6697695851325989, -3.111314072157256e-05, -3.015949550899677e-05, -0.050840798765420914, -0.4068414270877838], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.476235270500183, -0.05914465710520744, -0.09809635579586029, -0.025475341826677322], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.05889023467898369, -0.0012070996453985572, -0.008202200755476952, -0.032787714153528214, -1.2923059463500977, -6.83045873302035e-05, -1.7881233361549675e-05, -0.04539017379283905, -0.008357432670891285], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.18669810891151428, -0.0008718741592019796, -0.06798318028450012, -0.07825763523578644, -0.23302866518497467, -0.0002325502864550799, -6.842378934379667e-05, -0.0616413950920105, -0.6934605240821838], "finish_reason": "stop"}, {"text": "encode(\"utf8\")", "tokens": ["encode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-1.2367141246795654, -0.003404774935916066, -2.5836944580078125, -0.2104261815547943, -0.5715823769569397, -0.0002786724944598973, -0.1095941960811615, -0.05576559156179428], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0013167529832571745, -0.13396015763282776, -0.6659956574440002, -0.0002857038634829223, -6.318072337307967e-06, -0.01922404207289219, -0.02918151579797268], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09486382454633713, -0.040322527289390564, -2.0146166207268834e-05, -0.010096076875925064, -9.536738616588991e-07, -1.7881377516459906e-06, -0.0011361341457813978, -0.002752089872956276, -2.3483953555114567e-05, -3.6954811548639555e-06, -0.07833237200975418, -0.00011312322021694854, -0.003576075891032815, -0.00039843725971877575, -0.0008364992681890726], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004425137769430876, -3.576272320060525e-06, -0.0008764001540839672, -0.02518070489168167, -0.02710874378681183, -8.344646857949556e-07, -7.748573807475623e-06, -0.024201443418860435, -0.012566549703478813, -0.030450016260147095, -0.001716570113785565, -0.00033206192892976105, -0.007282733917236328, -7.83174327807501e-05, -0.014100567437708378], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08963765949010849, -0.5219786763191223], "finish_reason": "stop"}], "metrics": {"energy": 264.82353518104554, "energy_per_token": 1.5132773438916889, "time": 10.522471, "time_per_token": 0.06012840571428571}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " codecs.getdecoder(to_encoding)(extracted_text)[0]", "tokens": [" codec", "s", ".", "get", "decoder", "(", "to", "_", "encoding", ")(", "ext", "racted", "_", "text", ")[", "0", "]", "\n"], "logprobs": [-1.768267273902893, -8.344646857949556e-07, -3.4927710657939315e-05, -2.8456432819366455, -1.21958589553833, -0.005718182772397995, -1.3446919918060303, -6.6756979322235566e-06, -4.8993817472364753e-05, -0.019411128014326096, -0.030966999009251595, -2.50339189733495e-06, -2.169585604860913e-05, -2.3841830625315197e-06, -0.16091731190681458, -0.010375489480793476, -0.0007083290838636458, -0.03429139405488968], "finish_reason": "stop"}, {"text": ":", "tokens": [":", "\n"], "logprobs": [-2.9234209060668945, -0.05691007152199745], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.05668504163622856, -2.884823152271565e-05, -0.09566256403923035, -2.018115997314453], "finish_reason": "stop"}, {"text": " Exception as exc:", "tokens": [" Exception", " as", " exc", ":", "\n"], "logprobs": [-3.040494680404663, -0.11289986968040466, -0.04058995842933655, -0.00600202102214098, -0.02597062662243843], "finish_reason": "stop"}, {"text": " codecs.encode(image.comment, from_encoding, to_encoding).decode()", "tokens": [" codec", "s", ".", "encode", "(", "image", ".", "comment", ",", " from", "_", "encoding", ",", " to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-2.7593166828155518, -2.861018856492592e-06, -4.0649541915627196e-05, -1.3708505630493164, -0.015571909956634045, -0.23790761828422546, -0.0016756316181272268, -0.08534597605466843, -0.3092113137245178, -0.9324151277542114, -8.95221673999913e-05, -4.029192859889008e-05, -2.0966193675994873, -0.6307258009910583, -8.511180931236595e-05, -1.2040065485052764e-05, -0.026268398389220238, -0.806123673915863, -0.016028951853513718, -1.0523357391357422, -0.14817474782466888], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.32385262846946716, -0.11380817741155624, -0.008740146644413471], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.07023142278194427, -0.0012137673329561949, -0.010368882678449154, -0.03634681552648544, -0.47993016242980957, -1.156323378381785e-05, -2.0265373677830212e-05, -0.03637946397066116, -0.0636419802904129, -0.024069715291261673, -0.0010378933511674404, -0.009474905207753181, -3.0278701160568744e-05, -9.65590606938349e-06, -0.015660401433706284, -0.015328108333051205], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.19120365381240845, -0.0008634176338091493, -0.07016929984092712, -0.08088023215532303, -0.2681269347667694, -0.0002637753786984831, -6.842378934379667e-05, -0.061562035232782364, -0.8195139169692993, -0.01688591204583645, -0.010858378373086452, -0.03508646786212921, -8.737658936297521e-05, -1.490105023549404e-05, -0.07794693857431412, -0.06860379129648209], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5558935403823853, -0.01527281291782856, -0.08943132311105728, -7.748303323751315e-05, -2.1815061700181104e-05, -0.08128904551267624, -0.023498505353927612], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0014724613865837455, -0.1261734515428543, -0.7669697403907776, -0.0918675884604454, -0.476056307554245, -9.929640509653836e-05, -0.013585255481302738, -0.0886247530579567], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11644742637872696, -0.04334482550621033, -2.5510462364763953e-05, -0.01489728968590498, -8.344646857949556e-07, -2.0265558760002023e-06, -0.0012635351158678532, -0.002602525521069765, -2.634490556374658e-05, -3.3378546504536644e-06, -0.0813034400343895, -9.691245941212401e-05, -0.003834159579128027, -0.0004959068610332906, -0.0008965287124738097], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004416829906404018, -4.410734163684538e-06, -0.0010066924151033163, -0.02198992483317852, -0.026263637468218803, -8.344646857949556e-07, -8.821448318485636e-06, -0.02462141029536724, -0.011291411705315113, -0.027290184050798416, -0.0014799605123698711, -0.0003935516288038343, -0.005423593334853649, -7.021180499577895e-05, -0.013314502313733101], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10421352833509445, -0.5563991665840149], "finish_reason": "stop"}], "metrics": {"energy": 265.54184140586847, "energy_per_token": 1.599649647023304, "time": 10.321486, "time_per_token": 0.0621776265060241}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -0.4662676453590393, -0.0007007050444371998, -0.08249789476394653, -0.3851338028907776, -5.722029527532868e-06, -1.2636104656849056e-05, -0.02507154457271099, -0.037062034010887146], "finish_reason": "stop"}, {"text": " UnicodeDecodeError:", "tokens": [" Un", "icode", "Dec", "ode", "Error", ":", "\n"], "logprobs": [-2.39762544631958, -3.5523738915799186e-05, -0.05353258177638054, -1.0728830375228426e-06, -3.683499380713329e-05, -0.11631414294242859, -0.05545741319656372], "finish_reason": "stop"}, {"text": " ValueError(f\"Failed to decode '{exc}'.\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Failed", " to", " decode", " '", "{", "exc", "}'", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.05427400767803192, -3.0278701160568744e-05, -0.09231356531381607, -0.5322765111923218, -0.0744304209947586, -2.4438295364379883, -0.023407792672514915, -1.1371433734893799, -3.419560432434082, -0.023843690752983093, -2.1876039505004883, -0.19752620160579681, -1.8785643577575684, -0.5022116303443909, -0.004181808326393366, -0.7674863934516907, -0.015025650151073933, -0.009889180772006512], "finish_reason": "stop"}, {"text": " Exception as exc:", "tokens": [" Exception", " as", " exc", ":", "\n"], "logprobs": [-2.9454526901245117, -0.08366922289133072, -0.04597361013293266, -0.005911604501307011, -0.024185385555028915], "finish_reason": "stop"}, {"text": " image.comment.split(';')[1] if image.comment else ''", "tokens": [" image", ".", "comment", ".", "split", "('", ";", "')", "[", "1", "]", " if", " image", ".", "comment", " else", " ''", "\n"], "logprobs": [-0.25386935472488403, -0.0015770867466926575, -0.09466572105884552, -0.5017327070236206, -1.0169492959976196, -1.0861310958862305, -0.41926026344299316, -0.21969933807849884, -0.29711833596229553, -1.0588879585266113, -0.05241284891963005, -2.424126625061035, -0.031038420274853706, -0.0006386386230587959, -0.01868293434381485, -0.03366571292281151, -0.6838296055793762, -0.030416134744882584], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.429640293121338, -0.06300496309995651, -0.10011868923902512, -0.02622903324663639], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.053645458072423935, -0.0009566736407577991, -0.011783754453063011, -0.03067409060895443, -0.43535059690475464, -1.2755313036905136e-05, -1.7165990357170813e-05, -0.03270084410905838, -2.7308056354522705], "finish_reason": "stop"}, {"text": "getdecoder(to_encoding)(comment)[0]", "tokens": ["get", "decoder", "(", "to", "_", "encoding", ")(", "comment", ")[", "0", "]", "\n"], "logprobs": [-2.6330156326293945, -0.713641881942749, -0.005755756050348282, -1.2884883880615234, -1.0967194612021558e-05, -6.01988795096986e-05, -0.07373978942632675, -0.07629173994064331, -0.40084221959114075, -0.011901560239493847, -0.010778187774121761, -0.407004177570343], "finish_reason": "stop"}, {"text": "encode(from_encoding)", "tokens": ["encode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-1.032364010810852, -0.003778225276619196, -2.1788840293884277, -1.4066597032069694e-05, -2.0861407392658293e-05, -0.08457718044519424, -0.07234155386686325], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0015847040340304375, -1.9862420558929443, -0.012469190172851086], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.08956997841596603, -0.0454266257584095, -2.5510462364763953e-05, -0.015371543355286121, -8.344646857949556e-07, -1.7881377516459906e-06, -0.0009051040397025645, -0.0022775204852223396, -2.5629668016335927e-05, -3.2186455882765586e-06, -0.07996219396591187, -0.00011991735664196312, -0.00422525592148304, -0.0004042761866003275, -0.0008336406317539513], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004626047797501087, -3.4570634852570947e-06, -0.00087878224439919, -0.02709215320646763, -0.02970077469944954, -1.0728830375228426e-06, -6.6756979322235566e-06, -0.023279689252376556, -0.01199237909168005, -0.03418034315109253, -0.001719545223750174, -0.00033790123416110873, -0.00638611102476716, -9.30981186684221e-05, -0.014230675995349884], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.1053771898150444, -0.5992147326469421], "finish_reason": "stop"}], "metrics": {"energy": 226.44375669956204, "energy_per_token": 1.3559506389195333, "time": 10.302066, "time_per_token": 0.061689017964071856}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus+eng', output_type=Output.FILE)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "+", "eng", "'", ",", " output", "_", "type", "=", "Output", ".", "FILE", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -2.8868892192840576, -0.14243702590465546, -1.3392448425292969, -0.0019394413102418184, -1.374916434288025, -0.12465033680200577, -0.08025025576353073, -0.049028169363737106, -0.5998607277870178, -0.106561578810215, -3.2824058532714844, -0.5643496513366699, -0.05414087697863579], "finish_reason": "stop"}, {"text": " extracted_text == '':", "tokens": [" extracted", "_", "text", " ==", " '", "':", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -3.153654098510742, -1.0673413276672363, -0.155331552028656, -0.09064061939716339], "finish_reason": "stop"}, {"text": " codecs.decode(extracted_text, from_encoding)", "tokens": [" codec", "s", ".", "decode", "(", "ext", "racted", "_", "text", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-1.6078145503997803, -7.152555099310121e-07, -3.790783375734463e-05, -0.1606641709804535, -0.0021421597339212894, -0.020011670887470245, -1.0251946150674485e-05, -4.172316494077677e-06, -2.861018856492592e-06, -0.5707589983940125, -0.1433688998222351, -0.0001299296854995191, -3.302042750874534e-05, -0.3151196837425232, -0.37627726793289185], "finish_reason": "stop"}, {"text": " (ValueError, LookupError):", "tokens": [" (", "Value", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6697540879249573, -1.859948992729187, -1.5258672647178173e-05, -0.005856852978467941, -0.09066075831651688, -4.029192859889008e-05, -1.0490362910786644e-05, -0.14206911623477936, -0.03181738033890724], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.05496659502387047, -2.4437606043647975e-05, -0.09392652660608292, -1.814799189567566], "finish_reason": "stop"}, {"text": " FileNotFoundError as exc:", "tokens": [" File", "NotFound", "Error", " as", " exc", ":", "\n"], "logprobs": [-2.7078890800476074, -0.0038018582854419947, -2.1576648578047752e-05, -0.6049506068229675, -0.057154975831508636, -0.003914077300578356, -0.005501843057572842], "finish_reason": "stop"}, {"text": " image.comment if image.comment is not None else \"\"", "tokens": [" image", ".", "comment", " if", " image", ".", "comment", " is", " not", " None", " else", " \"", "\"", "\n"], "logprobs": [-0.26748043298721313, -0.0017984420992434025, -0.09466051310300827, -3.3725826740264893, -0.09954528510570526, -0.000530936405993998, -0.04236526042222977, -2.9529383182525635, -0.0043901256285607815, -0.0023035677149891853, -0.004123400431126356, -0.21202825009822845, -0.019405633211135864, -0.021349729970097542], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.38011452555656433, -0.09321599453687668, -0.005844290368258953], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.053879983723163605, -0.0014144902816042304, -0.009163584560155869, -0.03357810899615288, -0.3665727376937866, -1.1205610462639015e-05, -2.074220174108632e-05, -0.024167697876691818, -0.07703414559364319, -0.014233613386750221, -0.0009585791267454624, -0.0071075689047575, -3.182837463100441e-05, -9.65590606938349e-06, -0.009980536065995693, -0.01478817593306303], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.19682197272777557, -0.0009450022480450571, -0.07146469503641129, -0.07378397136926651, -0.2095489650964737, -0.0001821352052502334, -6.067568756407127e-05, -0.06196111813187599, -0.8498901724815369, -0.015262833796441555, -0.01457919366657734, -0.032931677997112274, -7.366862701019272e-05, -1.3828182090946939e-05, -0.08569224178791046, -0.059965021908283234], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.479623019695282, -0.014087989926338196, -0.07434399425983429, -7.617183291586116e-05, -2.0146166207268834e-05, -0.08968060463666916, -0.02232980541884899], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0012479382567107677, -0.13910657167434692, -0.6853343844413757, -0.0002791491860989481, -7.867782187531702e-06, -0.023732056841254234, -0.034673869609832764], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.10060929507017136, -0.049429330974817276, -2.13382354559144e-05, -0.010840100236237049, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0012471048394218087, -0.0023396043106913567, -2.9682672902708873e-05, -3.3378546504536644e-06, -0.07615929841995239, -0.00010144196130568162, -0.003679055953398347, -0.0003406421164982021, -0.0008310201810672879], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004547848366200924, -3.6954811548639555e-06, -0.0009732277248986065, -0.024598032236099243, -0.03288542479276657, -8.344646857949556e-07, -7.271740287251305e-06, -0.023040087893605232, -0.01269509270787239, -0.030359933152794838, -0.0015603045467287302, -0.0003274143091402948, -0.006396060809493065, -6.925819616299123e-05, -0.015084012411534786], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.07702421396970749, -0.5637038350105286], "finish_reason": "stop"}], "metrics": {"energy": 272.0563487081529, "energy_per_token": 1.5370415181251575, "time": 10.523017, "time_per_token": 0.05945207344632768}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " from_encoding != \"cp1251\":", "tokens": [" from", "_", "encoding", " ", "!", "=", " \"", "cp", "1", "2", "5", "1", "\":", "\n"], "logprobs": [-2.3559603691101074, -2.0503786799963564e-05, -7.879423355916515e-05, -0.687623918056488, -2.455681169521995e-05, -0.00016318420239258558, -0.4823426902294159, -0.5956916809082031, -0.004177534487098455, -0.00029690624796785414, -6.747018051100895e-05, -0.0006336349761113524, -0.07212740182876587, -0.07159076631069183], "finish_reason": "stop"}, {"text": " extracted_text.decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -1.3940081596374512, -0.007801183965057135, -1.0442050695419312, -6.079655122448457e-06, -2.6225699912174605e-05, -0.0626073107123375, -0.022778991609811783], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.6663753986358643, -0.32450249791145325, -3.4927710657939315e-05, -0.08459306508302689, -4.768370445162873e-07, -1.7404405298293568e-05, -0.004726428538560867, -0.007258946541696787, -4.351044481154531e-05, -1.1324817933200393e-05, -1.7570984363555908, -0.0019374187104403973, -0.2194506973028183, -0.0020532971248030663, -0.0157298743724823], "finish_reason": "stop"}, {"text": " ValueError(f\"Incorrect encoding '{to_encoding}' used for the text or comment conversion.\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "I", "ncor", "rect", " encoding", " '", "{", "to", "_", "encoding", "}'", " used", " for", " the", " text", " or", " comment", " conversion", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0507875457406044, -2.3603161025675945e-05, -0.09523509442806244, -0.6044061779975891, -0.0834902673959732, -3.4569144248962402, -0.0007737264968454838, -0.0007516896002925932, -0.4806917607784271, -3.835505485534668, -0.008775006048381329, -1.1171168088912964, -3.635817120084539e-05, -0.00013481661153491586, -0.04800302907824516, -2.7521464824676514, -0.5288518667221069, -1.9719499349594116, -0.9881216883659363, -3.448695182800293, -0.3996325433254242, -0.7476626634597778, -0.9266587495803833, -0.3188829720020294, -0.026693185791373253, -0.03704273700714111, -0.0006485265912488103, -0.006387295667082071], "finish_reason": "stop"}, {"text": " OSError:", "tokens": [" O", "SE", "rror", ":", "\n"], "logprobs": [-1.641787052154541, -0.0002522150462027639, -2.062299427052494e-05, -1.4277422428131104, -0.030021384358406067], "finish_reason": "stop"}, {"text": " image.comment.decode(to_encoding)", "tokens": [" image", ".", "comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.22487115859985352, -0.0017717868322506547, -0.09882480651140213, -0.4685501754283905, -1.3883706331253052, -0.44739413261413574, -2.1067721843719482, -0.00010823617776622996, -3.671578815556131e-05, -0.11402592808008194, -0.463999480009079], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3167223632335663, -0.12166784703731537, -0.0066054570488631725], "finish_reason": "stop"}, {"text": " comment.decode(\"utf8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.06564091145992279, -0.0007830176036804914, -0.008960630744695663, -0.033498797565698624, -2.8194739818573, -0.26901668310165405, -0.6512292623519897, -0.00018487652414478362, -0.0354747399687767, -0.25627973675727844], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1815805286169052, -0.0009139174944721162, -0.06467915326356888, -0.07614957541227341, -0.22386951744556427, -0.0002256377338198945, -6.472854875028133e-05, -0.06260764598846436, -0.6478550434112549], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.4842987656593323, -0.012566549703478813, -0.10845864564180374, -8.272782724816352e-05, -2.0146166207268834e-05, -0.09202177822589874, -0.02408147044479847], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.0012848464539274573, -0.14653849601745605, -0.6922032237052917, -0.06262679398059845, -1.2865859270095825, -0.0013271104544401169, -4.660974445869215e-05, -0.013796444050967693, -0.08425672352313995], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09269426017999649, -0.05549316480755806, -2.1934269170742482e-05, -0.011289997026324272, -1.1920922133867862e-06, -1.6689286894688848e-06, -0.0011888825101777911, -0.002130740089341998, -2.658331868587993e-05, -2.7418097943154862e-06, -0.07860272377729416, -0.00010787858627736568, -0.004469999112188816, -0.0003880701260641217, -0.000847814604640007], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.005199244245886803, -3.3378546504536644e-06, -0.0009775151265785098, -0.023762324824929237, -0.025383416563272476, -8.344646857949556e-07, -7.986990567587782e-06, -0.02461431547999382, -0.012505568563938141, -0.02559305727481842, -0.001512932125478983, -0.0003634030872490257, -0.0067852092906832695, -7.545663538621739e-05, -0.0158282071352005], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09123709797859192, -0.510627806186676], "finish_reason": "stop"}], "metrics": {"energy": 239.1541979560852, "energy_per_token": 1.306853540743635, "time": 10.731662, "time_per_token": 0.05864296174863388}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.8808221220970154, -0.10732008516788483, -0.17992858588695526, -0.06332626193761826], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " codecs.decode(extracted_text.encode(from_encoding), to_encoding)", "tokens": [" codec", "s", ".", "decode", "(", "ext", "racted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-1.768267273902893, -8.344646857949556e-07, -3.4927710657939315e-05, -0.14295515418052673, -0.00271904026158154, -0.02144821174442768, -1.0013530300057027e-05, -6.079655122448457e-06, -2.50339189733495e-06, -0.8341057896614075, -0.015658993273973465, -0.0775054320693016, -0.3562043011188507, -8.11782301752828e-05, -1.3828182090946939e-05, -0.013900375925004482, -0.00452553853392601, -0.036670129746198654, -5.4834770708112046e-05, -1.2636104656849056e-05, -0.01488401833921671, -0.05208790674805641], "finish_reason": "stop"}, {"text": " UnicodeDecodeError:", "tokens": [" Un", "icode", "Dec", "ode", "Error", ":", "\n"], "logprobs": [-2.501894950866699, -3.40932747349143e-05, -0.04309891164302826, -9.536738616588991e-07, -4.637133679352701e-05, -0.11365529149770737, -0.060883089900016785], "finish_reason": "stop"}, {"text": " ValueError(\"Unable to convert to target encoding: {}\".format(exc))", "tokens": [" Value", "Error", "(", "\"", "Un", "able", " to", " convert", " to", " target", " encoding", ":", " {", "}\"", ".", "format", "(", "exc", "))", "\n"], "logprobs": [-0.05668504163622856, -2.884823152271565e-05, -0.09566256403923035, -1.7231502532958984, -1.2069765329360962, -0.5180335640907288, -0.0017949911998584867, -0.37911301851272583, -2.8717236518859863, -1.1237061023712158, -0.010182221420109272, -0.6107754707336426, -0.6873316764831543, -0.29677170515060425, -0.015317659825086594, -0.002583263674750924, -0.000301673193462193, -0.1947314441204071, -0.01979115419089794, -0.20624610781669617], "finish_reason": "stop"}, {"text": " OSError as exc:", "tokens": [" O", "SE", "rror", " as", " exc", ":", "\n"], "logprobs": [-1.6192301511764526, -0.00024136967840604484, -2.1934269170742482e-05, -0.29429399967193604, -0.05528191477060318, -0.002206393051892519, -0.005627266597002745], "finish_reason": "stop"}, {"text": " image.comment", "tokens": [" image", ".", "comment", "\n"], "logprobs": [-0.22413145005702972, -0.0020537730306386948, -0.10415949672460556, -1.1150908470153809], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.2962040901184082, -0.08452700823545456, -0.007059156429022551], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04991550371050835, -0.0011099375551566482, -0.009946308098733425, -0.02753317542374134, -0.39241528511047363, -1.0013530300057027e-05, -2.52720492426306e-05, -0.03538959473371506, -0.06996691226959229, -0.02459733374416828, -0.0008796160109341145, -0.007466150913387537, -3.2066785934148356e-05, -8.940656698541716e-06, -0.012982840649783611, -0.01927713118493557], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.18169476091861725, -0.0008419782971031964, -0.06557727605104446, -0.06958179920911789, -0.23099136352539062, -0.00024720950750634074, -7.164221460698172e-05, -0.05304918438196182, -0.6120012998580933], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-1.2125723361968994, -0.0036510254722088575, -0.19127100706100464, -5.173549288883805e-05, -1.07287787614041e-05, -0.04733584448695183, -0.014481442049145699], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.0011848341673612595, -0.13190855085849762, -0.8106639385223389, -0.07048563659191132, -1.167169451713562, -0.0015028145862743258, -5.507317473529838e-05, -0.014397899620234966, -0.08775442093610764], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09349049627780914, -0.03977198153734207, -2.4914430468925275e-05, -0.012280447408556938, -1.0728830375228426e-06, -1.9073468138230965e-06, -0.0011737607419490814, -0.0030130010563880205, -2.753696753643453e-05, -3.3378546504536644e-06, -0.08331117779016495, -0.00011359999916749075, -0.002873936202377081, -0.0003461238811723888, -0.0007713441736996174], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0043265074491500854, -3.576272320060525e-06, -0.0008531744824722409, -0.024787835776805878, -0.031507160514593124, -8.344646857949556e-07, -6.6756979322235566e-06, -0.02225157804787159, -0.013872865587472916, -0.03014400228857994, -0.00183723377995193, -0.0004078510100953281, -0.00571403419598937, -7.939023635117337e-05, -0.012490028515458107], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.09341373294591904], "finish_reason": "stop"}], "metrics": {"energy": 224.91159315109257, "energy_per_token": 1.3308378292964058, "time": 10.101552, "time_per_token": 0.05977249704142012}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -1.2335700988769531, -0.03667185455560684, -0.02439620904624462], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, config=\"-psm 6 -c tessedit_char_whitelist={}\".format(chr(10)))", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " config", "=", "\"", "-", "ps", "m", " ", "6", " -", "c", " t", "ess", "edit", "_", "char", "_", "wh", "it", "elist", "={", "}\"", ".", "format", "(", "chr", "(", "1", "0", ")))", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -2.0712730884552, -0.31864991784095764, -0.15480193495750427, -2.2535245418548584, -0.34799325466156006, -0.00018082413589581847, -0.0013936578761786222, -1.5690746307373047, -1.4118173122406006, -0.4585840702056885, -0.2257409393787384, -0.11548586189746857, -0.07603711634874344, -0.00017474555352237076, -0.024564417079091072, -0.011351523920893669, -0.05918937921524048, -0.005644929129630327, -0.012569963932037354, -2.525599956512451, -3.266615867614746, -0.03588654845952988, -0.010631588287651539, -0.13527905941009521, -2.321280002593994, -0.0039087338373064995, -0.5769256353378296, -0.25508761405944824, -0.864196240901947, -0.11072824895381927], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -0.4662676453590393, -0.0007007050444371998, -0.08249789476394653, -0.3851338028907776, -5.722029527532868e-06, -1.2636104656849056e-05, -0.02507154457271099, -0.037062034010887146], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.4945491552352905, -0.00014959646796341985, -1.9430925021879375e-05, -0.1109558492898941, -0.3374232351779938], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.05427400767803192, -3.0278701160568744e-05, -0.09231356531381607, -2.030979633331299], "finish_reason": "stop"}, {"text": " LookupError as exc:", "tokens": [" Look", "up", "Error", " as", " exc", ":", "\n"], "logprobs": [-3.7937021255493164, -0.0001770101225702092, -0.00011240804451517761, -0.3782348334789276, -0.054854996502399445, -0.0063949949108064175, -0.008623622357845306], "finish_reason": "stop"}, {"text": " image.comment.strip()", "tokens": [" image", ".", "comment", ".", "strip", "()", "\n"], "logprobs": [-0.24429479241371155, -0.0019123139791190624, -0.09228910505771637, -0.4963522255420685, -1.6500486135482788, -0.15710009634494781, -0.5698924660682678], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.3244589865207672, -0.11771924048662186, -0.006423422135412693], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.06210419163107872, -0.001193526084534824, -0.011789292097091675, -0.035139299929142, -1.5027979612350464, -8.725739462533966e-05, -1.7762025890988298e-05, -0.0438448041677475, -0.009216737933456898], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1737186163663864, -0.0009117737063206732, -0.05743404105305672, -0.06456383317708969, -0.231293722987175, -0.0002127659390680492, -6.627816765103489e-05, -0.06116851791739464, -0.7567811012268066], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5583978891372681, -0.015968063846230507, -0.09286592155694962, -9.381330892210826e-05, -1.7762025890988298e-05, -0.07483944296836853, -0.024428898468613625], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0012272215681150556, -2.2986786365509033, -0.013376963324844837], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09790948778390884, -0.05482114106416702, -2.3603161025675945e-05, -0.01335708424448967, -8.344646857949556e-07, -2.145764938177308e-06, -0.0010139568476006389, -0.001745130866765976, -3.0397906812140718e-05, -2.9802276912960224e-06, -0.083470419049263, -9.60780744208023e-05, -0.004301225300878286, -0.0004135706985834986, -0.0009390473715029657], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.005242173559963703, -3.099436753473128e-06, -0.0009560781763866544, -0.027509285137057304, -0.029324494302272797, -9.536738616588991e-07, -7.152531907195225e-06, -0.024385739117860794, -0.011766789481043816, -0.03142283484339714, -0.0019624039996415377, -0.00033122775494121015, -0.00699416920542717, -7.950943836476654e-05, -0.01666552759706974], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.0956399217247963, -0.5213866829872131], "finish_reason": "stop"}], "metrics": {"energy": 224.87201374721522, "energy_per_token": 1.3795829064246332, "time": 10.106877, "time_per_token": 0.06200538036809816}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " from_encoding:", "tokens": [" from", "_", "encoding", ":", "\n"], "logprobs": [-2.3559603691101074, -2.0503786799963564e-05, -7.879423355916515e-05, -2.6288280487060547, -0.054650384932756424], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -0.4097268879413605, -5.483612312673358e-06, -1.6689160474925302e-05, -0.06843692809343338, -0.742069661617279], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.6632929444313049, -0.38305357098579407, -2.5748875486897305e-05, -0.0834563821554184, -5.960462772236497e-07, -1.2159273865108844e-05, -0.004385615698993206, -0.008201255463063717, -4.172238186583854e-05, -1.4424220353248529e-05, -0.166689932346344, -0.02930469997227192], "finish_reason": "stop"}, {"text": " ValueError(\"UnicodeDecodeError or LookupError during text conversion: \" + str(exc))", "tokens": [" Value", "Error", "(", "\"", "Un", "icode", "Dec", "ode", "Error", " or", " Look", "up", "Error", " during", " text", " conversion", ":", " \"", " +", " str", "(", "exc", "))", "\n"], "logprobs": [-0.05067933350801468, -2.586808113846928e-05, -0.08834782242774963, -1.851904273033142, -1.1996455192565918, -0.8677709102630615, -0.18671759963035583, -0.0013383012264966965, -0.012802551500499249, -0.6153237819671631, -0.004185844212770462, -0.0002177716523874551, -0.0011130335042253137, -1.7248070240020752, -2.2227370738983154, -0.30509617924690247, -0.9525833129882812, -1.4876600503921509, -0.2803913652896881, -0.12808772921562195, -0.00011598391574807465, -0.003454077523201704, -0.018626771867275238, -0.17358985543251038], "finish_reason": "stop"}, {"text": " ValueError as exc:", "tokens": [" Value", "Error", " as", " exc", ":", "\n"], "logprobs": [-2.6774988174438477, -0.0001081169830285944, -0.3877694010734558, -0.09535083919763565, -0.007043531630188227, -0.01796182058751583], "finish_reason": "stop"}, {"text": " image.comment.decode(from_encoding)", "tokens": [" image", ".", "comment", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.24374383687973022, -0.0016883655916899443, -0.09020031988620758, -0.49062657356262207, -1.457792043685913, -0.35521358251571655, -0.6853451132774353, -2.0861407392658293e-05, -2.407998726994265e-05, -0.04673897847533226, -0.48533958196640015], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.311164915561676, -0.11329516023397446, -0.006309115327894688], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.041263144463300705, -0.0011275607394054532, -0.013214509934186935, -0.03910558670759201, -0.37545594573020935, -1.2159273865108844e-05, -2.2291887944447808e-05, -0.032282985746860504, -0.05588114634156227, -0.022821055725216866, -0.0008596062543801963, -0.006300230510532856, -2.932505594799295e-05, -7.867782187531702e-06, -0.013473528437316418, -0.011474448256194592], "finish_reason": "stop"}, {"text": "decode(", "tokens": ["decode", "(", "\n"], "logprobs": [-0.18467499315738678, -0.0008372138836421072, -2.9662232398986816], "finish_reason": "stop"}, {"text": "encode(from_encoding)", "tokens": ["encode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-1.1335307359695435, -0.004062851890921593, -2.6286449432373047, -1.2397689715726301e-05, -2.7656173188006505e-05, -0.07820571213960648, -0.07719902694225311], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0016856284346431494, -0.13068875670433044, -0.7984987497329712, -0.07131695747375488, -0.4152233302593231, -0.00010275312524754554, -0.014845611527562141, -0.0980391874909401], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.08923999220132828, -0.046918369829654694, -2.5987286790041253e-05, -0.013913308270275593, -1.0728830375228426e-06, -1.6689286894688848e-06, -0.001279012649320066, -0.0024402146227657795, -3.45700973412022e-05, -2.7418097943154862e-06, -0.07725023478269577, -0.00011514954530866817, -0.0037129053380340338, -0.00037555795279331505, -0.0008703258354216814], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004460623487830162, -3.6954811548639555e-06, -0.0006211258587427437, -0.028017008677124977, -0.027595682069659233, -9.536738616588991e-07, -7.390948667307384e-06, -0.022212522104382515, -0.014471455477178097, -0.033106185495853424, -0.0015311434399336576, -0.00031132620642893016, -0.007142367772758007, -7.450303382938728e-05, -0.015877604484558105], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.0811966136097908, -0.5645871758460999], "finish_reason": "stop"}], "metrics": {"energy": 225.51842406845097, "energy_per_token": 1.3835486139168771, "time": 9.895945, "time_per_token": 0.0607113190184049}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.611111044883728, -0.2701438367366791, -0.5455884337425232, -0.12198013067245483, -0.0733935683965683, -0.19483917951583862, -0.3491675555706024, -0.08834531158208847], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.5900054574012756, -0.0005123494775034487, -6.83045873302035e-05, -0.3746796250343323, -0.0856146588921547], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.2336031049489975, -4.458328112377785e-05, -1.4781842764932662e-05, -0.010564002208411694, -0.2948608696460724, -0.00584891252219677, -0.3584847152233124, -6.318072337307967e-06, -1.823885577323381e-05, -0.061130501329898834, -1.009099006652832], "finish_reason": "stop"}, {"text": " LookupError:", "tokens": [" Look", "up", "Error", ":", "\n"], "logprobs": [-1.4945491552352905, -0.00014959646796341985, -1.9430925021879375e-05, -0.1109558492898941, -0.3374232351779938], "finish_reason": "stop"}, {"text": " ValueError(f\"{exc} during text conversion from {from_encoding} to {to_encoding}\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "exc", "}", " during", " text", " conversion", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}\"", ")", "\n"], "logprobs": [-0.05427400767803192, -3.0278701160568744e-05, -0.09231356531381607, -0.5322765111923218, -0.0744304209947586, -2.931218147277832, -0.5988075137138367, -1.0614067316055298, -2.1105029582977295, -1.714426040649414, -0.5260074734687805, -2.027273654937744, -0.450788289308548, -0.025467323139309883, -2.52720492426306e-05, -0.00011181206355104223, -0.13108523190021515, -0.020344046875834465, -0.00318508199416101, -0.0005671561229974031, -4.446407547220588e-05, -0.0001429217227268964, -0.2331000566482544, -0.0036954462993890047, -0.24388302862644196], "finish_reason": "stop"}, {"text": " Exception as exc:", "tokens": [" Exception", " as", " exc", ":", "\n"], "logprobs": [-2.9454526901245117, -0.08366922289133072, -0.04597361013293266, -0.005911604501307011, -0.024185385555028915], "finish_reason": "stop"}, {"text": " codecs.getreader(to_encoding)(image.info.get('comment', ''))", "tokens": [" codec", "s", ".", "get", "reader", "(", "to", "_", "encoding", ")(", "image", ".", "info", ".", "get", "('", "comment", "'", ",", " ''", "))", "\n"], "logprobs": [-2.60662579536438, -3.4570634852570947e-06, -3.766942609217949e-05, -0.773888111114502, -0.28736796975135803, -0.0871187075972557, -0.5252432227134705, -3.0040289857424796e-05, -5.364403477869928e-06, -0.05467758700251579, -0.2645840048789978, -0.015157986432313919, -0.6515199542045593, -0.5526415705680847, -0.012217565439641476, -0.782049298286438, -0.019996363669633865, -0.13341137766838074, -0.0008871195605024695, -0.40806517004966736, -0.0005894353962503374, -0.1080009788274765], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-1.3608568906784058, -0.06670869141817093, -0.09642191231250763, -0.023856263607740402], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0464920774102211, -0.0010887415846809745, -0.010864156298339367, -0.03547922521829605, -0.419911652803421, -1.2397689715726301e-05, -2.109982233378105e-05, -0.03646291419863701, -0.057491328567266464, -0.02125590480864048, -0.0008282806375063956, -0.006151670124381781, -2.90866428258596e-05, -1.0251946150674485e-05, -0.010646450333297253, -0.013798678293824196], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.19147901237010956, -0.0009494088008068502, -0.06911466270685196, -0.0793810784816742, -0.22377392649650574, -0.00016008525562938303, -5.185469490243122e-05, -0.05935722589492798, -0.6765745282173157], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.5523799061775208, -0.015818702057003975, -0.08166428655385971, -7.235741941258311e-05, -1.9788545614574105e-05, -0.08583217859268188, -0.023056281730532646], "finish_reason": "stop"}, {"text": "decode()", "tokens": ["decode", "()", "\n"], "logprobs": [-0.0015281677478924394, -2.1475398540496826, -0.019137153401970863], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.08886627107858658, -0.044083233922719955, -1.9073304429184645e-05, -0.01120441872626543, -9.536738616588991e-07, -2.0265558760002023e-06, -0.000990377040579915, -0.001986317802220583, -3.1470757676288486e-05, -2.861018856492592e-06, -0.08447694778442383, -0.00011455356434453279, -0.0037683681584894657, -0.0003491030656732619, -0.0008672290714457631], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004988011438399553, -3.4570634852570947e-06, -0.0009479796281084418, -0.032760489732027054, -0.029196452349424362, -8.344646857949556e-07, -7.629365427419543e-06, -0.02205907739698887, -0.011858680285513401, -0.025978872552514076, -0.0017982041463255882, -0.0003672163875307888, -0.006586745847016573, -8.475421054754406e-05, -0.012852687388658524], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10120847821235657, -0.5944636464118958], "finish_reason": "stop"}], "metrics": {"energy": 275.9607628335954, "energy_per_token": 1.5769186447634025, "time": 10.523512, "time_per_token": 0.06013435428571429}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.12758858501911163, -0.000713213172275573, -0.0003718638326972723, -0.0004067785630468279, -0.006453033071011305, -0.014438907615840435, -0.003493398893624544, -0.6514052748680115, -0.010829840786755085, -0.03557828068733215], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.037936288863420486, -9.285972191719338e-05, -1.6569954823353328e-05, -1.3828182090946939e-05, -0.0001685477327555418, -0.000276765669696033, -0.004314637742936611, -0.00033063191222026944, -0.000402250443585217, -2.145764938177308e-06, -0.014406712725758553, -0.0003252692404203117, -0.05997512862086296, -0.7987426519393921, -0.06187371537089348], "finish_reason": "stop"}, {"text": " from_encoding == \"cp1251\":", "tokens": [" from", "_", "encoding", " ==", " \"", "cp", "1", "2", "5", "1", "\":", "\n"], "logprobs": [-2.3559603691101074, -2.0503786799963564e-05, -7.879423355916515e-05, -1.40093994140625, -0.4263085126876831, -0.10150578618049622, -0.0030656505841761827, -0.0003129946126136929, -4.6967357775429264e-05, -0.0005648924270644784, -0.131903737783432, -0.07840930670499802], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.27314579486846924, -4.577531944960356e-05, -1.4781842764932662e-05, -0.008749599568545818, -0.2951235771179199, -0.006005101837217808, -1.1391313076019287, -0.00011503035057103261, -1.490105023549404e-05, -0.07477042078971863, -0.002448182087391615, -0.00020728347590193152, -0.005159515421837568, -0.014874856919050217, -2.372236667724792e-05, -1.07287787614041e-05, -0.031715985387563705, -0.024493344128131866], "finish_reason": "stop"}, {"text": " UnicodeDecodeError:  # Fallback to comment processing", "tokens": [" Un", "icode", "Dec", "ode", "Error", ":", "  ", "#", " Fall", "back", " to", " comment", " processing", "\n"], "logprobs": [-2.48437237739563, -3.528532761265524e-05, -0.050585612654685974, -1.0728830375228426e-06, -3.755022044060752e-05, -0.09869618713855743, -2.9203033447265625, -0.0006450717919506133, -1.7028570175170898, -0.20844610035419464, -0.25188568234443665, -1.2638660669326782, -0.19669096171855927, -0.6669144034385681], "finish_reason": "stop"}, {"text": " ValueError(f\"Conversion failed for text: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Con", "version", " failed", " for", " text", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.04482622817158699, -2.276871418871451e-05, -0.08566368371248245, -0.5769686102867126, -0.08091552555561066, -2.0980095863342285, -0.278987318277359, -1.112206220626831, -2.0915751457214355, -1.624815583229065, -0.5058698654174805, -0.06261066347360611, -0.5934304594993591, -0.17404180765151978, -0.0010377742582932115, -1.2732839584350586, -0.014298485592007637, -0.0067904191091656685], "finish_reason": "stop"}, {"text": " FileNotFoundError:", "tokens": [" File", "NotFound", "Error", ":", "\n"], "logprobs": [-2.687318801879883, -0.005653819069266319, -2.13382354559144e-05, -0.9081478118896484, -0.04169350117444992], "finish_reason": "stop"}, {"text": " image.comment.split(\";\")[0]", "tokens": [" image", ".", "comment", ".", "split", "(", "\"", ";", "\"", ")[", "0", "]", "\n"], "logprobs": [-0.3039686977863312, -0.0015304292319342494, -0.09758105129003525, -0.5130765438079834, -1.0925637483596802, -0.5025925636291504, -0.2776985168457031, -0.7666445374488831, -0.2011018842458725, -0.43618807196617126, -0.3187531530857086, -0.0022401732858270407, -0.682976245880127], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.339231014251709, -0.09431832283735275, -0.007212671916931868], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04914212226867676, -0.0010221739066764712, -0.01131581049412489, -0.029069317504763603, -0.4514269232749939, -1.549708758830093e-05, -2.1457441107486375e-05, -0.031176744028925896, -0.051067713648080826, -0.019637104123830795, -0.0008737798780202866, -0.006528833415359259, -2.9682672902708873e-05, -1.0013530300057027e-05, -0.013109211809933186, -0.012146905064582825], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.16457654535770416, -0.0008158930577337742, -0.06386645138263702, -0.08429934829473495, -0.19012638926506042, -0.00019822540343739092, -6.341733387671411e-05, -0.05891720950603485, -0.6670332551002502], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.39829564094543457, -0.011160802096128464, -0.09155837446451187, -0.00010573305189609528, -1.966933996300213e-05, -0.10496620088815689, -0.028860287740826607], "finish_reason": "stop"}, {"text": "decode(\"utf8\")", "tokens": ["decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.0015422129072248936, -0.1249292865395546, -0.6764460206031799, -0.08539753407239914, -0.36615705490112305, -0.00010847456724150106, -0.014299895614385605, -0.08442743122577667], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.09773652255535126, -0.04434088245034218, -2.6225699912174605e-05, -0.013190627098083496, -1.0728830375228426e-06, -1.7881377516459906e-06, -0.001328777172602713, -0.002209247788414359, -2.90866428258596e-05, -3.099436753473128e-06, -0.0681086927652359, -0.00010215714428341016, -0.0027305721305310726, -0.000392598332837224, -0.0008747326792217791], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.004577277693897486, -3.2186455882765586e-06, -0.0009833505610004067, -0.02954939939081669, -0.025122929364442825, -8.344646857949556e-07, -8.583032467868179e-06, -0.021375400945544243, -0.012283391319215298, -0.027217566967010498, -0.001674560597166419, -0.00032824851223267615, -0.006125960033386946, -8.523101132595912e-05, -0.014966698363423347], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09541986882686615, -0.5325238704681396], "finish_reason": "stop"}], "metrics": {"energy": 232.42465383720406, "energy_per_token": 1.2912480768733559, "time": 10.730998, "time_per_token": 0.05961665555555555}}
