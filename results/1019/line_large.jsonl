{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -1.8271820545196533, -0.005090608727186918, -0.01862618513405323], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\", config=\"--psm 6\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ",", " config", "=", "\"", "--", "ps", "m", " ", "6", "\"", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -0.21849073469638824, -0.17993217706680298, -0.06844104826450348, -2.5430798530578613, -0.12218007445335388, -0.16399605572223663, -0.08733852207660675, -0.1145048663020134, -0.33288732171058655, -6.0437283536884934e-05, -0.0010012142593041062, -0.5570229887962341, -0.23004725575447083, -0.013603013008832932, -0.12565012276172638], "finish_reason": "stop"}, {"text": " extracted_text.strip():", "tokens": [" extracted", "_", "text", ".", "strip", "():", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -2.6780529022216797, -0.12463865429162979, -0.0976458191871643, -0.05969969183206558], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14197862148284912, -1.1205610462639015e-05, -0.0001147919538198039, -0.008589701727032661, -0.08595514297485352, -0.05964477360248566, -0.296724408864975, -7.033323527139146e-06, -2.276871418871451e-05, -0.02036542259156704, -0.002097075106576085, -0.002291436307132244, -0.004026520997285843, -0.017486801370978355, -3.3378546504536644e-06, -5.483612312673358e-06, -0.002357205841690302, -0.023966487497091293], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as err:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " err", ":", "\n"], "logprobs": [-0.09070224314928055, -0.013730129227042198, -2.634490556374658e-05, -0.0043181986548006535, -1.5497195136049413e-06, -4.768370445162873e-07, -0.0004668337933253497, -0.024575816467404366, -7.033323527139146e-06, -6.9141146923357155e-06, -0.46744266152381897, -0.00039081089198589325, -2.247307777404785, -0.02091379277408123, -0.008102642372250557], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to decode or encode extracted text: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " decode", " or", " encode", " extracted", " text", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0009053422254510224, -6.318072337307967e-06, -0.03125658631324768, -0.5089412927627563, -0.04447406902909279, -2.5110974311828613, -0.023675594478845596, -0.0012207920663058758, -1.1338839530944824, -1.6582581996917725, -0.1709032654762268, -1.6552311182022095, -0.039523009210824966, -0.4662491977214813, -0.005895961541682482, -0.20129618048667908, -0.03374892845749855, -0.014779130928218365, -0.7237692475318909, -0.005397864617407322, -0.0013552061282098293], "finish_reason": "stop"}, {"text": " pytesseract.TesseractNotFoundError:", "tokens": [" py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "NotFound", "Error", ":", "\n"], "logprobs": [-1.6461918354034424, -0.0007963585085235536, -1.3589766240329482e-05, -1.2159273865108844e-05, -2.1219027985353023e-05, -0.00014661667228210717, -1.484121561050415, -0.0012718691723421216, -1.7046782886609435e-05, -0.0038265592884272337, -0.9924644827842712, -1.0490362910786644e-05, -0.1352008432149887, -0.056849367916584015], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ")", "\n"], "logprobs": [-0.08477193117141724, -0.00012730741582345217, -0.7195068597793579, -0.08318185806274414, -0.0031459862366318703, -0.33162999153137207, -0.00781727023422718, -0.1392495036125183, -0.00011669908417388797, -1.1376338005065918, -0.19574731588363647], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.17376381158828735, -0.02845020778477192, -0.0010405131615698338], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.048796817660331726, -0.0004142856632824987, -0.00956665351986885, -0.013812434859573841, -0.9543548822402954, -3.3378044463461265e-05, -1.9907753085135482e-05, -0.04524480178952217, -0.025208022445440292], "finish_reason": "stop"}, {"text": "getdecoder(from_encoding)(comment)[0].decode(to_encoding)", "tokens": ["get", "decoder", "(", "from", "_", "encoding", ")(", "comment", ")[", "0", "]", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-3.1597490310668945, -0.01957140862941742, -0.006705757696181536, -0.6737355589866638, -5.8412379075889476e-06, -2.312633478140924e-05, -0.04682976007461548, -0.045426398515701294, -0.5906826853752136, -0.006221688352525234, -0.0003983181086368859, -0.6659178137779236, -0.04982160031795502, -0.0049408008344471455, -0.022408723831176758, -1.311301275563892e-06, -8.344646857949556e-07, -0.0009130837861448526, -0.003116871230304241], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.025401663035154343, -0.05866082012653351, -1.379414439201355, -2.288792165927589e-05, -7.629365427419543e-06, -0.10570704191923141, -0.002867755014449358], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.006452914793044329, -0.03479937091469765, -0.06064021587371826, -3.3378546504536644e-06, -4.768370445162873e-07, -0.004699850920587778, -0.0010939810890704393], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.16759787499904633, -0.019672054797410965, -1.2040065485052764e-05, -0.0499245747923851, -1.311301275563892e-06, -2.3841855067985307e-07, -0.00012146688823122531, -0.18140475451946259, -8.583032467868179e-06, -2.3841830625315197e-06, -0.028802724555134773, -1.2159273865108844e-05, -0.005390868987888098, -0.0007594323833473027, -0.00023934361524879932], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00021681819634977728, -1.4305104514278355e-06, -0.000625176471658051, -0.06648385524749756, -0.00827585905790329, -1.9073468138230965e-06, -0.00015352977789007127, -0.025852955877780914, -0.0029731853865087032, -0.012861396186053753, -0.0005230727256275713, -0.0003364712174516171, -0.0006292270263656974, -1.7881233361549675e-05, -0.002261463785544038], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.11117464303970337, -0.32481226325035095], "finish_reason": "stop"}], "metrics": {"energy": 876.1978486576071, "energy_per_token": 4.295087493419643, "time": 22.92624, "time_per_token": 0.1123835294117647}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " not extracted_text:", "tokens": [" not", " extracted", "_", "text", ":", "\n"], "logprobs": [-1.7981617450714111, -0.01095271110534668, -1.4424220353248529e-05, -2.706014311115723e-05, -0.14929649233818054, -0.09669867902994156], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.13634473085403442, -1.2278481335670222e-05, -0.00011264643399044871, -0.008781624026596546, -0.09425442665815353, -0.05240866169333458, -0.36125826835632324, -6.794906312279636e-06, -2.109982233378105e-05, -0.019351381808519363, -0.0027267676778137684, -0.002139780670404434, -0.0039343819953501225, -0.01757863722741604, -3.6954811548639555e-06, -6.318072337307967e-06, -0.0029643899761140347, -0.024222038686275482], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.07951056212186813, -0.01575651206076145, -3.111314072157256e-05, -0.004484002944082022, -1.1920922133867862e-06, -4.768370445162873e-07, -0.00039641151670366526, -0.028427498415112495, -6.794906312279636e-06, -5.8412379075889476e-06, -1.0058033466339111, -0.015386099927127361], "finish_reason": "stop"}, {"text": " ValueError(f\"Invalid encodings specified: {from_encoding} -> {to_encoding}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Invalid", " enc", "od", "ings", " specified", ":", " {", "from", "_", "encoding", "}", " ->", " {", "to", "_", "encoding", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0009198724874295294, -9.179073458653875e-06, -0.02817012183368206, -0.6237339377403259, -0.04302891716361046, -2.8690810203552246, -1.8041595220565796, -0.00029452278977259994, -0.00010287232726113871, -2.5992019176483154, -0.5112429857254028, -0.029240794479846954, -1.440716028213501, -5.960446742392378e-06, -9.417489309271332e-06, -0.10831542313098907, -1.460611343383789, -0.0006524579366669059, -0.00010334911348763853, -1.168244216387393e-05, -1.6689160474925302e-05, -0.09004432708024979, -0.009183665737509727, -0.0074725402519106865, -7.724463648628443e-05, -0.0009777533123269677], "finish_reason": "stop"}, {"text": " OSError:", "tokens": [" O", "SE", "rror", ":", "\n"], "logprobs": [-2.699735164642334, -0.0024301065132021904, -3.576278118089249e-07, -0.16750109195709229, -0.04696955531835556], "finish_reason": "stop"}, {"text": " image.info.get('comment')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "')", "\n"], "logprobs": [-0.0897640809416771, -0.00012003655137959868, -0.8170303702354431, -0.09959449619054794, -0.004143344704061747, -1.3565270900726318, -0.19823676347732544, -0.4382375180721283, -0.13839931786060333], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14469784498214722, -0.02389746718108654, -0.0013898485340178013], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.038631562143564224, -0.00044312194222584367, -0.009455067105591297, -0.012349213473498821, -0.7263544797897339, -1.1920922133867862e-06, -1.7404405298293568e-05, -0.09783035516738892, -0.08511488884687424, -0.0007781338645145297, -0.0005448763840831816, -0.004343005828559399, -3.3378546504536644e-06, -2.622600959512056e-06, -0.0013616346986964345, -0.15941718220710754], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.23534244298934937, -0.0005896736984141171, -0.2551672160625458, -0.01732618547976017, -0.20187227427959442, -1.3589766240329482e-05, -9.798523387871683e-05, -0.2954131066799164, -0.6691128611564636, -0.01889784447848797, -0.017410539090633392, -0.1864643692970276, -6.794906312279636e-06, -1.9073468138230965e-06, -0.01686106249690056, -0.062197957187891006, -0.01664278283715248, -0.41027554869651794, -0.025195468217134476, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.0011516136582940817, -0.0013763965107500553], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02834661863744259, -0.06427255272865295, -0.2839798033237457, -0.9968054294586182, -9.417489309271332e-06, -0.018862750381231308, -0.16719494760036469, -0.774970293045044, -7.56950321374461e-05, -0.00014041867689229548, -0.01587936468422413], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.008910535834729671, -0.030204148963093758, -0.07544785737991333, -4.6491513785440475e-06, -4.768370445162873e-07, -0.004676002077758312, -0.0010265801101922989], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11313708126544952, -0.01763157919049263, -8.821448318485636e-06, -0.03641831502318382, -8.344646857949556e-07, -2.3841855067985307e-07, -0.0001070442158379592, -0.1943255513906479, -9.179073458653875e-06, -1.4305104514278355e-06, -0.02993820421397686, -1.645074735279195e-05, -0.006164228543639183, -0.0006761648692190647, -0.000300600629998371], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00023278864682652056, -1.311301275563892e-06, -0.0006997520686127245, -0.06532325595617294, -0.007617237512022257, -2.3841830625315197e-06, -0.0002212279650848359, -0.023493729531764984, -0.0029082882683724165, -0.012298228219151497, -0.0004752936656586826, -0.0004654039512388408, -0.0006479309522546828, -2.062299427052494e-05, -0.0023259271401911974], "finish_reason": "stop"}, {"text": " comment.encode(to_encoding).decode(to_encoding)", "tokens": [" comment", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0762435793876648, -2.5102949142456055, -0.28301337361335754, -0.017860300838947296, -0.2832390069961548, -2.0146166207268834e-05, -1.2636104656849056e-05, -0.025912199169397354, -0.00822502002120018, -0.0002899941464420408, -0.004005386959761381, -0.002893549157306552, -1.9073468138230965e-06, -4.6491513785440475e-06, -0.09884575754404068, -0.20245632529258728], "finish_reason": "stop"}], "metrics": {"energy": 892.2760857849124, "energy_per_token": 4.310512491714553, "time": 23.33176, "time_per_token": 0.11271381642512077}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as ex:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " ex", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -2.9445900917053223, -0.034301068633794785, -0.006937227211892605], "finish_reason": "stop"}, {"text": " ValueError(f\"Error while converting extracted text to '{to_encoding}' encoding: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " while", " converting", " extracted", " text", " to", " '", "{", "to", "_", "encoding", "}'", " encoding", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -0.7931943535804749, -2.2450008392333984, -0.29448816180229187, -0.8876016139984131, -0.06356356292963028, -2.4613733291625977, -2.086127758026123, -0.0060674287378787994, -0.0016141016967594624, -2.074220174108632e-05, -1.168244216387393e-05, -0.2014702409505844, -0.2476559281349182, -0.5484617352485657, -0.011459245346486568, -0.1207723617553711, -0.02082798443734646, -0.007129347883164883, -1.1132514476776123, -0.0013396107824519277, -0.0009639384225010872], "finish_reason": "stop"}, {"text": " Exception:  # OCR extraction failed", "tokens": [" Exception", ":", "  ", "#", " O", "CR", " extraction", " failed", "\n"], "logprobs": [-0.9058294296264648, -0.6391831040382385, -2.947035074234009, -0.00020704510097857565, -2.5534420013427734, -0.014333152212202549, -0.9420697689056396, -0.31272703409194946, -0.5738652944564819], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ")", "\n"], "logprobs": [-0.07171427458524704, -0.0001431601122021675, -0.7176791429519653, -0.09351177513599396, -0.0031704658176749945, -0.302608847618103, -0.008031218312680721, -0.1628495454788208, -0.0001003691868390888, -1.0170239210128784, -0.1861947476863861], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.13462534546852112, -0.023982897400856018, -0.001214005402289331], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.03976568207144737, -0.0004732680681627244, -0.00849904678761959, -0.00851275771856308, -0.8631311058998108, -3.755022044060752e-05, -2.3841574147809297e-05, -0.05055444687604904, -0.028108347207307816], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode()", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-0.1741902381181717, -0.0007185738068073988, -0.2671087682247162, -0.019298413768410683, -0.21077392995357513, -1.9550132492440753e-05, -7.807903602952138e-05, -0.3243626356124878, -0.7148653268814087, -0.02638752944767475, -0.01647968590259552, -0.12518900632858276, -7.152531907195225e-06, -1.7881377516459906e-06, -0.01998058892786503, -0.06247707083821297, -0.011943495832383633, -0.8042917847633362, -0.0008376903715543449], "finish_reason": "stop"}, {"text": "encode(\"utf-8\", \"ignore\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.022556055337190628, -0.07015729695558548, -0.2500373423099518, -1.0516419410705566, -0.1964307427406311, -0.016883451491594315, -8.260862523457035e-05, -1.291440725326538, -0.403426855802536, -0.6919443607330322, -9.369411418447271e-05, -0.00040999590419232845, -0.01281691063195467], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009549533016979694, -0.03837072104215622, -0.056711625307798386, -3.933898824470816e-06, -7.152555099310121e-07, -0.0051564318127930164, -0.0010437285527586937], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13764117658138275, -0.02585795149207115, -6.556489552167477e-06, -0.04542696848511696, -9.536738616588991e-07, -2.3841855067985307e-07, -8.618460560683161e-05, -0.21878531575202942, -6.556489552167477e-06, -1.311301275563892e-06, -0.028270021080970764, -1.7165990357170813e-05, -0.005088829901069403, -0.0006815256201662123, -0.00027581225731410086], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00018749863374978304, -1.1920922133867862e-06, -0.0005553610390052199, -0.07436269521713257, -0.007240010891109705, -2.264974000354414e-06, -0.0002711643755901605, -0.026550758630037308, -0.0029886364936828613, -0.01225253939628601, -0.0005228344234637916, -0.00037579628406092525, -0.0007269124034792185, -2.1219027985353023e-05, -0.0021604786161333323], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.0812571719288826], "finish_reason": "stop"}], "metrics": {"energy": 830.9037567405699, "energy_per_token": 4.350281448903507, "time": 21.641716, "time_per_token": 0.11330741361256544}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(\"\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0442\u0438\u043f \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430.\") from exc", "tokens": [" Value", "Error", "(", "\"", "\u041d", "\u0435", "\u0434\u043e", "\u043f\u0443", "\u0441\u0442\u0438", "\u043c", "\u044b", "\u0439", " \u0442\u0438", "\u043f", " \u0437\u0430", "\u043a\u043e", "\u0434\u0438", "\u0440\u043e", "\u0432\u0430\u043d", "\u043d\u043e\u0433\u043e", " \u0442\u0435", "\u043a", "\u0441\u0442\u0430", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -1.7199397087097168, -2.2692556381225586, -0.005957583896815777, -3.0964202880859375, -0.02262493409216404, -5.817244164063595e-05, -0.8064035773277283, -0.00037448544753715396, -0.6920629143714905, -1.2617722749710083, -0.0002892790944315493, -2.77740478515625, -0.2183256298303604, -0.000506511190906167, -0.08559901267290115, -0.27326324582099915, -0.1618281900882721, -0.5159395337104797, -0.00923988875001669, -0.004855507984757423, -2.5318703651428223, -0.14294523000717163, -0.05722849443554878, -0.023446453735232353, -0.00011729506513802335, -0.0027872782666236162], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-1.0523284673690796, -0.7389161586761475, -0.9271492958068848, -0.004986943677067757, -0.027172669768333435], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\").replace(b'\\r\\n'.decode(), '\\n')", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", ".", "replace", "(", "b", "'\\", "r", "\\", "n", "'", ".", "decode", "()", ",", " '\\", "n", "')", "\n"], "logprobs": [-0.09249909222126007, -0.00011359999916749075, -0.6171491742134094, -0.12182226032018661, -0.00339978514239192, -0.31798848509788513, -0.008148876018822193, -0.13084785640239716, -9.97731985989958e-05, -0.46962976455688477, -0.11925548315048218, -0.0031361228320747614, -0.00010179955279454589, -2.6534745693206787, -3.3729591369628906, -0.04863229766488075, -0.8749865293502808, -1.4606986045837402, -0.5864817500114441, -0.5728773474693298, -0.059587497264146805, -0.009028798900544643, -1.1906975507736206, -0.02666509710252285, -0.2927166223526001, -0.0016091029392555356, -1.7468886375427246, -0.09813904017210007, -0.0025324912276118994, -0.23407921195030212], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14744970202445984, -0.02423076517879963, -0.0009509570081718266], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.031873151659965515, -0.0005329619161784649, -0.009853769093751907, -0.014321400783956051, -0.6654960513114929, -3.957670196541585e-05, -2.062299427052494e-05, -0.047189388424158096, -0.027761265635490417], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode()", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-0.18367856740951538, -0.0006494796834886074, -0.227822944521904, -0.02019241638481617, -0.23764437437057495, -2.253030106658116e-05, -9.798523387871683e-05, -0.313303142786026, -0.7572599649429321, -0.020714960992336273, -0.020094744861125946, -0.15740537643432617, -6.6756979322235566e-06, -1.5497195136049413e-06, -0.013980315998196602, -0.0662798210978508, -0.015443501994013786, -0.8293569684028625, -0.0011017211945727468], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.022310685366392136, -0.06475469470024109, -1.6456854343414307, -1.6927575416048057e-05, -6.794906312279636e-06, -0.08761616796255112, -0.0029174406081438065], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.00799574051052332, -0.03958843648433685, -0.07255587726831436, -4.6491513785440475e-06, -3.576278118089249e-07, -0.006030459422618151, -0.0011136289685964584], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, UnicodeEncodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Un", "icode", "Enc", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11958269774913788, -0.01746911182999611, -9.894321920000948e-06, -0.0346849225461483, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.0001227780303452164, -1.9447509050369263, -4.768370445162873e-07, -0.008087743073701859, -3.576278118089249e-07, -3.576278118089249e-07, -0.2823144793510437, -0.02323240227997303, -2.3841855067985307e-07, -4.768370445162873e-07, -0.02896185591816902, -2.8729025871143676e-05, -0.008719583973288536, -0.0008429311565123498, -0.00014077626110520214], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00019333878299221396, -1.4305104514278355e-06, -0.0007297713309526443, -0.0754077285528183, -0.010134429670870304, -2.50339189733495e-06, -0.00018869050836656243, -0.022946422919631004, -0.0035590894985944033, -0.011322175152599812, -0.000518664310220629, -0.00033802041434682906, -0.0006086166249588132, -2.002696055569686e-05, -0.0024567442014813423], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.09955769777297974], "finish_reason": "stop"}], "metrics": {"energy": 868.0919274263381, "energy_per_token": 4.214038482652127, "time": 22.921207, "time_per_token": 0.11126799514563106}}
{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -1.8271820545196533, -0.005090608727186918, -0.01862618513405323], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(f\"Error in converting OCR text encoding: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " in", " converting", " O", "CR", " text", " encoding", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -0.5568652153015137, -0.035399146378040314, -0.8066010475158691, -3.054805278778076, -2.2838432788848877, -2.7493655681610107, -0.00039891392225399613, -1.110016107559204, -1.1442914009094238, -0.1894696056842804, -0.006358511745929718, -0.2150634080171585, -0.030967922881245613, -0.01187458448112011, -0.7162437438964844, -0.004386446438729763, -0.0016321921721100807], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-0.9922906756401062, -0.7663698792457581, -0.9093779921531677, -0.005252727307379246, -0.03670759126543999], "finish_reason": "stop"}, {"text": " image.info.get(\"Comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "Comment", "\"", ")", "\n"], "logprobs": [-0.0754532739520073, -0.0001436368766007945, -0.6953796148300171, -0.10375531762838364, -0.0025238110683858395, -0.34432452917099, -0.009080777876079082, -2.301090955734253, -0.0008294717408716679, -0.9417087435722351, -0.16595900058746338], "finish_reason": "stop"}, {"text": " not comment:", "tokens": [" not", " comment", ":", "\n"], "logprobs": [-2.1960487365722656, -0.16203227639198303, -0.019748378545045853, -0.005783135071396828], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.05770087242126465, -0.0004866131057497114, -0.010112008079886436, -0.011008481495082378, -0.764758288860321, -3.8265450712060556e-05, -1.6927575416048057e-05, -0.04636484757065773, -0.029454490169882774], "finish_reason": "stop"}, {"text": "encode(comment, from_encoding).decode(to_encoding)", "tokens": ["encode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-2.8088912963867188, -0.0003387354372534901, -0.14525562524795532, -0.07005771994590759, -0.6225752830505371, -2.2411095415009186e-05, -4.362964682513848e-05, -0.12190911173820496, -0.5150868892669678, -0.006709073204547167, -0.08331644535064697, -0.12425518780946732, -7.867782187531702e-06, -3.4570634852570947e-06, -0.01497703231871128, -0.09172424674034119], "finish_reason": "stop"}, {"text": "encode(\"utf-8\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.024395277723670006, -0.070919930934906, -0.3653801679611206, -1.1143765449523926, -0.20819878578186035, -0.0141163170337677, -6.329813186312094e-05, -0.3541242480278015, -0.007804496213793755], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009447863325476646, -0.04750796779990196, -0.08797245472669601, -4.172316494077677e-06, -3.576278118089249e-07, -0.005283203441649675, -0.0010287236655130982], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.15112349390983582, -0.016163384541869164, -1.2040065485052764e-05, -0.03286639228463173, -8.344646857949556e-07, -3.576278118089249e-07, -8.40390202938579e-05, -0.23279020190238953, -1.3589766240329482e-05, -1.7881377516459906e-06, -0.02728322520852089, -1.5020257706055418e-05, -0.005351859610527754, -0.0006337541271932423, -0.00030560590676032007], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00027223696815781295, -2.145764938177308e-06, -0.0006550788530148566, -0.0713440403342247, -0.009554846212267876, -2.622600959512056e-06, -0.00017975145601667464, -0.026300562545657158, -0.0026895562186837196, -0.011862685903906822, -0.000537727726623416, -0.0004377598816063255, -0.0007128558354452252, -1.8715683836489916e-05, -0.0021807001903653145], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.0673883780837059], "finish_reason": "stop"}], "metrics": {"energy": 777.9916254920963, "energy_per_token": 4.523207124954048, "time": 20.18481, "time_per_token": 0.1173535465116279}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -0.7413238286972046, -0.0028123611118644476, -0.006116955541074276], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect text encoding.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " text", " encoding", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -1.9277522563934326, -1.8080880641937256, -0.0003480305604171008, -0.0001264730526600033, -2.370209217071533, -0.3088890016078949, -2.0584795475006104, -0.11059431731700897, -0.03810097277164459, -0.010039783082902431, -8.427741704508662e-05, -0.0033690142445266247], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-1.0084339380264282, -0.6878487467765808, -0.9179385304450989, -0.00482430774718523, -0.029582731425762177], "finish_reason": "stop"}, {"text": " image.getexif().get(270) or \"\"", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "2", "7", "0", ")", " or", " \"", "\"", "\n"], "logprobs": [-0.07732769101858139, -0.00012981049076188356, -0.8671998977661133, -0.1632823944091797, -6.05564855504781e-05, -0.06519315391778946, -0.03259526938199997, -0.0019397982396185398, -0.0021764179691672325, -2.613415002822876, -0.00028081765049137175, -0.00034409802174195647, -0.32623863220214844, -2.154669761657715, -0.2681225836277008, -0.005649907514452934, -0.33478644490242004], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14949382841587067, -0.0246953796595335, -0.0010318199638277292], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04034702852368355, -0.00042632073746062815, -0.010950942523777485, -0.00929681770503521, -0.8497715592384338, -3.4450891689630225e-05, -2.1815061700181104e-05, -0.04534369334578514, -0.026808900758624077], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.22136269509792328, -0.0006735440110787749, -0.2107684314250946, -0.01703605055809021, -0.24117974936962128, -2.276871418871451e-05, -9.762764238985255e-05, -0.3057337701320648, -0.7425395250320435, -0.02337541989982128, -0.016334975138306618, -0.11684513092041016, -7.152531907195225e-06, -3.3378546504536644e-06, -0.019363658502697945, -0.0711282342672348, -0.012498504482209682, -0.44093772768974304, -0.021174326539039612, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.0012188870459794998, -0.0019186199642717838], "finish_reason": "stop"}, {"text": "encode(\"utf-8\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.025750724598765373, -0.08432509750127792, -0.21654702723026276, -1.0212504863739014, -0.2091221660375595, -0.015561112202703953, -7.962863310240209e-05, -0.46343350410461426, -0.0072364602237939835], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.008859019726514816, -0.03409336134791374, -0.06360718607902527, -3.814689989667386e-06, -5.960462772236497e-07, -0.004870930220931768, -0.0010157431242987514], "finish_reason": "stop"}, {"text": " UnicodeDecodeError:", "tokens": [" Un", "icode", "Dec", "ode", "Error", ":", "\n"], "logprobs": [-2.627563953399658, -2.50339189733495e-06, -0.11706964671611786, -5.125986263010418e-06, -2.0265373677830212e-05, -1.407572627067566, -0.0024588846135884523], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00025722055579535663, -1.1920922133867862e-06, -0.0005619138828478754, -0.06691765785217285, -0.010350595228374004, -2.0265558760002023e-06, -0.00017271934484597296, -0.031220536679029465, -0.0029736608266830444, -0.013556678779423237, -0.000606710382271558, -0.00031764229061082006, -0.0007366804056800902, -1.645074735279195e-05, -0.002166069345548749], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.07890395820140839, -0.40637052059173584], "finish_reason": "stop"}], "metrics": {"energy": 795.1469161911011, "energy_per_token": 4.54369666394915, "time": 20.617992, "time_per_token": 0.11781709714285715}}
{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -1.8271820545196533, -0.005090608727186918, -0.01862618513405323], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(f\"Failed to convert the extracted text from {filename}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Failed", " to", " convert", " the", " extracted", " text", " from", " {", "filename", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -0.5568652153015137, -0.035399146378040314, -2.3771252632141113, -0.02404818683862686, -0.41747337579727173, -2.02158784866333, -0.3760626018047333, -0.029129644855856895, -1.2445738315582275, -0.2882847785949707, -3.0092005729675293, -1.3221516609191895, -0.0436076857149601, -0.010355786420404911, -0.00014959646796341985, -0.0013383012264966965], "finish_reason": "stop"}, {"text": " ValueError:", "tokens": [" Value", "Error", ":", "\n"], "logprobs": [-1.2930853366851807, -1.7881377516459906e-06, -0.24038469791412354, -0.06312136352062225], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ")", "\n"], "logprobs": [-0.09003299474716187, -0.00010466027742950246, -0.7134066820144653, -0.12362425774335861, -0.0029006809927523136, -0.34825271368026733, -0.008226439356803894, -0.14242245256900787, -0.00010501786891836673, -0.9811842441558838, -0.17717452347278595], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14374923706054688, -0.024383528158068657, -0.0009542917250655591], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.03770924359560013, -0.0004493180604185909, -0.010200747288763523, -0.01340048760175705, -0.7148056030273438, -4.076874756719917e-05, -1.728519782773219e-05, -0.04079700633883476, -0.021516816690564156], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.20356863737106323, -0.0006605588714592159, -0.2945246398448944, -0.017816387116909027, -0.23348399996757507, -2.074220174108632e-05, -9.643566590966657e-05, -0.3545209765434265, -0.6397204995155334, -0.025469299405813217, -0.020713793113827705, -0.13478641211986542, -7.271740287251305e-06, -1.9073468138230965e-06, -0.015712035819888115, -0.04916379973292351, -0.01432774681597948, -0.574303925037384, -0.02130608633160591, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.0013040142366662621, -0.001903747208416462], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.023460078984498978, -0.06267852336168289, -0.2927777171134949, -0.9843171238899231, -1.0013530300057027e-05, -0.01688450574874878, -0.18897651135921478, -0.738167941570282, -7.60526381782256e-05, -0.00014351768186315894, -0.013455886393785477], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0075965337455272675, -0.04750228300690651, -0.06666531413793564, -4.0531076592742465e-06, -7.152555099310121e-07, -0.0050506386905908585, -0.0008684201166033745], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13212081789970398, -0.012889876030385494, -1.1324817933200393e-05, -0.0481734462082386, -7.152555099310121e-07, -2.3841855067985307e-07, -7.664863369427621e-05, -0.21194638311862946, -7.986990567587782e-06, -1.0728830375228426e-06, -0.029258854687213898, -1.2755313036905136e-05, -0.005844172090291977, -0.000714523543138057, -0.0003147821989841759], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00022897482267580926, -1.7881377516459906e-06, -0.0006739014061167836, -0.0763302892446518, -0.009504307992756367, -2.264974000354414e-06, -0.00019727191829588264, -0.0254078209400177, -0.002781572053208947, -0.010074008256196976, -0.0005401106318458915, -0.000277123210253194, -0.0005737089086323977, -1.5616295058862306e-05, -0.0023648173082619905], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.0869976356625557, -0.4553775191307068], "finish_reason": "stop"}], "metrics": {"energy": 783.0967699193953, "energy_per_token": 4.374842290052488, "time": 20.602257, "time_per_token": 0.11509640782122905}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=None, config=\"\", nice=0)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "None", ",", " config", "=", "\"", "\"", ",", " nice", "=", "0", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -1.925430417060852, -0.11589010804891586, -0.05046151205897331, -0.2116803526878357, -1.4239939451217651, -0.11971966177225113, -0.2882002592086792, -0.07114733010530472, -0.016548164188861847, -0.0363178476691246, -0.010545600205659866, -0.07126134634017944], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.decode(from_encoding).encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -2.511815309524536, -0.010779603384435177, -0.03100929781794548, -4.0531076592742465e-06, -1.9907753085135482e-05, -0.028232473880052567, -0.03302314504981041, -0.0017761897761374712, -0.0014104428701102734, -0.01412901096045971, -8.106198947643861e-06, -4.291525328881107e-06, -0.012517341412603855, -0.12221604585647583], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.07301753014326096, -0.011371089145541191, -3.6238969187252223e-05, -0.0037847571074962616, -1.311301275563892e-06, -3.576278118089249e-07, -0.0005044856225140393, -0.016473354771733284, -9.179073458653875e-06, -8.702239938429557e-06, -0.4435308575630188, -0.00024828212917782366, -0.7974147200584412, -0.0027703975792974234, -0.0066876402124762535], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0009626284008845687, -8.106198947643861e-06, -0.026558537036180496, -1.847599983215332], "finish_reason": "stop"}, {"text": " Exception:", "tokens": [" Exception", ":", "\n"], "logprobs": [-0.9108686447143555, -0.7090025544166565, -0.05136297643184662], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.09468545764684677, -0.00012110930401831865, -0.7390088438987732, -0.09839329123497009, -0.0032879835925996304, -0.3222423493862152, -0.011731679551303387, -0.10316658020019531, -8.964136941358447e-05, -0.4263422191143036, -0.13380427658557892, -0.0032197798136621714, -9.715084888739511e-05, -0.17830613255500793], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.13976866006851196, -0.02181953378021717, -0.0009460740839131176], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04423607513308525, -0.00045003299601376057, -0.008439235389232635, -0.00970231182873249, -0.8419457077980042, -1.4305104514278355e-06, -1.2040065485052764e-05, -0.07115942984819412, -0.09069886803627014, -0.0006895071710459888, -0.0005452338373288512, -0.005828527733683586, -4.0531076592742465e-06, -2.50339189733495e-06, -0.0011759040644392371, -1.8303452730178833, -0.045402247458696365, -0.09378685057163239, -0.02620244212448597, -8.344646857949556e-07, -4.529942543740617e-06, -0.003776681376621127, -0.00565109308809042], "finish_reason": "stop"}, {"text": "decode(comment, to_encoding)", "tokens": ["decode", "(", "comment", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.18891532719135284, -0.0005575056420639157, -0.2848850190639496, -0.016974404454231262, -2.165147304534912, -0.00029309268575161695, -0.00012408917245920748, -0.6139491200447083, -0.3359321355819702], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.029258739203214645, -0.05096745863556862, -1.4532513618469238, -1.823885577323381e-05, -7.510157047363464e-06, -0.09900254756212234, -0.0032232257071882486], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009213902987539768, -0.03540121763944626, -0.0859253853559494, -3.4570634852570947e-06, -1.0728830375228426e-06, -0.004906281363219023, -0.0011106519959867], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11310280859470367, -0.01959829591214657, -1.0967194612021558e-05, -0.03741417080163956, -9.536738616588991e-07, -3.576278118089249e-07, -0.00010263393050990999, -0.1718887984752655, -1.3708974620385561e-05, -1.5497195136049413e-06, -0.022793089970946312, -1.585470999998506e-05, -0.0038402159698307514, -0.0006112375995144248, -0.00027509720530360937], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00019131260341964662, -1.1920922133867862e-06, -0.0006793813081458211, -0.05439797788858414, -0.008572209626436234, -2.7418097943154862e-06, -0.000196556793525815, -0.030585067346692085, -0.0024318902287632227, -0.010270364582538605, -0.0005230727256275713, -0.000325388420606032, -0.0006932000978849828, -1.5139465176616795e-05, -0.0031515713781118393], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10883880406618118, -0.3715099096298218], "finish_reason": "stop"}], "metrics": {"energy": 785.8794732227326, "energy_per_token": 4.41505322035243, "time": 20.611147, "time_per_token": 0.1157929606741573}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as error:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " error", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -1.3665565252304077, -0.01844562403857708, -0.008373746648430824], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to convert extracted text from {from_encoding} to {to_encoding}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " convert", " extracted", " text", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -2.493612766265869, -0.02388431504368782, -0.0014382981462404132, -0.6030232906341553, -0.8583407402038574, -0.053293339908123016, -0.6889049410820007, -0.23485712707042694, -0.060530707240104675, -5.066266385256313e-05, -2.729855441430118e-05, -0.013125801458954811, -0.01504866685718298, -0.0024115548003464937, -0.0001282609737245366, -4.565611743601039e-05, -1.9073468138230965e-06, -0.5616222023963928, -0.015661222860217094, -0.025950182229280472, -0.00014876213390380144, -0.00116637849714607], "finish_reason": "stop"}, {"text": " Exception as ocr_error:", "tokens": [" Exception", " as", " o", "cr", "_", "error", ":", "\n"], "logprobs": [-0.9058294296264648, -0.7509995102882385, -3.5491175651550293, -0.008505192585289478, -0.004246029071509838, -2.1645045280456543, -0.00110041128937155, -0.03516484797000885], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.06836167722940445, -0.00013720047718379647, -0.7723540663719177, -0.11267218738794327, -0.003346559125930071, -0.3130582273006439, -0.008435807190835476, -0.12996117770671844, -0.00012396997772157192, -0.4219138026237488, -0.1387658715248108, -0.0029621317517012358, -9.822363062994555e-05, -0.18067266047000885], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16833718121051788, -0.021276911720633507, -0.0010570659069344401], "finish_reason": "stop"}, {"text": " comment.decode(\"utf-8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.03784102201461792, -0.0003939091111533344, -0.010050286538898945, -0.011717305518686771, -2.535435914993286, -0.22773011028766632, -0.9445663690567017, -0.0031154451426118612, -0.0001746263587847352, -0.025477202609181404, -0.16659840941429138], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1664140224456787, -0.0006759266252629459, -0.2938311696052551, -0.021048620343208313, -0.30999764800071716, -1.8358061424805783e-05, -7.497983460780233e-05, -0.3349338471889496, -0.8217317461967468], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"xmlcharrefreplace\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "xml", "char", "ref", "replace", "\"", ")", "\n"], "logprobs": [-0.023770472034811974, -0.0699186697602272, -0.24773111939430237, -1.035975456237793, -1.1205610462639015e-05, -0.01595691777765751, -0.19463960826396942, -2.2367324829101562, -0.00025769727653823793, -5.98412734689191e-05, -6.210611172718927e-05, -8.34430247778073e-05, -0.0005402297829277813, -0.006655194330960512], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.007829690352082253, -0.046966031193733215, -0.08036092668771744, -4.887569048150908e-06, -7.152555099310121e-07, -0.0049768611788749695, -0.0014362744987010956], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.19251127541065216, -0.01693572662770748, -1.0013530300057027e-05, -0.046488434076309204, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.00010847456724150106, -0.22362475097179413, -1.597391747054644e-05, -1.311301275563892e-06, -0.02758466638624668, -1.680836794548668e-05, -0.005141963250935078, -0.0006469779182225466, -0.00023016665363684297], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0002610342635307461, -1.5497195136049413e-06, -0.0006840273272246122, -2.7899580001831055], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08263476938009262, -0.3712173402309418], "finish_reason": "stop"}], "metrics": {"energy": 771.8199714050297, "energy_per_token": 4.360564810197908, "time": 20.393297, "time_per_token": 0.11521636723163842}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as error:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " error", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -1.3665565252304077, -0.01844562403857708, -0.008373746648430824], "finish_reason": "stop"}, {"text": " ValueError(exc)", "tokens": [" Value", "Error", "(", "exc", ")", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -2.6525142192840576, -0.036278415471315384, -0.29258841276168823], "finish_reason": "stop"}, {"text": " pytesseract.pytesseract.TSVError:", "tokens": [" py", "t", "ess", "er", "act", ".", "py", "t", "ess", "er", "act", ".", "TS", "V", "Error", ":", "\n"], "logprobs": [-1.9212636947631836, -0.0008222059695981443, -2.8013790142722428e-05, -1.4066597032069694e-05, -2.1219027985353023e-05, -0.00016020445036701858, -0.37695127725601196, -4.708655978902243e-05, -0.0001541257370263338, -1.2755313036905136e-05, -0.0004621868138201535, -0.002177488524466753, -2.2242400646209717, -0.07237382233142853, -0.17572739720344543, -0.2065291851758957, -0.05429907515645027], "finish_reason": "stop"}, {"text": " image.info.get('comment', b'')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " b", "'')", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -0.7048386931419373, -0.10800386965274811, -0.0028966395184397697, -1.3116283416748047, -0.2379058450460434, -0.9425848126411438, -0.002257538726553321, -1.3107571601867676, -0.13820944726467133, -0.11664454638957977], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16450656950473785, -0.027278700843453407, -0.0011233931872993708], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04520036652684212, -0.000503770774230361, -0.010699170641601086, -0.011590758338570595, -0.7104692459106445, -2.7656173188006505e-05, -2.038458114839159e-05, -0.037943288683891296, -0.026144027709960938], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1815328150987625, -0.0005505952867679298, -0.19655190408229828, -0.019723249599337578, -0.2519889771938324, -3.564294092939235e-05, -0.00011359999916749075, -0.2422771453857422, -0.8192170262336731], "finish_reason": "stop"}, {"text": "encode()", "tokens": ["encode", "()", "\n"], "logprobs": [-0.01714644394814968, -2.842437267303467, -0.030956942588090897], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.008747473359107971, -0.035286836326122284, -0.06350919604301453, -4.887569048150908e-06, -5.960462772236497e-07, -0.005523775238543749, -0.0011562574654817581], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1675109714269638, -0.016484728083014488, -9.894321920000948e-06, -0.03512640669941902, -9.536738616588991e-07, -2.3841855067985307e-07, -6.961580220377073e-05, -0.2603265047073364, -1.1444026313256472e-05, -1.6689286894688848e-06, -0.032621461898088455, -1.7404405298293568e-05, -0.004775309935212135, -0.0006631797295995057, -0.00029094755882397294], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00031549722189083695, -1.0728830375228426e-06, -0.0006107610533945262, -0.067751944065094, -0.009663705714046955, -2.3841830625315197e-06, -0.00018988236843142658, -0.028538841754198074, -0.0023611304350197315, -0.012358986772596836, -0.000613143783994019, -0.00036769305006600916, -0.0005994430393911898, -1.728519782773219e-05, -0.002910784212872386], "finish_reason": "stop"}, {"text": " comment.encode(from_encoding).decode(to_encoding)", "tokens": [" comment", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.09402614086866379, -2.369028329849243, -0.2697365880012512, -0.020165780559182167, -1.3917548656463623, -6.318072337307967e-06, -2.1815061700181104e-05, -0.015166088938713074, -0.0008981961291283369, -0.00020680672605521977, -0.0009425011812709272, -0.005796527955681086, -5.006777428206988e-06, -7.867782187531702e-06, -0.10886863619089127, -0.1460532397031784], "finish_reason": "stop"}], "metrics": {"energy": 776.960347663879, "energy_per_token": 4.439773415222166, "time": 20.39476, "time_per_token": 0.11654148571428573}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=None, config=\"\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "None", ",", " config", "=", "\"", "\"", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -1.925430417060852, -0.11589010804891586, -0.05046151205897331, -0.2116803526878357, -1.4239939451217651, -0.11971966177225113, -1.3918226957321167, -0.08948103338479996], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -0.7413238286972046, -0.0028123611118644476, -0.006116955541074276], "finish_reason": "stop"}, {"text": " ValueError(f\"Incorrect from_encoding or to_encoding: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "I", "ncor", "rect", " from", "_", "encoding", " or", " to", "_", "encoding", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -3.459829807281494, -0.0005501187406480312, -0.00018726025882642716, -3.249030590057373, -0.13250546157360077, -0.006546124815940857, -0.1943371444940567, -0.007619011681526899, -0.0008293526479974389, -0.00038223114097490907, -0.6748552322387695, -0.012688500806689262, -0.17974554002285004, -0.023400573059916496, -0.01032357756048441, -1.0091135501861572, -0.00853840634226799, -0.0016925308154895902], "finish_reason": "stop"}, {"text": " pytesseract.pytesseract.TesseractNotFoundError as exc:", "tokens": [" py", "t", "ess", "er", "act", ".", "py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "NotFound", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.9212636947631836, -0.0008222059695981443, -2.8013790142722428e-05, -1.4066597032069694e-05, -2.1219027985353023e-05, -0.00016020445036701858, -0.37695127725601196, -4.708655978902243e-05, -0.0001541257370263338, -1.2755313036905136e-05, -0.0004621868138201535, -0.002177488524466753, -0.30439266562461853, -0.003443147987127304, -1.8000440832111053e-05, -0.00439855270087719, -0.9140138626098633, -1.6689286894688848e-06, -2.2937116622924805, -0.2884266674518585, -0.0032343952916562557, -0.008404836058616638], "finish_reason": "stop"}, {"text": " image.info.get('comment', '')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " '", "')", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -0.7048386931419373, -0.10800386965274811, -0.0028966395184397697, -1.3116283416748047, -0.2379058450460434, -0.9425848126411438, -0.002257538726553321, -0.5366902947425842, -0.0029519100207835436, -0.131802499294281], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16450656950473785, -0.027278700843453407, -0.0011233931872993708], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04520036652684212, -0.000503770774230361, -0.010699170641601086, -0.011590758338570595, -0.7104692459106445, -2.7656173188006505e-05, -2.038458114839159e-05, -0.037943288683891296, -0.026144027709960938], "finish_reason": "stop"}, {"text": "decode(comment, to_encoding)", "tokens": ["decode", "(", "comment", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.1815328150987625, -0.0005505952867679298, -0.19655190408229828, -0.019723249599337578, -2.0923056602478027, -0.00023862851958256215, -8.21318244561553e-05, -0.4926818907260895, -0.35448628664016724], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.025550179183483124, -0.0678134337067604, -0.26728078722953796, -1.0796293020248413, -1.2755313036905136e-05, -0.016753803938627243, -0.16321393847465515, -0.8745633959770203, -8.618460560683161e-05, -0.0001811817055568099, -0.01256713829934597], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.00866604968905449, -0.03807538375258446, -0.07781979441642761, -3.6954811548639555e-06, -3.576278118089249e-07, -0.004929176066070795, -0.0011258936719968915], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11065994948148727, -0.016017219051718712, -1.1920858014491387e-05, -0.04422900453209877, -9.536738616588991e-07, -2.3841855067985307e-07, -9.464769391342998e-05, -0.19673971831798553, -1.2040065485052764e-05, -1.0728830375228426e-06, -0.025190819054841995, -1.6569954823353328e-05, -0.0045732432045042515, -0.0007631250191479921, -0.0002540027489885688], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00028772983932867646, -1.311301275563892e-06, -0.0005989664932712913, -0.05134168639779091, -0.00960101280361414, -2.0265558760002023e-06, -0.00018618757894728333, -0.0267266146838665, -0.0029055543709546328, -0.0098017118871212, -0.00047267231275327504, -0.00035089056473225355, -0.0005791893927380443, -2.0861407392658293e-05, -0.00230202148668468], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.07660990208387375], "finish_reason": "stop"}], "metrics": {"energy": 863.6045988845827, "energy_per_token": 4.339721602435089, "time": 22.502928, "time_per_token": 0.11308004020100502}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"eng+rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "eng", "+", "rus", "\"", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -0.21849073469638824, -2.962894916534424, -1.4618116617202759, -0.00732521852478385, -0.02983129769563675, -0.0735531821846962, -0.12758995592594147], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as error:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " error", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -1.3665565252304077, -0.01844562403857708, -0.008373746648430824], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during text conversion: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " text", " conversion", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -0.7931943535804749, -1.3406237363815308, -0.6984527707099915, -0.44242244958877563, -0.1389855146408081, -0.006500290706753731, -0.30734550952911377, -0.028936145827174187, -0.026298124343156815, -0.7911750674247742, -0.006839673034846783, -0.0023432911839336157], "finish_reason": "stop"}, {"text": " pytesseract.TesseractError as exc:", "tokens": [" py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.9212636947631836, -0.0008222059695981443, -2.8013790142722428e-05, -1.4066597032069694e-05, -2.1219027985353023e-05, -0.00016020445036701858, -1.4613761901855469, -0.0012857988476753235, -2.074220174108632e-05, -0.0027673065196722746, -0.5500349402427673, -1.8904261589050293, -0.45716696977615356, -0.01796029694378376, -0.027329275384545326], "finish_reason": "stop"}, {"text": " image.applicaitons[\"Comment\"] if \"Comment\" in image.applicaitons else None", "tokens": [" image", ".", "appl", "ic", "ait", "ons", "[", "\"", "Comment", "\"", "]", " if", " \"", "Comment", "\"", " in", " image", ".", "appl", "ic", "ait", "ons", " else", " None", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -3.5641393661499023, -1.8252288103103638, -0.11464837938547134, -0.6724422574043274, -2.0922048091888428, -0.08826575428247452, -1.2778584957122803, -0.0019860798493027687, -0.023280154913663864, -2.5960755348205566, -0.40526917576789856, -0.01203242689371109, -0.0002703301142901182, -0.00033849707688204944, -0.0019444384379312396, -0.0027980960439890623, -0.017332980409264565, -0.07961492985486984, -0.002405370818451047, -0.0032222752925008535, -0.020508965477347374, -2.9837112426757812, -0.014615260995924473], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.15304957330226898, -0.022665606811642647, -0.0014448452275246382], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.033567849546670914, -0.00044276448898017406, -0.011855853721499443, -0.009836888872087002, -0.8009696006774902, -4.172238186583854e-05, -1.847726889536716e-05, -0.03972398117184639, -0.022491250187158585], "finish_reason": "stop"}, {"text": "encode(comment, from_encoding).decode(\"unicode_escape\")", "tokens": ["encode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "decode", "(", "\"", "un", "icode", "_", "escape", "\"", ")", "\n"], "logprobs": [-2.717538833618164, -0.00037055302527733147, -0.16024106740951538, -0.06871943175792694, -0.539721667766571, -1.585470999998506e-05, -3.909988299710676e-05, -0.11673843115568161, -0.5343271493911743, -0.008931920863687992, -0.06669799238443375, -2.483781099319458, -1.8658190965652466, -0.00021169328829273582, -0.4848701059818268, -0.0014278227463364601, -0.00011395759065635502, -0.011525829322636127, -0.19466865062713623], "finish_reason": "stop"}, {"text": "encode()", "tokens": ["encode", "()", "\n"], "logprobs": [-0.025920795276761055, -2.7571146488189697, -0.031895898282527924], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.008507792837917805, -0.04228721559047699, -0.07693679630756378, -6.437280717364047e-06, -3.576278118089249e-07, -0.0060838982462882996, -0.0010536124464124441], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13762164115905762, -0.01827111653983593, -1.537788011773955e-05, -0.04062166437506676, -1.1920922133867862e-06, -2.3841855067985307e-07, -8.666139910928905e-05, -0.20574802160263062, -1.1086402082582936e-05, -9.536738616588991e-07, -0.031576234847307205, -1.3232143828645349e-05, -0.004614181816577911, -0.0007783720502629876, -0.00026723151677288115], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002924968139268458, -1.1920922133867862e-06, -0.0006163604557514191, -0.06534268707036972, -0.010303165763616562, -2.264974000354414e-06, -0.00013457823661156, -0.027612728998064995, -0.0026033578906208277, -0.010106462053954601, -0.00046659549116156995, -0.0003980797773692757, -0.0007028493564575911, -1.7762025890988298e-05, -0.0026534132193773985], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.09927751868963242], "finish_reason": "stop"}], "metrics": {"energy": 878.1189596481329, "energy_per_token": 4.390594798240665, "time": 22.90582, "time_per_token": 0.1145291}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text.strip():", "tokens": [" extracted", "_", "text", ".", "strip", "():", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -2.6780529022216797, -0.12463865429162979, -0.0976458191871643, -0.05969969183206558], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14197862148284912, -1.1205610462639015e-05, -0.0001147919538198039, -0.008589701727032661, -0.08595514297485352, -0.05964477360248566, -0.296724408864975, -7.033323527139146e-06, -2.276871418871451e-05, -0.02036542259156704, -0.002097075106576085, -0.002291436307132244, -0.004026520997285843, -0.017486801370978355, -3.3378546504536644e-06, -5.483612312673358e-06, -0.002357205841690302, -0.023966487497091293], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.09070224314928055, -0.013730129227042198, -2.634490556374658e-05, -0.0043181986548006535, -1.5497195136049413e-06, -4.768370445162873e-07, -0.0004668337933253497, -0.024575816467404366, -7.033323527139146e-06, -6.9141146923357155e-06, -0.46744266152381897, -0.00039081089198589325, -0.8269091248512268, -0.00301965675316751, -0.006598114967346191], "finish_reason": "stop"}, {"text": " ValueError(\"Unable to convert the extracted text.\") from exc", "tokens": [" Value", "Error", "(", "\"", "Un", "able", " to", " convert", " the", " extracted", " text", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0009053422254510224, -6.318072337307967e-06, -0.03125658631324768, -1.8357921838760376, -2.5801825523376465, -0.03450930863618851, -0.0017456068890169263, -0.6057532429695129, -1.7963435649871826, -0.4418985843658447, -0.02718403935432434, -1.2930891513824463, -0.11048310250043869, -0.024518121033906937, -0.006010908167809248, -9.524368942948058e-05, -0.001517812255769968], "finish_reason": "stop"}, {"text": " (ValueError, UnicodeDecodeError) as e:", "tokens": [" (", "Value", "Error", ",", " Un", "icode", "Dec", "ode", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-3.2493560314178467, -0.9417913556098938, -6.079655122448457e-06, -0.009839368052780628, -2.1083970069885254, -0.00016306500765495002, -0.055755216628313065, -5.960462772236497e-07, -3.2186455882765586e-06, -1.5682175159454346, -0.0038125463761389256, -2.884319305419922, -0.010668978095054626, -0.02529287524521351], "finish_reason": "stop"}, {"text": " image.getexif().get(0x9286)", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "0", "x", "9", "2", "8", "6", ")", "\n"], "logprobs": [-0.08311362564563751, -0.0001559135998832062, -0.9599035978317261, -0.14778929948806763, -5.1616290875244886e-05, -0.044957298785448074, -0.036208171397447586, -0.0025770808570086956, -0.0023847969714552164, -1.079373836517334, -0.0003104920033365488, -0.001893633627332747, -0.2847849726676941, -0.03279394656419754, -0.0026416426990181208, -0.43756815791130066, -0.4559800326824188], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16469070315361023, -0.02336191013455391, -0.0012163867941126227], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04362389072775841, -0.00051115796668455, -0.011280921287834644, -0.015268351882696152, -0.6647843718528748, -1.1920922133867862e-06, -1.5020257706055418e-05, -0.07397064566612244, -0.07291579991579056, -0.0008447177824564278, -0.0006160030607134104, -0.005383636336773634, -3.4570634852570947e-06, -2.7418097943154862e-06, -0.0012862751027569175, -0.14015699923038483], "finish_reason": "stop"}, {"text": "decode(comment, to_encoding, \"replace\")", "tokens": ["decode", "(", "comment", ",", " to", "_", "encoding", ",", " \"", "replace", "\"", ")", "\n"], "logprobs": [-0.1536727398633957, -0.0006295844214037061, -0.2613379657268524, -0.01922953873872757, -1.8821661472320557, -0.0003122795606032014, -0.00012420836719684303, -0.7822266817092896, -0.5088880062103271, -0.6392852663993835, -0.00013362467871047556, -0.004871048964560032, -0.1072455570101738], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0216152835637331, -0.060048434883356094, -1.6578073501586914, -2.1934269170742482e-05, -7.271740287251305e-06, -0.1048276275396347, -0.003230711678043008], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.007533119060099125, -0.0364559032022953, -0.07065193355083466, -3.814689989667386e-06, -9.536738616588991e-07, -0.004429291933774948, -0.0009839460253715515], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.14189380407333374, -0.017994018271565437, -6.079655122448457e-06, -0.04492652788758278, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.00010668662434909493, -0.2056654393672943, -5.722029527532868e-06, -1.5497195136049413e-06, -0.028078442439436913, -1.6331539882230572e-05, -0.005270752124488354, -0.0006480501033365726, -0.0002456601650919765], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00021002470748499036, -2.145764938177308e-06, -0.0006070678355172276, -0.06544430553913116, -0.008923768997192383, -2.145764938177308e-06, -0.00018916724366135895, -0.027694247663021088, -0.002718921285122633, -0.011204065755009651, -0.0005153281381353736, -0.000388665939681232, -0.0006678258068859577, -1.5139465176616795e-05, -0.0027997603174299], "finish_reason": "stop"}, {"text": " comment.encode(to_encoding).decode(to_encoding)", "tokens": [" comment", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.09476722031831741, -2.8320960998535156, -0.20420445501804352, -0.020002439618110657, -0.2959069609642029, -2.7656173188006505e-05, -2.1815061700181104e-05, -0.022573187947273254, -0.009209533222019672, -0.0003486264031380415, -0.003678224515169859, -0.00354721094481647, -1.6689286894688848e-06, -5.960446742392378e-06, -0.0987742692232132, -0.2040187120437622], "finish_reason": "stop"}], "metrics": {"energy": 882.3647199325559, "energy_per_token": 4.3042181460124675, "time": 23.12074, "time_per_token": 0.11278409756097561}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -0.21849073469638824, -0.17993217706680298, -0.06844104826450348, -0.0829090103507042, -0.127993643283844], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.decode(from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -2.511815309524536, -0.010779603384435177, -0.03100929781794548, -4.0531076592742465e-06, -1.9907753085135482e-05, -0.028232473880052567, -0.03302314504981041, -0.0017761897761374712, -0.0014104428701102734, -0.01412901096045971, -8.106198947643861e-06, -4.291525328881107e-06, -0.012517341412603855, -2.3044440746307373, -0.1809994876384735, -0.05795447528362274, -0.010318386368453503, -1.7881377516459906e-06, -1.8358061424805783e-05, -0.006403523031622171, -0.009995171800255775], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as error:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " error", ":", "\n"], "logprobs": [-0.07301753014326096, -0.011371089145541191, -3.6238969187252223e-05, -0.0037847571074962616, -1.311301275563892e-06, -3.576278118089249e-07, -0.0005044856225140393, -0.016473354771733284, -9.179073458653875e-06, -8.702239938429557e-06, -0.4435308575630188, -0.00024828212917782366, -1.2267742156982422, -0.016029421240091324, -0.005662946496158838], "finish_reason": "stop"}, {"text": " ValueError(f\"Error converting text from {from_encoding} to {to_encoding}: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " converting", " text", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0009626284008845687, -8.106198947643861e-06, -0.026558537036180496, -0.6265001893043518, -0.047166306525468826, -0.8650564551353455, -1.5190879106521606, -1.7475063800811768, -2.0152645111083984, -0.608893632888794, -0.04374827444553375, -6.747018051100895e-05, -1.0490362910786644e-05, -0.012647302821278572, -0.014750353060662746, -0.0013441346818581223, -0.00012540031457319856, -4.362964682513848e-05, -4.6491513785440475e-06, -0.5194599032402039, -0.016144264489412308, -0.1390713006258011, -0.00930260494351387, -0.0061719296500086784, -0.5317688584327698], "finish_reason": "stop"}, {"text": " Exception as e:", "tokens": [" Exception", " as", " e", ":", "\n"], "logprobs": [-0.9108686447143555, -0.6782837510108948, -0.9075244665145874, -0.0045639872550964355, -0.02533041685819626], "finish_reason": "stop"}, {"text": " image.info.get('Comment', '')", "tokens": [" image", ".", "info", ".", "get", "('", "Comment", "'", ",", " '", "')", "\n"], "logprobs": [-0.09503045678138733, -0.0001308832288486883, -0.7968801259994507, -0.08804581314325333, -0.002605498069897294, -1.4191856384277344, -1.5721231698989868, -0.8702248334884644, -0.0013627061853185296, -0.20129939913749695, -0.0041772969998419285, -0.11692266166210175], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1417221873998642, -0.027348995208740234, -0.0011016021016985178], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.03830360621213913, -0.0004897110629826784, -0.011118951253592968, -0.01154362317174673, -0.646562397480011, -1.311301275563892e-06, -1.3589766240329482e-05, -0.08717235922813416, -0.06429066509008408, -0.0007338214782066643, -0.0005013877525925636, -0.005918596405535936, -3.6954811548639555e-06, -2.861018856492592e-06, -0.001794277224689722, -0.15532951056957245], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding, errors=\"strict\").encode(", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ",", " errors", "=", "\"", "strict", "\"", ")", ".", "encode", "(", "\n"], "logprobs": [-0.19468101859092712, -0.0005860995152033865, -0.2978435158729553, -0.016852857545018196, -0.20793680846691132, -2.992108420585282e-05, -9.464769391342998e-05, -1.266047716140747, -0.28390613198280334, -0.0009910915978252888, -0.00020966715237591416, -0.3128570318222046, -0.00017975145601667464, -0.0007968349382281303, -0.6805768013000488, -0.029552409425377846, -0.0520668588578701, -0.4474473297595978], "finish_reason": "stop"}, {"text": "encode(\"Latin-1\")", "tokens": ["encode", "(", "\"", "L", "atin", "-", "1", "\"", ")", "\n"], "logprobs": [-0.029284091666340828, -0.0720754936337471, -0.3202938437461853, -3.4552488327026367, -0.09743744879961014, -0.10742951929569244, -4.172316494077677e-06, -1.4185804502631072e-05, -0.1547277867794037, -0.01084151491522789], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009463569149374962, -0.02794722467660904, -0.08182016760110855, -3.4570634852570947e-06, -4.768370445162873e-07, -0.0036359410732984543, -0.0012192443246021867], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.11673863977193832, -0.014307769015431404, -9.179073458653875e-06, -0.04863433912396431, -8.344646857949556e-07, -3.576278118089249e-07, -9.357491217087954e-05, -0.20307797193527222, -1.1920858014491387e-05, -1.7881377516459906e-06, -0.02942694164812565, -1.7762025890988298e-05, -0.004165069665759802, -0.0006691362359561026, -0.0002674698771443218], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0002277830062666908, -1.5497195136049413e-06, -0.0006171943969093263, -2.745090961456299], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10580699890851974, -0.3529447317123413], "finish_reason": "stop"}], "metrics": {"energy": 869.5143140754694, "energy_per_token": 4.505255513344401, "time": 22.492163, "time_per_token": 0.11653970466321244}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.decode(from_encoding).encode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -2.511815309524536, -0.010779603384435177, -0.03100929781794548, -4.0531076592742465e-06, -1.9907753085135482e-05, -0.028232473880052567, -0.03302314504981041, -0.0017761897761374712, -0.0014104428701102734, -0.01412901096045971, -8.106198947643861e-06, -4.291525328881107e-06, -0.012517341412603855, -0.12221604585647583], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.07301753014326096, -0.011371089145541191, -3.6238969187252223e-05, -0.0037847571074962616, -1.311301275563892e-06, -3.576278118089249e-07, -0.0005044856225140393, -0.016473354771733284, -9.179073458653875e-06, -8.702239938429557e-06, -0.4435308575630188, -0.00024828212917782366, -0.7974147200584412, -0.0027703975792974234, -0.0066876402124762535], "finish_reason": "stop"}, {"text": " ValueError(f\"Failed to convert extracted text to the target encoding: {str(exc)}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Failed", " to", " convert", " extracted", " text", " to", " the", " target", " encoding", ":", " {", "str", "(", "exc", ")}", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0009626284008845687, -8.106198947643861e-06, -0.026558537036180496, -0.6265001893043518, -0.047166306525468826, -2.604154109954834, -0.019694263115525246, -0.5103947520256042, -1.132719874382019, -0.04749671369791031, -1.990342140197754, -2.448803663253784, -0.42911916971206665, -0.005409721285104752, -0.4138498604297638, -0.00619669072329998, -2.2395927906036377, -0.00011014331539627165, -0.00013457823661156, -0.001683486276306212, -0.007968776859343052, -0.004801054485142231, -0.8241080641746521, -0.0013166338903829455, -0.0011835244949907064], "finish_reason": "stop"}, {"text": " Exception as exc:", "tokens": [" Exception", " as", " exc", ":", "\n"], "logprobs": [-0.9108686447143555, -0.6782837510108948, -0.803890585899353, -0.02664048969745636, -0.04583481699228287], "finish_reason": "stop"}, {"text": " image.getexif().get(37510)", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "3", "7", "5", "1", "0", ")", "\n"], "logprobs": [-0.09503045678138733, -0.0001308832288486883, -0.8611081838607788, -0.16542194783687592, -6.103329360485077e-05, -0.04482189565896988, -0.030925968661904335, -0.0018641252536326647, -0.00201617949642241, -0.8755358457565308, -0.30266889929771423, -0.003798295510932803, -0.00023314618738368154, -0.0003632839070633054, -0.33575737476348877, -0.5960094332695007], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1505059152841568, -0.02240021526813507, -0.0009210634743794799], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04778098687529564, -0.0005355831235647202, -0.007298118434846401, -0.013863813132047653, -0.8404215574264526, -4.207999518257566e-05, -1.680836794548668e-05, -0.04389979690313339, -0.0233705285936594], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode()", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-0.14006000757217407, -0.0005958688561804593, -0.3253994286060333, -0.018747517839074135, -0.255410373210907, -2.074220174108632e-05, -7.712543447269127e-05, -0.3036802411079407, -0.6136481165885925, -0.026560859754681587, -0.01893516071140766, -0.1273292750120163, -6.556489552167477e-06, -1.5497195136049413e-06, -0.015050310641527176, -0.05110112950205803, -0.015978623181581497, -0.9269856214523315, -0.0009397619287483394], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02524138242006302, -0.07382039725780487, -0.22625292837619781, -0.9273058176040649, -8.940656698541716e-06, -0.019808217883110046, -0.1223423182964325, -0.9613816142082214, -5.769562994828448e-05, -0.00011169286881340668, -0.010916512459516525], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.008024832233786583, -0.035104308277368546, -0.08691316097974777, -4.410734163684538e-06, -2.3841855067985307e-07, -0.004602671600878239, -0.0011426832061260939], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.12101848423480988, -0.01720491610467434, -9.059865078597795e-06, -0.042359888553619385, -1.0728830375228426e-06, -3.576278118089249e-07, -6.615896563744172e-05, -0.1864946335554123, -1.0967194612021558e-05, -2.145764938177308e-06, -0.027288561686873436, -1.6093124941107817e-05, -0.004245198331773281, -0.0007608617888763547, -0.00026854246971197426], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00021801002731081098, -1.311301275563892e-06, -0.0007435894221998751, -0.06602407991886139, -0.008797458373010159, -2.9802276912960224e-06, -0.00019488819816615433, -0.02707950584590435, -0.003185200970619917, -0.009956341236829758, -0.0005635818815790117, -0.0003331344632897526, -0.0005893162451684475, -2.074220174108632e-05, -0.0028338772244751453], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08324986696243286, -0.35888659954071045], "finish_reason": "stop"}], "metrics": {"energy": 839.6062510204317, "energy_per_token": 4.418980268528588, "time": 22.060762, "time_per_token": 0.11610927368421053}}
{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -1.8271820545196533, -0.005090608727186918, -0.01862618513405323], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.767823338508606, -0.1261162906885147, -0.14399689435958862, -0.1395833045244217], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to convert text: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " convert", " text", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -0.5568652153015137, -0.035399146378040314, -2.6225781440734863, -0.023821691051125526, -0.0011682836338877678, -0.5322973132133484, -1.314758062362671, -2.3760623931884766, -0.011232120916247368, -0.23255792260169983, -0.03136761486530304, -0.03078807331621647, -0.5907347202301025], "finish_reason": "stop"}, {"text": " pytesseract.pytesseract.TesseractError:", "tokens": [" py", "t", "ess", "er", "act", ".", "py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "Error", ":", "\n"], "logprobs": [-1.6429407596588135, -0.000938332756049931, -2.0861407392658293e-05, -1.490105023549404e-05, -3.0636318115284666e-05, -0.00015984688070602715, -0.37424933910369873, -4.362964682513848e-05, -0.0001232548092957586, -1.645074735279195e-05, -0.0002965487365145236, -0.0016494491137564182, -0.2735368609428406, -0.00485776225104928, -1.764281842042692e-05, -0.004612283315509558, -0.5836775898933411, -0.13355782628059387, -0.029847843572497368], "finish_reason": "stop"}, {"text": " image.info.get('comment', b'')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " b", "'')", "\n"], "logprobs": [-0.09003299474716187, -0.00010466027742950246, -0.7134066820144653, -0.12362425774335861, -0.0029006809927523136, -1.2243781089782715, -0.29341965913772583, -1.0793707370758057, -0.0024336741771548986, -1.2173752784729004, -0.09632264077663422, -0.11553322523832321], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14751923084259033, -0.021725287660956383, -0.0011941214324906468], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04222550615668297, -0.0005236684810370207, -0.013554326258599758, -0.013652521185576916, -0.8167167901992798, -3.671578815556131e-05, -2.2053474822314456e-05, -0.05771809071302414, -0.02436351776123047], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, from_encoding), to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " from", "_", "encoding", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.2528088390827179, -0.0005762108485214412, -1.6725038290023804, -1.4305104514278355e-06, -9.536697689327411e-06, -0.047387007623910904, -0.00020203932945150882, -0.013258624821901321, -0.009992456994950771, -1.0933507680892944, -8.34461570775602e-06, -2.3364747903542593e-05, -0.01152736134827137, -0.0005287918029353023, -0.016143912449479103, -1.6689286894688848e-06, -3.2186455882765586e-06, -0.001960738329216838, -0.004875556565821171], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"xmlcharrefreplace\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "xml", "char", "ref", "replace", "\"", ")", "\n"], "logprobs": [-0.026595916599035263, -0.06871497631072998, -0.28692758083343506, -0.7994641661643982, -1.0609570381348021e-05, -0.015297702513635159, -0.1421498954296112, -2.7300164699554443, -0.0003364712174516171, -7.664863369427621e-05, -6.747018051100895e-05, -9.095255518332124e-05, -0.00048756631440483034, -0.008161290548741817], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009974516928195953, -0.04178885743021965, -0.08792365342378616, -3.576272320060525e-06, -4.768370445162873e-07, -0.004424069542437792, -0.0012411518255248666], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.14305485785007477, -0.01544995792210102, -7.271740287251305e-06, -0.0420091487467289, -8.344646857949556e-07, -3.576278118089249e-07, -9.083335316972807e-05, -0.1983652263879776, -8.22540732769994e-06, -1.311301275563892e-06, -0.02485179342329502, -1.5258672647178173e-05, -0.005966352764517069, -0.0006211258587427437, -0.00031549722189083695], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002644904307089746, -1.5497195136049413e-06, -0.0005779979983344674, -0.059984780848026276, -0.00834750197827816, -2.264974000354414e-06, -0.0001833270798670128, -0.025366678833961487, -0.002586592920124531, -0.011237661354243755, -0.0005443998379632831, -0.0003510097449179739, -0.0005600076401606202, -1.585470999998506e-05, -0.002577556297183037], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10115417838096619, -0.3564620018005371], "finish_reason": "stop"}], "metrics": {"energy": 865.1847300682062, "energy_per_token": 4.436844769580545, "time": 22.286076, "time_per_token": 0.11428756923076924}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -1.4586151838302612, -0.00010477947944309562, -8.809178689261898e-05, -0.8224373459815979, -0.18683409690856934, -0.0012944899499416351, -0.004188931081444025, -0.03500428423285484, -1.311301275563892e-06, -7.033323527139146e-06, -0.010417371056973934, -0.019488057121634483], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.09752342104911804, -0.01421328168362379, -3.361645576660521e-05, -0.004118414130061865, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00041237910045310855, -0.018955864012241364, -7.510157047363464e-06, -6.079655122448457e-06, -0.9503874778747559, -0.013592076487839222], "finish_reason": "stop"}, {"text": " ValueError(f\"Error converting extracted text: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " converting", " extracted", " text", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0007934997556731105, -5.8412379075889476e-06, -0.02979033812880516, -0.5492181777954102, -0.042984381318092346, -0.7276122570037842, -1.4395725727081299, -0.7104415893554688, -0.06254840642213821, -1.2683922052383423, -0.004543220158666372, -0.24005655944347382, -0.024122897535562515, -0.022421080619096756, -0.9554725885391235, -0.002878928557038307, -0.001501148217357695], "finish_reason": "stop"}, {"text": " (ValueError, LookupError) as exc:", "tokens": [" (", "Value", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-3.3454103469848633, -0.9751959443092346, -6.318072337307967e-06, -0.008211187086999416, -1.933000087738037, -0.00026067672297358513, -1.883488948806189e-05, -0.3618122339248657, -0.0005964645533822477, -0.14940553903579712, -0.01654628850519657, -0.0197045486420393], "finish_reason": "stop"}, {"text": " image.info.get('comment', '')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " '", "')", "\n"], "logprobs": [-0.08587408065795898, -0.00013433984713628888, -0.8095205426216125, -0.14589303731918335, -0.0033295690082013607, -1.280397891998291, -0.1796572059392929, -1.0284417867660522, -0.001906840712763369, -0.6172167658805847, -0.0026150099001824856, -0.15167565643787384], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1619005799293518, -0.022664092481136322, -0.0009520289022475481], "finish_reason": "stop"}, {"text": " comment.decode(\"utf-8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.04342815279960632, -0.00038795097498223186, -0.014788410626351833, -0.011299308389425278, -2.830561399459839, -0.2547246217727661, -1.119104027748108, -0.00275470525957644, -0.00023934361524879932, -0.033753424882888794, -0.18553507328033447], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.22415640950202942, -0.0006783091812394559, -0.24206651747226715, -0.014792521484196186, -0.221108540892601, -2.1457441107486375e-05, -9.846202738117427e-05, -0.2675835192203522, -0.8734965920448303], "finish_reason": "stop"}, {"text": "encode(to_encoding)", "tokens": ["encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.02474934235215187, -0.05972428619861603, -1.3052276372909546, -1.4305012882687151e-05, -6.079655122448457e-06, -0.10325571149587631, -0.00342295179143548], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0061132824048399925, -0.03162486106157303, -0.0854489728808403, -3.933898824470816e-06, -2.3841855067985307e-07, -0.0050689042545855045, -0.001301514101214707], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13857659697532654, -0.015575078316032887, -1.156323378381785e-05, -0.05523386225104332, -1.311301275563892e-06, -2.3841855067985307e-07, -0.0001147919538198039, -0.1980225294828415, -1.1205610462639015e-05, -1.7881377516459906e-06, -0.028465155512094498, -1.5616295058862306e-05, -0.005226756911724806, -0.0008577005355618894, -0.0002683041093405336], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00020132421923335642, -1.4305104514278355e-06, -0.0006306566647253931, -0.05988238751888275, -0.007154558785259724, -2.50339189733495e-06, -0.0001931004080688581, -0.02329378016293049, -0.0031922117341309786, -0.00970833282917738, -0.0005933669744990766, -0.0003238391946069896, -0.0006432848167605698, -1.6212332411669195e-05, -0.0024180954787880182], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09763295203447342, -0.3714720904827118], "finish_reason": "stop"}], "metrics": {"energy": 770.1642465305326, "energy_per_token": 4.530377920767839, "time": 20.186092, "time_per_token": 0.11874171764705882}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(\"Error converting extracted text to utf8: \" + str(exc))", "tokens": [" Value", "Error", "(", "\"", "Error", " converting", " extracted", " text", " to", " utf", "8", ":", " \"", " +", " str", "(", "exc", "))", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -1.7199397087097168, -1.3853503465652466, -1.7479230165481567, -0.6967828869819641, -0.0572529211640358, -2.683138608932495, -2.0091168880462646, -0.6784696578979492, -2.1927199363708496, -0.4688699245452881, -0.463099867105484, -0.015674717724323273, -0.00013743886665906757, -0.0004080893413629383, -0.014107384718954563, -0.3877011239528656], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-3.380758762359619, -1.6969207525253296, -4.3748852476710454e-05, -0.01674266718327999, 0.0, -2.3841855067985307e-07, -0.0005318895564414561, -0.0750785619020462, -4.410734163684538e-06, -1.4305104514278355e-06, -0.20072783529758453, -0.0004102342063561082, -0.06307905912399292, -0.020017044618725777, -0.0022858462762087584], "finish_reason": "stop"}, {"text": " image.getexif().get(0x9286) if image.getexif() else \"\"", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "0", "x", "9", "2", "8", "6", ")", " if", " image", ".", "get", "ex", "if", "()", " else", " \"", "\"", "\n"], "logprobs": [-0.08044232428073883, -0.0001419681793777272, -0.8843804001808167, -0.1433568149805069, -5.900685573578812e-05, -0.0449969619512558, -0.03286119922995567, -0.0030889438930898905, -0.0020180828869342804, -0.9226118922233582, -0.0003164505760651082, -0.001471271039918065, -0.19290876388549805, -0.03604455664753914, -0.008907699957489967, -0.38860222697257996, -2.869370222091675, -0.041714996099472046, -0.002432603854686022, -0.007491116411983967, -1.1444026313256472e-05, -0.0003071551618631929, -0.003587479004636407, -0.02710329182446003, -0.6202034950256348, -0.004473915323615074, -0.06259577721357346], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.15258371829986572, -0.023643694818019867, -0.0010085977846756577], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding, errors=\"ignore\").encode(to_encoding).decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ",", " errors", "=", "\"", "ignore", "\"", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.037150025367736816, -0.00047874910524114966, -0.009389407932758331, -0.013893204741179943, -0.7901652455329895, -1.0728830375228426e-06, -1.3232143828645349e-05, -2.565495491027832, -0.1483570784330368, -0.03968685865402222, -0.0001397035230183974, -2.174079179763794, -0.0006812873762100935, -0.0010792152024805546, -0.27555936574935913, -0.00910700298845768, -0.0010937429033219814, -0.09989821165800095, -2.9802276912960224e-06, -1.311301275563892e-06, -0.022164369001984596, -1.379631757736206, -0.050386134535074234, -0.04268857464194298, -0.011393364518880844, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.027378804981708527, -0.003494824282824993], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, to_encoding), from_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " to", "_", "encoding", ")", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.22130021452903748, -0.0005421360838226974, -1.685201644897461, -2.0265558760002023e-06, -9.894321920000948e-06, -0.061121866106987, -0.00016675988445058465, -0.013194392435252666, -0.008654940873384476, -1.873163104057312, -2.2172682292875834e-05, -6.079655122448457e-06, -0.013905666768550873, -0.001053731539286673, -0.37126797437667847, -7.152555099310121e-07, -2.7418097943154862e-06, -0.0042304787784814835, -0.007456566672772169], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"replace\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "replace", "\"", ")", "\n"], "logprobs": [-0.031460147351026535, -0.058257609605789185, -0.20055559277534485, -1.0002012252807617, -1.0490362910786644e-05, -0.021725405007600784, -0.1420719176530838, -1.2197810411453247, -0.00039450492477044463, -0.0016484970692545176, -0.012542063370347023], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.00773943867534399, -0.03306489810347557, -0.08016829192638397, -4.410734163684538e-06, -4.768370445162873e-07, -0.0056958990171551704, -0.0011024356354027987], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1615930199623108, -0.014897054992616177, -8.583032467868179e-06, -0.03792676329612732, -8.344646857949556e-07, -2.3841855067985307e-07, -9.345571743324399e-05, -0.17158108949661255, -7.271740287251305e-06, -1.6689286894688848e-06, -0.02268565073609352, -1.4305012882687151e-05, -0.005280476063489914, -0.0006566275842487812, -0.00026842328952625394], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002004899288294837, -1.311301275563892e-06, -0.000673424918204546, -0.07081187516450882, -0.01019590999931097, -2.145764938177308e-06, -0.0001802282058633864, -0.0314231812953949, -0.0022885818034410477, -0.009156378917396069, -0.000545472139492631, -0.0003326578007545322, -0.000667468411847949, -1.4424220353248529e-05, -0.002633201191201806], "finish_reason": "stop"}, {"text": " \"\"<|endoftext|>from .__init__ import *", "tokens": [" \"", "\"", "<", "|", "end", "of", "text", "|>", "from", " ", ".", "__", "init", "__", " import", " *", "\n"], "logprobs": [-2.573486328125, -0.0030929844360798597, -1.7533559799194336, -1.0132738680113107e-05, -2.50339189733495e-06, -2.9802276912960224e-06, -3.0874729418428615e-05, -0.16454409062862396, -1.5546303987503052, -3.5386035442352295, -0.010303637944161892, -4.4767680168151855, -0.41993334889411926, -4.7444173105759546e-05, -0.0007040405762381852, -0.11008263379335403, -0.00022075122979003936], "finish_reason": "stop"}], "metrics": {"energy": 994.7013533573148, "energy_per_token": 4.1970521238705265, "time": 25.842947, "time_per_token": 0.10904197046413501}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.767823338508606, -0.1261162906885147, -0.14399689435958862, -0.1395833045244217], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding).decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -1.4586151838302612, -0.00010477947944309562, -8.809178689261898e-05, -0.8224373459815979, -0.18683409690856934, -0.0012944899499416351, -0.004188931081444025, -0.03500428423285484, -1.311301275563892e-06, -7.033323527139146e-06, -0.010417371056973934, -0.019488057121634483], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.09752342104911804, -0.01421328168362379, -3.361645576660521e-05, -0.004118414130061865, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00041237910045310855, -0.018955864012241364, -7.510157047363464e-06, -6.079655122448457e-06, -0.9503874778747559, -0.013592076487839222], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0007934997556731105, -5.8412379075889476e-06, -0.02979033812880516, -2.01845645904541], "finish_reason": "stop"}, {"text": " Exception:", "tokens": [" Exception", ":", "\n"], "logprobs": [-0.9977331757545471, -0.7178542017936707, -0.04705815389752388], "finish_reason": "stop"}, {"text": " image.getexif().get(37510)", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "3", "7", "5", "1", "0", ")", "\n"], "logprobs": [-0.07744133472442627, -0.00014995403762441128, -1.0053921937942505, -0.16991886496543884, -5.590759246842936e-05, -0.0430884063243866, -0.03235108405351639, -0.001794158248230815, -0.0016669438919052482, -0.7263813614845276, -0.32044604420661926, -0.029002387076616287, -0.0002374367177253589, -0.0003875934926327318, -0.3229660391807556, -0.5539612174034119], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14972415566444397, -0.02541467919945717, -0.0009334497735835612], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.032981161028146744, -0.00047851080307736993, -0.011356709524989128, -0.012018763460218906, -0.8152902722358704, -4.124556289752945e-05, -2.610649426060263e-05, -0.0514998733997345, -0.024920979514718056], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.18129785358905792, -0.0006212450098246336, -0.2525097727775574, -0.021786876022815704, -0.2603643834590912, -2.2291887944447808e-05, -8.475421054754406e-05, -0.3461851477622986, -0.7350130081176758, -0.02461373433470726, -0.019911177456378937, -0.13925914466381073, -7.033323527139146e-06, -1.9073468138230965e-06, -0.017819080501794815, -0.048242513090372086, -0.01331520825624466, -0.44896677136421204, -0.028151346370577812, -1.6689286894688848e-06, -1.1920928244535389e-07, -0.0011923355050384998, -0.0015807764139026403], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02545512095093727, -0.06823385506868362, -0.24968643486499786, -1.2129169702529907, -1.3112935448589269e-05, -0.020556148141622543, -0.14752231538295746, -0.800958514213562, -7.86750388215296e-05, -0.0001497156627010554, -0.014589532278478146], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009691804647445679, -0.0388101227581501, -0.07239212095737457, -3.3378546504536644e-06, -3.576278118089249e-07, -0.0045921108685433865, -0.001177690108306706], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1619318127632141, -0.01773335598409176, -1.2636104656849056e-05, -0.05574946850538254, -8.344646857949556e-07, -3.576278118089249e-07, -9.881961887003854e-05, -0.16434475779533386, -9.298280929215252e-06, -1.1920922133867862e-06, -0.026399139314889908, -1.3351351299206726e-05, -0.004989434499293566, -0.0007680088747292757, -0.000248043768806383], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00018487652414478362, -1.1920922133867862e-06, -0.0006193388253450394, -0.05674338713288307, -0.008804075419902802, -2.145764938177308e-06, -0.0001934579631779343, -0.023231470957398415, -0.0023460264783352613, -0.00974315870553255, -0.0005546461907215416, -0.00033742457162588835, -0.0005853846669197083, -2.0146166207268834e-05, -0.0023092764895409346], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08122837543487549, -0.3559056222438812], "finish_reason": "stop"}], "metrics": {"energy": 774.2513145504007, "energy_per_token": 4.501461131106981, "time": 20.392214, "time_per_token": 0.11855938372093022}}
{"outputs": [{"text": " Image.open(IMAGE_PATH) as im:", "tokens": [" Image", ".", "open", "(", "IMA", "GE", "_", "PATH", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -2.9331719875335693, -5.602820692729438e-06, -6.735097849741578e-05, -2.312633478140924e-05, -0.009558270685374737, -0.0003058442671317607, -2.0041894912719727, -0.006106528919190168, -0.011068257503211498], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=None, config='', nice=0)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "None", ",", " config", "=", "''", ",", " nice", "=", "0", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -1.925430417060852, -0.11589010804891586, -0.05046151205897331, -0.2116803526878357, -0.2885683476924896, -0.0004385939973872155, -0.16297636926174164, -0.01702597178518772, -0.03343008831143379, -0.013186627067625523, -0.08009511977434158], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as err:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " err", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -2.074007511138916, -0.01671980693936348, -0.005707277916371822], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -2.229342222213745], "finish_reason": "stop"}, {"text": " Exception:", "tokens": [" Exception", ":", "\n"], "logprobs": [-0.9058294296264648, -0.6391831040382385, -0.057420872151851654], "finish_reason": "stop"}, {"text": " image.info.get(\"Comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "Comment", "\"", ")", "\n"], "logprobs": [-0.07171427458524704, -0.0001431601122021675, -0.7176791429519653, -0.09351177513599396, -0.0031704658176749945, -0.302608847618103, -0.008031218312680721, -1.9191571474075317, -0.0008747326792217791, -0.9643764495849609, -0.13919660449028015], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.18609845638275146, -0.025631865486502647, -0.0010318199638277292], "finish_reason": "stop"}, {"text": " comment.decode(\"utf8\")  # Try to decode comment as utf8 directly", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "8", "\"", ")", "  ", "#", " Try", " to", " decode", " comment", " as", " utf", "8", " directly", "\n"], "logprobs": [-0.03409405052661896, -0.0003979606262873858, -0.010116728022694588, -0.013665338978171349, -2.6928210258483887, -0.23546481132507324, -0.3926517367362976, -5.2927523938706145e-05, -0.018921473994851112, -2.7061150074005127, -6.747018051100895e-05, -1.7530217170715332, -0.3174058794975281, -0.09135743975639343, -1.8749948740005493, -0.2621268033981323, -0.675734281539917, -0.2980257272720337, -3.4929299354553223, -0.13257761299610138], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, \"rot_13\"), to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " \"", "rot", "_", "1", "3", "\"", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.2099718153476715, -0.0005964645533822477, -1.7588253021240234, -1.5497195136049413e-06, -1.0013530300057027e-05, -0.060244761407375336, -0.00018356545479036868, -0.01693936064839363, -0.010709313675761223, -0.6911584138870239, -2.431697130203247, -0.017103202641010284, -0.0001551984460093081, -0.0010675451485440135, -1.1920858014491387e-05, -0.007449467200785875, -0.0027934599202126265, -1.4999921321868896, -5.8412379075889476e-06, -9.059865078597795e-06, -0.01574125699698925, -0.0372183658182621], "finish_reason": "stop"}, {"text": "encode(\"utf-8\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.02695535309612751, -0.06721195578575134, -0.33558669686317444, -1.1027911901474, -0.23229826986789703, -0.014545592479407787, -7.378782902378589e-05, -0.42196303606033325, -0.007106503937393427], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.010029397904872894, -0.04123774915933609, -0.07135225832462311, -3.814689989667386e-06, -3.576278118089249e-07, -0.004271550104022026, -0.0010854073334485292], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13726359605789185, -0.018462827429175377, -1.0371154530730564e-05, -0.04359216243028641, -1.0728830375228426e-06, -2.3841855067985307e-07, -9.262132516596466e-05, -0.20983131229877472, -1.4781842764932662e-05, -1.6689286894688848e-06, -0.02931002341210842, -1.5258672647178173e-05, -0.005305140744894743, -0.0008536509121768177, -0.0002632986579556018], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002343380037928, -1.0728830375228426e-06, -0.0006605588714592159, -0.06399080902338028, -0.0099160922691226, -2.9802276912960224e-06, -0.00018034738604910672, -0.024773532524704933, -0.0029955299105495214, -0.009808794595301151, -0.0005718026659451425, -0.00034397884155623615, -0.0006571040721610188, -2.288792165927589e-05, -0.002313439268618822], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.06119094416499138, -0.4193527400493622], "finish_reason": "stop"}], "metrics": {"energy": 826.7840045166012, "energy_per_token": 4.3745185424158795, "time": 21.644138, "time_per_token": 0.11451924867724869}}
{"outputs": [{"text": " Image.open(IMAGE_PATH) as image:", "tokens": [" Image", ".", "open", "(", "IMA", "GE", "_", "PATH", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -2.9331719875335693, -5.602820692729438e-06, -6.735097849741578e-05, -2.312633478140924e-05, -0.009558270685374737, -0.0003058442671317607, -0.8904455900192261, -0.02558608539402485, -0.025910109281539917], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " not extracted_text:", "tokens": [" not", " extracted", "_", "text", ":", "\n"], "logprobs": [-1.7981617450714111, -0.01095271110534668, -1.4424220353248529e-05, -2.706014311115723e-05, -0.14929649233818054, -0.09669867902994156], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.13634473085403442, -1.2278481335670222e-05, -0.00011264643399044871, -0.008781624026596546, -0.09425442665815353, -0.05240866169333458, -0.36125826835632324, -6.794906312279636e-06, -2.109982233378105e-05, -0.019351381808519363, -0.0027267676778137684, -0.002139780670404434, -0.0039343819953501225, -0.01757863722741604, -3.6954811548639555e-06, -6.318072337307967e-06, -0.0029643899761140347, -0.024222038686275482], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.07951056212186813, -0.01575651206076145, -3.111314072157256e-05, -0.004484002944082022, -1.1920922133867862e-06, -4.768370445162873e-07, -0.00039641151670366526, -0.028427498415112495, -6.794906312279636e-06, -5.8412379075889476e-06, -1.0058033466339111, -0.015386099927127361], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during conversion: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " conversion", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0009198724874295294, -9.179073458653875e-06, -0.02817012183368206, -0.6237339377403259, -0.04302891716361046, -0.8037829995155334, -1.6438184976577759, -1.3550331592559814, -0.5351601243019104, -0.013729894533753395, -0.31377527117729187, -0.04012751579284668, -0.02889121137559414, -0.6974689364433289, -0.007433966733515263, -0.0037459221202880144], "finish_reason": "stop"}, {"text": " ValueError:", "tokens": [" Value", "Error", ":", "\n"], "logprobs": [-1.350053310394287, -2.0265558760002023e-06, -0.24777726829051971, -0.07508387416601181], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ")", "\n"], "logprobs": [-0.0897640809416771, -0.00012003655137959868, -0.8170303702354431, -0.09959449619054794, -0.004143344704061747, -0.2979676127433777, -0.007285100873559713, -0.15072833001613617, -0.00010299152199877426, -0.9753015041351318, -0.18595801293849945], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1502702236175537, -0.023830538615584373, -0.0009994279826059937], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04738916829228401, -0.0006146925734356046, -0.009744693525135517, -0.011942907236516476, -0.7208942770957947, -9.536738616588991e-07, -1.490105023549404e-05, -0.07120783627033234, -0.07700059562921524, -0.0009223736124113202, -0.0005544078885577619, -0.0038645598106086254, -3.2186455882765586e-06, -2.50339189733495e-06, -0.0016658727545291185, -0.10390649735927582], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, \"unicode-escape\"), to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " \"", "un", "icode", "-", "escape", "\"", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.14022693037986755, -0.0006849803612567484, -1.8276896476745605, -1.6689286894688848e-06, -9.417489309271332e-06, -0.05729468911886215, -0.00016640232934150845, -0.013286740519106388, -0.008735655806958675, -0.6214673519134521, -1.8805509805679321, -0.0015944637125357985, -0.8452620506286621, -0.0013375869020819664, -5.245195097813848e-06, -0.0037446157075464725, -0.0020500849932432175, -0.7811430096626282, -9.894321920000948e-06, -1.2278481335670222e-05, -0.002964152256026864, -0.006069561466574669], "finish_reason": "stop"}, {"text": "encode(\"latin1\", errors=\"ignore\")", "tokens": ["encode", "(", "\"", "l", "atin", "1", "\"", ",", " errors", "=", "\"", "ignore", "\"", ")", "\n"], "logprobs": [-0.029752731323242188, -0.06651173532009125, -0.3065989315509796, -1.4981688261032104, -4.708655978902243e-05, -0.6331596374511719, -1.9788545614574105e-05, -0.6463486552238464, -1.8191215991973877, -0.0008721124031580985, -0.00020215852418914437, -0.8417800664901733, -4.184158387943171e-05, -0.00022849810193292797, -0.009877966716885567], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.00746177276596427, -0.03854863718152046, -0.09793899208307266, -5.483612312673358e-06, -8.344646857949556e-07, -0.003633565502241254, -0.0011214879341423512], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.17718461155891418, -0.01325768418610096, -1.1801649634435307e-05, -0.05075627192854881, -1.4305104514278355e-06, -2.3841855067985307e-07, -8.153582894010469e-05, -0.16893328726291656, -1.168244216387393e-05, -1.5497195136049413e-06, -0.02625550888478756, -1.823885577323381e-05, -0.004630794283002615, -0.0005433275364339352, -0.0002818902430590242], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00023052419419400394, -1.4305104514278355e-06, -0.0007412070408463478, -0.07203212380409241, -0.009916210547089577, -2.264974000354414e-06, -0.00017629499780014157, -0.02583959698677063, -0.0025418850127607584, -0.011872109957039356, -0.0006322053959593177, -0.00037853704998269677, -0.000580499938223511, -1.764281842042692e-05, -0.0027421037666499615], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.07773806899785995, -0.4205727279186249], "finish_reason": "stop"}], "metrics": {"energy": 828.3042598428727, "energy_per_token": 4.359496104436173, "time": 21.87865, "time_per_token": 0.1151507894736842}}
{"outputs": [{"text": " Image.open(IMAGE_PATH) as img:", "tokens": [" Image", ".", "open", "(", "IMA", "GE", "_", "PATH", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -2.9331719875335693, -5.602820692729438e-06, -6.735097849741578e-05, -2.312633478140924e-05, -0.009558270685374737, -0.0003058442671317607, -0.8771704435348511, -0.012761946767568588, -0.0340559147298336], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " codecs.encode(extracted_text, to_encoding).decode()", "tokens": [" codec", "s", ".", "encode", "(", "ext", "racted", "_", "text", ",", " to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-2.300090789794922, -8.821448318485636e-06, -9.214453893946484e-05, -0.8718764781951904, -0.0005342725198715925, -0.41512423753738403, -5.364403477869928e-06, -1.6927575416048057e-05, -5.960446742392378e-06, -0.08668691664934158, -0.14245480298995972, -0.00024673278676345944, -6.12716976320371e-05, -0.1928206831216812, -0.2738823890686035, -0.007101887371391058, -0.9334243535995483, -0.013045793399214745], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as ude:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " ", "ude", ":", "\n"], "logprobs": [-2.6620326042175293, -1.2278481335670222e-05, -0.007795743178576231, -1.9073468138230965e-06, -5.960462772236497e-07, -0.7074432969093323, -3.2969532012939453, -0.8026136159896851, -0.005331939086318016, -0.004304904956370592], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0008878341759555042, -6.079655122448457e-06, -0.027721263468265533, -2.1357545852661133], "finish_reason": "stop"}, {"text": " pytesseract.TesseractNotFoundError as exc:", "tokens": [" py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "NotFound", "Error", " as", " exc", ":", "\n"], "logprobs": [-1.735706090927124, -0.0006337541271932423, -2.0861407392658293e-05, -1.3470558769768104e-05, -1.7523612768854946e-05, -0.00015209948469419032, -1.4704787731170654, -0.0013628251617774367, -1.6689160474925302e-05, -0.0025647147558629513, -1.1267657279968262, -1.156323378381785e-05, -2.1923105716705322, -0.30738338828086853, -0.0041025057435035706, -0.01351375225931406], "finish_reason": "stop"}, {"text": " image.getexif().get(0x9102, '')  # Get image comment, default to empty string", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "0", "x", "9", "1", "0", "2", ",", " '", "')", "  ", "#", " Get", " image", " comment", ",", " default", " to", " empty", " string", "\n"], "logprobs": [-0.07929760962724686, -0.00012933371181134135, -0.8405293822288513, -0.17384956777095795, -4.053033626405522e-05, -0.05727599933743477, -0.03423633053898811, -0.0016013667918741703, -0.0017019324004650116, -1.1132078170776367, -0.0003694805200211704, -0.0018779276870191097, -2.903186798095703, -0.0009735850035212934, -0.020686354488134384, -1.1206560134887695, -2.2450191974639893, -0.03150635212659836, -1.6302440166473389, -9.560128091834486e-05, -2.4420175552368164, -1.952680230140686, -0.006821084767580032, -1.8309204578399658, -0.9774438142776489, -0.33046701550483704, -0.1456526517868042, -0.012156208977103233, -0.20224764943122864], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.13419054448604584, -0.022587522864341736, -0.0011630444787442684], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.052169717848300934, -0.0005545270396396518, -0.01186633761972189, -0.012402551248669624, -0.7655515074729919, -1.4305104514278355e-06, -1.3112935448589269e-05, -0.08634056150913239, -0.0843072384595871, -0.0007391819381155074, -0.000631848000921309, -0.005537527613341808, -3.576272320060525e-06, -2.861018856492592e-06, -0.0012660353677347302, -0.1517329216003418], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1835688352584839, -0.0006065912893973291, -0.30798253417015076, -0.019137036055326462, -0.24449850618839264, -2.1576648578047752e-05, -7.283422019099817e-05, -0.34705132246017456, -0.7882766127586365], "finish_reason": "stop"}, {"text": "encode(\"utf-8\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.02523452416062355, -0.06216076388955116, -0.27635616064071655, -1.0532934665679932, -0.20382125675678253, -0.014676582999527454, -5.709961988031864e-05, -0.3603493571281433, -0.008229867555201054], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009014622308313847, -0.04571570083498955, -0.07753974199295044, -4.529942543740617e-06, -4.768370445162873e-07, -0.005923099350184202, -0.0010977915953844786], "finish_reason": "stop"}, {"text": " UnicodeDecodeError as exc:", "tokens": [" Un", "icode", "Dec", "ode", "Error", " as", " exc", ":", "\n"], "logprobs": [-2.536592721939087, -2.0265558760002023e-06, -0.09954021871089935, -5.602820692729438e-06, -1.728519782773219e-05, -0.2745297849178314, -0.03642233833670616, -0.0032620809506624937, -0.0006394725642167032], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00017641419253777713, -1.1920922133867862e-06, -0.0006612736615352333, -0.07134271413087845, -0.008614876307547092, -2.3841830625315197e-06, -0.00016473367577418685, -0.02430092543363571, -0.0024909917265176773, -0.011983662843704224, -0.0006220789509825408, -0.00032479254878126085, -0.0005141366855241358, -1.7404405298293568e-05, -0.0020130861084908247], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10285449773073196, -0.35998132824897766], "finish_reason": "stop"}], "metrics": {"energy": 853.4154229936601, "energy_per_token": 4.741196794409222, "time": 22.081669, "time_per_token": 0.12267593888888889}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -1.0479885339736938, -0.012757474556565285], "finish_reason": "stop"}, {"text": " ValueError(\"Unable to decode or encode text.\") from exc", "tokens": [" Value", "Error", "(", "\"", "Un", "able", " to", " decode", " or", " encode", " text", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008934320067055523, -7.271740287251305e-06, -0.029431339353322983, -1.7199397087097168, -2.702775001525879, -0.04998830705881119, -0.0016976482002064586, -1.0940794944763184, -1.4370111227035522, -0.31040894985198975, -2.1412534713745117, -1.4575374126434326, -0.12406714260578156, -0.03274133801460266, -0.0068284254521131516, -9.178694017464295e-05, -0.0013815154088661075], "finish_reason": "stop"}, {"text": " Exception:", "tokens": [" Exception", ":", "\n"], "logprobs": [-1.0523284673690796, -0.6501224040985107, -0.059127580374479294], "finish_reason": "stop"}, {"text": " image.info[\"comment\"].decode(\"ISO-8859-1\")", "tokens": [" image", ".", "info", "[", "\"", "comment", "\"", "]", ".", "decode", "(", "\"", "ISO", "-", "8", "8", "5", "9", "-", "1", "\"", ")", "\n"], "logprobs": [-0.09381072223186493, -0.0001255195093108341, -0.6277532577514648, -3.0543875694274902, -0.04204538092017174, -0.0735064372420311, -0.00012051333033014089, -0.004207093268632889, -1.9985746145248413, -0.21363864839076996, -0.053574275225400925, -2.00028133392334, -3.3228747844696045, -0.019840708002448082, -0.0018830440239980817, -2.1934269170742482e-05, -1.3947389561508317e-05, -3.373566141817719e-05, -0.012161390855908394, -0.2463463991880417, -0.004806867800652981, -0.06571894139051437, -0.5963476300239563], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1751222312450409, -0.026428861543536186, -0.0010421803453937173], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.05060873180627823, -0.0005335576133802533, -0.01112142764031887, -0.01367521658539772, -0.6929412484169006, -1.1920922133867862e-06, -1.2755313036905136e-05, -0.08311022073030472, -0.08578743040561676, -0.0006850994541309774, -0.0005936052766628563, -0.005639239214360714, -2.9802276912960224e-06, -2.7418097943154862e-06, -0.0019785843323916197, -1.8673007488250732, -0.012171518988907337, -0.1306566447019577, -0.03592231497168541, -8.344646857949556e-07, -3.099436753473128e-06, -0.004693681374192238, -0.004992162808775902], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode()", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-0.19549968838691711, -0.0006672301678918302, -0.24654746055603027, -0.020310405641794205, -0.24328792095184326, -2.634490556374658e-05, -8.380061626667157e-05, -0.25091788172721863, -0.8214544653892517, -0.023327788338065147, -0.016206664964556694, -0.12568996846675873, -6.556489552167477e-06, -1.9073468138230965e-06, -0.0175830889493227, -0.05589208006858826, -0.017572663724422455, -1.0036159753799438, -0.0010801678290590644], "finish_reason": "stop"}, {"text": "encode()", "tokens": ["encode", "()", "\n"], "logprobs": [-0.026549482718110085, -2.6774449348449707, -0.02898131124675274], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.006149892695248127, -0.04228721559047699, -0.07581214606761932, -4.410734163684538e-06, -7.152555099310121e-07, -0.004748496692627668, -0.0009349980391561985], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.12798704206943512, -0.019002534449100494, -1.07287787614041e-05, -0.04356682673096657, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.868777513271198e-05, -0.16905349493026733, -1.1086402082582936e-05, -1.5497195136049413e-06, -0.02711373381316662, -1.5258672647178173e-05, -0.005060483235865831, -0.0005610798834823072, -0.00033384948619641364], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00027223696815781295, -1.9073468138230965e-06, -0.000543446687515825, -0.05814030393958092, -0.010859793052077293, -2.145764938177308e-06, -0.00019798702851403505, -0.023261751979589462, -0.0025448575615882874, -0.01214867178350687, -0.00047755756531842053, -0.0003232433518860489, -0.0007052318542264402, -1.6331539882230572e-05, -0.001967162825167179], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09403927624225616, -0.3975120186805725], "finish_reason": "stop"}], "metrics": {"energy": 828.0693611249925, "energy_per_token": 4.358259795394697, "time": 21.653204, "time_per_token": 0.11396423157894736}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.767823338508606, -0.1261162906885147, -0.14399689435958862, -0.1395833045244217], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(to_encoding, errors=\"strict\").decode(from_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "to", "_", "encoding", ",", " errors", "=", "\"", "strict", "\"", ")", ".", "decode", "(", "from", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -1.4586151838302612, -0.00010477947944309562, -8.809178689261898e-05, -0.5817108750343323, -0.07590397447347641, -0.3942534029483795, -0.00034707720624282956, -0.35401415824890137, -4.815939246327616e-05, -0.0014432977186515927, -0.028101855888962746, -0.0016446886584162712, -0.010808614082634449, -0.14306053519248962, -1.1920922133867862e-06, -5.483612312673358e-06, -0.05364048480987549, -0.013430716469883919], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.09752342104911804, -0.01421328168362379, -3.361645576660521e-05, -0.004118414130061865, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00041237910045310855, -0.018955864012241364, -7.510157047363464e-06, -6.079655122448457e-06, -0.4981265366077423, -0.0002668739762157202, -0.8533599972724915, -0.002871202304959297, -0.007319656666368246], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during encoding conversion: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " encoding", " conversion", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0008275659638457, -7.271740287251305e-06, -0.02241397090256214, -0.5675098299980164, -0.03247226029634476, -0.8210157752037048, -1.502210259437561, -3.0276200771331787, -0.1028435230255127, -0.18568409979343414, -0.00639665313065052, -0.3421347737312317, -0.03474905714392662, -0.023858822882175446, -0.5546433925628662], "finish_reason": "stop"}, {"text": " ValueError:  # OCR fails", "tokens": [" Value", "Error", ":", "  ", "#", " O", "CR", " fails", "\n"], "logprobs": [-1.3794976472854614, -1.7881377516459906e-06, -0.22398614883422852, -2.7295098304748535, -7.390703103737906e-05, -1.1842718124389648, -0.008298676460981369, -3.2966504096984863, -0.832558274269104], "finish_reason": "stop"}, {"text": " image.getexif().get(37510, \"\")  # 37510 is the EXIF tag for image comment", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "3", "7", "5", "1", "0", ",", " \"", "\"", ")", "  ", "#", " ", "3", "7", "5", "1", "0", " is", " the", " EX", "IF", " tag", " for", " image", " comment", "\n"], "logprobs": [-0.06676110625267029, -0.00013517419574782252, -1.0543315410614014, -0.13440890610218048, -6.758938252460212e-05, -0.0525946170091629, -0.03278275579214096, -0.00205163168720901, -0.002639264799654484, -0.6670569181442261, -0.321970671415329, -0.0030509138014167547, -0.00019810620869975537, -0.0006052807439118624, -1.240796446800232, -0.26149746775627136, -0.026487838476896286, -0.0020615055691450834, -1.3869940042495728, -8.618460560683161e-05, -1.2523229122161865, -0.0036740675568580627, -0.00024863966973498464, -0.00039617318543605506, -0.0007979070069268346, -0.0005040090763941407, -0.3085663914680481, -0.2333422154188156, -0.7611083388328552, -0.0001618731184862554, -0.594010591506958, -0.09648080170154572, -0.9787981510162354, -0.033283427357673645, -0.12282319366931915], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16210901737213135, -0.023511312901973724, -0.0007460909546352923], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.029135549440979958, -0.0005581013392657042, -0.012149143032729626, -0.0117024602368474, -0.7932268977165222, -2.682172998902388e-05, -1.8715683836489916e-05, -0.04385975003242493, -0.028693148866295815], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, from_encoding), to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " from", "_", "encoding", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.14193962514400482, -0.000636255950666964, -1.717879056930542, -1.4305104514278355e-06, -9.536697689327411e-06, -0.06428182870149612, -0.0002361257211305201, -0.015364265069365501, -0.007176455110311508, -0.9566967487335205, -6.6756979322235566e-06, -2.586808113846928e-05, -0.012471544556319714, -0.0006061147432774305, -0.015920313075184822, -1.5497195136049413e-06, -2.861018856492592e-06, -0.0016055324813351035, -0.004739123396575451], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.025058291852474213, -0.05666735768318176, -0.28230971097946167, -1.0752969980239868, -1.2874520507466514e-05, -0.013085092417895794, -0.1559179127216339, -0.696134626865387, -7.414542778860778e-05, -0.00011276562872808427, -0.015033283270895481], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0078269699588418, -0.04985993355512619, -0.07257617264986038, -4.0531076592742465e-06, -2.3841855067985307e-07, -0.005513342563062906, -0.0012516292044892907], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, UnicodeEncodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Un", "icode", "Enc", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13725081086158752, -0.01213795505464077, -9.536697689327411e-06, -0.0521116703748703, -8.344646857949556e-07, -2.3841855067985307e-07, -8.713819261174649e-05, -1.5092039108276367, -2.3841855067985307e-07, -0.006176905706524849, -3.576278118089249e-07, -4.768370445162873e-07, -0.26126471161842346, -0.022737273946404457, -2.3841855067985307e-07, -5.960462772236497e-07, -0.03382476046681404, -2.4199192921514623e-05, -0.009767832234501839, -0.0006169561529532075, -0.00016473367577418685], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00022802136663813144, -1.1920922133867862e-06, -0.0007599088130518794, -0.06222730502486229, -0.011324414983391762, -1.7881377516459906e-06, -0.00015496007108595222, -0.029544422402977943, -0.0028905775398015976, -0.011275970377027988, -0.0005323661607690156, -0.00035041390219703317, -0.00046230596490204334, -1.5735502529423684e-05, -0.002680045086890459], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08725538849830627, -0.3845837414264679], "finish_reason": "stop"}], "metrics": {"energy": 960.6402459850311, "energy_per_token": 4.386485141484161, "time": 25.015387, "time_per_token": 0.11422551141552512}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " not extracted_text.strip():", "tokens": [" not", " extracted", "_", "text", ".", "strip", "():", "\n"], "logprobs": [-1.7981617450714111, -0.01095271110534668, -1.4424220353248529e-05, -2.706014311115723e-05, -2.2343947887420654, -0.1455194056034088, -0.01452221255749464, -0.07740150392055511], "finish_reason": "stop"}, {"text": " extracted_text.encode(\"latin-1\").decode(from_encoding).encode(to_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "\"", "l", "atin", "-", "1", "\"", ")", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.13634473085403442, -1.2278481335670222e-05, -0.00011264643399044871, -0.008781624026596546, -0.09425442665815353, -0.05240866169333458, -3.237032651901245, -0.8680796027183533, -1.966933996300213e-05, -0.2609700560569763, -9.775113539944869e-06, -3.349725011503324e-05, -0.030255500227212906, -0.002069951966404915, -0.00044526674901135266, -0.0018549631349742413, -0.0751153901219368, -9.775113539944869e-06, -8.940656698541716e-06, -0.009649774059653282, -0.061175134032964706, -0.0013623490231111646, -0.002516795415431261, -0.03022994101047516, -1.2159273865108844e-05, -1.5735502529423684e-05, -0.0022539705969393253, -0.8403405547142029, -0.040414921939373016, -0.2988010346889496, -0.2502942681312561, -4.529942543740617e-06, -4.768370445162873e-07, -0.0021473937667906284, -0.014481207355856895], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.07098156213760376, -0.016853678971529007, -2.9801878554280847e-05, -0.004335884470492601, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003579214389901608, -0.028956759721040726, -4.768360213347478e-06, -6.556489552167477e-06, -0.9977395534515381, -0.013850174844264984], "finish_reason": "stop"}, {"text": " ValueError(f\"Conversion failed: {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Con", "version", " failed", ":", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0010364643530920148, -8.821448318485636e-06, -0.030489562079310417, -0.6007344722747803, -0.04060712829232216, -3.3726675510406494, -0.029030295088887215, -1.5057814121246338, -0.41438576579093933, -0.042955148965120316, -0.26879557967185974, -0.03987416625022888, -0.03276418149471283, -0.8137443661689758, -0.010510211810469627, -0.0034919732715934515], "finish_reason": "stop"}, {"text": " Exception:", "tokens": [" Exception", ":", "\n"], "logprobs": [-1.0292034149169922, -0.6876689791679382, -0.04689118638634682], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.0840989202260971, -0.0001333863037871197, -0.5271005630493164, -0.11504032462835312, -0.0027844251599162817, -0.3518929183483124, -0.007774688303470612, -0.10820041596889496, -8.987976616481319e-05, -0.3955558240413666, -0.13262103497982025, -0.002707627136260271, -0.00010299152199877426, -0.16194792091846466], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.1362183541059494, -0.022087179124355316, -0.0009841842111200094], "finish_reason": "stop"}, {"text": " comment.decode(\"utf8\")", "tokens": [" comment", ".", "decode", "(", "\"", "utf", "8", "\"", ")", "\n"], "logprobs": [-0.04277389869093895, -0.00046754872892051935, -0.010517525486648083, -0.010148590430617332, -2.6663706302642822, -0.26402536034584045, -0.3794226348400116, -5.07818695041351e-05, -0.02110850065946579, -0.1659616380929947], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, from_encoding), to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " from", "_", "encoding", ")", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.20033355057239532, -0.0005789510905742645, -1.5286710262298584, -1.5497195136049413e-06, -1.0371154530730564e-05, -0.05966072157025337, -0.00014244495832826942, -0.011923824436962605, -0.008495382033288479, -0.9670469164848328, -7.986990567587782e-06, -1.9073304429184645e-05, -0.00917480606585741, -0.0004415729199536145, -0.016991281881928444, -1.5497195136049413e-06, -3.4570634852570947e-06, -0.0017307315720245242, -0.0042360578663647175], "finish_reason": "stop"}, {"text": "encode(\"utf-8\")", "tokens": ["encode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.02409880980849266, -0.05632869899272919, -0.2802067995071411, -1.1781177520751953, -0.18786484003067017, -0.0175364688038826, -7.378782902378589e-05, -0.3477833867073059, -0.008070123381912708], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.009044628590345383, -0.03592105209827423, -0.08337808400392532, -6.198863957251888e-06, -1.1920922133867862e-06, -0.004173261113464832, -0.0010066924151033163], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13465702533721924, -0.013090386986732483, -1.168244216387393e-05, -0.04192375764250755, -7.152555099310121e-07, -1.1920928244535389e-07, -7.819823804311454e-05, -0.1661110669374466, -1.0847986231965479e-05, -1.4305104514278355e-06, -0.02870195172727108, -1.6212332411669195e-05, -0.0052891322411596775, -0.000707971747033298, -0.0002286172821186483], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002416080387774855, -1.5497195136049413e-06, -0.0006671110168099403, -0.058515340089797974, -0.009413971565663815, -2.145764938177308e-06, -0.00015889335190877318, -0.031109029427170753, -0.0024160738103091717, -0.01250415574759245, -0.0005650115781463683, -0.000356253091013059, -0.0008057684754021466, -1.883488948806189e-05, -0.0026614980306476355], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10315518081188202, -0.4082837700843811], "finish_reason": "stop"}], "metrics": {"energy": 861.2456491756437, "energy_per_token": 4.462412690029242, "time": 22.078394, "time_per_token": 0.11439582383419689}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)  # Try to extract text using OCR", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "  ", "#", " Try", " to", " extract", " text", " using", " O", "CR", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -2.987032890319824, -0.00024959311122074723, -2.6922614574432373, -0.703105628490448, -0.04767949506640434, -0.10409526526927948, -0.44977161288261414, -0.06472474336624146, -4.351044481154531e-05, -0.12110351026058197], "finish_reason": "stop"}, {"text": " not extracted_text:", "tokens": [" not", " extracted", "_", "text", ":", "\n"], "logprobs": [-1.7981617450714111, -0.01095271110534668, -1.4424220353248529e-05, -2.706014311115723e-05, -0.14929649233818054, -0.09669867902994156], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.13634473085403442, -1.2278481335670222e-05, -0.00011264643399044871, -0.008781624026596546, -0.09425442665815353, -0.05240866169333458, -0.36125826835632324, -6.794906312279636e-06, -2.109982233378105e-05, -0.019351381808519363, -0.0027267676778137684, -0.002139780670404434, -0.0039343819953501225, -0.01757863722741604, -3.6954811548639555e-06, -6.318072337307967e-06, -0.0029643899761140347, -0.024222038686275482], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError):", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", "):", "\n"], "logprobs": [-0.07951056212186813, -0.01575651206076145, -3.111314072157256e-05, -0.004484002944082022, -1.1920922133867862e-06, -4.768370445162873e-07, -0.00039641151670366526, -0.028427498415112495, -6.794906312279636e-06, -5.8412379075889476e-06, -1.0058033466339111, -0.015386099927127361], "finish_reason": "stop"}, {"text": " ValueError(f\"Error during text conversion: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " during", " text", " conversion", ":", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0009198724874295294, -9.179073458653875e-06, -0.02817012183368206, -0.6237339377403259, -0.04302891716361046, -0.8037829995155334, -1.6438184976577759, -0.6760037541389465, -0.4302144944667816, -0.14564770460128784, -0.007135265972465277, -0.42476052045822144, -0.03151755779981613, -0.023688867688179016, -0.5263561606407166], "finish_reason": "stop"}, {"text": " ValueError:", "tokens": [" Value", "Error", ":", "\n"], "logprobs": [-1.350053310394287, -2.0265558760002023e-06, -0.24777726829051971, -0.07508387416601181], "finish_reason": "stop"}, {"text": " image.info[\"comment\"] if image.info else None", "tokens": [" image", ".", "info", "[", "\"", "comment", "\"", "]", " if", " image", ".", "info", " else", " None", "\n"], "logprobs": [-0.0897640809416771, -0.00012003655137959868, -0.8170303702354431, -3.0650181770324707, -0.042840830981731415, -0.070977121591568, -0.00021360022947192192, -0.004705427680164576, -1.5857338905334473, -0.9760400652885437, -0.008985086344182491, -0.0017576259560883045, -1.793687105178833, -0.8763663172721863, -0.0456661619246006], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.140578955411911, -0.026959531009197235, -0.0008064831490628421], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04511900991201401, -0.00041607304592616856, -0.009635488502681255, -0.014348194003105164, -0.7126190066337585, -1.311301275563892e-06, -1.490105023549404e-05, -0.08327717334032059, -0.07125446200370789, -0.0006624649395234883, -0.0005793085438199341, -0.005349962040781975, -3.2186455882765586e-06, -3.3378546504536644e-06, -0.0015630420530214906, -0.2110053449869156], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding)", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", "\n"], "logprobs": [-0.1926800012588501, -0.0006300609675236046, -0.25624728202819824, -0.020079322159290314, -0.2462889850139618, -2.5629668016335927e-05, -8.380061626667157e-05, -0.30761653184890747, -0.7987052202224731], "finish_reason": "stop"}, {"text": "encode(\"latin1\", errors=\"ignore\")", "tokens": ["encode", "(", "\"", "l", "atin", "1", "\"", ",", " errors", "=", "\"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02576884813606739, -0.050419121980667114, -0.22276277840137482, -1.5413464307785034, -5.61460001335945e-05, -0.5642386674880981, -2.0861407392658293e-05, -0.44216498732566833, -1.4377117156982422, -0.0008422164828516543, -0.00014900050882715732, -0.9304826259613037, -4.970903682988137e-05, -0.00023040501400828362, -0.013847705908119678], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.0068633523769676685, -0.028713883832097054, -0.08304440230131149, -4.768360213347478e-06, -5.960462772236497e-07, -0.005155364517122507, -0.0012453190283849835], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.18256117403507233, -0.018788114190101624, -1.3232143828645349e-05, -0.05577336996793747, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.00010096516780322418, -0.17648209631443024, -8.583032467868179e-06, -2.0265558760002023e-06, -0.024665722623467445, -1.6927575416048057e-05, -0.004847915843129158, -0.0007022537174634635, -0.00028951745480298996], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002696150622796267, -1.311301275563892e-06, -0.0007428746903315187, -0.06323976814746857, -0.00782223790884018, -2.145764938177308e-06, -0.00013755806139670312, -0.024645136669278145, -0.0020944580901414156, -0.011537495069205761, -0.0005420169327408075, -0.0003685271949507296, -0.0006973695708438754, -2.610649426060263e-05, -0.0025649527087807655], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.11920320987701416], "finish_reason": "stop"}], "metrics": {"energy": 828.8926615543364, "energy_per_token": 4.480500873266683, "time": 21.647673, "time_per_token": 0.11701444864864866}}
{"outputs": [{"text": " Image.open(filename) as image:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " image", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.9956142902374268, -0.023768145591020584, -0.039297472685575485], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as err:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " err", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -2.074007511138916, -0.01671980693936348, -0.005707277916371822], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -2.229342222213745], "finish_reason": "stop"}, {"text": " (ValueError, AttributeError) as error:", "tokens": [" (", "Value", "Error", ",", " Attribute", "Error", ")", " as", " error", ":", "\n"], "logprobs": [-3.4529008865356445, -0.9379534125328064, -6.437280717364047e-06, -0.009152126498520374, -2.5340490341186523, -1.7881233361549675e-05, -1.3470287322998047, -0.0017350156558677554, -3.058307647705078, -0.04577229917049408, -0.017061365768313408], "finish_reason": "stop"}, {"text": " image.info.get(\"comment\", \"\")", "tokens": [" image", ".", "info", ".", "get", "(", "\"", "comment", "\"", ",", " \"", "\"", ")", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -0.7048386931419373, -0.10800386965274811, -0.0028966395184397697, -0.3140621483325958, -0.008444436825811863, -0.18126395344734192, -0.00011586471373448148, -0.4646822512149811, -0.10358002781867981, -0.003271230263635516, -9.941560711013153e-05, -0.17790578305721283], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.14818903803825378, -0.02700083889067173, -0.0012437711702659726], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.03821686655282974, -0.00048708971007727087, -0.011342802084982395, -0.01082807220518589, -0.7776013612747192, -3.671578815556131e-05, -1.6569954823353328e-05, -0.04570898413658142, -0.029377860948443413], "finish_reason": "stop"}, {"text": "getdecoder(from_encoding)(comment, errors=\"ignore\")[0]", "tokens": ["get", "decoder", "(", "from", "_", "encoding", ")(", "comment", ",", " errors", "=", "\"", "ignore", "\"", ")[", "0", "]", "\n"], "logprobs": [-2.9168004989624023, -0.016223320737481117, -0.0059843650087714195, -0.5635821223258972, -4.887569048150908e-06, -2.5987286790041253e-05, -0.05519212409853935, -0.03963220864534378, -1.3313876390457153, -0.05276719480752945, -0.0009238027851097286, -0.00011002412065863609, -0.9251483678817749, -3.611976353568025e-05, -0.016386225819587708, -0.022899704053997993, -0.0003703146940097213, -0.023530758917331696], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02537679113447666, -0.05892372876405716, -0.23733480274677277, -1.2976815700531006, -1.07287787614041e-05, -0.01904253661632538, -0.21165141463279724, -0.7418948411941528, -8.427741704508662e-05, -0.00010966652916977182, -0.011540677398443222], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.00816507451236248, -0.038648538291454315, -0.09827573597431183, -5.125986263010418e-06, -1.1920922133867862e-06, -0.005230196285992861, -0.0010238410905003548], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.15891940891742706, -0.01840934343636036, -1.1801649634435307e-05, -0.041864313185214996, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.40390202938579e-05, -0.16436639428138733, -8.702239938429557e-06, -1.0728830375228426e-06, -0.024326171725988388, -1.3589766240329482e-05, -0.004502041265368462, -0.0007653883076272905, -0.0002611534437164664], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00023803261865396053, -1.0728830375228426e-06, -0.0005639393348246813, -0.05826311931014061, -0.009449752978980541, -2.0265558760002023e-06, -0.0002150304353563115, -0.029902108013629913, -0.0023309222888201475, -0.01034611277282238, -0.0005384425749070942, -0.0003968881501350552, -0.0006252956227399409, -1.645074735279195e-05, -0.0019013675628229976], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.09706807881593704, -0.39780086278915405], "finish_reason": "stop"}], "metrics": {"energy": 748.8446025695796, "energy_per_token": 4.353747689358021, "time": 19.981628, "time_per_token": 0.11617225581395349}}
{"outputs": [{"text": " Image.open(filename) as im:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " im", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -1.8271820545196533, -0.005090608727186918, -0.01862618513405323], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang=\"rus\")", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "=", "\"", "rus", "\"", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.6361056566238403, -0.21849073469638824, -0.17993217706680298, -0.06844104826450348, -0.0829090103507042, -0.127993643283844], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -0.7413238286972046, -0.0028123611118644476, -0.006116955541074276], "finish_reason": "stop"}, {"text": " ValueError(f\"Error converting extracted text from {from_encoding} to {to_encoding}: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " converting", " extracted", " text", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -0.7931943535804749, -1.444015383720398, -0.7250027656555176, -0.060687676072120667, -1.0943715572357178, -0.2589893043041229, -0.019800972193479538, -5.4834770708112046e-05, -1.597391747054644e-05, -0.012860337272286415, -0.010476591996848583, -0.001764527871273458, -9.691245941212401e-05, -4.672895011026412e-05, -4.291525328881107e-06, -0.38241666555404663, -0.01876869425177574, -0.13775677978992462, -0.011052458547055721, -0.004382885992527008, -0.40112563967704773], "finish_reason": "stop"}, {"text": " ValueError as ocr_error:", "tokens": [" Value", "Error", " as", " o", "cr", "_", "error", ":", "\n"], "logprobs": [-1.2869806289672852, -3.099436753473128e-06, -1.4836552143096924, -3.2744038105010986, -0.006798352114856243, -0.004853372927755117, -1.7990795373916626, -0.0010319390567019582, -0.02661913074553013], "finish_reason": "stop"}, {"text": " image.getexif().get(37510)  # 37510 is the EXIF comment tag", "tokens": [" image", ".", "get", "ex", "if", "()", ".", "get", "(", "3", "7", "5", "1", "0", ")", "  ", "#", " ", "3", "7", "5", "1", "0", " is", " the", " EX", "IF", " comment", " tag", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -0.9207505583763123, -0.20312106609344482, -5.066266385256313e-05, -0.0427338071167469, -0.026803795248270035, -0.0017102628480643034, -0.0024096521083265543, -0.6611700057983398, -0.4072669744491577, -0.014905393123626709, -0.0002138386043952778, -0.0004680253332480788, -0.3803067207336426, -1.356326699256897, -9.369411418447271e-05, -1.63703191280365, -0.006640983745455742, -0.0008987916517071426, -0.0006033745594322681, -0.0011333954753354192, -0.0006932000978849828, -0.2783016562461853, -0.30269119143486023, -1.098983883857727, -0.00015007323236204684, -1.3613958358764648, -0.18187019228935242, -0.13164523243904114], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.15304957330226898, -0.022665606811642647, -0.0014448452275246382], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.033567849546670914, -0.00044276448898017406, -0.011855853721499443, -0.009836888872087002, -0.7684187889099121, -1.5497195136049413e-06, -1.2278481335670222e-05, -0.06816047430038452, -0.09000826627016068, -0.0008044582791626453, -0.0005936052766628563, -0.005474811885505915, -3.814689989667386e-06, -2.0265558760002023e-06, -0.002176180249080062, -0.1935277283191681], "finish_reason": "stop"}, {"text": "decode(codecs.decode(comment, \"rot_13\"), from_encoding).encode(to_encoding)", "tokens": ["decode", "(", "codec", "s", ".", "decode", "(", "comment", ",", " \"", "rot", "_", "1", "3", "\"", ")", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.17972752451896667, -0.0006199345225468278, -1.5966092348098755, -1.9073468138230965e-06, -9.775113539944869e-06, -0.06083710119128227, -0.00017581824795342982, -0.012213914655148983, -0.008397270925343037, -0.6431605219841003, -2.3289711475372314, -0.01482752338051796, -0.00014625910262111574, -0.0008397151832468808, -1.156323378381785e-05, -0.008714975789189339, -0.002547949319705367, -1.27328622341156, -1.9073468138230965e-06, -7.033323527139146e-06, -0.005173983983695507, -1.92035973072052, -0.4060555696487427, -0.0435483381152153, -0.5375314354896545, -1.1444026313256472e-05, -4.0531076592742465e-06, -0.01618778146803379, -0.43320661783218384], "finish_reason": "stop"}, {"text": "encode(\"ascii\", errors=\"backslashreplace\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " errors", "=", "\"", "backslash", "replace", "\"", ")", "\n"], "logprobs": [-0.02228422276675701, -0.07587160170078278, -0.29004815220832825, -1.1816470623016357, -9.65590606938349e-06, -0.014866048470139503, -1.7067339420318604, -0.0007034449372440577, -0.00010406429646536708, -2.1640877723693848, -0.0024414039216935635, -6.794698856538162e-05, -0.000500196241773665, -0.006410155910998583], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.007780957501381636, -0.031159179285168648, -0.06349655240774155, -4.172316494077677e-06, -7.152555099310121e-07, -0.005465208552777767, -0.0010434903670102358], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.13951902091503143, -0.018983585759997368, -1.3828182090946939e-05, -0.04166445881128311, -9.536738616588991e-07, -3.576278118089249e-07, -9.858122211880982e-05, -0.16763336956501007, -1.0251946150674485e-05, -1.5497195136049413e-06, -0.02975955791771412, -1.9788545614574105e-05, -0.005207308568060398, -0.0006602014764212072, -0.00025614796322770417], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002294515579706058, -1.0728830375228426e-06, -0.0005746620590798557, -0.05671849474310875, -0.0083291782066226, -2.145764938177308e-06, -0.00015639036428183317, -0.024311047047376633, -0.0032600611448287964, -0.011932658962905407, -0.0005428509321063757, -0.0003077510336879641, -0.0006111184484325349, -2.062299427052494e-05, -0.0027042983565479517], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.10216481238603592, -0.42643746733665466], "finish_reason": "stop"}], "metrics": {"energy": 1001.8481090030664, "energy_per_token": 4.26318344256624, "time": 25.670458, "time_per_token": 0.10923599148936171}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image, lang='rus')", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ",", " lang", "='", "rus", "')", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -1.1018531322479248, -0.058977559208869934, -0.767823338508606, -0.1261162906885147, -0.14399689435958862, -0.1395833045244217], "finish_reason": "stop"}, {"text": " extracted_text:", "tokens": [" extracted", "_", "text", ":", "\n"], "logprobs": [-0.31484919786453247, -3.8265450712060556e-05, -0.00011324241495458409, -0.169061541557312, -0.03276187181472778], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.14653387665748596, -1.2159273865108844e-05, -0.00010990492592100054, -0.00890261959284544, -0.09540285170078278, -0.057406239211559296, -0.35477909445762634, -1.0013530300057027e-05, -2.5629668016335927e-05, -0.0183772761374712, -0.00302797625772655, -0.0015260252403095365, -0.0033489353954792023, -0.02152731828391552, -3.099436753473128e-06, -5.125986263010418e-06, -0.0026788560207933187, -0.025986772030591965], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.074132040143013, -0.014721926301717758, -3.7788631743751466e-05, -0.005164259113371372, -9.536738616588991e-07, -3.576278118089249e-07, -0.0003713871701620519, -0.017733238637447357, -9.298280929215252e-06, -7.271740287251305e-06, -0.43908271193504333, -0.00024673278676345944, -0.7413238286972046, -0.0028123611118644476, -0.006116955541074276], "finish_reason": "stop"}, {"text": " ValueError(f\"Unable to convert extracted text from '{from_encoding}' to '{to_encoding}': {exc}\") from exc", "tokens": [" Value", "Error", "(", "f", "\"", "Un", "able", " to", " convert", " extracted", " text", " from", " '", "{", "from", "_", "encoding", "}'", " to", " '", "{", "to", "_", "encoding", "}", "':", " {", "exc", "}\"", ")", " from", " exc", "\n"], "logprobs": [-0.0008719933102838695, -7.033323527139146e-06, -0.028119588270783424, -0.43595388531684875, -0.0445135198533535, -2.493612766265869, -0.02388431504368782, -0.0014382981462404132, -0.6030232906341553, -0.8583407402038574, -0.053293339908123016, -0.6889049410820007, -1.781358242034912, -0.0015200738562271, -0.014994177967309952, -4.756337511935271e-05, -2.5748875486897305e-05, -0.0015459026908501983, -0.04108181968331337, -0.0047906143590807915, -0.0002356490003876388, -0.00015627116954419762, -1.3112935448589269e-05, -2.3841830625315197e-06, -1.254209041595459, -0.012812791392207146, -0.016642313450574875, -0.18203982710838318, -0.01448860950767994, -0.006805574521422386, -1.1325745582580566, -0.0024038248229771852, -0.0012718691723421216], "finish_reason": "stop"}, {"text": " OSError:", "tokens": [" O", "SE", "rror", ":", "\n"], "logprobs": [-2.922152519226074, -0.0021688053384423256, -5.960462772236497e-07, -0.13293033838272095, -0.05894811823964119], "finish_reason": "stop"}, {"text": " image.info.get('comment')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "')", "\n"], "logprobs": [-0.07522717863321304, -0.0001394651480950415, -0.7048386931419373, -0.10800386965274811, -0.0028966395184397697, -1.3116283416748047, -0.2379058450460434, -0.4939268231391907, -0.14255228638648987], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.16450656950473785, -0.027278700843453407, -0.0011233931872993708], "finish_reason": "stop"}, {"text": " comment.decode(from_encoding).encode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.04520036652684212, -0.000503770774230361, -0.010699170641601086, -0.011590758338570595, -0.842015266418457, -1.0728830375228426e-06, -1.5020257706055418e-05, -0.07236617058515549, -0.0816497877240181, -0.0008044582791626453, -0.000582644424866885, -0.004702105652540922, -3.3378546504536644e-06, -2.622600959512056e-06, -0.0018392566125839949, -0.1290486752986908], "finish_reason": "stop"}, {"text": "decode(comment, to_encoding)", "tokens": ["decode", "(", "comment", ",", " to", "_", "encoding", ")", "\n"], "logprobs": [-0.1815328150987625, -0.0005505952867679298, -0.19655190408229828, -0.019723249599337578, -2.0923056602478027, -0.00023862851958256215, -8.21318244561553e-05, -0.4926818907260895, -0.35448628664016724], "finish_reason": "stop"}, {"text": "encode(\"latin1\")", "tokens": ["encode", "(", "\"", "l", "atin", "1", "\"", ")", "\n"], "logprobs": [-0.025550179183483124, -0.0678134337067604, -0.26728078722953796, -1.2504132986068726, -3.6477376852417365e-05, -0.6832444667816162, -1.2516897186287679e-05, -0.6656190752983093, -0.02171945571899414], "finish_reason": "stop"}, {"text": "decode(\"utf-8\")", "tokens": ["decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n"], "logprobs": [-0.00866604968905449, -0.03807538375258446, -2.7021751403808594, -0.10030730068683624, -0.4223732054233551, -0.00031192204914987087, -0.0005560758872888982, -0.004032338969409466, -0.002153579378500581], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.16519267857074738, -0.018124675378203392, -1.2755313036905136e-05, -0.04876219108700752, -8.344646857949556e-07, -2.3841855067985307e-07, -8.880697714630514e-05, -0.18928661942481995, -1.0609570381348021e-05, -1.5497195136049413e-06, -0.027107352390885353, -1.5258672647178173e-05, -0.004804376512765884, -0.0007828985108062625, -0.0003325386205688119], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.00025090406415984035, -1.311301275563892e-06, -0.0007232195930555463, -0.062322404235601425, -0.011029114946722984, -2.0265558760002023e-06, -0.0001454247540095821, -0.027262460440397263, -0.002789655700325966, -0.012197074480354786, -0.0004899493651464581, -0.00034362133010290563, -0.0005715643637813628, -2.288792165927589e-05, -0.002919699065387249], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment"], "logprobs": [-0.09122882783412933], "finish_reason": "stop"}], "metrics": {"energy": 831.4066176614759, "energy_per_token": 4.3529142285941145, "time": 21.858189, "time_per_token": 0.11444078010471204}}
{"outputs": [{"text": " Image.open(filename) as img:", "tokens": [" Image", ".", "open", "(", "filename", ")", " as", " img", ":", "\n"], "logprobs": [-0.054302237927913666, -0.00285836448892951, -7.545663538621739e-05, -0.002565666101872921, -0.06561456620693207, -0.004392737057060003, -0.00034564718953333795, -0.8256199359893799, -0.011893903836607933, -0.04037908464670181], "finish_reason": "stop"}, {"text": " pytesseract.image_to_string(image)", "tokens": [" py", "t", "ess", "er", "act", ".", "image", "_", "to", "_", "string", "(", "image", ")", "\n"], "logprobs": [-0.013050146400928497, -2.288792165927589e-05, -2.3841830625315197e-06, 0.0, -2.2172682292875834e-05, -6.09140915912576e-05, -0.00516971480101347, -2.9802276912960224e-06, -5.960462772236497e-07, -5.125986263010418e-06, -0.004374933894723654, -0.0013833011034876108, -0.02419213391840458, -0.41336899995803833, -0.0949430763721466], "finish_reason": "stop"}, {"text": " not extracted_text:", "tokens": [" not", " extracted", "_", "text", ":", "\n"], "logprobs": [-1.7981617450714111, -0.01095271110534668, -1.4424220353248529e-05, -2.706014311115723e-05, -0.14929649233818054, -0.09669867902994156], "finish_reason": "stop"}, {"text": " extracted_text.encode(from_encoding).decode(to_encoding)", "tokens": [" extracted", "_", "text", ".", "encode", "(", "from", "_", "encoding", ")", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.13634473085403442, -1.2278481335670222e-05, -0.00011264643399044871, -0.008781624026596546, -0.09425442665815353, -0.05240866169333458, -0.36125826835632324, -6.794906312279636e-06, -2.109982233378105e-05, -0.019351381808519363, -0.0027267676778137684, -0.002139780670404434, -0.0039343819953501225, -0.01757863722741604, -3.6954811548639555e-06, -6.318072337307967e-06, -0.0029643899761140347, -0.024222038686275482], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as e:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " e", ":", "\n"], "logprobs": [-0.07951056212186813, -0.01575651206076145, -3.111314072157256e-05, -0.004484002944082022, -1.1920922133867862e-06, -4.768370445162873e-07, -0.00039641151670366526, -0.028427498415112495, -6.794906312279636e-06, -5.8412379075889476e-06, -0.46551257371902466, -0.00029130507027730346, -0.6802973747253418, -0.0030493687372654676, -0.006686100736260414], "finish_reason": "stop"}, {"text": " ValueError(f\"Error converting extracted text from {from_encoding} to {to_encoding}: {exc}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Error", " converting", " extracted", " text", " from", " {", "from", "_", "encoding", "}", " to", " {", "to", "_", "encoding", "}:", " {", "exc", "}\"", ")", "\n"], "logprobs": [-0.0008814025786705315, -7.033323527139146e-06, -0.030993349850177765, -0.4953346848487854, -0.037548743188381195, -0.7722521424293518, -1.354608416557312, -0.7008522152900696, -0.06697641313076019, -1.121193289756775, -0.2037702202796936, -0.01911516673862934, -5.054346183896996e-05, -1.3947389561508317e-05, -0.011279623955488205, -0.007859141565859318, -0.0017094297800213099, -0.00011491115583339706, -4.589452510117553e-05, -4.410734163684538e-06, -0.48601239919662476, -0.018845437094569206, -0.11434496194124222, -0.009388109669089317, -0.004205075558274984, -0.47360458970069885], "finish_reason": "stop"}, {"text": " pytesseract.pytesseract.TesseractError:", "tokens": [" py", "t", "ess", "er", "act", ".", "py", "t", "ess", "er", "act", ".", "T", "ess", "er", "act", "Error", ":", "\n"], "logprobs": [-1.875810146331787, -0.0009210634743794799, -2.8490614567999728e-05, -1.4781842764932662e-05, -2.777537883957848e-05, -0.00018439977429807186, -0.47747549414634705, -5.793403761344962e-05, -0.00015376816736534238, -1.07287787614041e-05, -0.00027581225731410086, -0.0017460829112678766, -0.2401130050420761, -0.00446513295173645, -1.811964830267243e-05, -0.0049429358914494514, -0.7428069114685059, -0.1500055342912674, -0.025886179879307747], "finish_reason": "stop"}, {"text": " image.info.get('comment', '')", "tokens": [" image", ".", "info", ".", "get", "('", "comment", "'", ",", " '", "')", "\n"], "logprobs": [-0.0742221400141716, -0.00016044282529037446, -0.6636243462562561, -0.09387758374214172, -0.0031115233432501554, -1.1997758150100708, -0.2706107795238495, -1.096521019935608, -0.0026114429347217083, -0.5662879943847656, -0.0034773615188896656, -0.18327867984771729], "finish_reason": "stop"}, {"text": " comment:", "tokens": [" comment", ":", "\n"], "logprobs": [-0.15466855466365814, -0.024817025288939476, -0.0012669878778979182], "finish_reason": "stop"}, {"text": " comment.decode(to_encoding)", "tokens": [" comment", ".", "decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.034503668546676636, -0.0005091324565000832, -0.008656122721731663, -0.01085189264267683, -0.8099067211151123, -4.541770613286644e-05, -1.9311717551317997e-05, -0.044514432549476624, -0.02123606577515602], "finish_reason": "stop"}, {"text": "decode(comment, from_encoding).encode(to_encoding).decode()", "tokens": ["decode", "(", "comment", ",", " from", "_", "encoding", ")", ".", "encode", "(", "to", "_", "encoding", ")", ".", "decode", "()", "\n"], "logprobs": [-0.2522611916065216, -0.0005956306122243404, -0.2098865807056427, -0.01750507578253746, -0.3019213080406189, -1.7762025890988298e-05, -9.285972191719338e-05, -0.303570955991745, -0.7804323434829712, -0.0207753274589777, -0.01807597279548645, -0.17376860976219177, -6.6756979322235566e-06, -1.7881377516459906e-06, -0.015171489678323269, -0.05457114800810814, -0.015183230862021446, -1.002726674079895, -0.0010275328531861305], "finish_reason": "stop"}, {"text": "encode(\"ascii\", \"ignore\")", "tokens": ["encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n"], "logprobs": [-0.02621591091156006, -0.06631764024496078, -0.3012372553348541, -1.1420893669128418, -8.702239938429557e-06, -0.023650797083973885, -0.16957108676433563, -0.6597389578819275, -8.380061626667157e-05, -0.00015221867943182588, -0.014520332217216492], "finish_reason": "stop"}, {"text": "decode(to_encoding)", "tokens": ["decode", "(", "to", "_", "encoding", ")", "\n"], "logprobs": [-0.007713414262980223, -0.041221391409635544, -0.07200661301612854, -6.079655122448457e-06, -4.768370445162873e-07, -0.0046846638433635235, -0.001211028778925538], "finish_reason": "stop"}, {"text": " (UnicodeDecodeError, LookupError) as exc:", "tokens": [" (", "Un", "icode", "Dec", "ode", "Error", ",", " Look", "up", "Error", ")", " as", " exc", ":", "\n"], "logprobs": [-0.1439887434244156, -0.023988831788301468, -9.298280929215252e-06, -0.03900481387972832, -1.4305104514278355e-06, -2.3841855067985307e-07, -9.822363062994555e-05, -0.18737441301345825, -7.867782187531702e-06, -2.145764938177308e-06, -0.02797272801399231, -1.4662635294371285e-05, -0.00391455227509141, -0.0006500753224827349, -0.0002256377338198945], "finish_reason": "stop"}, {"text": " ValueError(\"Incorrect encoding provided.\") from exc", "tokens": [" Value", "Error", "(", "\"", "I", "ncor", "rect", " encoding", " provided", ".", "\"", ")", " from", " exc", "\n"], "logprobs": [-0.0002286172821186483, -1.1920922133867862e-06, -0.0006391151691786945, -0.05694757029414177, -0.009084676392376423, -2.145764938177308e-06, -0.00017724849749356508, -0.023516785353422165, -0.002488137688487768, -0.010946343652904034, -0.0005677518784068525, -0.0004024887748528272, -0.000644237850792706, -1.3828182090946939e-05, -0.0021294315811246634], "finish_reason": "stop"}, {"text": " comment", "tokens": [" comment", "\n"], "logprobs": [-0.08419820666313171, -0.3952767848968506], "finish_reason": "stop"}], "metrics": {"energy": 862.9020464649205, "energy_per_token": 4.27179230923228, "time": 22.711372, "time_per_token": 0.11243253465346535}}
