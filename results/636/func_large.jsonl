{"outputs": [{"text": "# Step 1: Create a Pandas DataFrame with random integer values\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Step 2: Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Step 3: Create a bar plot\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts)\n    ax.set_ylabel('Non-Zero Values')\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax\n\n\"\"\"\nExplanation:\n\n1. `df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)`\n   - This line creates a Pandas DataFrame with random integer values between 0 and 9 for the specified number of rows\n     and columns.\n\n2. `non_zero", "tokens": ["#", " Step", " ", "1", ":", " Create", " a", " Pand", "as", " Data", "Frame", " with", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Create", " a", " bar", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Values", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "\"", "\"", "\"", "\n", "Ex", "planation", ":", "\n", "\n", "1", ".", " `", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")`", "\n", "   ", "-", " This", " line", " creates", " a", " Pand", "as", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", " for", " the", " specified", " number", " of", " rows", "\n", "     ", "and", " columns", ".", "\n", "\n", "2", ".", " `", "non", "_", "zero"], "logprobs": [-0.5261066555976868, -3.163785457611084, -0.013093563728034496, -0.05314018577337265, -0.11491844058036804, -0.4813157916069031, -0.20847831666469574, -0.5375075340270996, -1.1920928244535389e-07, -0.0004640932602342218, -0.0007535954937338829, -0.06399025022983551, -0.10496609658002853, -0.022993257269263268, -0.0017151420470327139, -2.479806423187256, -0.005972514860332012, -0.22674670815467834, -0.003798058023676276, -0.005678000394254923, -5.006777428206988e-06, -0.001988816075026989, -0.07548897713422775, -0.030624492093920708, -1.5616295058862306e-05, -0.0009726322605274618, -1.0490362910786644e-05, -0.001005025114864111, -0.00048351517762057483, -0.001471390132792294, -0.6298238635063171, -4.5298504119273275e-05, -0.005886717699468136, -0.044535186141729355, -0.0019928612746298313, -0.005428454838693142, -0.19918276369571686, -0.0002693767019081861, -0.011386174708604813, -0.0009055804111994803, -0.05457397177815437, -1.3828182090946939e-05, -0.001019673072732985, -7.152555099310121e-07, -0.00010013079008786008, -0.013810083270072937, -0.0013560395454987884, -0.05247223377227783, -0.0025694710202515125, -0.0013234198559075594, -2.3841830625315197e-06, -0.00014578233822248876, -0.0030553110409528017, -0.019642246887087822, -0.07305166125297546, -0.0008819981012493372, -0.0034532458521425724, -0.007929040119051933, -0.00031895318534225225, -0.01100058201700449, -0.00842185877263546, -0.07577446848154068, -0.1762123703956604, -0.04204469546675682, -8.797258487902582e-05, -9.727005090098828e-05, -0.0033225591760128736, -0.027000606060028076, -0.0007859955076128244, -0.0025977694895118475, -0.04244352877140045, -0.001999285537749529, -0.19549626111984253, -0.03201332315802574, -0.003821927821263671, -0.004707088693976402, -0.015936385840177536, -0.0006901028100401163, -0.4958265423774719, -0.040248557925224304, -0.5379723906517029, 0.0, -0.0023011888843029737, -0.004417304880917072, -0.00036840804386883974, -2.9205850296420977e-05, -0.002148107625544071, -0.051285628229379654, -0.00014184899919200689, -0.00020704510097857565, -0.004290779586881399, -0.0025153683964163065, -0.06879143416881561, -0.01789730228483677, -0.0003719830128829926, -0.0015710166189819574, -0.017318570986390114, -0.00029595286468975246, -0.028490180149674416, -0.011095372959971428, -1.2835845947265625, -0.30995655059814453, -0.08635859936475754, -0.0015845850575715303, -0.5794327259063721, -0.000510204816237092, -1.2773481607437134, -0.010551970452070236, -0.0005180685548111796, -0.0002047805901383981, -0.0001931004080688581, -4.410734163684538e-06, -1.7165990357170813e-05, -1.537788011773955e-05, -0.0594153068959713, -0.004822883754968643, -0.009826146997511387, -0.03957720845937729, -0.0010455148294568062, -0.016392674297094345, -0.0029832879081368446, -0.03749443590641022, -1.1920928244535389e-07, -9.059865078597795e-06, -0.00017629499780014157, -0.0012860370334237814, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, -0.09531648457050323, -0.0021111122332513332, -0.08773880451917648, -0.006969901267439127, -4.3987260141875595e-05, -0.008891158737242222, -0.0018196230521425605, -3.2839345932006836, -0.0278664231300354, -0.5393754839897156, -0.002247072057798505, -0.4062201976776123, -1.5508959293365479, -0.18677930533885956, -0.0015729209408164024, -0.10034731030464172, -0.004298376385122538, -3.58813522325363e-05, -0.0038309532683342695, -4.005352093372494e-05, -0.014652852900326252, -0.0018331881146878004, -0.0020638848654925823, -0.0002307625545654446, -0.00032455421751365066, -0.0010912423022091389, -0.00011050090688513592, -3.9457496313843876e-05, -0.0009494088008068502, -0.002753040986135602, -0.335938960313797, -0.0006401873542927206, -0.31178128719329834, -0.006572771351784468, -0.0008368566050194204, -0.0020613865926861763, -0.055166516453027725, -0.03250884264707565, -3.8206722736358643, -0.006171574350446463, -0.0011849532602354884, -0.1496538519859314, -3.0746073722839355, -0.00434490479528904, -0.08841264247894287, -0.021845543757081032, -0.5434258580207825, -0.3737483322620392, -0.04629405587911606, -0.8850235939025879, -2.261782169342041, -0.01829276978969574, -0.0010349161457270384, -6.9141146923357155e-06, -0.00019214690837543458, -0.001374253653921187, -0.032992005348205566, -5.364403477869928e-06, -0.00056429672986269, -2.634490556374658e-05, -0.0002694958820939064, -9.703165414975956e-05, -0.00034362133010290563, -0.004327575676143169, -6.639736966462806e-05, -0.007457868196070194, -0.0009459549910388887, -0.0011837625643238425, -0.0004314445541240275, -0.001500552985817194, -0.0033337275963276625, -0.007137751672416925, -0.00011288482346571982, -0.020653890445828438, -5.6265202147187665e-05, -0.0050110225565731525, -0.00011121608258690685, -0.0025584129616618156, -0.004154029302299023, -0.0007326302584260702, -0.001637666835449636, -0.0008007657015696168, -0.0006401873542927206, -1.3589766240329482e-05, -0.00018070495571009815, -0.010090883821249008, -0.8513777852058411, -0.4225117564201355, -0.15657243132591248, -0.06362128257751465, -0.18805399537086487, -0.1577206403017044, -0.0014990055933594704, -0.5796079039573669, -2.3841855067985307e-07, -0.0014230611268430948, -8.594620157964528e-05, -0.0834924653172493, -0.4710385799407959, -0.019483964890241623, -0.0006233894382603467, -0.3447380065917969, -0.023245446383953094, -2.5629668016335927e-05, -0.005176356062293053, -0.0033362226095050573, -0.021531518548727036, -0.8892157673835754, -0.6605349183082581, -0.41352328658103943, -0.03737432509660721, -0.016987765207886696, -0.024895748123526573, -2.5603528022766113, -0.2587023079395294, -0.0970044657588005, -0.1381625086069107, -0.14511077105998993, -0.7468454837799072, -0.900111734867096, -0.015377882868051529, -0.00011228884250158444, -0.0018148632952943444, -0.005509786307811737, -0.00033098942367359996, -3.981510963058099e-05], "finish_reason": "length"}], "metrics": {"energy": 1123.5402279109958, "energy_per_token": 4.388829015277327, "time": 33.312515, "time_per_token": 0.13012701171875}}
{"outputs": [{"text": "# Generate random integer values between 0 and 9 for the given number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create bar plot\n    plt.figure()\n    ax = non_zero_counts.plot(kind='bar', rot=0)\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Count')\n\n    return df, ax", "tokens": ["#", " Generate", " random", " integer", " values", " between", " ", "0", " and", " ", "9", " for", " the", " given", " number", " of", " rows", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " bar", " plot", "\n", "    ", "plt", ".", "figure", "()", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "'", ",", " rot", "=", "0", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -0.520423173904419, -0.12847118079662323, -0.08235650509595871, -1.3444455862045288, -0.0005769256968051195, -0.0022646752186119556, -0.0003997480380348861, -0.00021228920377325267, -0.0024588846135884523, -0.29980337619781494, -0.7647234201431274, -0.7132482528686523, -0.0050921509973704815, -0.00012385078298393637, -0.0003741279651876539, -0.15420080721378326, -0.002806655131280422, -0.7574403882026672, -0.005287235137075186, -0.002665064763277769, -8.34461570775602e-06, -0.0011243456974625587, -0.02049565315246582, -0.01740749180316925, -1.2993727978027891e-05, -0.00026258357684127986, -1.0013530300057027e-05, -0.0006835508393123746, -0.0001714082609396428, -0.0007354891858994961, -0.46465885639190674, -2.1815061700181104e-05, -0.004567903000861406, -0.01902475766837597, -0.0008752091089263558, -0.0014907924924045801, -0.21778243780136108, -0.0004418112221173942, -0.006540913600474596, -0.0008073169738054276, -0.057523518800735474, -1.2516897186287679e-05, -0.0008454324561171234, -5.960462772236497e-07, -0.00011789103882620111, -0.009587316773831844, -0.0009012927766889334, -0.01691005751490593, -0.0023347281385213137, -0.0018567480146884918, -8.344646857949556e-07, -1.6927575416048057e-05, -0.0020887479186058044, -0.005895368754863739, -0.10858581215143204, -0.0009221353684552014, -0.009468529373407364, -0.06774403154850006, -1.890683889389038, -0.00010632903286023065, -0.00154292699880898, -0.005127612501382828, -0.0196306761354208, -0.0007687236065976322, -0.0016801540041342378, -0.09686964750289917, -0.00029416524921543896, -0.21762555837631226, -0.0332186222076416, -0.0049384282901883125, -0.0075613958761096, -0.0173175148665905, -0.0004670721245929599, -0.3219399154186249, -0.025963425636291504, -0.5291871428489685, 0.0, -0.0009494088008068502, -0.0025512785650789738, -0.00021288513380568475, -1.8358061424805783e-05, -0.001508170971646905, -0.040843356400728226, -0.00011967896716669202, -0.00020680672605521977, -0.004303480498492718, -0.001992742298170924, -0.05147971957921982, -0.015712035819888115, -0.0005830018781125546, -0.005229603033512831, -0.1959710568189621, -1.2036941051483154, -0.0006681832019239664, -0.12953734397888184, -0.0002762889489531517, -2.6469719409942627, -0.00013648532330989838, -0.2011985033750534, -1.027391791343689, -0.02956976927816868, -0.0014993627555668354, -0.06023162975907326, -0.0006617502076551318, -0.30520907044410706, -1.311301275563892e-06, 0.0, -3.576278118089249e-07, -7.152555099310121e-07, -0.00023922442051116377, -8.868777513271198e-05, -0.11496467143297195, -0.0004183370911050588, -0.005361700896173716, -1.9430925021879375e-05, -1.863039255142212, -2.1219027985353023e-05, -2.3154568672180176, -0.0059905266389250755, -0.07614526897668839, -0.25326377153396606, -0.020651789382100105, -0.18060190975666046, -0.36542847752571106, -0.0004203628050163388, -0.019097154960036278, -0.003104868344962597, -0.4029674232006073, -0.03166251257061958, -0.0024358145892620087, -0.00032860602368600667, -0.0012490098597481847, -0.002935269847512245, -0.0001299296854995191, -8.201262971851975e-05, -0.009298707358539104, -0.005942178890109062, -0.5007500052452087, -0.39478200674057007, -0.0010945764370262623, -0.0026793316937983036, -0.0010207447921857238, -1.528191089630127, -0.0033298067282885313, -0.06871386617422104, -0.03839503973722458, -0.00046361665590666234, -0.25583726167678833, -0.0004825619689654559, -0.14683271944522858, -0.005990289617329836, -0.000860201776959002, -0.001353539526462555, -0.04363347589969635, -0.025541696697473526, -1.26327383518219], "finish_reason": "stop"}], "metrics": {"energy": 642.5157706918716, "energy_per_token": 4.0665555107080475, "time": 17.488771, "time_per_token": 0.11068842405063291}}
{"outputs": [{"text": "# Create a DataFrame with random integer values between 0 and 9 for the specified number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot to visualize the non-zero value counts\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts)\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Non-Zero Value Count')\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", " for", " the", " specified", " number", " of", " rows", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", " to", " visualize", " the", " non", "-", "zero", " value", " counts", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Value", " Count", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -0.39562204480171204, -0.000860201776959002, -0.002605617046356201, -0.0004021312633994967, -0.0001501924270996824, -0.0024233281146734953, -0.682518720626831, -0.6850314736366272, -1.1454286575317383, -0.014509523287415504, -0.00018106251081917435, -0.0006105228094384074, -0.14827300608158112, -0.002080420730635524, -0.0787699893116951, -0.0034271099139004946, -0.0014060382964089513, -2.0265558760002023e-06, -0.0005859803641214967, -0.043049927800893784, -0.026037760078907013, -1.156323378381785e-05, -0.000447530735982582, -1.2159273865108844e-05, -0.0008554374799132347, -0.00021050144277978688, -0.0008493629866279662, -0.6665393710136414, -3.8742269680369645e-05, -0.005487023387104273, -0.020900016650557518, -0.0010658780811354518, -0.0028102213982492685, -0.19743822515010834, -0.0005963454605080187, -0.005224148277193308, -0.0010590903693810105, -0.0691170021891594, -1.7165990357170813e-05, -0.0008305437513627112, -1.0728830375228426e-06, -0.00010048838157672435, -0.006477313581854105, -0.0011556621175259352, -0.0134965805336833, -0.00278014549985528, -0.002292625606060028, -4.768370445162873e-07, -3.933898824470816e-06, -0.002281683497130871, -0.004194747656583786, -0.12324736267328262, -0.0008312584250234067, -0.006826767697930336, -0.09956935048103333, -0.025974459946155548, -0.1661929488182068, -3.9457496313843876e-05, -5.924526340095326e-05, -0.0025285673327744007, -0.004969506990164518, -0.0002548369811847806, -0.001746677909977734, -0.14948314428329468, -0.00023231192608363926, -0.2538449168205261, -0.03671104088425636, -0.005013513378798962, -0.007788646034896374, -0.022122975438833237, -0.0005520250415429473, -0.449869304895401, -0.021259989589452744, -0.514363706111908, 0.0, -0.0034957746975123882, -0.004764039069414139, -0.000259723310591653, -2.288792165927589e-05, -0.0020095170475542545, -0.04434555768966675, -0.00016330339713022113, -0.0002150304353563115, -0.007391131483018398, -0.002191762439906597, -0.05402478203177452, -0.015165618620812893, -0.0005685858195647597, -0.002674457151442766, -0.19842417538166046, -0.1853441447019577, -0.06451823562383652, -0.0013655632501468062, -2.389930009841919, -0.0244008619338274, -0.03460581600666046, -0.1419442892074585, -0.0001731960946926847, -3.1709168979432434e-05, -0.1568038910627365, -0.008171223104000092, -0.04882395267486572, -0.0003094194398727268, -1.766687273979187, -0.007109581492841244, -0.0004213160718791187, -0.0002805792901199311, -0.00010311071673640981, -4.887569048150908e-06, -1.597391747054644e-05, -0.00017176583060063422, -0.07122726738452911, -0.0026700582820922136, -0.009710103273391724, -0.046892549842596054, -0.00130282377358526, -0.010788683779537678, -0.0033452522475272417, -0.03978332504630089, -1.1920928244535389e-07, -4.410646579344757e-05, -0.0001892864383989945, -0.0008353081648238003, -1.0728830375228426e-06, 0.0, 0.0, -7.152555099310121e-07, -0.11705755442380905, -0.002069357316941023, -0.06676400452852249, -0.005355535075068474, -2.7179348762729205e-05, -0.003988289274275303, -0.0011238694423809648, -0.9808698296546936, -0.04218002036213875, -0.2164009064435959, -0.0015301911626011133, -0.0018412794452160597, -0.00024828212917782366, -0.00011538793478393927, -2.50339189733495e-06, -4.732496745418757e-05, -2.7418097943154862e-06, -0.0025227407459169626, -0.0014157997211441398, -0.2048720419406891, -0.0007641970878466964, -0.2593916058540344, -0.2762794494628906, -9.452849917579442e-05, -0.9265923500061035, -0.0003275334893260151, -0.011382756754755974, -0.012630587443709373, -2.6225699912174605e-05, -0.014482500031590462, -3.218599158572033e-05, -0.0018845908343791962, -0.0012653210433200002, -0.0011408970458433032, -0.00012420836719684303, -0.00024375328212045133, -0.00011359999916749075, -6.329813186312094e-05, -0.0007184546557255089, -0.0013484203955158591, -0.0018423503497615457, -0.41010087728500366, -0.0005310555570758879, -0.38219738006591797, -0.008251977153122425, -0.0007390628452412784, -0.0013866343069821596, -0.07075956463813782, -0.03401558846235275, -1.087218999862671], "finish_reason": "stop"}], "metrics": {"energy": 665.9814948348994, "energy_per_token": 3.5805456711553734, "time": 16.381853, "time_per_token": 0.08807447849462366}}
{"outputs": [{"text": "# Generate random integer values for each row in the DataFrame\n    df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0).to_dict()\n\n    # Create a bar plot to visualize the non-zero counts\n    ax = plt.subplot()\n    plt.bar(COLUMNS, non_zero_counts.values())\n    ax.set_title('Non-Zero Value Counts')\n    plt.xlabel('Column')\n    plt.ylabel('Count')\n    plt.xticks(rotation=30)\n    plt.tight_layout()\n\n    return df, ax", "tokens": ["#", " Generate", " random", " integer", " values", " for", " each", " row", " in", " the", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", ".", "to", "_", "dict", "()", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", " to", " visualize", " the", " non", "-", "zero", " counts", "\n", "    ", "ax", " =", " plt", ".", "sub", "plot", "()", "\n", "    ", "plt", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ".", "values", "())", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Column", "')", "\n", "    ", "plt", ".", "ylabel", "('", "Count", "')", "\n", "    ", "plt", ".", "xt", "icks", "(", "rotation", "=", "3", "0", ")", "\n", "    ", "plt", ".", "tight", "_", "layout", "()", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -0.520423173904419, -0.12847118079662323, -0.08235650509595871, -0.4632504880428314, -0.5136067271232605, -1.770545482635498, -1.437182068824768, -0.05029839649796486, -0.027040986344218254, -0.0008254220010712743, -0.038729045540094376, -0.0028523020446300507, -0.8438039422035217, -0.021870970726013184, -0.007293858099728823, -4.887569048150908e-06, -0.0028901018667966127, -0.06828752160072327, -0.045216888189315796, -1.6212332411669195e-05, -0.0011185110779479146, -1.1205610462639015e-05, -0.0018486568005755544, -0.0006849803612567484, -0.0018867325270548463, -1.2846100330352783, -0.005174458492547274, -0.005893828347325325, -7.450303382938728e-05, -0.007692594546824694, -6.19869097135961e-05, -0.01808510534465313, -0.0008744944934733212, -0.003554694587364793, -0.006248817313462496, -0.0037290574982762337, -0.007912245579063892, -0.001069450518116355, -0.05484156683087349, -2.372236667724792e-05, -0.0012173393042758107, -7.152555099310121e-07, -0.00014757021563127637, -0.04876559600234032, -0.0019471748964861035, -0.05912858992815018, -0.0013579442165791988, -0.0011375630274415016, -1.1920928244535389e-07, -2.0146166207268834e-05, -0.0015848231269046664, -0.00895306933671236, -0.18152087926864624, -0.0011887634173035622, -0.01991468295454979, -0.21225552260875702, -0.2595568597316742, -0.30234235525131226, -0.00012468514614738524, -0.00021908267808612436, -0.007606589701026678, -0.021914472803473473, -0.0009028411004692316, -0.007057736162096262, -0.1268245130777359, -0.0002787916746456176, -0.35565564036369324, -0.09137865155935287, -0.00787404365837574, -0.010695750825107098, -0.03453245759010315, -0.0009976415894925594, -0.42027747631073, -0.0422813855111599, -0.6256541609764099, -1.1920928244535389e-07, -0.002735684160143137, -0.00460813008248806, -0.0003694805200211704, -5.054346183896996e-05, -0.004377426113933325, -0.08782823383808136, -0.00022742546570952982, -0.00040570611599832773, -0.003507297718897462, -0.003402280155569315, -2.6947293281555176, -0.7689670920372009, -3.2186455882765586e-06, -0.21337856352329254, -0.0010617101797834039, -0.015949644148349762, -0.029074296355247498, -0.0005308172549121082, -0.00498623214662075, -0.32864007353782654, -0.47161978483200073, -0.05832260847091675, -0.0033435889054089785, -2.0158674716949463, -0.05859842523932457, -0.08717367053031921, -0.280939519405365, -0.0002422039397060871, -4.768258077092469e-05, -1.8769557476043701, -0.03601695969700813, -0.00048268112004734576, -0.4821017384529114, -0.000507464399561286, -0.08729679137468338, -6.6756979322235566e-06, -0.5191217660903931, -0.018223943188786507, -0.10835681855678558, -0.017463840544223785, -0.002972709946334362, -0.8495917916297913, -0.000144709600135684, -0.02099539153277874, -0.00595379201695323, -2.1056456565856934, -5.960462772236497e-07, -7.748573807475623e-06, -0.0006129055400379002, -0.1795022040605545, -4.768370445162873e-07, -4.768370445162873e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.007749729789793491, -0.0020353333093225956, -0.2713458836078644, -0.00323653407394886, -0.0719514787197113, -1.3013343811035156, -0.0001629458274692297, -0.07369372248649597, -0.002353756921365857, -0.2857819199562073, -0.14485977590084076, -0.0021206289529800415, -0.0006057572900317609, -0.001515312702395022, -0.004477119538933039, -9.178694017464295e-05, -8.642300235806033e-05, -0.01410115510225296, -0.005638527683913708, -0.39443621039390564, -0.7387655973434448, -8.177422569133341e-05, -0.892917811870575, -0.006734294816851616, -1.5088177919387817, -0.15983596444129944, -0.000739658426027745, -0.0027625514194369316, -0.0012699642684310675, -1.1920928244535389e-07, -0.01872996799647808, -0.005318183917552233, -0.707865834236145, -0.07079821825027466, -0.0005436849314719439, -0.6293960809707642, -0.1551535427570343, -4.1483970562694594e-05, -0.4865444302558899, -4.2437604861333966e-05, -0.002253613667562604, -0.03766871988773346, -0.02543211169540882, -2.5474188327789307, -0.017658518627285957, -0.10024044662714005, -0.042588505893945694, -0.7757326364517212, -0.11070424318313599, -1.9192511899746023e-05, -0.23364359140396118, -1.8954096958623268e-05, -1.1920928244535389e-07, -0.005060483235865831, -0.009378070943057537, -0.13918395340442657, -0.0007871866691857576, -0.12481607496738434, -0.016636569052934647, -0.0008563903393223882, -0.00246863579377532, -0.021345878019928932, -0.028598157688975334, -1.0744712352752686], "finish_reason": "stop"}], "metrics": {"energy": 889.098607740403, "energy_per_token": 4.536217386430628, "time": 26.665924, "time_per_token": 0.13605063265306122}}
{"outputs": [{"text": "# Generate random integer values for the DataFrame\n    df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    plt.figure(figsize=(10, 5))\n    ax = non_zero_counts.plot(kind='bar')\n    plt.xlabel('Columns')\n    plt.ylabel('Non-Zero Value Counts')\n    plt.title('Non-Zero Value Counts')\n\n    return df, ax", "tokens": ["#", " Generate", " random", " integer", " values", " for", " the", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "5", "))", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Columns", "')", "\n", "    ", "plt", ".", "ylabel", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "plt", ".", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -0.520423173904419, -0.12847118079662323, -0.08235650509595871, -0.4632504880428314, -1.0583207607269287, -0.07724305987358093, -0.0003741279651876539, -0.03368761017918587, -0.001661945367231965, -0.2864607870578766, -0.006464640609920025, -0.002033072989434004, -4.410734163684538e-06, -0.0006232702871784568, -0.028445109724998474, -0.02230089344084263, -2.7418097943154862e-06, -0.0005634627304971218, -1.597391747054644e-05, -0.0008617501589469612, -0.0002907091984525323, -0.0019568121060729027, -1.4638750553131104, -0.00471088569611311, -0.0038018582854419947, -6.317892984952778e-05, -0.0038885469548404217, -2.002696055569686e-05, -0.01257267128676176, -0.0006603206275030971, -0.0025433117989450693, -0.0031059379689395428, -0.0011599486460909247, -0.008052858524024487, -0.0006532918778248131, -0.03317549452185631, -1.9788545614574105e-05, -0.001254724687896669, -1.0728830375228426e-06, -9.810443589231e-05, -0.06426002830266953, -0.0011066034203395247, -0.03172233700752258, -0.0010325344046577811, -0.0005722792120650411, -1.1920928244535389e-07, -6.318072337307967e-06, -0.0014137759571895003, -0.005637934897094965, -0.07794628292322159, -0.0010889797704294324, -0.007968776859343052, -0.13939779996871948, -0.9020841121673584, -8.5588610090781e-05, -0.0021203910000622272, -0.008340172469615936, -0.03548716381192207, -0.001671347301453352, -0.0025181034579873085, -0.05301504209637642, -0.0003097769513260573, -0.22388418018817902, -0.03124202787876129, -0.006468193605542183, -0.00949143711477518, -0.02564302086830139, -0.0005013877525925636, -0.3619062900543213, -0.022298678755760193, -0.5342190265655518, -1.1920928244535389e-07, -0.0011389919091016054, -0.002241838490590453, -0.00027021096320822835, -1.9430925021879375e-05, -0.0013141338713467121, -0.08698572963476181, -0.000196556793525815, -0.0002115741081070155, -0.003863728605210781, -0.0034155859611928463, -0.07953346520662308, -0.016282550990581512, -0.0005484507419168949, -0.0045485603623092175, -0.14893706142902374, -0.6237003207206726, -0.04630498215556145, -0.0012618682812899351, -0.2839340269565582, -0.00022742546570952982, -2.88249135017395, -0.00021526881027966738, -0.15488789975643158, -0.49000921845436096, -0.003912652377039194, -5.960462772236497e-07, -0.000497336674015969, -0.15213793516159058, -0.03135767951607704, -9.095255518332124e-05, -0.011456063017249107, -1.1530470848083496, -0.0035511308815330267, -0.08756702393293381, -0.002895213197916746, -0.15116889774799347, -0.0002269487304147333, -1.2666746377944946, -9.536738616588991e-07, 0.0, -3.576278118089249e-07, -8.344646857949556e-07, -0.0002026352594839409, -8.546940807718784e-05, -0.0544017031788826, -0.0003651905863080174, -0.0034610864240676165, -1.3589766240329482e-05, -0.29788538813591003, -0.0019174300832673907, -0.20830343663692474, -0.7538962364196777, -8.4638240878121e-06, -1.7265212535858154, -0.02592509239912033, -0.4926813244819641, -0.003810290014371276, -0.000886285852175206, -0.0002728328399825841, -0.00025507534155622125, -2.0265558760002023e-06, -0.01835772953927517, -0.0009054613183252513, -0.29972413182258606, -0.0010699268896132708, -0.11230222135782242, -0.5516424775123596, -0.00016532962035853416, -0.6723278164863586, -0.0004938812926411629, -0.0007981451926752925, -0.029304351657629013, -0.1571536809206009, -7.986990567587782e-06, -0.010664024390280247, -0.004516638349741697, -0.001734420657157898, -7.092700980138034e-05, -0.00017450717859901488, -0.00025733973598107696, -8.630380034446716e-05, -0.00014006110723130405, -0.0042988513596355915, -0.0032913105096668005, -0.4025740921497345, -0.0006195771275088191, -0.20773625373840332, -0.005062262061983347, -0.0005862186080776155, -0.0023750450927764177, -0.05597459524869919, -0.037265338003635406, -1.1054108142852783], "finish_reason": "stop"}], "metrics": {"energy": 670.8873776760097, "energy_per_token": 4.017289686682693, "time": 18.323767, "time_per_token": 0.10972315568862276}}
{"outputs": [{"text": "# Create a DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    ax = non_zero_counts.plot(kind='bar')\n\n    # Set title and axis labels\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Count')\n\n    # Rotate x-axis labels\n    ax.set_xticklabels(COLUMNS, rotation=45)\n\n    # Return the DataFrame and matplotlib Axes object\n    return df, ax\n\ndf, ax = task_func(10)\n# Display the resulting DataFrame\nprint(df)", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "\n", "    ", "#", " Set", " title", " and", " axis", " labels", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "\n", "    ", "#", " Rot", "ate", " x", "-", "axis", " labels", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "COL", "UM", "NS", ",", " rotation", "=", "4", "5", ")", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", " and", " matplotlib", " Ax", "es", " object", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "df", ",", " ax", " =", " task", "_", "func", "(", "1", "0", ")", "\n", "#", " Display", " the", " resulting", " Data", "Frame", "\n", "print", "(", "df", ")", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -0.39562204480171204, -0.000860201776959002, -0.002605617046356201, -0.0004021312633994967, -0.0001501924270996824, -0.0024233281146734953, -0.7798736095428467, -0.001912789884954691, -0.06358873099088669, -0.0026416426990181208, -0.0013297295663505793, -4.172316494077677e-06, -0.0007513322634622455, -0.03982296213507652, -0.027250975370407104, -1.0251946150674485e-05, -0.00041547726141288877, -1.3351351299206726e-05, -0.000996093382127583, -0.00021753329201601446, -0.0008031480247154832, -0.5468050241470337, -2.5629668016335927e-05, -0.0035816587042063475, -0.020338673144578934, -0.0011372057488188148, -0.002276450162753463, -0.31421688199043274, -0.00021741411183029413, -0.006576324347406626, -0.0007425173535011709, -0.05549440532922745, -1.549708758830093e-05, -0.0008036244544200599, -8.344646857949556e-07, -0.00018666432879399508, -0.008898720145225525, -0.0009492897079326212, -0.04039878025650978, -0.0018233117880299687, -0.0009291622554883361, -1.7881377516459906e-06, -2.264974000354414e-06, -0.0020485385321080685, -0.006093732547014952, -0.08705610036849976, -0.0009191579301841557, -0.008072606287896633, -0.07436800748109818, -0.12981387972831726, -0.13375180959701538, -5.6265202147187665e-05, -6.937739817658439e-05, -0.00351965194568038, -0.005981876514852047, -0.0002454218047205359, -0.0017551269847899675, -0.0318775400519371, -0.00021634146105498075, -0.11644710600376129, -0.02296401560306549, -0.0045853471383452415, -0.007343324366956949, -0.012974251061677933, -0.00042989550274796784, -0.48503953218460083, -0.029719866812229156, -0.5486413836479187, 0.0, -0.0022787100169807673, -0.0029834068845957518, -0.00028046013903804123, -3.373566141817719e-05, -0.002591111231595278, -0.06329649686813354, -0.00014006110723130405, -0.00022015532886143774, -0.004654050804674625, -0.0023093954659998417, -0.05928251892328262, -0.014767619781196117, -0.0005278385942801833, -0.003931175917387009, -0.23878979682922363, -0.30140402913093567, -0.03923271223902702, -0.0012179345358163118, -0.43559861183166504, -0.0002637753786984831, -0.3941274583339691, -0.000296310376143083, -0.00952072162181139, -7.152555099310121e-07, 0.0, -2.3841855067985307e-07, 0.0, -0.00019214690837543458, -7.545663538621739e-05, -0.44814571738243103, -0.004000043962150812, -0.005903901532292366, -2.777537883957848e-05, -0.193636953830719, -0.0011530425399541855, -1.3601226806640625, -0.000406301929615438, -0.03921884298324585, -0.45508548617362976, -3.178798198699951, -0.23233087360858917, -1.415440320968628, -0.0005418977816589177, -0.03429392725229263, -0.00013350549852475524, -0.07528378814458847, -0.00024923557066358626, -0.011430607177317142, -0.0011013639159500599, -0.006698889657855034, -0.04912804812192917, -0.0032818051986396313, -0.00036554806865751743, -0.0011175584513694048, -0.0029712836258113384, -0.00011860620725201443, -7.986703712958843e-05, -0.014223741367459297, -0.0013024666113778949, -0.00926138460636139, -0.011571904644370079, -2.5748875486897305e-05, -0.00042024365393444896, -0.0004127365828026086, -0.0066439444199204445, -0.0014587724581360817, -0.6758140325546265, -0.0006737822550348938, -5.6980417866725475e-05, -0.0020926736760884523, -0.00018499570433050394, -1.9073468138230965e-06, -0.00015507926582358778, -1.0371154530730564e-05, -0.0005783553933724761, -0.0010180057724937797, -0.2890176773071289, -0.12671813368797302, -0.00012814177898690104, -0.029662469401955605, -0.0005279577453620732, -0.6152557134628296, -2.902127265930176, -6.711257447022945e-05, -0.056641899049282074, -0.002026410773396492, -0.13146306574344635, -0.057072222232818604, -0.24651335179805756, -0.00043847484630532563, -0.43973660469055176, -0.00011169286881340668, -1.4773190021514893, -8.260862523457035e-05, -1.2874520507466514e-05, -0.0024924185127019882, -8.344646857949556e-07, -0.001134586171247065, -0.19228105247020721, -2.622600959512056e-06, -8.940656698541716e-06, -0.0031040364410728216, -0.0012311505852267146, -0.0008024332928471267, -0.04459264874458313, -0.0003623305819928646, -0.36854591965675354, -0.005362175405025482, -0.009703137911856174, -0.00029488030122593045, -1.393447756767273, -0.9873478412628174, -0.11291509866714478, -0.07933185994625092, -0.0006563892820850015, -0.007661718875169754, -1.024741530418396, -0.016428442671895027, -7.510157047363464e-06, -0.037763312458992004, -0.00330746965482831, -0.0003718638326972723, -0.0035304618068039417, -0.007298592012375593, -0.0008837846689857543, -0.0022979776840656996, -0.04994634911417961, -0.022201329469680786, -2.377918243408203, -0.042753227055072784, -0.014698080718517303, -0.0014607959892600775, -0.0014692475087940693, -0.0002803409588523209, -0.0005520250415429473, -0.0009485750924795866, -0.2136216014623642, -0.01999274082481861, -0.13802877068519592, -0.12380743771791458, -2.2894577980041504, -1.7324317693710327, -0.08121991157531738, -3.2075881958007812, -2.165250778198242, -0.0008898589294403791, -0.7053318619728088, -0.09795790910720825, -0.021363265812397003, -0.17365197837352753, -0.18127548694610596, -0.041320908814668655, -0.6513136029243469, -0.20627461373806], "finish_reason": "stop"}], "metrics": {"energy": 884.8870501365665, "energy_per_token": 3.814168319554166, "time": 23.793383, "time_per_token": 0.10255768534482758}}
{"outputs": [{"text": "# Create a DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    ax = non_zero_counts.plot.bar()\n\n    # Set plot title\n    ax.set_title(\"Non-Zero Value Counts\")\n\n    # Return the DataFrame and the plot axes\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "\n", "    ", "#", " Set", " plot", " title", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Non", "-", "Zero", " Value", " Count", "s", "\"", ")", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", " and", " the", " plot", " axes", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -0.39562204480171204, -0.000860201776959002, -0.002605617046356201, -0.0004021312633994967, -0.0001501924270996824, -0.0024233281146734953, -0.7798736095428467, -0.001912789884954691, -0.06358873099088669, -0.0026416426990181208, -0.0013297295663505793, -4.172316494077677e-06, -0.0007513322634622455, -0.03982296213507652, -0.027250975370407104, -1.0251946150674485e-05, -0.00041547726141288877, -1.3351351299206726e-05, -0.000996093382127583, -0.00021753329201601446, -0.0008031480247154832, -0.5468050241470337, -2.5629668016335927e-05, -0.0035816587042063475, -0.020338673144578934, -0.0011372057488188148, -0.002276450162753463, -0.31421688199043274, -0.00021741411183029413, -0.006576324347406626, -0.0007425173535011709, -0.05549440532922745, -1.549708758830093e-05, -0.0008036244544200599, -8.344646857949556e-07, -0.00018666432879399508, -0.008898720145225525, -0.0009492897079326212, -0.04039878025650978, -0.0018233117880299687, -0.0009291622554883361, -1.7881377516459906e-06, -2.264974000354414e-06, -0.0020485385321080685, -0.006093732547014952, -0.08705610036849976, -0.0009191579301841557, -0.008072606287896633, -0.07436800748109818, -2.1330068111419678, -0.00018046658078674227, -0.0020059479866176844, -0.008286617696285248, -0.02321469783782959, -0.0009291622554883361, -0.002433792920783162, -0.04340726509690285, -0.00026842328952625394, -0.13985800743103027, -0.02696927823126316, -0.004172904882580042, -0.007191604934632778, -0.018081359565258026, -0.00031549722189083695, -0.3387622535228729, -0.022453835234045982, -0.4719654619693756, 0.0, -0.0016098171472549438, -0.0024223767686635256, -0.0002674698771443218, -2.098061486321967e-05, -0.0020912461914122105, -0.056072428822517395, -0.00011085849109804258, -0.0001740304142003879, -0.0038263218011707067, -0.0026047846768051386, -0.050130266696214676, -0.011518523097038269, -0.0006111184484325349, -0.004171836189925671, -0.2504107356071472, -0.3352701961994171, -0.053278762847185135, -0.0012871085200458765, -0.3455272912979126, -0.00026663561584427953, -0.39587298035621643, -0.0003129946126136929, -0.007454555016011, -8.344646857949556e-07, 0.0, -3.576278118089249e-07, 0.0, -0.00024434918304905295, -8.165503095369786e-05, -1.0603141784667969, -3.790783375734463e-05, -0.23494526743888855, -0.0011214879341423512, -1.347780466079712, -0.00038532938924618065, -0.03875335678458214, -0.40133729577064514, -0.5335816144943237, -0.07812424004077911, -0.5873422026634216, -0.00014149141497910023, -0.048794545233249664, -0.00029380773776210845, -0.013334734365344048, -0.0006741396500729024, -0.002758747199550271, -1.8323743343353271, -0.008986268192529678, -0.005047080107033253, -0.0005525015876628458, -0.001259129960089922, -0.003339905757457018, -0.0001567479339428246, -0.0001971527235582471, -0.0055389502085745335, -0.010120387189090252, -0.0010981488740071654, -0.03304886445403099, -0.0005921755800954998, -0.790084183216095, -1.241090178489685, -0.22430330514907837, -0.10699258744716644, -0.0009614374139346182, -0.010064566507935524, -1.2314767837524414, -2.1922154426574707, -1.1300125122070312, -0.14546725153923035, -0.0002517383254598826, -0.0031361228320747614, -0.012240175157785416, -0.0009257083875127137, -0.004253626335412264, -0.05650153383612633, -0.030990228056907654, -1.6904182434082031], "finish_reason": "stop"}], "metrics": {"energy": 577.2069517822264, "energy_per_token": 3.7480970894949763, "time": 15.87907, "time_per_token": 0.10311084415584416}}
{"outputs": [{"text": "# Create a random DataFrame with specified columns and number of rows\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    print(\"Original dataframe:\",df)\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n    print(\"Non zero count in each column :\",non_zero_counts)\n    # Create a bar plot\n    plt.figure(figsize=(10, 6))\n    ax = plt.bar(COLUMNS, non_zero_counts)\n\n    # Set plot title and labels\n    plt.title('Non-Zero Value Counts')\n    plt.xlabel('Columns')\n    plt.ylabel('Non-Zero Values')\n    plt.xticks(rotation=45)\n    return df, ax", "tokens": ["#", " Create", " a", " random", " Data", "Frame", " with", " specified", " columns", " and", " number", " of", " rows", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "print", "(", "\"", "Original", " data", "frame", ":\"", ",", "df", ")", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "print", "(", "\"", "Non", " zero", " count", " in", " each", " column", " :", "\"", ",", "non", "_", "zero", "_", "counts", ")", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "6", "))", "\n", "    ", "ax", " =", " plt", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "\n", "    ", "#", " Set", " plot", " title", " and", " labels", "\n", "    ", "plt", ".", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "plt", ".", "xlabel", "('", "Columns", "')", "\n", "    ", "plt", ".", "ylabel", "('", "Non", "-", "Zero", " Values", "')", "\n", "    ", "plt", ".", "xt", "icks", "(", "rotation", "=", "4", "5", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -2.636711835861206, -0.6899833083152771, -0.0017157370457425714, -0.49877873063087463, -1.8154304027557373, -0.7596120834350586, -0.2062058448791504, -0.4318223297595978, -0.0001429217227268964, -0.0005200940649956465, -0.027719641104340553, -0.0019829864613711834, -0.12429814040660858, -0.0029747304506599903, -0.0017197832930833101, -2.50339189733495e-06, -0.0007474012672901154, -0.045090749859809875, -0.0783008486032486, -2.9205850296420977e-05, -0.0008303055074065924, -1.4781842764932662e-05, -0.001918857917189598, -0.0007776573766022921, -0.0009085579658858478, -1.207719087600708, -0.05482960492372513, -0.0024365282151848078, -0.0038093398325145245, -0.0037347583565860987, -0.004548323340713978, -0.0022812075912952423, -0.05999735742807388, -1.3828182090946939e-05, -0.001459367573261261, -1.4305104514278355e-06, -4.756337511935271e-05, -0.011157972738146782, -0.0016012478154152632, -0.013116036541759968, -0.0023311602417379618, -0.0011480414541438222, -1.0728830375228426e-06, -1.4305104514278355e-06, -0.0012987758964300156, -0.00662097055464983, -1.9878952503204346, -2.8004958629608154, -0.039595771580934525, -1.8550233840942383, -3.612441062927246, -2.294302463531494, -0.4433235824108124, -1.0442136526107788, -1.869652271270752, -1.6000282764434814, -0.12051887810230255, -0.048425838351249695, -0.5933346748352051, -0.296174019575119, -0.23125390708446503, -1.9514949321746826, -0.0004629017203114927, -0.0030633925925940275, -0.023849861696362495, -0.0329524427652359, -0.0023600601125508547, -0.0030443770810961723, -0.16890156269073486, -0.0029467991553246975, -0.29759904742240906, -0.05078459903597832, -0.010035652667284012, -0.01803148351609707, -0.038732487708330154, -0.0010811204556375742, -0.3572269678115845, -0.02327561192214489, -0.2932846248149872, -2.3841855067985307e-07, -0.0025270215701311827, -0.005006514955312014, -0.00030894274823367596, -4.5536911784438416e-05, -0.0028299542609602213, -0.0872301533818245, -0.0003147821989841759, -0.000474936212413013, -0.008149821311235428, -0.0019547895062714815, -0.10538341850042343, -0.2624376714229584, -0.12343746423721313, -0.010994804091751575, -0.04274009168148041, -0.69780433177948, -1.2140781879425049, -1.5706777572631836, -2.3996307849884033, -0.18639937043190002, -0.16773608326911926, -3.392179250717163, -0.29440146684646606, -0.03543596342206001, -0.08341415971517563, -7.068861305015162e-05, -4.410734163684538e-06, -1.5735502529423684e-05, -5.364403477869928e-06, -0.016104968264698982, -0.009368387050926685, -0.13656605780124664, -0.027705727145075798, -0.23651552200317383, -0.28088468313217163, -0.04781803488731384, -0.003059827256947756, -0.9450739026069641, -0.005943719297647476, -2.8621959686279297, -0.0006212450098246336, -0.24431869387626648, -0.25691014528274536, -0.003672404680401087, -9.536738616588991e-07, -0.00682534696534276, -0.2923218309879303, -0.0611581988632679, -0.0004320403386373073, -0.152448832988739, -1.006730079650879, -0.0023472157772630453, -0.07723599672317505, -0.005049689672887325, -0.09008496254682541, -0.004028658382594585, -0.3968888521194458, -4.1960789531003684e-05, -0.042003776878118515, -0.0023035677149891853, -0.032571613788604736, -1.1920928244535389e-07, -3.4570634852570947e-06, -0.0002616301644593477, -0.015571440570056438, -3.6954811548639555e-06, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.20661616325378418, -0.010616845451295376, -1.966394066810608, -0.00402046600356698, -0.1042579934000969, -0.4645960330963135, -0.31233900785446167, -0.22354945540428162, -0.1875361055135727, -0.09241367131471634, -0.0033117469865828753, -0.0012885371688753366, -0.01713402196764946, -4.0531076592742465e-06, -0.00200820853933692, -0.1894972175359726, -0.009471599012613297, -0.0009068905492313206, -0.0019287331961095333, -0.003400973277166486, -0.0003238391946069896, -0.000284154579276219, -0.06187719106674194, -0.001961809117347002, -0.0031364792957901955, -0.003615867579355836, -6.556489552167477e-06, -0.004040768835693598, -0.001191859133541584, -0.2718532383441925, -0.0010899323970079422, -0.00011228884250158444, -0.001606484642252326, -0.0004111875023227185, -5.960462772236497e-07, -0.0060210986994206905, -0.002286321949213743, -1.2088292837142944, -0.0023642226587980986, -0.02715851552784443, -1.8525502681732178, -0.20498722791671753, -0.00041952868923544884, -1.4128180742263794, -0.702876627445221, -6.16293036728166e-05, -0.4266687333583832, -1.7523612768854946e-05, -0.0012986568035557866, -0.07068458944559097, -0.017211008816957474, -0.07004793733358383, -0.0021594080608338118, -0.05446966737508774, -0.1545773595571518, -0.9139430522918701, -1.8151108026504517, -0.027890536934137344, -0.0062896874733269215, -0.040441595017910004, -0.06887856870889664, -0.07602009922266006, -0.8936741948127747], "finish_reason": "stop"}], "metrics": {"energy": 775.1517404737481, "energy_per_token": 3.6053569324360377, "time": 19.11756, "time_per_token": 0.08891888372093024}}
{"outputs": [{"text": "# Create a Pandas DataFrame with random integer values between 0 and 9 for a given number of rows\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    # Count the non-zero values in each column and visualize this information using a bar plot\n    ax = df.ne(0).sum().plot(kind='bar')\n    # Add title to the bar plot\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "tokens": ["#", " Create", " a", " Pand", "as", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", " for", " a", " given", " number", " of", " rows", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", " and", " visualize", " this", " information", " using", " a", " bar", " plot", "\n", "    ", "ax", " =", " df", ".", "ne", "(", "0", ")", ".", "sum", "()", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "    ", "#", " Add", " title", " to", " the", " bar", " plot", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.9544246792793274, -1.1920928244535389e-07, -0.0002562671434134245, -0.00032610344351269305, -0.020594336092472076, -0.08449523895978928, -0.01905142515897751, -0.0013396107824519277, -0.20797370374202728, -0.0006447143969126046, -0.0014486543368548155, -0.00029452278977259994, -0.0002131234941771254, -0.0011598295532166958, -0.3650120496749878, -0.6676689386367798, -0.008703866973519325, -0.0007403731578961015, -0.0006156456656754017, -0.0005463061388581991, -0.16708894073963165, -0.004985283128917217, -0.11559078842401505, -0.00343732675537467, -0.0027281944639980793, -3.576272320060525e-06, -0.0016296928515657783, -0.051382679492235184, -0.03349095955491066, -1.9788545614574105e-05, -0.000618624035269022, -1.3589766240329482e-05, -0.001212695729918778, -0.00031192204914987087, -0.0011013639159500599, -0.5330458879470825, -5.018585216021165e-05, -0.007837614975869656, -0.03881986811757088, -0.0015291199088096619, -0.0029242157470434904, -0.2640228867530823, -0.0005657264264300466, -0.00887792557477951, -0.0009053422254510224, -0.08699359744787216, -1.8596476365928538e-05, -0.0010449193650856614, -1.0728830375228426e-06, -0.00010108436981681734, -0.006159015465527773, -0.0009347598534077406, -0.01441681757569313, -0.0035179888363927603, -0.004663662053644657, -1.5497195136049413e-06, -1.7165990357170813e-05, -0.0033912311773747206, -0.007675441447645426, -2.2223284244537354, -0.43688637018203735, -0.08031252771615982, -0.009123186580836773, -0.05175573006272316, -8.49926145747304e-05, -0.0001551984460093081, -0.0015964870108291507, -0.0017289465758949518, -0.00012063252506777644, -0.0017210922669619322, -1.898929476737976, -0.4134718179702759, -0.05031358823180199, -0.0012417471734806895, -0.004663306288421154, -0.0014859121292829514, -0.0014861501986160874, -0.000296310376143083, -0.010080026462674141, -0.004002774599939585, -0.6404162049293518, -0.002883683191612363, -0.05830461531877518, -0.021356381475925446, -3.054795026779175, -9.917721035890281e-05, -0.0008262557676061988, -0.0006233894382603467, -0.000259723310591653, -0.03892409801483154, -0.029894934967160225, -0.0006843847222626209, -0.00557309202849865, -0.551612377166748, -0.016435477882623672, -0.015034692361950874, -8.546940807718784e-05, -0.2280823290348053, -0.028612637892365456, -0.017057498916983604, -1.4727627038955688, -1.4972386360168457, -0.943924605846405, -0.5973621010780334, -0.09111064672470093, -0.8617419004440308, -0.0054039116948843, -0.01839752309024334, -0.0003466005437076092, -0.05398457497358322, -0.0005670370301231742, -0.006092429161071777, -0.0016191004542633891, -0.0031949449330568314, -0.043847426772117615, -0.0020882722456008196, -0.0009210634743794799, -0.0018403275171294808, -0.001834853901527822, -0.00014911970356479287, -0.0003480305604171008, -0.006490934174507856, -0.0016891986597329378, -0.09272392094135284, -0.5467567443847656, -0.012443642131984234, -0.0019408691441640258, -0.0009130837861448526, -0.06649645417928696, -0.03493809700012207, -1.0976040363311768], "finish_reason": "stop"}], "metrics": {"energy": 538.183791055679, "energy_per_token": 4.016296948176708, "time": 14.978165, "time_per_token": 0.11177735074626866}}
{"outputs": [{"text": "# Create the DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the number of non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create the bar plot\n    ax = non_zero_counts.plot(kind='bar')\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Column')\n    ax.set_ylabel('Number of Non-Zero Values')\n\n    return df, ax", "tokens": ["#", " Create", " the", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " number", " of", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " the", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Column", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Number", " of", " Non", "-", "Zero", " Values", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -2.6112935543060303, -0.20702029764652252, -0.0017215682892128825, -0.603432297706604, -0.06118253245949745, -0.11100748181343079, -0.009095425717532635, -1.8939602375030518, -0.001115891383960843, -0.0038563660345971584, -0.0010376551654189825, -0.0001842805795604363, -0.0022978587076067924, -0.32427576184272766, -0.002212578197941184, -0.10333752632141113, -0.0029012751765549183, -0.0012535341084003448, -4.0531076592742465e-06, -0.0008316157618537545, -0.0510404147207737, -0.024528007954359055, -1.0251946150674485e-05, -0.0005860995152033865, -1.2636104656849056e-05, -0.0012469858629629016, -0.00039521988946944475, -0.001081834896467626, -1.6966851949691772, -0.0030917960684746504, -0.0027048927731812, -7.390703103737906e-05, -0.005361463874578476, -3.0636318115284666e-05, -0.014476625248789787, -0.0006335158832371235, -0.0018146253423765302, -0.006521135102957487, -0.0017744047800078988, -0.00910180527716875, -0.00076908094342798, -0.04732970520853996, -2.169585604860913e-05, -0.0013061572099104524, -7.152555099310121e-07, -4.827859811484814e-05, -0.028830986469984055, -0.001681939116679132, -0.04555659368634224, -0.0011332763824611902, -0.000785280775744468, -5.960462772236497e-07, -6.6756979322235566e-06, -0.0013253247598186135, -0.005425609182566404, -0.11182946711778641, -0.000985375139862299, -0.008506020531058311, -0.10621818155050278, -0.089361771941185, -2.3824520111083984, -0.00010632903286023065, -0.007615935988724232, -0.0001517419150331989, -0.0017872564494609833, -0.017765680328011513, -0.014430095441639423, -0.000325388420606032, -0.004763208329677582, -0.04586874693632126, -0.00024125049822032452, -0.19216223061084747, -0.06757915019989014, -0.008116358891129494, -0.011674772016704082, -0.02800031751394272, -0.0006694936309941113, -0.7096431851387024, -0.029029715806245804, -0.5150566697120667, 0.0, -0.0029790091793984175, -0.005420154891908169, -0.0002431573811918497, -3.814624506048858e-05, -0.00204722979106009, -0.10657186806201935, -0.00018487652414478362, -0.00026651646476238966, -0.003893771907314658, -0.003914314787834883, -0.052491575479507446, -0.021466996520757675, -0.0006070678355172276, -0.004302174784243107, -0.261081725358963, -0.5814464092254639, -0.05742402374744415, -0.0014454403426498175, -0.1626613289117813, -0.0002743821241892874, -0.34081119298934937, -0.0003763920976780355, -0.007933888584375381, -9.536738616588991e-07, 0.0, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.0003026265767402947, -0.00013660451804753393, -0.30378809571266174, -0.004177415743470192, -0.009769956581294537, -2.8490614567999728e-05, -0.2657058537006378, -0.002208653138950467, -0.2629111707210541, -0.08208474516868591, -0.0002236116270069033, -0.015927117317914963, -0.004144650883972645, -0.12662118673324585, -0.021838195621967316, -0.003271824214607477, -0.00024125049822032452, -0.0013499680208042264, -0.003617530455812812, -0.00010740180005086586, -0.00013171759201213717, -0.009397557005286217, -0.008897066116333008, -0.7250031232833862, -0.05789518728852272, -0.0004530118894763291, -0.005406757351011038, -0.0010200303513556719, -0.11881861090660095, -0.003913483582437038, -0.9834624528884888, -0.16771884262561798, -0.00021038226259406656, -0.0029863782692700624, -0.00035565727739594877, -2.0265558760002023e-06, -0.000285584683297202, -2.0146166207268834e-05, -0.0010030006524175406, -0.0026114429347217083, -1.992472767829895, -0.0011519708205014467, -0.012081541121006012, -0.0002169373765354976, -0.01611446961760521, -0.004776140209287405, -0.0004245333548169583, -0.0005233110277913511, -0.23357988893985748, -0.0007546676206402481, -0.23548290133476257, -0.011047035455703735, -0.0008686583023518324, -0.001053255284205079, -0.0380551852285862, -0.030576858669519424, -1.0337222814559937], "finish_reason": "stop"}], "metrics": {"energy": 610.8641920499809, "energy_per_token": 3.6578694134729397, "time": 15.314011, "time_per_token": 0.09170066467065868}}
{"outputs": [{"text": "# Create a new DataFrame with random integer values\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.apply(lambda x: np.count_nonzero(x))\n\n    # Create a bar plot\n    ax = non_zero_counts.plot(kind='bar', figsize=(10, 6))\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Count')\n\n    return df, ax", "tokens": ["#", " Create", " a", " new", " Data", "Frame", " with", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "count", "_", "non", "zero", "(", "x", "))", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "'", ",", " fig", "size", "=(", "1", "0", ",", " ", "6", "))", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -3.7130610942840576, -0.5466467142105103, -0.0017254954436793923, -0.0681738406419754, -0.28077566623687744, -0.09039157629013062, -0.007719683926552534, -1.683297038078308, -0.0014267513761296868, -0.08733994513750076, -0.002689318498596549, -0.0013225865550339222, -7.152531907195225e-06, -0.0004857790481764823, -0.04355359077453613, -0.03464266285300255, -1.0847986231965479e-05, -0.0012866322649642825, -1.0251946150674485e-05, -0.0014316319720819592, -0.0003106111544184387, -0.0014603198505938053, -0.5726393461227417, -6.544376083184034e-05, -0.005067362450063229, -0.04031050205230713, -0.0018819731194525957, -0.005444342270493507, -0.23460261523723602, -0.0002796259068418294, -0.011826048605144024, -0.0009033175301738083, -0.03464266285300255, -1.549708758830093e-05, -0.0007923085941001773, -7.152555099310121e-07, -0.0001209901092806831, -0.015890510752797127, -0.0013375869020819664, -0.06010434031486511, -0.002063171239569783, -0.0016150538576766849, -5.960462772236497e-07, -8.260862523457035e-05, -0.002707746112719178, -0.006955813616514206, -0.14468412101268768, -0.00096941675292328, -0.009711402468383312, -0.13865546882152557, -1.7060034275054932, -0.000285584683297202, -0.003954805433750153, -0.013971264474093914, -0.04800950363278389, -0.002293933881446719, -0.004640643019229174, -0.08454672992229462, -0.00024768622824922204, -0.2230120301246643, -0.04359273612499237, -0.005975003354251385, -0.012060340493917465, -0.01824864186346531, -0.0005189026123844087, -0.3474698066711426, -0.024695612490177155, -1.4717624187469482, -0.07198464870452881, -0.033894021064043045, -0.19429248571395874, -0.00026794656878337264, -1.61810302734375, -4.172316494077677e-06, -0.011384054087102413, -3.576278118089249e-07, -9.536738616588991e-07, -3.576278118089249e-07, -0.00039033422945067286, -0.007472658529877663, -0.0461212694644928, -0.0319940410554409, -0.01926426962018013, -0.0005878866068087518, -0.004162457771599293, -0.2865228056907654, -0.3903629779815674, -0.05453897640109062, -0.0021106365602463484, -0.31533172726631165, -0.0002335037279408425, -0.35410308837890625, -0.00038020533975213766, -0.011565541848540306, -4.768370445162873e-07, 0.0, -2.3841855067985307e-07, -5.960462772236497e-07, -0.0005840741214342415, -0.0003631647559814155, -0.31537261605262756, -0.0038342783227562904, -0.011658747680485249, -3.2782016205601394e-05, -1.816367745399475, -2.47952248173533e-05, -2.2904646396636963, -0.0004844683862756938, -0.0011872155591845512, -0.10516077280044556, -0.024947723373770714, -7.688703772146255e-05, -0.015973811969161034, -0.22577841579914093, -0.21247483789920807, -0.008221710100769997, -0.2450914978981018, -0.08904993534088135, -0.00021264675888232887, -0.009139959700405598, -0.0026280886959284544, -0.2612142860889435, -0.025325534865260124, -0.0024091764353215694, -0.00030250742565840483, -0.0011198208667337894, -0.002918391488492489, -0.00012635385792236775, -8.296622399939224e-05, -0.020256202667951584, -0.0027882291469722986, -0.2828628420829773, -0.041084565222263336, -0.0001479277852922678, -0.0013224674621596932, -0.0008434075862169266, -0.09697189927101135, -0.0014349650591611862, -0.4280604124069214, -0.0007826602668501437, -0.00010489867418073118, -0.0016061275964602828, -0.0002119316632160917, -1.9073468138230965e-06, -0.00010406429646536708, -1.0251946150674485e-05, -0.0006217215559445322, -0.0013088955311104655, -0.24552570283412933, -0.1531682163476944, -0.0003252692404203117, -0.23154540359973907, -0.0007256020326167345, -0.20767581462860107, -0.005709648597985506, -0.0007624103454872966, -0.001387943746522069, -0.05876997113227844, -0.02277025207877159, -1.0063672065734863], "finish_reason": "stop"}], "metrics": {"energy": 614.053516033172, "energy_per_token": 3.7671994848660857, "time": 15.281665, "time_per_token": 0.09375254601226994}}
{"outputs": [{"text": "# Step 1: Generate random integers between 0 and 9 for the given number of rows\n    data = np.random.randint(0, 10, size=(rows, len(COLUMNS)))\n\n    # Step 2: Create a Pandas DataFrame\n    df = pd.DataFrame(data=data, columns=COLUMNS)\n\n    # Step 3: Count the non-zero values in each column\n    non_zero_counts = df.apply(lambda x: (x != 0).sum(), axis=0)\n\n    # Step 4: Visualize the non-zero value counts using a bar plot\n    ax = non_zero_counts.plot.bar()\n\n    # Step 5: Set the title and labels\n    ax.set_title(\"Non-Zero Value Counts\")\n    ax.set_xlabel(\"Columns\")\n    ax.set_ylabel(\"Count of Non-Zero Values\")\n\n    return df, ax", "tokens": ["#", " Step", " ", "1", ":", " Generate", " random", " integers", " between", " ", "0", " and", " ", "9", " for", " the", " given", " number", " of", " rows", "\n", "    ", "data", " =", " np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Create", " a", " Pand", "as", " Data", "Frame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "apply", "(", "lambda", " x", ":", " (", "x", " ", "!", "=", " ", "0", ")", ".", "sum", "()", ",", " axis", "=", "0", ")", "\n", "\n", "    ", "#", " Step", " ", "4", ":", " Visual", "ize", " the", " non", "-", "zero", " value", " counts", " using", " a", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "\n", "    ", "#", " Step", " ", "5", ":", " Set", " the", " title", " and", " labels", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Non", "-", "Zero", " Value", " Count", "s", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Columns", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\"", "Count", " of", " Non", "-", "Zero", " Values", "\"", ")", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.5261066555976868, -3.163785457611084, -0.013093563728034496, -0.05314018577337265, -0.11491844058036804, -1.3149950504302979, -1.308121681213379, -2.5162949562072754, -0.8750397562980652, -0.0015013862866908312, -0.00296652945689857, -0.0042302412912249565, -0.00019631843315437436, -0.002302616136148572, -0.47627246379852295, -1.1523008346557617, -0.5386914610862732, -0.011606312356889248, -0.00011979816190432757, -0.0006350646144710481, -0.32057851552963257, -0.009449752978980541, -1.005357265472412, -0.011065781116485596, -0.18488657474517822, -2.622600959512056e-06, -0.0009215399040840566, -1.7046782886609435e-05, -0.0012300790986046195, -0.0003483880718704313, -0.00032240914879366755, -0.5507897138595581, -3.683499380713329e-05, -0.0028646644204854965, -0.024710848927497864, -0.0005895545473322272, -0.0014815079048275948, -0.09675084054470062, -0.0009900197619572282, -0.006976293865591288, -0.0013244913425296545, -0.027682071551680565, -1.2636104656849056e-05, -0.0005937243695370853, -3.576278118089249e-07, -0.00013183678674977273, -0.017431626096367836, -0.036782972514629364, -0.8789882063865662, -0.000608854868914932, -0.0013622299302369356, -0.012822206132113934, -0.00018535325943958014, -0.00433327304199338, -0.001177690108306706, -0.08967886120080948, -0.07176464796066284, -0.5537942051887512, -2.3841855067985307e-07, -0.00015496007108595222, -0.0002919009421020746, -1.8348603248596191, -0.0003588747640606016, -0.010519294999539852, -0.0006846229662187397, -9.059495641849935e-05, -6.794906312279636e-06, -1.168244216387393e-05, -0.00020847532141488045, -0.003827509470283985, -2.148866653442383, -0.0032071841415017843, -0.00563710555434227, -0.004203176125884056, -0.0011508992174640298, -0.0005184260080568492, -7.152555099310121e-07, -3.099436753473128e-06, -0.003153234953060746, -0.0019985719118267298, -0.016286421567201614, -0.0006266061100177467, -0.003635822329670191, -0.010315200313925743, -0.0002818902430590242, -0.015632351860404015, -0.014682339504361153, -0.08463534712791443, -0.3556743562221527, -0.10594908148050308, -0.00013779645087197423, -0.00045098623377270997, -0.005702299997210503, -0.028572671115398407, -0.0010632582707330585, -0.0037639739457517862, -0.04592249169945717, -0.0017989181214943528, -0.2707868218421936, -0.040864527225494385, -0.008864455856382847, -0.013073326088488102, -0.03015059418976307, -0.001211386057548225, -0.4023579955101013, -0.023202352225780487, -1.330976963043213, -0.09133056551218033, -0.06847689300775528, -0.2142983227968216, -0.0008008848526515067, -0.6030610203742981, -0.0008266131044365466, -0.05221294239163399, 0.0, -2.0265558760002023e-06, -0.00039962888695299625, -1.9311717551317997e-05, -0.000774798565544188, -2.3841574147809297e-05, -0.0011884062550961971, -0.4301759600639343, -0.0016505202511325479, -9.274052717955783e-05, -0.0013868723763152957, -0.004004793241620064, -0.0025299943517893553, -0.06822138279676437, -0.029414670541882515, -0.00031835734262131155, -0.0017823775997385383, -0.022700218483805656, -0.00019107422849629074, -0.008537224493920803, -0.005561711732298136, -0.4093582034111023, -0.045045167207717896, -0.30690357089042664, -0.9771526455879211, -0.0004698126285802573, -6.270212179515511e-05, -0.3202875256538391, -0.02158285118639469, -0.08548738807439804, -0.02553902380168438, -0.005372372455894947, -0.0013428251259028912, -0.019703146070241928, -0.0014058002270758152, -0.3253321945667267, -0.000491021724883467, -0.01137450709939003, -1.311301275563892e-06, -4.768370445162873e-07, -5.960462772236497e-07, -3.814689989667386e-06, -0.00036638224264606833, -0.000527123745996505, -1.0182243585586548, -8.332382276421413e-05, -0.3324870467185974, -0.005850926972925663, -1.8326698541641235, -0.0007914748275652528, -0.1308598816394806, -0.42287957668304443, -0.0008046964649111032, -0.02950182929635048, -0.008037840016186237, -0.578596830368042, -0.18031607568264008, -0.913813591003418, -1.1373391151428223, -0.2652508020401001, -1.4157778024673462, -0.00018320789968129247, -0.045548394322395325, -0.0005155664402991533, -0.022688448429107666, -0.0007780147134326398, -0.008325986564159393, -1.6325874328613281, -0.004618690814822912, -0.004076267592608929, -0.00040260792593471706, -0.001016457681544125, -0.0011264891363680363, -0.00018106251081917435, -7.116541382856667e-05, -0.006428515538573265, -0.02286638133227825, -0.004774242173880339, -0.04584244266152382, -0.006703981198370457, -2.992108420585282e-05, -0.0032576846424490213, -0.0005980133428238332, -0.017765913158655167, -0.013076032511889935, -0.0005466635921038687, -0.30758821964263916, -0.0004323977918829769, -0.002887367969378829, -0.00044705410255119205, -0.003434831975027919, -0.00022313489171210676, -4.410734163684538e-06, -0.0002225389762315899, -3.075552376685664e-05, -0.001689555705524981, -0.0005548844928853214, -0.0002610342635307461, -0.3797420263290405, -2.091174364089966, -0.003975822124630213, -0.0002619877050165087, -0.027793150395154953, -0.01051327958703041, -0.000757645582780242, -0.0004042761866003275, -0.00029583368450403214, -0.060902830213308334, -0.0006136203301139176, -0.3973366618156433, -0.009881153702735901, -0.001210195361636579, -0.001949435449205339, -0.04639841988682747, -0.019719041883945465, -1.9126198291778564], "finish_reason": "stop"}], "metrics": {"energy": 944.931017562866, "energy_per_token": 4.1083957285342, "time": 25.886454, "time_per_token": 0.1125498}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n    non_zero_counts = (df != 0).astype(int).sum()\n\n    ax = non_zero_counts.plot.bar()\n    ax.set_title(\"Non-Zero Value Counts\")\n    ax.set_xlabel(\"Columns\")\n    ax.set_ylabel(\"Count\")\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " (", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " (", "df", " ", "!", "=", " ", "0", ")", ".", "ast", "ype", "(", "int", ")", ".", "sum", "()", "\n", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Non", "-", "Zero", " Value", " Count", "s", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "(", "\"", "Columns", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "ylabel", "(", "\"", "Count", "\"", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -0.5996933579444885, -0.00010668662434909493, -0.009900275617837906, -0.044290702790021896, -0.00199083867482841, -0.004376120399683714, -1.2815444469451904, -0.013285093940794468, -0.002671128138899803, -0.04051348939538002, -2.777537883957848e-05, -0.0012643685331568122, -5.960462772236497e-07, -8.642300235806033e-05, -0.04977951943874359, -0.002870251191779971, -0.018666787073016167, -0.0031922117341309786, -0.0012451999355107546, -1.1920928244535389e-07, -0.0001357701694360003, -0.0022840620949864388, -0.060797277837991714, -0.1838771551847458, -0.6347336173057556, -0.05940350890159607, -0.028688747435808182, -0.02463315799832344, -0.03150947391986847, -0.0007017772295512259, -0.9672976732254028, -0.005283440463244915, -0.260013222694397, -1.0728830375228426e-06, -6.6756979322235566e-06, -0.0005326044629327953, -4.434487345861271e-05, -0.00042632073746062815, -8.427741704508662e-05, -2.39977765083313, -1.4305104514278355e-06, -0.0010793342953547835, -0.04636746644973755, -1.2516897186287679e-05, -0.0018566290382295847, -0.0055185589008033276, -0.20286992192268372, -0.09814239293336868, -1.2968487739562988, -0.001437822007574141, -0.7749648094177246, -0.0009198724874295294, -0.010624629445374012, -9.536738616588991e-07, 0.0, -5.960462772236497e-07, -5.125986263010418e-06, -0.0009083197801373899, -0.0007425173535011709, -0.5243358612060547, -0.0002965487365145236, -0.15234073996543884, -0.004668408073484898, -0.031157562509179115, -0.09128279983997345, -0.00040987672400660813, -0.02066965587437153, -0.003428179072216153, -0.05907802656292915, -2.2834999561309814, -0.010187413543462753, -0.004260273650288582, -0.000888191512785852, -0.0014260371681302786, -0.0022082962095737457, -0.00016830935783218592, -0.00016807096835691482, -0.0023764721117913723, -0.01563047431409359, -0.003600069787353277, -0.7270148396492004, -0.12994986772537231, -0.0011073178611695766, -0.004640286788344383, -0.003271111287176609, -0.13387632369995117, -0.05425797402858734, -0.0008386432309634984, -0.5873205065727234, -0.0006283930852077901, -0.0012169820256531239, -0.0007518087513744831, -0.008476469665765762, -0.0029374093282967806, -2.5033637939486653e-05, -0.0009870424401015043, -3.397406908334233e-05, -0.0018446111353114247, -0.0005031750188209116, -0.00037520044133998454, -0.2984844446182251, -0.5405232906341553, -0.00014482879487331957, -0.00020680672605521977, -1.328720211982727, -1.2355585098266602, -0.0112172681838274, -0.001987031428143382, -0.0026358168106526136, -0.044914789497852325, -0.024108584970235825, -1.548710584640503], "finish_reason": "stop"}], "metrics": {"energy": 491.5272702789307, "energy_per_token": 3.932218162231446, "time": 14.351603, "time_per_token": 0.11481282400000001}}
{"outputs": [{"text": "# Create the DataFrame and generate random integer values\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.apply(lambda x: np.count_nonzero(x))\n\n    # Create the bar plot\n    ax = non_zero_counts.plot(kind='bar', title='Non-Zero Value Counts')\n\n    return df, ax", "tokens": ["#", " Create", " the", " Data", "Frame", " and", " generate", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "count", "_", "non", "zero", "(", "x", "))", "\n", "\n", "    ", "#", " Create", " the", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "'", ",", " title", "='", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -2.6112935543060303, -0.20702029764652252, -0.0017215682892128825, -3.232517719268799, -2.789797306060791, -0.08688332885503769, -0.26390230655670166, -0.02239019051194191, -0.4839934706687927, -0.0021785590797662735, -0.025387251749634743, -0.0018850667402148247, -0.0012717501958832145, -4.0531076592742465e-06, -0.0004094000905752182, -0.022293198853731155, -0.06301615387201309, -9.179073458653875e-06, -0.0009289240115322173, -1.2159273865108844e-05, -0.0007725353352725506, -0.0006733057671226561, -0.002046516165137291, -0.7089042663574219, -4.541770613286644e-05, -0.0046892911195755005, -0.0398072674870491, -0.0017387047410011292, -0.006679706275463104, -0.2843872308731079, -0.0002711643755901605, -0.0070275510661304, -0.0009105826611630619, -0.03531675785779953, -1.156323378381785e-05, -0.0008008848526515067, -8.344646857949556e-07, -8.511180931236595e-05, -0.005619917064905167, -0.001327705685980618, -0.030585531145334244, -0.001650758320465684, -0.0008749709231778979, -4.768370445162873e-07, -0.00010513706365600228, -0.0033534502144902945, -0.009837714955210686, -0.11943661421537399, -0.0010089550632983446, -0.010800477117300034, -0.11699032783508301, -1.5706661939620972, -0.00017450717859901488, -0.003512880764901638, -0.007832055911421776, -0.056412190198898315, -0.002228278899565339, -0.0036208562087267637, -0.10166086256504059, -0.00030763185350224376, -0.17954374849796295, -0.026112323626875877, -0.006470799446105957, -0.009079123847186565, -0.015598316676914692, -0.0005548844928853214, -0.31016209721565247, -0.019713548943400383, -1.615121603012085, -0.06118432804942131, -0.048335883766412735, -0.21629950404167175, -0.0003909300430677831, -1.6960575580596924, -4.0531076592742465e-06, -0.013627473264932632, -3.576278118089249e-07, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.00042441420373506844, -0.006948473863303661, -0.04055584594607353, -0.04026767984032631, -0.02123093046247959, -0.0005933669744990766, -0.0029343189671635628, -0.3656426966190338, -0.7640420198440552, -0.07940211147069931, -0.001302585587836802, -0.08484234660863876, -0.0002411313180346042, -0.22424215078353882, -0.0003979606262873858, -0.01539408229291439, -5.960462772236497e-07, 0.0, -3.576278118089249e-07, -2.264974000354414e-06, -0.0008311392739415169, -0.0005478549865074456, -0.3422359526157379, -0.004051453899592161, -0.007345809601247311, -3.58813522325363e-05, -1.7076747417449951, -2.8609820219571702e-05, -0.47810831665992737, -0.01757723093032837, -0.003699603257700801, -0.00019870213873218745, -0.0006463822210207582, -0.005468528252094984, -0.00011717586312443018, -5.1973900554003194e-05, -0.2593117654323578, -0.004033644683659077, -0.20181937515735626, -0.0007309625507332385, -0.18506896495819092, -0.009793920442461967, -0.0008438840159215033, -0.0009777533123269677, -0.036070771515369415, -0.0233705285936594, -1.6867153644561768], "finish_reason": "stop"}], "metrics": {"energy": 444.99173419570945, "energy_per_token": 3.47649792340398, "time": 10.521444, "time_per_token": 0.08219878125}}
{"outputs": [{"text": "# Generate a random DataFrame with specified number of rows and columns\n    df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot using matplotlib\n    ax = non_zero_counts.plot.bar()\n\n    # Set the plot title\n    ax.set_title('Non-Zero Value Counts')\n\n    # Set axis labels\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Count')\n\n    return df, ax", "tokens": ["#", " Generate", " a", " random", " Data", "Frame", " with", " specified", " number", " of", " rows", " and", " columns", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", " using", " matplotlib", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "\n", "    ", "#", " Set", " the", " plot", " title", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "#", " Set", " axis", " labels", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -1.165391206741333, -1.4354397058486938, -0.43924078345298767, -0.00047398300375789404, -0.3347734212875366, -1.2944215536117554, -0.8350865244865417, -0.0002859421947505325, -0.003910040017217398, -0.21906352043151855, -0.07642339169979095, -0.09468578547239304, -0.0016365956980735064, -0.06683257967233658, -0.002752089872956276, -0.0014098476385697722, -4.6491513785440475e-06, -0.0015695883193984628, -0.029662584885954857, -0.037404295057058334, -3.313963316031732e-05, -0.0007407305529341102, -1.1205610462639015e-05, -0.0010833829874172807, -0.0004897110629826784, -0.0008606782066635787, -2.0104727745056152, -0.006454217713326216, -0.0035827276296913624, -8.225102646974847e-05, -0.008515949361026287, -5.900685573578812e-05, -0.017323842272162437, -0.0007721779984422028, -0.004907349124550819, -0.004929294344037771, -0.0006852186052128673, -0.005772112403064966, -0.0008364992681890726, -0.025828445330262184, -2.1219027985353023e-05, -0.0010788579238578677, -7.152555099310121e-07, -3.075552376685664e-05, -0.0397987887263298, -0.002121818484738469, -0.037345040589571, -0.0018629353726282716, -0.002271930454298854, -2.109982233378105e-05, -0.0001248043408850208, -0.0015636371681466699, -0.008205984719097614, -0.2092878222465515, -0.0009681067313067615, -0.009358703158795834, -0.22864805161952972, -1.2668839693069458, -0.000285584683297202, -0.004475458059459925, -0.019303908571600914, -0.03166528418660164, -0.0020468730945140123, -0.00283447140827775, -0.14949218928813934, -0.00024029705673456192, -0.2698577344417572, -0.05692121759057045, -0.007016305346041918, -0.015494327060878277, -0.025209998711943626, -0.0008100565755739808, -0.36656299233436584, -0.019690055400133133, -0.5889727473258972, 0.0, -0.001902795396745205, -0.007691884879022837, -0.00032205163734033704, -3.480850500636734e-05, -0.001963474787771702, -0.07502824813127518, -0.0001938155182870105, -0.0003295593778602779, -0.004305260721594095, -0.0034973190631717443, -0.06929409503936768, -0.02499760314822197, -0.0005651307292282581, -0.0034083391074091196, -0.28401416540145874, -0.3349461257457733, -0.06738013029098511, -0.0024926564656198025, -2.1641690731048584, -0.42668381333351135, -0.0718483030796051, -0.0005548844928853214, -0.5859264135360718, -0.0004993622424080968, -0.01998526230454445, -8.344646857949556e-07, 0.0, -3.576278118089249e-07, -1.1920928244535389e-07, -0.00028046013903804123, -0.00016604475968051702, -0.9494389295578003, -6.186770770000294e-05, -0.27387532591819763, -0.0013454442378133535, -1.2282416820526123, -0.0005078217945992947, -0.04050570726394653, -0.3505692780017853, -1.1435291767120361, -0.7863509058952332, -0.014134535565972328, -0.4739632308483124, -0.00010358751023886725, -0.08497090637683868, -0.00041333239641971886, -0.011473269201815128, -0.0007167869480326772, -0.002389316214248538, -0.18893270194530487, -0.0024125061463564634, -0.0005544078885577619, -0.001444369088858366, -0.0024406902957707644, -0.00012587709352374077, -0.00025722055579535663, -0.010284051299095154, -0.0007566926069557667, -0.03282128646969795, -0.00051771110156551, -0.7726380228996277, -1.7400599718093872, -3.1052963733673096, -0.0029685499612241983, -0.14382997155189514, -8.296622399939224e-05, -0.006843343377113342, -5.07818695041351e-05, -0.00022718709078617394, -0.0013147291028872132, -0.005779460538178682, -0.004706969950348139, -0.5913154482841492, -0.0018423503497615457, -0.00023767507809679955, -0.0007794441189616919, -0.00030751267331652343, -9.894321920000948e-06, -0.0001045410826918669, -2.0265373677830212e-05, -0.0031065321527421474, -0.000957150012254715, -0.32897916436195374, -0.22459551692008972, -0.00040165462996810675, -0.01296154223382473, -0.0004963834653608501, -0.6993368864059448, -0.011740044690668583, -0.0010085977846756577, -0.002237199805676937, -0.049215320497751236, -0.028649361804127693, -1.2515569925308228], "finish_reason": "stop"}], "metrics": {"energy": 696.1154094133382, "energy_per_token": 4.047182612868245, "time": 19.364656, "time_per_token": 0.11258520930232559}}
{"outputs": [{"text": "# Create the DataFrame with random integer values\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts)\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Non-Zero Values Count')\n    ax.set_title('Non-Zero Value Counts')\n    plt.tight_layout()\n\n    return df, ax", "tokens": ["#", " Create", " the", " Data", "Frame", " with", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Values", " Count", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "plt", ".", "tight", "_", "layout", "()", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -2.6112935543060303, -0.20702029764652252, -0.0017215682892128825, -0.603432297706604, -0.06118253245949745, -0.11100748181343079, -0.009095425717532635, -0.34941595792770386, -0.0019433676498010755, -0.08030174672603607, -0.0026782616041600704, -0.0012766314903274179, -6.437280717364047e-06, -0.0007522851810790598, -0.05378001183271408, -0.03907153755426407, -1.3828182090946939e-05, -0.0009197533945553005, -1.0132738680113107e-05, -0.0009129646932706237, -0.00037245964631438255, -0.002301307860761881, -1.658050298690796, -0.0759199932217598, -0.0029000865761190653, -0.0035606338642537594, -0.0033144797198474407, -0.010314492508769035, -0.0015070997178554535, -0.022744150832295418, -1.5616295058862306e-05, -0.0006780709372833371, -7.152555099310121e-07, -7.402622577501461e-05, -0.0401684008538723, -0.002099335426464677, -0.028348704800009727, -0.0014511541230604053, -0.0007994554471224546, -2.3841855067985307e-07, -2.1576648578047752e-05, -0.0012181727215647697, -0.007819044403731823, -0.1284870207309723, -0.0009394046501256526, -0.0068182433024048805, -0.15511801838874817, -0.1968907117843628, -0.0868937075138092, -8.153582894010469e-05, -0.0002506657037883997, -0.004065582528710365, -0.01803593337535858, -0.000580499938223511, -0.0023022594396024942, -0.04084484279155731, -0.00029774048016406596, -0.16813185811042786, -0.04324813559651375, -0.006892121396958828, -0.010303756222128868, -0.017400814220309258, -0.000562271336093545, -0.4867953956127167, -0.03778156638145447, -0.4768207371234894, 0.0, -0.003430792596191168, -0.004939021542668343, -0.0005819296347908676, -2.634490556374658e-05, -0.003358677960932255, -0.1019485592842102, -0.00029952809563837945, -0.00026651646476238966, -0.005440903827548027, -0.004091820679605007, -0.08372458815574646, -0.01680620387196541, -0.0005082983989268541, -0.003614442190155387, -0.22580771148204803, -1.19612455368042, -0.06113801524043083, -0.0009899006690829992, -0.5127018094062805, -0.00022849810193292797, -1.2424365282058716, -0.006697587203234434, -0.0003805628512054682, -0.0002026352594839409, -0.00012015574611723423, -3.576272320060525e-06, -4.0649541915627196e-05, -0.000125281119835563, -0.07869506627321243, -0.001975610153749585, -0.0061365049332380295, -0.047064751386642456, -0.0012617491884157062, -0.01074611023068428, -0.002782760886475444, -0.07220803201198578, -3.576278118089249e-07, -0.0001554368354845792, -0.00022623363474849612, -0.0013016331940889359, -8.344646857949556e-07, 0.0, 0.0, -5.006777428206988e-06, -0.1139054074883461, -0.0021975908894091845, -0.10815056413412094, -0.008228449150919914, -2.6464111215318553e-05, -0.00527632562443614, -0.0011343479854986072, -1.2527817487716675, -0.03509487211704254, -0.3075620234012604, -0.0012642494402825832, -0.001105293515138328, -0.00025686301523819566, -0.00010263393050990999, -2.3841830625315197e-06, -4.911301948595792e-05, -3.4570634852570947e-06, -0.0024154791608452797, -0.0016201715916395187, -0.2262444794178009, -0.0008694920688867569, -0.25624707341194153, -1.234168529510498, -1.9431629180908203, -0.006793142296373844, -0.00019476900342851877, -0.01582280918955803, -0.007409709505736828, -2.074220174108632e-05, -0.021109316498041153, -2.5987286790041253e-05, -0.00269906735047698, -0.0016778928693383932, -0.0013830630341544747, -0.00011860620725201443, -0.0002747396647464484, -0.0011391110019758344, -5.090107151772827e-05, -9.786603914108127e-05, -0.0011865011183544993, -0.0015309053706005216, -0.9931033849716187, -0.7368342876434326, -7.414542778860778e-05, -1.5991724729537964, -2.2172682292875834e-05, -2.3841855067985307e-07, -0.0025121578946709633, -0.009816586039960384, -0.05668560415506363, -0.0006225554971024394, -0.14970917999744415, -0.006447111256420612, -0.0008890252211131155, -0.0011562574654817581, -0.04750273749232292, -0.039905209094285965, -1.0010040998458862], "finish_reason": "stop"}], "metrics": {"energy": 792.3598595790863, "energy_per_token": 4.633683389351382, "time": 23.209526, "time_per_token": 0.13572822222222222}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    df = df[df.astype(bool).sum(axis=0) > 0].fillna(0).astype(int)\n\n    counts = df.astype(bool).sum(axis=0)\n    counts = counts.sort_values(ascending=False)\n\n    ax = counts.plot.barh()\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Column')\n    ax.set_xlabel('Count')\n\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "df", " =", " df", "[", "df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", " >", " ", "0", "]", ".", "fill", "na", "(", "0", ")", ".", "ast", "ype", "(", "int", ")", "\n", "\n", "    ", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "counts", " =", " counts", ".", "sort", "_", "values", "(", "asc", "ending", "=", "False", ")", "\n", "\n", "    ", "ax", " =", " counts", ".", "plot", ".", "bar", "h", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Column", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Count", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -0.5996933579444885, -0.00010668662434909493, -0.009900275617837906, -0.044290702790021896, -0.00199083867482841, -0.004376120399683714, -0.3277900815010071, -0.00037508129025809467, -0.010174787603318691, -0.0011873346520587802, -0.046745918691158295, -2.539125671319198e-05, -0.0013730631908401847, -7.152555099310121e-07, -7.56950321374461e-05, -0.011669116094708443, -0.0027692087460309267, -0.028009474277496338, -0.004251608159393072, -0.0018391376361250877, -2.3841855067985307e-07, -0.00010322991875000298, -0.004671611823141575, -0.05130476877093315, -0.2328607589006424, -3.1202375888824463, -1.2985737323760986, -0.16240213811397552, -2.466845989227295, -0.8231731653213501, -0.8277292847633362, -1.2199645042419434, -8.344646857949556e-07, -0.0008821171941235662, -0.0035569514147937298, -0.0006881968001835048, -2.4318398573086597e-05, -0.05993785336613655, -0.08366713672876358, -0.0008688965463079512, -0.0011694743297994137, -0.19670574367046356, -0.03629370778799057, -0.3128603398799896, -0.0135170454159379, -0.041629813611507416, -0.005172916688024998, -2.185938835144043, -1.7114092111587524, -1.7881377516459906e-06, -0.05579422786831856, -0.14003139734268188, -0.0025810045190155506, -2.7073686122894287, -0.06637821346521378, -2.3841855067985307e-07, -0.04266664385795593, -0.01372624933719635, -0.0010946955299004912, -0.09403124451637268, -1.3708524703979492, -0.002149891806766391, -1.9594167470932007, -0.008873789571225643, -0.2121029794216156, -0.02605355717241764, -0.14020289480686188, -2.3841855067985307e-07, -0.00038258862332440913, -0.02901628240942955, -0.0002592465898487717, -0.00018261195509694517, -0.008564763702452183, -0.030968153849244118, -0.00038389943074434996, -0.0006129055400379002, -0.056827519088983536, -0.01865461841225624, -0.09021437168121338, -0.6548086404800415, -2.4515340328216553, -0.513789176940918, -0.08620604872703552, -0.7217784523963928, -0.88775634765625, -4.470248313737102e-05, -0.0027456702664494514, -0.18561211228370667, -0.00548666762188077, -0.00011359999916749075, -0.0010986251290887594, -0.06989287585020065, -0.0049209906719625, -0.03960734233260155, -0.21411125361919403, -0.0012831796193495393, -0.5613646507263184, -0.002018677769228816, -0.020253164693713188, -0.003843659767881036, -0.0006319671520031989, -0.6197084188461304, -0.0002401778765488416, -1.7686493396759033, -0.6448920369148254, -0.005605810321867466, -0.07554645836353302, -0.0876292735338211, -0.0011628062929958105, -0.04978768527507782, -0.010190363973379135, -0.06926072388887405, -0.12746791541576385, -0.0038228780031204224, -0.0012935374397784472, -0.002187480451539159, -0.006956050638109446, -0.00030894274823367596, -0.0004943578969687223, -0.014765270985662937, -0.001293656532652676, -0.47819676995277405, -0.15224696695804596, -0.0033169749658554792, -0.04250510782003403, -0.0031572754960507154, -1.492829442024231, -0.011522175744175911, -0.6696812510490417, -0.262569785118103, -0.00035315475543029606, -0.05152365192770958, -0.009749533608555794, -0.00017176583060063422, -0.005919899791479111, -2.4914430468925275e-05, -0.017332278192043304, -0.016556840389966965, -0.29082465171813965, -0.05474620684981346, -7.390703103737906e-05, -0.41324418783187866, -0.001135062426328659, -0.08538220822811127, -0.033929284662008286, -0.003133864840492606, -0.0019728736951947212, -0.033272817730903625, -0.025806022807955742, -0.9252142906188965], "finish_reason": "stop"}], "metrics": {"energy": 582.9107501449586, "energy_per_token": 3.5761395714414634, "time": 14.088073, "time_per_token": 0.08642989570552147}}
{"outputs": [{"text": "# Generate a Pandas DataFrame with random integer values\n    df = pd.DataFrame({column: np.random.randint(10, size=rows) for column in COLUMNS})\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    fig, ax = plt.subplots()\n    ax.bar(non_zero_counts.index, non_zero_counts.values)\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Non-Zero Counts')\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax", "tokens": ["#", " Generate", " a", " Pand", "as", " Data", "Frame", " with", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "column", ":", " np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=", "rows", ")", " for", " column", " in", " COL", "UM", "NS", "})", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "non", "_", "zero", "_", "counts", ".", "index", ",", " non", "_", "zero", "_", "counts", ".", "values", ")", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -1.165391206741333, -1.518182396888733, -1.1920928244535389e-07, -0.0003426679759286344, -0.0002215855201939121, -0.008512639440596104, -0.05265580490231514, -0.04070533439517021, -0.0016767027555033565, -2.3066160678863525, -0.0016678959364071488, -0.07972192764282227, -0.002581717912107706, -0.002183198230341077, -5.8412379075889476e-06, -0.0010665925219655037, -2.936718463897705, -1.0183874368667603, -0.02922319620847702, -0.04554178938269615, -2.3364747903542593e-05, -0.0002586507180240005, -3.933898824470816e-06, -0.0041859629563987255, -0.00027211778797209263, -0.001105888863094151, -1.2746837139129639, -0.028686314821243286, -0.0075403363443911076, -0.0012471048394218087, -0.04616577550768852, -0.003365687560290098, -0.01035165786743164, -0.013906724750995636, -0.0005728749092668295, -0.00013422065239865333, -0.005705381743609905, -1.7881377516459906e-06, -0.00033682872890494764, -0.02212321013212204, -0.0065063307993113995, -0.12448898702859879, -0.0009632238652557135, -0.007662310265004635, -0.12623901665210724, -0.15973293781280518, -0.10726558417081833, -0.00010466027742950246, -0.00022432672267314047, -0.003793782787397504, -0.011844897642731667, -0.0004848258395213634, -0.0025883764028549194, -0.04953473061323166, -0.00033408781746402383, -0.18655438721179962, -0.03392720967531204, -0.00465808529406786, -0.009610339999198914, -0.02584122307598591, -0.0006789048202335835, -0.6833012700080872, -0.038543131202459335, -0.6216866970062256, 0.0, -0.009056088514626026, -0.005685468204319477, -0.0003358753747306764, -3.2543604902457446e-05, -0.002050560899078846, -0.13438358902931213, -0.0002996472467202693, -0.00027807659353129566, -0.010617552325129509, -0.005012208595871925, -0.06891484558582306, -0.01784859038889408, -0.000573351513594389, -0.004175872541964054, -0.18334388732910156, -0.2984146475791931, -0.08065063506364822, -0.0014393694000318646, -0.4752047657966614, -0.0002574589161667973, -1.555477261543274, -0.008750899694859982, -0.000685576000250876, -0.00023731753753963858, -0.00014673586701974273, -3.814689989667386e-06, -2.825220326485578e-05, -0.00018785618885885924, -0.07068347930908203, -0.0026336766313761473, -0.008753618225455284, -0.04087276756763458, -0.0015350712928920984, -0.015339847654104233, -0.002369931200519204, -2.836993455886841, -8.344646857949556e-07, 0.0, -2.3841855067985307e-07, -9.536738616588991e-07, -0.00017474555352237076, -0.08284316956996918, -0.0037225254345685244, -0.00041333239641971886, -4.768370445162873e-07, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.23678340017795563, -0.0002460177056491375, -0.08230073004961014, -0.0035544568672776222, -0.1637745499610901, -0.016998665407299995, -3.755022044060752e-05, -0.007412075996398926, -0.0012226970866322517, -2.049105167388916, -0.05518896505236626, -0.39877501130104065, -0.0014756753807887435, -0.000927256653085351, -0.0002836778585333377, -0.00012158608296886086, -4.0531076592742465e-06, -8.487341256113723e-05, -1.07287787614041e-05, -0.002888319082558155, -0.0014552014181390405, -0.33986976742744446, -0.0011981697753071785, -0.2632450759410858, -2.059272527694702, -0.7012183666229248, -0.00030155404238030314, -0.0001716466504149139, -0.009976169094443321, -0.00652279332280159, -2.109982233378105e-05, -0.019009318202733994, -2.1457441107486375e-05, -0.0018030828796327114, -0.002242314163595438, -0.0013179434463381767, -0.00010191874753218144, -0.00023147765023168176, -0.001513408264145255, -4.732496745418757e-05, -8.594620157964528e-05, -0.0013086573453620076, -0.0019482456846162677, -0.36495187878608704, -0.0006243425305001438, -0.2929832637310028, -0.007152546662837267, -0.0009276139317080379, -0.0013602061662822962, -0.04627823457121849, -0.03731747716665268, -1.0850492715835571], "finish_reason": "stop"}], "metrics": {"energy": 597.6371982460022, "energy_per_token": 3.578665857760492, "time": 14.693503, "time_per_token": 0.08798504790419162}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    non_zero_counts = df.astype(bool).sum(axis=0)\n    ax = non_zero_counts.plot.bar()\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Count')\n    ax.set_xticklabels(COLUMNS, rotation=0)\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "COL", "UM", "NS", ",", " rotation", "=", "0", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -1.8521461486816406, -0.008395970799028873, -0.0031427775975316763, -9.798523387871683e-05, -0.00945105217397213, -5.149708886165172e-05, -0.017926927655935287, -0.0006422125734388828, -0.003008009400218725, -0.005398813169449568, -0.0014523444697260857, -0.011582392267882824, -0.0009957361035048962, -0.04026802256703377, -2.95634672511369e-05, -0.0019921474158763885, -1.0728830375228426e-06, -6.437094270950183e-05, -0.04816753789782524, -0.0024953915271908045, -0.031147046014666557, -0.0022130541037768126, -0.0009436921682208776, -4.768370445162873e-07, -2.372236667724792e-05, -0.0026793316937983036, -0.035448506474494934, -0.24813970923423767, -0.796811580657959, -0.07363712787628174, -0.021879250183701515, -0.03169277310371399, -0.05773215740919113, -0.0013954435708001256, -0.651660144329071, -0.03860369324684143, -0.6871170401573181, -1.1920928244535389e-07, -0.0012484145117923617, -0.0033321829978376627, -0.0005006728461012244, -5.936446541454643e-05, -0.005453708581626415, -0.04855485260486603, -0.00048101297579705715, -0.00033146608620882034, -0.009013322181999683, -0.006621799431741238, -0.1547573059797287, -0.41107404232025146, -0.1253184825181961, -0.0009833505610004067, -0.007542702369391918, -1.5497195136049413e-06, 0.0, -4.768370445162873e-07, -3.3378546504536644e-06, -0.0011204162146896124, -0.0006719953380525112, -0.4115977883338928, -0.00011717586312443018, -0.22261707484722137, -0.0043073976412415504, -0.006656615063548088, -0.12132104486227036, -0.0008148210472427309, -0.027312109246850014, -0.0034322182182222605, -0.15085473656654358, -0.1253911554813385, -0.0018775707576423883, -0.00047505536349490285, -0.002131572924554348, -0.003999687731266022, -0.00015770144818816334, -0.00027259447961114347, -0.012317421846091747, -0.001927543431520462, -0.013355555012822151, -0.740123450756073, -0.0009204680100083351, -0.005549856927245855, -0.0023564924485981464, -2.1615328788757324, -0.006690955720841885, -0.11151314526796341, -0.06219157204031944, -0.00045122456504032016, -0.04547879844903946, -1.6265313625335693, -0.003699128283187747, -0.07154049724340439, -0.001872811233624816, -1.9176764488220215, -0.014430800452828407, -7.152555099310121e-07, -0.01093620341271162, -0.23562653362751007, -5.8412379075889476e-06, -3.957670196541585e-05, -0.4026813507080078, -0.0021921193692833185, -0.015963135287165642, -1.6838092803955078, -0.006599299143999815, -0.01545218750834465, -0.04756855592131615, -0.14225701987743378, -0.015714969485998154, -0.0011175584513694048, -0.0011849532602354884, -0.048486486077308655, -0.03022219054400921, -1.2956820726394653], "finish_reason": "stop"}], "metrics": {"energy": 522.54609783268, "energy_per_token": 4.114536203406929, "time": 14.374634, "time_per_token": 0.11318609448818898}}
{"outputs": [{"text": "# Generate a Pandas DataFrame with random integer values for each column\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n    # Count the non-zero values in each column\n    counts = df.astype(bool).sum(axis=0)\n    # Create a bar plot using matplotlib\n    ax = counts.plot.bar()\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "tokens": ["#", " Generate", " a", " Pand", "as", " Data", "Frame", " with", " random", " integer", " values", " for", " each", " column", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " (", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "#", " Create", " a", " bar", " plot", " using", " matplotlib", "\n", "    ", "ax", " =", " counts", ".", "plot", ".", "bar", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -1.165391206741333, -1.518182396888733, -1.1920928244535389e-07, -0.0003426679759286344, -0.0002215855201939121, -0.008512639440596104, -0.05265580490231514, -0.04070533439517021, -0.0016767027555033565, -2.0664312839508057, -0.6910513043403625, -0.08618757128715515, -0.14760717749595642, -0.0015109085943549871, -0.08062479645013809, -0.004353094846010208, -0.0033475097734481096, -3.099436753473128e-06, -0.0024447336327284575, -0.11468473076820374, -0.08406385034322739, -1.1920858014491387e-05, -0.0009173714206553996, -1.0847986231965479e-05, -0.0016749175265431404, -0.0004776767164003104, -0.002031407319009304, -0.7697082757949829, -4.565611743601039e-05, -0.005892643239349127, -0.05442529916763306, -0.0024786246940493584, -0.007131005171686411, -1.1329013109207153, -0.009348073974251747, -0.0023313979618251324, -0.02056128717958927, -1.9907753085135482e-05, -0.0009846605826169252, -1.1920922133867862e-06, -6.711257447022945e-05, -0.029402747750282288, -0.0021293126046657562, -0.018205566331744194, -0.0017309696413576603, -0.0006661579827778041, -5.960462772236497e-07, -3.576272320060525e-06, -0.0013440155889838934, -0.00959829706698656, -2.2019684314727783, -0.19135960936546326, -0.1151275560259819, -0.06740119308233261, -0.2655405104160309, -0.00016246906307060272, -0.00021550717065110803, -0.008480489253997803, -0.016894469037652016, -0.0004693360242526978, -0.0024743436370044947, -0.12214472889900208, -0.0004001055203843862, -1.9860944747924805, -0.006926809437572956, -0.28375524282455444, -0.02653856948018074, -0.5034443736076355, -1.1920928244535389e-07, -0.004208873957395554, -0.0035729873925447464, -0.0006610354175791144, -4.9828242481453344e-05, -0.0024966993369162083, -0.06895066797733307, -0.0004520586517173797, -0.0004080893413629383, -0.0032174033112823963, -0.005262807011604309, -0.053340472280979156, -0.08745147287845612, -0.014715583063662052, -0.17494921386241913, -0.17980171740055084, -0.09456530213356018, -0.0019422968616709113, -2.1879990100860596, -0.4273407459259033, -0.11035169661045074, -0.0011141052236780524, -0.336102694272995, -0.0005947966128587723, -0.020819343626499176, -0.0008671099785715342, -0.00020287363440729678, -0.7160483002662659, -7.068861305015162e-05, -0.22244903445243835, -0.0017076447838917375, -0.0031771203503012657, -0.6366620063781738, -0.00036971885128878057, -0.02239147201180458, -0.0020913651678711176, -0.14823384582996368, -0.09944697469472885, -0.002373380120843649, -0.0010569468140602112, -0.0019142176024615765, -0.0025794587563723326, -0.00017712931730784476, -0.000418575422372669, -0.005725057329982519, -0.005335021764039993, -0.016766346991062164, -0.9208592176437378, -0.011762548238039017, -0.0008395960903726518, -0.0015017433324828744, -0.05233331769704819, -0.038376227021217346, -1.3965709209442139], "finish_reason": "stop"}], "metrics": {"energy": 483.56549765777584, "energy_per_token": 3.8997217553046437, "time": 13.944174, "time_per_token": 0.11245301612903226}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    non_zero_counts = df.astype(bool).sum(axis=0).tolist()\n\n    ax = plt.gca()\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Count')\n    ax.set_xlabel('Column')\n\n    ax.bar(COLUMNS, non_zero_counts)\n\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", ".", "tol", "ist", "()", "\n", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Column", "')", "\n", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -1.2529373168945312, -0.11571162939071655, -0.0037214565090835094, -0.009354215115308762, -0.007585412822663784, -0.017142342403531075, -0.0019320646533742547, -0.04787065088748932, -1.966933996300213e-05, -0.00135318236425519, -5.960462772236497e-07, -4.95898348162882e-05, -0.04511331021785736, -0.004273924510926008, -0.014894235879182816, -0.002999927382916212, -0.0011729273246601224, -4.768370445162873e-07, -0.00016342257731594145, -0.0022895331494510174, -0.041338637471199036, -1.5883761644363403, -0.003102016169577837, -1.5176715850830078, -0.09754709899425507, -0.02959338016808033, -0.03134335204958916, -0.051524557173252106, -0.0019595485646277666, -0.5942613482475281, -0.04569315165281296, -0.5711824297904968, -1.1920928244535389e-07, -0.003041762625798583, -0.008560745045542717, -0.0007709868368692696, -6.55629628454335e-05, -0.0042719063349068165, -0.028317533433437347, -0.0005535738891921937, -0.000504723924677819, -0.01018115971237421, -0.00600759033113718, -2.3979945182800293, -1.5282950401306152, -1.1920928244535389e-07, -0.0006429274217225611, -0.03330394998192787, -0.26887211203575134, -0.0012902038870379329, -1.1195210218429565, -0.001995121594518423, -0.15070228278636932, -1.6093124941107817e-05, -2.180683135986328, -3.9934315282152966e-05, -0.00015352977789007127, -0.05475343018770218, -0.09748449176549911, -0.3125620484352112, -0.0022185256239026785, -1.9980182647705078, -0.008662031963467598, -0.06546004861593246, -0.11290828138589859, -0.004393923562020063, -0.0016986002447083592, -0.0038608787581324577, -0.010556570254266262, -0.00029380773776210845, -0.000327652640407905, -0.02298486977815628, -0.0025348695926368237, -0.08026576787233353, -0.10516893118619919, -0.0011659021256491542, -0.544221043586731, -0.000705589191056788, -1.4617962837219238, -0.015737853944301605, -0.2766096591949463, -0.06633984297513962, -0.00025328766787424684, -0.11490516364574432, -0.04405448958277702, -0.001116724917665124, -0.23647336661815643, -0.00013410145766101778, -0.28901374340057373, -0.0034777179826050997, -0.3715309500694275, -0.11538984626531601, -0.0002602000313345343, -1.8480452299118042, -0.0006344689172692597, -0.7431943416595459, -0.0016125545371323824, -0.22720196843147278, -0.007582928519695997, -0.05967745557427406, -2.3841855067985307e-07, -8.821448318485636e-06, -0.001990600721910596, -0.007895687595009804, -1.5497195136049413e-06, 0.0, -5.960462772236497e-07, -3.099436753473128e-06, -0.07080709934234619, -0.0028985412791371346, -0.45826977491378784, -0.0019658540841192007, -0.153573676943779, -0.03894324600696564, -0.0016016048612073064, -0.0015718498034402728, -0.053631559014320374, -0.03771073743700981, -1.332797646522522], "finish_reason": "stop"}], "metrics": {"energy": 470.74363254547103, "energy_per_token": 3.5662396404959926, "time": 11.556578, "time_per_token": 0.08754983333333333}}
{"outputs": [{"text": "# Create a DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create a bar plot\n    ax = non_zero_counts.plot(kind='bar')\n\n    # Add a title and labels to the plot\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Non-Zero Count')\n\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "\n", "    ", "#", " Add", " a", " title", " and", " labels", " to", " the", " plot", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Count", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -0.39562204480171204, -0.000860201776959002, -0.002605617046356201, -0.0004021312633994967, -0.0001501924270996824, -0.0024233281146734953, -0.7798736095428467, -0.001912789884954691, -0.06358873099088669, -0.0026416426990181208, -0.0013297295663505793, -4.172316494077677e-06, -0.0007513322634622455, -0.03982296213507652, -0.027250975370407104, -1.0251946150674485e-05, -0.00041547726141288877, -1.3351351299206726e-05, -0.000996093382127583, -0.00021753329201601446, -0.0008031480247154832, -1.4903589487075806, -0.08773891627788544, -0.0015256681945174932, -0.0036677727475762367, -0.0027813343331217766, -0.010365697555243969, -0.0012265071272850037, -0.05014251172542572, -1.6093124941107817e-05, -0.0007253637886606157, -8.344646857949556e-07, -9.405170567333698e-05, -0.02945796214044094, -0.0023359174374490976, -0.02113744616508484, -0.001465438399463892, -0.0007325111655518413, 0.0, -8.344646857949556e-07, -0.0012291265884414315, -0.007262378465384245, -0.08531259000301361, -0.0010153858456760645, -0.011317813768982887, -0.11753992736339569, -0.16142940521240234, -0.12473725527524948, -5.638440416078083e-05, -0.00018892886873800308, -0.004874726291745901, -0.005694832187145948, -0.00030620177858509123, -0.0023028540890663862, -0.0363946370780468, -0.00023958197562023997, -0.1888476312160492, -0.026190364733338356, -0.006260901223868132, -0.008148993365466595, -0.021177945658564568, -0.00046921687317080796, -0.42578843235969543, -0.03048551455140114, -0.3416147828102112, 0.0, -0.0038545848801732063, -0.007048976607620716, -0.0007086864789016545, -3.075552376685664e-05, -0.002835303544998169, -0.08907414227724075, -0.00017951308109331876, -0.00027569307712838054, -0.006029748357832432, -0.0028840398881584406, -0.058521296828985214, -0.01971939206123352, -0.0006308949086815119, -0.0051741027273237705, -0.22335362434387207, -0.33211201429367065, -0.045133136212825775, -0.0009815642843022943, -0.4437446594238281, -0.00029476112104021013, -0.618728756904602, -0.0003923600015696138, -0.008583320304751396, -5.960462772236497e-07, 0.0, -3.576278118089249e-07, 0.0, -0.0002575780963525176, -0.00012134769349358976, -0.42464879155158997, -0.0030599460005760193, -0.009517651982605457, -3.2543604902457446e-05, -0.1730366200208664, -0.0012261499650776386, -1.3074754476547241, -0.0004295380203984678, -0.04765380546450615, -1.1738851070404053, -1.6392333507537842, -0.023498505353927612, -1.0366356372833252, -0.42464014887809753, -0.3446689248085022, -0.0013862771447747946, -0.030756399035453796, -0.0012228161795064807, -0.00015960850578267127, -0.044246796518564224, -0.0002165798214264214, -0.008219818584620953, -0.002220666501671076, -0.011197581887245178, -0.039510633796453476, -0.004732835106551647, -0.0005754960584454238, -0.0013917532050982118, -0.004354518838226795, -0.000144709600135684, -0.00010501786891836673, -0.011528068222105503, -0.0009551253751851618, -0.013489759527146816, -0.0038856971077620983, -2.884823152271565e-05, -0.0018308082362636924, -0.0003178806509822607, -0.020927684381604195, -0.0016527815023437142, -0.7957572340965271, -0.0006899837171658874, -6.151010165922344e-05, -0.0024154791608452797, -0.00020418466010596603, -4.172316494077677e-06, -0.00013469743134919554, -9.059865078597795e-06, -0.0020507988519966602, -0.0014479401288554072, -1.8785713911056519, -0.0015320956008508801, -0.032245587557554245, -0.9832401275634766, -0.5458248853683472, -0.00011062010162277147, -0.057058483362197876, -0.00047755756531842053, -0.4738685190677643, -0.011010957881808281, -0.0010849310783669353, -0.002765761222690344, -0.03500083088874817, -0.028378253802657127, -1.1605615615844727], "finish_reason": "stop"}], "metrics": {"energy": 656.8174159221655, "energy_per_token": 3.8864935853382576, "time": 17.93234, "time_per_token": 0.10610852071005918}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.gt(0).sum()\n\n    # Create the bar plot\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts, color='green')\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Count')\n    ax.set_xticklabels(COLUMNS, rotation=45)\n    ax.grid(True)\n    ax.set_yticklabels(ax.get_yticks().tolist())\n\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "gt", "(", "0", ")", ".", "sum", "()", "\n", "\n", "    ", "#", " Create", " the", " bar", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ",", " color", "='", "green", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "COL", "UM", "NS", ",", " rotation", "=", "4", "5", ")", "\n", "    ", "ax", ".", "grid", "(", "True", ")", "\n", "    ", "ax", ".", "set", "_", "yt", "ick", "labels", "(", "ax", ".", "get", "_", "yt", "icks", "()", ".", "tol", "ist", "())", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -0.5996933579444885, -0.00010668662434909493, -0.009900275617837906, -0.044290702790021896, -0.00199083867482841, -0.004376120399683714, -0.3277900815010071, -0.00037508129025809467, -0.010174787603318691, -0.0011873346520587802, -0.046745918691158295, -2.539125671319198e-05, -0.0013730631908401847, -7.152555099310121e-07, -7.56950321374461e-05, -0.011669116094708443, -0.0027692087460309267, -0.028009474277496338, -0.004251608159393072, -0.0018391376361250877, -2.3841855067985307e-07, -0.00010322991875000298, -0.004671611823141575, -0.05130476877093315, -1.5750811100006104, -0.0035118116065859795, -0.8111838698387146, -0.3358137905597687, -0.5677041411399841, -0.00039986721822060645, -0.005871667061001062, -0.019635936245322227, -0.08206959068775177, -0.002215313958004117, -0.0040345946326851845, -0.07459019869565964, -0.0004881620698142797, -0.23642820119857788, -0.03446808084845543, -0.0069485921412706375, -0.007681474555283785, -0.014269692823290825, -0.0005707303644157946, -0.42701810598373413, -0.022052664309740067, -3.1238932609558105, -5.245195097813848e-06, -0.0004220310365781188, -0.00036376056959852576, -4.279521817807108e-05, -0.0075441221706569195, -0.27440422773361206, -0.143587127327919, -0.04623088613152504, -0.0006298227235674858, -0.059689585119485855, -0.2577594220638275, -2.263348340988159, -0.1228792816400528, -0.0018726922571659088, -0.05274819955229759, -0.0004234609368722886, -1.6305210590362549, -0.007428168319165707, -0.0010193157941102982, -0.0003275334893260151, -0.0002090712368953973, -2.861018856492592e-06, -4.088794958079234e-05, -0.00024911639047786593, -0.09767219424247742, -0.0024556738790124655, -0.010472817346453667, -0.048723358660936356, -0.001517693279311061, -0.01326674222946167, -0.004413388203829527, -0.15383639931678772, -1.1920928244535389e-07, -5.566918844124302e-05, -0.0003359945258125663, -0.0008778294431976974, -5.960462772236497e-07, 0.0, -2.3841855067985307e-07, -2.861018856492592e-06, -2.20072340965271, -0.26399973034858704, -0.10475914180278778, -2.216331720352173, -0.20788103342056274, -0.021432576701045036, -0.11824249476194382, -0.029728198423981667, -4.255681051290594e-05, -0.014686803333461285, -0.0042986138723790646, -0.6216980218887329, -0.03786581754684448, -0.0027659989427775145, -0.00033885458833537996, -0.0014991246862336993, -0.0023057085927575827, -0.00012742661056108773, -7.343022298300639e-05, -0.02015993930399418, -0.0035955561324954033, -0.13497871160507202, -0.04703393206000328, -6.007967749610543e-05, -0.0024153604172170162, -0.0009533389820717275, -0.23658280074596405, -0.0023259271401911974, -0.20273375511169434, -0.0003736513026524335, -0.00011562632425921038, -0.003908021375536919, -0.0006037319544702768, -1.680836794548668e-05, -0.0001389883691444993, -2.1457441107486375e-05, -0.0036836881190538406, -0.0014925779541954398, -0.3263944089412689, -0.07784923911094666, -0.0003228858404327184, -0.987911581993103, -0.5299512147903442, -0.0011256556026637554, -0.6162962317466736, -0.006767211947590113, -0.2139071226119995, -0.2931143641471863, -4.172316494077677e-06, -0.001292108790948987, -0.020401163026690483, -2.7418097943154862e-06, -9.417489309271332e-06, -0.32077956199645996, -0.007222376763820648, -0.005189401097595692, -0.10013389587402344, -0.0012571059633046389, -0.22114484012126923, -0.11218255758285522, -1.2997047901153564, -0.9060660004615784, -0.0015642322832718492, -1.999770998954773, -0.10651121288537979, -0.12212732434272766, -0.4017932415008545, -0.004839255474507809, -1.836166262626648, -1.2656736373901367, -0.00761451618745923, -1.7838232517242432, -0.016560710966587067, -2.8109536170959473, -1.3713328838348389, -5.924526340095326e-05, -0.27771270275115967, -0.5182235240936279, -6.69933797325939e-05, -0.00017152745567727834, -1.6689286894688848e-06, -7.533743337262422e-05, -0.0011439929949119687, -0.06129712983965874, -0.8026915192604065, -0.31106606125831604, 0.0, -0.46500733494758606, -0.1665896326303482, -0.3240971267223358, -0.0009277330245822668, -0.15939289331436157, -0.017409484833478928, -0.0012018608395010233, -0.0031459862366318703, -0.06826581060886383, -0.021778594702482224, -1.3692669868469238], "finish_reason": "stop"}], "metrics": {"energy": 762.8059367208483, "energy_per_token": 3.8721113539129357, "time": 21.045187, "time_per_token": 0.10682836040609137}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    non_zero_counts = df.astype(bool).sum(axis=0)\n    ax = non_zero_counts.plot(kind='bar')\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -0.5996933579444885, -0.00010668662434909493, -0.009900275617837906, -0.044290702790021896, -0.00199083867482841, -0.004376120399683714, -0.3277900815010071, -0.00037508129025809467, -0.010174787603318691, -0.0011873346520587802, -0.046745918691158295, -2.539125671319198e-05, -0.0013730631908401847, -7.152555099310121e-07, -7.56950321374461e-05, -0.011669116094708443, -0.0027692087460309267, -0.028009474277496338, -0.004251608159393072, -0.0018391376361250877, -2.3841855067985307e-07, -0.00010322991875000298, -0.004671611823141575, -0.05130476877093315, -0.2328607589006424, -0.5962794423103333, -0.06679801642894745, -0.026147743687033653, -0.03346455842256546, -0.034913115203380585, -0.0009074860718101263, -0.6457311511039734, -0.03862043842673302, -0.7049554586410522, 0.0, -0.0018349728779867291, -0.004466794431209564, -0.0006032554083503783, -3.1709168979432434e-05, -0.004688579123467207, -0.022620389237999916, -0.000341476290486753, -0.00031728477915748954, -0.01071898452937603, -0.0056007131934165955, -0.114570252597332, -0.44496503472328186, -0.099809430539608, -0.0008412636234425008, -0.006284475326538086, -9.536738616588991e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -2.9802276912960224e-06, -0.0010937429033219814, -0.0004042761866003275, -0.8582366704940796, -0.0035878352355211973, -0.005671599879860878, -3.528532761265524e-05, -0.1927213817834854, -0.0026207170449197292, -0.007298946846276522, -0.14712047576904297, -0.0006683023530058563, -0.018874214962124825, -0.0033276681788265705, -0.16211438179016113, -0.029830604791641235, -0.0021058782003819942, -0.00043704494601115584, -0.0016504012746736407, -0.003916808404028416, -0.00014351768186315894, -0.00037293630884960294, -0.008158925920724869, -0.002206393051892519, -0.014467108063399792, -0.6849762797355652, -0.014134418219327927, -0.0008847374701872468, -0.0014034194173291326, -0.05753769725561142, -0.028990227729082108, -1.30615234375], "finish_reason": "stop"}], "metrics": {"energy": 420.7537065715787, "energy_per_token": 4.293405169097742, "time": 12.856497, "time_per_token": 0.13118874489795918}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(low=0, high=10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    ax = non_zero_counts.plot.bar()\n    ax.set_title('Non-Zero Value Counts')\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -1.8521461486816406, -0.008395970799028873, -0.0031427775975316763, -9.798523387871683e-05, -0.00945105217397213, -5.149708886165172e-05, -0.017926927655935287, -0.0006422125734388828, -0.003008009400218725, -0.005398813169449568, -0.0014523444697260857, -0.011582392267882824, -0.0009957361035048962, -0.04026802256703377, -2.95634672511369e-05, -0.0019921474158763885, -1.0728830375228426e-06, -6.437094270950183e-05, -0.04816753789782524, -0.0024953915271908045, -0.031147046014666557, -0.0022130541037768126, -0.0009436921682208776, -4.768370445162873e-07, -2.372236667724792e-05, -0.0026793316937983036, -0.035448506474494934, -0.24813970923423767, -0.796811580657959, -0.07363712787628174, -0.021879250183701515, -0.03169277310371399, -0.05773215740919113, -0.0013954435708001256, -0.651660144329071, -0.03860369324684143, -0.6871170401573181, -1.1920928244535389e-07, -0.0012484145117923617, -0.0033321829978376627, -0.0005006728461012244, -5.936446541454643e-05, -0.005453708581626415, -0.04855485260486603, -0.00048101297579705715, -0.00033146608620882034, -0.009013322181999683, -0.006621799431741238, -0.1547573059797287, -1.0887798070907593, -0.001522811478935182, -0.7021283507347107, -0.001081715920008719, -0.010202399455010891, -1.0728830375228426e-06, 0.0, -3.576278118089249e-07, -3.576272320060525e-06, -0.0013444918440654874, -0.0008055302896536887, -0.6263741254806519, -0.00013350549852475524, -0.2271346151828766, -0.005652159918099642, -0.025851214304566383, -0.09378977864980698, -0.00048756631440483034, -0.029219375923275948, -0.004793817643076181, -0.13229817152023315, -0.11337243765592575, -0.0016799159348011017, -0.00035720644518733025, -0.0017396567855030298, -0.0037443782202899456, -0.00017331528943032026, -0.0002029928145930171, -0.010956602171063423, -0.002198899397626519, -0.34340178966522217, -2.8220555782318115, -0.01290917582809925, -0.0010886224918067455, -0.001971564954146743, -0.04131175950169563, -0.02360469289124012, -1.4940378665924072], "finish_reason": "stop"}], "metrics": {"energy": 369.92875632762906, "energy_per_token": 3.6992875632762905, "time": 8.829587, "time_per_token": 0.08829587}}
{"outputs": [{"text": "np.random.seed(123)\n    df = pd.DataFrame(np.random.randint(0, 10, (rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = (df != 0).sum(axis=0)\n\n    # Create a bar plot using matplotlib\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts)\n    ax.set_title('Non-Zero Value Counts')\n\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "1", "2", "3", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " (", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " (", "df", " ", "!", "=", " ", "0", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", " using", " matplotlib", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-3.5125625133514404, -0.0047648693434894085, -0.0003091811086051166, -0.00041368984966538846, -0.007104846648871899, -0.047376204282045364, -1.5307719707489014, -0.935451090335846, -0.09511879831552505, -0.6061949133872986, -0.4074210822582245, -0.13026271760463715, -0.2499721646308899, -0.0051564318127930164, -0.002319623716175556, -6.198863957251888e-06, -0.0004325169720686972, -0.07180814445018768, -0.030849337577819824, -1.168244216387393e-05, -0.002681352896615863, -4.60137271147687e-05, -0.0037882011383771896, -0.0005504761938937008, -0.002570065436884761, -0.5678722262382507, -0.0001479277852922678, -0.009908773936331272, -0.08321914821863174, -0.0028468340169638395, -0.010013818740844727, -1.1657211780548096, -0.011568369343876839, -0.00425255810841918, -0.048902057111263275, -3.158996332786046e-05, -0.0013175864005461335, -1.7881377516459906e-06, -9.131014667218551e-05, -0.04610840603709221, -0.0030849031172692776, -0.021365832537412643, -0.003973922226577997, -0.0014649622607976198, -1.1920928244535389e-07, -0.00021228920377325267, -0.0025242867413908243, -0.02853536605834961, -1.3007264137268066, -0.0023977598175406456, -0.825930655002594, -0.3634265661239624, -0.6429368257522583, -0.0005559567362070084, -0.007094903849065304, -0.028670096769928932, -0.0947730764746666, -0.005017902236431837, -0.005219641607254744, -0.09049960970878601, -0.0004801789182238281, -0.25282254815101624, -0.024206794798374176, -0.00789982732385397, -0.010441555641591549, -0.015689857304096222, -0.0006059955921955407, -1.3648386001586914, -0.001885304693132639, -0.1701580137014389, -2.3841855067985307e-07, -2.3841830625315197e-06, -0.00031132620642893016, -3.099393507000059e-05, -0.00021395778458099812, -2.109982233378105e-05, -0.09263025969266891, -0.28151604533195496, -0.0001387499796692282, -0.0006014683749526739, -0.0011519708205014467, -0.0009531007381156087, -0.1615583300590515, -0.05191487446427345, -0.0005071069463156164, -0.08670058101415634, -0.21580342948436737, -1.0189701318740845, -0.04122905433177948, -0.0014541300479322672, -3.074887990951538, -0.3738521635532379, -0.06571481376886368, -0.0008136299438774586, -0.6350856423377991, -0.007059985306113958, -0.0005874100024811924, -0.0003082277253270149, -0.00011634149996098131, -6.6756979322235566e-06, -3.266281055402942e-05, -0.00023552982020191848, -0.12007473409175873, -0.0021214615553617477, -0.018750092014670372, -0.01710636541247368, -0.0009479796281084418, -0.019782038405537605, -0.004116039723157883, -0.020551476627588272, -3.576278118089249e-07, -3.302042750874534e-05, -0.00032062159152701497, -0.001122916815802455, -5.960462772236497e-07, 0.0, 0.0, -2.7418097943154862e-06, -0.10135164856910706, -0.0016108882846310735, -0.04474746063351631, -0.004310008604079485, -4.637133679352701e-05, -0.0064184474758803844, -0.0014969820622354746, -0.3659674823284149, -0.08324076235294342, -0.003571680746972561, -0.00021395778458099812, -0.001158162602223456, -0.0026320121251046658, -0.00013290952483657748, -7.974783511599526e-05, -0.0061073582619428635, -0.0038467473350465298, -1.19802725315094, -0.0006864098832011223, -0.12506446242332458, -0.009885993786156178, -0.0009982370538637042, -0.0033047369215637445, -0.05705150216817856, -0.019352901726961136, -1.0113341808319092], "finish_reason": "stop"}], "metrics": {"energy": 519.878602368355, "energy_per_token": 3.6102680720024654, "time": 12.390305, "time_per_token": 0.08604378472222222}}
{"outputs": [{"text": "# Create a DataFrame with random integer values between 0 and 9\n    df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count the non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create the bar plot\n    fig, ax = plt.subplots()\n    ax.bar(COLUMNS, non_zero_counts)\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Columns')\n    ax.set_ylabel('Non-Zero Values Count')\n\n    # Show the plot\n    plt.show()\n\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", " between", " ", "0", " and", " ", "9", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " the", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " the", " bar", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", ".", "bar", "(", "COL", "UM", "NS", ",", " non", "_", "zero", "_", "counts", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Columns", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Non", "-", "Zero", " Values", " Count", "')", "\n", "\n", "    ", "#", " Show", " the", " plot", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -0.39562204480171204, -0.000860201776959002, -0.002605617046356201, -0.0004021312633994967, -0.0001501924270996824, -0.0024233281146734953, -0.7798736095428467, -0.001912789884954691, -0.06358873099088669, -0.0026416426990181208, -0.0013297295663505793, -4.172316494077677e-06, -0.0007513322634622455, -0.03982296213507652, -0.027250975370407104, -1.0251946150674485e-05, -0.00041547726141288877, -1.3351351299206726e-05, -0.000996093382127583, -0.00021753329201601446, -0.0008031480247154832, -0.5468050241470337, -2.5629668016335927e-05, -0.0035816587042063475, -0.020338673144578934, -0.0011372057488188148, -0.002276450162753463, -0.31421688199043274, -0.00021741411183029413, -0.006576324347406626, -0.0007425173535011709, -0.05549440532922745, -1.549708758830093e-05, -0.0008036244544200599, -8.344646857949556e-07, -0.00018666432879399508, -0.008898720145225525, -0.0009492897079326212, -0.04039878025650978, -0.0018233117880299687, -0.0009291622554883361, -1.7881377516459906e-06, -2.264974000354414e-06, -0.0020485385321080685, -0.006093732547014952, -0.08705610036849976, -0.0009191579301841557, -0.008072606287896633, -0.07436800748109818, -0.12981387972831726, -0.13375180959701538, -5.6265202147187665e-05, -6.937739817658439e-05, -0.00351965194568038, -0.005981876514852047, -0.0002454218047205359, -0.0017551269847899675, -0.0318775400519371, -0.00021634146105498075, -0.11644710600376129, -0.02296401560306549, -0.0045853471383452415, -0.007343324366956949, -0.012974251061677933, -0.00042989550274796784, -0.48503953218460083, -0.029719866812229156, -0.5486413836479187, 0.0, -0.0022787100169807673, -0.0029834068845957518, -0.00028046013903804123, -3.373566141817719e-05, -0.002591111231595278, -0.06329649686813354, -0.00014006110723130405, -0.00022015532886143774, -0.004654050804674625, -0.0023093954659998417, -0.05928251892328262, -0.014767619781196117, -0.0005278385942801833, -0.003931175917387009, -0.23878979682922363, -1.4169931411743164, -0.04100252687931061, -0.0010389650706201792, -0.06374745815992355, -0.00025781645672395825, -1.4868956804275513, -0.006385992281138897, -0.00028725311858579516, -0.00020776021119672805, -0.00010322991875000298, -3.814689989667386e-06, -4.23184028477408e-05, -0.00014911970356479287, -0.06544464081525803, -0.0018811402842402458, -0.006223583593964577, -0.039589814841747284, -0.0010186012368649244, -0.014497891068458557, -0.003310321131721139, -0.06863606721162796, -1.1920928244535389e-07, -2.8371408916427754e-05, -0.00026294111739844084, -0.0015335239004343748, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.11941936612129211, -0.0014486543368548155, -0.09554512798786163, -0.0070151216350495815, -2.658331868587993e-05, -0.005378300789743662, -0.0013585394481197, -0.5640403628349304, -0.0726618617773056, -0.004143700934946537, -0.00013743886665906757, -0.000846147071570158, -0.0019105292158201337, -8.49926145747304e-05, -5.328513361746445e-05, -0.00626338878646493, -0.004782665520906448, -0.3353748023509979, -0.0864885002374649, -0.00010168035078095272, -0.0014444880653172731, -0.0004391897819004953, -0.19157636165618896, -0.0021670209243893623, -0.13400894403457642, -0.00021431533969007432, -7.545663538621739e-05, -0.002928732428699732, -0.0005067494930699468, -5.245195097813848e-06, -5.1020273531321436e-05, -8.821448318485636e-06, -0.0015350712928920984, -0.0017675028648227453, -1.4094903469085693, -0.0007500219508074224, -0.014156632125377655, -1.5849170684814453, -1.7021269798278809, -0.006029037758708, -0.00039081089198589325, -0.4009150564670563, -0.0005553610390052199, -1.6804912090301514, -3.129727840423584, -0.02750035561621189, -0.07783082127571106, -0.4026854336261749, -0.0041909487918019295, -0.1916712522506714, -0.0001070442158379592, -0.03754943236708641, -0.008842595852911472, -0.002774082822725177, -0.021625898778438568, -0.002395500196143985, -0.27512750029563904, -0.008245592936873436, -0.0030677898321300745, -0.0024492524098604918, -0.06886087357997894, -0.023079346865415573, -1.019496202468872], "finish_reason": "stop"}], "metrics": {"energy": 723.9899061679845, "energy_per_token": 3.9134589522593757, "time": 19.767023, "time_per_token": 0.10684877297297296}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(0, 10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n    non_zero_counts = df.astype(bool).sum(axis=0)\n    ax = non_zero_counts.plot.bar()\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_xlabel('Column')\n    ax.set_ylabel('Count')\n    plt.show()\n    return df, ax\n\n\"\"\"\nTo use the code, simply call the task_func function with the desired number of rows.\nThe function will generate a DataFrame with random integer values, count the non-zero values in each column,\ncreate a bar plot, and display it using Matplotlib.\nThe function also returns a tuple containing both the generated DataFrame and the matplotlib Axes object.\nHere's an example of how to use the code:\n\"\"\"\n# Example usage\ndf, ax = task_func(10)  # Replace 10 with the desired number of rows", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", ".", "bar", "()", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "xlabel", "('", "Column", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "\"", "\"", "\"", "\n", "To", " use", " the", " code", ",", " simply", " call", " the", " task", "_", "func", " function", " with", " the", " desired", " number", " of", " rows", ".", "\n", "The", " function", " will", " generate", " a", " Data", "Frame", " with", " random", " integer", " values", ",", " count", " the", " non", "-", "zero", " values", " in", " each", " column", ",", "\n", "create", " a", " bar", " plot", ",", " and", " display", " it", " using", " Mat", "plotlib", ".", "\n", "The", " function", " also", " returns", " a", " tuple", " containing", " both", " the", " generated", " Data", "Frame", " and", " the", " matplotlib", " Ax", "es", " object", ".", "\n", "Here", "'", "s", " an", " example", " of", " how", " to", " use", " the", " code", ":", "\n", "\"", "\"", "\"", "\n", "#", " Example", " usage", "\n", "df", ",", " ax", " =", " task", "_", "func", "(", "1", "0", ")", "  ", "#", " Replace", " ", "1", "0", " with", " the", " desired", " number", " of", " rows", "\n", "\n", "#"], "logprobs": [-1.269707441329956, -0.007259774953126907, -0.005636749789118767, -1.6569954823353328e-05, -0.0011068414896726608, -0.05390562489628792, -0.03235362097620964, -5.364403477869928e-06, -0.001412704586982727, -7.033323527139146e-06, -0.0024529388174414635, -0.0005477358354255557, -0.0022671727929264307, -0.5996933579444885, -0.00010668662434909493, -0.009900275617837906, -0.044290702790021896, -0.00199083867482841, -0.004376120399683714, -0.3277900815010071, -0.00037508129025809467, -0.010174787603318691, -0.0011873346520587802, -0.046745918691158295, -2.539125671319198e-05, -0.0013730631908401847, -7.152555099310121e-07, -7.56950321374461e-05, -0.011669116094708443, -0.0027692087460309267, -0.028009474277496338, -0.004251608159393072, -0.0018391376361250877, -2.3841855067985307e-07, -0.00010322991875000298, -0.004671611823141575, -0.05130476877093315, -0.2328607589006424, -0.5962794423103333, -0.06679801642894745, -0.026147743687033653, -0.03346455842256546, -0.034913115203380585, -0.0009074860718101263, -0.6457311511039734, -0.03862043842673302, -0.7049554586410522, 0.0, -0.0018349728779867291, -0.004466794431209564, -0.0006032554083503783, -3.1709168979432434e-05, -0.004688579123467207, -0.022620389237999916, -0.000341476290486753, -0.00031728477915748954, -0.01071898452937603, -0.0056007131934165955, -0.114570252597332, -0.44496503472328186, -0.099809430539608, -0.0008412636234425008, -0.006284475326538086, -9.536738616588991e-07, -1.1920928244535389e-07, -3.576278118089249e-07, -2.9802276912960224e-06, -0.0010937429033219814, -0.0004042761866003275, -0.5528625249862671, -0.00010990492592100054, -0.226478710770607, -0.0026821850333362818, -0.005881740245968103, -0.12425466626882553, -0.0006257721688598394, -0.020809654146432877, -0.003388023469597101, -0.12266166508197784, -0.11057371646165848, -0.001995121594518423, -0.0005066303419880569, -0.0017924923449754715, -0.004231309983879328, -0.0001501924270996824, -0.00030048147891648114, -0.009317957796156406, -0.0018410414922982454, -0.011676067486405373, -0.6457865238189697, -0.000756216119043529, -0.0029633203521370888, -0.0019194527994841337, -0.1140444353222847, -0.004767004866153002, -0.8030550479888916, -0.14972755312919617, -0.00020883286197204143, -0.0002926159941125661, -0.0033496483229100704, -1.3112935448589269e-05, -0.0008688965463079512, -1.5020257706055418e-05, -0.0019230222096666694, -0.002435338916257024, -0.3038853108882904, -0.13529914617538452, -0.00020621081057470292, -0.0262154471129179, -2.6464662551879883, -0.0001699779968475923, -0.7259059548377991, -0.007911772467195988, -0.009960943832993507, -0.04185253754258156, -0.018734414130449295, -0.020297788083553314, -0.0037352333310991526, -0.005673614796251059, -0.06392639875411987, -0.020410507917404175, -3.9463677406311035, -0.007441539317369461, -0.001932421582750976, -0.17861875891685486, -2.338392734527588, -2.20674991607666, -0.6790749430656433, -2.6598169803619385, -0.44573450088500977, -0.6096431612968445, -0.25328245759010315, -0.04287189245223999, -0.24041703343391418, -0.001791897346265614, -0.007145800162106752, -0.7852187752723694, -0.22329659759998322, -0.1504652053117752, -0.09343501925468445, -0.004118176642805338, -0.0024801704566925764, -0.0016129115829244256, -0.878778874874115, -0.45612335205078125, -0.19652388989925385, -0.10554851591587067, -0.1824687123298645, -0.4219192564487457, -0.04623635113239288, -0.16219162940979004, -0.0001280225842492655, -0.13899174332618713, -0.0973750501871109, -0.027187636122107506, -0.0008534126682206988, -0.41886255145072937, -0.08882711082696915, -0.006637431215494871, -0.034237366169691086, -7.390703103737906e-05, -0.00027414379292167723, -0.05467690899968147, -0.043037593364715576, -0.008650686591863632, -0.012395722791552544, -0.007587542291730642, -0.27169716358184814, -1.0542895793914795, -0.04653611406683922, -0.009062113240361214, -0.0008746135863475502, -0.5313887000083923, -0.20754709839820862, -1.5470664501190186, -0.6616102457046509, -0.34505605697631836, -2.7737643718719482, -0.00014327930693980306, -0.01952219381928444, -0.47862890362739563, -1.0101171731948853, -0.5151654481887817, -1.6340159177780151, -0.009123540483415127, -2.970111131668091, -0.057507988065481186, -0.026917871087789536, -1.1221423149108887, -0.0011139861308038235, -1.193697214126587, -0.0012335318606346846, -0.00010549465514486656, -0.009409012272953987, -0.009369567967951298, -0.5531662702560425, -0.024348625913262367, -1.2397689715726301e-05, -0.006898514460772276, -0.7176142334938049, -0.008753026835620403, -3.6278600692749023, -0.032618578523397446, -0.00019047829846385866, -0.007991128601133823, -0.001291037304326892, -0.36054739356040955, -0.21515531837940216, -1.7635467052459717, -0.1389506608247757, -0.8222538828849792, -0.2591146230697632, -0.16427960991859436, -0.004058340098708868, -0.5217012166976929, -6.270212179515511e-05, -0.00010239553375868127, -0.025362495332956314, -1.9926087856292725, -0.49497902393341064, -0.06213611736893654, -0.099134162068367, -0.5812287926673889, -0.005840616300702095, -0.016817692667245865, -0.0005718026659451425, -0.0002079985715681687, -6.794698856538162e-05, -0.0002002515539061278, -9.846202738117427e-05, -0.08736026287078857, -0.006308048963546753, -0.11660327762365341, -1.514054298400879, -4.207999518257566e-05, -3.195319652557373, -0.17126743495464325, -0.007182373199611902, -0.00020430385484360158, -0.00018702188390307128, -0.06052229180932045, -0.15650106966495514, -0.00047803416964598, -0.00012015574611723423, -0.0008336406317539513, -0.26819050312042236, -0.720522403717041, -0.5267511010169983], "finish_reason": "stop"}], "metrics": {"energy": 912.1010513353344, "energy_per_token": 3.677826819900542, "time": 24.63972, "time_per_token": 0.09935370967741936}}
{"outputs": [{"text": "# Generate random integer values for each column\n    data = {}\n    for column in COLUMNS:\n        data[column] = np.random.randint(low=0, high=10, size=rows)\n\n    # Create DataFrame with generated data\n    df = pd.DataFrame(data)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.astype(bool).sum(axis=0)\n\n    # Create bar plot\n    ax = non_zero_counts.plot(kind='bar', title='Non-Zero Value Counts')\n\n    return df, ax\n\n\"\"\"\nTo check whether a function or module meets the requirements defined in the docstring, you can write a script or a testing function that uses the `doctest` module from the Python standard library.\nHere's an example script that uses `doctest` to test the `task_func` function:\n\"\"\"\n\nimport doctest", "tokens": ["#", " Generate", " random", " integer", " values", " for", " each", " column", "\n", "    ", "data", " =", " {}", "\n", "    ", "for", " column", " in", " COL", "UM", "NS", ":", "\n", "        ", "data", "[", "column", "]", " =", " np", ".", "random", ".", "rand", "int", "(", "low", "=", "0", ",", " high", "=", "1", "0", ",", " size", "=", "rows", ")", "\n", "\n", "    ", "#", " Create", " Data", "Frame", " with", " generated", " data", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "ast", "ype", "(", "bool", ")", ".", "sum", "(", "axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " bar", " plot", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "'", ",", " title", "='", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "\"", "\"", "\"", "\n", "To", " check", " whether", " a", " function", " or", " module", " meets", " the", " requirements", " defined", " in", " the", " doc", "string", ",", " you", " can", " write", " a", " script", " or", " a", " testing", " function", " that", " uses", " the", " `", "do", "ct", "est", "`", " module", " from", " the", " Python", " standard", " library", ".", "\n", "Here", "'", "s", " an", " example", " script", " that", " uses", " `", "do", "ct", "est", "`", " to", " test", " the", " `", "task", "_", "func", "`", " function", ":", "\n", "\"", "\"", "\"", "\n", "\n", "import", " do", "ct", "est", "\n", "\n", "#"], "logprobs": [-0.5261066555976868, -1.3830904960632324, -0.520423173904419, -0.12847118079662323, -0.08235650509595871, -0.4632504880428314, -0.5136067271232605, -0.20879124104976654, -0.5511204600334167, -0.0016987192211672664, -0.6292352676391602, -0.011821100488305092, -2.810821533203125, -0.001207933179102838, -0.005161887500435114, -0.015591626986861229, -0.5624423623085022, -0.012068349868059158, -0.006220266688615084, -2.3841830625315197e-06, -0.00011836781777674332, -0.000834117061458528, -0.0008636558777652681, -0.002656385535374284, -0.07743360847234726, -0.0004094000905752182, -0.0008191090892069042, -0.0002739054325502366, -1.8358061424805783e-05, -0.04672396183013916, -2.145764938177308e-06, -0.0008764001540839672, -8.940656698541716e-06, -0.004712309222668409, -0.0005079409456811845, -0.0018519884906709194, -1.490478515625, -0.011088416911661625, -0.004847678355872631, -8.451581379631534e-05, -0.002183198230341077, -3.4689302992774174e-05, -0.014433972537517548, -0.0006513857515528798, -0.0032133632339537144, -0.0002445875434204936, -0.030847949907183647, -0.0020450884476304054, -0.02449055202305317, -0.05900127440690994, -0.31584733724594116, -0.0027882291469722986, -0.0076891640201210976, -0.012011578306555748, -0.7448671460151672, -0.0008883106056600809, -2.4118783473968506, -1.5238347053527832, -1.0091534852981567, -0.02942335233092308, -0.00018046658078674227, -0.005996332969516516, -0.0005803807871416211, -0.00011252723925281316, -3.814689989667386e-06, -3.957670196541585e-05, -0.003944356460124254, -0.0007619338575750589, -0.2554178535938263, -0.0008351890719495714, -0.013596074655652046, -0.0006927236099727452, -0.005810276139527559, -0.07220759242773056, -0.27486318349838257, -8.082063141046092e-05, -0.0013458014000207186, -0.009325044229626656, -0.04033317416906357, -0.0011937642702832818, -0.0016014858847483993, -0.028050508350133896, -0.0001911934232339263, -0.20769421756267548, -0.04405129328370094, -0.005359092261642218, -0.013075679540634155, -0.020545871928334236, -0.0005787128466181457, -0.2568807303905487, -0.029682721942663193, -0.4264485836029053, 0.0, -0.005789298098534346, -0.005055620335042477, -0.00014208737411536276, -3.361645576660521e-05, -0.001259844284504652, -0.06283828616142273, -0.0001867835089797154, -0.0002051381452474743, -0.01602320186793804, -0.001928495243191719, -0.06723524630069733, -0.018488572910428047, -0.0005620330339297652, -0.005251304246485233, -0.2591502368450165, -0.2540528178215027, -0.0006820021662861109, -0.3982177674770355, -0.0003541081096045673, -0.7482950687408447, -0.00037126801908016205, -0.009936275891959667, -7.152555099310121e-07, 0.0, -3.576278118089249e-07, -1.1920922133867862e-06, -0.00030191155383363366, -0.00019071667338721454, -0.47511720657348633, -0.009794275276362896, -0.010525193065404892, -3.71926071238704e-05, -1.7404910326004028, -4.541770613286644e-05, -0.6147880554199219, -0.025105491280555725, -0.004312501288950443, -0.00020013237372040749, -0.0005920564290136099, -0.005534682422876358, -0.00010084597306558862, -0.00010048838157672435, -0.25951603055000305, -0.002385629341006279, -0.17534393072128296, -0.0007630059262737632, -0.11086803674697876, -0.010166172869503498, -0.0006531727267429233, -0.0010151476599276066, -0.03329530358314514, -0.025978872552514076, -3.599302291870117, -0.006217068061232567, -0.000854961050208658, -0.1848253309726715, -2.938538074493408, -3.909938097000122, -3.352814197540283, -2.533111810684204, -1.0522000789642334, -3.1259231567382812, -2.540721893310547, -2.8400042057037354, -0.44814807176589966, -0.861954391002655, -3.30576229095459, -0.09112413972616196, -0.47535550594329834, -0.8539091944694519, -0.01136790681630373, -0.11139339208602905, -0.4309695065021515, -0.006627246737480164, -2.322796106338501, -0.30963876843452454, -1.7903138399124146, -2.2612717151641846, -1.9429841041564941, -2.4188928604125977, -0.6503577828407288, -0.3732627332210541, -3.162043809890747, -0.15043781697750092, -3.410928249359131, -0.3113318681716919, -0.0007244108128361404, -3.0636318115284666e-05, -0.009730054996907711, -0.12474840879440308, -2.9676566123962402, -0.3826397955417633, -0.3882794678211212, -0.039826054126024246, -4.124556289752945e-05, -0.051093652844429016, -1.1089181900024414, -2.0032124519348145, -0.039345379918813705, -2.7894584491150454e-05, -0.08818389475345612, -0.0003067976504098624, -1.7424474954605103, -0.21743039786815643, -1.3056652545928955, -0.6279357671737671, -0.021445877850055695, -9.417489309271332e-06, -0.00013851160474587232, -0.512140154838562, -0.008669713512063026, -0.331402450799942, -0.06724517047405243, -0.039540886878967285, -0.015435871668159962, -0.0011254174169152975, -0.0035449538845568895, -0.054930828511714935, -0.009234691970050335, -0.38653165102005005, -0.0013842533808201551, -0.29267629981040955, -0.00021991695393808186, -9.30981186684221e-05, -0.002081372309476137, -0.28380289673805237, -0.3592422306537628, -0.01767093315720558, -7.152555099310121e-07, -9.536738616588991e-07, -0.0016287406906485558, -0.2228362262248993, -0.8056356310844421], "finish_reason": "stop"}], "metrics": {"energy": 808.9970785770424, "energy_per_token": 3.5796330910488603, "time": 20.142239, "time_per_token": 0.08912495132743363}}
{"outputs": [{"text": "# Create a DataFrame with random integer values\n    df = pd.DataFrame(np.random.randint(10, size=(rows, len(COLUMNS))), columns=COLUMNS)\n\n    # Count non-zero values in each column\n    non_zero_counts = df.apply(lambda x: np.count_nonzero(x))\n\n    # Create a bar plot of non-zero value counts\n    ax = non_zero_counts.plot(kind='bar', color='green', edgecolor='black', linewidth=1)\n    ax.set_title('Non-Zero Value Counts')\n    ax.set_ylabel('Count')\n\n    # Return the DataFrame and the matplotlib Axes\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " integer", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "1", "0", ",", " size", "=(", "rows", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n", "\n", "    ", "#", " Count", " non", "-", "zero", " values", " in", " each", " column", "\n", "    ", "non", "_", "zero", "_", "counts", " =", " df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "count", "_", "non", "zero", "(", "x", "))", "\n", "\n", "    ", "#", " Create", " a", " bar", " plot", " of", " non", "-", "zero", " value", " counts", "\n", "    ", "ax", " =", " non", "_", "zero", "_", "counts", ".", "plot", "(", "kind", "='", "bar", "'", ",", " color", "='", "green", "'", ",", " edge", "color", "='", "black", "'", ",", " linewidth", "=", "1", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Non", "-", "Zero", " Value", " Count", "s", "')", "\n", "    ", "ax", ".", "set", "_", "ylabel", "('", "Count", "')", "\n", "\n", "    ", "#", " Return", " the", " Data", "Frame", " and", " the", " matplotlib", " Ax", "es", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.5261066555976868, -0.5945181846618652, -0.20956578850746155, -0.8476207852363586, -0.00135318236425519, -0.03984449803829193, -0.12175176292657852, -0.057300765067338943, -0.006047640927135944, -1.818042516708374, -0.0018149822717532516, -0.06772854924201965, -0.0023894349578768015, -0.0017199022695422173, -5.602820692729438e-06, -0.0006853376980870962, -0.03570723533630371, -0.03436373174190521, -1.3470558769768104e-05, -0.0005988473421894014, -1.1444026313256472e-05, -0.0011867393041029572, -0.0002603192115202546, -0.0018462770385667682, -1.6178292036056519, -0.05245888605713844, -0.0032587540335953236, -0.0033496483229100704, -0.002854085061699152, -0.011652030982077122, -0.0015093612018972635, -0.03144432231783867, -1.6093124941107817e-05, -0.0006852186052128673, -1.0728830375228426e-06, -7.271502545336261e-05, -0.05853062868118286, -0.002148464322090149, -0.028890401124954224, -0.0013069906271994114, -0.0006167178507894278, -1.1920928244535389e-07, -4.768360213347478e-06, -0.001212814822793007, -0.006267535034567118, -0.11760828644037247, -0.000892121868673712, -0.008723247796297073, -0.14115507900714874, -0.9529514908790588, -0.00030763185350224376, -0.0028695380315184593, -0.011102210730314255, -0.05086572468280792, -0.0023826563265174627, -0.003840097226202488, -0.04300219565629959, -0.00029583368450403214, -0.16595375537872314, -0.029727041721343994, -0.007092299871146679, -0.009302250109612942, -0.013912132009863853, -0.0003666205739136785, -0.4457128345966339, -0.02513548545539379, -2.034733295440674, -0.07813085615634918, -0.04490088298916817, -0.2485443353652954, -0.00034588552080094814, -1.8608039617538452, -8.4638240878121e-06, -0.015687862411141396, -5.960462772236497e-07, -5.960462772236497e-07, -2.3841855067985307e-07, -0.0004724340105894953, -0.010098672471940517, -0.05404443293809891, -0.025207441300153732, -0.01979442685842514, -0.0006199345225468278, -0.004822765477001667, -0.2991032004356384, -0.5467150211334229, -0.048277273774147034, -0.0011191064259037375, -2.9843947887420654, -0.4687216281890869, -0.00039057256071828306, -5.864924969500862e-05, -0.9809951782226562, -0.0013163958210498095, -0.036302559077739716, -0.0003446938644628972, -0.180764302611351, -0.00043704494601115584, -0.014450892806053162, -5.960462772236497e-07, -1.1920928244535389e-07, -2.3841855067985307e-07, -8.344646857949556e-07, -0.0005665604257956147, -0.0006039702566340566, -0.23984912037849426, -0.0048114946112036705, -0.007907751016318798, -2.4914430468925275e-05, -1.671614646911621, -2.5629668016335927e-05, -2.921185255050659, -0.06708532571792603, -1.6970677375793457, -1.566139578819275, -0.000582644424866885, -2.249035120010376, -8.22540732769994e-06, -0.0004451475979294628, -0.01134409848600626, -1.163831353187561, -9.929640509653836e-05, -0.2895401418209076, -0.0016683719586580992, -0.19657109677791595, -0.8953691720962524, -0.002018796745687723, -0.2237374186515808, -0.08588622510433197, -0.00014733182615600526, -0.030651547014713287, -0.01216197945177555, -0.23468095064163208, -0.02364812046289444, -0.0022170981392264366, -0.00029380773776210845, -0.0008829509024508297, -0.0016686100279912353, -0.00010263393050990999, -5.709961988031864e-05, -0.03495708853006363, -0.004540965426713228, -0.32902437448501587, -0.04563256353139877, -0.00021050144277978688, -0.0074976240284740925, -0.0007538337376900017, -1.6906709671020508, -0.00653676874935627, -0.10552512854337692, -0.04968038573861122, -0.0007515705074183643, -0.30465272068977356, -0.0003766304289456457, -1.891514778137207, -0.9491074085235596, -0.0990334302186966, -0.08505883067846298, -0.0006478118011727929, -0.01660948619246483, -1.3059775829315186, -1.0194966793060303, -0.007568494416773319, -5.8412379075889476e-06, -2.6282732486724854, -0.00019810620869975537, -0.003611947875469923, -0.012374882586300373, -0.0006420934805646539, -0.001604342251084745, -0.03197868540883064, -0.025954829528927803, -1.0624899864196777], "finish_reason": "stop"}], "metrics": {"energy": 630.0103648796077, "energy_per_token": 3.6416784097087147, "time": 15.141263, "time_per_token": 0.08752175144508671}}
