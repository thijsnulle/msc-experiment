{"outputs": [{"text": "start = datetime.now()\n\n    args = shlex.split(f\"Rscript {script_path}\")\n    proc = subprocess.run(args, capture_output=True)\n\n    # Decode the byte streams\n    stdout = proc.stdout.decode()\n    stderr = proc.stderr.decode()\n\n    end = datetime.now()\n\n    return {\n        'Start Time': str(start),\n        'End Time': str(end),\n        'Stdout': stdout,\n        'Stderr': stderr,\n    }", "tokens": ["start", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "f", "\"", "R", "script", " {", "script", "_", "path", "}\"", ")", "\n", "    ", "proc", " =", " sub", "process", ".", "run", "(", "args", ",", " capture", "_", "output", "=", "True", ")", "\n", "\n", "    ", "#", " Dec", "ode", " the", " byte", " streams", "\n", "    ", "stdout", " =", " proc", ".", "stdout", ".", "decode", "()", "\n", "    ", "stderr", " =", " proc", ".", "stderr", ".", "decode", "()", "\n", "\n", "    ", "end", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " str", "(", "start", ")", ",", "\n", "        ", "'", "End", " Time", "':", " str", "(", "end", ")", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", ",", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -2.231130599975586, -0.027102595195174217, -0.00013052565918769687, -0.045937176793813705, -0.0003400462737772614, -0.6480348706245422, -1.9137810468673706, -0.0011523280991241336, -3.5550477504730225, -0.030052155256271362, -0.3085115849971771, -2.0861407392658293e-05, -2.4199192921514623e-05, -0.000732868502382189, -0.15200410783290863, -0.14392679929733276, -0.4719690978527069, -0.1427101194858551, -0.05422127619385719, -0.13227969408035278, -0.007024355232715607, -4.0411134250462055e-05, -6.198863957251888e-06, -0.015496204607188702, -0.00807840097695589, -0.05563795566558838, -0.31953027844429016, -1.6398842334747314, -0.014777839183807373, -0.0009046276099979877, -4.6491513785440475e-06, -1.7881233361549675e-05, -0.6630383133888245, -0.0019752532243728638, -0.07529672980308533, -0.02666614204645157, -0.3917376697063446, -1.1920928244535389e-07, -8.34430247778073e-05, -0.016739267855882645, -0.0005519058904610574, -0.655937671661377, -0.009546580724418163, -0.314145565032959, -0.00027378625236451626, -3.1684763431549072, -1.5820629596710205, -0.02129710093140602, -0.832065999507904, -3.014846086502075, -3.206057071685791, -0.9789158701896667, -0.0011426832061260939, -0.3276446759700775, -0.09773371368646622, -0.02652556821703911, -4.291525328881107e-06, -7.033323527139146e-06, -0.002011896576732397, -0.0008381668012589216, -1.5017898082733154, -0.13702206313610077, -0.0002884448622353375, -0.002001070184633136, -0.00011812942830147222, -0.0006160030607134104, -5.960462772236497e-07, -0.0007775382255204022, -5.245071224635467e-05, -4.0531076592742465e-06, -0.0008704449282959104, -0.0017014563782140613, -0.04647022858262062, -6.067568756407127e-05, -0.18560558557510376, -0.00201011192984879, -0.0005472592893056571, -2.3841574147809297e-05, -0.00014423283573705703, -2.098061486321967e-05, -0.0006165986997075379, -0.19609080255031586, -0.00039152585668489337, -0.6982781291007996, -0.20336797833442688, -0.009253944270312786, -0.036770790815353394, -0.33224979043006897, -0.007653556298464537, -0.005144335329532623, -0.0063954684883356094, -1.3048827648162842, -0.00019500737835187465, -0.0006491222884505987, -0.040186263620853424, -0.04288148880004883, -0.0026120375841856003, -0.0006547214579768479, -0.0004306104383431375, -0.0002683041093405336, -0.0005704921204596758, -0.002710837172344327, -0.0035622967407107353, -2.0265373677830212e-05, -0.00047064671525731683, -6.341733387671411e-05, -0.00045468006283044815, -0.0002828436263371259, -0.000834355247206986, -0.004088852554559708, -0.009718012996017933, -6.663577369181439e-05, -0.00022790218645241112, -0.0009148702956736088, -0.016997376456856728, -1.4305104514278355e-06, -0.021738002076745033, -0.0007521660882048309, -0.00023922442051116377, -0.0003381395654287189, -0.0004897110629826784, -0.00010692501382436603, -0.000337305391440168, -0.0015455455286428332, -2.3841855067985307e-07, -2.713693618774414, -0.0009236836922354996, -0.0663093850016594, -1.1279783248901367, -4.768360213347478e-06, -2.264974000354414e-06, -3.814689989667386e-06, -3.576278118089249e-07, -0.051337722688913345], "finish_reason": "stop"}], "metrics": {"energy": 574.471537010193, "energy_per_token": 4.255344718594022, "time": 12.129896, "time_per_token": 0.08985108148148148}}
{"outputs": [{"text": "now = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    output = {}\n    output['Start Time'] = now\n\n    command = f\"Rscript {script_path}\"\n    args = shlex.split(command)\n\n    process = subprocess.run(args, capture_output=True)\n\n    output['Stdout'] = process.stdout.decode()\n    output['Stderr'] = process.stderr.decode()\n\n    now = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    output['End Time'] = now\n\n    return output", "tokens": ["now", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "output", " =", " {}", "\n", "    ", "output", "['", "Start", " Time", "']", " =", " now", "\n", "\n", "    ", "command", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "command", ")", "\n", "\n", "    ", "process", " =", " sub", "process", ".", "run", "(", "args", ",", " capture", "_", "output", "=", "True", ")", "\n", "\n", "    ", "output", "['", "St", "d", "out", "']", " =", " process", ".", "stdout", ".", "decode", "()", "\n", "    ", "output", "['", "St", "derr", "']", " =", " process", ".", "stderr", ".", "decode", "()", "\n", "\n", "    ", "now", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "output", "['", "End", " Time", "']", " =", " now", "\n", "\n", "    ", "return", " output", "\n", "\n", "if"], "logprobs": [-3.372535467147827, -0.07873594760894775, -0.05140442028641701, -0.0016314780805259943, -0.026632480323314667, -0.015004630200564861, -2.113205909729004, -0.03578970953822136, -6.4490144723095e-05, -0.5970673561096191, -0.004344430286437273, -0.0004808938247151673, -0.05546587333083153, -0.013016259297728539, -0.004484833683818579, -1.811964830267243e-05, -0.0005880056996829808, -0.002333063166588545, -0.004203057382255793, -0.0011809049174189568, -0.0005330810672603548, -0.005218456033617258, -0.00010430268594063818, -0.001801535952836275, -0.0002004899288294837, -0.07759556174278259, -0.16308604180812836, -3.872150421142578, -0.2847265899181366, -1.4730658531188965, -0.0058026909828186035, -0.16864357888698578, -0.43197983503341675, -0.41686928272247314, -0.020188327878713608, -0.00996861606836319, -0.0014754373114556074, -0.007628357969224453, -0.037825871258974075, -0.017352312803268433, -1.0994466543197632, -0.0013000854523852468, -2.715113639831543, -0.17198757827281952, -0.696785032749176, -0.3999280333518982, -0.10074759274721146, -0.02282128855586052, -0.12140995264053345, -0.26921606063842773, -7.068861305015162e-05, -3.3854863431770355e-05, -0.011771383695304394, -0.03435970097780228, -0.15992364287376404, -0.9630025625228882, -0.014659549109637737, -0.0013338964199647307, -3.3378546504536644e-06, -1.1920858014491387e-05, -0.00011729506513802335, -0.0012957995058968663, -0.00213668798096478, -0.018488572910428047, -0.037613268941640854, -0.6997805833816528, -0.0003122795606032014, -1.0303263664245605, -0.006872586905956268, -0.0011600677389651537, -8.4638240878121e-06, -7.390948667307384e-06, -2.225827932357788, -0.0004731489170808345, -0.12326748669147491, -0.01567237079143524, -0.740566611289978, 0.0, -4.291525328881107e-06, -0.011186029762029648, -0.000380324519937858, -1.137834906578064, -0.004314637742936611, -0.47567877173423767, -0.000296310376143083, -1.392601728439331, -0.02119942009449005, -0.31081482768058777, -0.0045568672940135, -0.0008925982983782887, -0.002027957234531641, -0.0061237090267241, -0.04366474598646164, -4.51792984677013e-05, -2.455681169521995e-05, -0.012307177297770977, -0.001830213237553835, -0.9217572808265686, -0.05163845419883728, -0.0028092702850699425, -0.004772936925292015, -0.00032860602368600667, -0.001447345013730228, -0.0009439303539693356, -5.4834770708112046e-05, -0.0002079985715681687, -0.0003997480380348861, -1.5497195136049413e-06, -0.0006952252588234842, -6.782778655178845e-05, -8.821448318485636e-06, -0.00047267231275327504, -0.0008569859201088548, -0.19385911524295807, -0.00016389934171456844, -0.26853832602500916, -0.04050936922430992, -0.00045372682507149875, -1.07287787614041e-05, -3.397406908334233e-05, -2.777537883957848e-05, -0.0021827223245054483, -1.1444026313256472e-05, -4.768370445162873e-07, -0.0021550068631768227, -2.407998726994265e-05, -2.109982233378105e-05, -0.0003196682082489133, -0.00012766500003635883, -2.074220174108632e-05, -1.1444026313256472e-05, -1.490105023549404e-05, -9.60780744208023e-05, -3.8980677345534787e-05, -0.0001070442158379592, -2.1457441107486375e-05, -4.1960789531003684e-05, -5.471556869451888e-05, -4.207999518257566e-05, -1.2636104656849056e-05, -0.0007911174325272441, -0.006220977287739515, -0.0005951540661044419, -0.00764421047642827, -0.00016890530241653323, -0.00042524831951595843, -6.0437283536884934e-05, -0.0015814905054867268, -0.0010894560255110264, -0.00041416651220060885, -0.21521954238414764, -0.00044169207103550434, -0.02127912826836109, -0.012356867082417011, -0.33339256048202515, -0.023008285090327263, -0.9942786693572998], "finish_reason": "stop"}], "metrics": {"energy": 664.8956624393463, "energy_per_token": 4.235004219358894, "time": 14.2036705, "time_per_token": 0.09046923885350318}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    process = subprocess.Popen([\"Rscript\", script_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    stdout = stdout.decode('utf-8')\n    stderr = stderr.decode('utf-8')\n\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout,\n        'Stderr': stderr\n    }", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "([", "\"", "R", "script", "\"", ",", " script", "_", "path", "]", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", "\n", "    ", "}", "\n", "\n", "#"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -2.1993942260742188, -0.03598729148507118, -0.0029889929573982954, -2.6225699912174605e-05, -3.564294092939235e-05, -0.2007785588502884, -3.862306402879767e-05, -1.6324853897094727, -0.3585973083972931, -0.13513721525669098, -0.022804277017712593, -0.00780958216637373, -0.0131310960277915, -0.35538581013679504, -0.00017176583060063422, -5.566918844124302e-05, -0.009505725465714931, -0.0006312523037195206, -0.06924937665462494, -0.001149232150055468, -0.004183351527899504, -0.00014935807848814875, -5.960462772236497e-07, -3.576272320060525e-06, -8.344646857949556e-07, 0.0, 0.0, -0.002491229446604848, -0.001177451922558248, -8.344646857949556e-07, -3.1470757676288486e-05, -4.172238186583854e-05, -2.3841855067985307e-07, -2.3841830625315197e-06, -0.01811179704964161, 0.0, 0.0, -0.07713347673416138, -0.003888428211212158, -0.03063281625509262, -0.03628404811024666, -0.0402357317507267, -0.0008148210472427309, -0.0001774868869688362, -0.00014149141497910023, -0.0033648558892309666, -6.437280717364047e-06, -1.7046782886609435e-05, -0.001260558608919382, -0.0004855407460127026, -0.006209367420524359, -0.02796357125043869, -0.5378613471984863, -4.100715523236431e-05, -6.139089964563027e-05, -0.0005260513862594962, -0.00028606137493625283, -1.1324817933200393e-05, -3.516612196108326e-05, -1.6093124941107817e-05, -2.455681169521995e-05, -1.1801649634435307e-05, -3.576278118089249e-07, -0.0002212279650848359, -2.3483953555114567e-05, -1.4185804502631072e-05, -1.2040065485052764e-05, -5.185469490243122e-05, -1.7881377516459906e-06, -0.0001998939987970516, -1.9073468138230965e-06, -3.528532761265524e-05, -6.079655122448457e-06, -1.0132738680113107e-05, -4.6491513785440475e-06, -4.60137271147687e-05, -1.311301275563892e-06, -1.4543427823809907e-05, -1.7762025890988298e-05, -0.00016044282529037446, -0.3818332850933075, -1.724609613418579, -0.27397212386131287, -0.049615275114774704, -2.50339189733495e-06, -0.0012824652949348092, -0.006084490567445755, -0.7840350270271301, -0.015082603320479393, -0.010396961122751236, -0.0009415484382770956, -0.018935393542051315, -0.2472427487373352, -0.00012814177898690104, -0.004321166314184666, -0.00020287363440729678, -0.004011679906398058, -5.960446742392378e-06, -6.317892984952778e-05, -1.9788545614574105e-05, -0.00052998325554654, -4.303362584323622e-05, -0.00016330339713022113, -2.3245540432981215e-05, -0.00010489867418073118, -0.008121324703097343, -1.9528053998947144, -0.0008828318095766008, -0.706175684928894, -0.50199294090271, -0.010609768331050873, -0.02449648454785347, -0.15237431228160858, -0.011114589869976044, -0.0038018582854419947, -0.002241838490590453, -0.005488327704370022, -3.3378546504536644e-06, -1.0728830375228426e-06, -0.00047291061491705477, -0.0012060280423611403, -0.0003095386200584471, -0.0002150304353563115, -0.0002743821241892874, -0.0002559096028562635, -0.0006061147432774305, -0.0007588367443531752, -7.152555099310121e-07, 0.0, -0.0002706876548472792, -5.030505417380482e-05, -0.0004945961991325021, -0.0015672078588977456, -0.01761811040341854, -1.597391747054644e-05, -6.627816765103489e-05, -0.0006161222117953002, -0.0019030333496630192, -9.298280929215252e-06, -0.020138442516326904, -0.0006367324967868626, -0.0001438752660760656, -0.000393432448618114, -0.0004627825692296028, -0.00019536493346095085, -0.0003067976504098624, -0.0005067494930699468, -2.50339189733495e-06, -0.04372020438313484, -0.011235185898840427, -0.2328759729862213, -0.07964388281106949, -0.042158305644989014, -1.9044842720031738], "finish_reason": "stop"}], "metrics": {"energy": 748.8870484600066, "energy_per_token": 4.092278953333369, "time": 16.737024, "time_per_token": 0.09145914754098361}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    script_path_parts = shlex.split(script_path)\n    cmd = ['Rscript', *script_path_parts]\n    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout.decode(),\n        'Stderr': stderr.decode()\n    }", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "script", "_", "path", "_", "parts", " =", " sh", "lex", ".", "split", "(", "script", "_", "path", ")", "\n", "    ", "cmd", " =", " ['", "R", "script", "'", ",", " *", "script", "_", "path", "_", "parts", "]", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "cmd", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ".", "decode", "()", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", ".", "decode", "()", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -2.635143280029297, -0.08525063842535019, -0.8930277228355408, -1.5313669443130493, -2.9241113662719727, -0.001836162875406444, -0.0842071920633316, -2.7418097943154862e-06, -1.0132738680113107e-05, -0.002005591057240963, -0.0027440059930086136, -0.0867883488535881, -2.4199192921514623e-05, -5.483612312673358e-06, -0.033644963055849075, -0.10101130604743958, -0.1377543956041336, -3.922107219696045, -0.2052372545003891, -0.8802245259284973, -0.036037541925907135, -0.025631168857216835, -0.5523468255996704, -0.0061414809897542, -0.23240023851394653, -0.004851356148719788, -7.986990567587782e-06, -1.5497195136049413e-06, -0.000724887300748378, -8.22540732769994e-06, -0.006973689422011375, -0.025042712688446045, -0.11905993521213531, -1.3802727460861206, -0.0064527965150773525, -0.0006043276516720653, -4.529942543740617e-06, -7.152531907195225e-06, -0.365888774394989, -1.3470558769768104e-05, -0.0005726366653107107, -0.09426039457321167, -0.002592656761407852, -0.046109769493341446, -0.0005834784242324531, -0.0017213303362950683, -5.23315102327615e-05, -1.1920928244535389e-07, -2.3841830625315197e-06, -3.576278118089249e-07, 0.0, 0.0, -0.00201011192984879, -0.00044467096449807286, 0.0, -2.47952248173533e-05, -3.111314072157256e-05, 0.0, -4.768370445162873e-07, -0.0032794286962598562, 0.0, 0.0, -0.18098367750644684, -0.0011260127648711205, -0.04245061054825783, -0.01567600853741169, -0.040324244648218155, -0.0003819928097072989, -0.00013410145766101778, -0.0001515035255579278, -0.0008316157618537545, -2.264974000354414e-06, -8.4638240878121e-06, -0.0005171154043637216, -0.000428942235885188, -0.004983148071914911, -0.03584089130163193, -1.3171557188034058, -3.504691630951129e-05, -4.6132929128361866e-05, -0.00022098960471339524, -0.00027807659353129566, -8.22540732769994e-06, -5.721882189391181e-05, -1.1444026313256472e-05, -3.480850500636734e-05, -6.556489552167477e-06, -1.1920928244535389e-07, -0.0005586970364674926, -2.5033637939486653e-05, -1.3470558769768104e-05, -1.6927575416048057e-05, -8.439661905867979e-05, -1.0609570381348021e-05, -1.4185804502631072e-05, -9.059865078597795e-06, -4.7444173105759546e-05, -3.6954811548639555e-06, -1.537788011773955e-05, -3.099436753473128e-06, -2.658331868587993e-05, -6.6756979322235566e-06, -1.2516897186287679e-05, -1.6927575416048057e-05, -9.440929716220126e-05, -0.21671701967716217, -0.8939270973205566, -0.4131081998348236, -0.008230932056903839, -0.01704179309308529, -0.13291864097118378, -0.009202800691127777, -0.0037608861457556486, -0.0015755394706502557, -0.005648603662848473, -2.145764938177308e-06, -3.576278118089249e-07, -0.000704159727320075, -0.0015675650211051106, -0.00024768622824922204, -0.00011717586312443018, -0.00025817399728111923, -0.0002325502864550799, -0.0004459816846065223, -0.000929400441236794, -1.5497195136049413e-06, 0.0, -0.00017033556650858372, -5.507317473529838e-05, -0.00037722624256275594, -0.002200921531766653, -0.017460092902183533, -1.6212332411669195e-05, -0.00011562632425921038, -0.0012142435880377889, -0.007701939903199673, -1.6689286894688848e-06, -0.003819077741354704, -0.0005743046058341861, -0.7333001494407654, -0.16403146088123322, -0.007929986342787743, -0.00011848701251437888, -0.0002585315378382802, -0.0004047528200317174, -9.214453893946484e-05, -0.00011312322021694854, -0.0012931802775710821, -1.9073468138230965e-06, -5.6622808187967166e-05, -3.814689989667386e-06, -0.0022820401936769485, -0.10085397213697433, -0.009672914631664753, -1.1119650602340698, -3.099436753473128e-06, -4.768360213347478e-06, -2.264974000354414e-06, -1.1920928244535389e-07, -0.056139376014471054], "finish_reason": "stop"}], "metrics": {"energy": 766.2076883449554, "energy_per_token": 4.054008933042092, "time": 17.284277, "time_per_token": 0.09145120105820105}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    try:\n        # Execute the R script using the subprocess module\n        completed_process = subprocess.run(\n            shlex.split(f\"Rscript {script_path}\"),\n            stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n        # Decode the stdout and stderr bytestrings to strings\n        decoded_stdout = completed_process.stdout.decode(\"utf-8\").strip()\n        decoded_stderr = completed_process.stderr.decode(\"utf-8\").strip()\n\n        # Log the start and end times, stdout, and stderr\n        end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        log = {\n            'Start Time': start_time,\n            'End Time': end_time,\n            'Stdout': decoded_stdout,\n            'Stderr': decoded_stderr\n        ", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Exec", "ute", " the", " R", " script", " using", " the", " sub", "process", " module", "\n", "        ", "completed", "_", "process", " =", " sub", "process", ".", "run", "(", "\n", "            ", "sh", "lex", ".", "split", "(", "f", "\"", "R", "script", " {", "script", "_", "path", "}\"", ")", ",", "\n", "            ", "stdout", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "        ", "#", " Dec", "ode", " the", " std", "out", " and", " st", "derr", " by", "test", "r", "ings", " to", " strings", "\n", "        ", "dec", "oded", "_", "stdout", " =", " completed", "_", "process", ".", "stdout", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", ".", "strip", "()", "\n", "        ", "dec", "oded", "_", "stderr", " =", " completed", "_", "process", ".", "stderr", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", ".", "strip", "()", "\n", "\n", "        ", "#", " Log", " the", " start", " and", " end", " times", ",", " std", "out", ",", " and", " st", "derr", "\n", "        ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "        ", "log", " =", " {", "\n", "            ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "            ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "            ", "'", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", "\n", "            ", "'", "St", "derr", "':", " dec", "oded", "_", "stderr", "\n", "        "], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -1.163919448852539, -0.0012134101707488298, -2.9927570819854736, -0.00043108707177452743, -0.0014332984574139118, -0.01378045417368412, -0.7061076760292053, -2.1886258125305176, -0.007963691838085651, -0.1117582619190216, -0.14780329167842865, -0.05213882774114609, -0.3438604474067688, -1.792738437652588, -0.6134510636329651, -0.0004577780782710761, -0.07016319036483765, -0.40795642137527466, -0.0012457951670512557, -3.3918213844299316, -0.01717608980834484, -0.027446772903203964, -0.0018228357657790184, -0.0001454247540095821, -6.556489552167477e-06, -1.5258672647178173e-05, -0.0007495454628951848, -0.738113284111023, -0.18461106717586517, -0.02571052499115467, -0.35695454478263855, -7.986990567587782e-06, -6.6756979322235566e-06, -0.00029702542815357447, -0.11533567309379578, -0.18320851027965546, -0.2967577874660492, -0.06263989210128784, -0.01870095171034336, -0.08261094987392426, -0.006077144294977188, -2.7656173188006505e-05, -1.2874520507466514e-05, -0.008853230625391006, -0.01015342865139246, -0.0010355116100981832, -0.3388572335243225, -0.0012368656462058425, -0.43188154697418213, -0.0017702399054542184, -7.617183291586116e-05, -4.887569048150908e-06, -2.0265558760002023e-06, -1.6689286894688848e-06, -1.1920928244535389e-07, 0.0, -0.00014149141497910023, -2.776846408843994, -2.3841855067985307e-07, -1.1324817933200393e-05, -2.8609820219571702e-05, 0.0, -2.50339189733495e-06, -0.005534919444471598, 0.0, 0.0, -2.0311598777770996, -0.004997026175260544, -0.409575879573822, -0.16403044760227203, -0.13076302409172058, -0.1598934680223465, -0.0005246216314844787, -0.3323300778865814, -0.31485164165496826, -6.90197994117625e-05, -0.004541321657598019, -0.00010096516780322418, -0.00019608005823101848, -3.9187896251678467, -0.012275737710297108, -0.0019445574143901467, -1.1086402082582936e-05, -0.8427561521530151, -0.7309815287590027, -0.192718043923378, -0.0004502712981775403, -2.2528252601623535, -0.0038658662233501673, -9.321732068201527e-05, -0.0024069168139249086, -0.015157869085669518, -0.00636384217068553, -7.152555099310121e-07, -3.576278118089249e-07, -1.1920922133867862e-06, -7.152555099310121e-07, -0.0003897384158335626, -5.495397272170521e-05, -2.4351553916931152, -0.04063333943486214, -0.015875140205025673, -0.00682321609929204, -0.00011193125828867778, -2.288792165927589e-05, -0.023808421567082405, -1.7103265523910522, -0.3397257626056671, -0.012324015609920025, -0.07406817376613617, -0.00039593485416844487, -0.0012730597518384457, 0.0, -4.768370445162873e-07, -0.00045813556062057614, -4.160317621426657e-05, -0.00021205084340181202, -3.576278118089249e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, -8.105902816168964e-05, -1.0132738680113107e-05, -3.576278118089249e-07, -0.00030489088385365903, -0.00021288513380568475, -4.768370445162873e-07, -4.029192859889008e-05, -1.5497195136049413e-06, -2.3841830625315197e-06, -2.3007127310847864e-05, -0.002333657816052437, -6.317892984952778e-05, -5.400034933700226e-05, -0.0008925982983782887, -0.1555824875831604, -0.7137549519538879, -1.6563867330551147, -1.7369451522827148, -0.28637751936912537, -1.3544843196868896, -0.6055053472518921, -0.005614227149635553, -0.09788072854280472, -2.3119418621063232, -0.42609965801239014, -4.60137271147687e-05, -0.0497368723154068, -0.0014925779541954398, -0.0017692878609523177, -0.0004563482361845672, -0.39515602588653564, -0.03354122117161751, -0.24148690700531006, -1.4662635294371285e-05, -3.0636318115284666e-05, -0.0001486429391661659, -0.00046659549116156995, -1.311301275563892e-06, -3.075552376685664e-05, -9.65590606938349e-06, -0.00011753345461329445, -2.50339189733495e-06, -1.1920928244535389e-07, -0.00032824851223267615, -0.000192504478036426, -3.8980677345534787e-05, -2.7894584491150454e-05, -5.781483559985645e-05, -8.583032467868179e-06, -1.1205610462639015e-05, -6.556489552167477e-06, -3.397406908334233e-05, -1.1801649634435307e-05, -3.194758028257638e-05, -8.702239938429557e-06, -4.935142715112306e-05, -9.536738616588991e-07, -1.168244216387393e-05, -8.821448318485636e-06, -0.00015984688070602715, -0.9689499139785767, -2.3517510890960693, -1.7101541757583618, -0.4793965816497803, -0.0018502036109566689, -0.01883186772465706, -0.15405131876468658, -0.00956228468567133, -0.003758867271244526, -0.0014463926199823618, -0.007973507978022099, -5.125986263010418e-06, -1.1920928244535389e-07, -0.0006258912617340684, -0.004429647698998451, -0.00036066226311959326, -0.00026008085114881396, -0.00012361239350866526, -0.0001454247540095821, -0.0003082277253270149, -0.0006702084210701287, -8.344646857949556e-07, -3.576278118089249e-07, -0.0009638193296268582, -0.00011205045302631333, -0.0016844383208081126, -0.001828071428462863, -0.011114825494587421, -2.5629668016335927e-05, -1.7762025890988298e-05, -0.00043049128726124763, -0.00821047741919756, 0.0, -1.6689286894688848e-06, -8.34461570775602e-06, -0.04768960922956467, -0.0027375861536711454, -0.0011013639159500599, -0.0004462200158741325, -0.0005827635759487748, -6.246371776796877e-05, -0.0001234931987710297, -0.0004744596080854535, -1.1920928244535389e-07, -3.540453326422721e-05, -1.0371154530730564e-05, -0.08326642960309982, -0.028686199337244034], "finish_reason": "length"}], "metrics": {"energy": 1067.5088590221403, "energy_per_token": 4.169956480555236, "time": 23.602167, "time_per_token": 0.09219596484375}}
{"outputs": [{"text": "# get current time and start R script in subprocess\n    start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    process = subprocess.Popen(shlex.split(f'Rscript {script_path}'), stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n\n    # wait for script to finish, get end time, and decode stdout and stderr\n    stdout, stderr = process.communicate()\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # return start time, end time, stdout, and stderr as dictionary\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout.decode(),\n        'Stderr': stderr.decode()\n    }", "tokens": ["#", " get", " current", " time", " and", " start", " R", " script", " in", " sub", "process", "\n", "    ", "start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "f", "'", "R", "script", " {", "script", "_", "path", "}", "')", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ",", " universal", "_", "new", "lines", "=", "True", ")", "\n", "\n", "    ", "#", " wait", " for", " script", " to", " finish", ",", " get", " end", " time", ",", " and", " decode", " std", "out", " and", " st", "derr", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " return", " start", " time", ",", " end", " time", ",", " std", "out", ",", " and", " st", "derr", " as", " dictionary", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ".", "decode", "()", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", ".", "decode", "()", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9389397501945496, -4.123422622680664, -1.1601914167404175, -0.2700466513633728, -2.4466657638549805, -3.6774301528930664, -2.312159538269043, -0.43482765555381775, -1.9254157543182373, -1.6300973892211914, -0.03833790868520737, -0.1477089822292328, -0.004246860276907682, -0.18813636898994446, -0.14798754453659058, -0.020536178722977638, -0.01617218181490898, -0.033867400139570236, -8.21318244561553e-05, -0.029737573117017746, -9.583967766957358e-05, -0.3604575991630554, -0.012240175157785416, -2.396077979938127e-05, -0.2834695875644684, -0.006172284949570894, -0.0006005152827128768, -0.04479020833969116, -0.006237800233066082, -0.0013374679256230593, -1.6569954823353328e-05, -0.00022885564249008894, -0.001557686016894877, -0.003711836412549019, -0.0008169650682248175, -0.00043215948971919715, -0.002157623879611492, -0.00010334911348763853, -0.0036975841503590345, -0.0001896439935080707, -0.008488526567816734, -0.06096508353948593, -1.3024851083755493, -0.016785690560936928, -0.001335563138127327, -2.3364747903542593e-05, -3.433168603805825e-05, -0.3154861032962799, -2.47952248173533e-05, -0.9642151594161987, -0.2787073254585266, -6.472854875028133e-05, -3.290122185717337e-05, -0.0018305702833458781, -0.4305605888366699, -0.3281574845314026, -1.2096164226531982, -0.04333752021193504, -0.04862184822559357, -0.14018435776233673, -0.003445286303758621, -2.7894584491150454e-05, -4.887569048150908e-06, -0.04030924290418625, -0.005247628316283226, -0.0017839246429502964, -0.1930534392595291, -0.002598958555608988, -0.008154078386723995, -0.00033158526639454067, -1.6689286894688848e-06, -4.0531076592742465e-06, -8.344646857949556e-07, 0.0, -1.1920928244535389e-07, -0.005153941456228495, -0.0010353925172239542, -2.3841855067985307e-07, -0.00013243274588603526, -0.00015937011630740017, -1.1920928244535389e-07, -3.3378546504536644e-06, -0.017345868051052094, 0.0, 0.0, -2.8279552459716797, -0.7594311237335205, -7.152555099310121e-07, -1.6331539882230572e-05, -8.344646857949556e-07, -0.00266078463755548, -0.008898484520614147, -0.028796469792723656, -0.01621393859386444, -0.240814208984375, -0.0011276798322796822, -0.009789552539587021, -1.5184117555618286, -0.02943793684244156, -0.7083014249801636, -0.016146844252943993, -0.31796976923942566, -2.23416805267334, -0.8778258562088013, -0.36574622988700867, -0.0033144797198474407, -0.6905609965324402, -0.7767981886863708, -0.18843016028404236, -0.06535597890615463, -0.000934045237954706, -0.03299754112958908, -0.00046302087139338255, -0.00033063191222026944, -0.08309980481863022, -7.128461584215984e-05, -0.046329792588949203, -0.02320794202387333, -0.0005384425749070942, -9.417489309271332e-06, -0.0006893880781717598, -0.0007684853626415133, -7.629365427419543e-06, -4.1126360883936286e-05, -0.00015007323236204684, -0.0027025151066482067, -0.007961208000779152, -0.00412838626652956, -0.2577348053455353, -3.7788631743751466e-05, -2.4676019165781327e-05, -0.0010034770239144564, -0.0006484074983745813, -3.3378546504536644e-06, -4.5060096454108134e-05, -3.85038583772257e-05, -5.5549986427649856e-05, -7.510157047363464e-06, -3.576278118089249e-07, -0.0007890925044193864, -2.1934269170742482e-05, -2.4437606043647975e-05, -2.2053474822314456e-05, -0.00010930894495686516, -5.960446742392378e-06, -4.9828242481453344e-05, -2.861018856492592e-06, -4.8636207793606445e-05, -3.814689989667386e-06, -2.6702524337451905e-05, -5.483612312673358e-06, -4.386805812828243e-05, -8.106198947643861e-06, -2.2053474822314456e-05, -2.52720492426306e-05, -0.00015627116954419762, -0.7366783618927002, -0.0004727914638351649, -0.13988050818443298, -0.5913086533546448, -1.362249493598938, -0.21509532630443573, -0.0027196346782147884, -0.0013060382334515452, -0.0006820021662861109, -0.0006995138246566057, -0.5138378143310547, -0.00011085849109804258, -0.03522803261876106, -0.007978474721312523, -0.0012463905150070786, -6.031808152329177e-05, -0.5334631204605103, -0.7360680103302002, -0.010664849542081356, -0.0002699726028367877, -0.2907984256744385, -0.4699672758579254, -0.009451406076550484, -0.0197315476834774, -0.0742773711681366, -0.004875438287854195, -0.003925476688891649, -0.0031244768761098385, -0.00875609926879406, -2.9802276912960224e-06, -1.1920928244535389e-07, -0.0007002285565249622, -0.0016764646861702204, -0.000284154579276219, -4.7205765440594405e-05, -0.0001147919538198039, -0.00019333878299221396, -0.00054058717796579, -0.0008131535141728818, -7.152555099310121e-07, 0.0, -0.0003782987187150866, -7.533743337262422e-05, -0.000433112756581977, -0.0005427317810244858, -0.006873652338981628, -1.168244216387393e-05, -4.9470632802695036e-05, -0.0011127954348921776, -0.012757827527821064, -4.3987260141875595e-05, -0.6387484669685364, -0.12546023726463318, -1.199400544166565, -0.2679562568664551, -0.01406389381736517, -0.0001805857609724626, -0.00025293012731708586, -0.0003672163875307888, -0.00016234986833296716, -0.00021944021864328533, -0.0013628251617774367, -1.6689286894688848e-06, -0.0007102350937202573, -2.9801878554280847e-05, -0.0023460264783352613, -0.11359559744596481, -0.020708655938506126, -1.2912954092025757, -8.22540732769994e-06, -2.9802276912960224e-06, -2.3841830625315197e-06, -1.1920928244535389e-07, -0.05339505523443222], "finish_reason": "stop"}], "metrics": {"energy": 926.3790771427157, "energy_per_token": 4.027735118011807, "time": 21.108316, "time_per_token": 0.09177528695652173}}
{"outputs": [{"text": "start_time = datetime.now()\n    process = subprocess.Popen(shlex.split('Rscript ' + script_path), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    end_time = datetime.now()\n\n    # Decode the stdout and stderr to strings if they are not already\n    if isinstance(stdout, bytes):\n        stdout = stdout.decode()\n    if isinstance(stderr, bytes):\n        stderr = stderr.decode()\n\n    # Print out the time duration\n    duration = end_time - start_time\n    print(f\"Time duration: {duration}\")\n\n    # Return the start time, end time, stdout, and stderr as a dictionary\n    return {\n        'Start Time': start_time.strftime('%Y-%m-%d %H:%M:%S'),\n        'End Time': end_time.strftime('%Y-%m-%d %H:%M:%S'),\n        'Stdout': stdout,\n        'Stderr", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "('", "R", "script", " '", " +", " script", "_", "path", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "#", " Dec", "ode", " the", " std", "out", " and", " st", "derr", " to", " strings", " if", " they", " are", " not", " already", "\n", "    ", "if", " isinstance", "(", "stdout", ",", " bytes", "):", "\n", "        ", "stdout", " =", " std", "out", ".", "decode", "()", "\n", "    ", "if", " isinstance", "(", "stderr", ",", " bytes", "):", "\n", "        ", "stderr", " =", " st", "derr", ".", "decode", "()", "\n", "\n", "    ", "#", " Print", " out", " the", " time", " duration", "\n", "    ", "duration", " =", " end", "_", "time", " -", " start", "_", "time", "\n", "    ", "print", "(", "f", "\"", "Time", " duration", ":", " {", "duration", "}\"", ")", "\n", "\n", "    ", "#", " Return", " the", " start", " time", ",", " end", " time", ",", " std", "out", ",", " and", " st", "derr", " as", " a", " dictionary", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ",", "\n", "        ", "'", "St", "derr"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -1.7064021825790405, -0.23711900413036346, -1.8487262725830078, -0.03029170073568821, -0.003822759259492159, -4.8040190449682996e-05, -3.7431014789035544e-05, -0.25841760635375977, -3.373566141817719e-05, -0.9000126719474792, -0.39505845308303833, -2.8729025871143676e-05, -4.792098479811102e-05, -0.0015589953400194645, -0.6642467379570007, -0.0644855946302414, -0.030638020485639572, -0.45755907893180847, -0.21068944036960602, -0.04300973191857338, -7.033100700937212e-05, -1.585470999998506e-05, -0.04289644956588745, -0.0022671727929264307, -0.18669217824935913, -0.0025710167828947306, -0.008046118542551994, -0.0002324311062693596, -2.3841855067985307e-07, -5.245195097813848e-06, -1.6689286894688848e-06, 0.0, -1.1920928244535389e-07, -0.005707277916371822, -0.0016142207896336913, -2.145764938177308e-06, -0.00018320789968129247, -0.00017474555352237076, -1.1920928244535389e-07, -1.5497195136049413e-06, -0.017315523698925972, 0.0, 0.0, -0.04071700945496559, -0.00520434370264411, -0.03051835298538208, -0.039983782917261124, -0.039529770612716675, -0.0013542537344619632, -0.0004532501916401088, -0.00031728477915748954, -0.001979774096980691, -6.318072337307967e-06, -5.6503606174374e-05, -0.0011604249011725187, -0.0006555553991347551, -0.007402846124023199, -0.01587197370827198, -0.4593563973903656, -3.45700973412022e-05, -5.6980417866725475e-05, -0.0007250064518302679, -0.00020597243565134704, -1.9788545614574105e-05, -7.247662142617628e-05, -1.5139465176616795e-05, -0.00015698630886618048, -1.1782230138778687, -0.0003474347176961601, -2.6257410049438477, -0.8035452961921692, -0.03474007546901703, -0.7540128827095032, -0.6427847743034363, -0.0006567466771230102, -0.010858378373086452, -0.00019596086349338293, -0.0005043664714321494, -2.6791186332702637, -0.5245603919029236, -3.1285648345947266, -0.10760348290205002, -0.31959348917007446, -0.5923126339912415, -0.4435451626777649, -0.2663097679615021, -0.001364015624858439, -0.31444740295410156, -0.4835995137691498, -1.537788011773955e-05, -0.000931663322262466, -0.00010871296399272978, -0.0025749404449015856, -0.0029066239949315786, -0.012458240613341331, -0.002351259347051382, -0.017557084560394287, -0.015834426507353783, -0.0017801166977733374, -1.1920928244535389e-07, -3.909988299710676e-05, -0.00012051333033014089, -1.3481364250183105, -0.010912030935287476, -0.10495514422655106, -0.0009558399324305356, -0.00020847532141488045, -1.4066597032069694e-05, -0.000494715350214392, -4.6491513785440475e-06, -5.280832192511298e-05, -1.2040065485052764e-05, -1.1444026313256472e-05, -0.0008501967531628907, -0.00018380382971372455, -9.905801562126726e-05, -0.00011073929636040702, -8.344646857949556e-07, -5.722029527532868e-06, -2.264974000354414e-06, -0.00019476900342851877, -7.73638384998776e-05, -0.013264154084026814, -0.0004337085410952568, -1.5342659950256348, -3.928964614868164, -3.3217270374298096, -0.440168559551239, -3.662245273590088, -4.370288848876953, -0.7224992513656616, -0.0027834740467369556, -1.0810654163360596, -0.0273856483399868, -0.05474124103784561, -1.1324817933200393e-05, -1.1920922133867862e-06, -0.0009082006872631609, -9.941560711013153e-05, -5.960462772236497e-07, -1.1920928244535389e-07, -0.0009591746493242681, -0.012924003414809704, -0.25183960795402527, -0.05786188691854477, -0.05899958685040474, -0.2623308598995209, -1.1610641479492188, -0.9623084664344788, -0.12213438749313354, -0.0027982147876173258, -0.05341324955224991, -0.6658680438995361, -0.0013946102699264884, -0.007283917628228664, -0.02604728378355503, -0.0003921216703020036, -1.4387222528457642, -0.8181647062301636, -0.4586256742477417, -0.9485895037651062, -0.17919760942459106, -0.00261310744099319, -0.00203473842702806, -0.00044967554276809096, -0.0012159105390310287, -0.17062076926231384, -7.152301259338856e-05, -0.014669417403638363, -0.0024125061463564634, -0.00048637480358593166, -0.00023993951617740095, -0.22097282111644745, -0.01898931711912155, -0.0041998522356152534, -0.005944430362433195, -0.0006096888100728393, -0.10810413211584091, -0.1719716191291809, -0.0028571756556630135, -0.008190377615392208, -0.06896847486495972, -0.006466298829764128, -0.002873223042115569, -0.001400562352500856, -0.22813063859939575, -7.271740287251305e-06, -1.1920928244535389e-07, -0.11476126313209534, -0.00322073046118021, -5.245071224635467e-05, -0.3188040256500244, -0.00017951308109331876, -0.00627156300470233, -0.006205220706760883, -0.0008754473528824747, -1.3589766240329482e-05, -1.9192511899746023e-05, -0.0007552632014267147, -0.0019601434469223022, -0.00022849810193292797, -0.00012754580529872328, -0.0011713793501257896, -6.341733387671411e-05, -0.0016627785516902804, -0.00018606838420964777, -0.007954467087984085, -0.0001842805795604363, -0.00018535325943958014, -0.0003280101518612355, -0.00010585224663373083, -0.0004456242313608527, -0.0011336335446685553, -7.152555099310121e-07, -7.152555099310121e-07, -3.421248038648628e-05, -1.0847986231965479e-05, -1.1920928244535389e-07, -5.61460001335945e-05, -2.7179348762729205e-05, -7.986990567587782e-06, -7.235741941258311e-05, -1.5020257706055418e-05, -4.410734163684538e-06, -3.2186455882765586e-06, -2.682172998902388e-05, -2.9802276912960224e-06, -1.6569954823353328e-05, -1.6689286894688848e-06, -4.339123915997334e-05, -1.311301275563892e-06, -2.312633478140924e-05, -0.0002516191452741623, -0.0001486429391661659, -0.0003250309091527015, -0.0017819016939029098, -0.023333145305514336, -2.062299427052494e-05, -1.5258672647178173e-05, -0.0005422552349045873, -0.003275745315477252, -3.2186455882765586e-06, -0.05026472732424736, -0.00344635546207428, -0.00012718822108581662, -0.00031859567388892174, -0.0004213160718791187, -4.875540980719961e-05], "finish_reason": "length"}], "metrics": {"energy": 1033.6056866340634, "energy_per_token": 4.03752221341431, "time": 23.367996, "time_per_token": 0.091281234375}}
{"outputs": [{"text": "try:\n        start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        cmd_to_run = f\"Rscript {script_path}\"\n        # Use shlex to split the command into individual arguments, which helps prevent command injection attacks\n        parsed_cmd = shlex.split(cmd_to_run)\n        process = subprocess.Popen(parsed_cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout, stderr = process.communicate()\n        stdout, stderr = stdout.decode('utf-8'), stderr.decode('utf-8')\n        end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        return {\n            'Start Time': start_time,\n            'End Time': end_time,\n            'Stdout': stdout,\n            'Stderr': stderr\n        }\n    except Exception as e:\n        print(f\"Error executing script: {e}\")\n        ", "tokens": ["try", ":", "\n", "        ", "start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "        ", "cmd", "_", "to", "_", "run", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "        ", "#", " Use", " sh", "lex", " to", " split", " the", " command", " into", " individual", " arguments", ",", " which", " helps", " prevent", " command", " injection", " attacks", "\n", "        ", "par", "sed", "_", "cmd", " =", " sh", "lex", ".", "split", "(", "cmd", "_", "to", "_", "run", ")", "\n", "        ", "process", " =", " sub", "process", ".", "P", "open", "(", "par", "sed", "_", "cmd", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "        ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "        ", "stdout", ",", " st", "derr", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", ",", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "        ", "return", " {", "\n", "            ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "            ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "            ", "'", "St", "d", "out", "':", " std", "out", ",", "\n", "            ", "'", "St", "derr", "':", " st", "derr", "\n", "        ", "}", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " executing", " script", ":", " {", "e", "}\"", ")", "\n", "        "], "logprobs": [-3.461005926132202, -0.0008905735448934138, -0.003344777040183544, -0.025399338454008102, -0.8668343424797058, -0.10701358318328857, -0.014272278174757957, -0.013051793910562992, -0.04453450068831444, -0.00012814177898690104, -0.055861979722976685, -0.00014351768186315894, -0.18497276306152344, -0.01257302425801754, -7.390948667307384e-06, -0.36445140838623047, -0.006270378362387419, -0.0006344689172692597, -0.018409226089715958, -0.005918240640312433, -0.0009087961516343057, -8.821448318485636e-06, -0.0002026352594839409, -0.0007024919614195824, -0.00179903709795326, -0.00034564718953333795, -0.00017653337272349745, -0.0022165034897625446, -8.189342770492658e-05, -0.005207308568060398, -5.1616290875244886e-05, -0.08289408683776855, -0.3332630693912506, -1.630033254623413, -1.740265965461731, -3.6051666736602783, -0.001019553979858756, -0.14397315680980682, -0.007654265966266394, -0.6412253975868225, -0.1913326382637024, -0.13377058506011963, -0.020726870745420456, -0.13764230906963348, -0.29496756196022034, -3.528532761265524e-05, -2.0146166207268834e-05, -0.011308502405881882, -0.03658876568078995, -0.06468239426612854, -3.084249496459961, -2.602382183074951, -0.0794382244348526, -9.512448741588742e-05, -0.3598017394542694, -0.15954148769378662, -0.07725971937179565, -0.06127885356545448, -0.5701814293861389, -2.583648920059204, -0.11062644422054291, -2.4692091941833496, -2.936166763305664, -2.349100112915039, -0.5144136548042297, -0.7101757526397705, -0.00976086687296629, -0.37208592891693115, -0.7630125880241394, -0.0010645681759342551, -2.163910388946533, -0.00038378025055862963, -0.006619075778871775, -0.0886048972606659, -0.046420954167842865, -0.00021586472576018423, -2.3841855067985307e-07, -1.0967194612021558e-05, -0.0005942009738646448, -0.00018869050836656243, -0.001396753010340035, -1.3828182090946939e-05, 0.0, 0.0, -1.1920928244535389e-07, -0.009465458802878857, -0.004410421010106802, -0.23410364985466003, -1.8464970588684082, -0.08180951327085495, -0.0004146431456319988, -9.298280929215252e-06, -7.152531907195225e-06, -0.6526924967765808, -3.0040289857424796e-05, -0.0005217621219344437, -0.058338016271591187, -1.1920928244535389e-07, -8.344646857949556e-07, -7.986990567587782e-06, -0.0022060361225157976, -0.04421006888151169, -0.0005534547381103039, -0.002509898506104946, -6.544376083184034e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.001970970071852207, -0.0005718026659451425, 0.0, -5.876845170860179e-05, -4.5298504119273275e-05, -1.1920928244535389e-07, -9.536738616588991e-07, -0.0031431340612471104, 0.0, 0.0, -0.19821858406066895, -0.002113491529598832, -0.04699082300066948, -0.059317681938409805, -0.05440780147910118, -0.0007621721015311778, -9.321732068201527e-05, -0.00012408917245920748, -0.00031835734262131155, -3.6954811548639555e-06, -3.6954811548639555e-06, -0.0009174905135296285, -0.0006504327175207436, -0.011323589831590652, -0.08282320201396942, -1.686068058013916, -1.4272308349609375, -0.0016307639889419079, -0.00010680581908673048, -0.001019911258481443, -0.0019372997339814901, -1.0728830375228426e-06, -0.00013505500101018697, -0.0020626953337341547, -0.986058235168457, -0.008220290765166283, -0.006787695921957493, -0.0004390706308186054, -0.020401163026690483, -0.029671726748347282, -0.001620409544557333, -1.1920922133867862e-06, -2.5510462364763953e-05, -4.0531076592742465e-06, -0.0012703214306384325, -9.583967766957358e-05, -0.00012003655137959868, -3.0517112463712692e-05, -2.7656173188006505e-05, -0.021547384560108185, -0.051035769283771515, -0.12194646894931793, -3.266281055402942e-05, -6.23445157543756e-05, -0.0005927712772972882, -0.0003554189461283386, -2.9802276912960224e-06, -2.6702524337451905e-05, -9.894321920000948e-06, -7.283422019099817e-05, -6.318072337307967e-06, 0.0, -0.0006817638641223311, -4.255681051290594e-05, -9.536697689327411e-06, -1.9788545614574105e-05, -0.00028463127091526985, -4.172316494077677e-06, -3.2186455882765586e-06, -7.271740287251305e-06, -4.0411134250462055e-05, -8.583032467868179e-06, -5.2689116273541003e-05, -4.887569048150908e-06, -3.4450891689630225e-05, -2.9802276912960224e-06, -8.821448318485636e-06, -1.0013530300057027e-05, -0.0002269487304147333, -0.3233242332935333, -0.6148703694343567, -0.7027806639671326, -0.014546532183885574, -0.030258508399128914, -0.11846626549959183, -0.008295484818518162, -0.0033983595203608274, -0.0036485311575233936, -0.006959483493119478, -1.5497195136049413e-06, 0.0, -0.00034481301554478705, -0.004583804402500391, -0.0003856868715956807, -0.00014733182615600526, -0.00019977481861133128, -0.0002445875434204936, -0.00048792376765049994, -0.0008048156159929931, -4.768370445162873e-07, -1.1920928244535389e-07, -0.00014208737411536276, -8.535020606359467e-05, -0.00044907975825481117, -0.003886172082275152, -0.01454888191074133, -1.6569954823353328e-05, -7.629103492945433e-05, -0.0006437613046728075, -0.003497794270515442, -1.2874520507466514e-05, -0.06130396947264671, -0.0011157722910866141, -0.00012432756193447858, -0.0007952864980325103, -0.0003830652858596295, -0.00010299152199877426, -0.00020668754586949944, -0.0006272017490118742, -7.152555099310121e-07, -0.06578848510980606, -0.04237428680062294, -0.0001833270798670128, -0.0008241117466241121, -0.03994907811284065, -0.013215686194598675, -0.04859380051493645, -0.00563117815181613, -0.06346668303012848, -0.0002369599969824776, -0.0042405687272548676, -0.002315104240551591, -1.0373162031173706, -0.025382136926054955, -0.1506858766078949, -0.06645217537879944, -0.5673880577087402, -2.5622451305389404, -1.003377079963684, -0.3575660288333893, -0.0011204162146896124, -0.2547655403614044, -0.008921641856431961, -0.04599638283252716, -0.025239523500204086, -0.3203212022781372], "finish_reason": "length"}], "metrics": {"energy": 1071.4620597286223, "energy_per_token": 4.185398670814931, "time": 23.583208, "time_per_token": 0.09212190625}}
{"outputs": [{"text": "# Run the R script using subprocess.Popen\n    cmd = f'Rscript {shlex.quote(script_path)}'\n    process = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n    # Get the start time\n    start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Run the R script and capture stdout and stderr\n    stdout, stderr = process.communicate()\n\n    # Get the end time\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Return the results\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout.decode('utf-8'),\n        'Stderr': stderr.decode('utf-8')\n    }", "tokens": ["#", " Run", " the", " R", " script", " using", " sub", "process", ".", "P", "open", "\n", "    ", "cmd", " =", " f", "'", "R", "script", " {", "sh", "lex", ".", "quote", "(", "script", "_", "path", ")}", "'", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "cmd", ",", " shell", "=", "True", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "    ", "#", " Get", " the", " start", " time", "\n", "    ", "start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Run", " the", " R", " script", " and", " capture", " std", "out", " and", " st", "derr", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "\n", "    ", "#", " Get", " the", " end", " time", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Return", " the", " results", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9389397501945496, -2.853645086288452, -0.1829403042793274, -0.2685236632823944, -0.03514643386006355, -0.40530240535736084, -0.19142596423625946, -0.0003084660565946251, -1.1790013313293457, -1.4088208675384521, -0.0005355831235647202, -0.5758163928985596, -0.003312935121357441, -2.471555709838867, -0.19571614265441895, -1.029472827911377, -1.1567764282226562, -0.03789795562624931, -0.027685781940817833, -0.2550860345363617, -1.3793375492095947, -1.7404405298293568e-05, -9.65590606938349e-06, -5.9126061387360096e-05, -0.00011252723925281316, -0.011837122030556202, -5.6980417866725475e-05, -1.2874520507466514e-05, -0.002918985905125737, -0.012069880962371826, -0.07798950374126434, -0.036504290997982025, -0.7386091351509094, -0.004056321922689676, -0.0003846143954433501, -3.909988299710676e-05, -8.106198947643861e-06, -0.0007671750499866903, -3.3378546504536644e-06, -0.004542745649814606, -0.14314515888690948, -0.07954370230436325, -0.5591850876808167, -0.004978759214282036, -0.0018239067867398262, -0.00038354191929101944, -0.03924165293574333, -0.0035453103482723236, -0.00010918975021922961, -3.242440288886428e-05, -5.960462772236497e-07, -5.8412379075889476e-06, -3.576278118089249e-07, 0.0, -1.1920928244535389e-07, -0.0025733946822583675, -0.0006864098832011223, -5.960462772236497e-07, -2.002696055569686e-05, -1.8358061424805783e-05, 0.0, -9.536738616588991e-07, -0.005365850869566202, 0.0, 0.0, -0.1032458245754242, -0.001401276676915586, -0.06703538447618484, -0.000641974329482764, -0.021331408992409706, -0.40366262197494507, -0.16718435287475586, -0.15923573076725006, -0.04284745454788208, -0.6353282928466797, -5.9602869441732764e-05, -0.00926870759576559, -0.04033203050494194, -0.005579493474215269, -0.004829052835702896, -0.03486476466059685, -3.480850500636734e-05, -0.06403172761201859, -4.851700214203447e-05, -0.21750204265117645, -0.006627720780670643, -1.1920928244535389e-07, -0.43811675906181335, -0.00250252615660429, -0.00013076403411105275, -0.014552641659975052, -0.0035924678668379784, -0.0008837846689857543, -5.602820692729438e-06, -0.0010407513473182917, -0.0004456242313608527, -0.0008231588872149587, -0.000316212244797498, -9.119095193454996e-05, -0.001561970915645361, -4.279521817807108e-05, -0.0015647084219381213, -1.3351351299206726e-05, -0.003660883754491806, -0.016686981543898582, -0.00020215852418914437, -0.003244614228606224, -2.6602420806884766, -0.017561066895723343, -0.9512285590171814, -0.007898407988250256, -0.2969916760921478, -0.8549904823303223, -1.1557929515838623, -5.829164365422912e-05, -0.026348749175667763, -7.688703772146255e-05, -3.5523738915799186e-05, -0.026318561285734177, -0.00024863966973498464, -0.03299465775489807, -0.028737397864460945, -0.00012516192509792745, -2.407998726994265e-05, -0.00020859450160060078, -0.0013893722789362073, -5.483612312673358e-06, -7.629365427419543e-06, -9.381330892210826e-05, -0.0006133820279501379, -0.004056915640830994, -0.10925076901912689, -0.00020108585886191577, -0.0020272433757781982, -0.1303974986076355, -0.0007165487040765584, -0.012308119796216488, -0.0002157455455744639, -0.047789737582206726, -2.2291887944447808e-05, -0.0009972843108698726, -1.8954096958623268e-05, -6.6756979322235566e-06, -8.976056415122002e-05, -0.00026174934464506805, -3.4570634852570947e-06, -2.2053474822314456e-05, -4.410734163684538e-06, -2.0265373677830212e-05, -2.2172682292875834e-05, -1.4305104514278355e-06, -0.00029225845355540514, -1.883488948806189e-05, -8.821448318485636e-06, -5.960446742392378e-06, -0.0001333863037871197, -5.960462772236497e-07, -8.940656698541716e-06, -2.3841855067985307e-07, -3.838465272565372e-05, -1.4305104514278355e-06, -1.7881377516459906e-06, -1.1920922133867862e-06, -3.71926071238704e-05, -3.3378546504536644e-06, -5.006777428206988e-06, -1.0490362910786644e-05, -5.07818695041351e-05, -0.0021900972351431847, -0.00019631843315437436, -0.033938270062208176, -2.4369709491729736, -0.19133853912353516, -0.9697951674461365, -2.126678228378296, -0.00042703570215962827, -0.11759090423583984, -0.12049636989831924, -0.003808271139860153, -0.010186824016273022, -0.09276434034109116, -0.006405181251466274, -0.002871202304959297, -0.0018661479698494077, -0.008034647442400455, -9.536738616588991e-07, -1.1920928244535389e-07, -0.0005901502445340157, -0.0020914841443300247, -0.00020680672605521977, -0.00016807096835691482, -0.00016282663273159415, -0.00017617580306250602, -0.0005732323625124991, -0.0006053998949937522, -8.344646857949556e-07, 0.0, -0.00017355366435367614, -8.082063141046092e-05, -0.00048708971007727087, -0.005689379759132862, -0.011484701186418533, -9.894321920000948e-06, -5.3881147323409095e-05, -0.0008507922757416964, -0.005498523358255625, -2.3841830625315197e-06, -0.005518440622836351, -0.0004552758182398975, -0.740108847618103, -0.008689685724675655, -0.005154178477823734, -7.664863369427621e-05, -0.03881654515862465, -0.23313036561012268, -0.040726736187934875, -0.00010251473577227443, -0.00045599075383506715, -0.00016151554882526398, -0.00012981049076188356, -9.60780744208023e-05, -0.0012322221882641315, -4.768370445162873e-07, -4.160317621426657e-05, -1.1920922133867862e-06, -0.0001685477327555418, -1.6331539882230572e-05, -3.790783375734463e-05, -1.4305104514278355e-06, -0.004072112496942282, -0.06869138777256012, -0.009705617092549801, -1.4326577186584473, -5.245195097813848e-06, -2.9802276912960224e-06, -3.814689989667386e-06, -1.1920928244535389e-07, -0.05081474035978317], "finish_reason": "stop"}], "metrics": {"energy": 979.8386040878294, "energy_per_token": 4.116968924738779, "time": 22.511744, "time_per_token": 0.09458715966386555}}
{"outputs": [{"text": "# Get current time\n    now = datetime.now()\n    start_time = now.strftime('%Y-%m-%d %H:%M:%S')\n\n    # Call subprocess to execute R script\n    command = f'Rscript {shlex.quote(script_path)}'\n    process = subprocess.Popen(shlex.split(command), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n    # Wait for the process to finish\n    stdout, stderr = process.communicate()\n\n    # Get current time after the task finishes\n    end_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    # Decode stdout and stderr\n    stdout = stdout.decode('utf-8')\n    stderr = stderr.decode('utf-8')\n\n    # Return the start time, end time, stdout, and stderr as a dictionary\n    result = {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout", "tokens": ["#", " Get", " current", " time", "\n", "    ", "now", " =", " datetime", ".", "now", "()", "\n", "    ", "start", "_", "time", " =", " now", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "#", " Call", " sub", "process", " to", " execute", " R", " script", "\n", "    ", "command", " =", " f", "'", "R", "script", " {", "sh", "lex", ".", "quote", "(", "script", "_", "path", ")}", "'", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "command", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "    ", "#", " Wait", " for", " the", " process", " to", " finish", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "\n", "    ", "#", " Get", " current", " time", " after", " the", " task", " finishes", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "#", " Dec", "ode", " std", "out", " and", " st", "derr", "\n", "    ", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "#", " Return", " the", " start", " time", ",", " end", " time", ",", " std", "out", ",", " and", " st", "derr", " as", " a", " dictionary", "\n", "    ", "result", " =", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out"], "logprobs": [-0.9389397501945496, -1.4578988552093506, -1.7306499481201172, -0.28069445490837097, -0.8024505376815796, -0.001105293515138328, -2.0287678241729736, -0.03522055223584175, -0.012347918935120106, -0.00021705655672121793, -0.011600185185670853, -0.000259723310591653, -0.053189244121313095, -0.2072824239730835, -0.6156185865402222, -0.09878625720739365, -0.012626232579350471, -0.013613127171993256, -0.09245475381612778, -0.00836783554404974, -0.0011017211945727468, -1.1324817933200393e-05, -2.452962636947632, -0.0012962757609784603, -0.03451702743768692, -0.009525444358587265, -0.006446044892072678, -3.6477376852417365e-05, -0.00047267231275327504, -0.0017832106677815318, -0.0016920547932386398, -0.000662703241687268, -0.00045015214709565043, -0.0008802115335129201, -8.630380034446716e-05, -0.004838425200432539, -0.01955200359225273, -0.18481017649173737, -0.000783613184466958, -0.05898329243063927, -3.655982494354248, -3.273923873901367, -0.028047379106283188, -1.2262399196624756, -1.940164566040039, -1.1290576457977295, -0.12925653159618378, -0.32441484928131104, -0.0026192902587354183, -2.411565065383911, -0.22669197618961334, -0.5247306227684021, -1.0027525424957275, -0.026865070685744286, -0.03670023754239082, -0.18187932670116425, -1.2837049961090088, -1.3589766240329482e-05, -1.1205610462639015e-05, -3.9457496313843876e-05, -0.00015043080202303827, -0.011368024162948132, -7.283422019099817e-05, -1.07287787614041e-05, -0.0028662097174674273, -0.01441364549100399, -0.06064627692103386, -0.044309746474027634, -0.47750943899154663, -0.005149197764694691, -0.00020632999076042324, -1.5497195136049413e-06, -8.34461570775602e-06, -0.12013456970453262, -7.784063927829266e-05, -0.005818216595798731, -2.3078086376190186, -1.0013530300057027e-05, -9.417489309271332e-06, -0.09487032890319824, -0.00041476229671388865, -0.001778450678102672, -0.00908290408551693, -0.00025233422638848424, -0.13243162631988525, -0.0008480527903884649, -0.002107900334522128, -8.487341256113723e-05, -3.576278118089249e-07, -2.3841830625315197e-06, -3.576278118089249e-07, 0.0, 0.0, -0.0039388942532241344, -0.0011606630869209766, -2.3841855067985307e-07, -6.949660019017756e-05, -4.95898348162882e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -0.004154029302299023, 0.0, 0.0, -0.11045438796281815, -0.0011096993694081903, -1.1635308265686035, -0.000379132863599807, -0.053554728627204895, -1.549086093902588, -0.022010449320077896, -0.8464577794075012, -0.274252712726593, -0.0032045699190348387, -0.4771052300930023, -1.5627299547195435, -0.00027569307712838054, -0.043386489152908325, -0.07727792859077454, -0.0002719986077863723, -6.48477507638745e-05, -0.0001554368354845792, -0.0003734129713848233, -2.3841830625315197e-06, -3.4570634852570947e-06, -0.0006051616510376334, -0.00031013446277938783, -0.001742750871926546, -0.16043806076049805, -0.00025197668583132327, -0.015247923322021961, -1.0217549800872803, -1.553907871246338, -0.0025829069782048464, -0.9031563997268677, -1.4063854217529297, -1.9223732948303223, -3.1549155712127686, -0.0095759816467762, -8.892617915989831e-05, -0.8878814578056335, -0.008391241542994976, -0.0013946102699264884, -0.006308760028332472, -0.5576664805412292, -3.3378546504536644e-06, -0.00020776021119672805, -1.1444026313256472e-05, -0.002639027079567313, -2.825220326485578e-05, -1.1920928244535389e-07, -0.0058044688776135445, -1.585470999998506e-05, -0.0009389282786287367, -0.00047874910524114966, -5.245195097813848e-06, -4.60137271147687e-05, -0.00015484087634831667, -4.565611743601039e-05, -2.1576648578047752e-05, -4.494089080253616e-05, -6.6756979322235566e-06, -5.829164365422912e-05, -2.622600959512056e-06, -6.0437283536884934e-05, -0.0006611545104533434, -0.01128622516989708, -0.00030524839530698955, -0.1308448165655136, -0.49907565116882324, -0.006783551536500454, -0.6792582869529724, -0.0009026029147207737, -0.014997935853898525, -0.0005353448214009404, -0.0010062160436064005, -0.552432656288147, -0.00024959311122074723, -0.6508461833000183, -0.16321353614330292, -0.00767437694594264, -8.344646857949556e-07, -0.0003274143091402948, -0.0010887415846809745, -0.23019348084926605, -0.007201665081083775, -0.004582973662763834, -0.00030357998912222683, -0.010224111378192902, -0.16782620549201965, -0.0002112165529979393, -0.0043179611675441265, -0.0001289761275984347, -0.000783732277341187, -1.6569954823353328e-05, -3.433168603805825e-05, -1.1920922133867862e-06, -0.0002746204845607281, -1.1920858014491387e-05, -1.8596476365928538e-05, -5.960462772236497e-07, -3.564294092939235e-05, -0.0029098333325237036, -0.00944491196423769, -0.0002588890492916107, -0.23714326322078705, -0.5975895524024963, -1.3339409828186035, -1.1610537767410278, -0.1739470511674881, -0.005027035251259804, -0.0023203373420983553, -0.0007570500019937754, -0.002019629580900073, -0.10526227951049805, -6.329813186312094e-05, -0.03518717736005783, -0.0036190745886415243, -0.0010283663868904114, -0.0003846143954433501, -0.7039384841918945, -0.04186945781111717, -0.009329295717179775, -0.0031764074228703976, -0.0005620330339297652, -2.3490095138549805, -0.054093219339847565, -0.240207239985466, -0.003102729329839349, -0.01324333157390356, -0.026616809889674187, -0.005431300029158592, -0.0034228330478072166, -0.0020983838476240635, -0.004086953122168779, -9.536738616588991e-07, 0.0, -0.00039843725971877575, -0.0012062662281095982, -0.00020239688456058502, -0.00010740180005086586, -0.00016878610767889768, -0.00017855956684798002, -0.00047183825518004596, -0.0006754500791430473, -2.3841855067985307e-07, 0.0, -0.002245168900117278, -9.035655966727063e-05, -0.0011324428487569094, -0.000442407006630674, -0.008253632113337517, -1.6689160474925302e-05, -4.3748852476710454e-05, -0.0006139777251519263, -0.0021531034726649523, -2.3841855067985307e-07], "finish_reason": "length"}], "metrics": {"energy": 1033.8599796619412, "energy_per_token": 4.038515545554458, "time": 23.538897, "time_per_token": 0.09194881640625}}
{"outputs": [{"text": "# Create a dictionary to store script execution information\n    result = {}\n\n    # Get the current date and time\n    now = datetime.now()\n\n    # Convert the date and time to a string in the format you want\n    start_time = now.strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Add the start time to the result dictionary\n    result[\"Start Time\"] = start_time\n\n    # Set the R script command\n    cmd_list = shlex.split(f\"Rscript {script_path}\")\n\n    # Set the environment variables for R script\n    env = os.environ.copy()\n    env[\"R_LIBS_USER\"] = \"~/R/library\"\n\n    # Run the R script with the provided script path\n    process = subprocess.run(cmd_list, stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=env)\n\n    # Convert stdout and stderr bytes to strings\n    stdout = process.stdout.decode('utf-8')\n    stderr = process.stderr", "tokens": ["#", " Create", " a", " dictionary", " to", " store", " script", " execution", " information", "\n", "    ", "result", " =", " {}", "\n", "\n", "    ", "#", " Get", " the", " current", " date", " and", " time", "\n", "    ", "now", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "#", " Convert", " the", " date", " and", " time", " to", " a", " string", " in", " the", " format", " you", " want", "\n", "    ", "start", "_", "time", " =", " now", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Add", " the", " start", " time", " to", " the", " result", " dictionary", "\n", "    ", "result", "[", "\"", "Start", " Time", "\"", "]", " =", " start", "_", "time", "\n", "\n", "    ", "#", " Set", " the", " R", " script", " command", "\n", "    ", "cmd", "_", "list", " =", " sh", "lex", ".", "split", "(", "f", "\"", "R", "script", " {", "script", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Set", " the", " environment", " variables", " for", " R", " script", "\n", "    ", "env", " =", " os", ".", "en", "viron", ".", "copy", "()", "\n", "    ", "env", "[", "\"", "R", "_", "LI", "BS", "_", "USER", "\"", "]", " =", " \"", "~/", "R", "/", "library", "\"", "\n", "\n", "    ", "#", " Run", " the", " R", " script", " with", " the", " provided", " script", " path", "\n", "    ", "process", " =", " sub", "process", ".", "run", "(", "cmd", "_", "list", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ",", " env", "=", "env", ")", "\n", "\n", "    ", "#", " Convert", " std", "out", " and", " st", "derr", " bytes", " to", " strings", "\n", "    ", "stdout", " =", " process", ".", "stdout", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " process", ".", "stderr"], "logprobs": [-0.9389397501945496, -2.7211034297943115, -0.45995351672172546, -1.0215003490447998, -0.13685905933380127, -0.22285817563533783, -1.8621151447296143, -1.2853089570999146, -1.1338979005813599, -0.09591560065746307, -0.0008856903295964003, -2.1909637451171875, -0.31221288442611694, -0.20619304478168488, -0.001335086883045733, -0.20651939511299133, -0.00043215948971919715, -0.011091010645031929, -1.0348182916641235, -0.16143396496772766, -0.12146949768066406, -1.2163937091827393, -0.01060587540268898, -0.007185686845332384, -0.7383201718330383, -0.0001805857609724626, -1.306443452835083, -0.014924771152436733, -0.004774597939103842, -0.0001323135511483997, -0.01414546649903059, -0.00011622230522334576, -0.029572661966085434, -0.22540996968746185, -0.0002734287118073553, -0.001725257490761578, -2.1307711601257324, -0.13084858655929565, -0.6127071380615234, -0.020913442596793175, -0.00018606838420964777, -0.12890532612800598, -0.12072417885065079, -0.10448309779167175, -0.8877668380737305, -0.04969672113656998, -0.14722254872322083, -2.552490472793579, -0.38611599802970886, -0.04918853938579559, -0.00011550712952157483, -0.8701443672180176, -0.051627133041620255, -0.02554832026362419, -0.0472957082092762, -0.028910784050822258, -8.737658936297521e-05, -0.0004944770480506122, -2.145764938177308e-06, -0.035188671201467514, -0.0024911104701459408, -0.0007954055909067392, -0.053047940135002136, -0.01031531859189272, -0.0038134963251650333, -1.4543427823809907e-05, -0.0003367095487192273, -0.0018077236600220203, -0.001369610894471407, -0.0003564914222806692, -0.00023934361524879932, -0.001129227806814015, -5.602679812000133e-05, -0.0010609956225380301, -6.031808152329177e-05, -0.006958181504160166, -0.24262382090091705, -0.0006052807439118624, -0.019970187917351723, -0.844990611076355, -0.20060835778713226, -0.03661531209945679, -0.020683668553829193, -0.00985022820532322, -0.004246860276907682, -0.16606523096561432, -0.016010766848921776, -0.0022407679352909327, -0.00010978573118336499, -0.0015461406437680125, -1.4880064725875854, -0.0038601660635322332, -0.005311662331223488, -0.005746510811150074, -0.0009748950251378119, -0.0014477020595222712, -0.0001174142598756589, -0.0100252665579319, -1.6689286894688848e-06, 0.0, -0.0008157739648595452, -0.010684664361178875, -0.0007331067463383079, -0.020315777510404587, -3.6335909366607666, -0.19572947919368744, -0.8436070680618286, -0.6803396344184875, -0.7205296754837036, -1.1127289533615112, -0.000589792791288346, -0.9068928956985474, -2.7578020095825195, -2.6630423069000244, -0.005573329050093889, -1.3882803916931152, -4.7205765440594405e-05, -1.3112935448589269e-05, -0.00010287232726113871, -0.02428475208580494, -0.2545700967311859, -0.1145571768283844, -0.11321021616458893, -0.04600400850176811, -0.20775358378887177, -0.005209087394177914, -1.6927575416048057e-05, -4.172316494077677e-06, -0.011562359519302845, -0.0029702140018343925, -0.02844974398612976, -0.02718067541718483, -0.0003695997002068907, -0.007809227332472801, -2.9382948875427246, -0.30939173698425293, -2.247507095336914, -1.022080898284912, -1.3449616432189941, -0.841296374797821, -2.9462156295776367, -0.8532058596611023, -0.0021803434938192368, -0.555321991443634, -0.16066598892211914, -0.6162948608398438, -2.777537883957848e-05, -2.3007127310847864e-05, -4.768370445162873e-07, -0.04297570139169693, -0.00016008525562938303, -4.565611743601039e-05, -0.01308226864784956, -0.3860292136669159, -0.15708501636981964, -0.20723949372768402, -0.00269205286167562, -0.7991929650306702, -0.050057247281074524, -0.18042148649692535, -0.0026443772949278355, -0.8669480085372925, -0.00033682872890494764, -0.0006668727728538215, -0.007828744128346443, -0.0009526243666186929, -1.1289825439453125, -0.2292620688676834, -0.30032119154930115, -0.029179662466049194, -0.8358141183853149, -0.04516025632619858, -0.1505347341299057, -0.24969005584716797, -0.0003923600015696138, -0.012188006192445755, -0.4326435923576355, -0.009752131067216396, -0.10686308145523071, -0.012644242495298386, -3.5326688289642334, -1.4898617267608643, -3.116666555404663, -1.5992074012756348, -0.4110535681247711, -0.6189160943031311, -0.0014582963194698095, -1.0060815811157227, -0.013077797368168831, -0.00039081089198589325, -7.510157047363464e-06, -4.410734163684538e-06, -0.8719523549079895, -0.0001774868869688362, -0.22673170268535614, -9.452849917579442e-05, -3.576278118089249e-07, -0.00042381841922178864, -0.7112591862678528, -0.00022313489171210676, -0.000972036796156317, -8.976056415122002e-05, -1.1920928244535389e-07, -3.3378546504536644e-06, -7.152555099310121e-07, 0.0, 0.0, -4.207999518257566e-05, -0.0019255208317190409, -1.1920922133867862e-06, -1.3947389561508317e-05, -1.3351351299206726e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.0013271104544401169, 0.0, 0.0, -0.004377782344818115, -0.17301717400550842, -0.002326997695490718, -0.0005463061388581991, -0.13580505549907684, -0.0025345126632601023, -0.010007563978433609, -0.0008515069494023919, -0.004702461417764425, -3.38411808013916, -1.630579948425293, -0.00015507926582358778, -0.021075934171676636, -8.737658936297521e-05, -0.00020323118951637298, -2.2203915119171143, -1.0236268043518066, -0.43543875217437744, -0.3719154894351959, -0.00016306500765495002, -0.08984962105751038, -0.2563337981700897, -0.005999058485031128, -1.9073468138230965e-06, -3.576278118089249e-07, -0.0009263038518838584, -0.0001431601122021675, -0.9233288168907166, -0.007303680758923292, -0.007124258670955896, -0.00038115866482257843, -0.06313110142946243, -0.06346824765205383, -0.0008114859228953719, -0.0021877181716263294, -3.683499380713329e-05, -7.343022298300639e-05, -3.4570634852570947e-06, -0.0022975020110607147], "finish_reason": "length"}], "metrics": {"energy": 1044.6476353073126, "energy_per_token": 4.08065482541919, "time": 23.583559, "time_per_token": 0.09212327734375}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Execute the R script using subprocess\n    process = subprocess.Popen(shlex.split('Rscript ' + script_path), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Decode stdout and stderr\n    decoded_stdout = stdout.decode('utf-8')\n    decoded_stderr = stderr.decode('utf-8')\n\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': decoded_stdout,\n        'Stderr': decoded_stderr\n    }", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Exec", "ute", " the", " R", " script", " using", " sub", "process", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "('", "R", "script", " '", " +", " script", "_", "path", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Dec", "ode", " std", "out", " and", " st", "derr", "\n", "    ", "dec", "oded", "_", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "dec", "oded", "_", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", "\n", "        ", "'", "St", "derr", "':", " dec", "oded", "_", "stderr", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -1.163919448852539, -0.0012134101707488298, -0.6649144291877747, -2.2394866943359375, -0.01609288528561592, -0.13136166334152222, -0.14021772146224976, -0.047296732664108276, -0.4711489677429199, -0.27769193053245544, -0.00034874555421993136, -0.9463384747505188, -0.0013669917825609446, -1.4137043952941895, -0.010096194222569466, -0.0004786299541592598, -6.079655122448457e-06, -1.3112935448589269e-05, -0.16617275774478912, -3.325883881188929e-05, -0.9079030156135559, -0.46825429797172546, -3.45700973412022e-05, -1.5616295058862306e-05, -0.0009536962606944144, -0.8601401448249817, -0.04668334499001503, -0.023875467479228973, -0.3952902555465698, -0.12252752482891083, -0.02965865097939968, -7.724463648628443e-05, -2.1576648578047752e-05, -0.05059422552585602, -0.0011641160817816854, -0.23158521950244904, -0.0023695745039731264, -0.001604580320417881, -6.925819616299123e-05, -1.1920928244535389e-07, -4.172316494077677e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.004079354461282492, -0.0006349454633891582, 0.0, -3.373566141817719e-05, -4.8874615458771586e-05, 0.0, -1.7881377516459906e-06, -0.009651308879256248, 0.0, 0.0, -0.06512580811977386, -0.0025944404769688845, -0.25153523683547974, -0.04276521876454353, -0.035812824964523315, -0.0004866131057497114, -0.00011038171214750037, -0.00010072677832795307, -0.0004761277523357421, -1.9073468138230965e-06, -1.4185804502631072e-05, -0.00036161558819003403, -0.00024923557066358626, -0.016469132155179977, -0.1959458738565445, -0.00021443451987579465, -0.8831251859664917, -2.7417760065873154e-05, -2.539125671319198e-05, -0.0004751745145767927, -0.0002603192115202546, -1.0251946150674485e-05, -3.361645576660521e-05, -1.0371154530730564e-05, -3.5523738915799186e-05, -7.629365427419543e-06, -4.768370445162873e-07, -0.00052426423644647, -2.13382354559144e-05, -1.3470558769768104e-05, -7.510157047363464e-06, -4.0411134250462055e-05, -9.536738616588991e-07, -4.3748852476710454e-05, -1.9192511899746023e-05, -4.994744449504651e-05, -6.198863957251888e-06, -1.6212332411669195e-05, -8.22540732769994e-06, -3.194758028257638e-05, -3.2186455882765586e-06, -9.775113539944869e-06, -1.156323378381785e-05, -0.00036590558011084795, -0.07808686792850494, -0.00031263710116036236, -0.3092283010482788, -0.14426523447036743, -0.0033096084371209145, -1.3225047588348389, -0.00014256415306590497, -0.005612093489617109, -0.0004349001101218164, -0.00022289653134066612, -1.3385767936706543, -0.00027092601521871984, -0.6109254360198975, -0.0038979279343038797, -0.00021109737281221896, -0.0013011569390073419, -0.004596264101564884, -0.012338616885244846, -4.768370445162873e-07, -0.00021491125517059118, -0.0007857572636567056, -0.16028839349746704, -0.00482976483181119, -0.00423451466485858, -8.40390202938579e-05, -0.017897069454193115, -0.14371515810489655, -0.00014828535495325923, -0.001013361383229494, -9.536738616588991e-07, -3.576278118089249e-07, -0.0001646144810365513, -9.727005090098828e-05, -0.0015151937259361148, -1.6689286894688848e-06, -1.6689160474925302e-05, -1.0728830375228426e-06, -0.00019727191829588264, -1.3828182090946939e-05, -3.6000557884108275e-05, -4.172316494077677e-06, -4.327203714638017e-05, -0.006082950159907341, -0.005332650151103735, -0.00024637524620629847, -1.0833919048309326, -0.40923643112182617, -0.006044204346835613, -0.011712828651070595, -0.03538499027490616, -0.006050721742212772, -0.0027053682133555412, -0.0020945770666003227, -0.0029599922709167004, -7.152555099310121e-07, 0.0, -0.00035506143467500806, -0.0013521108776330948, -0.00020859450160060078, -9.393251093570143e-05, -0.00012575789878610522, -0.00021979777375236154, -0.00030012393835932016, -0.0005346299149096012, -1.1920928244535389e-07, 0.0, -0.00010561384988250211, -6.747018051100895e-05, -0.00031549722189083695, -0.000715833914000541, -0.009856365621089935, -1.3708974620385561e-05, -4.5298504119273275e-05, -0.0005484507419168949, -0.0016689670737832785, 0.0, -1.1920922133867862e-06, -4.768370445162873e-07, -0.021000061184167862, -0.0012617491884157062, -0.00012742661056108773, -0.00016878610767889768, -0.0002882065309677273, -0.00017307691450696439, -0.00015472168161068112, -0.0004508670826908201, -1.1920928244535389e-07, -3.099436753473128e-06, -9.894321920000948e-06, -0.044370073825120926, -0.006822505500167608, -1.1871098279953003, -7.986990567587782e-06, -2.7418097943154862e-06, -5.8412379075889476e-06, -3.576278118089249e-07, -0.04223236069083214], "finish_reason": "stop"}], "metrics": {"energy": 898.6069571819306, "energy_per_token": 4.029627610681303, "time": 20.483963, "time_per_token": 0.09185633632286995}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Run the R script using subprocess and capture the output\n    args = shlex.split(f\"Rscript {script_path}\")\n    result = subprocess.run(args, capture_output=True)\n\n    # Decode the captured stdout and stderr\n    stdout = result.stdout.decode('utf-8')\n    stderr = result.stderr.decode('utf-8')\n\n    # Get the end time\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Return the results as a dictionary\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout, 'Stderr': stderr}", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Run", " the", " R", " script", " using", " sub", "process", " and", " capture", " the", " output", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "f", "\"", "R", "script", " {", "script", "_", "path", "}\"", ")", "\n", "    ", "result", " =", " sub", "process", ".", "run", "(", "args", ",", " capture", "_", "output", "=", "True", ")", "\n", "\n", "    ", "#", " Dec", "ode", " the", " captured", " std", "out", " and", " st", "derr", "\n", "    ", "stdout", " =", " result", ".", "stdout", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " result", ".", "stderr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "#", " Get", " the", " end", " time", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Return", " the", " results", " as", " a", " dictionary", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ",", " '", "St", "derr", "':", " st", "derr", "}", "\n", "\n", "#"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -1.163919448852539, -0.0012134101707488298, -0.6649144291877747, -1.5777721405029297, -0.21153554320335388, -0.17844635248184204, -0.06510737538337708, -0.5836138725280762, -0.1893111914396286, -0.0004938812926411629, -1.2225924730300903, -1.045669674873352, -0.9777070879936218, -0.23694340884685516, -0.07909496873617172, -0.0017794027226045728, -2.6159327030181885, -0.011736157350242138, -0.0648472011089325, -4.410734163684538e-06, -1.0013530300057027e-05, -0.0003022690652869642, -0.10368073731660843, -0.15173742175102234, -0.2929846942424774, -0.10957080125808716, -0.036505211144685745, -0.1291133165359497, -0.005818216595798731, -3.194758028257638e-05, -2.002696055569686e-05, -0.009285597130656242, -0.003102135146036744, -0.046837951987981796, -0.023755688220262527, -1.3440371751785278, -0.0009177286992780864, -0.0004606377915479243, -1.311301275563892e-06, -7.629365427419543e-06, -0.003874178510159254, -6.985420623095706e-05, -0.04990211874246597, -0.004080779384821653, -0.42476457357406616, 0.0, -1.8358061424805783e-05, -0.0010266992030665278, -0.00015317220822907984, -2.0673534870147705, -0.006250001955777407, -0.12869949638843536, -0.0002456601650919765, -1.2258613109588623, -0.2847553789615631, -0.0003669780562631786, -0.17038674652576447, -2.4461867809295654, -2.068032741546631, -0.00018845213344320655, -0.007022816222161055, -0.00021884430316276848, -0.0003121604095213115, -0.5737301111221313, -0.00026556302327662706, -0.1813405156135559, -0.06424583494663239, -0.012437872588634491, -1.1920922133867862e-06, -8.344646857949556e-07, -0.0007569308509118855, -0.0010714748641476035, -0.383277028799057, -0.0045491536147892475, -0.0029068617150187492, -0.00018344627460464835, -0.011735096573829651, -0.0958094522356987, -0.0001532914029667154, -0.0029103087726980448, -2.7656173188006505e-05, -0.00017248096992261708, -1.311301275563892e-06, -0.0010255083907395601, -1.2636104656849056e-05, -4.768370445162873e-07, -0.0002644904307089746, 0.0, -1.2278481335670222e-05, 0.0, -3.480850500636734e-05, -0.0003682888636831194, -0.01753377541899681, -5.280832192511298e-05, -0.9677234888076782, -0.9675946831703186, -0.01412383932620287, -0.4096347689628601, -0.001618743408471346, -0.16478948295116425, -4.6132929128361866e-05, -0.0007151191821321845, -2.6940935640595853e-05, -3.397406908334233e-05, -8.296622399939224e-05, -0.0003262225945945829, -1.1920922133867862e-06, -4.410646579344757e-05, -1.2755313036905136e-05, -9.440929716220126e-05, -2.50339189733495e-06, -5.960462772236497e-07, -0.0006081400788389146, -3.969590397900902e-05, -1.7165990357170813e-05, -4.351044481154531e-05, -8.141662692651153e-05, -5.960446742392378e-06, -9.65590606938349e-06, -2.47952248173533e-05, -2.8013790142722428e-05, -7.629365427419543e-06, -2.062299427052494e-05, -5.364403477869928e-06, -4.1126360883936286e-05, -4.529942543740617e-06, -1.156323378381785e-05, -1.1444026313256472e-05, -7.152301259338856e-05, -0.004964406136423349, -0.00020203932945150882, -0.21270835399627686, -0.36719048023223877, -0.21051126718521118, -0.9503511786460876, -0.16610299050807953, -0.01677783578634262, -0.005321741569787264, -0.008473396301269531, -0.00026603974401950836, -0.20218776166439056, -1.4545392990112305, -0.005232449155300856, -0.003201361745595932, -0.0013993718894198537, -0.0027734884060919285, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.0002623452164698392, -0.06847778707742691, -0.00028153270250186324, -0.0002269487304147333, -0.00018380382971372455, -0.00033480284037068486, -1.0728830375228426e-06, 0.0, -0.0002294515579706058, -0.011271844618022442, -0.007806980051100254, -1.847726889536716e-05, -2.932505594799295e-05, -0.0001967951684491709, -0.00147162820212543, -1.1920928244535389e-07, -0.013566910289227962, -0.001658970140852034, -0.0005069877952337265, -0.00012706902634818107, -9.023735765367746e-05, -0.00031406714697368443, -8.344646857949556e-07, -0.2109307199716568, -0.058707695454359055, -0.028177307918667793, -1.2242568731307983], "finish_reason": "stop"}], "metrics": {"energy": 900.2700696659092, "energy_per_token": 4.434827929388716, "time": 20.45201, "time_per_token": 0.10074881773399015}}
{"outputs": [{"text": "# Convert script path to list of strings using shlex.split\n    script_path_list = shlex.split(script_path)\n    # Get the current time before running the script\n    start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    # Run the script and capture its stdout and stderr\n    proc = subprocess.run(script_path_list, capture_output=True, encoding='utf-8')\n    # Get the current time after running the script\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    # Decode the stdout and stderr and replace any None values with an empty string\n    stdout = proc.stdout if proc.stdout else \"\"\n    stderr = proc.stderr if proc.stderr else \"\"\n    # Return the results as a dictionary\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout, 'Stderr': stderr}", "tokens": ["#", " Convert", " script", " path", " to", " list", " of", " strings", " using", " sh", "lex", ".", "split", "\n", "    ", "script", "_", "path", "_", "list", " =", " sh", "lex", ".", "split", "(", "script", "_", "path", ")", "\n", "    ", "#", " Get", " the", " current", " time", " before", " running", " the", " script", "\n", "    ", "start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "#", " Run", " the", " script", " and", " capture", " its", " std", "out", " and", " st", "derr", "\n", "    ", "proc", " =", " sub", "process", ".", "run", "(", "script", "_", "path", "_", "list", ",", " capture", "_", "output", "=", "True", ",", " encoding", "='", "utf", "-", "8", "')", "\n", "    ", "#", " Get", " the", " current", " time", " after", " running", " the", " script", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "#", " Dec", "ode", " the", " std", "out", " and", " st", "derr", " and", " replace", " any", " None", " values", " with", " an", " empty", " string", "\n", "    ", "stdout", " =", " proc", ".", "stdout", " if", " proc", ".", "stdout", " else", " \"", "\"", "\n", "    ", "stderr", " =", " proc", ".", "stderr", " if", " proc", ".", "stderr", " else", " \"", "\"", "\n", "    ", "#", " Return", " the", " results", " as", " a", " dictionary", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ",", " '", "St", "derr", "':", " st", "derr", "}"], "logprobs": [-0.9389397501945496, -4.202598571777344, -1.3959531784057617, -0.496226042509079, -0.053901784121990204, -1.5796078443527222, -0.5997514724731445, -3.4290268421173096, -2.2857465744018555, -0.020942743867635727, -0.00017581824795342982, -0.7661699056625366, -0.027672331780195236, -0.6341269612312317, -0.0012687736889347434, -0.5169950127601624, -0.027406062930822372, -0.5410445332527161, -0.46145740151405334, -0.182948037981987, -0.0027109559159725904, -0.00846985075622797, -2.3841855067985307e-07, -2.7418097943154862e-06, -9.536697689327411e-06, -0.0035990008618682623, -0.04390915110707283, -8.583032467868179e-06, -4.410734163684538e-06, -0.014133830554783344, -0.013395312242209911, -1.3045778274536133, -0.3001258969306946, -0.7605109214782715, -1.1199232339859009, -0.18323323130607605, -0.8556665778160095, -1.617200255393982, -0.8173486590385437, -0.02008913643658161, -0.1837562471628189, -0.04874822497367859, -0.0005265279905870557, -0.0497153215110302, -0.050468653440475464, -0.0065553621388971806, -0.011970235034823418, -0.03801019862294197, -4.088794958079234e-05, -0.0181919876486063, -7.521823135903105e-05, -0.21036821603775024, -0.004093957599252462, -1.1920928244535389e-07, -0.27464085817337036, -0.002309633418917656, -0.0002699726028367877, -0.015830788761377335, -0.004530641250312328, -0.0013092526933178306, -1.2516897186287679e-05, -8.689979586051777e-05, -0.0007727735792286694, -0.000645429186988622, -0.0003779412363655865, -0.00017581824795342982, -0.0011693552369251847, -4.7801782784517854e-05, -0.002846715273335576, -2.7894584491150454e-05, -0.001978346612304449, -0.06842312961816788, -0.09750320017337799, -0.19593431055545807, -0.0294819213449955, -0.6468846797943115, -2.3877501487731934, -1.2137582302093506, -1.4715797901153564, -1.0737595558166504, -8.368142152903602e-05, -0.03439506143331528, -0.00010096516780322418, -4.410734163684538e-06, -0.11781778931617737, -0.00033098942367359996, -2.398707389831543, -0.011866927146911621, -0.0007383481133729219, -1.3470558769768104e-05, -1.2040065485052764e-05, -0.9389804005622864, -0.014425748027861118, -0.10460110008716583, -1.0609570381348021e-05, -1.764281842042692e-05, -0.002576724160462618, -5.602820692729438e-06, -0.0031152074225246906, -1.0704913139343262, -1.1920928244535389e-07, -9.536738616588991e-07, -0.0015594713622704148, -0.0004266782198101282, -0.8086832761764526, -2.79093861579895, -0.1636933833360672, -0.050553202629089355, -0.0066774566657841206, -0.0011206544004380703, -0.06468239426612854, -0.0034076261799782515, -0.0053811464458703995, -0.04368448629975319, -0.059817489236593246, -0.0010009760735556483, -0.01165497675538063, -0.00016699827392585576, -0.0008314966107718647, -0.41168102622032166, -0.0007469248375855386, -0.0002646096108946949, -0.002857770072296262, -3.838465272565372e-05, -0.0017087158048525453, -1.4781842764932662e-05, -7.033323527139146e-06, -0.00016962042718660086, -0.00027569307712838054, -2.145764938177308e-06, -1.9550132492440753e-05, -1.8954096958623268e-05, -3.421248038648628e-05, -2.884823152271565e-05, -9.894321920000948e-06, -0.0002802217786666006, -2.0861407392658293e-05, -1.3828182090946939e-05, -2.0265558760002023e-06, -0.0002719986077863723, -2.264974000354414e-06, -2.5152843591058627e-05, -1.2159273865108844e-05, -3.862306402879767e-05, -4.887569048150908e-06, -2.729855441430118e-05, -3.2186455882765586e-06, -2.610649426060263e-05, -2.145764938177308e-06, -1.3828182090946939e-05, -9.65590606938349e-06, -4.029192859889008e-05, -0.0399617925286293, -0.017426470294594765, -0.8858014345169067, -0.00041571559268049896, -0.9244464039802551, -0.268606960773468, -0.0004314445541240275, -0.0032793099526315928, -0.00022075122979003936, -0.0001113352773245424, -2.5379602909088135, -3.61251163482666, -1.7828359603881836, -2.1113715171813965, -0.223901629447937, -0.0007801587926223874, -0.5511290431022644, -0.00042429505265317857, -0.0008922410197556019, -0.01895293965935707, -0.00020275443966966122, -0.1973273605108261, -0.05166799947619438, -0.06305588781833649, -2.825220326485578e-05, -6.437280717364047e-06, -0.30850106477737427, -0.00033623288618400693, -4.4225667807040736e-05, -1.8954096958623268e-05, -1.7153701782226562, -0.8195037245750427, -0.004851711913943291, -0.002710361499339342, -5.686121585313231e-05, -0.011758306995034218, -0.00011812942830147222, -0.0012081712484359741, -1.1920922133867862e-06, -0.0014413930475711823, -0.00035506143467500806, -0.0007364421617239714, -1.1920922133867862e-06, -0.0014962679706513882, -0.0001284993631998077, -0.0002094287920044735, -0.00010239553375868127, -8.5588610090781e-05, -0.03276994824409485, -0.04958350956439972, -0.20285697281360626, -0.5630815625190735, -1.3457605838775635, -0.07867489755153656, -0.003961217124015093, -0.0029130426701158285, -0.030680332332849503, -0.00017855956684798002, -0.057337574660778046, -1.2756314277648926, -0.00839455146342516, -0.003299746662378311, -0.002765285549685359, -0.00863863155245781, -3.3378546504536644e-06, -2.3841855067985307e-07, -0.000342191313393414, -0.04565761983394623, -0.0002441108226776123, -0.00030596344731748104, -0.00021181246847845614, -0.0004642124113161117, -1.6689286894688848e-06, -2.3841855067985307e-07, -0.00021610308613162488, -0.0092337466776371, -0.0132425082847476, -1.1324817933200393e-05, -2.658331868587993e-05, -0.00017093151109293103, -0.00264021591283381, -4.768370445162873e-07, -0.006641457322984934, -0.0016298118280246854, -0.0007360848248936236, -0.0002273062855238095, -0.0001776060671545565, -0.0008872386533766985, -1.311301275563892e-06, -0.24204322695732117], "finish_reason": "stop"}], "metrics": {"energy": 988.8263071441652, "energy_per_token": 4.086059120430435, "time": 22.377155, "time_per_token": 0.0924675826446281}}
{"outputs": [{"text": "# Get the current datetime\n    current_time = datetime.now()\n\n    # Set the start time as a string\n    start_time = current_time.strftime('%Y-%m-%d %H:%M:%S')\n\n    # Initialize the response dictionary with the start time\n    response = {'Start Time': start_time}\n\n    # Check if the script path ends with '.R' or '.r'\n    if script_path.endswith('.R') or script_path.endswith('.r'):\n        # If the script path ends with '.R' or '.r', run the R command with the script path\n        # Split the R command into individual arguments using shlex\n        command = shlex.split(f\"R CMD BATCH {script_path}\")\n\n        # Start the subprocess with the split R command\n        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n        # Wait for the process to complete and capture the output\n        stdout, stderr = process.communicate()\n", "tokens": ["#", " Get", " the", " current", " datetime", "\n", "    ", "current", "_", "time", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "#", " Set", " the", " start", " time", " as", " a", " string", "\n", "    ", "start", "_", "time", " =", " current", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "#", " Initialize", " the", " response", " dictionary", " with", " the", " start", " time", "\n", "    ", "response", " =", " {'", "Start", " Time", "':", " start", "_", "time", "}", "\n", "\n", "    ", "#", " Check", " if", " the", " script", " path", " ends", " with", " '", ".", "R", "'", " or", " '", ".", "r", "'", "\n", "    ", "if", " script", "_", "path", ".", "end", "sw", "ith", "('", ".", "R", "')", " or", " script", "_", "path", ".", "end", "sw", "ith", "('", ".", "r", "')", ":", "\n", "        ", "#", " If", " the", " script", " path", " ends", " with", " '", ".", "R", "'", " or", " '", ".", "r", "'", ",", " run", " the", " R", " command", " with", " the", " script", " path", "\n", "        ", "#", " Split", " the", " R", " command", " into", " individual", " arguments", " using", " sh", "lex", "\n", "        ", "command", " =", " sh", "lex", ".", "split", "(", "f", "\"", "R", " CMD", " B", "ATCH", " {", "script", "_", "path", "}\"", ")", "\n", "\n", "        ", "#", " Start", " the", " sub", "process", " with", " the", " split", " R", " command", "\n", "        ", "process", " =", " sub", "process", ".", "P", "open", "(", "command", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "        ", "#", " Wait", " for", " the", " process", " to", " complete", " and", " capture", " the", " output", "\n", "        ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n"], "logprobs": [-0.9389397501945496, -1.4578988552093506, -0.36811643838882446, -0.1293625384569168, -2.832669973373413, -0.6487260460853577, -0.001400919514708221, -2.8138318061828613, -0.008185766637325287, -1.1491187810897827, -0.007675559725612402, -0.013469294644892216, -0.00030501006403937936, -0.009122359566390514, -0.0001752223033690825, -0.17834512889385223, -0.462276816368103, -0.0004457433824427426, -0.009069200605154037, -2.5575103759765625, -0.14474374055862427, -0.20429465174674988, -0.04930814728140831, -1.8492413759231567, -0.7656326293945312, -1.2751235961914062, -2.0855493545532227, -7.426462980220094e-05, -0.021491965278983116, -0.01846587099134922, -0.011754654347896576, -0.13291509449481964, -0.12379943579435349, -7.152555099310121e-07, -3.576278118089249e-07, -0.0025201248936355114, -0.0006414977833628654, -3.075552376685664e-05, -0.5810140371322632, -0.0018958942964673042, -0.014126072637736797, -0.004061664454638958, -0.0016707521863281727, -2.109982233378105e-05, -0.00030596344731748104, -0.0018839959520846605, -0.0014725804794579744, -0.0003738896339200437, -0.0001289761275984347, -0.0007013006834313273, -4.2437604861333966e-05, -0.0023444804828613997, -0.0014340127818286419, -0.009705381467938423, -0.000327652640407905, -0.030118554830551147, -3.5072174072265625, -1.4391075372695923, -4.2961931228637695, -0.10352252423763275, -0.7147589921951294, -0.1609027087688446, -0.01783079095184803, -0.020620843395590782, -0.11636190116405487, -0.00011407678539399058, -0.08685404062271118, -0.11315954476594925, -0.4958534836769104, -0.01572611927986145, -0.010757667943835258, -0.0061956243589520454, -0.006885610055178404, -1.9073468138230965e-06, 0.0, -0.0513954758644104, -0.00017736769223120064, -0.00509487884119153, -0.00044050050200894475, -0.05353167653083801, -2.4186863899230957, -0.07158289104700089, -0.21597671508789062, -0.20386870205402374, -0.8522438406944275, -1.8432936668395996, -0.010097846388816833, -0.7952290177345276, -0.01408152561634779, -1.6085505485534668, -0.004486969672143459, -0.9422532320022583, -0.022050565108656883, -0.015522262081503868, -0.04384879767894745, -0.002338058315217495, -0.07653824239969254, -0.00027497802511788905, -0.018505776301026344, -0.6648051142692566, -1.549708758830093e-05, -4.768370445162873e-07, -0.021651331335306168, -0.24697627127170563, -1.4305104514278355e-06, -9.536738616588991e-07, -0.4174332618713379, -0.0025233353953808546, -0.053793568164110184, -5.400034933700226e-05, -0.007113013882189989, -6.353653589030728e-05, -1.7881377516459906e-06, 0.0, -3.0874729418428615e-05, -7.581423415103927e-05, 0.0, 0.0, -8.892617915989831e-05, -0.0002571013756096363, -0.002453771186992526, -1.0609570381348021e-05, -0.00027366707217879593, -0.0003149013500660658, -0.06590411067008972, -0.13406889140605927, -2.1247503757476807, -0.7057433724403381, -0.11049964278936386, -0.26248738169670105, -0.5275285243988037, -0.0018836389062926173, -0.0110394898802042, -0.0017196642002090812, -0.007240247447043657, -6.794698856538162e-05, -0.00819416157901287, -7.676783570786938e-05, -3.111314072157256e-05, -0.0009213017183355987, -0.003268497297540307, -0.018471838906407356, -1.0024102926254272, -0.19311819970607758, -0.7652359008789062, -3.288924217224121, -0.32863911986351013, -0.09446302056312561, -0.1402270346879959, -0.09129052609205246, -1.0843288898468018, -0.006455638911575079, -2.435154438018799, -1.4959622621536255, -0.02026531472802162, -1.1119434833526611, -0.0756068080663681, -0.5429394245147705, -1.8229260444641113, -0.22152958810329437, -0.2903575897216797, -0.008181864395737648, -3.0517112463712692e-05, -1.3967299461364746, -0.0018942285096272826, -1.57712984085083, -0.3817204236984253, -0.04047422483563423, -4.768370445162873e-07, -6.318072337307967e-06, -4.2676016164477915e-05, -0.26120686531066895, -0.042251672595739365, -0.8753514885902405, -0.020467855036258698, -1.0077948570251465, -0.007192906457930803, -0.0007402540650218725, -0.3917876183986664, -0.01741393655538559, -3.242440288886428e-05, -1.3351351299206726e-05, -0.050497666001319885, -0.0030134764965623617, -0.007016424089670181, -0.6745119690895081, -0.023364588618278503, -0.034951101988554, -3.0334084033966064, -0.18453167378902435, -0.8881520628929138, -0.0016842002514749765, -1.2263871431350708, -0.08432389050722122, -2.9034066200256348, -1.3455145359039307, -0.0030753957107663155, -0.04353555664420128, -0.00017772526189219207, -0.4356198310852051, -0.0021586944349110126, -0.00013791563105769455, -4.410734163684538e-06, -3.6954811548639555e-06, -0.11672411113977432, -1.3708974620385561e-05, -7.402622577501461e-05, -0.036435097455978394, -0.006426975596696138, -0.0651080459356308, -0.0009882333688437939, -0.00018976318824570626, -3.969590397900902e-05, -5.960462772236497e-07, -1.1920922133867862e-06, -3.576278118089249e-07, 0.0, 0.0, -0.00182235985994339, -0.00025722055579535663, -2.50339189733495e-06, -1.5497195136049413e-06, -7.986990567587782e-06, 0.0, -2.3841855067985307e-07, -0.012640357948839664, 0.0, 0.0, -0.2725311815738678, -0.00024327656137757003, -0.04071929678320885, -0.012480138801038265, -0.0036548261996358633, -0.45496076345443726, -0.0012311505852267146, -0.0004689785710070282, -0.35498934984207153, -0.0006568658282049, -0.7292563915252686, -0.522443950176239, -1.093597173690796, -0.21557743847370148, -0.4102366268634796, -0.05952111631631851, -7.56950321374461e-05, -0.03621288761496544, -0.04827557131648064, -6.937739817658439e-05, -2.145764938177308e-06, -5.411955135059543e-05, -8.010543388081715e-05, -1.0728830375228426e-06, -1.1920922133867862e-06, -2.002696055569686e-05, -9.881961887003854e-05, -0.0007937379996292293], "finish_reason": "length"}], "metrics": {"energy": 1017.868377044678, "energy_per_token": 3.9760483478307735, "time": 23.36167, "time_per_token": 0.0912565234375}}
{"outputs": [{"text": "start_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    # Construct the command to run the R script and read its output\n    cmd = f\"Rscript {script_path}\"\n    print(cmd)\n    process = subprocess.Popen(shlex.split(cmd), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n\n    # Decode the output using utf-8\n    decoded_stdout = stdout.decode('utf-8')\n    decoded_stderr = stderr.decode('utf-8')\n\n    end_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': decoded_stdout,\n        'Stderr': decoded_stderr\n    }", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "#", " Construct", " the", " command", " to", " run", " the", " R", " script", " and", " read", " its", " output", "\n", "    ", "cmd", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "    ", "print", "(", "cmd", ")", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "cmd", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "\n", "    ", "#", " Dec", "ode", " the", " output", " using", " utf", "-", "8", "\n", "    ", "dec", "oded", "_", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "dec", "oded", "_", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", "\n", "        ", "'", "St", "derr", "':", " dec", "oded", "_", "stderr", "\n", "    ", "}", "\n", "\n", "if"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -1.257603645324707, -0.0010119322687387466, -0.014530671760439873, -0.006791721563786268, -0.0011264891363680363, -9.536697689327411e-06, -0.00025281094713136554, -0.0009663202799856663, -0.0014647241914644837, -0.0005548844928853214, -0.00013171759201213717, -0.0012400802224874496, -4.2199197196168825e-05, -0.0031648806761950254, -0.04408574476838112, -1.356334924697876, -0.0011699505848810077, -0.558349072933197, -3.1833324432373047, -0.08141861110925674, -0.5682899951934814, -0.5250628590583801, -0.22424863278865814, -0.05407131090760231, -0.11739428341388702, -0.048123572021722794, -3.401116371154785, -4.291795253753662, -0.7613476514816284, -0.1448533833026886, -0.16705575585365295, -0.0037649241276085377, -0.9698805212974548, -0.12076570093631744, -0.6735397577285767, -0.335248738527298, -0.14389914274215698, -0.02400500886142254, -0.2146996408700943, -0.48953777551651, -5.221230458118953e-05, -2.7417760065873154e-05, -0.03057258017361164, -0.024521611630916595, -0.10182614624500275, -2.76570463180542, -0.05774059519171715, -1.6174907684326172, -0.010248654522001743, -0.07555939257144928, -0.21174180507659912, -1.6508879661560059, -0.009572203271090984, -0.0005925330333411694, -7.748573807475623e-06, -1.537788011773955e-05, -0.18831898272037506, -9.786603914108127e-05, -0.0009112972766160965, -0.09319949150085449, -6.318072337307967e-06, -3.814689989667386e-06, -0.00014554394874721766, -0.00015114595589693636, -0.0021052833180874586, -0.012283509597182274, -0.0004836343287024647, -0.1537332534790039, -0.0014267513761296868, -0.0017080017132684588, -4.577531944960356e-05, -2.3841855067985307e-07, -1.7881377516459906e-06, -2.3841855067985307e-07, 0.0, 0.0, -0.006816348992288113, -0.0023112983908504248, -2.3841855067985307e-07, -6.568216485902667e-05, -5.936446541454643e-05, -1.1920928244535389e-07, -8.344646857949556e-07, -0.012935653328895569, 0.0, 0.0, -0.06352552771568298, -0.0030125256162136793, -0.143877774477005, -0.031375933438539505, -0.05353902280330658, -0.0006619884516112506, -0.00021145492792129517, -0.0002150304353563115, -0.0012811556225642562, -2.622600959512056e-06, -1.8000440832111053e-05, -0.00015639036428183317, -0.0001821352052502334, -0.00850436557084322, -0.23083218932151794, -0.000386640167562291, -0.6442237496376038, -0.30236464738845825, -0.0007783720502629876, -0.3551117181777954, -0.7730258703231812, -3.902759075164795, -1.4579830169677734, -0.012431161478161812, -0.0005856229108758271, -1.0932657718658447, -0.0003406421164982021, -1.204569697380066, -0.012096263468265533, -0.00045313104055821896, -0.010818048380315304, -0.012118522077798843, -0.00846583116799593, -2.3841855067985307e-07, -9.989239333663136e-05, -0.0002760506176855415, -0.07821056246757507, -0.0005041282274760306, -0.0016233850037679076, -4.172238186583854e-05, -0.002221618080511689, -0.04921429976820946, -0.00025054652360267937, -0.0051137362606823444, -1.1920928244535389e-07, -4.768370445162873e-07, -0.00021634146105498075, -0.00012003655137959868, -0.001212100381962955, -1.1920928244535389e-07, -1.7165990357170813e-05, -8.344646857949556e-07, -0.0002348147245356813, -1.0013530300057027e-05, -1.6569954823353328e-05, -9.536738616588991e-07, -2.276871418871451e-05, -0.0038704974576830864, -0.024969233199954033, -8.427741704508662e-05, -0.529996395111084, -1.8000440832111053e-05, -2.109982233378105e-05, -0.00022706791060045362, -0.0004138090298511088, -4.0531076592742465e-06, -3.611976353568025e-05, -7.867782187531702e-06, -6.818538531661034e-05, -6.556489552167477e-06, -2.3841855067985307e-07, -0.0005332001601345837, -3.135155202471651e-05, -1.645074735279195e-05, -0.00021145492792129517, -2.0503786799963564e-05, -2.2411095415009186e-05, -0.002474700566381216, -3.2066785934148356e-05, -8.583032467868179e-06, -3.4450891689630225e-05, -4.172316494077677e-06, -4.5060096454108134e-05, -4.529942543740617e-06, -6.556489552167477e-06, -0.0001517419150331989, -0.13589486479759216, -0.00033766290289349854, -0.8662335276603699, -0.4395809471607208, -0.007301313802599907, -0.018784604966640472, -0.04199623316526413, -0.0061767869628965855, -0.002486472949385643, -0.0016797969583421946, -0.006580587476491928, -1.0728830375228426e-06, 0.0, -0.0004353767435532063, -0.0015564957866445184, -0.0002615109842736274, -0.00010322991875000298, -0.0002076410164590925, -0.00021431533969007432, -0.0004440752090886235, -0.000842692912556231, -1.1920928244535389e-07, 0.0, -9.63164638960734e-05, -5.245071224635467e-05, -0.0003766304289456457, -0.0011201781453564763, -0.0116501459851861, -1.6927575416048057e-05, -4.3987260141875595e-05, -0.0005324853118509054, -0.005146232433617115, 0.0, -2.145764938177308e-06, -5.8412379075889476e-06, -0.03026290237903595, -0.0017160940915346146, -0.0001711698860162869, -0.000192504478036426, -0.0003182381624355912, -0.0001528146385680884, -0.00017581824795342982, -0.0006814065272919834, 0.0, -2.622600959512056e-06, -3.0040289857424796e-05, -0.053714826703071594, -0.006368698552250862, -0.267103374004364, -0.07032854110002518, -0.044802747666835785, -1.0238280296325684], "finish_reason": "stop"}], "metrics": {"energy": 969.8114037723537, "energy_per_token": 4.126857037329165, "time": 21.455723, "time_per_token": 0.0913009489361702}}
{"outputs": [{"text": "start_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    try:\n        # Call the R script using subprocess and capture the output\n        result = subprocess.run(['Rscript', '--vanilla', script_path], check=True, capture_output=True)\n\n        # Decode the output as UTF-8\n        decoded_stdout = result.stdout.decode('utf-8')\n        decoded_stderr = result.stderr.decode('utf-8')\n\n    except subprocess.CalledProcessError as e:\n        decoded_stderr = e.stderr.decode('utf-8')\n        decoded_stdout = e.output.decode('utf-8')\n\n    end_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n    # Return the dictionary with start time, end time, stdout, and stderr\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': decoded_stdout, 'Stderr': decoded_", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Call", " the", " R", " script", " using", " sub", "process", " and", " capture", " the", " output", "\n", "        ", "result", " =", " sub", "process", ".", "run", "(['", "R", "script", "'", ",", " '", "--", "van", "illa", "'", ",", " script", "_", "path", "]", ",", " check", "=", "True", ",", " capture", "_", "output", "=", "True", ")", "\n", "\n", "        ", "#", " Dec", "ode", " the", " output", " as", " U", "TF", "-", "8", "\n", "        ", "dec", "oded", "_", "stdout", " =", " result", ".", "stdout", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "dec", "oded", "_", "stderr", " =", " result", ".", "stderr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "except", " sub", "process", ".", "Called", "Process", "Error", " as", " e", ":", "\n", "        ", "dec", "oded", "_", "stderr", " =", " e", ".", "stderr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "dec", "oded", "_", "stdout", " =", " e", ".", "output", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "    ", "#", " Return", " the", " dictionary", " with", " start", " time", ",", " end", " time", ",", " std", "out", ",", " and", " st", "derr", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", " '", "St", "derr", "':", " dec", "oded", "_"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -1.257603645324707, -0.0010119322687387466, -0.014530671760439873, -0.006791721563786268, -0.0011264891363680363, -9.536697689327411e-06, -0.00025281094713136554, -0.0009663202799856663, -0.0014647241914644837, -0.0005548844928853214, -0.00013171759201213717, -0.0012400802224874496, -4.2199197196168825e-05, -0.0031648806761950254, -0.04408574476838112, -1.356334924697876, -0.0011699505848810077, -2.9478564262390137, -0.00034814971149899065, -0.0014721043407917023, -0.012613872066140175, -0.6331908106803894, -3.9760427474975586, -0.4111140966415405, -0.17451618611812592, -0.6410614848136902, -0.3850392997264862, -0.2841140329837799, -0.0003880701260641217, -1.0372105836868286, -0.9928267002105713, -0.9934541583061218, -0.28005167841911316, -0.11703295260667801, -0.0016071987338364124, -3.0422205924987793, -0.0014598437119275331, -0.00047672350774519145, -9.298280929215252e-06, -3.0517112463712692e-05, -0.05175097659230232, -0.5916414260864258, -0.02362762950360775, -0.02527846209704876, -0.003763380227610469, -0.0005270045949146152, -3.1942832469940186, -0.022106535732746124, -0.047302644699811935, -2.0265558760002023e-06, -0.018351644277572632, -0.0025471169501543045, -0.1337253302335739, -0.0004021312633994967, -6.472854875028133e-05, -0.012331669218838215, -0.00038068200228735805, -2.5310468673706055, -0.009992692619562149, -0.017097225412726402, -0.0006245807744562626, -1.100614309310913, -3.576278118089249e-07, -1.549708758830093e-05, -5.8887653722194955e-05, -0.00014780859055463225, -0.1229429617524147, -0.0036891514901071787, -0.6122148633003235, -0.28479260206222534, -0.26205918192863464, -0.18075983226299286, -0.0004889961564913392, -0.2576756775379181, -0.6766834259033203, -2.229109764099121, -1.171690583229065, -4.172238186583854e-05, -0.003521433798596263, -0.000747877755202353, -0.42982080578804016, -0.0004748170613311231, -2.2097628116607666, -0.005372490733861923, -0.0014948395546525717, -0.03969969227910042, -0.003569661406800151, -0.004714800976216793, -1.6689286894688848e-06, -3.4570634852570947e-06, -0.0002269487304147333, -0.00021860594279132783, -0.02463722787797451, -0.011972237378358841, -0.0031377864070236683, -4.303362584323622e-05, -0.004594958852976561, -0.044466886669397354, -0.0020270056556910276, -0.0013658013194799423, -9.536738616588991e-07, -3.576278118089249e-07, -7.915183232398704e-05, -6.735097849741578e-05, -0.0002953569928649813, -1.311301275563892e-06, -1.2516897186287679e-05, -9.536697689327411e-06, -8.344646857949556e-07, -9.476689592702314e-05, -3.2186455882765586e-06, -1.9907753085135482e-05, 0.0, -3.9457496313843876e-05, -0.0007870675181038678, -0.12782759964466095, -0.7874699831008911, -0.006988131906837225, -0.15206278860569, -1.728519782773219e-05, -1.4066597032069694e-05, -0.000386640167562291, -1.1920928244535389e-07, -2.264974000354414e-06, -0.00662606256082654, -0.15495866537094116, -5.6980417866725475e-05, -0.002955119125545025, -0.002892003860324621, -1.3226341009140015, -5.8412379075889476e-06, -1.2278481335670222e-05, -1.2052388191223145, -0.0012421043356880546, -0.1749373972415924, -0.0015888698399066925, -0.26959657669067383, -0.004821578972041607, -0.00018165845540352166, -0.0022762122098356485, -0.00012003655137959868, -0.0001280225842492655, -4.410734163684538e-06, -4.9232225137529895e-05, -0.08810989558696747, -0.2396397739648819, -0.1435566544532776, -1.1920922133867862e-06, -1.7881377516459906e-06, -0.005266127642244101, -0.0016607552533969283, -1.6234383583068848, -0.001178047270514071, -1.938788652420044, -0.001986198825761676, -4.577531944960356e-05, -0.0012029323261231184, -5.0424259825376794e-05, -0.00017963226127903908, -3.576278118089249e-07, -9.595887240720913e-05, -0.03434426337480545, -0.05126796290278435, -0.005297670140862465, -0.4698691666126251, -1.9430925021879375e-05, -2.8967437174287625e-05, -0.00028939827461726964, -0.00020597243565134704, -7.867782187531702e-06, -3.814624506048858e-05, -1.0013530300057027e-05, -4.565611743601039e-05, -1.0967194612021558e-05, 0.0, -0.0003554189461283386, -0.00010168035078095272, -1.0967194612021558e-05, -0.00013743886665906757, -1.883488948806189e-05, -3.099436753473128e-06, -8.344646857949556e-07, -3.290122185717337e-05, -6.198863957251888e-06, -2.109982233378105e-05, -3.6954811548639555e-06, -2.47952248173533e-05, -2.0265558760002023e-06, -1.7046782886609435e-05, -0.0001627074379939586, -0.048952117562294006, -0.0004164305282756686, -0.9048710465431213, -0.7998270392417908, -0.3543885052204132, -3.1344077587127686, -0.5859441757202148, -1.079589605331421, -0.13144142925739288, -0.0032298800069838762, -0.003447899827733636, -0.0005128260818310082, -0.0017322786152362823, -0.21110041439533234, -0.00014673586701974273, -0.02197534777224064, -0.008025423623621464, -0.0004898302140645683, -0.00023266946664080024, -0.011788113974034786, -0.0010126468259841204, -0.06034049764275551, -1.3865834474563599, -0.005926891695708036, -0.003993513528257608, -0.0017606009496375918, -0.0031425398774445057, -1.311301275563892e-06, 0.0, -0.0004107108688913286, -0.06732017546892166, -0.0002873722987715155, -0.00022754464589525014, -0.00018463814922142774, -0.0002985746832564473, -1.1920922133867862e-06, 0.0, -0.00039152585668489337, -0.009875724092125893, -0.008021166548132896, -7.939023635117337e-05, -5.590759246842936e-05, -0.0002592465898487717, -0.004762496333569288, 0.0, -2.50339189733495e-06, -0.00034278715611435473, -0.024850746616721153, -0.002151676220819354, -0.0006162413046695292, -0.00042381841922178864, -0.00010156115604331717, -0.0014222278259694576, -6.9141146923357155e-06, -1.7881377516459906e-06], "finish_reason": "length"}], "metrics": {"energy": 1029.275432209015, "energy_per_token": 4.020607157066465, "time": 23.364082, "time_per_token": 0.0912659453125}}
{"outputs": [{"text": "try:\n        # Start the script execution\n        start_time = datetime.now()\n\n        # Execute the script\n        rscript = shlex.split(f\"Rscript {script_path}\")\n        process = subprocess.run(rscript, capture_output=True, text=True)\n\n        # Retrieve the output and error\n        stdout = process.stdout.strip()\n        stderr = process.stderr.strip()\n\n        # End the script execution\n        end_time = datetime.now()\n\n        # Convert start and end times to a standard format (e.g., string)\n        start_time_str = start_time.strftime('%Y-%m-%d %H:%M:%S')\n        end_time_str = end_time.strftime('%Y-%m-%d %H:%M:%S')\n\n        # Return the results in a dictionary\n        result = {\n            'Start Time': start_time_str,\n            'End Time': end_time_str,\n            'Stdout': stdout if stdout else \"No output\",\n            'Stderr", "tokens": ["try", ":", "\n", "        ", "#", " Start", " the", " script", " execution", "\n", "        ", "start", "_", "time", " =", " datetime", ".", "now", "()", "\n", "\n", "        ", "#", " Exec", "ute", " the", " script", "\n", "        ", "r", "script", " =", " sh", "lex", ".", "split", "(", "f", "\"", "R", "script", " {", "script", "_", "path", "}\"", ")", "\n", "        ", "process", " =", " sub", "process", ".", "run", "(", "r", "script", ",", " capture", "_", "output", "=", "True", ",", " text", "=", "True", ")", "\n", "\n", "        ", "#", " Ret", "rieve", " the", " output", " and", " error", "\n", "        ", "stdout", " =", " process", ".", "stdout", ".", "strip", "()", "\n", "        ", "stderr", " =", " process", ".", "stderr", ".", "strip", "()", "\n", "\n", "        ", "#", " End", " the", " script", " execution", "\n", "        ", "end", "_", "time", " =", " datetime", ".", "now", "()", "\n", "\n", "        ", "#", " Convert", " start", " and", " end", " times", " to", " a", " standard", " format", " (", "e", ".", "g", ".", ",", " string", ")", "\n", "        ", "start", "_", "time", "_", "str", " =", " start", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "        ", "end", "_", "time", "_", "str", " =", " end", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "\n", "        ", "#", " Return", " the", " results", " in", " a", " dictionary", "\n", "        ", "result", " =", " {", "\n", "            ", "'", "Start", " Time", "':", " start", "_", "time", "_", "str", ",", "\n", "            ", "'", "End", " Time", "':", " end", "_", "time", "_", "str", ",", "\n", "            ", "'", "St", "d", "out", "':", " std", "out", " if", " std", "out", " else", " \"", "No", " output", "\"", ",", "\n", "            ", "'", "St", "derr"], "logprobs": [-3.461005926132202, -0.0008905735448934138, -0.003344777040183544, -0.025399338454008102, -0.8983837962150574, -2.276719808578491, -0.6988555192947388, -0.6983047723770142, -1.6863842010498047, -0.3259133994579315, -0.0015545914648100734, -0.41542181372642517, -0.0921303927898407, -0.014236786402761936, -0.005643743555992842, -0.03250434249639511, -0.00013302871957421303, -0.027288561686873436, -6.925819616299123e-05, -1.1930623054504395, -1.2033300399780273, -0.0012503195321187377, -0.04634561389684677, -2.1727025508880615, -0.003997075371444225, -0.044691603630781174, -1.4378809928894043, -1.1927821636199951, -0.0015751824248582125, -3.9769482612609863, -1.6144065856933594, -0.7233993411064148, -1.4931108951568604, -3.0636318115284666e-05, -3.3378044463461265e-05, -0.5608632564544678, -0.1368185132741928, -0.19419549405574799, -0.37453150749206543, -0.09678514301776886, -0.022998731583356857, -0.13067641854286194, -0.005415530875325203, -3.707340147229843e-05, -1.0967194612021558e-05, -0.014864991419017315, -0.007508864160627127, -0.07522286474704742, -0.05553319677710533, -1.1434091329574585, -0.008431670255959034, -0.00030417583184316754, -4.291525328881107e-06, -9.775113539944869e-06, -1.0871062278747559, -0.0006323245470412076, -0.06896580010652542, -8.999896090244874e-05, -0.004207568243145943, -0.9763325452804565, 0.0, -4.6491513785440475e-06, -0.006126907654106617, -0.0005295066512189806, -0.18720893561840057, -0.12459097802639008, -0.0008183944155462086, -0.001444369088858366, -0.09675895422697067, -0.013551503419876099, -0.10389382392168045, -0.001573873101733625, -0.011869989335536957, -4.065832614898682, -0.015842756256461143, -0.45618289709091187, -1.3897676467895508, -0.9202178716659546, -0.9222844243049622, -1.179083228111267, -0.00025912740966305137, -0.13152839243412018, -0.11401433497667313, -0.0035125245340168476, -5.960446742392378e-06, -1.3947389561508317e-05, -1.7122256755828857, -0.3815115690231323, -0.005849149543792009, -0.09705271571874619, -0.0010689741466194391, -0.0015241208020597696, -6.031808152329177e-05, -0.00033766290289349854, -1.0728830375228426e-06, -4.088794958079234e-05, -0.0066581545397639275, -0.000102037942269817, -2.312633478140924e-05, -0.0013316344702616334, -0.019208841025829315, -0.00197001826018095, -0.013542801141738892, -0.3749661147594452, -0.03334154188632965, -0.047572534531354904, -0.0014937683008611202, -0.03668070212006569, -6.711257447022945e-05, -0.0012542485492303967, -2.5033637939486653e-05, -2.4914430468925275e-05, -0.00011062010162277147, -0.00014184899919200689, -2.729855441430118e-05, -6.16293036728166e-05, -3.933898824470816e-06, -0.00014280252798926085, -0.03750040754675865, -0.06157492846250534, -0.1419251412153244, -2.8936069011688232, -1.7877237796783447, -0.47762641310691833, -0.0006152882124297321, -0.2912601828575134, -0.01085908617824316, -2.701768159866333, -3.311237335205078, -0.42811697721481323, -1.958289384841919, -0.10607849061489105, -2.777537883957848e-05, -0.0006727101281285286, -0.00020358874462544918, -0.009131809696555138, -3.496894121170044, -0.19595548510551453, -0.03098456561565399, -0.0014300844632089138, -0.09701701253652573, -0.009642690420150757, -0.014723218977451324, -0.16632811725139618, -0.059504829347133636, -0.0006257721688598394, -0.08802234381437302, -1.7881377516459906e-06, -4.768370445162873e-07, -0.00035363141796551645, -0.003634396940469742, -1.549708758830093e-05, -0.9851108193397522, -0.000276765669696033, -0.005640306044369936, -0.004319385625422001, -0.0010512308217585087, -2.0265373677830212e-05, -1.0967194612021558e-05, -0.0005876483046449721, -0.0008735416340641677, -0.00027891082572750747, -6.460934673668817e-05, -0.0012467476772144437, -5.519237674889155e-05, -0.003722169203683734, -0.0074442606419324875, -0.00012838016846217215, -0.0002762889489531517, -3.3378546504536644e-06, -2.50339189733495e-06, -4.339123915997334e-05, -7.4741430580616e-05, -0.0007063039811328053, -0.0008740180637687445, -1.7881377516459906e-06, 0.0, -1.7523612768854946e-05, -1.0013530300057027e-05, -1.1920928244535389e-07, -0.0001382732152706012, -4.005352093372494e-05, -1.2040065485052764e-05, -6.842378934379667e-05, -1.6689286894688848e-06, -1.9788545614574105e-05, 0.0, -1.3708974620385561e-05, -5.8412379075889476e-06, -2.861018856492592e-06, -5.483612312673358e-06, -3.71926071238704e-05, -1.1920922133867862e-06, -1.1086402082582936e-05, -5.578839045483619e-05, -0.0129923727363348, -0.017002182081341743, -0.18203356862068176, -0.5462052822113037, -0.21358415484428406, -0.6397659182548523, -2.595081329345703, -0.043580636382102966, -0.013553855940699577, -0.06402178108692169, -0.00043561504571698606, -2.418177604675293, -0.07380511611700058, -0.0521358847618103, -0.0006677066558040679, -0.009368505328893661, -0.02406785450875759, -0.007610138971358538, -0.002464830409735441, -0.001179118873551488, -0.0022198338992893696, -1.1920928244535389e-07, 0.0, -0.0018785225693136454, -2.264974000354414e-06, -0.00023195437097456306, -0.001593511551618576, -0.00014602071314584464, -9.536288416711614e-05, -0.00019834458362311125, -7.390703103737906e-05, -0.0006289887824095786, -0.0006479309522546828, -2.3841855067985307e-07, 0.0, -8.749579137656838e-05, -2.3841855067985307e-07, -0.004952188581228256, -9.667406266089529e-05, -0.0017585780005902052, -0.001618743408471346, -0.009790142998099327, -5.030505417380482e-05, -4.7205765440594405e-05, -0.0004539651272352785, -0.00300717749632895, -3.576278118089249e-07, -2.9910573959350586, -0.022424694150686264, -1.1920928244535389e-07, -0.046537481248378754, -1.2492079734802246, -0.17236199975013733, -0.5603356957435608, -0.18160508573055267, -0.0027063193265348673, -0.027686594054102898, -0.0006715188501402736, -0.0010954099707305431, -0.0004042761866003275, -0.00018070495571009815], "finish_reason": "length"}], "metrics": {"energy": 1080.7709650707236, "energy_per_token": 4.221761582307514, "time": 23.614544, "time_per_token": 0.0922443125}}
{"outputs": [{"text": "start_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    args = shlex.split(f'Rscript --vanilla {script_path}')\n    process = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    end_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout.decode(), 'Stderr': stderr.decode()}", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "f", "'", "R", "script", " --", "van", "illa", " {", "script", "_", "path", "}", "')", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "args", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ".", "decode", "()", ",", " '", "St", "derr", "':", " st", "derr", ".", "decode", "()}"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -1.257603645324707, -0.0010119322687387466, -0.014530671760439873, -0.006791721563786268, -0.0011264891363680363, -9.536697689327411e-06, -0.00025281094713136554, -0.0009663202799856663, -0.0014647241914644837, -0.0005548844928853214, -0.00013171759201213717, -0.0012400802224874496, -4.2199197196168825e-05, -0.0031648806761950254, -0.04408574476838112, -0.2985479533672333, -3.73313570022583, -0.025425603613257408, -0.16774234175682068, -1.0609570381348021e-05, -2.062299427052494e-05, -0.000607782625593245, -0.22413240373134613, -0.10542439669370651, -0.8804950714111328, -0.046976152807474136, -0.04694146290421486, -2.496241331100464, -0.18386179208755493, -2.145764938177308e-06, -0.24693483114242554, -0.014148992486298084, -3.325883881188929e-05, -6.318072337307967e-06, -0.012935653328895569, -0.01283150352537632, -0.03638153150677681, -0.08172328025102615, -1.1657676696777344, -0.0060963393189013, -0.0005162813467904925, -8.106198947643861e-06, -1.0371154530730564e-05, -0.2508333623409271, -1.4066597032069694e-05, -0.0002668739762157202, -0.11030247807502747, -0.027104103937745094, -0.03379318490624428, -0.0013323486782610416, -0.002360298065468669, -9.214453893946484e-05, -2.3841855067985307e-07, -1.311301275563892e-06, -3.576278118089249e-07, 0.0, 0.0, -0.003752216463908553, -0.0005914607318118215, -1.1920928244535389e-07, -4.768258077092469e-05, -3.957670196541585e-05, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.006082713603973389, 0.0, 0.0, -0.1113138347864151, -0.0010121704544872046, -0.059744611382484436, -0.03218140825629234, -0.04017355293035507, -0.0006472161621786654, -0.00022146634000819176, -0.00015293381875380874, -0.0013579442165791988, -2.861018856492592e-06, -1.3708974620385561e-05, -0.0017202593153342605, -0.0005416594794951379, -0.005128680262714624, -0.03553111478686333, -0.4326826333999634, -3.4689302992774174e-05, -4.386805812828243e-05, -0.00033539868309162557, -0.00030870441696606576, -5.364403477869928e-06, -3.1470757676288486e-05, -1.156323378381785e-05, -2.9444261599564925e-05, -1.2159273865108844e-05, -1.1920928244535389e-07, -0.0002890407631639391, -4.4225667807040736e-05, -1.3112935448589269e-05, -2.407998726994265e-05, -8.344646857949556e-07, -4.529942543740617e-06, -2.3841855067985307e-07, -3.0397906812140718e-05, -2.622600959512056e-06, -1.3828182090946939e-05, -4.172316494077677e-06, -1.9430925021879375e-05, -3.814689989667386e-06, -2.2053474822314456e-05, -0.00010263393050990999, -0.3297676146030426, -0.7437505722045898, -0.8405041098594666, -0.006866667419672012, -0.003644492942839861, -0.003507772693410516, -0.007972325198352337, -4.768360213347478e-06, -2.3841855067985307e-07, -0.0006183857913129032, -0.10712175816297531, -0.0001811817055568099, -0.0004409771354403347, -0.00021872512297704816, -0.0007902836659923196, -2.264974000354414e-06, -1.1920928244535389e-07, -0.00042798896902240813, -0.0586949922144413, -0.01081050094217062, -1.0371154530730564e-05, -5.9960475482512265e-05, -0.000456109904916957, -0.005732761695981026, -1.07287787614041e-05, -0.010483906604349613, -0.0003718638326972723, -0.516045331954956, -0.023498620837926865, -0.004692494869232178, -0.0002673506969586015, -8.260862523457035e-05, -0.00014435203047469258, -0.0008435266790911555, -3.576278118089249e-07, -9.7508447652217e-05, -6.6756979322235566e-06, -0.005769623443484306], "finish_reason": "stop"}], "metrics": {"energy": 668.0775405445102, "energy_per_token": 4.25527095888223, "time": 14.406365, "time_per_token": 0.09176028662420381}}
{"outputs": [{"text": "start = datetime.now()\n    r_call = subprocess.Popen([shlex.quote(\"rscript\"), shlex.quote(script_path)], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = r_call.communicate()\n    end = datetime.now()\n\n    return {\n        'Start Time': start.strftime('%Y-%m-%d %H:%M:%S'),\n        'End Time': end.strftime('%Y-%m-%d %H:%M:%S'),\n        'Stdout': stdout.decode('utf-8'),\n        'Stderr': stderr.decode('utf-8')\n    }", "tokens": ["start", " =", " datetime", ".", "now", "()", "\n", "    ", "r", "_", "call", " =", " sub", "process", ".", "P", "open", "([", "sh", "lex", ".", "quote", "(", "\"", "r", "script", "\"", ")", ",", " sh", "lex", ".", "quote", "(", "script", "_", "path", ")]", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " r", "_", "call", ".", "commun", "icate", "()", "\n", "    ", "end", " =", " datetime", ".", "now", "()", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "        ", "'", "End", " Time", "':", " end", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "}<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -2.231130599975586, -0.027102595195174217, -0.00013052565918769687, -0.045937176793813705, -0.0003400462737772614, -0.6480348706245422, -0.1603364199399948, -4.031553268432617, -0.24150535464286804, -3.4480979442596436, -0.024468449875712395, -3.381108283996582, -0.0005433275364339352, -0.00025090406415984035, -0.24907229840755463, -2.407998726994265e-05, -1.381940245628357, -2.498455286026001, -0.003294162219390273, -4.851700214203447e-05, -0.0077403848990798, -0.23259051144123077, -0.981727123260498, -2.745513916015625, -0.5215572118759155, -0.18222980201244354, -0.011897201649844646, -0.009302250109612942, -0.24123884737491608, -5.960462772236497e-07, -1.2040065485052764e-05, -7.510157047363464e-06, -0.0013569919392466545, -0.07874729484319687, -0.00021455370006151497, -5.07818695041351e-05, -0.01404355838894844, -0.00968023482710123, -0.347052663564682, -0.016282903030514717, -0.025349710136651993, -0.0008663953049108386, -1.1920922133867862e-06, -4.172316494077677e-06, -1.537788011773955e-05, 0.0, -1.1920928244535389e-07, -0.00744272256270051, -0.00808135699480772, -2.9802276912960224e-06, -0.0007057083421386778, -0.0005547653418034315, -1.1920928244535389e-07, -3.576272320060525e-06, -0.011800837703049183, 0.0, 0.0, -0.09451877325773239, -0.01314756739884615, -0.03171459957957268, -0.27398374676704407, -0.06671036779880524, -0.004033051431179047, -0.0018623403739184141, -0.0014243705663830042, -0.028134772554039955, -8.749579137656838e-05, -4.768360213347478e-06, -7.617183291586116e-05, -0.00033909291960299015, -8.05822346592322e-05, -0.002577675273641944, -0.01061495766043663, -0.02288525551557541, -0.749022364616394, -0.0021327624563127756, -0.000788258679676801, -3.266281055402942e-05, -0.0001323135511483997, -6.842378934379667e-05, -0.00036745471879839897, -1.1893545389175415, -0.0004960260121151805, -0.7410750985145569, -0.36743611097335815, -0.01685531996190548, -0.05329424515366554, -0.32103702425956726, -0.008076981641352177, -0.004609791561961174, -0.008909708820283413, -0.33587905764579773, -0.139529287815094, -0.010908965021371841, -0.00017820201173890382, -0.6218127608299255, -0.0004011779965367168, -0.01679752953350544, -0.014558868482708931, -0.0039854394271969795, -3.6477376852417365e-05, -0.0001530530134914443, -0.0025849281810224056, -0.00375459180213511, -0.0004390706308186054, -0.00047505536349490285, -0.004417660646140575, -0.0001774868869688362, -0.001988816075026989, -0.0013297295663505793, -0.0034323371946811676, -0.0007524043321609497, -0.00022682955022901297, -0.00024780540843494236, -0.0003781795676331967, -0.0014969820622354746, -0.003968816716223955, -4.7444173105759546e-05, -2.706014311115723e-05, -9.536738616588991e-07, -0.000399033073335886, -3.40932747349143e-05, -1.8000440832111053e-05, -9.798523387871683e-05, -3.2066785934148356e-05, -3.3854863431770355e-05, -1.5497195136049413e-06, -8.523101132595912e-05, -1.8358061424805783e-05, -2.8132995794294402e-05, -8.22540732769994e-06, -9.989239333663136e-05, -7.271740287251305e-06, -2.8132995794294402e-05, -0.0006563892820850015, -0.00027938754647038877, -0.0010305099422112107, -0.0063277133740484715, -0.01838991604745388, -3.421248038648628e-05, -0.00022516099852509797, -0.0013824678026139736, -0.028869321569800377, -2.9802276912960224e-06, -0.003675611689686775, -0.002211150946095586, -0.5812198519706726, -0.025424323976039886, -0.01680772751569748, -0.0006893880781717598, -0.039074864238500595, -0.15395177900791168, -0.009548233821988106, -0.00019560330838430673, -0.0004236992390360683, -0.00044216870446689427, -0.00019751029321923852, -0.000262106885202229, -0.002376353135332465, -8.106198947643861e-06, -4.970903682988137e-05, -5.8412379075889476e-06, -0.0004839917819481343, -0.0001380348257953301, -0.00014768941036891192, -2.8490614567999728e-05, -0.00661587854847312, -0.07104618102312088, -0.027537930756807327, -1.0001246929168701, -7.748573807475623e-06, -4.529942543740617e-06, -2.861018856492592e-06, -1.1920928244535389e-07, -0.05042739585042], "finish_reason": "stop"}], "metrics": {"energy": 709.6237879753112, "energy_per_token": 4.031953340768814, "time": 16.065573, "time_per_token": 0.09128166477272727}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    cmd = \"Rscript {}\".format(script_path)\n    proc = subprocess.Popen(shlex.split(cmd), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = proc.communicate()\n    stdout = stdout.decode()\n    stderr = stderr.decode()\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout, 'Stderr': stderr}", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "cmd", " =", " \"", "R", "script", " {", "}\"", ".", "format", "(", "script", "_", "path", ")", "\n", "    ", "proc", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "cmd", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " proc", ".", "commun", "icate", "()", "\n", "    ", "stdout", " =", " std", "out", ".", "decode", "()", "\n", "    ", "stderr", " =", " st", "derr", ".", "decode", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ",", " '", "St", "derr", "':", " st", "derr", "}", "\n", "\n", "#"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -1.5564481019973755, -0.16580277681350708, -2.2509379386901855, -0.09028059989213943, -0.021689359098672867, -1.4289864301681519, -0.1274503916501999, -0.002973898546770215, -0.00031287543242797256, -0.0005268854438327253, -0.4590170979499817, -0.00018451895448379219, -2.253030106658116e-05, -0.0030377216171473265, -0.03807136416435242, -0.05610838532447815, -2.0586347579956055, -0.01379656232893467, -0.0009095107670873404, -1.0371154530730564e-05, -2.407998726994265e-05, -0.2308318167924881, -3.671578815556131e-05, -0.0035431720316410065, -0.06915237754583359, -1.0251946150674485e-05, -5.245195097813848e-06, -5.566918844124302e-05, -0.00019429226813372225, -0.0008774721063673496, -0.009556617587804794, -0.0006809299811720848, -0.09162016212940216, -0.0025219083763659, -0.0038366534281522036, -0.00010656742961145937, -4.768370445162873e-07, -2.7418097943154862e-06, -1.5497195136049413e-06, 0.0, 0.0, -0.0023914568591862917, -0.00154518848285079, 0.0, -0.00015841660206206143, -8.618460560683161e-05, -5.960462772236497e-07, -3.2186455882765586e-06, -0.008758699521422386, 0.0, 0.0, -0.04907629266381264, -0.0011088658357039094, -0.0498209185898304, -0.060214683413505554, -0.03746584430336952, -0.001583751873113215, -0.00035684893373399973, -0.00027295202016830444, -0.0047768522053956985, -2.50339189733495e-06, -1.5616295058862306e-05, -0.00010799778101500124, -0.0004170263418927789, -0.004366388078778982, -0.04200160503387451, -0.8642033338546753, -0.3992992341518402, -0.012056689709424973, -2.9802276912960224e-06, -0.0008916454971767962, -0.004840323235839605, -0.9701793193817139, -0.18008999526500702, -0.00018690270371735096, -0.004019159823656082, -0.0001774868869688362, -0.0012165057705715299, -3.3378546504536644e-06, -6.3774932641536e-05, -2.0265373677830212e-05, -0.0007960011716932058, -0.005583405494689941, -0.026158776134252548, -0.03277779370546341, -3.480850500636734e-05, -9.285972191719338e-05, -0.00035172473872080445, -0.0005570290377363563, -8.821448318485636e-06, -4.029192859889008e-05, -2.1576648578047752e-05, -4.1483970562694594e-05, -1.3351351299206726e-05, -1.1920922133867862e-06, -0.0004850641416851431, -1.811964830267243e-05, -1.4781842764932662e-05, -2.3841574147809297e-05, -7.199982064776123e-05, -1.4305012882687151e-05, -3.540453326422721e-05, -1.1324817933200393e-05, -5.352353764465079e-05, -7.748573807475623e-06, -4.732496745418757e-05, -7.986990567587782e-06, -3.9219088648678735e-05, -5.602820692729438e-06, -1.6093124941107817e-05, -2.8013790142722428e-05, -0.00011240804451517761, -0.16006261110305786, -0.3429950773715973, -0.83500075340271, -0.009176223538815975, -0.003447899827733636, -0.004222407005727291, -0.010335847735404968, -4.887569048150908e-06, -3.576278118089249e-07, -0.0006504327175207436, -0.04593205451965332, -0.0003545847721397877, -0.0003983181086368859, -0.0003496989083942026, -0.0012544866185635328, -1.4305104514278355e-06, -3.576278118089249e-07, -0.0002942844294011593, -0.008866463787853718, -0.00882097240537405, -1.4781842764932662e-05, -3.480850500636734e-05, -0.00035589560866355896, -0.002795361913740635, -1.1920922133867862e-06, -0.011888484470546246, -0.0019192148465663195, -0.0004085659747943282, -0.0001472126314183697, -0.00019762947340495884, -0.0007552632014267147, -4.291525328881107e-06, -0.17058207094669342, -0.05487215146422386, -0.05019942671060562, -1.6237586736679077], "finish_reason": "stop"}], "metrics": {"energy": 708.555962036133, "energy_per_token": 4.0031410284527285, "time": 16.084297, "time_per_token": 0.09087173446327683}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    try:\n        command = f\"Rscript {script_path}\"\n        process = subprocess.Popen(shlex.split(command), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        stdout, stderr = process.communicate()\n\n        end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n        result = {\n            \"Start Time\": start_time,\n            \"End Time\": end_time,\n            \"Stdout\": stdout.decode(),\n            \"Stderr\": stderr.decode(),\n        }\n\n        return result\n    except Exception as e:\n        end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n        error_message = f\"Error running script: {e}\"\n\n        result = {\n            \"Start Time\": start_time,\n            \"End", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "command", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "        ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "command", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "        ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "\n", "        ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "        ", "result", " =", " {", "\n", "            ", "\"", "Start", " Time", "\":", " start", "_", "time", ",", "\n", "            ", "\"", "End", " Time", "\":", " end", "_", "time", ",", "\n", "            ", "\"", "St", "d", "out", "\":", " std", "out", ".", "decode", "()", ",", "\n", "            ", "\"", "St", "derr", "\":", " st", "derr", ".", "decode", "()", ",", "\n", "        ", "}", "\n", "\n", "        ", "return", " result", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "        ", "error", "_", "message", " =", " f", "\"", "Error", " running", " script", ":", " {", "e", "}\"", "\n", "\n", "        ", "result", " =", " {", "\n", "            ", "\"", "Start", " Time", "\":", " start", "_", "time", ",", "\n", "            ", "\"", "End"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -1.163919448852539, -0.0012134101707488298, -2.9927570819854736, -0.00043108707177452743, -0.0014332984574139118, -0.01378045417368412, -3.274013042449951, -0.16198472678661346, -0.5300425291061401, -0.1363665759563446, -0.09721194952726364, -0.0144855547696352, -0.08205938339233398, -0.18831196427345276, -6.97350042173639e-05, -2.2053474822314456e-05, -0.009010959416627884, -0.03109273500740528, -0.04472067207098007, -1.161573886871338, -0.0032613680232316256, -0.00022957073815632612, -3.2186455882765586e-06, -7.748573807475623e-06, -0.24577829241752625, -4.7444173105759546e-05, -0.0010609956225380301, -0.10067149251699448, -4.291525328881107e-06, -4.172316494077677e-06, -0.0001294529065489769, -8.260862523457035e-05, -0.002840296132490039, -0.01256501954048872, -0.00024172721896320581, -0.0731426328420639, -0.0007977878558449447, -0.0012249593855813146, -2.3245540432981215e-05, 0.0, -1.4305104514278355e-06, -1.1920928244535389e-07, 0.0, 0.0, -0.004152604844421148, -0.000912250077817589, 0.0, -1.9192511899746023e-05, -2.169585604860913e-05, 0.0, -2.264974000354414e-06, -0.0034767675679177046, 0.0, 0.0, -0.07034031301736832, -0.0012672259472310543, -0.10193327069282532, -0.013868633657693863, -0.0363946370780468, -0.0003457663697190583, -0.00012027494085486978, -8.868777513271198e-05, -0.00015531764074694365, -2.0265558760002023e-06, -4.768360213347478e-06, -0.00038938093348406255, -0.00036483307485468686, -0.004704715684056282, -1.7877362966537476, -0.22883819043636322, -1.1841458082199097, -2.7417760065873154e-05, -2.610649426060263e-05, -0.00020180096908006817, -0.0002356490003876388, -2.3841830625315197e-06, -3.2782016205601394e-05, -8.34461570775602e-06, -5.5549986427649856e-05, -7.748573807475623e-06, -1.4305104514278355e-06, -0.00038580605178140104, -2.3603161025675945e-05, -1.5139465176616795e-05, -7.748573807475623e-06, -0.00012706902634818107, -1.0728830375228426e-06, -1.156323378381785e-05, -7.86750388215296e-05, -3.5523738915799186e-05, -6.318072337307967e-06, -1.07287787614041e-05, -4.0531076592742465e-06, -2.4199192921514623e-05, -2.9802276912960224e-06, -9.65590606938349e-06, -7.271740287251305e-06, -8.070142939686775e-05, -0.5994861125946045, -0.10354757308959961, -2.665637254714966, -0.030209122225642204, -0.0902257040143013, -0.0016174342017620802, -0.012908940203487873, -1.6131787300109863, -0.014272631146013737, -0.002678499324247241, -0.0029762755148112774, -0.008956259116530418, -1.6689286894688848e-06, 0.0, -0.0004690977220889181, -0.0006594866863451898, -0.0002928543253801763, -0.0005750194541178644, -0.0001839230244513601, -0.0002811751910485327, -0.00042906138696707785, -0.0005660838796757162, -7.152555099310121e-07, 0.0, -0.0006492413813248277, -7.056941103655845e-05, -0.0010701649589464068, -0.0033831524197012186, -0.02336493879556656, -3.421248038648628e-05, -0.00019894051365554333, -0.0006368515896610916, -0.005801150109618902, -5.960462772236497e-07, -0.004042074549943209, -0.00033706706017255783, -0.45787113904953003, -0.22341807186603546, -0.012832092121243477, -0.00041845624218694866, -0.0006926044588908553, -0.0005478549865074456, -0.00046623803791590035, -8.010543388081715e-05, -0.001280560391023755, -5.960462772236497e-07, -2.7656173188006505e-05, -3.3378546504536644e-06, -0.0009806115413084626, -0.7612389326095581, -0.0004459816846065223, -0.019456373527646065, -2.2053474822314456e-05, -0.0001726001501083374, -0.31965023279190063, -0.6162410974502563, -0.09864930808544159, -0.002587781986221671, -0.000846147071570158, -1.839604377746582, -0.0062863705679774284, -0.05418649688363075, -0.004985401872545481, -0.032096561044454575, -0.00019226610311307013, -0.0010412277188152075, -0.0014736517332494259, -0.8147234320640564, -3.290122185717337e-05, -0.0001037067049765028, -0.0005314130103215575, -0.0013790155062451959, -1.3589766240329482e-05, -5.686121585313231e-05, -1.537788011773955e-05, -0.00015007323236204684, -1.07287787614041e-05, -3.6954811548639555e-06, -0.00035565727739594877, -8.439661905867979e-05, -4.7801782784517854e-05, -1.7404405298293568e-05, -0.00014745102089364082, -1.3351351299206726e-05, -2.407998726994265e-05, -1.4305104514278355e-06, -4.482168878894299e-05, -5.125986263010418e-06, -1.6689160474925302e-05, -2.622600959512056e-06, -2.062299427052494e-05, -4.172316494077677e-06, -6.079655122448457e-06, -1.8000440832111053e-05, -0.00010990492592100054, -0.5153363347053528, -0.0014058002270758152, -2.369615316390991, -0.06511452049016953, -0.2140299379825592, -0.00026592056383378804, -0.2583346366882324, -0.007390421349555254, -0.3480111062526703, -1.3963760137557983, -0.9654316902160645, -0.40666109323501587, -0.0009665584657341242, -1.1458115577697754, -0.03874189034104347, -0.000605638197157532, -0.3325015604496002, -0.000715714821126312, -0.014116787351667881, -0.00016115797916427255, -0.0012249593855813146, -1.2159273865108844e-05, -0.0018093895632773638, -0.0033541631419211626, -0.003998025320470333, -0.0006130246329121292, -0.0002097863471135497, -0.00021526881027966738, -1.311301275563892e-06, -2.622600959512056e-06, -0.00010489867418073118, -2.8967437174287625e-05, -5.757642793469131e-05, -8.415821503149346e-05, -0.0025228597223758698], "finish_reason": "length"}], "metrics": {"energy": 1046.6077323017123, "energy_per_token": 4.088311454303564, "time": 23.601538, "time_per_token": 0.0921935078125}}
{"outputs": [{"text": "start = datetime.now()\n    proc = subprocess.run(shlex.split('Rscript ' + script_path), capture_output=True)\n    end = datetime.now()\n    decoded_stdout = proc.stdout.decode()\n    decoded_stderr = proc.stderr.decode()\n    result = {\n        'Start Time': str(start),\n        'End Time': str(end),\n        'Stdout': decoded_stdout,\n        'Stderr': decoded_stderr,\n    }\n    return result", "tokens": ["start", " =", " datetime", ".", "now", "()", "\n", "    ", "proc", " =", " sub", "process", ".", "run", "(", "sh", "lex", ".", "split", "('", "R", "script", " '", " +", " script", "_", "path", ")", ",", " capture", "_", "output", "=", "True", ")", "\n", "    ", "end", " =", " datetime", ".", "now", "()", "\n", "    ", "dec", "oded", "_", "stdout", " =", " proc", ".", "stdout", ".", "decode", "()", "\n", "    ", "dec", "oded", "_", "stderr", " =", " proc", ".", "stderr", ".", "decode", "()", "\n", "    ", "result", " =", " {", "\n", "        ", "'", "Start", " Time", "':", " str", "(", "start", ")", ",", "\n", "        ", "'", "End", " Time", "':", " str", "(", "end", ")", ",", "\n", "        ", "'", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", "\n", "        ", "'", "St", "derr", "':", " dec", "oded", "_", "stderr", ",", "\n", "    ", "}", "\n", "    ", "return", " result", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -2.231130599975586, -0.027102595195174217, -0.00013052565918769687, -0.045937176793813705, -0.0003400462737772614, -0.6480348706245422, -0.1603364199399948, -3.0238990783691406, -0.04114771634340286, -0.006138400640338659, -6.007967749610543e-05, -7.855583680793643e-05, -1.1701695919036865, -0.3918948471546173, -0.6775164604187012, -6.627816765103489e-05, -4.60137271147687e-05, -0.0007583603146485984, -0.91256183385849, -0.0491941012442112, -0.01993606798350811, -0.30828896164894104, -0.20193198323249817, -0.05437720566987991, -0.00011324241495458409, -2.0503786799963564e-05, -0.19857236742973328, -0.003191023599356413, -0.9526997208595276, -3.576278118089249e-07, -2.3841830625315197e-06, -0.044519565999507904, -0.0008610355434939265, -0.23458431661128998, -0.019460348412394524, -0.006820966489613056, -0.24959710240364075, -0.0020345004741102457, -0.0005893162451684475, -6.437280717364047e-06, -0.00010871296399272978, -3.8265450712060556e-05, -0.00023827097902540118, -0.41364845633506775, -3.483747959136963, -0.1738317310810089, -0.03814538195729256, -0.05956840142607689, -0.018691357225179672, -0.06847979128360748, -3.6238969187252223e-05, -4.136476854910143e-05, -0.0016861044568940997, -0.0015844660811126232, -1.7196269035339355, -0.1616985946893692, -0.00010918975021922961, -0.002615723293274641, -3.6954811548639555e-06, -6.437280717364047e-06, -0.00035506143467500806, -0.000417741306591779, -0.0016374287661165, -2.145764938177308e-06, -0.0005218812730163336, -0.00011157367407577112, -1.0609570381348021e-05, -0.0003711488388944417, -0.0016686100279912353, -0.16446661949157715, -2.9217309951782227, -0.14229124784469604, -0.43050727248191833, -0.01601111888885498, -0.07728499174118042, -0.13872861862182617, -0.00782543234527111, -0.004541084170341492, -0.012632235884666443, -1.3631418943405151, -0.0004068977141287178, -0.0010289618512615561, -0.04732663556933403, -0.05630188062787056, -0.0021843877620995045, -0.0009757286752574146, -0.0001961992384167388, -0.00032860602368600667, -0.0005794276366941631, -0.0021845067385584116, -0.0030329679138958454, -2.3245540432981215e-05, -0.0003777029050979763, -9.786603914108127e-05, -0.004353569354861975, -0.00013636612857226282, -0.003405368886888027, -0.0016434985445812345, -0.021874235942959785, -5.6980417866725475e-05, -0.00023648326168768108, -0.001908744452521205, -0.0397774800658226, 0.0, -3.099436753473128e-06, -5.173549288883805e-05, -0.029292544350028038, -0.001142206834629178, -0.0006803343421779573, -0.0003657863999251276, -0.0007357274298556149, -0.0005747812101617455, -0.0007130940794013441, -0.0010617101797834039, -1.1920928244535389e-07, -1.9073468138230965e-06, -6.0437283536884934e-05, -2.3200695514678955, -0.0012978235026821494, -0.10491908341646194, -0.0001174142598756589, -0.0008276851149275899, -0.0565231628715992, -0.03585641831159592, -0.006707652006298304, -1.4769606590270996, -2.7418097943154862e-06, -1.1920922133867862e-06, -1.311301275563892e-06, -3.576278118089249e-07, -0.05121427774429321], "finish_reason": "stop"}], "metrics": {"energy": 527.8208125743868, "energy_per_token": 3.99864251950293, "time": 12.09263, "time_per_token": 0.09161083333333334}}
{"outputs": [{"text": "# Record the start time\n    start_time = datetime.now()\n    print(start_time.strftime('%Y-%m-%d %H:%M:%S'))\n\n    # Run the R script using subprocess.Popen\n    cmd = ['Rscript', script_path]\n    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n    # Wait for the process to finish and get the output\n    stdout, stderr = process.communicate()\n    stdout = stdout.decode('utf-8')\n    stderr = stderr.decode('utf-8')\n\n    # Record the end time\n    end_time = datetime.now()\n    print(end_time.strftime('%Y-%m-%d %H:%M:%S'))\n\n    # Return a dictionary with the start time, end time, stdout, and stderr\n    result = {'Start Time': start_time.strftime('%Y-%m-%d %H:%M:%S'),\n              'End Time': end_time.strftime('%", "tokens": ["#", " Record", " the", " start", " time", "\n", "    ", "start", "_", "time", " =", " datetime", ".", "now", "()", "\n", "    ", "print", "(", "start", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "'))", "\n", "\n", "    ", "#", " Run", " the", " R", " script", " using", " sub", "process", ".", "P", "open", "\n", "    ", "cmd", " =", " ['", "R", "script", "'", ",", " script", "_", "path", "]", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "cmd", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "    ", "#", " Wait", " for", " the", " process", " to", " finish", " and", " get", " the", " output", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "#", " Record", " the", " end", " time", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", "\n", "    ", "print", "(", "end", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "'))", "\n", "\n", "    ", "#", " Return", " a", " dictionary", " with", " the", " start", " time", ",", " end", " time", ",", " std", "out", ",", " and", " st", "derr", "\n", "    ", "result", " =", " {'", "Start", " Time", "':", " start", "_", "time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", ",", "\n", "              ", "'", "End", " Time", "':", " end", "_", "time", ".", "str", "ftime", "('", "%"], "logprobs": [-0.9389397501945496, -4.203830718994141, -0.5691015124320984, -0.08729887008666992, -0.029407262802124023, -0.42700448632240295, -0.0015219782944768667, -0.03705238550901413, -0.08857042342424393, -0.014302598312497139, -0.010279450565576553, -0.027607858180999756, -0.00017855956684798002, -0.06441116333007812, -0.0001037067049765028, -1.2877628803253174, -1.2373149394989014, -2.6126372814178467, -0.0706142783164978, -2.5011115074157715, -2.729855441430118e-05, -8.583032467868179e-06, -1.9688327312469482, -0.01329673919826746, -7.676783570786938e-05, -1.3123985528945923, -0.047086358070373535, -0.16785885393619537, -0.02634352445602417, -0.0036377226933836937, -3.361645576660521e-05, -0.00022659118985757232, -0.0023180777207016945, -0.006368106231093407, -0.0007697956170886755, -0.00044610086479224265, -0.001982748508453369, -0.00016258825780823827, -0.05412393808364868, -0.0464392751455307, -0.20487621426582336, -0.0012218636693432927, -0.05994391441345215, -1.149994134902954, -0.04779132828116417, -0.14497672021389008, -0.051234666258096695, -0.6866503357887268, -0.20735663175582886, -0.0006342306733131409, -1.4725069999694824, -2.0718753337860107, -0.0009388091857545078, -0.6321689486503601, -0.0019211184699088335, -2.0012950897216797, -0.2625584304332733, -2.326204299926758, -0.05034000054001808, -0.03295959159731865, -0.008503065444529057, -0.0015232876176014543, -0.18346336483955383, -0.00019643761334009469, -5.9602869441732764e-05, -0.007081291638314724, -0.03823946788907051, -0.06393779814243317, -0.9479287266731262, -0.0026572179049253464, -0.00029988560709170997, -2.9802276912960224e-06, -6.198863957251888e-06, -0.004514620639383793, -4.172316494077677e-06, -0.0008415018673986197, -0.3447250723838806, -0.001620647613890469, -0.06848301738500595, -0.0012236495967954397, -0.0008181562297977507, -2.634490556374658e-05, -1.1920928244535389e-07, -2.622600959512056e-06, -1.1920928244535389e-07, 0.0, -1.1920928244535389e-07, -0.0023431722074747086, -0.0005398723296821117, -1.1920922133867862e-06, -1.3828182090946939e-05, -2.6940935640595853e-05, 0.0, -3.576278118089249e-07, -0.0052352952770888805, 0.0, 0.0, -0.23301810026168823, -0.0023865809198468924, -0.3418954014778137, -0.00035851728171110153, -0.009449399076402187, -1.5158060789108276, -0.002915182150900364, -0.0030603024642914534, -0.2119724154472351, -0.0012947280192747712, -0.5433717370033264, -0.1056889221072197, -0.8598260879516602, -0.06683102250099182, -0.690890371799469, -0.030491644516587257, -0.00024387246230617166, -0.03100883588194847, -0.0577184297144413, -0.00011967896716669202, -1.1324817933200393e-05, -0.00010024998482549563, -0.0004993622424080968, -4.529942543740617e-06, -3.2186455882765586e-06, -1.9788545614574105e-05, -0.00028701478731818497, -0.002191167790442705, -1.939274787902832, -0.9201437830924988, -0.2745332419872284, -0.014755991287529469, -4.291525328881107e-06, -0.0010116941994056106, -0.012613872066140175, -0.22650977969169617, -0.006113519426435232, -0.0044991932809352875, -0.0007817073492333293, -0.01925596594810486, -0.2619364559650421, -0.00048458753735758364, -0.004693562630563974, -9.48860906646587e-05, -0.001998928841203451, -3.755022044060752e-05, -2.3483953555114567e-05, -8.583032467868179e-06, -0.00015877417172305286, -5.07818695041351e-05, -1.8000440832111053e-05, -8.344646857949556e-07, -0.00023147765023168176, -0.007941103540360928, -0.05336330085992813, -0.0003649522550404072, -0.01688825711607933, -0.03353845328092575, -0.002093149581924081, -0.002383964601904154, -0.00023779425828251988, -0.04632103070616722, -8.272782724816352e-05, -0.008738609962165356, -8.689979586051777e-05, -9.345571743324399e-05, -0.00018785618885885924, -0.0004374024283606559, -3.611976353568025e-05, -0.00015627116954419762, -9.65590606938349e-06, -0.0004913791781291366, -0.06262309849262238, -0.010173489339649677, -0.002618101192638278, -0.011283042840659618, -7.152555099310121e-07, -2.3841855067985307e-07, -0.00047958316281437874, -2.47952248173533e-05, -9.536738616588991e-07, -0.0010948146227747202, -0.00015162272029556334, -0.00015793983766343445, -0.0003375437227077782, -2.038458114839159e-05, -3.302042750874534e-05, -7.152555099310121e-07, -0.00011467275908216834, -3.0517112463712692e-05, -0.00012444675667211413, -5.125986263010418e-06, -0.000259723310591653, -1.9550132492440753e-05, -0.0013099670177325606, -0.0006779517862014472, -0.017489144578576088, -0.00033063191222026944, -0.04968537762761116, -0.6213082075119019, -1.9779049158096313, -0.008374218828976154, -0.6152944564819336, -0.051845379173755646, -0.4773859977722168, -0.14849108457565308, -0.0010397987207397819, -0.0020412816666066647, -0.00020883286197204143, -0.00058466981863603, -0.07306352257728577, -4.482168878894299e-05, -0.010272135026752949, -0.0016553997993469238, -0.0002731903805397451, -2.1815061700181104e-05, -0.023525051772594452, -0.0003667397249955684, -2.5132088661193848, -0.025552619248628616, -2.872424364089966, -0.01032039150595665, -0.0034931611735373735, -0.0020976699888706207, -0.008799584582448006, -4.529942543740617e-06, -1.0728830375228426e-06, -0.0680420994758606, -0.0011717366287484765, -1.3232143828645349e-05, -0.0012043612077832222, -0.00010907054820563644, -0.0019574069883674383, -0.003878216026350856, -3.302042750874534e-05, -3.766942609217949e-05, -5.960462772236497e-07, -0.0015026956098154187, -0.00019429226813372225, -9.7508447652217e-05, -7.152531907195225e-06, -0.0024758896324783564, -1.597391747054644e-05, -0.0008783058729022741, -0.0001998939987970516, -0.08318514376878738, -0.059357453137636185, -7.211902266135439e-05, -0.0003716255014296621, -0.00022432672267314047, -0.0004930472350679338, -0.0016778928693383932, -2.3841855067985307e-07, -1.1920928244535389e-07, -3.564294092939235e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -4.51792984677013e-05, -3.755022044060752e-05], "finish_reason": "length"}], "metrics": {"energy": 1074.0665290260326, "energy_per_token": 4.19557237900794, "time": 23.599379, "time_per_token": 0.09218507421875}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    cmd = [\"Rscript\", script_path]\n    print(f\"Executing command: {' '.join(shlex.quote(arg) for arg in cmd)}\")\n    proc = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout = proc.stdout.decode('utf-8')\n    stderr = proc.stderr.decode('utf-8')\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    result = {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout, 'Stderr': stderr}\n    return result", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "cmd", " =", " [", "\"", "R", "script", "\"", ",", " script", "_", "path", "]", "\n", "    ", "print", "(", "f", "\"", "Exec", "uting", " command", ":", " {'", " '", ".", "join", "(", "sh", "lex", ".", "quote", "(", "arg", ")", " for", " arg", " in", " cmd", ")}", "\"", ")", "\n", "    ", "proc", " =", " sub", "process", ".", "run", "(", "cmd", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", " =", " proc", ".", "stdout", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " proc", ".", "stderr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "result", " =", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ",", " '", "St", "derr", "':", " st", "derr", "}", "\n", "    ", "return", " result", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -1.5564481019973755, -0.16580277681350708, -2.4540438652038574, -0.03632991760969162, -0.09008703380823135, -0.022764891386032104, -0.008174297399818897, -0.0028446943033486605, -0.18447914719581604, -0.00012063252506777644, -3.397406908334233e-05, -0.0053983391262590885, -0.036129988729953766, -0.09646835178136826, -3.191102981567383, -0.07656893879175186, -0.4485728442668915, -0.07634398341178894, -1.4402247667312622, -0.010797764174640179, -0.8466564416885376, -0.03802041336894035, -0.7862367033958435, -0.000777776469476521, -0.0002236116270069033, -9.285972191719338e-05, -0.021681660786271095, -1.089348316192627, -2.658331868587993e-05, -9.059865078597795e-06, -6.282132380874828e-05, -0.00012230125139467418, -0.32795602083206177, -0.00039772229501977563, -0.0004844683862756938, -3.85038583772257e-05, -7.510157047363464e-06, -0.000747877755202353, -0.05564991012215614, -0.007399769499897957, -0.002830191981047392, -0.10668930411338806, -0.18281996250152588, -1.9617985486984253, -0.005015173926949501, -0.0002975021197926253, -1.4305104514278355e-06, -9.298280929215252e-06, -1.5312550067901611, -0.011208544485270977, -0.04118569940328598, -0.0076857334934175014, -1.2864587306976318, -0.0018272384768351912, -0.0008269704412668943, -6.0794889577664435e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -3.814689989667386e-06, -1.1920928244535389e-07, 0.0, -0.0002530493075028062, -0.0008488865569233894, 0.0, -1.3470558769768104e-05, -7.510157047363464e-06, 0.0, -7.152555099310121e-07, -0.0016950300196185708, 0.0, 0.0, -0.25016283988952637, -0.005091439001262188, -0.023898746818304062, -0.9883050322532654, -0.3317895531654358, -0.013585961423814297, -2.264974000354414e-06, -1.7881233361549675e-05, -0.0018369958270341158, -0.0018233117880299687, -0.6278525590896606, -0.00912424921989441, -0.00949840433895588, -0.0002924968139268458, -0.057436518371105194, -0.12583115696907043, -0.00014768941036891192, -0.025541463866829872, -7.83174327807501e-05, -0.00039772229501977563, -4.768370445162873e-07, -0.00012957210128661245, -1.847726889536716e-05, -4.768370445162873e-07, -0.00025090406415984035, -3.576272320060525e-06, -2.753696753643453e-05, -5.960462772236497e-07, -6.985420623095706e-05, -0.0011526852613314986, -0.011586044915020466, -0.048916131258010864, -2.4318398573086597e-05, -3.40932747349143e-05, -0.00016091958968900144, -0.00045277358731254935, -4.0531076592742465e-06, -2.9444261599564925e-05, -1.4066597032069694e-05, -4.8397800128441304e-05, -1.2516897186287679e-05, -5.960462772236497e-07, -0.0005697772721759975, -5.245071224635467e-05, -1.3589766240329482e-05, -1.6689160474925302e-05, -0.00015710550360381603, -2.3483953555114567e-05, -1.1086402082582936e-05, -0.0011797142215073109, -4.053033626405522e-05, -6.318072337307967e-06, -2.682172998902388e-05, -6.079655122448457e-06, -4.6132929128361866e-05, -1.9073468138230965e-06, -9.536697689327411e-06, -1.8715683836489916e-05, -8.582700684200972e-05, -0.21751192212104797, -2.4166293144226074, -0.046856265515089035, -1.699134111404419, -0.009761929512023926, -0.00245496048592031, -0.0017275185091421008, -0.0060386355035007, -3.814689989667386e-06, -2.3841855067985307e-07, -0.0009076051646843553, -0.07103141397237778, -0.00032848684350028634, -0.00033098942367359996, -0.00020776021119672805, -0.0006699701189063489, -4.768370445162873e-07, 0.0, -0.005008057225495577, -0.015136264264583588, -0.011636242270469666, -2.95634672511369e-05, -6.4490144723095e-05, -0.00022504181833937764, -0.0022480234038084745, -8.344646857949556e-07, -0.022384945303201675, -0.002764810109511018, -0.0003906917118001729, -0.00015507926582358778, -9.63164638960734e-05, -0.0008531744824722409, -5.960462772236497e-07, -0.004975081887096167, -0.0004857790481764823, -0.019217142835259438, -0.28218594193458557, -0.006391440983861685, -2.063493490219116, -2.264974000354414e-06, -1.0728830375228426e-06, -2.9802276912960224e-06, -3.576278118089249e-07, -0.045648280531167984], "finish_reason": "stop"}], "metrics": {"energy": 818.501229829788, "energy_per_token": 4.032025762708315, "time": 18.584997, "time_per_token": 0.09155170935960592}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    command = f\"Rscript {script_path}\"\n    # Use shlex to split the command into a list of arguments. This is necessary because subprocess.run() expects the command as a list of strings, not a single string.\n    args = shlex.split(command)\n\n    # Run the command using subprocess.run(). The capture_output parameter captures the output of the command, and check parameter raises an exception if the command fails.\n    completed_process = subprocess.run(args, capture_output=True, check=True)\n\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Decode the captured output using UTF-8.\n    stdout = completed_process.stdout.decode('utf-8')\n    stderr = completed_process.stderr.decode('utf-8')\n\n    results = {\n        'Start Time': start_time,\n        'End Time': end_time,\n        ", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "command", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "    ", "#", " Use", " sh", "lex", " to", " split", " the", " command", " into", " a", " list", " of", " arguments", ".", " This", " is", " necessary", " because", " sub", "process", ".", "run", "()", " expects", " the", " command", " as", " a", " list", " of", " strings", ",", " not", " a", " single", " string", ".", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "command", ")", "\n", "\n", "    ", "#", " Run", " the", " command", " using", " sub", "process", ".", "run", "()", ".", " The", " capture", "_", "output", " parameter", " captures", " the", " output", " of", " the", " command", ",", " and", " check", " parameter", " raises", " an", " exception", " if", " the", " command", " fails", ".", "\n", "    ", "completed", "_", "process", " =", " sub", "process", ".", "run", "(", "args", ",", " capture", "_", "output", "=", "True", ",", " check", "=", "True", ")", "\n", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Dec", "ode", " the", " captured", " output", " using", " U", "TF", "-", "8", ".", "\n", "    ", "stdout", " =", " completed", "_", "process", ".", "stdout", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " completed", "_", "process", ".", "stderr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "results", " =", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        "], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -1.163919448852539, -0.0012134101707488298, -2.663344621658325, -0.15485115349292755, -0.4368532598018646, -0.1659696102142334, -0.0874699279665947, -0.020408522337675095, -0.08313501626253128, -0.20872323215007782, -5.435795901576057e-05, -2.7656173188006505e-05, -0.010128057561814785, -0.03587930276989937, -0.16021709144115448, -3.5063834190368652, -2.0337607860565186, -0.05795177444815636, -5.61460001335945e-05, -0.4709985554218292, -0.10361560434103012, -0.08462636917829514, -0.019982924684882164, -0.3241960108280182, -0.7755619883537292, -0.033273741602897644, -0.02997395396232605, -0.11687472462654114, -2.6344447135925293, -1.0552759170532227, -0.5419348478317261, -1.0916205644607544, -1.078629732131958, -1.305551528930664, -0.0005026984144933522, -0.027510328218340874, -0.6716980934143066, -0.05679136887192726, -0.3024486005306244, -0.8792664408683777, -0.06951096653938293, -2.3711485862731934, -0.004351077135652304, -0.05383671820163727, -0.07169407606124878, -2.0924196243286133, -0.6745010614395142, -0.7445809245109558, -0.4565782845020294, -0.05965869873762131, -0.0006909366929903626, -0.037569526582956314, -0.1323719024658203, -0.0023394853342324495, -0.9825454950332642, -0.026277804747223854, -0.0006544832140207291, -2.3841855067985307e-07, -7.152531907195225e-06, -5.9960475482512265e-05, -0.00014768941036891192, -0.001471032970584929, -0.0034532458521425724, -0.004729394800961018, -0.4001697301864624, -0.0003387354372534901, -0.6312482953071594, -0.8284329771995544, -0.019316887483000755, -0.7606644630432129, -0.7804208993911743, -0.0763968825340271, -4.4225667807040736e-05, -0.08244235068559647, -0.008050493896007538, -0.002743649296462536, -1.127329707145691, -0.9095813035964966, -0.3345645070075989, -0.0006609162664972246, -4.768360213347478e-06, -0.6930995583534241, -0.7750272154808044, -0.03973841667175293, -0.8377476930618286, -0.15754449367523193, -0.006238273810595274, -0.15655510127544403, -1.8505523204803467, -0.26781782507896423, -2.1428253650665283, -1.0120651721954346, -0.5339909791946411, -0.021854057908058167, -0.10534339398145676, -0.0036044646985828876, -0.0064962636679410934, -0.01637895405292511, -0.8613208532333374, -0.018995516002178192, -0.07092370837926865, -0.0017080017132684588, -1.0249197483062744, -0.012115225195884705, -0.011954450979828835, -0.00243926327675581, -0.00015269544383045286, -1.0609570381348021e-05, -4.887569048150908e-06, -2.3841830625315197e-06, -0.00019834458362311125, -0.08744709938764572, -0.010118380188941956, -0.043795742094516754, -1.1920928244535389e-07, -5.960462772236497e-07, -0.00536502106115222, -0.0002562671434134245, -0.000959531927946955, -0.06769680231809616, -0.0002554328821133822, -0.024243680760264397, -0.05439572036266327, -0.0030960743315517902, -0.18061037361621857, -0.0005080600967630744, -0.547591507434845, -2.6464111215318553e-05, -1.9788545614574105e-05, -0.0002727136597968638, -0.0002157455455744639, -4.887569048150908e-06, -4.7801782784517854e-05, -2.4676019165781327e-05, -3.373566141817719e-05, -3.576272320060525e-06, -2.3841855067985307e-07, -0.00031716562807559967, -0.00014375607133843005, -7.748573807475623e-06, -8.34461570775602e-06, -0.00017009719158522785, -1.1920922133867862e-06, -1.5735502529423684e-05, -9.190614218823612e-05, -3.540453326422721e-05, -1.0132738680113107e-05, -1.1920858014491387e-05, -2.0265558760002023e-06, -6.97350042173639e-05, -3.576272320060525e-06, -3.3378546504536644e-06, -1.4662635294371285e-05, -0.00023266946664080024, -0.13609610497951508, -0.0009195152088068426, -0.25892308354377747, -0.5422431230545044, -0.0012003129813820124, -0.08172361552715302, -1.199912667274475, -0.5044432878494263, -0.5413997173309326, -1.4740372896194458, -6.794906312279636e-06, -0.0017163321608677506, -0.00016449528629891574, -1.6029975414276123, -0.5926363468170166, -0.0007570500019937754, -0.11851264536380768, -0.025211161002516747, -0.0008599635912105441, -1.1920928244535389e-07, -7.152555099310121e-07, -9.894321920000948e-06, -6.079655122448457e-06, -0.00035398892941884696, -8.332382276421413e-05, -0.34632015228271484, -0.005753978155553341, -0.004483172204345465, -6.317892984952778e-05, -0.0021554825361818075, -0.021328607574105263, -0.0015216212486848235, -0.004133016336709261, -0.00011717586312443018, -0.00028725311858579516, -1.1920928244535389e-07, -1.6331539882230572e-05, -7.152555099310121e-07, -0.00020621081057470292, -2.276871418871451e-05, -1.4305104514278355e-06, -0.0002033503697020933, -6.6756979322235566e-06, -4.2914423829643056e-05, -2.3841855067985307e-07, -1.490105023549404e-05, -0.0008236353169195354, -0.018783317878842354, -0.0004848258395213634, -3.079009771347046, -0.04414665326476097, -0.12307251244783401, -0.0030276195611804724, -0.02676329016685486, -0.14015160501003265, -0.009219336323440075, -0.003717299783602357, -0.0029962430708110332, -0.004688935354351997, -1.0728830375228426e-06, 0.0, -0.0004285847535356879, -0.0009082006872631609, -0.00033146608620882034, -0.0004514628672040999, -0.00024351492174901068, -0.0002857038634829223, -0.0007977878558449447, -0.0008687774534337223, -3.576278118089249e-07, 0.0, -0.000886285852175206, -7.426462980220094e-05, -0.0016055324813351035], "finish_reason": "length"}], "metrics": {"energy": 1077.1879027652744, "energy_per_token": 4.207765245176853, "time": 23.589401, "time_per_token": 0.09214609765625}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    print(f'Start time: {start_time}')\n\n    command = shlex.split('Rscript ' + script_path)\n    process = subprocess.Popen(\n        command,\n        stdout=subprocess.PIPE,\n        stderr=subprocess.PIPE)\n\n    stdout, stderr = process.communicate()\n    stdout = stdout.decode('utf-8')\n    stderr = stderr.decode('utf-8')\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    print(f'End time: {end_time}')\n\n    return {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': stdout,\n        'Stderr': stderr\n    }\n\n'''\n# How to run R script from python (from cmd)\n# Run script\nimport subprocess", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "print", "(", "f", "'", "Start", " time", ":", " {", "start", "_", "time", "}", "')", "\n", "\n", "    ", "command", " =", " sh", "lex", ".", "split", "('", "R", "script", " '", " +", " script", "_", "path", ")", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "\n", "        ", "command", ",", "\n", "        ", "stdout", "=", "sub", "process", ".", "P", "IP", "E", ",", "\n", "        ", "stderr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "stdout", " =", " std", "out", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "stderr", " =", " st", "derr", ".", "decode", "('", "utf", "-", "8", "')", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "print", "(", "f", "'", "End", " time", ":", " {", "end", "_", "time", "}", "')", "\n", "\n", "    ", "return", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " std", "out", ",", "\n", "        ", "'", "St", "derr", "':", " st", "derr", "\n", "    ", "}", "\n", "\n", "'''", "\n", "#", " How", " to", " run", " R", " script", " from", " python", " (", "from", " cmd", ")", "\n", "#", " Run", " script", "\n", "import", " sub", "process", "\n", "\n", "#"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -2.6383304595947266, -0.031114229932427406, -0.21954631805419922, -2.105147123336792, -0.3575015664100647, -1.655106544494629, -0.07766968011856079, -0.007987108081579208, -0.0030852595809847116, -3.933898824470816e-06, -3.576278118089249e-07, -0.0314258374273777, -0.015375065617263317, -0.010584997944533825, -0.330294668674469, -0.0007024919614195824, -2.3269336223602295, -0.15213732421398163, -1.9514689445495605, -8.165503095369786e-05, -3.6477376852417365e-05, -0.017127342522144318, -1.7005528211593628, -0.11504234373569489, -0.03212888538837433, -0.538479208946228, -0.13300256431102753, -0.06406952440738678, -9.619726915843785e-05, -3.015949550899677e-05, -0.018030663952231407, -0.07147512584924698, -0.30200862884521484, -0.9765121936798096, -0.00874581839889288, -0.0008830699953250587, -5.483612312673358e-06, -1.0609570381348021e-05, -0.3864175081253052, -1.585470999998506e-05, -0.0005801424849778414, -2.843325138092041, -0.05655628442764282, -0.00783040001988411, -0.000714404450263828, -0.35457858443260193, -0.0007853999268263578, -0.15870755910873413, -0.009697825647890568, -0.00017081231635529548, -1.1920928244535389e-07, -5.960462772236497e-07, -1.311301275563892e-06, 0.0, 0.0, -0.0016632545739412308, -0.0037336894311010838, -0.0011374439345672727, -0.0004278697888366878, -5.817244164063595e-05, -2.276871418871451e-05, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.004875082056969404, 0.0, 0.0, -1.9983336925506592, -0.0017394188325852156, -0.5757653117179871, -0.00015853578224778175, -0.1707591563463211, -0.07728146016597748, -0.0006748544401489198, -0.00020001317898277193, -0.0001958416833076626, -0.0022935771849006414, -7.271740287251305e-06, -1.5139465176616795e-05, -0.0005441615357995033, -0.0010700459824874997, -0.007118695415556431, -0.30606213212013245, -0.6484154462814331, -0.32138949632644653, -0.014390731230378151, -7.152531907195225e-06, -0.0004374024283606559, -0.0019511011196300387, -0.2189820408821106, -0.020637543871998787, -0.011181431822478771, -0.0005691815749742091, -0.009485769085586071, -0.12270753085613251, -0.0006118332967162132, -0.006202732678502798, -0.00014256415306590497, -0.003082882845774293, -1.2397689715726301e-05, -4.494089080253616e-05, -3.731181277544238e-05, -0.0006625840906053782, -3.909988299710676e-05, -3.3378044463461265e-05, -1.5497195136049413e-06, -0.0004433602443896234, -0.002479338087141514, -1.2603464126586914, -0.30389508605003357, -0.00011264643399044871, -9.107174992095679e-05, -0.00037889453233219683, -0.00052998325554654, -2.002696055569686e-05, -0.00011073929636040702, -2.8729025871143676e-05, -0.00030655929003842175, -3.266281055402942e-05, -5.960462772236497e-07, -0.005567994434386492, -0.00028832571115344763, -3.802703940891661e-05, -8.022463589441031e-05, -0.00022671037004329264, -5.936446541454643e-05, -2.3007127310847864e-05, -0.000192504478036426, -9.846202738117427e-05, -2.7894584491150454e-05, -6.0794889577664435e-05, -2.9682672902708873e-05, -7.486063259420916e-05, -2.312633478140924e-05, -4.756337511935271e-05, -3.266281055402942e-05, -0.00029905137489549816, -0.21889728307724, -0.017577817663550377, -0.0029487009160220623, -0.005352570675313473, -0.03251068666577339, -0.03936601057648659, -0.0392916277050972, -0.003162028733640909, -0.0069900257512927055, -0.0040197535417973995, -1.0728830375228426e-06, -4.768370445162873e-07, -0.0337631031870842, -0.004029726609587669, -0.00042250767000950873, -0.24639149010181427, -0.00035291642416268587, -0.44546499848365784, -0.2882367968559265, -0.00429623993113637, -0.012831268832087517, -0.04558780416846275, -0.010282635688781738, -0.008737664669752121, -0.0015215021558105946, -0.006365026347339153, -5.960446742392378e-06, -1.1920928244535389e-07, -0.0004345426568761468, -0.0013443727511912584, -0.00016425691137555987, -9.011816291604191e-05, -0.00029416524921543896, -0.00047219570842571557, -0.0002559096028562635, -0.0009921634336933494, -3.576278118089249e-07, 0.0, -0.00017820201173890382, -9.572047565598041e-05, -0.0002474478678777814, -0.0010109796421602368, -0.010344460606575012, -2.6940935640595853e-05, -8.05822346592322e-05, -0.0004737447015941143, -0.0033467968460172415, -1.9073468138230965e-06, -0.030710043385624886, -0.00039569655200466514, -0.00010668662434909493, -0.00030489088385365903, -0.0006249382277019322, -0.00018404220463708043, -0.0003311085747554898, -0.0008306628442369401, -1.0728830375228426e-06, -0.08408653736114502, -0.018341461196541786, -0.3134893476963043, -0.13282868266105652, -0.04003039747476578, -3.3070249557495117, -0.06494864076375961, -3.1464433670043945, -4.063215732574463, -0.12126539647579193, -2.0569911003112793, -2.6179847717285156, -1.1765645742416382, -2.06558895111084, -1.247294306755066, -3.4732236862182617, -4.469816207885742, -2.869337797164917, -1.8043962717056274, -0.21340465545654297, -1.1192010641098022, -4.350571632385254, -3.608698844909668, -2.337675094604492, -3.5231709480285645, -0.2669759690761566, -0.0007200032705441117, -0.037049975246191025, -1.7296265363693237, -0.8099119067192078], "finish_reason": "stop"}], "metrics": {"energy": 1076.1027252387994, "energy_per_token": 4.270248909677775, "time": 23.342653, "time_per_token": 0.0926295753968254}}
{"outputs": [{"text": "start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    cmd = f\"Rscript {script_path}\"\n    process = subprocess.Popen(shlex.split(cmd), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    decoded_stdout = stdout.decode(\"utf-8\")\n    decoded_stderr = stderr.decode(\"utf-8\")\n    results = {\n        'Start Time': start_time,\n        'End Time': end_time,\n        'Stdout': decoded_stdout,\n        'Stderr': decoded_stderr\n    }\n    return results", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "cmd", " =", " f", "\"", "R", "script", " {", "script", "_", "path", "}\"", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "cmd", ")", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "    ", "dec", "oded", "_", "stdout", " =", " std", "out", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n", "    ", "dec", "oded", "_", "stderr", " =", " st", "derr", ".", "decode", "(", "\"", "utf", "-", "8", "\"", ")", "\n", "    ", "results", " =", " {", "\n", "        ", "'", "Start", " Time", "':", " start", "_", "time", ",", "\n", "        ", "'", "End", " Time", "':", " end", "_", "time", ",", "\n", "        ", "'", "St", "d", "out", "':", " dec", "oded", "_", "stdout", ",", "\n", "        ", "'", "St", "derr", "':", " dec", "oded", "_", "stderr", "\n", "    ", "}", "\n", "    ", "return", " results", "\n", "\n", "if"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -0.33484557271003723, -0.0030967872589826584, -0.0007102350937202573, -0.022220799699425697, -0.0042416369542479515, -0.000910106289666146, -9.536697689327411e-06, -0.00045908879837952554, -0.0009202298242598772, -0.0018086755881085992, -0.0003630455757956952, -0.0001752223033690825, -0.0023371067363768816, -5.817244164063595e-05, -0.0034444546326994896, -8.093983342405409e-05, -0.061378974467515945, -0.3750610649585724, -1.5564481019973755, -0.16580277681350708, -0.6256480813026428, -0.2312380075454712, -0.1095188781619072, -0.017025738954544067, -0.09801843017339706, -0.22556467354297638, -5.1973900554003194e-05, -1.6212332411669195e-05, -0.011479044333100319, -0.0360495001077652, -0.04685637727379799, -1.2678700685501099, -0.004225611686706543, -0.0005254556890577078, -8.22540732769994e-06, -1.3589766240329482e-05, -0.11682264506816864, -4.994744449504651e-05, -0.0010132422903552651, -0.04006143659353256, -5.960446742392378e-06, -5.245195097813848e-06, -0.00019429226813372225, -0.0001839230244513601, -0.0011639971053227782, -0.027179745957255363, -0.0003325386205688119, -0.05210985988378525, -0.0006571040721610188, -0.0021196771413087845, -5.054346183896996e-05, -1.1920928244535389e-07, -1.1920922133867862e-06, -3.576278118089249e-07, 0.0, 0.0, -0.0028671605978161097, -0.001416751998476684, 0.0, -6.16293036728166e-05, -4.053033626405522e-05, 0.0, -1.311301275563892e-06, -0.005525791086256504, 0.0, 0.0, -0.056974146515131, -0.001347110839560628, -0.03593416139483452, -0.021208522841334343, -0.026169808581471443, -0.0007407305529341102, -0.00022909401741344482, -0.00018523407925385982, -0.0011876918142661452, -2.861018856492592e-06, -9.059865078597795e-06, -0.0008665143977850676, -0.000303818320389837, -0.004149992950260639, -0.03616655245423317, -0.5699602961540222, -3.302042750874534e-05, -5.221230458118953e-05, -0.00039319414645433426, -0.00025006983196362853, -9.894321920000948e-06, -2.6225699912174605e-05, -9.65590606938349e-06, -3.8742269680369645e-05, -1.549708758830093e-05, -8.344646857949556e-07, -0.00024256148026324809, -2.396077979938127e-05, -1.490105023549404e-05, -1.4662635294371285e-05, -3.909988299710676e-05, -1.4305104514278355e-06, -1.168244216387393e-05, -2.50339189733495e-06, -3.0278701160568744e-05, -3.4570634852570947e-06, -1.2278481335670222e-05, -1.1920922133867862e-06, -2.884823152271565e-05, -4.6491513785440475e-06, -1.0609570381348021e-05, -1.7523612768854946e-05, -0.00013529339048545808, -0.2892191708087921, -2.0710084438323975, -0.015265651047229767, -0.0035839155316352844, -0.008131138980388641, -0.021360699087381363, -0.027273597195744514, -4.529942543740617e-06, -0.0003721021639648825, -0.0006510283565148711, -2.201655387878418, -0.023081209510564804, -0.013675451278686523, -0.004298732616007328, -0.00028868322260677814, -2.3841830625315197e-06, -0.02775697596371174, -0.27647486329078674, -8.201262971851975e-05, -0.0024452093057334423, -1.6689286894688848e-06, -2.0265558760002023e-06, -0.00037329382030293345, -0.0001932195882545784, -0.0013952055014669895, -3.6954811548639555e-06, -3.8742269680369645e-05, -1.7881377516459906e-06, -0.002720704535022378, -4.672895011026412e-05, -1.549708758830093e-05, -0.0001161031104857102, -5.006777428206988e-06, -1.311301275563892e-06, -0.00011252723925281316, -0.0017891604220494628, -0.15790612995624542, -3.1455986499786377, -0.05381084978580475, -0.22586467862129211, -0.00589465769007802, -0.033728182315826416, -0.3279719054698944, -0.007314567919820547, -0.0030484178569167852, -0.0026944305282086134, -0.007338827475905418, -2.50339189733495e-06, -1.1920928244535389e-07, -0.000570253818295896, -0.002613702090457082, -0.0003457663697190583, -0.0002563863235991448, -0.00016008525562938303, -0.00022396916756406426, -0.00084436044562608, -0.0010623055277392268, -4.768370445162873e-07, 0.0, -0.0004861365014221519, -7.760223525110632e-05, -0.0013224674621596932, -0.0014721043407917023, -0.011549397371709347, -3.1709168979432434e-05, -5.0424259825376794e-05, -0.0005607224884442985, -0.004013460595160723, 0.0, -2.50339189733495e-06, -2.50339189733495e-06, -0.027167217805981636, -0.0008771148277446628, -0.0003887851198669523, -0.00019858295854646713, -0.0005575056420639157, -0.000271879427600652, -0.0001426833332516253, -0.0007078525959514081, -1.1920928244535389e-07, -7.748573807475623e-06, -2.3483953555114567e-05, -0.06046977639198303, -0.009632300585508347, -4.339123915997334e-05, -0.00042691652197390795, -0.029303887858986855, -0.019992390647530556, -0.007062234450131655, -0.19452156126499176, -0.044961631298065186, -0.9057517647743225], "finish_reason": "stop"}], "metrics": {"energy": 889.5820213050843, "energy_per_token": 4.196141609929643, "time": 19.822927, "time_per_token": 0.09350437264150943}}
{"outputs": [{"text": "# Get the current time as the start time\n    start_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n\n    # Split the script path into a list of arguments using the shlex module\n    # This will split the path into a list of individual arguments, including the script name and any command line arguments that may be present\n    args = shlex.split(script_path)\n\n    # Run the R script using the subprocess module\n    # The subprocess module will run the script and return the output and error messages\n    # The run() method takes a list of arguments and returns a CompletedProcess object\n    # The CompletedProcess object has attributes such as stdout, stderr, and returncode\n    completed_process = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n    # Get the end time after the script has finished running\n    # This will be used to calculate the total time the script took to run\n    end_time = datetime.now().strftime(\"%Y-%m-%d %H:%", "tokens": ["#", " Get", " the", " current", " time", " as", " the", " start", " time", "\n", "    ", "start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "\"", ")", "\n", "\n", "    ", "#", " Split", " the", " script", " path", " into", " a", " list", " of", " arguments", " using", " the", " sh", "lex", " module", "\n", "    ", "#", " This", " will", " split", " the", " path", " into", " a", " list", " of", " individual", " arguments", ",", " including", " the", " script", " name", " and", " any", " command", " line", " arguments", " that", " may", " be", " present", "\n", "    ", "args", " =", " sh", "lex", ".", "split", "(", "script", "_", "path", ")", "\n", "\n", "    ", "#", " Run", " the", " R", " script", " using", " the", " sub", "process", " module", "\n", "    ", "#", " The", " sub", "process", " module", " will", " run", " the", " script", " and", " return", " the", " output", " and", " error", " messages", "\n", "    ", "#", " The", " run", "()", " method", " takes", " a", " list", " of", " arguments", " and", " returns", " a", " Com", "pleted", "Process", " object", "\n", "    ", "#", " The", " Com", "pleted", "Process", " object", " has", " attributes", " such", " as", " std", "out", ",", " st", "derr", ",", " and", " return", "code", "\n", "    ", "completed", "_", "process", " =", " sub", "process", ".", "run", "(", "args", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "\n", "    ", "#", " Get", " the", " end", " time", " after", " the", " script", " has", " finished", " running", "\n", "    ", "#", " This", " will", " be", " used", " to", " calculate", " the", " total", " time", " the", " script", " took", " to", " run", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%"], "logprobs": [-0.9389397501945496, -1.4578988552093506, -0.36811643838882446, -0.1293625384569168, -0.6083084940910339, -1.9631704092025757, -0.1644285023212433, -0.02743436209857464, -0.0029916076455265284, -0.11812291294336319, -0.0011655449634417892, -0.0553632415831089, -0.06792481988668442, -0.011424360796809196, -0.012163628824055195, -0.030447009950876236, -4.911301948595792e-05, -0.01783793419599533, -8.77341881277971e-05, -0.23166626691818237, -0.003037959337234497, -2.7418097943154862e-06, -0.3904936909675598, -0.0015304292319342494, -0.0004314445541240275, -0.02441028505563736, -0.004273330792784691, -0.0011095802765339613, -9.65590606938349e-06, -0.0002479245886206627, -0.000771939754486084, -0.0009783487766981125, -0.0002775999018922448, -0.00015579440514557064, -0.0009263038518838584, -3.135155202471651e-05, -0.0018830440239980817, -7.235741941258311e-05, -0.0019026764202862978, -0.1295880228281021, -0.00083078199531883, -0.03020588308572769, -2.409442901611328, -0.08476535975933075, -0.27564868330955505, -0.0902755856513977, -0.3436192572116852, -1.1819590330123901, -0.03489745780825615, -0.09649054706096649, -0.39376986026763916, -1.0124309062957764, -2.579582929611206, -0.12949931621551514, -3.969590397900902e-05, -0.7512028813362122, -0.025461746379733086, -0.00037925204378552735, -2.2393851280212402, -0.29216116666793823, -2.8854732513427734, -1.7183910608291626, -0.10528931766748428, -0.6803949475288391, -0.5694273114204407, -2.1101818084716797, -0.007593339309096336, -0.03045637533068657, -1.921399712562561, -0.6150948405265808, -0.2809462547302246, -1.1514030694961548, -0.22126199305057526, -1.102268934249878, -0.3854734003543854, -0.265188992023468, -0.1119886040687561, -2.0006051063537598, -1.4428794384002686, -0.1122513934969902, -1.9818153381347656, -0.661348283290863, -0.02271163836121559, -0.9045727252960205, -0.16898231208324432, -0.0019201666582375765, -1.4982593059539795, -0.03975147381424904, -0.0008884296985343099, -4.768370445162873e-07, -7.748573807475623e-06, -2.1576648578047752e-05, -0.0006762839620932937, -0.022358600050210953, -2.098061486321967e-05, -1.1324817933200393e-05, -0.00805569626390934, -0.003894721856340766, -0.029970714822411537, -0.0006501944735646248, -0.005580205004662275, -0.724801242351532, -0.0028709645848721266, -0.29501938819885254, -0.051182907074689865, -0.14691413938999176, -0.5261650085449219, -0.01660596765577793, -0.00025281094713136554, -0.07120572775602341, -0.40860459208488464, -0.0010419422760605812, -0.16108720004558563, -0.5547663569450378, -2.034485340118408, -0.00028046013903804123, -1.1063355207443237, -3.2626116275787354, -0.7578966021537781, -0.004805800039321184, -1.1659128665924072, -0.6209486126899719, -2.2516229152679443, -0.09715775400400162, -0.501594066619873, -1.1517773866653442, -0.40405943989753723, -0.3192761540412903, -0.31308621168136597, -0.003732857992872596, -0.22807075083255768, -0.12844990193843842, -3.18350887298584, -0.360488623380661, -0.5582844614982605, -1.0284932851791382, -0.5080716013908386, -0.0019131468143314123, -0.00011872540198964998, -0.021221360191702843, -3.174866199493408, -0.5283061861991882, -0.04044857993721962, -0.046040669083595276, -3.576278118089249e-07, -6.770858453819528e-05, -0.0032140761613845825, -0.13196036219596863, -0.002913993550464511, -0.15021143853664398, -0.06231624260544777, -0.7470456957817078, -1.7404405298293568e-05, -8.976056415122002e-05, -0.0008630603551864624, -0.5610014796257019, -0.15488821268081665, -0.6240994334220886, -0.00012861855793744326, -1.1595563888549805, -1.8596476365928538e-05, -0.9230008721351624, -0.0024436633102595806, -1.6689286894688848e-06, -0.014349368400871754, -0.010176085866987705, -0.01714339666068554, -0.0012756790965795517, -0.08351384848356247, -0.012822206132113934, -1.9586992263793945, -0.01446146797388792, -0.005927246995270252, -0.006906209979206324, -0.0002967870968859643, -1.549708758830093e-05, -1.0490362910786644e-05, -0.00013076403411105275, -0.000998832518234849, -0.07675023376941681, -0.014684336259961128, -0.5827062726020813, -0.00020215852418914437, -0.0027032282669097185, -0.00011848701251437888, -3.576278118089249e-07, -8.4638240878121e-06, -1.0728830375228426e-06, 0.0, 0.0, -0.00026901919045485556, -0.00026127262390218675, 0.0, -1.3708974620385561e-05, -7.390948667307384e-06, -3.576278118089249e-07, -7.152555099310121e-07, -0.000990734319202602, 0.0, 0.0, -0.24044431746006012, -0.0012015035608783364, -0.018831633031368256, -0.000448841426987201, -0.0013763965107500553, -0.3205741047859192, -0.00044490929576568305, -1.1827911138534546, -0.00016711745411157608, -0.18600116670131683, -0.015263890847563744, -0.2046591192483902, -0.05950797349214554, -0.3121701180934906, -0.04961981251835823, -0.002884158631786704, -5.1616290875244886e-05, -2.731584072113037, -0.8848497271537781, -0.3236849009990692, -0.26398488879203796, -0.46728891134262085, -0.1160300225019455, -0.15856830775737762, -0.022873837500810623, -0.6951724290847778, -0.7857076525688171, -1.3633124828338623, -0.013143331743776798, -0.1551521122455597, -0.002044850494712591, -0.01677045039832592, -0.011188269592821598, -0.00025293012731708586, -0.14095041155815125, -3.58813522325363e-05, -9.179073458653875e-06, -0.0001225396408699453, -0.0004855407460127026, -4.887569048150908e-06, -3.516612196108326e-05, -4.434487345861271e-05, -0.0007155956700444221, -8.583032467868179e-06, 0.0, -0.0014252038672566414, -2.634490556374658e-05, -1.0013530300057027e-05, -3.0397906812140718e-05, -0.00018463814922142774, -5.722029527532868e-06, -7.986703712958843e-05, -1.1920922133867862e-06, -2.7894584491150454e-05, -5.245195097813848e-06, -1.811964830267243e-05], "finish_reason": "length"}], "metrics": {"energy": 1062.444800632477, "energy_per_token": 4.150175002470613, "time": 23.592438, "time_per_token": 0.0921579609375}}
{"outputs": [{"text": "start_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    process = subprocess.Popen(shlex.split(f'Rscript {script_path}'), stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = process.communicate()\n    stdout, stderr = stdout.decode(), stderr.decode()\n    end_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n    return {'Start Time': start_time, 'End Time': end_time, 'Stdout': stdout, 'Stderr': stderr}", "tokens": ["start", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "process", " =", " sub", "process", ".", "P", "open", "(", "sh", "lex", ".", "split", "(", "f", "'", "R", "script", " {", "script", "_", "path", "}", "')", ",", " std", "out", "=", "sub", "process", ".", "P", "IP", "E", ",", " st", "derr", "=", "sub", "process", ".", "P", "IP", "E", ")", "\n", "    ", "stdout", ",", " st", "derr", " =", " process", ".", "commun", "icate", "()", "\n", "    ", "stdout", ",", " st", "derr", " =", " std", "out", ".", "decode", "()", ",", " st", "derr", ".", "decode", "()", "\n", "    ", "end", "_", "time", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", ":%", "S", "')", "\n", "    ", "return", " {'", "Start", " Time", "':", " start", "_", "time", ",", " '", "End", " Time", "':", " end", "_", "time", ",", " '", "St", "d", "out", "':", " std", "out", ",", " '", "St", "derr", "':", " st", "derr", "}", "\n", "\n", "if"], "logprobs": [-1.011443853378296, -0.12399100512266159, -0.017589062452316284, -0.01554761454463005, -0.034712787717580795, -0.00018523407925385982, -0.0488557368516922, -0.00012396997772157192, -0.2220996916294098, -0.012630470097064972, -4.887569048150908e-06, -1.257603645324707, -0.0010119322687387466, -0.014530671760439873, -0.006791721563786268, -0.0011264891363680363, -9.536697689327411e-06, -0.00025281094713136554, -0.0009663202799856663, -0.0014647241914644837, -0.0005548844928853214, -0.00013171759201213717, -0.0012400802224874496, -4.2199197196168825e-05, -0.0031648806761950254, -0.04408574476838112, -0.2985479533672333, -2.138519763946533, -0.027771933004260063, -0.004732123576104641, -1.8715683836489916e-05, -3.981510963058099e-05, -0.22634124755859375, -4.1960789531003684e-05, -0.8861109614372253, -0.3267390727996826, -3.5523738915799186e-05, -3.909988299710676e-05, -0.0017227584030479193, -0.8420416116714478, -0.1757131963968277, -0.6564205884933472, -0.03671896830201149, -0.05416605994105339, -0.11445628106594086, -0.004313569515943527, -2.312633478140924e-05, -5.364403477869928e-06, -0.04378364607691765, -0.0054626003839075565, -0.0018650771817192435, -0.1679764688014984, -0.002920412225648761, -0.007120115682482719, -0.0002494739310350269, -1.0728830375228426e-06, -2.622600959512056e-06, -7.152555099310121e-07, 0.0, -1.1920928244535389e-07, -0.0030850220937281847, -0.000841025379486382, -1.1920928244535389e-07, -7.724463648628443e-05, -0.00012730741582345217, -1.1920928244535389e-07, -4.291525328881107e-06, -0.013356143608689308, 0.0, 0.0, -0.05992920696735382, -0.0026035956107079983, -0.026364076882600784, -0.03384135663509369, -0.030025664716959, -0.001634453423321247, -0.0003231241717003286, -0.00030429501202888787, -0.0024091764353215694, -7.629365427419543e-06, -5.304672595229931e-05, -0.0013398488517850637, -0.000557267339900136, -0.0065141478553414345, -0.02035490982234478, -1.0293031930923462, -1.1999294757843018, -0.0018117694417014718, -0.00011884459672728553, -0.0019104102393612266, -0.002750782296061516, -8.344646857949556e-07, -0.00020454221521504223, -0.003123525995761156, -1.1341750621795654, -0.03393976762890816, -0.0008157739648595452, -0.0006486457423307002, -1.9430925021879375e-05, -2.0265558760002023e-06, -0.0008889061282388866, -0.013774457387626171, -0.026265030726790428, -0.08507788181304932, -2.610649426060263e-05, -5.447716102935374e-05, -0.0009324969723820686, -0.0010468247346580029, -8.821448318485636e-06, -4.4225667807040736e-05, -1.4662635294371285e-05, -4.1960789531003684e-05, -2.7417760065873154e-05, -9.536738616588991e-07, -0.00026973424246534705, -3.1470757676288486e-05, -2.2053474822314456e-05, -0.00010168035078095272, -9.536738616588991e-07, -9.536697689327411e-06, -7.152555099310121e-07, -2.634490556374658e-05, -1.0251946150674485e-05, -2.2291887944447808e-05, -5.483612312673358e-06, -3.182837463100441e-05, -6.9141146923357155e-06, -2.6225699912174605e-05, -0.00019131260341964662, -0.29906508326530457, -0.23141083121299744, -0.3327149450778961, -0.005174458492547274, -0.002966410480439663, -0.004691545385867357, -0.01081769447773695, -4.768360213347478e-06, -2.3841855067985307e-07, -0.00045563330058939755, -0.028306525200605392, -0.0002928543253801763, -0.00039521988946944475, -0.0002661589242052287, -0.0009678685455583036, -1.6689286894688848e-06, -4.768370445162873e-07, -0.00040415700641460717, -0.004587483126670122, -0.009560986422002316, -1.07287787614041e-05, -5.602679812000133e-05, -0.0003209791029803455, -0.002009755000472069, -2.3841830625315197e-06, -0.018259644508361816, -0.0013102050870656967, -0.0003238391946069896, -0.00013362467871047556, -0.00022766382608097047, -0.0007552632014267147, -5.8412379075889476e-06, -0.22934453189373016, -0.055139441043138504, -0.056046392768621445, -0.7677338719367981], "finish_reason": "stop"}], "metrics": {"energy": 658.9024627075195, "energy_per_token": 3.9933482588334512, "time": 15.045322, "time_per_token": 0.0911837696969697}}
