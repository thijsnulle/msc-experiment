{"outputs": [{"text": "mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda x: target_value in x, axis=1).values\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    plt.show()\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "['", "Column", "1", "'", ",", " '", "Column", "2", "'", ",", " '", "Column", "3", "']", "]", ".", "apply", "(", "lambda", " x", ":", " target", "_", "value", " in", " x", ",", " axis", "=", "1", ")", ".", "values", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "Y", "l", "G", "nB", "u", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " mask", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.864570677280426, -0.020824365317821503, -0.11957137286663055, -2.312633478140924e-05, -0.9840719103813171, -1.4361244440078735, -0.009055733680725098, -0.009001036174595356, -0.00632025022059679, -0.0001754606782924384, -0.03686753660440445, -0.00022742546570952982, -0.00849951896816492, -0.014163566753268242, -1.7523612768854946e-05, -0.0045219785533845425, -0.00020454221521504223, -0.00018416139937471598, -0.00159708212595433, -0.002732949797064066, -0.7438523769378662, -0.2775785028934479, -0.18313874304294586, -0.15080583095550537, -0.1731184422969818, -0.0010044296504929662, -0.5960440039634705, -0.00043275527423247695, -0.00010346830822527409, -0.009723089635372162, -0.05049154534935951, -0.3254871666431427, -0.008942908607423306, -0.07570495456457138, -0.008807147853076458, -0.008275977335870266, -1.6344945430755615, -2.36248779296875, -0.09171130508184433, -0.11561117321252823, -0.4974134862422943, -0.009790615178644657, -0.034732937812805176, -1.9073468138230965e-06, -4.3987260141875595e-05, -0.0014724613865837455, -5.8887653722194955e-05, -0.0006086166249588132, -0.0646781474351883, -0.23368379473686218, -0.34721988439559937, -0.09238942712545395, -0.11877595633268356, -1.371663212776184, -0.0015274535398930311, -0.3050088584423065, -0.03180086612701416, -0.00019095504831057042, -0.6876914501190186, -0.024091826751828194, -0.11319755017757416, -2.2398128509521484, -0.00013565097469836473, -0.3579663932323456, -0.027126148343086243, -0.05094808712601662, -0.09405186027288437, -0.03916531056165695, -0.12878134846687317, -0.027635108679533005, -0.017559662461280823, -1.6046942472457886, -1.6689286894688848e-06, -1.0728830375228426e-06, -4.541770613286644e-05, -0.000125281119835563, -0.1045948788523674], "finish_reason": "stop"}], "metrics": {"energy": 190.1513043422699, "energy_per_token": 2.469497458990518, "time": 5.8941875, "time_per_token": 0.07654788961038961}}
{"outputs": [{"text": "if target_value == '332':\n        target_value = 'a332'\n\n    mask = dataframe == target_value\n\n    return (mask, dataframe[mask])\n\ndf = pd.DataFrame({\n    'Column1': ['0', 'a', '332', '33'],\n    'Column2': ['1', 'bb', '332', '22'],\n    'Column3': ['2', 'ccc', '2', '332']\n})\n\nmask, df = task_func(df, '332')\nprint(mask)\nprint(df)\nprint()\n\nmask, df = task_func(df, '2')\nprint(mask)\nprint(df)", "tokens": ["if", " target", "_", "value", " ==", " '", "3", "3", "2", "':", "\n", "        ", "target", "_", "value", " =", " '", "a", "3", "3", "2", "'", "\n", "\n", "    ", "mask", " =", " data", "frame", " ==", " target", "_", "value", "\n", "\n", "    ", "return", " (", "mask", ",", " data", "frame", "[", "mask", "])", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "\n", "    ", "'", "Column", "1", "':", " ['", "0", "'", ",", " '", "a", "'", ",", " '", "3", "3", "2", "'", ",", " '", "3", "3", "']", ",", "\n", "    ", "'", "Column", "2", "':", " ['", "1", "'", ",", " '", "bb", "'", ",", " '", "3", "3", "2", "'", ",", " '", "2", "2", "']", ",", "\n", "    ", "'", "Column", "3", "':", " ['", "2", "'", ",", " '", "ccc", "'", ",", " '", "2", "'", ",", " '", "3", "3", "2", "']", "\n", "})", "\n", "\n", "mask", ",", " df", " =", " task", "_", "func", "(", "df", ",", " '", "3", "3", "2", "')", "\n", "print", "(", "mask", ")", "\n", "print", "(", "df", ")", "\n", "print", "()", "\n", "\n", "mask", ",", " df", " =", " task", "_", "func", "(", "df", ",", " '", "2", "')", "\n", "print", "(", "mask", ")", "\n", "print", "(", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.4021525382995605, -1.0966465473175049, -0.0007740838918834925, -0.0001787979417713359, -1.262608528137207, -0.15942256152629852, -0.11633919179439545, -0.0034878156147897243, -0.010467627085745335, -0.012048444710671902, -0.0425928495824337, -0.019515296444296837, -1.6205220222473145, -0.21552276611328125, -0.21375812590122223, -0.11748131364583969, -0.4123292565345764, -3.2813899517059326, -2.8151562213897705, -0.15410088002681732, -0.10803725570440292, -0.2544429302215576, -0.0297638401389122, -1.0731996297836304, -0.003020726377144456, -0.7250410914421082, -0.03607410937547684, -0.1889558881521225, -2.9682672902708873e-05, -2.420799732208252, -0.010712497867643833, -0.00013195598148740828, -3.325883881188929e-05, -0.01721218042075634, -1.0697460174560547, -0.000436925794929266, -2.001770496368408, -1.9786560535430908, -0.08994289487600327, -0.029883479699492455, -3.8165135383605957, -0.0010389650706201792, -1.1407368183135986, -0.09753185510635376, -0.5741816163063049, -0.1451091170310974, -0.017666833475232124, -2.998880386352539, -0.06307324022054672, -0.020285990089178085, -0.0002455409849062562, -0.0632820650935173, -0.0646943524479866, -0.04392215609550476, -0.033684730529785156, -0.017412647604942322, -0.15295729041099548, -0.011917699128389359, -0.0005100856651552022, -0.014534078538417816, -0.05879436060786247, -0.003801977029070258, -5.745722592109814e-05, -0.0011202972382307053, -0.04542172700166702, -0.0011249411618337035, -7.152531907195225e-06, -0.0007077334448695183, -0.01783137582242489, -0.0012723454274237156, -0.0031764074228703976, -0.006728255655616522, -2.253030106658116e-05, -0.0005760917556472123, -0.010559283196926117, -0.0012548437807708979, -0.03853452950716019, -0.00013362467871047556, -0.0003673355677165091, -0.00021336186910048127, -0.0001389883691444993, -0.00024959311122074723, -0.00022933237778488547, -1.549708758830093e-05, -0.001081953989341855, -0.0016946729738265276, -0.00037949037505313754, -1.9073468138230965e-06, -0.00020346954988781363, -0.005416598170995712, -0.0006797387031838298, -6.437280717364047e-06, -0.00035613393993116915, -0.010000010021030903, -0.0011194637045264244, -0.8374965786933899, -0.0035574266221374273, -2.9682672902708873e-05, -0.000508417550008744, -0.0028064174111932516, -0.0006007535266689956, -0.0005116345710121095, -0.00032824851223267615, -0.00018737945356406271, -0.0005641775787808001, -0.00014184899919200689, -0.00022063204960431904, -0.00025817399728111923, -9.417489309271332e-06, -0.0003022690652869642, -0.000972155889030546, -0.00038092033355496824, -1.4305104514278355e-06, -0.00012313561455812305, -0.001647425931878388, -6.8662193370983e-05, -2.0265558760002023e-06, -0.00048101297579705715, -0.037668950855731964, -0.01232872623950243, -4.23184028477408e-05, -0.0004349001101218164, -0.0032162151765078306, -0.0010440857149660587, -0.005143860820680857, -0.0008216104470193386, -0.058046381920576096, -0.025325186550617218, -0.004790139850229025, -0.25250375270843506, -0.14341776072978973, -0.009594990871846676, -1.3731787204742432, -1.1978986263275146, -0.002590635558590293, -8.702239938429557e-06, -5.1377883210079744e-05, -0.0010868363315239549, -0.005030949134379625, -0.1693616807460785, -0.03311748802661896, -0.049947597086429596, -0.0022448119707405567, -0.01954393833875656, -0.0019594295881688595, -0.02371017076075077, -2.174434185028076, -0.07321620732545853, -0.19786183536052704, -0.19716118276119232, -0.023565921932458878, -0.3474712371826172, -0.05537158623337746, -0.03485117852687836, -0.3280509114265442, -0.07689540088176727, -2.6032426357269287, -1.9525630474090576, -0.040844157338142395, -0.30678561329841614, -1.3281818628311157, -0.18268810212612152, -0.07418517768383026, -0.011201825924217701, -0.00342996115796268, -0.00016509123088326305, -0.00020430385484360158, -0.004067007452249527, -0.024854352697730064, -0.0916508361697197, -0.02934614196419716, -2.6769278049468994, -0.7343766689300537, -0.003436613827943802, -0.02756982110440731, -0.0029967185109853745, -0.003849953645840287, -0.004762021824717522, -0.002921957289800048, -0.004734614863991737, -0.002489326987415552, -0.0015564957866445184, -1.1680288314819336, -1.1920928244535389e-07, -7.152555099310121e-07, -1.0609570381348021e-05, -0.00038890427094884217, -0.17676414549350739], "finish_reason": "stop"}], "metrics": {"energy": 210.09806920051588, "energy_per_token": 1.1175429212793397, "time": 8.196702, "time_per_token": 0.04359947872340426}}
{"outputs": [{"text": "mask = dataframe['Column1'] == target_value\n    return mask, ax.heatmap(mask, cbar_ax=ax, cbar_label='Found')\n\ndf = pd.DataFrame({\n    'Column1': ['0', 'a', '332', '33'],\n    'Column2': ['1', 'bb', '332', '22'],\n    'Column3': ['2', 'ccc', '2', '332']\n})\n\nax = plt.subplots()[1]\n\nmask, ax = task_func(df, '332')\nax.set_title('Result')", "tokens": ["mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "    ", "return", " mask", ",", " ax", ".", "heat", "map", "(", "mask", ",", " c", "bar", "_", "ax", "=", "ax", ",", " c", "bar", "_", "label", "='", "Found", "')", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "\n", "    ", "'", "Column", "1", "':", " ['", "0", "'", ",", " '", "a", "'", ",", " '", "3", "3", "2", "'", ",", " '", "3", "3", "']", ",", "\n", "    ", "'", "Column", "2", "':", " ['", "1", "'", ",", " '", "bb", "'", ",", " '", "3", "3", "2", "'", ",", " '", "2", "2", "']", ",", "\n", "    ", "'", "Column", "3", "':", " ['", "2", "'", ",", " '", "ccc", "'", ",", " '", "2", "'", ",", " '", "3", "3", "2", "']", "\n", "})", "\n", "\n", "ax", " =", " plt", ".", "sub", "plots", "()[", "1", "]", "\n", "\n", "mask", ",", " ax", " =", " task", "_", "func", "(", "df", ",", " '", "3", "3", "2", "')", "\n", "ax", ".", "set", "_", "title", "('", "Result", "')"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -0.22839175164699554, -0.0026666102930903435, -0.1994035840034485, -0.016464324668049812, -5.8410845667822286e-05, -4.23184028477408e-05, -0.031514670699834824, -0.159295916557312, -1.4193322658538818, -0.27490946650505066, -0.0518922358751297, -0.845258891582489, -1.8838587999343872, -0.8092450499534607, -0.0003524397616274655, -0.005794513039290905, -0.11328420042991638, -0.5173483490943909, -0.21920791268348694, -2.4185688495635986, -1.5243444442749023, -3.6294379234313965, -0.012040435336530209, -0.10888691246509552, -0.9638031721115112, -0.3056122362613678, -0.47920045256614685, -0.03814847767353058, -0.5150431394577026, -0.33707284927368164, -3.0444092750549316, -0.5034807920455933, -0.23271720111370087, -0.022905878722667694, -2.524266242980957, -0.03885381296277046, -0.0165004413574934, -7.843663479434326e-05, -0.06026721000671387, -0.07818961888551712, -0.03581846132874489, -0.03702757507562637, -0.010415955446660519, -0.08735436201095581, -0.0116370664909482, -0.0004365683125797659, -0.011022865772247314, -0.05943765863776207, -0.002012848388403654, -4.136476854910143e-05, -0.0009314250783063471, -0.030118554830551147, -0.0005278385942801833, -4.529942543740617e-06, -0.00046135272714309394, -0.007848614826798439, -0.0007864719373174012, -0.0021312159951776266, -0.0038684785831719637, -1.2278481335670222e-05, -0.0004170263418927789, -0.007514425087720156, -0.001082073082216084, -0.02961837686598301, -9.202533692587167e-05, -0.0005321278586052358, -0.00020919041708111763, -0.00013016807497479022, -0.0001658063702052459, -0.0002401778765488416, -1.2636104656849056e-05, -0.0008852138998918235, -0.0010102650849148631, -0.0002933310461230576, -1.9073468138230965e-06, -0.0001546025014249608, -0.003296776209026575, -0.00043108707177452743, -4.768360213347478e-06, -0.00020215852418914437, -0.0028638325165957212, -0.000578474544454366, -0.6885642409324646, -0.0027980960439890623, -2.5510462364763953e-05, -0.0004146431456319988, -0.0030893003568053246, -0.0006330393371172249, -0.0004262015863787383, -0.0002628219372127205, -0.0002033503697020933, -0.00029416524921543896, -0.00011681827891152352, -0.00019894051365554333, -0.00025662468397058547, -6.556489552167477e-06, -0.0002696150622796267, -0.0006541258189827204, -0.00028427375946193933, -7.152555099310121e-07, -9.369411418447271e-05, -0.000846147071570158, -4.660974445869215e-05, -1.4305104514278355e-06, -0.00037126801908016205, -0.03523286432027817, -0.010762620717287064, -3.886147169396281e-05, -0.0006098079611547291, -0.002981980564072728, -0.0009831124916672707, -0.006580942776054144, -0.0006803343421779573, -0.059258025139570236, -0.0273114126175642, -0.01018021535128355, -0.5798344612121582, -2.2812962532043457, -0.05167999863624573, -0.460440456867218, -0.0007022537174634635, -0.23857618868350983, -0.7389199733734131, -1.0397837162017822, -0.0005278385942801833, -0.0021095657721161842, -0.026922861114144325, -1.2253952026367188, -0.43922165036201477, -0.03641590103507042, -0.17882733047008514, -0.0454842671751976, -0.0036992470268160105, -6.12716976320371e-05, -8.082063141046092e-05, -0.0004924515378661454, -0.01041064690798521, -0.06410787254571915, -0.02902740053832531, -0.01650560088455677, -0.0011449456214904785, -0.009716124273836613, -0.000734178873244673, -0.09803129732608795, -2.5371363162994385, -0.07148478180170059, -0.28422510623931885, -0.1728011667728424, -0.2918277084827423, -0.15886175632476807, -4.006025314331055, -0.4456278681755066], "finish_reason": "stop"}], "metrics": {"energy": 174.69804798316954, "energy_per_token": 1.105683847994744, "time": 6.737873, "time_per_token": 0.04264476582278481}}
{"outputs": [{"text": "# Filter dataframe by target_value\n    filtered_df = dataframe[dataframe['Column1'] == target_value]\n    filtered_df.reset_index(drop=True)\n\n    # Create a mask with True values for target_value occurrences\n    target_value_mask = filtered_df['Column1'].map(lambda x: x == target_value)\n\n    # Create heatmap with target_value_mask\n    fig, ax = plt.subplots(figsize=(10, 10))\n    ax = sns.heatmap(target_value_mask.astype(int), annot=True, fmt=\"d\", cmap=\"Blues\", ax=ax, vmax=1)\n\n    return target_value_mask, ax", "tokens": ["#", " Filter", " data", "frame", " by", " target", "_", "value", "\n", "    ", "filtered", "_", "df", " =", " data", "frame", "[", "data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "]", "\n", "    ", "filtered", "_", "df", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", "\n", "\n", "    ", "#", " Create", " a", " mask", " with", " True", " values", " for", " target", "_", "value", " occurrences", "\n", "    ", "target", "_", "value", "_", "mask", " =", " filtered", "_", "df", "['", "Column", "1", "']", ".", "map", "(", "lambda", " x", ":", " x", " ==", " target", "_", "value", ")", "\n", "\n", "    ", "#", " Create", " heat", "map", " with", " target", "_", "value", "_", "mask", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "target", "_", "value", "_", "mask", ".", "ast", "ype", "(", "int", ")", ",", " annot", "=", "True", ",", " fmt", "=", "\"", "d", "\"", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ",", " ax", "=", "ax", ",", " v", "max", "=", "1", ")", "\n", "\n", "    ", "return", " target", "_", "value", "_", "mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.3737635612487793, -3.692251205444336, -2.1692512035369873, -0.172422394156456, -2.3864736557006836, -0.21219304203987122, -1.5327353477478027, -0.0066714175045490265, -0.2679861783981323, -0.002681352896615863, -0.9833837747573853, -0.07994546741247177, -0.43261364102363586, -0.001570064458064735, -0.01806461624801159, -2.253030106658116e-05, -0.2058498114347458, -0.01682988367974758, -6.198863957251888e-06, -0.21484659612178802, -0.02914411760866642, -0.39320138096809387, -0.0005887205479666591, -0.08080162107944489, -0.005612922832369804, -8.427741704508662e-05, -1.490105023549404e-05, -0.00873849168419838, -0.015292888507246971, -1.4725569486618042, -1.7265697717666626, -0.0012835367815569043, -0.05715036019682884, -1.2766960859298706, -1.0866403579711914, -3.766942609217949e-05, -0.0008554374799132347, -0.03748731687664986, -0.35877636075019836, -0.007606353145092726, -0.004005268216133118, -2.72233247756958, -0.0638599693775177, -0.44356176257133484, -0.001321157906204462, -0.11537497490644455, -0.8637843132019043, -0.73110032081604, -1.4601496458053589, -2.2099742889404297, -1.1736562252044678, -0.5630823969841003, -0.8812612295150757, -1.7376834154129028, -0.13455480337142944, -0.02820025570690632, -0.8576105833053589, -0.14793510735034943, -0.000614216027315706, -3.0365190505981445, -0.014522447250783443, -1.6509993076324463, -0.04586373642086983, -0.13520658016204834, -0.0013960388023406267, -0.30475670099258423, -8.380061626667157e-05, -2.658331868587993e-05, -0.3221888840198517, -0.002015227684751153, -0.31741464138031006, -0.0004829194222111255, -0.6009435057640076, -1.137694001197815, -0.024232393130660057, -0.15633153915405273, -0.04496687278151512, -0.000558220490347594, -0.1750939041376114, -0.06312718242406845, -0.02045290544629097, -2.7418097943154862e-06, -4.172316494077677e-06, -0.002427014522254467, -0.032069891691207886, -0.16098074615001678, -0.00038521020906046033, -0.07003393024206161, -0.5597355365753174, -2.557370185852051, -0.0023701691534370184, -1.843437910079956, -1.1188362836837769, -0.021237699314951897, -0.002183792879804969, -0.8021444082260132, -0.000993592431768775, -0.9957538843154907, -0.0012394849909469485, -1.2688791751861572, -0.04412783309817314, -0.006005575880408287, -0.0022708598989993334, -0.0005603650351986289, -7.73638384998776e-05, -0.0001433984871255234, -3.135155202471651e-05, -0.8097547888755798, -0.01741756685078144, -0.00033623288618400693, -0.00996436644345522, -0.5902653932571411, -0.5355764627456665, -0.002170470543205738, -0.03135386481881142, -1.4776307344436646, -0.013064148835837841, -0.007903020828962326, -0.004484952427446842, -0.024711081758141518, -2.226255416870117, -0.31556859612464905, -0.003430911572650075, -2.145764938177308e-06, -1.2278481335670222e-05, -0.0008754473528824747, -8.511180931236595e-05, -0.00024232311989180744, -0.5314076542854309, -0.0008435266790911555, -8.821448318485636e-06, -3.659658250398934e-05, -3.814689989667386e-06, -2.120405435562134, -1.2010886669158936, -0.0005403488758020103, -0.24751390516757965, -0.6240960955619812, -0.027486668899655342, -0.07866322249174118, -1.7073450088500977, -0.006477550603449345, -0.08520214259624481, -0.07256840914487839, -1.5013015270233154, -1.0310612916946411, -2.1778080463409424, -2.3232131004333496, -9.083335316972807e-05, -0.11904913932085037, -0.46538451313972473, -0.3018572926521301, -0.5009565353393555, -0.010856491513550282, -1.6712957620620728, -0.0006658005877397954, -0.015191684477031231, -0.4362930357456207, -0.8841845989227295, -0.01095542311668396, -0.0039020839612931013, -0.7736808061599731, -2.4088804721832275, -2.4469666481018066, -0.014490724541246891, -0.1836535632610321, -1.13385009765625, -0.02189791016280651, -0.5440395474433899, -0.003579520620405674, -0.3812965750694275, -0.640220046043396, -1.2755313036905136e-05, -5.8412379075889476e-06, -0.001091480371542275, -3.576272320060525e-06, -0.02164643071591854, -0.011738630943000317, -0.4917230010032654, -0.028529804199934006, -0.8930356502532959], "finish_reason": "stop"}], "metrics": {"energy": 248.3439440622329, "energy_per_token": 1.3720659892941045, "time": 8.394148, "time_per_token": 0.04637650828729282}}
{"outputs": [{"text": "mask = dataframe[target_value].notna()\n    mask.to_numpy()\n    fig, ax = plt.subplots(figsize=(15, 10))\n    sns.heatmap(mask, annot=True, cbar=False, ax=ax, square=True, fmt='')\n\n    return (mask, ax)", "tokens": ["mask", " =", " data", "frame", "[", "target", "_", "value", "]", ".", "not", "na", "()", "\n", "    ", "mask", ".", "to", "_", "numpy", "()", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "5", ",", " ", "1", "0", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "mask", ",", " annot", "=", "True", ",", " c", "bar", "=", "False", ",", " ax", "=", "ax", ",", " square", "=", "True", ",", " fmt", "='", "')", "\n", "\n", "    ", "return", " (", "mask", ",", " ax", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -2.6562156677246094, -0.00026544384309090674, -0.0027825231663882732, -0.025496840476989746, -0.49227482080459595, -1.2901664972305298, -0.32629427313804626, -0.000816131301689893, -0.13987739384174347, -0.0936332568526268, -2.2671561241149902, -1.6643413305282593, -3.5466513633728027, -3.302042750874534e-05, -1.0232075452804565, -0.03687649965286255, -0.49130669236183167, -0.16647295653820038, -3.0749261379241943, -0.14237457513809204, -0.019904281944036484, -0.005562541540712118, -0.0023586330935359, -0.00011908298620255664, -0.0006997520686127245, -6.806619057897478e-05, -0.7528538107872009, -0.06969999521970749, -0.00042465253500267863, -0.025270789861679077, -0.6389445066452026, -1.6294642686843872, -0.004404367879033089, -0.16677559912204742, -0.2546924650669098, -1.6257643699645996, -0.026370113715529442, -0.005248458590358496, -0.07701240479946136, -0.4283924996852875, -7.1403817855753e-05, -0.0007531190640293062, -0.004383241757750511, -3.969590397900902e-05, -0.0003761537664104253, -0.10833948850631714, -0.06830812245607376, -1.6559441089630127, -0.009647294878959656, -0.06098997965455055, -0.05260558798909187, -0.6946092844009399, -0.6458913087844849, -0.038461461663246155, -0.13555213809013367, -0.15841712057590485, -1.0486496686935425, -0.005319606978446245, -0.000560245884116739, -1.1206046342849731, -2.914010524749756, -0.005287590902298689, -0.02650095708668232, -0.8065444231033325, -0.9481424689292908, -0.3149825930595398, -0.48236045241355896, -0.026852769777178764, -2.128143310546875, -0.10596763342618942, -0.07435805350542068, -2.2153635025024414, -0.022627847269177437, -0.004810901824384928, -0.022507335990667343, -1.38569974899292, -1.311301275563892e-06, -1.1920922133867862e-06, -4.7444173105759546e-05, -0.00015627116954419762, -0.09899909049272537], "finish_reason": "stop"}], "metrics": {"energy": 106.89104250144956, "energy_per_token": 1.2429190988540646, "time": 3.7941017, "time_per_token": 0.04411746162790698}}
{"outputs": [{"text": "# Get the target value as an integer\n    target_int = int(target_value)\n\n    # Create a Boolean mask to filter the values based on the target value\n    mask = dataframe['Column1'].apply(lambda x: int(x) == target_int)\n    filtered_dataframe = dataframe[mask]\n\n    # Create a heatmap\n    sns.heatmap(filtered_dataframe, cbar=False, linewidths=0)\n    ax = plt.gca()\n\n    # Return the mask and the Axes object\n    return mask, ax", "tokens": ["#", " Get", " the", " target", " value", " as", " an", " integer", "\n", "    ", "target", "_", "int", " =", " int", "(", "target", "_", "value", ")", "\n", "\n", "    ", "#", " Create", " a", " Boolean", " mask", " to", " filter", " the", " values", " based", " on", " the", " target", " value", "\n", "    ", "mask", " =", " data", "frame", "['", "Column", "1", "']", ".", "apply", "(", "lambda", " x", ":", " int", "(", "x", ")", " ==", " target", "_", "int", ")", "\n", "    ", "filtered", "_", "data", "frame", " =", " data", "frame", "[", "mask", "]", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "filtered", "_", "data", "frame", ",", " c", "bar", "=", "False", ",", " linewidth", "s", "=", "0", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "\n", "    ", "#", " Return", " the", " mask", " and", " the", " Ax", "es", " object", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-1.3737635612487793, -4.284759521484375, -0.6737214922904968, -2.2510640621185303, -0.3541035056114197, -1.578995943069458, -0.8781786561012268, -0.30973759293556213, -0.4611322581768036, -0.001208766596391797, -0.11763149499893188, -0.20579013228416443, -2.3998055458068848, -0.011740044690668583, -0.019098207354545593, -0.0009221353684552014, -0.004457656294107437, -0.00021431533969007432, -1.3589766240329482e-05, -0.012208732776343822, -0.0036557766143232584, -0.06830143928527832, -0.0003632839070633054, -0.011698100715875626, -0.8362336754798889, -0.14672042429447174, -2.5649430751800537, -0.7134871482849121, -1.3053653240203857, -3.0797958374023438, -0.6556873917579651, -2.5421857833862305, -2.1336917877197266, -0.0007826602668501437, -0.2551589906215668, -0.0785510390996933, -0.1812693178653717, -0.037954650819301605, -0.0003296785580459982, -0.10927193611860275, -0.006599299143999815, -0.2616652250289917, -1.490105023549404e-05, -0.35606327652931213, -0.015248040668666363, -0.5903834700584412, -0.002560672117397189, -0.2100701779127121, -1.1769216060638428, -0.00109112320933491, -0.07111668586730957, -0.04924028739333153, -0.00012313561455812305, -0.21826612949371338, -0.00031835734262131155, -0.0016185053391382098, -0.01654992252588272, -0.04728228971362114, -0.0008484101272188127, -3.576272320060525e-06, -0.0013248485047370195, -0.005621220916509628, -0.018069066107273102, -2.9317386150360107, -4.112165451049805, -0.0726865828037262, -1.2409040927886963, -0.26399385929107666, -0.002682304009795189, -0.008805020712316036, -7.748573807475623e-06, -0.08820158243179321, -0.00422074506059289, -0.019208841025829315, -0.04966200888156891, -0.11392104625701904, -0.0013394916895776987, -0.06451890617609024, -0.6737739443778992, -0.20009467005729675, -0.6866009831428528, -0.0027340196538716555, -2.448596239089966, -0.0008212531101889908, -2.0225729942321777, -0.000386640167562291, -0.01095459796488285, -0.0385284498333931, -2.062299427052494e-05, -0.0005193791585043073, -0.24771836400032043, -0.0002728328399825841, -2.4437606043647975e-05, -1.645074735279195e-05, -0.2764860689640045, -0.6310657262802124, -1.5609201192855835, -0.08102403581142426, -0.13331831991672516, -0.2677256166934967, -2.6065750122070312, -0.21295927464962006, -0.002070070942863822, -0.11251433193683624, -1.6963691711425781, -0.04009808599948883, -0.2913872301578522, -0.2970694303512573, -0.025555409491062164, -0.024219943210482597, -0.00015531764074694365, -0.007259774953126907, -0.016374848783016205, -0.003253525821492076, -0.03162924945354462, -0.3381633162498474, -0.000694153131917119, -0.8555734753608704, -0.7130444645881653, -0.0692441463470459, -1.3806160688400269, -0.08968877792358398, -0.3830606937408447, -0.12084726244211197, -0.0026959760580211878, -0.03079836070537567, -0.4187922775745392, -0.00045753977610729635, -0.0023795643355697393, -0.2756270468235016, -0.0010761191369965672, -0.002109446795657277, -0.5283994078636169, -0.016272347420454025, -0.6464027762413025], "finish_reason": "stop"}], "metrics": {"energy": 153.5803755722046, "energy_per_token": 1.13763241164596, "time": 5.8895626, "time_per_token": 0.04362638962962963}}
{"outputs": [{"text": "mask = dataframe[target_value].apply(lambda x: '332' in x)\n    mask = dataframe[target_value].apply(lambda x: '332' in x)\n\n    fig, ax = plt.subplots(figsize=(5, 5))\n    sns.heatmap(mask, ax=ax, cmap='YlGnBu')\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "target", "_", "value", "]", ".", "apply", "(", "lambda", " x", ":", " '", "3", "3", "2", "'", " in", " x", ")", "\n", "    ", "mask", " =", " data", "frame", "[", "target", "_", "value", "]", ".", "apply", "(", "lambda", " x", ":", " '", "3", "3", "2", "'", " in", " x", ")", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "5", ",", " ", "5", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "mask", ",", " ax", "=", "ax", ",", " c", "map", "='", "Y", "l", "G", "nB", "u", "')", "\n", "    ", "return", " mask", ",", " ax"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -2.6562156677246094, -0.00026544384309090674, -0.0027825231663882732, -0.025496840476989746, -0.49227482080459595, -1.8200222253799438, -0.05378927290439606, -0.2048940807580948, -0.055812716484069824, -0.001779640675522387, -2.7961316108703613, -0.041187528520822525, -0.00913783349096775, -0.006609246600419283, -0.004418728873133659, -0.03539557754993439, -0.1533018946647644, -0.05960198491811752, -0.36545494198799133, -0.08913367986679077, -2.421935558319092, -0.4283788204193115, -2.717172384262085, -0.00013457823661156, -0.40502917766571045, -0.2008560746908188, -3.8980677345534787e-05, -6.83045873302035e-05, -0.00597393698990345, -0.08810771256685257, -0.06939764320850372, -0.0028325694147497416, -0.013483643531799316, -0.0031180595979094505, -0.0011512563796713948, -0.22788473963737488, -0.027317676693201065, -0.0034967251121997833, -0.014867340214550495, -0.0035875977482646704, -0.04584847763180733, -0.012176583521068096, -0.03569216653704643, -0.32092398405075073, -2.7041804790496826, -0.014734964817762375, -2.2991695404052734, -0.1675475686788559, -0.014644630253314972, -0.006020268891006708, -0.0012977044098079205, -0.00020585325546562672, -0.0002138386043952778, -5.1616290875244886e-05, -0.8176124095916748, -0.04272935539484024, -0.000398198957554996, -0.020202230662107468, -2.9182820320129395, -0.04437794163823128, -0.13691997528076172, -0.25065943598747253, -0.025514503940939903, -0.006759160198271275, -0.14368553459644318, -0.35716426372528076, -3.802703940891661e-05, -0.0013081812066957355, -0.006089941132813692, -7.116541382856667e-05, -0.0003023882454726845, -0.20648914575576782, -0.1882370114326477, -1.287919521331787, -0.009465695358812809, -0.00044860312482342124, -0.15022313594818115, -0.2025914490222931, -0.14860853552818298, -0.1212138682603836, -1.5909062623977661, -0.002117060124874115, -0.40822917222976685, -0.05972316116094589, -0.00024005869636312127, -0.6650899648666382, -0.023303447291254997, -0.49696284532546997, -0.43037164211273193, -0.16175954043865204, -0.009148582816123962, -0.015068159438669682], "finish_reason": "stop"}], "metrics": {"energy": 99.91640399742126, "energy_per_token": 1.0300660205919716, "time": 4.002806, "time_per_token": 0.0412660412371134}}
{"outputs": [{"text": "# Generate a Boolean mask for the target value\n    mask = (dataframe['Column1'] == target_value) | (dataframe['Column2'] == target_value) | (dataframe['Column3'] == target_value)\n\n    # Create a heatmap\n    ax = sns.heatmap(\n        pd.crosstab(mask, [dataframe['Column1'], dataframe['Column2'], dataframe['Column3']]).to_numpy(),\n        annot=True,\n        cmap=sns.color_palette('RdBu_r'),\n        mask=mask,\n        xticklabels=False,\n        yticklabels=False)\n\n    return (mask, ax)", "tokens": ["#", " Generate", " a", " Boolean", " mask", " for", " the", " target", " value", "\n", "    ", "mask", " =", " (", "data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", ")", " |", " (", "data", "frame", "['", "Column", "2", "']", " ==", " target", "_", "value", ")", " |", " (", "data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", ")", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n", "        ", "pd", ".", "c", "ros", "stab", "(", "mask", ",", " [", "data", "frame", "['", "Column", "1", "']", ",", " data", "frame", "['", "Column", "2", "']", ",", " data", "frame", "['", "Column", "3", "']", "])", ".", "to", "_", "numpy", "()", ",", "\n", "        ", "annot", "=", "True", ",", "\n", "        ", "cm", "ap", "=", "s", "ns", ".", "color", "_", "pal", "ette", "('", "R", "dB", "u", "_", "r", "')", ",", "\n", "        ", "mask", "=", "mask", ",", "\n", "        ", "xt", "ick", "labels", "=", "False", ",", "\n", "        ", "yt", "ick", "labels", "=", "False", ")", "\n", "\n", "    ", "return", " (", "mask", ",", " ax", ")", "\n", "\n", "def"], "logprobs": [-1.3737635612487793, -4.499879837036133, -0.398153156042099, -1.8882339000701904, -0.28419074416160583, -0.9556701183319092, -0.6247707605361938, -0.23368294537067413, -0.06184816733002663, -0.6828874945640564, -0.001396633917465806, -0.07446295768022537, -0.007760257460176945, -2.675513744354248, -0.04032813757658005, -1.4543427823809907e-05, -0.6740822792053223, -0.012155856005847454, -0.24194130301475525, -0.002863238099962473, -0.07368330657482147, -0.009573029354214668, -1.966933996300213e-05, -2.074220174108632e-05, -0.004261341877281666, -0.15509137511253357, -0.06262309849262238, -0.0062246499583125114, -1.0609570381348021e-05, -0.0008423355757258832, -0.00029869386344216764, -0.00828827265650034, -0.0003259842633269727, -0.0020214139949530363, -0.0009189196862280369, -1.5497195136049413e-06, -9.536738616588991e-07, -0.0009410720085725188, -0.02342083491384983, -0.011275499127805233, -0.0890718549489975, -4.2199197196168825e-05, -0.0026022878009825945, -0.00036864637513644993, -0.0009488132782280445, -0.0004412154376041144, -0.0012440093560144305, -0.00043644916149787605, -1.0728830375228426e-06, -4.768370445162873e-07, -0.0004017737810499966, -0.007590263616293669, -0.19983290135860443, -0.00048268112004734576, -0.018697675317525864, -0.5525559186935425, -0.10968788713216782, -0.647229015827179, -0.0020687624346464872, -1.9887566566467285, -0.0005329619161784649, -0.8861815333366394, -0.008338872343301773, -0.02126372419297695, -1.9073468138230965e-06, -2.9801878554280847e-05, -0.0006531727267429233, -4.911301948595792e-05, -0.0005620330339297652, -1.4201141595840454, -0.025359241291880608, -1.5284653902053833, -0.00011038171214750037, -0.6881499886512756, -0.0007714632665738463, -0.01353445090353489, -0.0010657589882612228, -2.32210636138916, -1.2434085607528687, -1.653799057006836, -0.4086874723434448, -0.00023529145983047783, -0.1415296345949173, -0.008158925920724869, -0.021987592801451683, -0.003237484721466899, -0.030089635401964188, -0.024685842916369438, -3.4570634852570947e-06, -0.0006200536736287177, -0.00012408917245920748, -0.002900918712839484, -9.512448741588742e-05, -0.01263035275042057, -0.0029654596000909805, -3.576272320060525e-06, -0.0005364171229302883, -7.64102369430475e-05, -0.00018165845540352166, -0.0011944787111133337, -0.2846521735191345, -2.1752865314483643, -3.361053466796875, -1.7881233361549675e-05, -0.03580097854137421, -0.01367603987455368, -0.25800055265426636, -0.0239398330450058, -0.0071459184400737286, -1.0981864929199219, -0.01936190389096737, -0.2930830419063568, -0.030004611238837242, -0.39034304022789, -0.03626013547182083, -0.8027188181877136, -0.0004949536523781717, -2.0703859329223633, -2.550464630126953, -8.713819261174649e-05, -6.55629628454335e-05, -0.34786495566368103, -4.529942543740617e-06, -0.021684110164642334, -0.0005012686015106738, -0.5204633474349976, -1.9921311140060425, -1.3158725500106812, -3.433168603805825e-05, -0.828347384929657, -0.001739775761961937, -0.3611515164375305, -0.1437208354473114, -0.04957035183906555, -0.11810076981782913, -3.063399076461792, -0.012104389257729053, -0.048146750777959824, -0.5532890558242798, -0.02986971102654934, -0.14874671399593353, -3.4918861389160156, -0.004144413396716118, -0.0001245659514097497, -0.24663278460502625, -0.7991384863853455, -0.032946791499853134, -0.010281809605658054, -0.009392596781253815, -0.1031729206442833, -0.00022146634000819176, -2.7179348762729205e-05, -0.0013985387049615383, -0.01207058783620596, -2.014091730117798, -0.014533961191773415, -0.20273005962371826, -0.001829142333008349, -0.7214559316635132, -1.7455506324768066, -0.02561710961163044, -0.0037397462874650955, -0.010604342445731163, -0.26208001375198364, -0.23968546092510223, -0.021925318986177444, -1.9630433320999146], "finish_reason": "stop"}], "metrics": {"energy": 174.81086898612975, "energy_per_token": 1.0467716705756271, "time": 7.1588335, "time_per_token": 0.042867266467065866}}
{"outputs": [{"text": "df_mask = dataframe[dataframe['Column3'] == target_value]\n    ax = sns.heatmap(df_mask,\n                    # cbar=False, # no color bar\n                    # cmap='coolwarm', # change color map\n                    # square=True, # make square\n                    # linewidths=0, # remove borders\n                    # vmin=-1, # change range of color map\n                    # vmax=1, # change range of color map\n                    # ax=plt.gca(), # add to current figure\n                    )\n    return df_mask, ax", "tokens": ["df", "_", "mask", " =", " data", "frame", "[", "data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", "]", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", "_", "mask", ",", "\n", "                ", "    ", "#", " c", "bar", "=", "False", ",", " #", " no", " color", " bar", "\n", "                ", "    ", "#", " c", "map", "='", "cool", "warm", "'", ",", " #", " change", " color", " map", "\n", "                ", "    ", "#", " square", "=", "True", ",", " #", " make", " square", "\n", "                ", "    ", "#", " linewidth", "s", "=", "0", ",", " #", " remove", " borders", "\n", "                ", "    ", "#", " v", "min", "=-", "1", ",", " #", " change", " range", " of", " color", " map", "\n", "                ", "    ", "#", " v", "max", "=", "1", ",", " #", " change", " range", " of", " color", " map", "\n", "                ", "    ", "#", " ax", "=", "plt", ".", "g", "ca", "()", ",", " #", " add", " to", " current", " figure", "\n", "                ", "    ", ")", "\n", "    ", "return", " df", "_", "mask", ",", " ax", "\n", "\n", "if"], "logprobs": [-3.330117702484131, -2.1048154830932617, -1.1292537450790405, -0.09297671914100647, -0.1558387577533722, -4.386805812828243e-05, -1.3639540672302246, -0.1690063774585724, -2.1219027985353023e-05, -0.47865092754364014, -0.029111813753843307, -1.3440337181091309, -0.0005675135762430727, -0.17070579528808594, -0.012705921195447445, -2.8609820219571702e-05, -3.290122185717337e-05, -0.02067887969315052, -0.36724498867988586, -0.16361716389656067, -1.9615901708602905, -0.037594325840473175, -0.08635849505662918, -1.6689286894688848e-06, -8.987976616481319e-05, -0.0035259476862847805, -6.806619057897478e-05, -0.0007597897201776505, -0.35383644700050354, -0.0021131346002221107, -2.825220326485578e-05, -0.47305431962013245, -2.1441714763641357, -0.10423264652490616, -1.1483445167541504, -3.7244620323181152, -1.8458784818649292, -0.9369062185287476, -0.7066858410835266, -0.15042653679847717, -0.04046953096985817, -2.463346242904663, -4.015898704528809, -0.6469066739082336, -1.2967311143875122, -0.43403205275535583, -0.0029609431512653828, -0.0025586506817489862, -1.5238897800445557, -0.7732108235359192, -0.3246956765651703, -0.3462490737438202, -2.0933070182800293, -0.24797943234443665, -0.01783149316906929, -0.035087618976831436, -0.3583652377128601, -4.016640663146973, -0.677550733089447, -0.45540571212768555, -0.20255786180496216, -0.0029464424587786198, -0.0023403179366141558, -0.6808662414550781, -2.4650321006774902, -0.013688386417925358, -0.12482743710279465, -0.049102284014225006, -0.05312695726752281, -1.3178397417068481, -0.8174401521682739, -0.2906035780906677, -0.009859670884907246, -0.011293768882751465, -0.6187434792518616, -1.763251781463623, -0.19749459624290466, -0.023494312539696693, -0.44867485761642456, -0.7857210636138916, -0.03535956144332886, -1.1841909885406494, -1.654710292816162, -0.03540812060236931, -0.004937479272484779, -0.008370435796678066, -0.3612755537033081, -2.6647491455078125, -0.07484486699104309, -1.81312096118927, -0.40088796615600586, -0.41971641778945923, -0.2634274661540985, -1.2307690382003784, -2.4538369178771973, -1.8986719846725464, -1.844682216644287, -1.028071641921997, -0.209258034825325, -0.0011855486081913114, -0.0013049667468294501, -0.012877401895821095, -0.009326106868684292, -0.0020592452492564917, -0.005390513222664595, -0.13089847564697266, -0.07070247828960419, -0.2827729880809784, -0.03823143616318703, -0.003491854527965188, -0.0014430596493184566, -0.0013817534781992435, -0.0009078433504328132, -0.011481283232569695, -0.01050915103405714, -0.013611597940325737, -0.6999260187149048, -3.829772472381592, -0.039121635258197784, -2.6809260845184326, -0.1257014274597168, -0.16342271864414215, -0.05217299982905388, -0.06542911380529404, -0.22786594927310944, -0.029797744005918503, -3.312066078186035, -1.4727976322174072, -0.924235999584198, -2.824946165084839, -0.14505498111248016, -0.01171506755053997, -0.013369082473218441, -2.060068130493164, -0.03042619489133358, -0.23159022629261017, -0.3569769263267517, -0.3799975514411926, -0.0017938013188540936, -5.2927523938706145e-05, -0.023754524067044258, -0.010873236693441868, -0.4276639223098755, -0.048773542046546936, -1.2418509721755981], "finish_reason": "stop"}], "metrics": {"energy": 193.7175504703522, "energy_per_token": 1.3359831066920842, "time": 6.3202753, "time_per_token": 0.04358810551724138}}
{"outputs": [{"text": "mask = dataframe[dataframe[\"Column1\"].isin([target_value])].astype(bool)\n    return (mask, sns.heatmap(mask, cbar=False))", "tokens": ["mask", " =", " data", "frame", "[", "data", "frame", "[", "\"", "Column", "1", "\"", "]", ".", "isin", "([", "target", "_", "value", "]", ")]", ".", "ast", "ype", "(", "bool", ")", "\n", "    ", "return", " (", "mask", ",", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "bar", "=", "False", "))"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -0.8835238814353943, -8.570780482841656e-05, -1.9092081785202026, -0.19376768171787262, -0.04312540218234062, -0.3849089443683624, -0.0008993871742859483, -0.0018375907093286514, -2.1318185329437256, -1.4513983726501465, -0.10776232928037643, -0.01563728041946888, -4.7801782784517854e-05, -4.637133679352701e-05, -0.21627886593341827, -0.001733468729071319, -1.858829140663147, -2.8699822425842285, -0.0008083889842964709, -0.15341007709503174, -0.6384710669517517, -0.0031439659651368856, -0.04365276172757149, -0.09613402932882309, -1.940435767173767, -1.6853147745132446, -0.051518555730581284, -0.02059713751077652, -1.852161169052124, -1.1205610462639015e-05, -0.0006009918288327754, -0.0024594792630523443, -9.035655966727063e-05, -0.002734376350417733, -0.07754382491111755, -0.12331438809633255, -0.6243010759353638, -0.9312341213226318, -0.13757863640785217, -0.0751739963889122, -1.2271008491516113], "finish_reason": "stop"}], "metrics": {"energy": 42.384764024734494, "energy_per_token": 0.9214079135811847, "time": 1.9067247, "time_per_token": 0.04145053695652174}}
{"outputs": [{"text": "mask = dataframe[target_value].apply(lambda x: str(x).lower() in ['332']).astype(bool)\n    return mask, sns.heatmap(mask, ax=plt.gca(), cmap='RdYlGn', cbar=False)\n\ndf = pd.DataFrame({\n    'Column1': ['0', 'a', '332', '33'],\n    'Column2': ['1', 'bb', '33', '22'],\n    'Column3': ['2', 'ccc', '2', '332'],\n})\n\nmask, ax = task_func(df, '332')\nplt.show()", "tokens": ["mask", " =", " data", "frame", "[", "target", "_", "value", "]", ".", "apply", "(", "lambda", " x", ":", " str", "(", "x", ")", ".", "lower", "()", " in", " ['", "3", "3", "2", "'])", ".", "ast", "ype", "(", "bool", ")", "\n", "    ", "return", " mask", ",", " s", "ns", ".", "heat", "map", "(", "mask", ",", " ax", "=", "plt", ".", "g", "ca", "()", ",", " c", "map", "='", "R", "d", "Y", "l", "G", "n", "'", ",", " c", "bar", "=", "False", ")", "\n", "\n", "df", " =", " pd", ".", "DataFrame", "({", "\n", "    ", "'", "Column", "1", "':", " ['", "0", "'", ",", " '", "a", "'", ",", " '", "3", "3", "2", "'", ",", " '", "3", "3", "']", ",", "\n", "    ", "'", "Column", "2", "':", " ['", "1", "'", ",", " '", "bb", "'", ",", " '", "3", "3", "'", ",", " '", "2", "2", "']", ",", "\n", "    ", "'", "Column", "3", "':", " ['", "2", "'", ",", " '", "ccc", "'", ",", " '", "2", "'", ",", " '", "3", "3", "2", "']", ",", "\n", "})", "\n", "\n", "mask", ",", " ax", " =", " task", "_", "func", "(", "df", ",", " '", "3", "3", "2", "')", "\n", "plt", ".", "show", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -2.6562156677246094, -0.00026544384309090674, -0.0027825231663882732, -0.025496840476989746, -0.49227482080459595, -1.8200222253799438, -0.05378927290439606, -0.2048940807580948, -0.055812716484069824, -0.001779640675522387, -2.724611759185791, -0.02210303768515587, -0.019475197419524193, -0.045137353241443634, -0.37298208475112915, -1.2910021543502808, -0.11723516136407852, -1.1764864921569824, -0.7316672801971436, -0.4074566066265106, -0.060727838426828384, -0.07247261703014374, -1.2873497009277344, -1.852752685546875, -0.4387780427932739, -8.22540732769994e-06, -0.1068432629108429, -0.3319423198699951, -0.0007453762227669358, -0.07298938184976578, -0.08544349670410156, -1.678763508796692, -0.1911219358444214, -0.03803441300988197, -1.9562147855758667, -1.3947389561508317e-05, -0.0005103239673189819, -0.003918827045708895, -7.617183291586116e-05, -0.006076670717447996, -0.20810894668102264, -0.13049155473709106, -1.6500895023345947, -0.022916598245501518, -0.7082768678665161, -0.0025322535075247288, -0.3809378743171692, -0.009946426376700401, -0.29921987652778625, -0.0032412870787084103, -0.27011218667030334, -0.33839476108551025, -0.12570373713970184, -2.779529571533203, -0.31999921798706055, -0.05438273772597313, -0.00035124807618558407, -0.1812303364276886, -0.016057927161455154, -0.7329859733581543, -0.0011476842919364572, -0.6521402597427368, -0.0018255725735798478, -0.3364737629890442, -0.03894210234284401, -0.6602746248245239, -0.24590164422988892, -0.02742566354572773, -2.8397068977355957, -0.04126657545566559, -0.01313027273863554, -8.95221673999913e-05, -0.03483091667294502, -0.06572854518890381, -0.037443336099386215, -0.039166226983070374, -0.013719429261982441, -0.09893031418323517, -0.012238879688084126, -0.0003184764937032014, -0.009052307344973087, -0.03456493467092514, -0.0019953595474362373, -2.586808113846928e-05, -0.000860201776959002, -0.03087904304265976, -0.0006468587671406567, -4.768360213347478e-06, -0.00039748396375216544, -0.007262970320880413, -0.00067473528906703, -0.00248540285974741, -0.0044461446814239025, -1.5616295058862306e-05, -0.00042000532266683877, -0.004797139670699835, -0.0011226787464693189, -0.026050768792629242, -5.61460001335945e-05, -0.00039033422945067286, -0.00021455370006151497, -8.5588610090781e-05, -0.00015448330668732524, -0.00018416139937471598, -8.106198947643861e-06, -0.0007186928996816278, -0.0008203001925721765, -0.00026353701832704246, -2.622600959512056e-06, -0.0001264730526600033, -0.004035307094454765, -0.0007845661020837724, -5.722029527532868e-06, -0.0001820160250645131, -0.002839107532054186, -0.0007086864789016545, -0.21475033462047577, -1.5735502529423684e-05, -0.000192504478036426, -0.0006811682251282036, -0.0002325502864550799, -0.0003054867556784302, -0.00017379203927703202, -9.476689592702314e-05, -0.00029952809563837945, -9.083335316972807e-05, -0.000176652567461133, -0.00019870213873218745, -6.079655122448457e-06, -0.0002348147245356813, -0.000436925794929266, -0.00018487652414478362, -8.344646857949556e-07, -5.1616290875244886e-05, -0.0005834784242324531, -2.5987286790041253e-05, -1.1920922133867862e-06, -0.0001919085334520787, -0.003952549304813147, -0.001611721352674067, -1.9192511899746023e-05, -0.0002631794777698815, -0.0017590539064258337, -0.0006443570018745959, -0.002894024597480893, -0.0005061537376604974, -3.022735118865967, -0.0017683359328657389, -0.2331947535276413, -0.01054359506815672, -0.5332950949668884, -0.13384400308132172, -0.008105125278234482, -0.03389955312013626, -0.0017736908048391342, -0.0019489595433697104, -3.564294092939235e-05, -4.470248313737102e-05, -0.0006342306733131409, -0.006629615556448698, -0.07458455860614777, -0.020157018676400185, -0.010763800702989101, -0.0012296028435230255, -0.010409348644316196, -0.001068736077286303, -0.11109581589698792, -1.8895788192749023, -0.00013052565918769687, -0.08232235908508301, -0.018426548689603806, -0.7283886671066284, -5.006777428206988e-06, -8.344646857949556e-07, -5.2927523938706145e-05, -0.00015698630886618048, -0.14984823763370514], "finish_reason": "stop"}], "metrics": {"energy": 190.94498208141317, "energy_per_token": 1.049148253194578, "time": 7.7717, "time_per_token": 0.04270164835164835}}
{"outputs": [{"text": "mask = dataframe[['Column1', 'Column2', 'Column3']] == target_value\n    mask.loc['10', '11'] = True\n    mask.loc[2, 10] = True\n    mask.loc['10', 2] = True\n    mask.loc[2, 2] = True\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "['", "Column", "1", "'", ",", " '", "Column", "2", "'", ",", " '", "Column", "3", "']", "]", " ==", " target", "_", "value", "\n", "    ", "mask", ".", "loc", "['", "1", "0", "'", ",", " '", "1", "1", "']", " =", " True", "\n", "    ", "mask", ".", "loc", "[", "2", ",", " ", "1", "0", "]", " =", " True", "\n", "    ", "mask", ".", "loc", "['", "1", "0", "'", ",", " ", "2", "]", " =", " True", "\n", "    ", "mask", ".", "loc", "[", "2", ",", " ", "2", "]", " =", " True", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "def"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -1.585073471069336, -0.0082594258710742, -0.008990993723273277, -0.0064874994568526745, -0.0001591317413840443, -0.02981058694422245, -0.00026246439665555954, -0.007794087287038565, -0.014409767463803291, -1.680836794548668e-05, -0.0036743050441145897, -0.00023982033599168062, -0.00018773700867313892, -0.0016482589999213815, -0.0026419993955641985, -0.6858192682266235, -0.008285317569971085, -3.981510963058099e-05, -2.2411095415009186e-05, -0.03162243589758873, -0.09822624921798706, -1.7025244235992432, -1.0072636604309082, -3.4679651260375977, -2.8717458248138428, -4.374825954437256, -2.4678149223327637, -2.368574380874634, -0.007638887036591768, -0.4352075159549713, -0.8278816938400269, -0.6752846837043762, -0.42477282881736755, -0.030696749687194824, -0.599037766456604, -0.08570394665002823, -0.0872727558016777, -1.0409475564956665, -0.28415945172309875, -0.12076433002948761, -0.9839065670967102, -2.666062831878662, -0.5509604811668396, -0.3891497552394867, -1.4365863800048828, -2.4624075889587402, -0.05341562256217003, -0.0028962830547243357, -0.3103831708431244, -0.004576565697789192, -0.078397735953331, -0.3125596046447754, -0.06984752416610718, -0.029968399554491043, -2.1249005794525146, -1.105263590812683, -0.7207275629043579, -0.11773429065942764, -0.00022265815641731024, -0.21726061403751373, -0.6077279448509216, -0.028190288692712784, -0.001191144809126854, -0.06564415246248245, -0.003231543581932783, -0.1356549859046936, -0.3060477375984192, -0.07371841371059418, -0.03531353548169136, -0.24420860409736633, -0.9276970624923706, -0.027133572846651077, -0.10892315953969955, -1.1918859481811523, -0.015211879275739193, -0.0006049233488738537, -0.04078098386526108, -0.0026537699159234762, -0.16281895339488983, -2.711962938308716, -0.11594042927026749, -0.10960595309734344, -0.5755529403686523, -0.21718770265579224, -0.02165529690682888, -1.1528993844985962], "finish_reason": "stop"}], "metrics": {"energy": 86.77483235931395, "energy_per_token": 0.9535695863660874, "time": 3.79519, "time_per_token": 0.041705384615384616}}
{"outputs": [{"text": "mask = (dataframe == target_value)\n    mask = mask.astype(bool)\n    ax = sns.heatmap(mask, cmap=\"coolwarm\", annot=True)\n    return mask, ax", "tokens": ["mask", " =", " (", "data", "frame", " ==", " target", "_", "value", ")", "\n", "    ", "mask", " =", " mask", ".", "ast", "ype", "(", "bool", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " annot", "=", "True", ")", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "if"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -2.3797202110290527, -0.03551523759961128, -2.3007127310847864e-05, -1.2196502685546875, -0.006567205302417278, -3.838465272565372e-05, -3.3378044463461265e-05, -0.0015947017818689346, -0.8596825003623962, -0.11464008688926697, -2.620684862136841, -0.7683029174804688, -0.23118512332439423, -0.04351455718278885, -0.3463543951511383, -3.6000557884108275e-05, -0.13471849262714386, -1.5189493894577026, -0.002166069345548749, -0.07911963760852814, -0.20953959226608276, -0.8919234871864319, -0.009949613362550735, -0.03729037567973137, -1.4305104514278355e-06, -5.209310256759636e-05, -0.0008064831490628421, -6.925819616299123e-05, -0.0005099665140733123, -0.07551373541355133, -0.10072862356901169, -0.3139107823371887, -0.15475352108478546, -2.230527877807617, -0.06897325813770294, -3.574624538421631, -0.38601988554000854, -0.020492499694228172, -0.3553857207298279, -1.125625491142273, -0.0023172451183199883, -0.15776605904102325, -1.2316089868545532, -0.0209052711725235, -0.10502362251281738, -0.20048339664936066, -0.19696511328220367, -0.006851512938737869, -0.011072737164795399, -0.4196188747882843, -0.018833504989743233, -1.5767301321029663], "finish_reason": "stop"}], "metrics": {"energy": 64.44799085617065, "energy_per_token": 1.1934813121513084, "time": 2.1172087, "time_per_token": 0.03920756851851852}}
{"outputs": [{"text": "# Convert target_value to an integer if it is a string\n    if type(target_value) == str:\n        target_value = int(target_value)\n\n    # Create a mask to mark the target value occurrences as True\n    mask = dataframe['Column1'] == target_value\n\n    # Use Seaborn to create a heatmap using the mask\n    sns.heatmap(mask, annot=True, fmt='d', cbar=False, cmap='RdYlGn')\n    ax = sns.heatmap.ax_\n    ax.set_xticklabels(ax.get_xticklabels(), rotation=90, ha='right', fontsize=\"x-small\")\n    ax.set_yticklabels(ax.get_yticklabels(), rotation=0, ha='right', fontsize=\"x-small\")\n    ax.set_title(\"Target Value: \" + str(target_value), fontsize=\"xx-large\")\n\n    return (mask, ax)", "tokens": ["#", " Convert", " target", "_", "value", " to", " an", " integer", " if", " it", " is", " a", " string", "\n", "    ", "if", " type", "(", "target", "_", "value", ")", " ==", " str", ":", "\n", "        ", "target", "_", "value", " =", " int", "(", "target", "_", "value", ")", "\n", "\n", "    ", "#", " Create", " a", " mask", " to", " mark", " the", " target", " value", " occurrences", " as", " True", "\n", "    ", "mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "\n", "    ", "#", " Use", " Se", "ab", "orn", " to", " create", " a", " heat", "map", " using", " the", " mask", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "mask", ",", " annot", "=", "True", ",", " fmt", "='", "d", "'", ",", " c", "bar", "=", "False", ",", " c", "map", "='", "R", "d", "Y", "l", "G", "n", "')", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", ".", "ax", "_", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "ax", ".", "get", "_", "xt", "ick", "labels", "()", ",", " rotation", "=", "9", "0", ",", " ha", "='", "right", "'", ",", " fonts", "ize", "=", "\"", "x", "-", "small", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "yt", "ick", "labels", "(", "ax", ".", "get", "_", "yt", "ick", "labels", "()", ",", " rotation", "=", "0", ",", " ha", "='", "right", "'", ",", " fonts", "ize", "=", "\"", "x", "-", "small", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Target", " Value", ":", " \"", " +", " str", "(", "target", "_", "value", ")", ",", " fonts", "ize", "=", "\"", "xx", "-", "large", "\"", ")", "\n", "\n", "    ", "return", " (", "mask", ",", " ax", ")", "\n", "\n", "def"], "logprobs": [-1.3737635612487793, -2.44960880279541, -2.059008836746216, -0.48609495162963867, -0.0018641252536326647, -0.03926950693130493, -1.3661998510360718, -0.22178001701831818, -2.11942720413208, -0.4390323758125305, -0.7384443879127502, -0.22798098623752594, -0.1656477451324463, -0.1932576447725296, -0.0010580186499282718, -0.396356463432312, -2.953817844390869, -0.000311802898067981, -0.0036579144652932882, -4.2676016164477915e-05, -1.0132738680113107e-05, -0.00022873646230436862, -0.39942044019699097, -0.015170197933912277, -0.03281713277101517, -0.008521386422216892, -0.005593481939285994, -0.15579377114772797, -0.01890825666487217, -0.03753186762332916, -0.029318591579794884, -0.013454357162117958, -0.0016193384071812034, -0.0012276978231966496, -2.622600959512056e-06, -1.3351351299206726e-05, -0.009081604890525341, -0.002442236291244626, -0.20645810663700104, -0.0008416209602728486, -0.1663253903388977, -1.1509474515914917, -0.17563679814338684, -0.958524227142334, -1.789052963256836, -2.1070382595062256, -0.8415842056274414, -1.0530726909637451, -0.2671418786048889, -0.9861226081848145, -1.6786482334136963, -0.05020362138748169, -0.18373620510101318, -0.00040618274942971766, -0.059062518179416656, -0.0067406888119876385, -0.18200375139713287, -1.6569954823353328e-05, -0.9043776392936707, -0.023652544245123863, -0.3702463209629059, -0.001829261309467256, -0.5056173801422119, -0.39266011118888855, -6.687417771900073e-05, -5.483612312673358e-06, -0.03685363754630089, -0.07694640010595322, -0.00042429505265317857, -0.05899722874164581, -2.991048812866211, -1.250312328338623, -0.0038505473639816046, -1.6689160474925302e-05, -0.6786725521087646, -0.8191666603088379, -0.07397130876779556, -0.02976592257618904, -0.0046907151117920876, -2.3048620223999023, -0.028842683881521225, -0.29045870900154114, -0.523601770401001, -0.0005410637822933495, -1.567112684249878, -0.00023993951617740095, -0.018019424751400948, -0.013921890407800674, -2.586808113846928e-05, -0.0007327494095079601, -0.6663543581962585, -0.14570499956607819, -1.8785570859909058, -0.008392896503210068, -0.08690540492534637, -0.12489277124404907, -1.8095351457595825, -0.20654994249343872, -1.421372413635254, -0.2923632860183716, -0.0003399271226953715, -0.31865882873535156, -0.8798831701278687, -0.04758583381772041, -0.04103880003094673, -0.5837251543998718, -0.5390787124633789, -0.2973475158214569, -0.058741532266139984, -2.188328742980957, -0.25060662627220154, -0.06993833929300308, -0.0001323135511483997, -0.1134224534034729, -0.014791464433073997, -0.5489304661750793, -0.0214653629809618, -0.6403577923774719, -0.3735322952270508, -0.015246984548866749, -2.027925968170166, -0.00040749352774582803, -0.00021300431399140507, -0.05413150414824486, -6.9141146923357155e-06, -1.5363473892211914, -0.8076938390731812, -0.1598595380783081, -0.1584147810935974, -1.3673980236053467, -0.9925456643104553, -0.009500057436525822, -0.2928004860877991, -0.17312896251678467, -1.0709471702575684, -0.06062495708465576, -0.00026723151677288115, -0.22702224552631378, -0.1359717696905136, -0.0001705739414319396, -0.04567572847008705, -1.0847986231965479e-05, -0.03240463510155678, -0.012279270216822624, -3.1470757676288486e-05, -0.0046508475206792355, -0.0005081792478449643, -0.14487048983573914, -0.2533392906188965, -0.7058738470077515, -0.0001234931987710297, -1.3453571796417236, -0.8733356595039368, -0.22410163283348083, -0.0835052952170372, -2.6452701091766357, -0.007147220429033041, -0.39998292922973633, -1.847726889536716e-05, -0.26727575063705444, -3.7373204231262207, -1.654898762702942, -5.113947918289341e-05, -0.2997204065322876, -0.0003238391946069896, -0.08570471405982971, -0.013870279304683208, -0.09767457842826843, -0.048365529626607895, -0.0008199428557418287, -0.04296839237213135, -0.0029696195852011442, -0.02943064458668232, -0.0002754547167569399, -3.397406908334233e-05, -0.12263287603855133, -0.0023844402749091387, -8.67805938469246e-05, -0.00018940561858471483, -5.245195097813848e-06, -0.0039339070208370686, -0.0001045410826918669, -3.814689989667386e-06, -0.006584377493709326, -0.002389316214248538, -0.18835827708244324, -0.1089174896478653, -0.18115216493606567, -0.02146233059465885, -0.12662097811698914, -0.012656602077186108, -0.22097855806350708, -0.046034861356019974, -0.000188332938705571, -0.012080127373337746, -1.0490362910786644e-05, -0.006951315328478813, -0.0018062957096844912, -0.011893903836607933, -2.8132995794294402e-05, -0.0003513672563713044, -7.068861305015162e-05, -0.008084194734692574, -0.029988067224621773, -0.7694358229637146, -0.9762423038482666, -0.007251372095197439, -0.6803440451622009, -0.03753037378191948, -0.5260083675384521, -0.4531378149986267, -1.1975027322769165, -2.528499126434326, -0.8478372097015381, -1.6205804347991943, -0.41663965582847595, -0.08948070555925369, -0.06489088386297226, -0.0004407388041727245, -0.0038384345825761557, -8.082063141046092e-05, -1.1086402082582936e-05, -0.6873499751091003, -0.10798600316047668, -0.6007790565490723, -0.00011669908417388797, -0.1939455270767212, -0.29071474075317383, -1.1806004047393799, -5.376194530981593e-05, -0.27790239453315735, -0.00017009719158522785, -0.647955060005188, -0.006813625805079937, -0.7461869716644287, -0.019048383459448814, -0.5723317861557007, -1.921465277671814, -0.02521476335823536, -0.0037161121144890785, -0.014783712103962898, -0.23481282591819763, -0.2355683296918869, -0.024877144023776054, -1.3856689929962158], "finish_reason": "stop"}], "metrics": {"energy": 302.41648891353617, "energy_per_token": 1.2343530159736171, "time": 10.718752, "time_per_token": 0.043750008163265304}}
{"outputs": [{"text": "mask = dataframe[\"Column1\"] == target_value\n    fig, ax = plt.subplots()\n    sns.heatmap(mask, cmap=\"coolwarm\", annot=True, fmt=\"d\", ax=ax)\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "\"", "Column", "1", "\"", "]", " ==", " target", "_", "value", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " annot", "=", "True", ",", " fmt", "=", "\"", "d", "\"", ",", " ax", "=", "ax", ")", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -1.3835830688476562, -0.02135416306555271, -0.3637988865375519, -0.0012217445764690638, -0.002762313699349761, -0.2570606768131256, -0.027931692078709602, -7.259582343976945e-05, -5.125868119648658e-05, -0.036201734095811844, -0.14250287413597107, -3.4152185916900635, -0.11344427615404129, -0.01897750422358513, -0.004935462959110737, -0.0018872085493057966, -5.8887653722194955e-05, -0.00024196557933464646, -6.294052582234144e-05, -0.6946424245834351, -0.003321727504953742, -0.06088275462388992, -0.248363196849823, -3.421248038648628e-05, -0.000894027529284358, -0.003053647233173251, -4.005352093372494e-05, -0.0005032941699028015, -0.1645917147397995, -0.06870117783546448, -1.0634372234344482, -0.23202192783355713, -1.4120677709579468, -0.03769891336560249, -2.77553129196167, -0.1958821713924408, -0.00676934327930212, -0.014527617022395134, -2.057642936706543, -0.001545426552183926, -0.06291048973798752, -0.011751355603337288, -1.172260046005249, -0.3071362376213074, -0.14938849210739136, -0.9444330334663391, -4.1483970562694594e-05, -0.018992943689227104, -0.20430320501327515, -0.002444971352815628, -0.0007214327342808247, -0.31692808866500854, -0.007912245579063892, -0.05691457539796829, -0.2536236643791199, -0.13901248574256897, -0.006355431862175465, -0.018062978982925415, -0.41446664929389954, -0.021828865632414818, -1.3879456520080566], "finish_reason": "stop"}], "metrics": {"energy": 68.90106098175048, "energy_per_token": 1.0439554694204618, "time": 2.744323, "time_per_token": 0.041580651515151515}}
{"outputs": [{"text": "mask = dataframe['Column1'] == target_value\n    return (mask, ax)", "tokens": ["mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "    ", "return", " (", "mask", ",", " ax", ")"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -0.22839175164699554, -0.0026666102930903435, -0.1994035840034485, -0.016464324668049812, -5.8410845667822286e-05, -4.23184028477408e-05, -0.031514670699834824, -0.159295916557312, -1.4193322658538818, -1.8596224784851074, -0.08966708928346634, -0.024579770863056183, -0.8039855360984802, -0.14901800453662872], "finish_reason": "stop"}], "metrics": {"energy": 7.997639118194579, "energy_per_token": 0.39988195590972897, "time": 0.6463895, "time_per_token": 0.032319475}}
{"outputs": [{"text": "mask = dataframe['Column1'].map(lambda x: x == target_value)\n    fig, ax = plt.subplots()\n    sns.heatmap(mask, annot=True, cmap='coolwarm', ax=ax)\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "['", "Column", "1", "']", ".", "map", "(", "lambda", " x", ":", " x", " ==", " target", "_", "value", ")", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "mask", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "'", ",", " ax", "=", "ax", ")", "\n", "    ", "return", " mask", ",", " ax"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -0.22839175164699554, -0.0026666102930903435, -1.7619340419769287, -2.11820912361145, -0.025965748354792595, -0.19461429119110107, -0.0801064521074295, -0.002341626212000847, -0.3823680281639099, -0.05509341135621071, -0.011117065325379372, -4.386805812828243e-05, -3.8742269680369645e-05, -0.016878996044397354, -0.08292129635810852, -0.10713236033916473, -3.3501334190368652, -0.11167744547128677, -0.010945518501102924, -0.00472500454634428, -0.0018994638230651617, -4.053033626405522e-05, -0.0002760506176855415, -7.199982064776123e-05, -0.5720037817955017, -0.0028442188631743193, -0.043097540736198425, -0.19568556547164917, -2.407998726994265e-05, -0.0008836655179038644, -0.0033134103287011385, -7.73638384998776e-05, -0.00036054308293387294, -0.2328169345855713, -0.24585185945034027, -1.7205992937088013, -0.00573691027238965, -0.03356450796127319, -0.015004982240498066, -0.957655131816864, -0.5021845698356628, -0.1308770328760147, -2.7202224731445312, -0.48624905943870544, -0.03557448461651802, -0.00025519452174194157, -0.37519803643226624, -0.0015507827047258615, -0.0003947432560380548, -0.34021544456481934, -0.005859460216015577, -0.08438952267169952, -0.23622414469718933, -0.16450899839401245, -0.004275823477655649, -0.010805548168718815], "finish_reason": "stop"}], "metrics": {"energy": 70.74273469924925, "energy_per_token": 1.1410118499878912, "time": 2.5388308, "time_per_token": 0.04094888387096774}}
{"outputs": [{"text": "if target_value.lower() == '332':\n        mask = dataframe['Column3'] == target_value\n    elif target_value.lower() == '33':\n        mask = dataframe['Column2'] == target_value\n    elif target_value.lower() == '22':\n        mask = dataframe['Column1'] == target_value\n    else:\n        mask = dataframe['Column1'].str.lower() == target_value.lower()\n    ax = sns.heatmap(mask, cmap='YlGnBu', center=0)\n    return mask, ax", "tokens": ["if", " target", "_", "value", ".", "lower", "()", " ==", " '", "3", "3", "2", "':", "\n", "        ", "mask", " =", " data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", "\n", "    ", "elif", " target", "_", "value", ".", "lower", "()", " ==", " '", "3", "3", "':", "\n", "        ", "mask", " =", " data", "frame", "['", "Column", "2", "']", " ==", " target", "_", "value", "\n", "    ", "elif", " target", "_", "value", ".", "lower", "()", " ==", " '", "2", "2", "':", "\n", "        ", "mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "    ", "else", ":", "\n", "        ", "mask", " =", " data", "frame", "['", "Column", "1", "']", ".", "str", ".", "lower", "()", " ==", " target", "_", "value", ".", "lower", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "Y", "l", "G", "nB", "u", "'", ",", " center", "=", "0", ")", "\n", "    ", "return", " mask", ",", " ax"], "logprobs": [-3.4021525382995605, -1.0966465473175049, -0.0007740838918834925, -0.0001787979417713359, -3.3738584518432617, -1.7646856307983398, -0.004133135080337524, -0.694129228591919, -0.11166039109230042, -0.37387824058532715, -0.006385755725204945, -0.021192766726017, -0.03636440262198448, -0.06014048680663109, -0.013723544776439667, -0.9090373516082764, -0.024373173713684082, -0.32980307936668396, -4.494089080253616e-05, -0.42609864473342896, -0.00746899051591754, -0.46782323718070984, -0.0011130335042253137, -0.39136695861816406, -0.6698305606842041, -0.000529149197973311, -1.4662635294371285e-05, -0.07130519300699234, -0.41662922501564026, -1.30387282371521, -0.021946776658296585, -9.179073458653875e-06, -2.6225699912174605e-05, -0.0338679775595665, -0.0664496049284935, -0.0016280265990644693, -0.07971576601266861, -0.004901417531073093, -0.7764256596565247, -0.017951633781194687, -0.02210571989417076, -0.002303924411535263, -0.00046564225340262055, -0.0038171776104718447, -0.0005576247931458056, -0.04257582500576973, -8.821448318485636e-06, -0.003985558170825243, -0.0008186326595023274, -0.6724960207939148, -0.0004170263418927789, -0.036771826446056366, -0.018725639209151268, -8.153582894010469e-05, -1.7881377516459906e-06, -0.005818335339426994, -0.01814703457057476, -0.9052784442901611, -0.007710693404078484, -2.7179348762729205e-05, -4.410734163684538e-06, -0.013293680734932423, -0.012258191592991352, -0.0009990707039833069, -0.020492032170295715, -0.0019060078775510192, -0.21930231153964996, -0.0679367408156395, -0.008225374855101109, -0.0010289618512615561, -0.0002759314374998212, -0.0007515705074183643, -0.00026544384309090674, -0.0028729853220283985, -1.883488948806189e-05, -0.0013984196120873094, -0.0006118332967162132, -0.2763485610485077, -0.00011336160969221964, -0.006234245840460062, -0.009486242197453976, -3.015949550899677e-05, -9.536738616588991e-07, -0.0013760393485426903, -0.15942662954330444, -0.22734005749225616, -0.0005595310358330607, -0.008392187766730785, -0.0010082405060529709, -0.6624259352684021, -0.0017677409341558814, -0.22912244498729706, -1.4305012882687151e-05, -0.3110385239124298, -0.007162725552916527, -0.927166223526001, -0.0006974886637181044, -2.7894961833953857, -0.6665596961975098, -0.017922477796673775, -1.1255371570587158, -0.0020366418175399303, -0.3595128655433655, -0.007379179820418358, -2.074220174108632e-05, -1.3112935448589269e-05, -0.9788084626197815, -0.0118715213611722, -0.00047338721924461424, -0.016785690560936928, -0.9504395127296448, -1.125727891921997, -0.014149462804198265, -0.03583766892552376, -1.7881377516459906e-06, -6.01988795096986e-05, -0.002979603596031666, -6.5205356804654e-05, -0.0006843847222626209, -0.23659062385559082, -0.1665954887866974, -0.4463765025138855, -0.18460769951343536, -0.12804976105690002, -1.5265440940856934, -0.0017417988274246454, -0.37780192494392395, -0.05834690108895302, -0.00023982033599168062, -0.7299259901046753, -0.0009210634743794799, -3.605134963989258, -0.017821773886680603, -0.4650159478187561, -1.444283366203308, -0.03152159973978996, -0.08281398564577103, -0.18201994895935059, -0.23197059333324432, -0.008494081906974316, -0.009124013595283031], "finish_reason": "stop"}], "metrics": {"energy": 148.8515086631775, "energy_per_token": 1.0556844586040957, "time": 6.110175, "time_per_token": 0.043334574468085106}}
{"outputs": [{"text": "# Mask dataframe\n    mask = dataframe.isin({target_value: True})\n    # Plot heatmap\n    ax = sns.heatmap(mask, cmap='Reds', cbar=False,\n                     annot=False, square=True)\n    ax.tick_params(\n        bottom=False,  # make all ticks point down\n        left=False,  # do not put ticks at the top\n        labelleft=False)\n    ax.yaxis.set_ticks_position('left')\n    ax.xaxis.set_ticks_position('top')\n    # Get matplotlib object\n    ax = ax.ax\n    # Set xlim\n    ax.set_xlim([0, mask.shape[1] - 1])\n    # Set ylim\n    ax.set_ylim([0, mask.shape[0] - 1])\n    return (mask, ax)", "tokens": ["#", " Mask", " data", "frame", "\n", "    ", "mask", " =", " data", "frame", ".", "isin", "({", "target", "_", "value", ":", " True", "})", "\n", "    ", "#", " Plot", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "Red", "s", "'", ",", " c", "bar", "=", "False", ",", "\n", "                ", "     ", "annot", "=", "False", ",", " square", "=", "True", ")", "\n", "    ", "ax", ".", "tick", "_", "params", "(", "\n", "        ", "bottom", "=", "False", ",", "  ", "#", " make", " all", " ticks", " point", " down", "\n", "        ", "left", "=", "False", ",", "  ", "#", " do", " not", " put", " ticks", " at", " the", " top", "\n", "        ", "label", "left", "=", "False", ")", "\n", "    ", "ax", ".", "y", "axis", ".", "set", "_", "t", "icks", "_", "position", "('", "left", "')", "\n", "    ", "ax", ".", "x", "axis", ".", "set", "_", "t", "icks", "_", "position", "('", "top", "')", "\n", "    ", "#", " Get", " matplotlib", " object", "\n", "    ", "ax", " =", " ax", ".", "ax", "\n", "    ", "#", " Set", " x", "lim", "\n", "    ", "ax", ".", "set", "_", "x", "lim", "([", "0", ",", " mask", ".", "shape", "[", "1", "]", " -", " ", "1", "])", "\n", "    ", "#", " Set", " y", "lim", "\n", "    ", "ax", ".", "set", "_", "y", "lim", "([", "0", ",", " mask", ".", "shape", "[", "0", "]", " -", " ", "1", "])", "\n", "    ", "return", " (", "mask", ",", " ax", ")", "\n", "\n", "def"], "logprobs": [-1.3737635612487793, -3.922595977783203, -3.588688850402832, -0.11183074861764908, -2.243814468383789, -0.005831727758049965, -0.19514502584934235, -0.031393490731716156, -0.10244408249855042, -2.5152843591058627e-05, -2.321767807006836, -0.9222961664199829, -0.5911029577255249, -1.1011443138122559, -0.0002119316632160917, -0.0003307510633021593, -0.4997524321079254, -0.3700178563594818, -0.011187797412276268, -0.03260749951004982, -1.0363842248916626, -0.5064510703086853, -1.8693580627441406, -0.49718859791755676, -0.009021474048495293, -0.14814545214176178, -0.002957496326416731, -0.693545401096344, -0.01120489090681076, -0.02541305124759674, -1.4305104514278355e-06, -5.125868119648658e-05, -0.0007769426447339356, -5.6503606174374e-05, -0.0007990981102921069, -0.1686173975467682, -0.12685738503932953, -0.3728927671909332, -0.19414179027080536, -0.1380336582660675, -1.7854338884353638, -0.006305798422545195, -0.6512947678565979, -0.00042846560245379806, -1.526379942893982, -0.0034518202301114798, -0.09293957054615021, -0.03754105046391487, -0.5329840183258057, -3.4536948204040527, -0.017376447096467018, -0.11937429755926132, -0.7010146975517273, -0.01023130863904953, -1.2004082202911377, -0.06219840422272682, -1.4739735126495361, -0.003391468897461891, -0.04202549532055855, -1.1933079957962036, -0.021989108994603157, -0.12077891081571579, -2.4776623249053955, -0.015234773978590965, -2.2319207191467285, -0.0055499752052128315, -0.0007265550084412098, -0.019117388874292374, -2.0475261211395264, -0.015933571383357048, -3.2433385848999023, -0.08014199137687683, -0.10235971957445145, -0.000740968796890229, -3.6451783180236816, -0.025338204577565193, -3.956160068511963, -0.6579380631446838, -0.6663200855255127, -0.3688422441482544, -1.4147205352783203, -0.018809756264090538, -0.0004499138449318707, -0.4125847816467285, -0.0036722859367728233, -0.03053477220237255, -0.013353085145354271, -0.04919285327196121, -9.643566590966657e-05, -3.4893429279327393, -0.01538257859647274, -0.874640703201294, -0.7254624962806702, -0.5279390215873718, -0.7291298508644104, -0.22411468625068665, -0.04376824200153351, -0.0031760509591549635, -0.3424997925758362, -0.37402841448783875, -0.00023052419419400394, -0.04466960206627846, -2.1076276302337646, -1.1505153179168701, -0.10967785120010376, -0.934481680393219, -0.004400569945573807, -1.5903851985931396, -0.002155839465558529, -0.00038485272671096027, -0.18652638792991638, -0.006388006266206503, -1.2808765172958374, -0.0015783959534019232, -0.01600290648639202, -0.0008515069494023919, -0.06881146878004074, -0.5061697363853455, -0.0010303908493369818, -0.11399146169424057, -0.05812860652804375, -0.31732481718063354, -0.001684914343059063, -0.2891559600830078, -0.0001734344696160406, -9.905801562126726e-05, -0.0033092519734054804, -0.001538523007184267, -0.050161901861429214, -4.5536911784438416e-05, -0.004430122673511505, -2.825220326485578e-05, -0.01424900908023119, -1.295089840888977, -0.0005246216314844787, -0.035315029323101044, -0.10896549373865128, -1.8646609783172607, -4.199512004852295, -4.054482460021973, -2.652019739151001, -0.48680579662323, -0.0025372477248311043, -1.2758198976516724, -0.20823934674263, -0.5690338015556335, -0.023293431848287582, -2.3917832374572754, -1.2010319232940674, -0.09534065425395966, -0.9938135147094727, -2.2697644233703613, -2.711825370788574, -2.5411276817321777, -1.2422090768814087, -0.0007894498412497342, -0.1749662160873413, -0.0035298678558319807, -0.05464496836066246, -0.05522247031331062, -0.052770137786865234, -0.0002762889489531517, -2.372715711593628, -0.9021771550178528, -0.0816676914691925, -1.9008803367614746, -0.004238076042383909, -0.20408520102500916, -0.007826142013072968, -0.1388353854417801, -1.2106589078903198, -0.08688212931156158, -0.002922076266258955, -0.03194069862365723, -0.006251542363315821, -0.0061183772049844265, -0.012760063633322716, -0.25614336133003235, -0.4547191560268402, -0.041918955743312836, -0.005536342039704323, -0.014622779563069344, -0.00028689560713246465, -0.015745950862765312, -0.00032586511224508286, -0.0020732830744236708, -8.153582894010469e-05, -0.004013341851532459, -5.757642793469131e-05, -0.10308066010475159, -2.75958251953125, -0.004849220626056194, -0.008734237402677536, -7.70062324590981e-05, -0.003997194115072489, -0.0004489606071729213, -0.04188729077577591, -0.017168473452329636, -0.0034639376681298018, -0.0015029336791485548, -0.006044797133654356, -0.002357324818149209, -0.0009242791566066444, -0.07943183928728104, -1.2372102737426758, -1.8269383907318115, -0.014252652414143085, -0.005305140744894743, -0.007246638182550669, -0.23408997058868408, -0.23963648080825806, -0.02538306638598442, -1.509638786315918], "finish_reason": "stop"}], "metrics": {"energy": 245.26273229217523, "energy_per_token": 1.1514682267238274, "time": 9.258348, "time_per_token": 0.04346642253521127}}
{"outputs": [{"text": "mask = dataframe[dataframe[\"Column1\"] == target_value] != ''\n    heatmap = sns.heatmap(mask, cmap='RdBu', annot=True, ax=None)\n    return mask, heatmap", "tokens": ["mask", " =", " data", "frame", "[", "data", "frame", "[", "\"", "Column", "1", "\"", "]", " ==", " target", "_", "value", "]", " ", "!", "=", " ''", "\n", "    ", "heat", "map", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "R", "dB", "u", "'", ",", " annot", "=", "True", ",", " ax", "=", "None", ")", "\n", "    ", "return", " mask", ",", " heat", "map", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -0.8835238814353943, -8.570780482841656e-05, -1.9092081785202026, -0.19376768171787262, -0.04312540218234062, -0.3849089443683624, -0.0008993871742859483, -0.0018375907093286514, -0.20710547268390656, -0.023378679528832436, -3.8265450712060556e-05, -4.386805812828243e-05, -0.024456119164824486, -2.426539897918701, -0.00033766290289349854, -0.00010013079008786008, -2.030078172683716, -0.02869395911693573, -0.09772095829248428, -3.686326503753662, -0.06596951186656952, -0.20377828180789948, -0.04508117586374283, -1.9073468138230965e-06, -7.056941103655845e-05, -0.002275855513289571, -3.528532761265524e-05, -0.0012988949893042445, -0.23379750549793243, -0.3269188404083252, -0.595291793346405, -0.2603927552700043, -0.24484851956367493, -2.3520190715789795, -1.5746760368347168, -5.483612312673358e-06, -0.6835572123527527, -0.0006291079334914684, -1.1077014207839966, -0.007744051981717348, -0.2716108560562134, -0.40324288606643677, -3.654512405395508, -0.012405612505972385, -1.2729828357696533, -0.5185071229934692, -0.017430804669857025, -0.09543861448764801, -0.4997596740722656, -0.29620346426963806, -0.010508324950933456, -0.19045081734657288, -1.823885577323381e-05, -0.7806010246276855, -0.018350590020418167, -1.4122742414474487], "finish_reason": "stop"}], "metrics": {"energy": 59.47731258583069, "energy_per_token": 0.975037911243126, "time": 2.5329232, "time_per_token": 0.04152333114754098}}
{"outputs": [{"text": "mask = dataframe['Column1'] == target_value\n    return (mask, plt.gcf().gca())", "tokens": ["mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "    ", "return", " (", "mask", ",", " plt", ".", "g", "cf", "()", ".", "g", "ca", "())", "\n", "\n", "def"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -0.22839175164699554, -0.0026666102930903435, -0.1994035840034485, -0.016464324668049812, -5.8410845667822286e-05, -4.23184028477408e-05, -0.031514670699834824, -0.159295916557312, -1.4193322658538818, -1.8596224784851074, -0.08966708928346634, -0.024579770863056183, -2.413921356201172, -0.009879029355943203, -0.9503234028816223, -1.239805817604065, -0.02997187152504921, -0.0007202415145002306, -0.44784998893737793, -0.01296271849423647, -0.28799471259117126, -0.21816310286521912, -0.01921878010034561, -1.2208013534545898], "finish_reason": "stop"}], "metrics": {"energy": 38.73876033782959, "energy_per_token": 1.2912920112609862, "time": 1.0700074, "time_per_token": 0.035666913333333335}}
{"outputs": [{"text": "mask = dataframe['Column3'] == target_value\n    return (mask, ax)", "tokens": ["mask", " =", " data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", "\n", "    ", "return", " (", "mask", ",", " ax", ")", "\n", "\n", "def"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -1.6792908906936646, -0.0008761619683355093, -0.1889265775680542, -0.01202418189495802, -5.531158240046352e-05, -3.611976353568025e-05, -0.02321097068488598, -0.09232214838266373, -1.7264212369918823, -1.936811923980713, -0.07052663713693619, -0.02252948097884655, -0.8573155999183655, -0.11515475809574127, -0.1018766388297081, -0.016192708164453506, -1.2651631832122803], "finish_reason": "stop"}], "metrics": {"energy": 10.486334867477416, "energy_per_token": 0.4559276029338007, "time": 0.86086416, "time_per_token": 0.03742887652173913}}
{"outputs": [{"text": "mask = dataframe[['Column1', 'Column2', 'Column3']].apply(lambda row: target_value in row)\n\n    ax = sns.heatmap(mask,\n                     annot=True,\n                     cmap='Blues',\n                     linecolor='white',\n                     linewidths=1)\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "['", "Column", "1", "'", ",", " '", "Column", "2", "'", ",", " '", "Column", "3", "']", "]", ".", "apply", "(", "lambda", " row", ":", " target", "_", "value", " in", " row", ")", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", "\n", "                ", "     ", "annot", "=", "True", ",", "\n", "                ", "     ", "cm", "ap", "='", "Bl", "ues", "'", ",", "\n", "                ", "     ", "line", "color", "='", "white", "'", ",", "\n", "                ", "     ", "linewidth", "s", "=", "1", ")", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -1.585073471069336, -0.0082594258710742, -0.008990993723273277, -0.0064874994568526745, -0.0001591317413840443, -0.02981058694422245, -0.00026246439665555954, -0.007794087287038565, -0.014409767463803291, -1.680836794548668e-05, -0.0036743050441145897, -0.00023982033599168062, -0.00018773700867313892, -0.0016482589999213815, -0.0026419993955641985, -0.7236000299453735, -0.25437065958976746, -0.27021926641464233, -0.17707815766334534, -1.8957808017730713, -0.0014265133067965508, -0.4299229383468628, -0.00047088501742109656, -0.00012242044613230973, -0.00921366736292839, -0.04595425724983215, -2.3657219409942627, -0.28283533453941345, -2.448881149291992, -0.001972635742276907, -1.1634268760681152, -0.008840941824018955, -0.0506976917386055, -1.311301275563892e-06, -5.3881147323409095e-05, -0.0010924329981207848, -3.45700973412022e-05, -0.0006073060794733465, -0.16796688735485077, -0.18874616920948029, -2.2959325313568115, -0.10509777814149857, -0.6495378613471985, -1.1512861251831055, -0.015509703196585178, -0.3260321319103241, -0.006561639253050089, -0.17261682450771332, -0.000920706195756793, -0.00210564024746418, -0.8161038160324097, -9.667406266089529e-05, -0.1997988373041153, -2.279358386993408, -0.0019116000039502978, -0.3129529356956482, -0.0059294989332556725, -0.01922217197716236, -0.0015666127437725663, -0.002093149581924081, -3.4325437545776367, -0.34718039631843567, -0.10088112950325012, -0.17383714020252228, -0.029115518555045128, -0.0026016931515187025, -0.001215077005326748, -0.00044943721150048077, -0.000542493537068367, -0.03702274709939957, -1.0202898979187012, -0.000606710382271558, -1.3069332838058472, -1.7112383842468262, -0.025022948160767555, -1.035832166671753, -0.5537306070327759, -0.20001552999019623, -0.004453146830201149, -0.011786935850977898, -0.20698752999305725, -0.020230034366250038, -1.1937048435211182], "finish_reason": "stop"}], "metrics": {"energy": 118.70673472976682, "energy_per_token": 1.3489401673837138, "time": 3.5702314, "time_per_token": 0.04057081136363636}}
{"outputs": [{"text": "mask = dataframe[\"Column1\"].map(lambda x: True if x == target_value else False)\n    ax = sns.heatmap(mask, cmap='YlGnBu')\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "[", "\"", "Column", "1", "\"", "]", ".", "map", "(", "lambda", " x", ":", " True", " if", " x", " ==", " target", "_", "value", " else", " False", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "Y", "l", "G", "nB", "u", "')", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.0242085456848145, -1.3835830688476562, -0.02135416306555271, -0.3637988865375519, -0.0012217445764690638, -0.002762313699349761, -1.591922402381897, -1.812839150428772, -0.013565381057560444, -0.3610427677631378, -0.09178906679153442, -0.003017042065039277, -3.1133556365966797, -0.006742583122104406, -0.27483776211738586, -0.059563010931015015, -0.028141725808382034, -3.4450891689630225e-05, -5.5549986427649856e-05, -0.012105449102818966, -0.004567309748381376, -0.004280096851289272, -0.08884281665086746, -0.07883422076702118, -0.8590419888496399, -0.01757219433784485, -0.033323436975479126, -1.4305104514278355e-06, -5.1377883210079744e-05, -0.0014830554137006402, -0.00015114595589693636, -0.0007516896002925932, -0.3321031332015991, -0.6681976914405823, -0.46605899930000305, -0.1543319970369339, -0.3171817660331726, -1.3408300876617432, -0.003799482947215438, -0.32966551184654236, -0.04578573629260063, -0.0002460177056491375, -0.4876546561717987, -0.029722297564148903, -0.08826542645692825, -0.15447133779525757, -0.21184028685092926, -0.006881821434944868, -0.01865602284669876, -0.4298217296600342, -0.022289002314209938, -1.2506366968154907], "finish_reason": "stop"}], "metrics": {"energy": 46.67015978240966, "energy_per_token": 0.8333957104001726, "time": 2.3285565, "time_per_token": 0.04158136607142857}}
{"outputs": [{"text": "# TODO\n    pass", "tokens": ["#", " TODO", "\n", "    ", "pass", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3737635612487793, -3.8293590545654297, -2.2405340671539307, -0.2571299076080322, -0.8417654633522034, -2.428521156311035, -4.768370445162873e-07, -9.536738616588991e-07, -7.056941103655845e-05, -0.0003106111544184387, -0.08663401007652283], "finish_reason": "stop"}], "metrics": {"energy": 5.891549263000488, "energy_per_token": 0.535595387545499, "time": 0.22983041, "time_per_token": 0.020893673636363637}}
{"outputs": [{"text": "mask = dataframe['Column1'] == target_value\n    ax = sns.heatmap(dataframe[mask], annot=True, fmt='')\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "['", "Column", "1", "']", " ==", " target", "_", "value", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "frame", "[", "mask", "]", ",", " annot", "=", "True", ",", " fmt", "='", "')", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -0.22839175164699554, -0.0026666102930903435, -0.1994035840034485, -0.016464324668049812, -5.8410845667822286e-05, -4.23184028477408e-05, -0.031514670699834824, -0.159295916557312, -1.1145665645599365, -0.010253019630908966, -0.029198652133345604, -1.6689286894688848e-06, -8.618460560683161e-05, -0.0023259271401911974, -3.969590397900902e-05, -0.0008216104470193386, -1.929369330406189, -0.023704933002591133, -0.26187488436698914, -0.2838800847530365, -0.1052011176943779, -0.04165325313806534, -1.701857566833496, -0.008697248995304108, -0.0967818945646286, -0.3239825665950775, -1.6272077560424805, -0.30315083265304565, -0.8737074136734009, -0.03943992778658867, -0.09056145697832108, -0.22415421903133392, -0.21109838783740997, -0.0033830334432423115, -0.011837711557745934, -0.32715851068496704, -0.015398778021335602, -1.2519662380218506], "finish_reason": "stop"}], "metrics": {"energy": 27.375987052917477, "energy_per_token": 0.6221815239299426, "time": 1.6982894, "time_per_token": 0.038597486363636364}}
{"outputs": [{"text": "# Find the target value\n    mask = dataframe['Column3'] == target_value\n\n    # Create a new DataFrame with the mask\n    filtered_df = dataframe[mask]\n\n    # Visualize the filtered DataFrame using a heatmap\n    fig, ax = plt.subplots(figsize=(10, 10))\n    sns.heatmap(filtered_df, cbar=False, ax=ax, cmap='Blues')\n    plt.show()\n\n    return mask, ax", "tokens": ["#", " Find", " the", " target", " value", "\n", "    ", "mask", " =", " data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", "\n", "\n", "    ", "#", " Create", " a", " new", " Data", "Frame", " with", " the", " mask", "\n", "    ", "filtered", "_", "df", " =", " data", "frame", "[", "mask", "]", "\n", "\n", "    ", "#", " Visual", "ize", " the", " filtered", " Data", "Frame", " using", " a", " heat", "map", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "0", ",", " ", "1", "0", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "filtered", "_", "df", ",", " c", "bar", "=", "False", ",", " ax", "=", "ax", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " mask", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.3737635612487793, -3.458192825317383, -0.8961251974105835, -1.8106505870819092, -0.15460391342639923, -2.180344343185425, -0.001934444298967719, -2.2603304386138916, -0.020296970382332802, -0.08765057474374771, -1.966933996300213e-05, -0.8394458889961243, -0.017322905361652374, -1.8394579887390137, -0.000536655425094068, -0.1319568157196045, -0.004740309901535511, -9.202533692587167e-05, -2.5987286790041253e-05, -0.012341206893324852, -0.22784820199012756, -0.0007651500636711717, -0.03519903123378754, -0.7575758695602417, -0.2266007363796234, -2.6476736068725586, -0.32141441106796265, -0.0005781171494163573, -0.21327127516269684, -0.9193074107170105, -1.7146785259246826, -0.8800576329231262, -0.0007892115972936153, -3.2006773948669434, -0.13688036799430847, -0.33587634563446045, -0.0008367374539375305, -0.09367027133703232, -1.4066597032069694e-05, -0.11348875612020493, -0.008305652067065239, -0.004373746924102306, -0.027495600283145905, -0.06599551439285278, -0.0009335688664577901, -0.04059888795018196, -1.7507890462875366, -0.0073983496986329556, -0.09951086342334747, -0.9979868531227112, -0.34929323196411133, -0.0005399914807640016, -0.3670704960823059, -0.259539932012558, -0.016121741384267807, -0.003108671400696039, -0.033300723880529404, -0.001599105424247682, -1.336620807647705, -0.040575649589300156, -0.006215172354131937, -0.002988755237311125, -0.0005628670332953334, -0.0001225396408699453, -0.0002574589161667973, -3.838465272565372e-05, -0.8229367733001709, -0.014167563058435917, -0.00020847532141488045, -0.013311796821653843, -0.4288468658924103, -0.5126820206642151, -0.0018860186683014035, -0.02498016133904457, -1.2477056980133057, -0.00986285787075758, -0.006741280667483807, -0.004925854504108429, -0.027176382020115852, -0.15651269257068634, -2.6940935640595853e-05, -0.000546425289940089, -0.0070084924809634686, -2.5152843591058627e-05, -0.00016258825780823827, -0.07034509629011154, -8.940656698541716e-06, -2.52720492426306e-05, -0.13644489645957947, -1.2939379215240479, -1.6076257228851318, -0.0466633215546608, -0.13875186443328857, -0.1282004565000534, -1.0701614618301392, -0.0010755236726254225, -0.00020632999076042324, -0.5057169198989868, -0.7402758598327637, -0.051973383873701096, -0.11744368076324463, -1.8539140224456787, -0.0011787617113441229, -0.4927883744239807, -0.015724241733551025, -0.8297524452209473, -2.4858131408691406, -4.1960789531003684e-05, -0.6310991644859314, -0.004486376419663429, -0.027556022629141808, -1.1079025268554688, -0.14197003841400146, -0.3555171489715576, -0.8137088418006897, -0.010714149102568626, -0.012852334417402744, -1.324185848236084, -1.1920922133867862e-06, -9.536738616588991e-07, -2.825220326485578e-05, -0.00014447122521232814, -0.13000869750976562], "finish_reason": "stop"}], "metrics": {"energy": 122.64980272293093, "energy_per_token": 0.9971528676661051, "time": 5.268971, "time_per_token": 0.04283716260162601}}
{"outputs": [{"text": "mask = dataframe == target_value\n    ax = sns.heatmap(mask, cmap='Blues')\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", " ==", " target", "_", "value", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "    ", "return", " mask", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -1.9508976936340332, -0.004632455296814442, -9.941560711013153e-05, -3.099393507000059e-05, -0.028820330277085304, -0.1257723867893219, -1.0994420051574707, -0.010892811231315136, -0.022840164601802826, -1.6689286894688848e-06, -6.472854875028133e-05, -0.001408895361237228, -7.092700980138034e-05, -0.0005863377591595054, -0.17669092118740082, -0.1275392770767212, -0.3219827711582184, -0.11007527261972427, -0.11943291127681732, -1.5286955833435059, -0.0008399534272029996, -0.5519235730171204, -0.02483249083161354, -0.08507350087165833, -0.1577819436788559, -0.20392800867557526, -0.00416696909815073, -0.011166342534124851, -1.9201841354370117, -8.344646857949556e-07, -1.1920922133867862e-06, -5.8530047681415454e-05, -0.0001512651506345719, -0.10999443382024765], "finish_reason": "stop"}], "metrics": {"energy": 48.90034980392457, "energy_per_token": 1.286851310629594, "time": 1.4895222, "time_per_token": 0.03919795263157894}}
{"outputs": [{"text": "mask = dataframe['Column3'] == target_value\n\n    ax = sns.heatmap(\n        mask.reshape(len(mask), 1), cmap='Reds')\n\n    return mask, ax", "tokens": ["mask", " =", " data", "frame", "['", "Column", "3", "']", " ==", " target", "_", "value", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n", "        ", "mask", ".", "resh", "ape", "(", "len", "(", "mask", ")", ",", " ", "1", ")", ",", " c", "map", "='", "Red", "s", "')", "\n", "\n", "    ", "return", " mask", ",", " ax", "\n", "\n", "#"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -1.6792908906936646, -0.0008761619683355093, -0.1889265775680542, -0.01202418189495802, -5.531158240046352e-05, -3.611976353568025e-05, -0.02321097068488598, -2.42976450920105, -0.0012999664759263396, -1.5130449533462524, -0.013263683766126633, -0.038913894444704056, -1.7881377516459906e-06, -0.000102037942269817, -0.0020973130594938993, -5.113947918289341e-05, -0.0007403731578961015, -1.453908920288086, -0.03864612802863121, -0.7782062292098999, -0.42905715107917786, -3.3775205612182617, -5.125986263010418e-06, -0.4434017837047577, -2.101301670074463, -0.0005731132114306092, -1.1141724586486816, -0.028787435963749886, -0.007968067191541195, -0.8811845183372498, -0.14293944835662842, -0.020526835694909096, -0.1634960025548935, -2.8539650440216064, -0.12621821463108063, -0.21987971663475037, -1.2421753406524658, -0.004876387305557728, -2.7253596782684326, -0.03868890926241875, -0.38795536756515503, -0.007680410053580999, -0.10883624106645584, -0.11991783231496811, -0.004399027209728956, -0.006867969874292612, -0.37940892577171326, -0.01321521494537592, -1.601651906967163], "finish_reason": "stop"}], "metrics": {"energy": 61.78539276123047, "energy_per_token": 1.1233707774769177, "time": 2.1225984, "time_per_token": 0.03859269818181819}}
{"outputs": [{"text": "mask = dataframe['Column3'].str.contains(target_value)\n    ax = sns.heatmap(mask, annot=True)\n    return (mask, ax)", "tokens": ["mask", " =", " data", "frame", "['", "Column", "3", "']", ".", "str", ".", "contains", "(", "target", "_", "value", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "mask", ",", " annot", "=", "True", ")", "\n", "    ", "return", " (", "mask", ",", " ax", ")", "\n", "\n", "def"], "logprobs": [-0.8385652899742126, -0.021850092336535454, -0.1369815170764923, -2.288792165927589e-05, -0.8938717842102051, -0.02170289121568203, -1.6792908906936646, -0.0008761619683355093, -1.8225020170211792, -0.6307085156440735, -0.08169834315776825, -0.07245254516601562, -0.008825935423374176, -0.013117095455527306, -0.00011693747364915907, -6.317892984952778e-05, -0.10317754745483398, -0.07940728217363358, -0.1211535707116127, -0.6816096901893616, -0.01144003588706255, -0.01796322502195835, -1.4305104514278355e-06, -4.660974445869215e-05, -0.0017151420470327139, -6.997340824455023e-05, -0.0005333193112164736, -0.3306029736995697, -0.5653523206710815, -2.3535025119781494, -0.008253632113337517, -0.027764396741986275, -1.4499011039733887, -0.039138030260801315, -0.13564030826091766, -0.16052620112895966, -1.8162940740585327, -0.026622381061315536, -0.003450751071795821, -0.03488433361053467, -0.19212858378887177, -0.2386963814496994, -0.029985059052705765, -1.5412250757217407], "finish_reason": "stop"}], "metrics": {"energy": 23.31422068405151, "energy_per_token": 0.5298686519102616, "time": 1.6919348, "time_per_token": 0.03845306363636364}}
