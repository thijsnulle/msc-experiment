{"outputs": [{"text": "# Create a LabelEncoder instance\n    le = LabelEncoder()\n\n    # Fit the data\n    le.fit(data)\n\n    # Create a DataFrame with original values and encodings\n    df = pd.DataFrame({\"Category\": data, \"Encoded\": le.transform(data)})\n\n    return df\n\ntask_func(['A', 'B', 'C', 'A', 'D', 'E', 'B', 'C'])", "tokens": ["#", " Create", " a", " Label", "Encoder", " instance", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "\n", "    ", "#", " Fit", " the", " data", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " original", " values", " and", " enc", "od", "ings", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "{\"", "Category", "\":", " data", ",", " \"", "Enc", "oded", "\":", " le", ".", "transform", "(", "data", ")})", "\n", "\n", "    ", "return", " df", "\n", "\n", "task", "_", "func", "(['", "A", "'", ",", " '", "B", "'", ",", " '", "C", "'", ",", " '", "A", "'", ",", " '", "D", "'", ",", " '", "E", "'", ",", " '", "B", "'", ",", " '", "C", "'])"], "logprobs": [-1.5576516389846802, -1.1296586990356445, -0.27576133608818054, -0.5777224898338318, -0.01875055953860283, -1.2737151384353638, -0.15722030401229858, -0.0008977196994237602, -1.155029535293579, -0.0031059379689395428, -0.0005886013968847692, -1.5616295058862306e-05, -0.00031406714697368443, -0.0011338717304170132, -0.21806763112545013, -0.00013350549852475524, -0.0017992750508710742, -0.3208123445510864, -0.4290231466293335, -0.7081888914108276, -2.587864398956299, -7.450303382938728e-05, -0.02292032539844513, -0.0066322204656898975, -0.00010311071673640981, -0.018575169146060944, -0.003960504662245512, -0.0004383556661196053, -0.00036244976217858493, -0.008085377514362335, -0.00015233787416946143, -0.0048444755375385284, -0.27492985129356384, -0.2495373785495758, -0.495356023311615, -0.0007219092221930623, -0.3046661615371704, -1.2202951908111572, -1.9406018257141113, -0.068855419754982, -2.794616222381592, -0.0004567056894302368, -0.00018308870494365692, -0.017284005880355835, -0.0003321811091154814, -0.5299587845802307, -0.01659412682056427, -0.003639266826212406, -2.288792165927589e-05, -0.0003251500893384218, -2.481233596801758, -0.9693795442581177, -0.009974044747650623, -0.0005667987279593945, -0.24341587722301483, -0.055314965546131134, -0.024667352437973022, -0.001620766706764698, -4.792098479811102e-05, -0.00015829740732442588, -0.012960836291313171, -0.00016282663273159415, -0.00424294313415885, -0.0003921216703020036, -0.006977477576583624, -0.009946190752089024, -0.007689045742154121, -0.22224374115467072, -0.0003432638186495751, -0.22211085259914398, -0.0010745710460469127, -0.30462995171546936, -0.023683510720729828, -3.9372973442077637, -0.023829607293009758, -0.11041916161775589, -0.6796404123306274, -0.0853499174118042, -0.0012371037155389786, -6.425174069590867e-05, -0.01093396358191967, -0.005762274842709303, -0.0006927236099727452, -6.913899414939806e-05, -0.000662822334561497, -0.002618576865643263, -0.008150176145136356, -4.303362584323622e-05, -0.0005030558677390218, -0.01548693235963583, -0.003844965947791934, -7.128461584215984e-05, -0.0004450284468475729, -0.0059294989332556725, -0.0032949938904494047, -4.1483970562694594e-05, -0.000460876093711704, -0.0015012671938166022, -0.0038283406756818295, -4.0649541915627196e-05, -0.00037079135654494166, -0.0009055804111994803, -0.000785280775744468, -1.9311717551317997e-05, -0.0003768687602132559, -0.0002646096108946949, -0.017005814239382744], "finish_reason": "stop"}], "metrics": {"energy": 612.4071152267453, "energy_per_token": 5.7234309834275265, "time": 14.823006, "time_per_token": 0.13853276635514017}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n\n    # Generate a DataFrame with the categorical data and their corresponding encodings\n    df = pd.DataFrame(data={\"Category\": data,\n                            \"Encoded\": le.transform(data)}\n                      )\n\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Generate", " a", " Data", "Frame", " with", " the", " categorical", " data", " and", " their", " corresponding", " enc", "od", "ings", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", "=", "{\"", "Category", "\":", " data", ",", "\n", "                ", "            ", "\"", "Enc", "oded", "\":", " le", ".", "transform", "(", "data", ")}", "\n", "                ", "      ", ")", "\n", "\n", "    ", "return", " df"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -2.092532157897949, -0.00042846560245379806, -2.3744659423828125, -2.303243398666382, -0.7208141684532166, -0.4714163839817047, -0.0009105826611630619, -0.31814417243003845, -0.7950420379638672, -3.367086172103882, -0.5960954427719116, -0.06401227414608002, -0.4462129473686218, -1.2440135478973389, -0.3592464029788971, -0.0004167880106251687, -0.00015686711412854493, -0.020810822024941444, -0.001524953986518085, -0.7163133025169373, -0.03147250786423683, -0.006520661525428295, -2.8729025871143676e-05, -0.0016756316181272268, -1.8928794860839844, -0.7750996947288513, -1.4686474800109863, -0.7576645016670227, -0.02075898088514805, -0.0007232195930555463, -0.36234724521636963, -0.2789400517940521, -2.5721681118011475, -0.0024480633437633514, -0.022931160405278206, -0.003132795449346304, -0.0022047278471291065, -8.511180931236595e-05, -0.0009497660794295371, -0.041101954877376556, -0.0003734129713848233, -0.006166005972772837, -0.0017688118387013674, -0.07427593320608139, -2.1901564598083496, -0.41388973593711853, -0.0024861162528395653, -0.011293533258140087, -0.0013066334649920464, -0.033534418791532516, -0.916409432888031, -0.0006636562757194042, -0.13912421464920044, -0.004020584747195244], "finish_reason": "stop"}], "metrics": {"energy": 295.04716399192813, "energy_per_token": 4.338928882234237, "time": 6.292128, "time_per_token": 0.09253129411764706}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    label_encoder.fit(data)\n    transformed_data = label_encoder.transform(data)\n    df = pd.DataFrame({'Category': data, 'Encoded': transformed_data})\n    return df", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "    ", "trans", "formed", "_", "data", " =", " label", "_", "encoder", ".", "transform", "(", "data", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " transformed", "_", "data", "})", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -1.5665010213851929, -0.0019747773185372353, -0.11097430437803268, -0.01119911391288042, -0.00040749352774582803, -0.03695841506123543, -0.004893113858997822, -0.0011312521528452635, -0.009185200557112694, -0.171672061085701, -2.971886157989502, -0.032431524246931076, -0.2737206518650055, -0.07456254214048386, -0.0036549451760947704, -0.05764742195606232, -1.2993727978027891e-05, -5.7338023907504976e-05, -3.40932747349143e-05, -0.015211057849228382, -0.0009502424509264529, -0.018248174339532852, -0.0003332536434754729, -0.013127566315233707, -0.3383714556694031, -0.8684231042861938, -0.015896378085017204, -0.00806385651230812, -3.015949550899677e-05, -0.0012006701435893774, -0.24003668129444122, -0.05355088785290718, -0.010543830692768097, -0.000969297660049051, -0.02503085322678089, -0.002508233767002821, -0.025432344526052475, -0.0019902437925338745, -6.568216485902667e-05, -0.00042274597217328846, -0.0050230021588504314, -4.172316494077677e-06, -2.50339189733495e-06, -0.00714970612898469, -0.00785535667091608, -0.058213409036397934, -0.03116796165704727, -0.001511027687229216, -0.14737193286418915, -0.026769788935780525, -1.6094034910202026], "finish_reason": "stop"}], "metrics": {"energy": 254.0515461807251, "energy_per_token": 4.234192436345419, "time": 5.2536106, "time_per_token": 0.08756017666666667}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    encodings = le.transform(data)\n\n    return pd.DataFrame({'Category': data, 'Encoded': encodings})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "enc", "od", "ings", " =", " le", ".", "transform", "(", "data", ")", "\n", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " enc", "od", "ings", "})", "\n", "\n", "def"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -3.1294784545898438, -0.2842819094657898, -0.004373153205960989, -0.02082541584968567, -0.6665648221969604, -0.0002802217786666006, -0.06831524521112442, -0.00207673292607069, -0.09097395092248917, -0.0002731903805397451, -0.0149280596524477, -1.5985798835754395, -0.0003936707798857242, -1.5978769063949585, -0.005592059344053268, -1.7165990357170813e-05, -0.0010417040903121233, -0.13232730329036713, -0.0334906131029129, -0.005143030546605587, -0.0004711233195848763, -0.03731989115476608, -0.0018250966677442193, -0.008455547504127026, -0.0017059786478057504, -0.0005899119423702359, -0.00029488030122593045, -0.01257855724543333, -1.156323378381785e-05, -1.9073468138230965e-06, -0.013461061753332615, -0.3865627348423004, -0.023046262562274933, -1.6190621852874756], "finish_reason": "stop"}], "metrics": {"energy": 200.46782413482666, "energy_per_token": 4.091180084384217, "time": 4.184637, "time_per_token": 0.08540075510204083}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    num_data = label_encoder.fit_transform(data)\n    return pd.DataFrame({'Category': data, 'Encoded': num_data})", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "num", "_", "data", " =", " label", "_", "encoder", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " num", "_", "data", "})"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -3.646716594696045, -0.12343672662973404, -0.7670920491218567, -0.0027015639934688807, -0.02782572992146015, -2.145764938177308e-06, -6.556489552167477e-06, -1.9073304429184645e-05, -0.0007668177131563425, -0.003917164634913206, -0.0007794441189616919, -0.000886285852175206, -0.0050642783753573895, -0.0010495636379346251, -0.031295523047447205, -0.1501365602016449, -1.5630239248275757, -0.004374933894723654, -3.9219088648678735e-05, -0.0015852991491556168, -0.09366929531097412, -0.04484241455793381, -0.006401390768587589, -0.0007146426942199469, -0.018062392249703407, -0.00159172632265836, -0.008826407603919506, -0.00204722979106009, -0.00020311199477873743, -0.00041929035796783864, -0.013799736276268959, -1.2040065485052764e-05, -3.3378546504536644e-06, -0.023813776671886444], "finish_reason": "stop"}], "metrics": {"energy": 156.02273931503296, "energy_per_token": 3.6284357980240225, "time": 3.9701061, "time_per_token": 0.09232804883720931}}
{"outputs": [{"text": "le = LabelEncoder()\n    encoded = le.fit_transform(data)\n    df = pd.DataFrame({'Category': data, 'Encoded': encoded})\n    return df\n\ndata = [\"a\", \"b\", \"c\", \"a\", \"d\", \"b\", \"e\", \"c\", \"b\"]\noutput_df = task_func(data)\nprint(output_df)", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "encoded", " =", " le", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "})", "\n", "    ", "return", " df", "\n", "\n", "data", " =", " [", "\"", "a", "\"", ",", " \"", "b", "\"", ",", " \"", "c", "\"", ",", " \"", "a", "\"", ",", " \"", "d", "\"", ",", " \"", "b", "\"", ",", " \"", "e", "\"", ",", " \"", "c", "\"", ",", " \"", "b", "\"", "]", "\n", "output", "_", "df", " =", " task", "_", "func", "(", "data", ")", "\n", "print", "(", "output", "_", "df", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -2.772907257080078, -0.5074312686920166, -0.051730602979660034, -8.761498611420393e-05, -0.0009367844904772937, -0.013466589152812958, -0.00015615197480656207, -0.0004702892620116472, -0.004760123789310455, -0.002120985882356763, -0.012402315624058247, -0.12746046483516693, -0.7688175439834595, -0.008765553124248981, -0.006200126372277737, -4.565611743601039e-05, -0.0005860995152033865, -0.2679413855075836, -0.06455958634614944, -0.006484657060354948, -0.0015248350100591779, -0.049778953194618225, -0.0027129771187901497, -0.01217257883399725, -0.0019821536261588335, -8.070142939686775e-05, -0.00036197309964336455, -0.0017404898535460234, -0.00986994057893753, -0.015825625509023666, -0.04204675555229187, -0.034976083785295486, -0.0020017840433865786, -0.1898254156112671, -0.0282451044768095, -2.68882155418396, -0.0533723421394825, -2.3703227043151855, -0.7151690721511841, -2.8021037578582764, -0.0033709153067320585, -0.0038789284881204367, -0.07457482069730759, -0.32910165190696716, -0.0005071069463156164, -0.005886480677872896, -0.0024927754420787096, -0.19668175280094147, -0.00025459862081333995, -0.02819005586206913, -0.0029695008415728807, -1.1254929304122925, -0.0002337421028641984, -0.03330660238862038, -0.0020145138259977102, -1.1086509227752686, -0.00016890530241653323, -0.029705865308642387, -0.0024084628093987703, -1.9627301692962646, -0.00026306029758416116, -0.167557954788208, -0.002086725551635027, -1.4927010536193848, -0.00012694983161054552, -0.2782479524612427, -0.0021395429503172636, -0.8077220916748047, -0.00020561488054227084, -1.1302061080932617, -0.02541642263531685, -2.7349345684051514, -0.00016044282529037446, -1.0387904644012451, -0.0355207584798336, -3.3726277351379395, -1.8029536008834839, -0.4416637122631073, -0.0032832310535013676, -0.009133817628026009, -0.0009253510506823659, -0.0010471820132806897, -0.0022567061241716146, -0.0014569868799299002, -0.0376153364777565, -0.022511065006256104, -0.22360749542713165, -0.005411855410784483, -0.04923722520470619, -6.723177648382261e-05, -7.30726242181845e-05, -2.127544641494751, -3.576272320060525e-06, -2.50339189733495e-06, -7.033323527139146e-06, -3.290122185717337e-05, -0.08413486927747726], "finish_reason": "stop"}], "metrics": {"energy": 440.68485921859747, "energy_per_token": 4.237354415563437, "time": 9.403117, "time_per_token": 0.09041458653846154}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    categories = pd.DataFrame({'Category': data})\n    categories['Encoded'] = le.transform(categories['Category'])\n\n    return categories", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "categories", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", "})", "\n", "    ", "categories", "['", "Enc", "oded", "']", " =", " le", ".", "transform", "(", "categories", "['", "Category", "'])", "\n", "\n", "    ", "return", " categories", "\n", "\n", "def"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -2.442708969116211, -0.03411893919110298, -0.5884404182434082, -1.5616295058862306e-05, -0.1691441833972931, -0.6222318410873413, -0.08595656603574753, -0.009611284360289574, -0.005919188726693392, -0.4480327069759369, -0.4202161729335785, -0.005900464951992035, -0.005070801824331284, -0.6152036190032959, -0.026407847180962563, -0.003562415484338999, -3.6000557884108275e-05, -0.0003777029050979763, -0.0010981488740071654, -0.03098491206765175, -3.433168603805825e-05, -0.008408145979046822, -0.0015814905054867268, -0.17500564455986023, -0.014312234707176685, -3.099393507000059e-05, -0.00317308004014194, -0.006956405472010374, -2.1987404823303223, -0.0008760428754612803, -0.031789086759090424, -0.009726394899189472, -0.33182376623153687, -0.021713389083743095, -1.4367681741714478], "finish_reason": "stop"}], "metrics": {"energy": 187.96004639434815, "energy_per_token": 3.759200927886963, "time": 4.400488, "time_per_token": 0.08800976}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    labels = le.classes_\n    encodings = le.transform(labels)\n    result = {'Category': labels, 'Encoded': encodings}\n    df = pd.DataFrame(result)\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "labels", " =", " le", ".", "classes", "_", "\n", "    ", "enc", "od", "ings", " =", " le", ".", "transform", "(", "labels", ")", "\n", "    ", "result", " =", " {'", "Category", "':", " labels", ",", " '", "Enc", "oded", "':", " enc", "od", "ings", "}", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "result", ")", "\n", "    ", "return", " df", "\n", "\n", "print"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -1.8057231903076172, -0.05168282985687256, -1.3998956680297852, -9.905801562126726e-05, -0.551113486289978, -3.802703940891661e-05, -0.2508174180984497, -0.02370341867208481, -2.2045750617980957, -0.025062592700123787, -0.003850666107609868, -0.0006632988806813955, -0.04335452988743782, -0.00010346830822527409, -0.0006554362480528653, -0.0006292270263656974, -0.24972108006477356, -0.00034624303225427866, -0.03693819418549538, -0.2966488301753998, -3.0472850799560547, -0.15512925386428833, -2.5540740489959717, -0.007096916437149048, -0.00080195686314255, -0.12070981413125992, -0.004948748741298914, -0.015856251120567322, -0.004972946830093861, -0.0008123196894302964, -0.0005093707586638629, -0.004153316840529442, -1.1920922133867862e-06, -3.4570634852570947e-06, -0.005932224448770285, -0.0005802616360597312, -0.03736685961484909, -1.8096078634262085, -0.012970367446541786, -0.0012285312404856086, -0.00011407678539399058, -0.00029345019720494747, -0.1076253205537796, -0.11666131019592285, -0.008318537846207619, -0.009100151248276234, -0.04192936047911644, -0.035813745111227036, -0.0030778914224356413, -0.23286539316177368, -0.03479430451989174, -3.2782468795776367], "finish_reason": "stop"}], "metrics": {"energy": 289.97822796821595, "energy_per_token": 4.3280332532569545, "time": 5.860277, "time_per_token": 0.08746682089552239}}
{"outputs": [{"text": "# Create a label encoder object\n    label_encoder = LabelEncoder()\n\n    # Fit the label encoder to the data\n    label_encoder.fit(data)\n\n    # Create a DataFrame with original categorical values and their encodings\n    df = pd.DataFrame({'Category': data, 'Encoded': label_encoder.transform(data)})\n\n    return df", "tokens": ["#", " Create", " a", " label", " encoder", " object", "\n", "    ", "label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "\n", "    ", "#", " Fit", " the", " label", " encoder", " to", " the", " data", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " original", " categorical", " values", " and", " their", " enc", "od", "ings", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " label", "_", "encoder", ".", "transform", "(", "data", ")})", "\n", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-1.4550743103027344, -1.1929335594177246, -0.2683336138725281, -2.772658586502075, -0.018044363707304, -1.0874056816101074, -0.3792150914669037, -0.0009940688032656908, -1.0582112073898315, -0.007892257533967495, -0.022262655198574066, -0.0008407871937379241, -0.0015513778198510408, -2.1934269170742482e-05, -0.00038747431244701147, -0.0003483880718704313, -0.1339922696352005, -0.00010072677832795307, -0.003048655577003956, -0.46086546778678894, -0.23991525173187256, -0.28985223174095154, -0.0011070796754211187, -0.7821115851402283, -0.01824946142733097, -0.2781887352466583, -0.2837978005409241, -7.688703772146255e-05, -0.03042156994342804, -4.124556289752945e-05, -0.0007272697403095663, -0.0023308033123612404, -6.770858453819528e-05, -0.006979016587138176, -0.002782047726213932, -0.0006014683749526739, -0.00026842328952625394, -0.006089941132813692, -0.00010656742961145937, -0.0030844276770949364, -0.3781759738922119, -0.1797664612531662, -0.7707440853118896, -0.0005504761938937008, -0.2702088952064514, -1.986175775527954, -0.9413465857505798, -0.24039435386657715, -0.02937461994588375, -0.10118305683135986, -0.960178554058075, -0.00032848684350028634, -0.00017867876158561558, -0.0053262473084032536, -0.00037949037505313754, -0.7141229510307312, -0.01964961178600788, -0.006566494703292847, -2.610649426060263e-05, -0.00029559535323642194, -0.17189884185791016, -0.20397914946079254, -0.006576560903340578, -0.0004306104383431375, -0.2572215497493744, -0.04938837140798569, -0.09180309623479843, -0.001209838199429214, -3.6954195820726454e-05, -0.0001494772732257843, -0.027934009209275246, -2.622600959512056e-06, -0.0006354220095090568, -0.000188332938705571, -0.007188054267317057, -0.0004292996891308576, -0.010836208239197731, -0.007661245763301849, -0.009599831886589527, -0.19424408674240112, -0.00039188333903439343, -0.23305746912956238, -0.0009596510208211839, -0.20014844834804535, -0.02531902678310871, -1.6330533027648926], "finish_reason": "stop"}], "metrics": {"energy": 379.0768279132844, "energy_per_token": 4.407870092014934, "time": 7.922248, "time_per_token": 0.09211916279069766}}
{"outputs": [{"text": "le = LabelEncoder()\n    labels = le.fit_transform(data)\n\n    return pd.DataFrame({'Category': data, 'Encoded': labels})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "labels", " =", " le", ".", "fit", "_", "transform", "(", "data", ")", "\n", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " labels", "})", "\n", "\n", "if"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -2.958660125732422, -0.06645563244819641, -0.27325281500816345, -0.0001656871900195256, -0.0032191856298595667, -0.04148217663168907, -0.002937884768471122, -0.0012863941956311464, -0.006901119370013475, -0.004227629862725735, -0.013256154954433441, -2.2496538162231445, -0.00036816971260122955, -1.5325143337249756, -0.004824663512408733, -3.0636318115284666e-05, -0.0013465156080201268, -0.16876594722270966, -0.08470150828361511, -0.009044156409800053, -0.0009725131676532328, -0.05094514414668083, -0.003177952254191041, -0.011752062477171421, -0.002305232686921954, -0.0004094000905752182, -0.00035696811391972005, -0.006187449675053358, -0.019977666437625885, -0.4416722059249878, -0.02200181968510151, -1.0723967552185059], "finish_reason": "stop"}], "metrics": {"energy": 138.88140330314636, "energy_per_token": 3.561061623157599, "time": 3.361993, "time_per_token": 0.08620494871794872}}
{"outputs": [{"text": "# Create a LabelEncoder object and fit the data\n    label_encoder = LabelEncoder()\n    label_encoder.fit(data)\n\n    # Create a DataFrame with original categories and their numerical encodings\n    return pd.DataFrame({\"Category\": data, \"Encoded\": label_encoder.transform(data)})", "tokens": ["#", " Create", " a", " Label", "Encoder", " object", " and", " fit", " the", " data", "\n", "    ", "label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " original", " categories", " and", " their", " numerical", " enc", "od", "ings", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "{\"", "Category", "\":", " data", ",", " \"", "Enc", "oded", "\":", " label", "_", "encoder", ".", "transform", "(", "data", ")})", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4550743103027344, -1.1929335594177246, -0.2683336138725281, -0.5469162464141846, -0.0205073319375515, -0.4269784986972809, -2.2326481342315674, -0.021348679438233376, -1.2466256618499756, -0.13173039257526398, -0.16276729106903076, -0.0007260785205289721, -1.7305445671081543, -0.01674911566078663, -0.03933747112751007, -0.0007284610182978213, -0.0015982723562046885, -1.2159273865108844e-05, -0.00044586253352463245, -0.007410892751067877, -0.0035160882398486137, -0.0971280038356781, -0.00013267113536130637, -0.001302347518503666, -0.0011426832061260939, -0.00011443436960689723, -0.016187429428100586, -0.0030864481814205647, -0.0005038899253122509, -0.0010712367948144674, -0.07360977679491043, -0.00013064485392533243, -0.0074300616979599, -0.3364694118499756, -0.10011329501867294, -0.43705040216445923, -0.0004657614335883409, -0.2859293520450592, -1.8339064121246338, -1.7583301067352295, -0.0345301553606987, -0.2611367106437683, -2.045548439025879, -0.051202502101659775, -6.782778655178845e-05, -3.0040289857424796e-05, -0.008096256293356419, -0.00030655929003842175, -2.796539545059204, -0.0036915268283337355, -6.222531374078244e-05, -0.0005399914807640016, -2.1817312240600586, -0.7574171423912048, -0.01118048932403326, -0.0002867764269467443, -0.24551087617874146, -0.0011372057488188148, -0.027337975800037384, -0.0011266082292422652, -0.00020930961181875318, -0.00010477947944309562, -0.015160217881202698, -7.629365427419543e-06, -0.000328367663314566, -0.00017534149810671806, -0.007409827783703804, -0.0002928543253801763, -0.012270438484847546, -0.031061649322509766, -1.7519274950027466, -6.437280717364047e-06, -7.152555099310121e-07, -6.318072337307967e-06, -3.8742269680369645e-05, -0.1720372587442398], "finish_reason": "stop"}], "metrics": {"energy": 321.3864698696136, "energy_per_token": 4.228769340389653, "time": 6.8919826, "time_per_token": 0.09068398157894737}}
{"outputs": [{"text": "le = LabelEncoder()\n    labels = le.fit_transform(data)\n    return pd.DataFrame({'Category': data, 'Encoded': labels})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "labels", " =", " le", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " labels", "})", "\n", "\n", "def"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -2.958660125732422, -0.06645563244819641, -0.27325281500816345, -0.0001656871900195256, -0.0032191856298595667, -0.04148217663168907, -0.002937884768471122, -0.0012863941956311464, -0.006901119370013475, -0.004227629862725735, -0.013256154954433441, -0.11150451004505157, -1.328189730644226, -0.009491673670709133, -3.3378044463461265e-05, -0.0013373488327488303, -0.1558680385351181, -0.04334288462996483, -0.008987095206975937, -0.0012760362587869167, -0.05370262637734413, -0.0038252531085163355, -0.0069390032440423965, -0.0025232164189219475, -0.00023278864682652056, -0.0004944770480506122, -0.0052758511155843735, -0.019858822226524353, -0.3287601172924042, -0.030646460130810738, -1.345463752746582], "finish_reason": "stop"}], "metrics": {"energy": 134.9542646560669, "energy_per_token": 3.5514280172649184, "time": 3.3549933, "time_per_token": 0.08828929736842105}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    encoded_data = label_encoder.fit_transform(data)\n\n    # Create a DataFrame with original and encoded values\n    result = pd.DataFrame({'Category': data, 'Encoded': encoded_data})\n\n    return result", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "encoded", "_", "data", " =", " label", "_", "encoder", ".", "fit", "_", "transform", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " original", " and", " encoded", " values", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "_", "data", "})", "\n", "\n", "    ", "return", " result", "\n", "\n", "if"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -1.5653737783432007, -0.3122468888759613, -0.6639225482940674, -0.0013508014380931854, -0.011601952835917473, -4.172316494077677e-06, -8.11782301752828e-05, -4.708655978902243e-05, -0.0017169271595776081, -0.002946204738691449, -7.724463648628443e-05, -0.0007194076315499842, -0.004253388848155737, -0.000834117061458528, -0.008321257308125496, -1.5053603649139404, -0.0004172646440565586, -1.7523248195648193, -0.4800815284252167, -0.10246376693248749, -0.1989358812570572, -0.0010937429033219814, -0.9103654623031616, -1.0639827251434326, -2.7872631549835205, -0.02257237210869789, -1.1121408939361572, -0.0692346915602684, -0.0008132726070471108, -2.369229793548584, -0.7870686650276184, -0.030754897743463516, -8.702239938429557e-06, -0.0009507188224233687, -0.09265948832035065, -0.09187965840101242, -0.008342891931533813, -9.738924563862383e-05, -0.00891857035458088, -0.0020459212828427553, -0.02033785544335842, -0.0011818574275821447, -6.675497570540756e-05, -0.00018261195509694517, -0.002729383297264576, -1.8715683836489916e-05, -1.5497195136049413e-06, -0.015780683606863022, -0.0034874591510742903, -0.5087172985076904, -0.0004619484825525433, -0.042733922600746155, -0.0011326810345053673, -0.2327478975057602, -0.025194887071847916, -0.9232383966445923], "finish_reason": "stop"}], "metrics": {"energy": 274.4958632621765, "energy_per_token": 4.223013280956562, "time": 5.8542843, "time_per_token": 0.0900659123076923}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    encoded_values = le.transform(data)\n    df = pd.DataFrame({'Category': data, 'Encoded': encoded_values})\n    return df", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "encoded", "_", "values", " =", " le", ".", "transform", "(", "data", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "_", "values", "})", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -2.4272594451904297, -1.1275911331176758, -1.8193496465682983, -0.0015459026908501983, -0.09369241446256638, -4.446407547220588e-05, -0.006748977117240429, -0.0013716346584260464, -0.05625443905591965, -0.0001902399235405028, -0.005602965597063303, -0.3065050542354584, -0.7058668732643127, -0.013671806082129478, -0.005470662377774715, -4.911301948595792e-05, -0.0005609607324004173, -0.12595780193805695, -0.07154504954814911, -0.0062818690203130245, -0.0009047467028722167, -0.03908873349428177, -0.0024561495520174503, -0.015954570844769478, -0.002149891806766391, -0.00015758226800244302, -0.0006171943969093263, -0.002637838013470173, -7.152531907195225e-06, -1.4305104514278355e-06, -0.007210896350443363, -0.010244996286928654, -0.04374268278479576, -0.03271687775850296, -0.0018023689044639468, -0.21257728338241577, -0.02704852819442749, -1.611222267150879], "finish_reason": "stop"}], "metrics": {"energy": 194.29424477005003, "energy_per_token": 3.6659291466047175, "time": 4.598985, "time_per_token": 0.08677330188679246}}
{"outputs": [{"text": "data = pd.Series(data)\n    le = LabelEncoder()\n    le.fit(data)\n    categories = pd.Series(le.classes_)\n    encodings = pd.Series(range(len(categories)))\n\n    df = pd.DataFrame({'Category': categories, 'Encoded': encodings})\n    return df", "tokens": ["data", " =", " pd", ".", "Series", "(", "data", ")", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "categories", " =", " pd", ".", "Series", "(", "le", ".", "classes", "_)", "\n", "    ", "enc", "od", "ings", " =", " pd", ".", "Series", "(", "range", "(", "len", "(", "categories", ")))", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " categories", ",", " '", "Enc", "oded", "':", " enc", "od", "ings", "})", "\n", "    ", "return", " df", "\n", "\n", "def"], "logprobs": [-3.108623504638672, -0.4284377694129944, -0.9418461322784424, -0.000666277133859694, -0.5399917364120483, -0.004563275258988142, -0.013553738594055176, -0.07787526398897171, -0.09265470504760742, -0.1008797287940979, -0.8845659494400024, -0.006518292706459761, -0.0012459142599254847, -3.2782016205601394e-05, -0.0003177614707965404, -0.007482715882360935, -0.011273966170847416, -0.452791690826416, -0.030199984088540077, -0.00012933371181134135, -0.056376583874225616, -0.007389001548290253, -0.06070730835199356, -0.006495908368378878, -0.11570218205451965, -2.168607473373413, -0.0379280261695385, -0.44730931520462036, -1.3351351299206726e-05, -1.6698483228683472, -0.007683012634515762, -0.25896522402763367, -3.1709168979432434e-05, -0.18319353461265564, -0.02511804737150669, -0.17899858951568604, -0.006948710884898901, -0.6004965305328369, -0.004042905755341053, -0.0008030288736335933, -0.0011186301708221436, -0.1445833295583725, -1.07287787614041e-05, -0.0023172451183199883, -0.009338390082120895, -2.6461374759674072, -0.0001530530134914443, -0.027472171932458878, -0.00017581824795342982, -0.2028721570968628, -0.004255407024174929, -0.004023552872240543, -2.210289716720581, -0.00034814971149899065, -1.0038580894470215, -0.022747064009308815, -0.0025301130954176188, -2.3364747903542593e-05, -0.061956074088811874, -0.041650280356407166, -0.17536693811416626, -0.019791271537542343, -0.0010523025412112474, -0.01489376649260521, -0.050315629690885544, -0.017676319926977158, -0.00263795698992908, -0.00018380382971372455, -0.0005803807871416211, -0.0046082488261163235, -4.0531076592742465e-06, -2.264974000354414e-06, -0.021182497963309288, -0.008413110859692097, -0.37696510553359985, -0.06786779314279556, -0.001212576637044549, -0.14970651268959045, -0.02406366355717182, -1.4150443077087402], "finish_reason": "stop"}], "metrics": {"energy": 318.76107278251646, "energy_per_token": 3.9845134097814556, "time": 7.1011558, "time_per_token": 0.0887644475}}
{"outputs": [{"text": "le = LabelEncoder()\n    encoded = le.fit_transform(data)\n    return pd.DataFrame({'Category': data, 'Encoded': encoded})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "encoded", " =", " le", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "})", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -2.772907257080078, -0.5074312686920166, -0.051730602979660034, -8.761498611420393e-05, -0.0009367844904772937, -0.013466589152812958, -0.00015615197480656207, -0.0004702892620116472, -0.004760123789310455, -0.002120985882356763, -0.012402315624058247, -0.12746046483516693, -1.2319294214248657, -0.006097405683249235, -4.1960789531003684e-05, -0.0005889588501304388, -0.11097601056098938, -0.026608452200889587, -0.006417855154722929, -0.0007731309160590172, -0.04295206442475319, -0.0024756519123911858, -0.0035594459623098373, -0.0016162439715117216, -0.00034957972820848227, -0.0002356490003876388, -0.001663492526859045, -0.008578001521527767, -1.667519450187683, -7.390948667307384e-06, -2.0265558760002023e-06, -4.172316494077677e-06, -4.2199197196168825e-05, -0.12113730609416962], "finish_reason": "stop"}], "metrics": {"energy": 140.80491465377807, "energy_per_token": 3.434266211067758, "time": 3.5704827, "time_per_token": 0.08708494390243902}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    labels = le.classes_.tolist()\n    codes = le.transform(labels)\n    data = le.inverse_transform(codes)\n    return pd.DataFrame({\"Category\": data, \"Encoded\": codes})", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "labels", " =", " le", ".", "classes", "_", ".", "tol", "ist", "()", "\n", "    ", "codes", " =", " le", ".", "transform", "(", "labels", ")", "\n", "    ", "data", " =", " le", ".", "inverse", "_", "transform", "(", "codes", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "(", "{\"", "Category", "\":", " data", ",", " \"", "Enc", "oded", "\":", " codes", "})"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -1.8057231903076172, -0.05168282985687256, -1.3998956680297852, -9.905801562126726e-05, -0.551113486289978, -3.802703940891661e-05, -1.5200778245925903, -0.057990022003650665, -2.3841855067985307e-07, -6.723177648382261e-05, -0.008334261365234852, -0.03137616440653801, -1.0217745304107666, -0.0007740838918834925, -0.5535174012184143, -2.729855441430118e-05, -0.0010474200826138258, -0.0008293526479974389, -0.17028400301933289, -7.950943836476654e-05, -2.246483564376831, -0.19216428697109222, -3.2021589279174805, -0.33566102385520935, -3.1643078327178955, -0.0005698964232578874, -0.5951347351074219, -3.099436753473128e-06, -0.0002983363519888371, -0.00045503751607611775, -0.10971684008836746, -0.0008230397943407297, -0.014251947402954102, -0.2560350298881531, -1.4740588665008545, -0.022130554541945457, -4.935142715112306e-05, -0.0015145984943956137, -1.700093150138855, -0.9930950403213501, -0.025916961953043938, -0.0014222278259694576, -0.25140249729156494, -0.012750765308737755, -0.014728034846484661, -0.002816759515553713, -0.00046564225340262055, -0.0002406545972917229, -0.03300711512565613, -0.04064570367336273], "finish_reason": "stop"}], "metrics": {"energy": 264.147970249176, "energy_per_token": 4.0638149269104, "time": 5.833701, "time_per_token": 0.08974924615384615}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    numerical_data = label_encoder.fit_transform(data)\n    return pd.DataFrame({'Category': data, 'Encoded': numerical_data})\n\nclass TestLabelEncoder(unittest.TestCase):\n    def setUp(self):\n        self.data = ['A', 'B', 'C', 'A', 'D', 'E', 'B', 'C']\n        self.expected_output = pd.DataFrame(\n            {'Category': ['A', 'B', 'C', 'A', 'D', 'E', 'B', 'C'], 'Encoded': [0, 1, 2, 0, 3, 4, 1, 2]}\n        )\n\n    def test_task_func(self):\n        output = task_func(self.data)\n        self.assertTrue(output.equals(self.expected_output))", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "n", "umerical", "_", "data", " =", " label", "_", "encoder", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " numerical", "_", "data", "})", "\n", "\n", "class", " Test", "Label", "Encoder", "(", "un", "ittest", ".", "TestCase", "):", "\n", "    ", "def", " set", "Up", "(", "self", "):", "\n", "        ", "self", ".", "data", " =", " ['", "A", "'", ",", " '", "B", "'", ",", " '", "C", "'", ",", " '", "A", "'", ",", " '", "D", "'", ",", " '", "E", "'", ",", " '", "B", "'", ",", " '", "C", "']", "\n", "        ", "self", ".", "expected", "_", "output", " =", " pd", ".", "DataFrame", "(", "\n", "            ", "{'", "Category", "':", " ['", "A", "'", ",", " '", "B", "'", ",", " '", "C", "'", ",", " '", "A", "'", ",", " '", "D", "'", ",", " '", "E", "'", ",", " '", "B", "'", ",", " '", "C", "']", ",", " '", "Enc", "oded", "':", " [", "0", ",", " ", "1", ",", " ", "2", ",", " ", "0", ",", " ", "3", ",", " ", "4", ",", " ", "1", ",", " ", "2", "]}", "\n", "        ", ")", "\n", "\n", "    ", "def", " test", "_", "task", "_", "func", "(", "self", "):", "\n", "        ", "output", " =", " task", "_", "func", "(", "self", ".", "data", ")", "\n", "        ", "self", ".", "assertTrue", "(", "output", ".", "equals", "(", "self", ".", "expected", "_", "output", "))", "\n", "\n", "if"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -2.4780726432800293, -0.1640971302986145, -0.07876062393188477, -0.20990803837776184, -0.0032507930882275105, -0.017867326736450195, -1.9073468138230965e-06, -6.794906312279636e-06, -2.3007127310847864e-05, -0.0005560758872888982, -0.0025038341991603374, -0.001652424456551671, -0.0012290074955672026, -0.00610558083280921, -0.0012372228084132075, -0.025892335921525955, -0.21878282725811005, -1.6966606378555298, -0.005016004201024771, -6.949660019017756e-05, -0.002003092784434557, -0.08388924598693848, -0.04119061678647995, -0.006105225533246994, -0.0005389191792346537, -0.014495189301669598, -0.0010021670022979379, -0.008959094993770123, -0.0031357663683593273, -0.0001618731184862554, -0.00035255891270935535, -0.001662064460106194, -7.152531907195225e-06, -9.536738616588991e-07, -0.017385350540280342, -0.336078405380249, -0.025706807151436806, -3.9502816200256348, -1.0831096172332764, -2.309513807296753, -0.23306550085544586, -0.7502442002296448, -0.026890020817518234, -2.372236667724792e-05, -0.0005907459417358041, -0.0025713734794408083, -0.0008652042597532272, -0.0008457897347398102, -0.15382719039916992, -0.4187869429588318, -1.5330957174301147, -7.259582343976945e-05, -0.00011014331539627165, -5.2689116273541003e-05, -0.021753748878836632, -0.0005285535007715225, -0.0006043276516720653, -0.09534943103790283, -2.3841855067985307e-07, -0.428079754114151, -0.044704370200634, -0.11690420657396317, -0.06430921703577042, -0.00047219570842571557, -2.539125671319198e-05, -0.0005478549865074456, -0.009108420461416245, -0.00014399446081370115, -1.883488948806189e-05, -0.000535821367520839, -0.0078101735562086105, -0.0008144637104123831, -4.7205765440594405e-05, -0.0006773561472073197, -0.04458136111497879, -0.0017983231227844954, -6.460934673668817e-05, -0.000436925794929266, -0.019745340570807457, -0.002284300047904253, -3.7431014789035544e-05, -0.0006910558440722525, -0.008079228922724724, -0.0025785076431930065, -7.223821739898995e-05, -0.0002644904307089746, -0.003848528489470482, -0.004638862796127796, -1.9907753085135482e-05, -0.00020585325546562672, -0.001212695729918778, -0.005718182772397995, -0.006998193915933371, -0.18930348753929138, -0.005951777566224337, -2.3841855067985307e-07, -0.21884632110595703, -0.19989489018917084, -0.5724475383758545, -0.024157458916306496, -0.10327818244695663, -1.4662635294371285e-05, -0.0010711177019402385, -0.9850643873214722, -0.08154617995023727, -0.016364529728889465, -0.4466201364994049, -0.0011313711293041706, -4.005352093372494e-05, -0.24987132847309113, -0.0005972985527478158, -3.2305197237292305e-05, -1.4543427823809907e-05, -0.000514017534442246, -0.00018892886873800308, -6.985420623095706e-05, -8.22540732769994e-06, -6.139089964563027e-05, -3.6477376852417365e-05, -0.0001629458274692297, -4.887569048150908e-06, -6.4490144723095e-05, -0.00013124081306159496, -4.362964682513848e-05, -5.125986263010418e-06, -0.0001289761275984347, -0.00017474555352237076, -3.40932747349143e-05, -3.6954811548639555e-06, -0.00020823694649152458, -2.0146166207268834e-05, -4.2199197196168825e-05, -6.198863957251888e-06, -0.0001754606782924384, -2.13382354559144e-05, -9.179073458653875e-06, -3.099436753473128e-06, -0.00025567124248482287, -1.3470558769768104e-05, -0.0003108495147898793, -0.00013660451804753393, -1.18050217628479, -0.0002903516869992018, -3.635817120084539e-05, -4.088794958079234e-05, -0.006150366738438606, -0.0013131813611835241, -0.009690860286355019, -0.0001879753835964948, -0.0005075835506431758, -1.6093124941107817e-05, -0.00016234986833296716, -0.0003943857445847243, -3.349725011503324e-05, -0.0002196785935666412, -0.0005860995152033865, -2.312633478140924e-05, -0.0012224590172991157, -0.0006697318749502301, -2.312633478140924e-05, -0.0003150205302517861, -0.00011586471373448148, -1.3947389561508317e-05, -0.00020466140995267779, -0.0001212284987559542, -8.34461570775602e-06, -0.002118130913004279, -3.838465272565372e-05, -2.3496594429016113, -0.021699974313378334, -0.0072155119851231575, -0.0008029097807593644, -0.013062148354947567, -0.08282166719436646, -0.009541739709675312, -0.01012156717479229, -0.01061177346855402, -0.0023993058130145073, -0.8746485710144043, -0.009194532409310341, -0.04096534103155136, -0.16182352602481842, -1.9788545614574105e-05, -7.629103492945433e-05, -6.770858453819528e-05, -0.000690460205078125, -1.830888271331787, -0.03376656025648117, -0.0013273486401885748, -0.000125281119835563, -0.0003181189822498709, -0.0022878681775182486, -0.0014021099777892232, -1.847726889536716e-05, -5.519237674889155e-05, -0.0005679901223629713, -0.0054173097014427185, -0.034085988998413086, -0.3775070905685425, -2.264974000354414e-06, -0.8781381845474243, -0.012677083723247051, -0.02412266470491886, -0.0089738629758358, -0.0014988866169005632, -5.531158240046352e-05, -0.0007165487040765584, -2.145764938177308e-06, -1.883488948806189e-05, -9.059865078597795e-06, -1.4066597032069694e-05, -0.19593000411987305, -0.03606364503502846, -0.05716826021671295, -0.3800515830516815], "finish_reason": "stop"}], "metrics": {"energy": 921.2269829406738, "energy_per_token": 4.112620459556579, "time": 20.442738, "time_per_token": 0.0912622232142857}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    d = pd.DataFrame({'Category': le.classes_, 'Encoded': le.transform(le.classes_)})\n    return d", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "d", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " le", ".", "classes", "_", ",", " '", "Enc", "oded", "':", " le", ".", "transform", "(", "le", ".", "classes", "_", ")})", "\n", "    ", "return", " d", "\n", "\n", "#"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -4.291435241699219, -0.48534464836120605, -1.314836025238037, -3.5523738915799186e-05, -0.03393562138080597, -0.5778219699859619, -0.10571777075529099, -0.009727457538247108, -0.006423303857445717, -0.6737915873527527, -8.916457591112703e-05, -0.12157242745161057, -0.00020239688456058502, -0.09892772138118744, -0.1044185608625412, -0.003136360552161932, -3.93382906622719e-05, -0.0008914072532206774, -0.09649303555488586, -7.128461584215984e-05, -0.007500227075070143, -0.0008538890979252756, -0.042982667684555054, -2.2172682292875834e-05, -0.0011863820254802704, -0.04587250575423241, -0.004916364327073097, -0.00641288049519062, -0.049291692674160004, -0.06420279294252396, -0.009116334840655327, -0.20896033942699432, -0.029576366767287254, -1.829856038093567], "finish_reason": "stop"}], "metrics": {"energy": 205.07816565704348, "energy_per_token": 4.185268686878438, "time": 4.6075974, "time_per_token": 0.09403260000000001}}
{"outputs": [{"text": "# Perform encoding logic here\n    # Use the LabelEncoder to encode the categorical data\n    le = LabelEncoder()\n    le.fit(data)\n\n    # Create a DataFrame to represent the encoded data\n    encoded_df = pd.DataFrame({\n        'Category': data,\n        'Encoded': le.transform(data)\n    })\n\n    return encoded_df", "tokens": ["#", " Perform", " encoding", " logic", " here", "\n", "    ", "#", " Use", " the", " Label", "Encoder", " to", " encode", " the", " categorical", " data", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " to", " represent", " the", " encoded", " data", "\n", "    ", "encoded", "_", "df", " =", " pd", ".", "DataFrame", "({", "\n", "        ", "'", "Category", "':", " data", ",", "\n", "        ", "'", "Enc", "oded", "':", " le", ".", "transform", "(", "data", ")", "\n", "    ", "})", "\n", "\n", "    ", "return", " encoded", "_", "df", "\n", "\n", "def"], "logprobs": [-1.4550743103027344, -4.01764440536499, -3.126781940460205, -3.8531289100646973, -0.5284260511398315, -0.13942891359329224, -0.07894603908061981, -0.9233677387237549, -3.2677865028381348, -2.6042914390563965, -1.21476149559021, -0.0013458014000207186, -2.609340190887451, -1.0652153491973877, -0.772452712059021, -0.35883358120918274, -0.03198087960481644, -0.24037635326385498, -0.0084703229367733, -1.0124613046646118, -0.0018154582940042019, -0.00077622797107324, -2.992108420585282e-05, -0.00021038226259406656, -0.002398592187091708, -0.027830135077238083, -0.516553521156311, -0.01286739856004715, -7.545663538621739e-05, -0.04566889628767967, -0.003173793200403452, -0.00100192881654948, -0.02080264873802662, -1.3772482872009277, -0.000427274004323408, -0.14644871652126312, -0.21109502017498016, -0.1385200321674347, -0.2871150076389313, -0.0004601611872203648, -1.2464959621429443, -1.9503226280212402, -0.04772677272558212, -1.2918963432312012, -0.3724190592765808, -0.038294658064842224, -0.000773488252889365, -0.7956585884094238, -0.05665237456560135, -1.6049611568450928, -0.00038366109947673976, -0.0014350840356200933, -2.7418097943154862e-06, -0.0004226268210913986, -0.09260331094264984, -1.4020131826400757, -0.007500818464905024, -0.08199150860309601, -0.008270657621324062, -0.0003911683743353933, -0.10062503069639206, -0.001675869687460363, -0.02614019624888897, -0.0003927174839191139, -0.0018041539005935192, -0.001632549217902124, -2.2649508537142538e-05, -0.0007077334448695183, -0.0043090591207146645, -3.58813522325363e-05, -0.00412055104970932, -0.00026246439665555954, -0.0014228230575099587, -0.0005007919971831143, -0.039487484842538834, -0.0007750368095003068, -0.0009068905492313206, -0.0006727101281285286, -0.04725215956568718, -0.00041130665340460837, -0.1499035507440567, -0.0017652419628575444, -2.0146166207268834e-05, -3.0040289857424796e-05, -0.1600574254989624, -0.02176308073103428, -1.3274246454238892], "finish_reason": "stop"}], "metrics": {"energy": 353.12323841476444, "energy_per_token": 4.058887797870856, "time": 7.7557807, "time_per_token": 0.08914690459770115}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    label_encoder.fit(data)\n    numerical_data = label_encoder.transform(data)\n    result = pd.DataFrame({'Category': data, 'Encoded': numerical_data})\n    return result", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "    ", "n", "umerical", "_", "data", " =", " label", "_", "encoder", ".", "transform", "(", "data", ")", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " numerical", "_", "data", "})", "\n", "    ", "return", " result", "\n", "\n", "#"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -1.5665010213851929, -0.0019747773185372353, -0.11097430437803268, -0.01119911391288042, -0.00040749352774582803, -0.03695841506123543, -0.004893113858997822, -0.0011312521528452635, -0.009185200557112694, -0.171672061085701, -3.079582691192627, -0.01165580190718174, -0.06685711443424225, -0.3647962212562561, -0.0028431490063667297, -0.06398476660251617, -2.0265558760002023e-06, -2.145764938177308e-06, -9.417489309271332e-06, -0.013263918459415436, -0.0008204193436540663, -0.020866043865680695, -0.0002783149539027363, -0.01689997874200344, -0.2760334610939026, -3.4538331031799316, -0.22270581126213074, -0.18444722890853882, -9.775113539944869e-06, -0.004024027846753597, -0.26172250509262085, -0.08284514397382736, -0.009221935644745827, -0.0007406114018522203, -0.019731197506189346, -0.0022960747592151165, -0.021317755803465843, -0.0024132197722792625, -0.00017772526189219207, -0.0004430027911439538, -0.0032341578043997288, -2.861018856492592e-06, -8.344646857949556e-07, -0.010118616744875908, -0.005392173305153847, -0.06554020941257477, -0.02638915553689003, -0.0018876844551414251, -0.23554591834545135, -0.020482804626226425, -1.6300724744796753], "finish_reason": "stop"}], "metrics": {"energy": 258.91756332397466, "energy_per_token": 4.3152927220662445, "time": 5.225142, "time_per_token": 0.0870857}}
{"outputs": [{"text": "df = pd.DataFrame({'Category': data})\n    le = LabelEncoder()\n    df['Encoded'] = le.fit_transform(df['Category'])\n    return df", "tokens": ["df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", "})", "\n", "    ", "le", " =", " Label", "Encoder", "()", "\n", "    ", "df", "['", "Enc", "oded", "']", " =", " le", ".", "fit", "_", "transform", "(", "df", "['", "Category", "'])", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-3.48333740234375, -0.024454491212964058, -0.01170328538864851, -0.00035768310772255063, -0.01438156608492136, -0.4595658481121063, -0.017108358442783356, -0.012366993352770805, -0.002000237349420786, -0.04592909291386604, -0.024358399212360382, -0.02130982093513012, -0.05877907574176788, -0.976476788520813, -0.0027127391658723354, -0.0007002285565249622, -3.564294092939235e-05, -0.0003150205302517861, -0.0058784219436347485, -0.004966067150235176, -0.6232014894485474, -0.014232320711016655, -0.003353568958118558, -6.8662193370983e-05, -0.0003399271226953715, -0.0003483880718704313, -0.004840916488319635, -3.540453326422721e-05, -0.0004124982515349984, -0.0007379907765425742, -8.940656698541716e-06, -8.606540359323844e-05, -0.026298124343156815, -0.02690034918487072, -6.3774932641536e-05, -0.008359678089618683, -0.0027617192827165127, -0.07674913108348846, -0.047066912055015564, -0.0029740172903984785, -0.20646432042121887, -0.039149146527051926, -1.7359768152236938], "finish_reason": "stop"}], "metrics": {"energy": 171.47456282615659, "energy_per_token": 3.9877805308408507, "time": 3.7656157, "time_per_token": 0.08757245813953489}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    label_encoder.fit(data)\n    encoded_values = label_encoder.transform(data)\n    df = pd.DataFrame({'Category': data, 'Encoded': encoded_values})\n    return df", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "    ", "encoded", "_", "values", " =", " label", "_", "encoder", ".", "transform", "(", "data", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "_", "values", "})", "\n", "    ", "return", " df", "\n", "\n", "print"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -1.5665010213851929, -0.0019747773185372353, -0.11097430437803268, -0.01119911391288042, -0.00040749352774582803, -0.03695841506123543, -0.004893113858997822, -0.0011312521528452635, -0.009185200557112694, -0.171672061085701, -0.9736867547035217, -0.14835800230503082, -2.232454776763916, -0.0010241983691230416, -0.011805078014731407, -8.4638240878121e-06, -1.2755313036905136e-05, -1.4305012882687151e-05, -0.003894009394571185, -0.00046230596490204334, -0.02372751757502556, -0.00020251607929822057, -0.0061803413555026054, -0.36682024598121643, -0.4518205523490906, -0.012403728440403938, -0.005100452806800604, -4.6132929128361866e-05, -0.0008577005355618894, -0.17408917844295502, -0.121147021651268, -0.006061741150915623, -0.0007725353352725506, -0.02434164471924305, -0.0039033901412039995, -0.027016039937734604, -0.001910886145196855, -6.12716976320371e-05, -0.0004800597671419382, -0.003794020274654031, -7.390948667307384e-06, -1.7881377516459906e-06, -0.010760262608528137, -0.007189000956714153, -0.05621950328350067, -0.03026752918958664, -0.0014863882679492235, -0.21578411757946014, -0.0248798169195652, -3.3611032962799072], "finish_reason": "stop"}], "metrics": {"energy": 234.5158789958954, "energy_per_token": 3.9748454067100916, "time": 5.2263227, "time_per_token": 0.0885817406779661}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    labels = pd.DataFrame({\"Category\": le.classes_})\n    labels[\"Encoded\"] = pd.Categorical(le.classes_, categories=le.classes_).codes\n    return labels", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "labels", " =", " pd", ".", "DataFrame", "(", "{\"", "Category", "\":", " le", ".", "classes", "_", "})", "\n", "    ", "labels", "[", "\"", "Enc", "oded", "\"", "]", " =", " pd", ".", "C", "ategor", "ical", "(", "le", ".", "classes", "_", ",", " categories", "=", "le", ".", "classes", "_)", ".", "codes", "\n", "    ", "return", " labels", "\n", "\n", "print"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -1.8057231903076172, -0.05168282985687256, -1.0423879623413086, -6.318072337307967e-06, -0.054112646728754044, -0.4613470733165741, -3.0162065029144287, -0.02877759002149105, -0.0075946408323943615, -0.9654760956764221, -0.00011121608258690685, -0.03581938147544861, -0.001937180757522583, -0.9257633090019226, -0.006220503710210323, -0.004672442562878132, -0.06025127321481705, -0.4613293409347534, -0.0003216941258870065, -0.00301133724860847, -6.544376083184034e-05, -0.0003793711948674172, -0.0001311216183239594, -5.1377883210079744e-05, -1.1505135297775269, -2.610649426060263e-05, -2.2273478507995605, -1.5497195136049413e-06, -7.152555099310121e-07, -0.034917257726192474, -1.9132990837097168, -0.00021836756786797196, -0.3587532937526703, -0.01697780378162861, -0.025043874979019165, -0.10228363424539566, -0.004420865327119827, -0.5120543837547302, -2.6702524337451905e-05, -0.15667608380317688, -1.8618998527526855, -0.3807693421840668, -0.013095681555569172, -0.015955626964569092, -0.07939913868904114, -0.06830567121505737, -0.0029895871412009, -0.2475663125514984, -0.027446424588561058, -3.352614402770996], "finish_reason": "stop"}], "metrics": {"energy": 278.35328112983706, "energy_per_token": 4.282358171228262, "time": 6.063713, "time_per_token": 0.0932878923076923}}
{"outputs": [{"text": "data = LabelEncoder().fit_transform(data)\n    return pd.DataFrame({'Category': data[:len(data) - 1], 'Encoded': data[1:]})", "tokens": ["data", " =", " Label", "Encoder", "()", ".", "fit", "_", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", "[:", "len", "(", "data", ")", " -", " ", "1", "]", ",", " '", "Enc", "oded", "':", " data", "[", "1", ":]", "})", "\n", "\n", "if"], "logprobs": [-3.108623504638672, -0.4284377694129944, -1.5260441303253174, -7.724463648628443e-05, -0.0019693044014275074, -0.03110024705529213, -0.0009197533945553005, -0.03287042677402496, -0.0004468158003874123, -0.003830597037449479, -0.020069390535354614, -0.005632719490677118, -0.051211562007665634, -0.14894621074199677, -1.0249781608581543, -0.01655144803225994, -6.0437283536884934e-05, -0.002267648698762059, -0.17213350534439087, -0.022359764203429222, -0.03696209192276001, -0.0016976482002064586, -0.6101446151733398, -0.880776047706604, -2.1029393672943115, -0.001211386057548225, -0.040968313813209534, -0.0785745158791542, -1.2289870977401733, -0.2831236720085144, -0.12577544152736664, -0.041667431592941284, -0.013923653401434422, -0.08753185719251633, -0.003498982172459364, -0.00012611546844709665, -0.00029797881143167615, -0.01232907921075821, -0.010000246576964855, -0.001967043848708272, -0.030771657824516296, -0.0037724061403423548, -0.40979310870170593, -0.023708658292889595, -0.9330110549926758], "finish_reason": "stop"}], "metrics": {"energy": 167.20177082633973, "energy_per_token": 3.715594907251994, "time": 3.9755108, "time_per_token": 0.08834468444444445}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n    encodings = pd.DataFrame({'Category': data, 'Encoded': le.transform(data)})\n\n    return encodings", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "    ", "enc", "od", "ings", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " le", ".", "transform", "(", "data", ")})", "\n", "\n", "    ", "return", " enc", "od", "ings", "\n", "\n", "if"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -0.13179121911525726, -3.1294784545898438, -0.2842819094657898, -0.004373153205960989, -0.02082541584968567, -2.605009078979492, -8.702239938429557e-06, -0.05986722931265831, -0.2819673717021942, -0.1524738073348999, -0.008023412898182869, -0.003780125407502055, -0.5197101831436157, -0.005605810321867466, -0.049211010336875916, -0.0027223690412938595, -6.305972783593461e-05, -0.0007699147681705654, -0.017576061189174652, -6.878139538457617e-05, -0.0034246151335537434, -0.0004247716860845685, -0.019508516415953636, -0.011268191039562225, -0.028544055297970772, -2.584709644317627, -0.0017992750508710742, -0.05862855538725853, -0.019779818132519722, -1.2397689715726301e-05, -4.768370445162873e-07, -0.40599051117897034, -0.021286597475409508, -1.0307080745697021], "finish_reason": "stop"}], "metrics": {"energy": 196.4800987472534, "energy_per_token": 4.09333539056778, "time": 4.1799498, "time_per_token": 0.08708228750000001}}
{"outputs": [{"text": "# Create a LabelEncoder instance\n    label_encoder = LabelEncoder()\n\n    # Fit and transform the data using the LabelEncoder\n    label_encoder.fit(data)\n\n    # Create a DataFrame with the original data and the numerical encodings\n    encoded_data = label_encoder.transform(data)\n    df = pd.DataFrame({'Category': data, 'Encoded': encoded_data})\n\n    return df", "tokens": ["#", " Create", " a", " Label", "Encoder", " instance", "\n", "    ", "label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "\n", "    ", "#", " Fit", " and", " transform", " the", " data", " using", " the", " Label", "Encoder", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "#", " Create", " a", " Data", "Frame", " with", " the", " original", " data", " and", " the", " numerical", " enc", "od", "ings", "\n", "    ", "encoded", "_", "data", " =", " label", "_", "encoder", ".", "transform", "(", "data", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " encoded", "_", "data", "})", "\n", "\n", "    ", "return", " df", "\n", "\n", "#"], "logprobs": [-1.4550743103027344, -1.1929335594177246, -0.2683336138725281, -0.5469162464141846, -0.0205073319375515, -1.4316285848617554, -0.16602817177772522, -0.0009734659106470644, -0.9496644735336304, -0.007950800471007824, -0.01674911566078663, -0.000520570669323206, -0.000977157847955823, -9.298280929215252e-06, -0.0003983181086368859, -0.00037555795279331505, -0.10599840432405472, -9.881961887003854e-05, -0.0018126023933291435, -0.4194592535495758, -0.8176229596138, -0.007401544600725174, -0.026228221133351326, -0.37330490350723267, -0.4537287652492523, -0.1754104495048523, -0.21299336850643158, -0.00015364897262770683, -0.02468712255358696, -9.619726915843785e-05, -2.5272510051727295, -0.0039024401921778917, -0.3331334888935089, -0.022640900686383247, -0.00014709345123264939, -0.04160728305578232, -0.002931109629571438, -0.000583597575314343, -0.002811647718772292, -2.024040937423706, -0.00021908267808612436, -0.02425519935786724, -0.3916267156600952, -0.07988119125366211, -0.19091098010540009, -0.00041845624218694866, -0.46345067024230957, -0.5318393707275391, -0.168815478682518, -0.8558686971664429, -0.01903306134045124, -1.2223650217056274, -1.7861443758010864, -0.12686169147491455, -4.911301948595792e-05, -0.00011145447206217796, -0.013132860884070396, -0.0006756883230991662, -2.1090240478515625, -0.05647731199860573, -0.23516851663589478, -0.04051646590232849, -0.7616440057754517, -2.264974000354414e-06, -0.00021598390594590455, -5.8410845667822286e-05, -0.011403264477849007, -0.0002752163854893297, -0.006334939040243626, -0.00012981049076188356, -0.005662235431373119, -0.2266363799571991, -0.6407577991485596, -0.018763311207294464, -0.0026995427906513214, -1.3351351299206726e-05, -0.0006814065272919834, -0.11864499747753143, -0.048487622290849686, -0.0073435609228909016, -0.0004385939973872155, -0.006115652155131102, -0.002054486656561494, -0.014713233336806297, -0.0016762267332524061, -4.351044481154531e-05, -0.0002615109842736274, -0.0016715852543711662, -0.0002762889489531517, -1.728519782773219e-05, -0.008010405115783215, -0.0028255560901015997, -0.19070866703987122, -0.0003861635341309011, -0.17216461896896362, -0.0010140759404748678, -0.22053079307079315, -0.022031906992197037, -1.553671956062317], "finish_reason": "stop"}], "metrics": {"energy": 395.52214411354055, "energy_per_token": 3.995173172864046, "time": 8.768467, "time_per_token": 0.08857037373737373}}
{"outputs": [{"text": "le = LabelEncoder()\n    le.fit(data)\n\n    return pd.DataFrame({\n        'Category': data,\n        'Encoded': le.transform(data)\n    })", "tokens": ["le", " =", " Label", "Encoder", "()", "\n", "    ", "le", ".", "fit", "(", "data", ")", "\n", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "\n", "        ", "'", "Category", "':", " data", ",", "\n", "        ", "'", "Enc", "oded", "':", " le", ".", "transform", "(", "data", ")", "\n", "    ", "})"], "logprobs": [-1.184234619140625, -0.004070331808179617, -0.0010639727115631104, -2.586808113846928e-05, -0.00038771264371462166, -0.013622181490063667, -0.0222835224121809, -0.4221497178077698, -0.02408333122730255, -0.00026353701832704246, -0.044047530740499496, -0.008450228720903397, -0.0008226824575103819, -0.007828744128346443, -2.092532157897949, -0.00042846560245379806, -2.517751693725586, -0.011924531310796738, -1.8954096958623268e-05, -0.0022361292503774166, -0.16461880505084991, -2.043673515319824, -0.027982812374830246, -0.2787471115589142, -0.0075371419079601765, -0.003139450214803219, -1.197501301765442, -0.0037549480330199003, -0.00452458905056119, -0.00035279724397696555, -0.0031653561163693666, -0.002454841509461403, -0.00011574551899684593, -0.0067449514754116535, -0.02214699611067772, -0.00010680581908673048, -0.0031840126030147076, -0.0007499027997255325, -0.023554394021630287, -0.01654171571135521, -0.1695207804441452, -0.012976604513823986, -0.009497459977865219], "finish_reason": "stop"}], "metrics": {"energy": 163.50893390274047, "energy_per_token": 3.8025333465753595, "time": 3.9772394, "time_per_token": 0.09249393953488373}}
{"outputs": [{"text": "label_encoder = LabelEncoder()\n    label_encoder.fit(data)\n    labels = label_encoder.transform(data)\n    return pd.DataFrame({'Category': data, 'Encoded': labels})\n\n@pytest.mark.parametrize('data, expected_result',\n                         [([\"a\", \"a\", \"a\", \"b\"], pd.DataFrame({'Category': [\"a\", \"a\", \"a\", \"b\"],\n                                                                'Encoded': [0, 0, 0, 1]})),\n                          ([1, 1, 1, 2], pd.DataFrame({'Category': [1, 1, 1, 2], 'Encoded': [0, 0, 0, 1])),\n                          ([], pd.DataFrame({'Category': [], 'Encoded': []}))])\ndef test_task_func(data, expected_result):\n    result = task_func(data)\n    pd.testing.assert_frame_equal(result, expected_result)\n\n@", "tokens": ["label", "_", "encoder", " =", " Label", "Encoder", "()", "\n", "    ", "label", "_", "encoder", ".", "fit", "(", "data", ")", "\n", "    ", "labels", " =", " label", "_", "encoder", ".", "transform", "(", "data", ")", "\n", "    ", "return", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", " '", "Enc", "oded", "':", " labels", "})", "\n", "\n", "@", "py", "test", ".", "mark", ".", "paramet", "ri", "ze", "('", "data", ",", " expected", "_", "result", "'", ",", "\n", "                ", "         ", "[", "([", "\"", "a", "\"", ",", " \"", "a", "\"", ",", " \"", "a", "\"", ",", " \"", "b", "\"", "]", ",", " pd", ".", "DataFrame", "({", "'", "Category", "':", " [", "\"", "a", "\"", ",", " \"", "a", "\"", ",", " \"", "a", "\"", ",", " \"", "b", "\"", "]", ",", "\n", "                ", "                ", "                ", "                ", "'", "Enc", "oded", "':", " [", "0", ",", " ", "0", ",", " ", "0", ",", " ", "1", "]", "}))", ",", "\n", "                ", "          ", "([", "1", ",", " ", "1", ",", " ", "1", ",", " ", "2", "]", ",", " pd", ".", "DataFrame", "({", "'", "Category", "':", " [", "1", ",", " ", "1", ",", " ", "1", ",", " ", "2", "]", ",", " '", "Enc", "oded", "':", " [", "0", ",", " ", "0", ",", " ", "0", ",", " ", "1", "]))", ",", "\n", "                ", "          ", "([]", ",", " pd", ".", "DataFrame", "({", "'", "Category", "':", " []", ",", " '", "Enc", "oded", "':", " []", "})", ")]", ")", "\n", "def", " test", "_", "task", "_", "func", "(", "data", ",", " expected", "_", "result", "):", "\n", "    ", "result", " =", " task", "_", "func", "(", "data", ")", "\n", "    ", "pd", ".", "testing", ".", "assert", "_", "frame", "_", "equal", "(", "result", ",", " expected", "_", "result", ")", "\n", "\n", "@"], "logprobs": [-2.0784053802490234, -0.06559859961271286, -0.04889581352472305, -0.0012324602575972676, -0.0015888698399066925, -2.90866428258596e-05, -0.00041571559268049896, -0.010581577196717262, -0.06914247572422028, -1.5665010213851929, -0.0019747773185372353, -0.11097430437803268, -0.01119911391288042, -0.00040749352774582803, -0.03695841506123543, -0.004893113858997822, -0.0011312521528452635, -0.009185200557112694, -0.171672061085701, -3.526228427886963, -0.02085086703300476, -0.22707116603851318, -8.344646857949556e-07, -3.755022044060752e-05, -9.452849917579442e-05, -0.19996115565299988, -0.0007314390386454761, -0.19051674008369446, -0.0008512687054462731, -0.010716980323195457, -0.18042416870594025, -1.1377625465393066, -0.007353383116424084, -6.23445157543756e-05, -0.001178047270514071, -0.2574574649333954, -0.06996768712997437, -0.009004107676446438, -0.001129108713939786, -0.038180261850357056, -0.0028620492666959763, -0.010150596499443054, -0.001765955938026309, -0.0004096384218428284, -0.0006274400511756539, -0.005668991710990667, -0.022615261375904083, -0.38884589076042175, -0.029310718178749084, -3.8609533309936523, -2.0346975326538086, -0.057527344673871994, -0.002279661362990737, -0.1249149739742279, -3.58813522325363e-05, -0.2667681872844696, -2.622600959512056e-06, -2.861018856492592e-06, -0.5601816773414612, -0.6050474047660828, -0.2241491675376892, -0.3348134160041809, -0.8867748975753784, -1.2081413269042969, -0.02658895030617714, -6.41325386823155e-05, -2.652010440826416, -0.06558632105588913, -0.01011377852410078, -0.028462721034884453, -0.6206912994384766, -0.4158562123775482, -2.5963332653045654, -0.0029381224885582924, -0.011504617519676685, -0.011886599473655224, -1.4160431623458862, -0.0009637002367526293, -0.006485841237008572, -0.001508409040980041, -1.2543939352035522, -0.00015710550360381603, -0.032762911170721054, -0.005185250658541918, -0.8098602890968323, -0.00017641419253777713, -2.8984954357147217, -0.0002686616498976946, -2.0338497161865234, -0.0003156163729727268, -0.0025170331355184317, -0.16010639071464539, -0.025825772434473038, -0.002399781486019492, -0.0004138090298511088, -0.47345224022865295, -0.007072295527905226, -0.00033158526639454067, -0.0001003691868390888, -0.001971564954146743, -0.005219997372478247, -0.003137667663395405, -6.318072337307967e-06, -0.00034874555421993136, -0.001110890181735158, -7.86750388215296e-05, -1.4305104514278355e-06, -0.0003771070914808661, -0.0024833811912685633, -0.0002044230350293219, -5.483612312673358e-06, -0.000813034363090992, -0.00019643761334009469, -1.2139877080917358, -0.00028165188268758357, -0.007868129760026932, -0.0012435331009328365, -0.23016221821308136, -0.13181713223457336, -0.0011705459328368306, -7.807903602952138e-05, -0.0006089740199968219, -0.010399910621345043, -0.00881021935492754, -0.0016200524987652898, -0.001680511049926281, -0.0003880701260641217, -5.245071224635467e-05, -0.0002411313180346042, -5.4834770708112046e-05, -9.405170567333698e-05, -0.0007572882459498942, -0.0007215518853627145, -0.010556924156844616, -0.25968998670578003, -0.0058499788865447044, -0.003155611688271165, -0.0060764336958527565, -0.016851920634508133, -0.15138471126556396, -2.47231125831604, -0.13197384774684906, -0.051468849182128906, -0.9608013033866882, -0.020721733570098877, -0.018779456615447998, -0.43252500891685486, -0.019114581868052483, -0.022812549024820328, -0.3029839098453522, -0.4668583571910858, -6.55629628454335e-05, -0.009352798573672771, -2.3841830625315197e-06, -1.1801649634435307e-05, -0.004699850920587778, -0.0004245333548169583, -0.00019941726350225508, -3.111314072157256e-05, -0.002642831765115261, -0.0038100522942841053, -0.0007253637886606157, -0.00032276666024699807, -0.00025960413040593266, -2.3841574147809297e-05, -2.288792165927589e-05, -4.51792984677013e-05, -5.900685573578812e-05, -0.0001250427303602919, -9.762764238985255e-05, -0.00012694983161054552, -2.90866428258596e-05, -0.14127948880195618, -3.158996332786046e-05, -1.4305104514278355e-06, -3.0636318115284666e-05, -0.0005353448214009404, -0.002284300047904253, -0.0001674750237725675, -0.00016962042718660086, -9.48860906646587e-05, -2.169585604860913e-05, -0.00015448330668732524, -5.2689116273541003e-05, -6.890059739816934e-05, -0.0008463853155262768, -0.0003455280384514481, -2.3760623931884766, -0.305141419172287, -0.002196639310568571, -0.000929281348362565, -0.005202920641750097, -1.9519412517547607, -2.2649508537142538e-05, -0.01460562739521265, -1.07287787614041e-05, -1.4066597032069694e-05, -0.05070437490940094, -0.006191833410412073, -0.00032848684350028634, -2.7656173188006505e-05, -0.003393488470464945, -3.1709168979432434e-05, -0.004570632707327604, -9.870042413240299e-05, -1.811964830267243e-05, -3.1709168979432434e-05, -0.004321878310292959, -0.4236799478530884, -0.001254724687896669, -0.03600902482867241, -0.0037576796021312475, -0.007190065924078226, -0.000251142424531281, -0.004194747656583786, -0.2884766161441803, -0.07640671730041504, -0.05182274058461189, -0.0438014455139637, -0.003731551580131054, -0.0022425521165132523, -0.0017640519654378295, -6.079655122448457e-06, -2.8371408916427754e-05, -0.018046937882900238, -0.000690460205078125, -0.0009142747730948031, -1.2979941368103027, -0.014676582999527454, -0.002189621329307556, -0.00011622230522334576, -0.0002942844294011593, -0.0023808723781257868, -0.0009514334378764033, -0.006091481540352106, -0.018879245966672897, -0.029252950102090836, -0.6804826855659485, -0.0018607935635372996, -0.001122916815802455, -1.311301275563892e-06, -6.556489552167477e-06, -3.2186455882765586e-06, -3.313963316031732e-05, 0.0, -2.4318398573086597e-05, -3.5523738915799186e-05, -0.028801104053854942, -0.0539134182035923, -0.002170470543205738, -2.658331868587993e-05, -2.9802276912960224e-06, -0.6898484826087952, -0.1989804357290268, -0.07004126906394958, -2.266798496246338], "finish_reason": "length"}], "metrics": {"energy": 1067.0150855045317, "energy_per_token": 4.168027677752077, "time": 23.36669, "time_per_token": 0.0912761328125}}
{"outputs": [{"text": "encoder = LabelEncoder()\n    encoder.fit(data)\n    result = pd.DataFrame({'Category': data,\n                           'Encoded': encoder.transform(data)})\n    return result", "tokens": ["encoder", " =", " Label", "Encoder", "()", "\n", "    ", "encoder", ".", "fit", "(", "data", ")", "\n", "    ", "result", " =", " pd", ".", "DataFrame", "({", "'", "Category", "':", " data", ",", "\n", "                ", "           ", "'", "Enc", "oded", "':", " encoder", ".", "transform", "(", "data", ")})", "\n", "    ", "return", " result", "\n", "\n", "#"], "logprobs": [-2.406341552734375, -0.0033559452276676893, -0.001581966644152999, -6.651657167822123e-05, -0.0003594706067815423, -0.023022614419460297, -0.016240211203694344, -0.7189492583274841, -0.007681829389184713, -0.000503770774230361, -0.03207959234714508, -0.0020425901748239994, -0.0006594866863451898, -0.010161452926695347, -0.14854122698307037, -4.044884204864502, -0.0582217313349247, -0.9109135866165161, -3.671578815556131e-05, -0.00976228341460228, -0.24982063472270966, -0.16405099630355835, -0.009702902287244797, -0.0013855629367753863, -0.5281651020050049, -0.011399493552744389, -2.7628841400146484, -0.005730746779590845, -0.09826287627220154, -0.0009196343016810715, -0.0018548441585153341, -0.00015627116954419762, -0.0036956837866455317, -0.0086794039234519, -0.00014578233822248876, -0.00267576496116817, -0.0004273931554052979, -0.010158620774745941, -0.130898579955101, -0.017230695113539696, -0.10085655748844147, -0.03634233400225639, -0.00328132975846529, -0.2814273536205292, -0.02458081766963005, -1.903541088104248], "finish_reason": "stop"}], "metrics": {"energy": 161.73644277381896, "energy_per_token": 3.5160096255178037, "time": 3.9980297, "time_per_token": 0.08691368913043478}}
