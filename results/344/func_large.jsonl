{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    src_folder_name = os.path.basename(os.path.normpath(src_folder))\n    dst_path = os.path.join(backup_dir, src_folder_name)\n\n    shutil.move(src_folder, dst_path)\n\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f\"Error deleting source folder: {e}\")\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "src", "_", "folder", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "os", ".", "path", ".", "norm", "path", "(", "src", "_", "folder", "))", "\n", "    ", "dst", "_", "path", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "_", "name", ")", "\n", "\n", "    ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " dst", "_", "path", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.7631914615631104, -0.15405918657779694, -0.009082313627004623, -2.6464111215318553e-05, -0.0006460248259827495, -8.821448318485636e-06, -0.03771774098277092, -0.000161038784426637, -0.0028241295367479324, -5.9126061387360096e-05, -5.030505417380482e-05, -0.006449953652918339, -0.005101401824504137, -0.002815095242112875, -0.08189156651496887, -0.0010890988633036613, -5.960446742392378e-06, -0.10713493078947067, -0.8849148750305176, -0.3218221366405487, -0.01256466656923294, -0.06931055337190628, -0.0002184867626056075, -0.001441036001779139, -0.6387314200401306, -0.005686416290700436, -0.0013444918440654874, -0.0009108209051191807, -0.29694250226020813, -0.0008005275158211589, -3.5077414512634277, -0.0395989790558815, -0.7034911513328552, -0.14313451945781708, -0.46831250190734863, -0.0019550274591892958, -0.014198355376720428, -5.245195097813848e-06, -5.435795901576057e-05, -1.6689286894688848e-06, -0.02280346117913723, -3.576278118089249e-07, -3.0040289857424796e-05, -1.0092828273773193, -2.7418097943154862e-06, -4.529942543740617e-06, -2.264974000354414e-06, -0.039195459336042404, -2.0265558760002023e-06, -3.015949550899677e-05, -0.00048375347978435457, -9.894321920000948e-06, -1.1444026313256472e-05, -0.00048530244384892285, -0.015383047983050346, -0.08403655886650085, -2.418940782546997, -0.08810039609670639, -2.000112533569336, -0.0022708598989993334, -0.006052972748875618, -8.344646857949556e-07, -3.0517112463712692e-05, -2.145764938177308e-06, -0.005511090159416199, -8.892617915989831e-05, -0.0028477851301431656, -1.597391747054644e-05, -4.172316494077677e-06, -0.0008117241668514907, -0.02973363734781742, -2.622600959512056e-06, -1.1801649634435307e-05, -0.0007104733376763761, -4.887569048150908e-06, -0.02323612943291664, -0.003989714197814465, -0.6438263654708862, -0.0003698380314745009, -1.0417957305908203, -2.5152843591058627e-05, -9.536697689327411e-06, -1.9477508068084717, -1.3589766240329482e-05, -0.000972155889030546, -0.0006125480867922306, -1.3947389561508317e-05, -0.00010406429646536708, -0.007251609116792679, -2.169585604860913e-05, -7.510157047363464e-06, -0.0022172171156853437, -0.012854806147515774, -0.13557285070419312, -0.0016071987338364124, -0.17432914674282074, -0.00011693747364915907, -0.00046885941992513835, -0.0022540895733982325, -0.43199029564857483, -1.4305104514278355e-06, -3.814689989667386e-06, -8.666139910928905e-05, -7.152531907195225e-06, -0.00020239688456058502, -0.012896937318146229, -2.932505594799295e-05, -2.2291887944447808e-05, -0.008480134420096874, -0.007170774042606354, -0.4272432327270508, -0.00019560330838430673, -0.0893978551030159, -0.07567930966615677, -0.08214119076728821, -0.00029774048016406596, -0.0035296303685754538, -0.0005878866068087518, -0.3679364323616028, -0.00415854062885046, -0.18139471113681793, -0.0069017112255096436, -0.3116734027862549, -0.3862713873386383, -0.26433703303337097, -0.004970930516719818, -0.11878357827663422, -0.0009241600637324154, -0.32158976793289185, -0.006382557563483715, -0.00045170116936787963, -0.0019330164650455117, -0.004323658533394337, -0.03258269280195236, -0.0018548441585153341, -0.0024958669673651457, -1.8956153392791748, -1.6421408653259277, -0.0032660020515322685, -1.3855006694793701, -9.059865078597795e-06, -3.3378546504536644e-06, -1.5497195136049413e-06, -2.407998726994265e-05, -0.20243850350379944], "finish_reason": "stop"}], "metrics": {"energy": 633.5585664739614, "energy_per_token": 4.3693694239583545, "time": 16.558716, "time_per_token": 0.11419804137931035}}
{"outputs": [{"text": "# Check if source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    # Check if backup directory exists, if not create it\n    if not os.path.exists(backup_dir):\n        os.makedirs(backup_dir)\n\n    # Backup the source folder\n    shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"Error deleting source folder: {str(e)}\")\n\n    return True", "tokens": ["#", " Check", " if", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " backup", " directory", " exists", ",", " if", " not", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " deleting", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -2.04245924949646, -0.01823681965470314, -0.01136873196810484, -0.04816208779811859, -0.0012287693098187447, -0.007137396838515997, -0.04094371572136879, -0.0022952421568334103, -8.583032467868179e-06, -0.00019739109848160297, -2.276871418871451e-05, -0.08345967531204224, -7.64102369430475e-05, -0.0007462101057171822, -3.909988299710676e-05, -2.8371408916427754e-05, -0.006640983745455742, -0.0007485924870707095, -0.0018753099720925093, -0.05762896686792374, -0.0013731822837144136, -4.529942543740617e-06, -0.07609555870294571, -0.8311859965324402, -0.06309662759304047, -0.0045822616666555405, -0.04800177738070488, -0.00016878610767889768, -0.0015904169995337725, -0.642766535282135, -0.004775072447955608, -0.001058137626387179, -0.0007348936051130295, -0.21489034593105316, -0.0007626485894434154, -0.10674458742141724, -2.739637851715088, -0.011330779641866684, -0.1844824105501175, -0.20490553975105286, -0.043949879705905914, -0.48643720149993896, -0.8764434456825256, -0.015991058200597763, -0.3898579478263855, -0.056094858795404434, -0.017387928441166878, -0.00028939827461726964, -0.01135729905217886, -0.002286678645759821, -0.0005553610390052199, -4.768370445162873e-07, -7.497983460780233e-05, -7.867782187531702e-06, -0.010345876216888428, -4.0411134250462055e-05, -0.001207456924021244, -2.288792165927589e-05, -1.3351351299206726e-05, -0.0007278653793036938, -8.523101132595912e-05, -0.001210314454510808, -0.029271358624100685, -5.8412379075889476e-06, -0.07581502199172974, -2.264974000354414e-06, -8.141662692651153e-05, -7.891343557275832e-05, -5.590759246842936e-05, -9.298280929215252e-06, -1.168244216387393e-05, -0.005015529692173004, -0.00026890001026913524, -0.016380947083234787, -0.0011096993694081903, -0.02460314892232418, -1.131327509880066, -1.081135869026184, -0.05699261277914047, -0.0029396675527095795, -0.6390026807785034, -0.0006550788530148566, -0.3230893611907959, -5.4596363042946905e-05, -1.5020257706055418e-05, -0.09929931908845901, -0.0008187517523765564, -2.1576648578047752e-05, -0.002453295513987541, -2.6464111215318553e-05, -1.1920922133867862e-06, -6.05564855504781e-05, -0.22676600515842438, -1.9073468138230965e-06, -2.2411095415009186e-05, -7.748573807475623e-06, -0.00018189683032687753, -7.319182623177767e-05, -0.007624808698892593, -1.9907753085135482e-05, -8.4638240878121e-06, -0.005707989446818829, -0.33249354362487793, -2.407998726994265e-05, -3.266281055402942e-05, -1.5497195136049413e-06, -0.0016568278660997748, -6.437280717364047e-06, -5.066266385256313e-05, -0.0009579836623743176, -3.838465272565372e-05, -1.9073468138230965e-06, -0.045441776514053345, -0.0007161913090385497, -0.019450996071100235, -0.0004766043566633016, -0.018959373235702515, -0.048633772879838943, -0.021231980994343758, -0.01943579688668251, -0.0007724162423983216, -0.023378679528832436, -0.0003399271226953715, -0.03357545658946037, -2.6940935640595853e-05, -0.00010191874753218144, -0.0010643299901857972, -0.04034874588251114, -3.576278118089249e-07, -1.1920922133867862e-06, -4.792098479811102e-05, -2.3841830625315197e-06, -3.814624506048858e-05, -0.0007426364463753998, -1.9311717551317997e-05, -2.622600959512056e-06, -0.002970332745462656, -0.00121412449516356, -0.8024667501449585, -0.0005471401382237673, -0.06130049377679825, -0.04374268278479576, -0.020516207441687584, -0.00014876213390380144, -0.002724508987739682, -0.000553335587028414, -0.38120612502098083, -0.0462426096200943, -0.0018334260676056147, -0.2412608563899994, -0.003326480044052005, -0.3133123815059662, -0.2627643346786499, -0.13933059573173523, -0.001150541938841343, -0.037677329033613205, -0.0005575056420639157, -0.6104056239128113, -9.595887240720913e-05, -2.276871418871451e-05, -0.000865561596583575, -0.0027554186526685953, -0.002118130913004279, -0.04681815579533577, -0.057247743010520935, -0.004879471380263567, -0.3800537884235382, -0.004135153256356716, -1.4061535596847534, -3.814689989667386e-06, -3.4570634852570947e-06, -2.145764938177308e-06, -2.4199192921514623e-05, -0.20375125110149384], "finish_reason": "stop"}], "metrics": {"energy": 650.4441245861055, "energy_per_token": 3.6748255626333646, "time": 15.758637, "time_per_token": 0.08903184745762711}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.copytree(src_folder, backup_dir)\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        raise Exception(f\"Error deleting source folder: {str(e)}\") from e", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " deleting", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", " from", " e"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -0.2953173816204071, -0.0009109399979934096, -0.906694233417511, -6.806619057897478e-05, -0.0005644158809445798, -0.005032728426158428, -0.36818063259124756, -1.1086402082582936e-05, -5.006777428206988e-06, -0.45627662539482117, -0.0005708495154976845, -3.611976353568025e-05, -0.0034860337618738413, -4.756337511935271e-05, -5.722029527532868e-06, -6.151010165922344e-05, -1.1092033386230469, -2.7179348762729205e-05, -4.136476854910143e-05, -0.08396980911493301, -0.0109970448538661, -0.08299063891172409, -0.04511536285281181, -1.1920922133867862e-06, -3.814689989667386e-06, -0.0006366133457049727, -4.887569048150908e-06, -0.00010084597306558862, -0.0019234981155022979, -5.400034933700226e-05, -2.264974000354414e-06, -0.005025611724704504, -0.0030600647442042828, -0.4036984443664551, -0.1543765366077423, -0.0017533419886603951, -0.004022602923214436, -0.029780501499772072, -0.0001720042055239901, -0.02990615740418434, -0.06408350169658661, -0.04201337695121765, -0.00014590153296012431, -0.00269431178458035, -0.00045980370487086475, -1.4322397708892822, -0.11624123901128769, -0.003238316625356674, -0.28134042024612427, -0.0037347583565860987, -0.3365039825439453, -0.8166634440422058, -0.25996920466423035, -0.0023820616770535707, -0.05607040226459503, -0.0008777103503234684, -0.5633120536804199, -0.00013565097469836473, -4.470248313737102e-05, -0.0005141366855241358, -0.005929854232817888, -0.05291328579187393, -1.6964561939239502, -0.00316547485999763], "finish_reason": "stop"}], "metrics": {"energy": 348.50600512313855, "energy_per_token": 3.7881087513384624, "time": 7.989081, "time_per_token": 0.08683783695652174}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.copytree(src_folder, backup_dir)\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return False\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "print"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -0.2953173816204071, -0.0009109399979934096, -0.906694233417511, -6.806619057897478e-05, -0.0005644158809445798, -0.005032728426158428, -0.36818063259124756, -1.1086402082582936e-05, -5.006777428206988e-06, -0.45627662539482117, -0.0005708495154976845, -3.611976353568025e-05, -0.0034860337618738413, -4.756337511935271e-05, -5.722029527532868e-06, -6.151010165922344e-05, -1.1092033386230469, -2.7179348762729205e-05, -4.136476854910143e-05, -0.08396980911493301, -0.0109970448538661, -0.08299063891172409, -0.04511536285281181, -1.1920922133867862e-06, -3.814689989667386e-06, -0.0006366133457049727, -4.887569048150908e-06, -0.00010084597306558862, -0.0019234981155022979, -5.400034933700226e-05, -2.264974000354414e-06, -0.005025611724704504, -0.0030600647442042828, -1.1491971015930176, -0.0005800233921036124, -0.03836257383227348, -0.06295112520456314, -0.0419134683907032, -0.0001408954558428377, -0.0026880106888711452, -0.0005684667266905308, -0.2528149485588074, -0.0033475097734481096, -0.22890646755695343, -0.0052179815247654915, -1.4625937938690186, -0.0036674162838608027, -0.010122864507138729, -0.7166356444358826, -0.0006212450098246336, -0.38689661026000977, -0.007266875822097063, -0.0004801789182238281, -0.002795005217194557, -0.005625962745398283, -0.02644476667046547, -0.0013494918821379542, -0.0014174662064760923, -0.32569342851638794, -0.003745803376659751, -0.08280355483293533, -0.008894821628928185, -0.40571510791778564, -0.028189361095428467, -3.661284923553467], "finish_reason": "stop"}], "metrics": {"energy": 330.71815794754036, "energy_per_token": 3.5561092252423694, "time": 7.779445, "time_per_token": 0.08364994623655914}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n    # Get the name of the source folder without the path\n    src_folder_name = os.path.basename(os.path.normpath(src_folder))\n    # Create the full path for the destination folder\n    dst_folder = os.path.join(backup_dir, src_folder_name)\n    # Copy the source folder to the destination folder\n    try:\n        shutil.copytree(src_folder, dst_folder)\n    except Exception as e:\n        raise Exception(f\"Error copying '{src_folder}' to '{dst_folder}': {str(e)}\")\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"Error deleting '{src_folder}': {str(e)}\")\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " Get", " the", " name", " of", " the", " source", " folder", " without", " the", " path", "\n", "    ", "src", "_", "folder", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "os", ".", "path", ".", "norm", "path", "(", "src", "_", "folder", "))", "\n", "    ", "#", " Create", " the", " full", " path", " for", " the", " destination", " folder", "\n", "    ", "dst", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "_", "name", ")", "\n", "    ", "#", " Copy", " the", " source", " folder", " to", " the", " destination", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " dst", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " copying", " '", "{", "src", "_", "folder", "}'", " to", " '", "{", "dst", "_", "folder", "}", "':", " {", "str", "(", "e", ")}", "\"", ")", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " deleting", " '", "{", "src", "_", "folder", "}", "':", " {", "str", "(", "e", ")}", "\"", ")", "\n", "    ", "return", " True", "\n", "\n", "#"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -0.38799870014190674, -0.00682451855391264, -0.6044217348098755, -0.00013124081306159496, -0.001716808183118701, -5.8530047681415454e-05, -5.960446742392378e-06, -0.0015231685247272253, -0.03031540848314762, -0.0001284993631998077, -0.0010825494537129998, -0.21849685907363892, -0.0027903690934181213, -0.00030989613151177764, -0.0008049347088672221, -1.8596712350845337, -0.21773037314414978, -2.852860450744629, -0.12036648392677307, -1.4131654500961304, -0.009400981478393078, -0.0018343779956921935, -0.049038950353860855, -0.004056559409946203, -2.546269178390503, -0.31975480914115906, -0.28708451986312866, -0.03353707119822502, -0.0010895751183852553, -0.25790485739707947, -0.0007965967524796724, -0.06588179618120193, -0.0020800638012588024, -0.025784065946936607, -0.0013088955311104655, -0.006503488402813673, -3.6954811548639555e-06, -1.6331539882230572e-05, -4.529942543740617e-06, -0.008074971847236156, -1.1920928244535389e-07, -1.2516897186287679e-05, -0.4493473768234253, -2.3841830625315197e-06, -1.1920922133867862e-06, -5.960462772236497e-07, -0.02895015850663185, -4.768360213347478e-06, -2.3364747903542593e-05, -0.0003190723655279726, -3.135155202471651e-05, -9.536738616588991e-07, -0.0002985746832564473, -0.0016529004788026214, -0.014996761456131935, -0.010584171861410141, -0.75547194480896, -0.43316689133644104, -3.3203330039978027, -0.19221504032611847, -1.3307900428771973, -0.008481079712510109, -2.3890485763549805, -0.30535367131233215, -0.5834736227989197, -0.0003231241717003286, -1.1695530414581299, -0.010190127417445183, -0.026561090722680092, -0.043286148458719254, -0.0038433035369962454, -2.622600959512056e-06, -1.764281842042692e-05, -4.0531076592742465e-06, -0.002590516582131386, -5.9960475482512265e-05, -0.00249610492028296, -1.3589766240329482e-05, -3.2186455882765586e-06, -0.0006437613046728075, -0.007843528874218464, -3.099436753473128e-06, -1.4424220353248529e-05, -0.000747877755202353, -1.311301275563892e-06, -0.008874498307704926, -0.0011193446116521955, -0.019345885142683983, -0.04397007077932358, -0.6648631691932678, -0.018153706565499306, -0.08880911767482758, -0.0035157317761331797, -0.07580374926328659, -0.0021371636539697647, -0.15118129551410675, -0.11390849947929382, -0.13248644769191742, -0.0005651307292282581, -1.5726234912872314, -7.879423355916515e-05, -0.00021789084712509066, -0.0023649362847208977, -0.038958609104156494, -4.0531076592742465e-06, -2.7418097943154862e-06, -0.002757082926109433, -0.0001456631434848532, -1.2278481335670222e-05, -0.0011095802765339613, -8.570780482841656e-05, -9.059865078597795e-06, -0.000192504478036426, -0.0037638552021235228, -2.0503786799963564e-05, -2.0265558760002023e-06, -0.046260252594947815, -0.0007842087652534246, -0.1374613344669342, -0.005450981669127941, -0.4105817973613739, -0.024195043370127678, -0.05588757246732712, -0.00022790218645241112, -0.0025158440694212914, -0.0007864719373174012, -0.5822241902351379, -0.11869867146015167, -0.001336158369667828, -0.042425476014614105, -0.006600838620215654, -0.34658798575401306, -1.3439806699752808, -1.6329784393310547, -0.0001567479339428246, -0.0005601267330348492, -6.210611172718927e-05, -8.427741704508662e-05, -0.03266426920890808, -0.006754186935722828, -0.006253437604755163, -5.721882189391181e-05, -0.06408808380365372, -1.3708974620385561e-05, -5.304672595229931e-05, -0.019548848271369934, -0.002823535120114684, -0.002678499324247241, -0.8269605040550232, -7.497983460780233e-05, -3.325883881188929e-05, -0.0003231241717003286, -0.006388479843735695, -0.0005046047735959291, -0.08560437709093094, -0.039316266775131226, -0.02285519614815712, -0.14131169021129608, -0.0006543640629388392, -0.037147726863622665, -0.0005628670332953334, -0.04534779489040375, -0.0003000047872774303, -0.013145802542567253, -1.7404405298293568e-05, -0.00011062010162277147, -0.0008537700050510466, -0.021363498643040657, -4.768370445162873e-07, -1.311301275563892e-06, -3.242440288886428e-05, -2.264974000354414e-06, -3.4450891689630225e-05, -0.0015262633096426725, -1.811964830267243e-05, -8.4638240878121e-06, -0.003661715192720294, -0.0006380429258570075, -0.22527389228343964, -0.0007471630233339965, -0.027737729251384735, -0.0020477056968957186, -0.00035315475543029606, -9.97731985989958e-05, -0.00034671969478949904, -0.0006525770877487957, -0.04011663794517517, -0.0009581027552485466, -0.000161038784426637, -0.002659357851371169, -0.00013660451804753393, -0.002473630243912339, -0.027077186852693558, -0.15756231546401978, -0.00011657988943625242, -0.0007809926173649728, -3.6238969187252223e-05, -3.015949550899677e-05, -0.0022197149228304625, -7.807903602952138e-05, -0.000288087350782007, -0.0003895000845659524, -2.0265373677830212e-05, -3.6954811548639555e-06, -3.862306402879767e-05, -0.0003587556129787117, -0.0008006466086953878, -0.0009918061550706625, -0.07493291050195694, -0.8539784550666809, -0.007833238691091537, -0.3363897204399109, -0.03367112949490547, -1.7940865755081177], "finish_reason": "stop"}], "metrics": {"energy": 838.9067139568333, "energy_per_token": 3.4522910039375856, "time": 20.579168, "time_per_token": 0.0846879341563786}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n\n    if os.path.isfile(src_folder):\n        shutil.copy2(src_folder, backup_dir)\n    else:\n        shutil.copytree(src_folder, backup_dir)\n\n    try:\n        os.remove(src_folder)\n    except OSError as e:\n        print(f\"Error deleting folder '{src_folder}': {str(e)}\")\n        return False\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " os", ".", "path", ".", "is", "file", "(", "src", "_", "folder", "):", "\n", "        ", "sh", "util", ".", "copy", "2", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "    ", "else", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " folder", " '", "{", "src", "_", "folder", "}", "':", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -0.43118491768836975, -0.10489750653505325, -0.44068312644958496, -0.010457481257617474, -0.7157216668128967, -0.00023731753753963858, -0.00285574933513999, -3.576214658096433e-05, -6.556489552167477e-06, -0.0020632902160286903, -0.024426572024822235, -0.00021288513380568475, -0.0010438475292176008, -0.2165975123643875, -0.0038694285321980715, -0.0004010588163509965, -0.0007969540893100202, -0.2874848544597626, -0.0008687774534337223, -3.7045412063598633, -1.4445314407348633, -1.847726889536716e-05, -0.029622890055179596, -4.51792984677013e-05, -2.1742866039276123, -1.2342042922973633, -0.0008212531101889908, -0.19083651900291443, -2.4318398573086597e-05, -3.421248038648628e-05, -0.049123961478471756, -0.008746291510760784, -0.0030463975854218006, -0.774757444858551, -3.790783375734463e-05, -2.455681169521995e-05, -0.130764901638031, -0.8780908584594727, -3.266281055402942e-05, -0.003005632432177663, -8.451581379631534e-05, -2.95634672511369e-05, -6.174850568640977e-05, -0.13670164346694946, -2.5033637939486653e-05, -0.00014137222024146467, -0.00498563889414072, -0.015232778154313564, -0.1809665560722351, -0.13320384919643402, -4.017272294731811e-05, -0.0018033209489658475, -0.000563224486541003, -0.09608346223831177, -1.4305104514278355e-06, -8.22540732769994e-06, -0.025760019198060036, -0.0014517493546009064, -1.5616295058862306e-05, -0.0013405631761997938, -1.2278481335670222e-05, -1.5497195136049413e-06, -0.00013422065239865333, -0.38164255023002625, -3.93382906622719e-05, -0.00024625606602057815, -0.37255263328552246, -0.004314518999308348, -0.055661071091890335, -0.0025285673327744007, -0.23294000327587128, -6.210611172718927e-05, -0.00031394799589179456, -0.0010486110113561153, -3.3219897747039795, -0.00020954797219019383, -0.9972023963928223, -0.0008370947907678783, -0.010527316480875015, -0.00011002412065863609, -0.00021324267436284572, -0.0004957877099514008, -0.4717417061328888, -0.12932796776294708, -0.0005810956354252994, -1.231999397277832, -4.0531076592742465e-06, 0.0, -0.36703771352767944, -0.17058297991752625, -0.00028796817059628665, -0.007122601382434368, -0.0009182051289826632, -0.511623740196228, -0.0036825004499405622, -0.09133589267730713, -0.016173353418707848, -0.0641387328505516, -0.6542742252349854, -2.5193960666656494, -0.6140769124031067, -0.0002791491860989481, -0.010976764373481274, -0.00024959311122074723, -0.00018785618885885924, -0.041225507855415344, -0.0011447074357420206, -0.004630794283002615, -1.6847310066223145, -0.0001714082609396428, -8.976056415122002e-05, -0.0023456697817891836, -0.005715930834412575, -0.000707971747033298, -0.001347110839560628, -0.01461267564445734, -0.1928817182779312, -0.0027743205428123474, -0.002993509406223893, -0.35284656286239624, -0.0025185791309922934, -0.09982787817716599, -0.010383511893451214, -0.578964352607727, -0.02963562123477459, -1.7189704179763794], "finish_reason": "stop"}], "metrics": {"energy": 509.40778940391533, "energy_per_token": 3.537554093082745, "time": 11.963694, "time_per_token": 0.08308120833333334}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n    shutil.move(src_folder, backup_dir)\n    if os.path.exists(src_folder):\n        print(\"Error: Source folder still exists.\")\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "print", "(", "\"", "Error", ":", " Source", " folder", " still", " exists", ".", "\"", ")", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -1.3825328350067139, -1.091826319694519, -9.405170567333698e-05, -3.838465272565372e-05, -1.7263355255126953, -4.8993817472364753e-05, -0.003063154872506857, -5.1020273531321436e-05, -1.7404405298293568e-05, -0.00011669908417388797, -0.09030205756425858, -1.9788545614574105e-05, -0.00011801023356383666, -0.0023266407661139965, -0.03038051724433899, -0.02365347556769848, -2.8528311252593994, -0.970399796962738, -8.642300235806033e-05, -0.004100605845451355, -1.966933996300213e-05, -0.0514092892408371, -0.000311802898067981, -0.26059967279434204, -9.7508447652217e-05, -5.030505417380482e-05, -0.013418836519122124, -0.009240715764462948, -0.002111945068463683, -2.514913558959961, -0.03644544258713722, -0.8712167143821716, -1.040019154548645, -0.4072667956352234, -1.2703564167022705, -0.0036171742249280214, -1.178847074508667, -0.0005604841862805188, -0.1892808973789215, -0.12513810396194458, -0.0028518266044557095, -0.0030929844360798597, -0.0381627082824707, -0.06331171840429306, -0.004450772888958454, -0.0021830792538821697, -0.014315759763121605, -1.453791856765747, -0.01185514684766531, -0.6650872230529785, -0.039468348026275635, -0.7292132377624512], "finish_reason": "stop"}], "metrics": {"energy": 271.6421035690308, "energy_per_token": 3.3955262946128846, "time": 6.7338924, "time_per_token": 0.084173655}}
{"outputs": [{"text": "try:\n        # Check if the source folder exists\n        if not os.path.exists(src_folder):\n            raise ValueError(f\"The specified folder '{src_folder}' does not exist.\")\n\n        # Backup the folder\n        shutil.copytree(src_folder, os.path.join(backup_dir, src_folder))\n\n        # Delete the source folder\n        shutil.rmtree(src_folder)\n\n        return True\n    except Exception as e:\n        print(f\"An error occurred while deleting the folder: {e}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " the", " source", " folder", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "The", " specified", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "        ", "#", " Backup", " the", " folder", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "))", "\n", "\n", "        ", "#", " Delete", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " deleting", " the", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-1.8821158409118652, -0.0003143055073451251, -0.0025913489516824484, -0.016529638320207596, -1.3900630474090576, -0.31152281165122986, -0.031821999698877335, -0.21501900255680084, -0.026136595755815506, -0.009124013595283031, -0.01303132064640522, -0.06017101928591728, -0.000428942235885188, -0.009146456606686115, -0.16773749887943268, -0.001680511049926281, -7.748573807475623e-06, -0.00015507926582358778, -1.2993727978027891e-05, -0.08451824635267258, -5.185469490243122e-05, -0.0008634176338091493, -5.4596363042946905e-05, -2.825220326485578e-05, -0.008835270069539547, -0.0008276851149275899, -0.0007501410436816514, -0.042860131710767746, -0.0020201054867357016, -2.9802276912960224e-06, -0.03682008758187294, -0.326983243227005, -0.0439453162252903, -1.159407377243042, -2.3211090564727783, -1.786260724067688, -1.0645694732666016, -0.00021562635083682835, -0.0031901916954666376, -0.0001209901092806831, -1.8954096958623268e-05, -0.0022027057129889727, -0.0075241271406412125, -0.0003328961320221424, -0.0019092203583568335, -0.10252994298934937, -0.01019992120563984, -0.0003300360403954983, -0.000580499938223511, -0.2163134217262268, -0.0038991153705865145, -0.007236696779727936, -0.992746114730835, -0.041819725185632706, -2.4733219146728516, -0.43295466899871826, -0.0006610354175791144, -0.15320606529712677, -4.351044481154531e-05, -1.3589766240329482e-05, -0.13492974638938904, -0.0008257793379016221, -1.823885577323381e-05, -0.0013237770181149244, -3.8265450712060556e-05, -8.34461570775602e-06, -4.8874615458771586e-05, -0.3395128846168518, -1.0251946150674485e-05, -3.123234637314454e-05, -3.6954811548639555e-06, -0.00028689560713246465, -0.00011038171214750037, -0.0010064542293548584, -3.707340147229843e-05, -2.098061486321967e-05, -0.01039825938642025, -1.6263437271118164, -7.819823804311454e-05, -0.0001677133986959234, -0.14165276288986206, -0.0017677409341558814, -0.030601022765040398, -0.0036083844024688005, -0.001566136721521616, -0.057242002338171005, -0.0027160681784152985, -0.2818759083747864, -0.002087915316224098, -0.019939573481678963, -0.00041368984966538846, -0.07938195765018463, -4.768370445162873e-07, -5.483612312673358e-06, -0.00023052419419400394, -4.0531076592742465e-06, -7.533743337262422e-05, -0.0023167694453150034, -4.351044481154531e-05, -6.198863957251888e-06, -0.008630831725895405, -0.0008330450509674847, -0.14914946258068085, -0.05622299760580063, -0.28020745515823364, -0.0014497257070615888, -0.051706261932849884, -0.6178840398788452, -0.0011501847766339779, -0.11654185503721237, -0.01343083381652832, -0.05146975442767143, -0.00018880968855228275, -0.0037019785959273577, -0.000785280775744468, -0.5022162795066833, -0.0016918168403208256, -0.055878665298223495, -0.005836942233145237, -0.6135005950927734, -0.0033492918591946363, -0.007652136497199535, -0.8184673190116882, -0.4605756402015686, -0.08899376541376114, -0.9774295687675476, -0.36153000593185425, -0.003900302806869149, -0.39223819971084595, -0.007497742306441069, -0.0011207734933122993, -0.0034532458521425724, -0.012345563620328903, -0.023033099249005318, -0.001312586129643023, -0.2964531481266022, -0.03357857093214989, -2.034985303878784], "finish_reason": "stop"}], "metrics": {"energy": 507.81546743965134, "energy_per_token": 3.6798222278235606, "time": 11.573905, "time_per_token": 0.0838688768115942}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.isdir(src_folder):\n        raise ValueError(f'The source folder {src_folder} does not exist.')\n\n    # Backup the source folder\n    shutil.make_archive(os.path.join(backup_dir, os.path.basename(src_folder)), 'zip', src_folder)\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f'An error occurred while deleting the source folder: {e}')\n        return False\n\n    # Return True if the operation is successful\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "The", " source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "    ", "#", " Return", " True", " if", " the", " operation", " is", " successful", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -2.507418155670166, -0.00017248096992261708, -0.0001012035645544529, -0.0008233971311710775, -5.686121585313231e-05, -2.6225699912174605e-05, -0.0013136576162651181, -0.0006040894077159464, -0.001718236249871552, -0.05543136224150658, -0.0008475763606838882, -4.291525328881107e-06, -0.05090209096670151, -0.3760361671447754, -2.9772510528564453, -1.196857213973999, -0.33129391074180603, -0.005288183689117432, -1.2719886302947998, -0.0011560192797333002, -3.528532761265524e-05, -3.933898824470816e-06, -0.0038137338124215603, -0.0026637569535523653, -0.0001842805795604363, -0.0009541726321913302, -0.14609341323375702, -0.012768302112817764, -0.0008816407644189894, -0.21523606777191162, -0.0009324969723820686, -0.0894438624382019, -1.3644288778305054, -0.039966028183698654, -0.0910734310746193, -0.0022832294926047325, -0.5794320106506348, -0.0006741396500729024, -0.45545780658721924, -5.4596363042946905e-05, -1.549708758830093e-05, -2.9366607666015625, -5.960462772236497e-07, -3.862306402879767e-05, -0.005419325083494186, -0.27611640095710754, -8.22540732769994e-06, -9.059865078597795e-06, -4.529942543740617e-06, -0.014189893379807472, -0.0002422039397060871, -0.0038725160993635654, -3.9934315282152966e-05, -1.6569954823353328e-05, -0.0005567907355725765, -0.3686363697052002, -2.6225699912174605e-05, -3.1470757676288486e-05, -5.722029527532868e-06, -0.0037212190218269825, -1.2516897186287679e-05, -5.9126061387360096e-05, -0.0020567469764500856, -1.1324817933200393e-05, -4.768360213347478e-06, -0.007946306839585304, -0.0003359945258125663, -0.029974069446325302, -0.008144264109432697, -6.246371776796877e-05, -2.4199192921514623e-05, -0.04749523475766182, -0.00017998983094003052, -1.3589766240329482e-05, -0.00490509532392025, -0.0007696765242144465, -0.01550982054322958, -0.0003916450368706137, -0.005668399389833212, -0.04938530549407005, -0.0006150499684736133, -0.014438320882618427, -0.0007622911944054067, -0.019893648102879524, -0.00035720644518733025, -0.03183077275753021, -1.9788545614574105e-05, -0.00010835537250386551, -0.0012166248634457588, -0.036088135093450546, -1.0728830375228426e-06, -1.4305104514278355e-06, -5.686121585313231e-05, -1.1920922133867862e-06, -7.497983460780233e-05, -0.0009241600637324154, -1.4781842764932662e-05, -3.814689989667386e-06, -0.002794529777020216, -0.0011867393041029572, -0.6725430488586426, -0.000514017534442246, -0.01970992423593998, -0.024939583614468575, -0.029631223529577255, -0.00015043080202303827, -0.002836611121892929, -0.00045408427831716835, -0.9063568115234375, -0.004875200800597668, -0.029915643855929375, -0.1464904248714447, -1.2751929759979248, -0.001959072658792138, -0.007932824082672596, -0.037247996777296066, -0.008870244957506657, -0.103155717253685, -0.031051479279994965, -0.0014554394874721766, -0.39417609572410583, -0.0006472161621786654, -0.2609579563140869, -0.006053446792066097, -0.005396442022174597, -0.0011316093150526285, -0.004510467406362295, -0.022470969706773758, -0.0011736417654901743, -0.0014243705663830042, -0.13419169187545776, -0.0014449642039835453, -1.5593632459640503, -0.25088930130004883, -0.033043213188648224, -0.15813514590263367, -0.2544628083705902, -0.054845064878463745, -0.14896900951862335, -0.0007228621980175376, -0.007183319889008999, -0.00023529145983047783, -0.009780817665159702, -0.004345023538917303, -1.339850664138794, -8.821448318485636e-06, -5.006777428206988e-06, -1.7881377516459906e-06, -3.755022044060752e-05, -0.18457458913326263], "finish_reason": "stop"}], "metrics": {"energy": 577.4833865871436, "energy_per_token": 3.4998993126493554, "time": 13.875105, "time_per_token": 0.08409154545454545}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Error: The source folder {src_folder} does not exist.\")\n    else:\n        # Backup the source folder to the backup directory\n        try:\n            shutil.copytree(src_folder, backup_dir, dirs_exist_ok=True)\n        except Exception as e:\n            raise Exception(f\"Error: An error occurred while backing up the source folder: {e}\")\n\n        # Delete the source folder\n        try:\n            shutil.rmtree(src_folder)\n        except Exception as e:\n            raise Exception(f\"Error: An error occurred while deleting the source folder: {e}\")\n\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Error", ":", " The", " source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "#", " Backup", " the", " source", " folder", " to", " the", " backup", " directory", "\n", "        ", "try", ":", "\n", "            ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ",", " d", "irs", "_", "exist", "_", "ok", "=", "True", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "raise", " Exception", "(", "f", "\"", "Error", ":", " An", " error", " occurred", " while", " backing", " up", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "\n", "        ", "#", " Delete", " the", " source", " folder", "\n", "        ", "try", ":", "\n", "            ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "raise", " Exception", "(", "f", "\"", "Error", ":", " An", " error", " occurred", " while", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -3.2699527740478516, -0.06945992261171341, -1.3767263889312744, -0.345022976398468, -0.005672310944646597, -1.203464150428772, -0.0016113643068820238, -2.8490614567999728e-05, -7.510157047363464e-06, -0.0025957482866942883, -0.011064484715461731, -0.0005590544897131622, -0.0027440059930086136, -0.1317857801914215, -0.006579048000276089, -0.0005995621904730797, -0.0006168370018713176, -1.7061090469360352, -1.9350987672805786, -0.00034195298212580383, -0.002506569027900696, -0.015384338796138763, -0.19631123542785645, -1.2343165874481201, -0.08078622072935104, -0.1076539009809494, -0.0033276681788265705, -1.035475730895996, -0.013978670351207256, -0.5767106413841248, -0.011994145810604095, -0.08671675622463226, -0.0011247029760852456, -1.8757350444793701, -0.00011657988943625242, -0.0002627027570270002, -0.002036522841081023, -0.09725715965032578, -1.156323378381785e-05, -6.318072337307967e-06, -0.10013971477746964, -0.002552467631176114, -3.564294092939235e-05, -0.002542241709306836, -4.3748852476710454e-05, -1.1444026313256472e-05, -0.00014625910262111574, -1.3346974849700928, -4.827859811484814e-05, -0.00030083899036981165, -2.649260997772217, -0.08408740907907486, -0.00027700403006747365, -1.1920928244535389e-07, -0.004782546777278185, -9.65590606938349e-06, -4.339123915997334e-05, -0.00312530854716897, -0.00779030192643404, -0.005106383003294468, -0.004865117371082306, -0.4664769470691681, -0.006068021059036255, -0.22616851329803467, -0.015352878719568253, -0.05304500088095665, -0.0006621075444854796, -0.0021176550071686506, -0.0004744596080854535, -0.6718345880508423, -0.08745081722736359, -0.0007686044555157423, -0.017201751470565796, -0.0035086043644696474, -0.055299062281847, -0.12068551033735275, -0.9492943286895752, -0.02469526417553425, -0.008377056568861008, -0.045060209929943085, -0.0938793197274208, -0.00016962042718660086, -0.1284550428390503, -0.21119076013565063, -0.001890540006570518, -0.37700819969177246, -0.0011038646334782243, -0.4749545753002167, -0.015501721762120724, -0.0004463391669560224, -0.07069914042949677, -0.9578466415405273, -0.2058797925710678, -0.015090352855622768, -0.0770866870880127, -0.0006765222642570734, -0.020113905891776085, -0.0007350126979872584, -0.03834398835897446, -0.0018273574532940984, -0.011269133538007736, -1.5258672647178173e-05, -4.207999518257566e-05, -0.000377583724912256, -0.031690116971731186, -4.768370445162873e-07, -1.4305104514278355e-06, -6.723177648382261e-05, -1.9073468138230965e-06, -3.123234637314454e-05, -0.0026444962713867426, -3.7788631743751466e-05, -3.2186455882765586e-06, -0.01209979597479105, -0.0011069605825468898, -0.39575114846229553, -0.0006064721383154392, -0.04908185452222824, -0.0023451941087841988, -0.00022849810193292797, -0.00010513706365600228, -0.00022766382608097047, -0.0003912875254172832, -0.026961270719766617, -0.0011698314920067787, -0.00019608005823101848, -0.0031343402806669474, -0.00024089295766316354, -0.001369610894471407, -0.0013512775767594576, -0.003528204746544361, -0.00023946279543451965, -0.0004051103023812175, -0.0002469711471349001, -0.002880354877561331, -0.00036459474358707666, -0.0021991373505443335, -0.00032264748006127775, -0.009083022363483906, -0.0001248043408850208, -0.000445385929197073, -0.0008697302546352148, -0.003333252388983965, -0.00135389668866992, -0.25881439447402954, -0.3311181962490082, -0.3119921386241913, -0.0076957885175943375, -0.4051811099052429, -0.022009050473570824, -0.5207276940345764], "finish_reason": "stop"}], "metrics": {"energy": 656.2429408950804, "energy_per_token": 3.6457941160837803, "time": 15.140081, "time_per_token": 0.08411156111111111}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n\n    # Copy the source folder to the backup directory\n    shutil.copytree(src_folder, backup_dir)\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"Error deleting source folder: {e}\")\n        return False", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Copy", " the", " source", " folder", " to", " the", " backup", " directory", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -0.38799870014190674, -0.00682451855391264, -0.6044217348098755, -0.00013124081306159496, -0.001716808183118701, -5.8530047681415454e-05, -5.960446742392378e-06, -0.0015231685247272253, -0.03031540848314762, -0.0001284993631998077, -0.0010825494537129998, -0.21849685907363892, -0.0027903690934181213, -0.00030989613151177764, -0.0008049347088672221, -0.17883740365505219, -0.0008183944155462086, -0.16150395572185516, -2.4922142028808594, -0.03594117611646652, -0.05165452882647514, -0.0020626953337341547, -0.050539374351501465, -0.007740148343145847, -0.029910322278738022, -0.020435502752661705, -0.0815727710723877, -0.0004748170613311231, -0.6426572799682617, -9.393251093570143e-05, -3.099393507000059e-05, -0.0034905478823930025, -0.0008198237628675997, -1.4185804502631072e-05, -0.000813034363090992, -2.4199192921514623e-05, -1.9073468138230965e-06, -9.798523387871683e-05, -1.7430200576782227, -5.23315102327615e-05, -0.00010108436981681734, -0.12102577835321426, -0.0013135385233908892, -0.01881127804517746, -0.00042763148667290807, -0.025410030037164688, -0.11387796700000763, -0.0005855038180015981, -0.032046109437942505, -0.0005441615357995033, -0.03372115269303322, -0.0003131137927994132, -0.024270441383123398, -1.3470558769768104e-05, -8.761498611420393e-05, -0.0010923140216618776, -0.040633223950862885, -3.576278118089249e-07, -1.9073468138230965e-06, -5.185469490243122e-05, -1.4066597032069694e-05, -9.42901024245657e-05, -0.0010854073334485292, -2.90866428258596e-05, -1.2874520507466514e-05, -0.0020987405441701412, -0.0012253165477886796, -0.852654218673706, -0.0954485833644867, -0.001649092067964375, -0.029202818870544434, -0.002545808907598257, -0.0003256267518736422, -0.009784004651010036, -0.043475065380334854, -0.017698338255286217, -0.00010930894495686516, -0.004439260810613632, -0.0004122599493712187, -0.8966342210769653, -0.0013062763027846813, -0.04239725321531296, -0.0027829986065626144, -0.30305206775665283, -0.2583162188529968, -0.34537622332572937, -0.0012425805907696486, -0.37958934903144836, -0.0009676303598098457, -0.5475878119468689, -0.004882081411778927, -0.0007990981102921069, -0.0033320642542093992, -0.016814760863780975, -0.014518452808260918, -0.0008415018673986197, -0.4828243851661682, -0.029347069561481476, -0.36926233768463135], "finish_reason": "stop"}], "metrics": {"energy": 435.0376485652924, "energy_per_token": 3.3987316294163468, "time": 10.5017805, "time_per_token": 0.08204516015625}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError('Source folder does not exist: %s' % src_folder)\n\n    # Backup the source folder\n    try:\n        shutil.copytree(src_folder, backup_dir)\n    except Exception as e:\n        print('Error backing up source folder: %s' % str(e))\n        return False\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print('Error deleting source folder: %s' % str(e))\n        return False\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ":", " %", "s", "'", " %", " src", "_", "folder", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "Error", " backing", " up", " source", " folder", ":", " %", "s", "'", " %", " str", "(", "e", "))", "\n", "        ", "return", " False", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "Error", " deleting", " source", " folder", ":", " %", "s", "'", " %", " str", "(", "e", "))", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -2.3400378227233887, -0.4231717884540558, -0.01664629951119423, -0.05132469907402992, -0.00020489977032411844, -0.001763218897394836, -2.242424964904785, -1.352866530418396, -0.015330925583839417, -0.0028679927345365286, -0.0066941529512405396, -0.018432868644595146, -8.976056415122002e-05, -5.722029527532868e-06, -0.00030596344731748104, -0.0016837242292240262, -0.40437859296798706, -0.000912250077817589, -1.482832431793213, -1.1459766626358032, -0.2777674198150635, -0.14065611362457275, -0.007950091734528542, -0.5431765913963318, -0.001566136721521616, -1.8532652854919434, -6.270212179515511e-05, -0.00011300401820335537, -0.001679201959632337, -0.12214873731136322, -1.0967194612021558e-05, -7.033323527139146e-06, -0.07350212335586548, -0.0004926898400299251, -4.446407547220588e-05, -0.0026323688216507435, -3.099393507000059e-05, -1.2159273865108844e-05, -6.437094270950183e-05, -1.4506839513778687, -2.5033637939486653e-05, -0.0003522014303598553, -0.0821598619222641, -0.0021969962399452925, -0.1287941336631775, -0.0006158839096315205, -0.09735342115163803, -0.02182525023818016, -0.10710783302783966, -0.00032074074260890484, -0.002987328916788101, -0.0005637010326609015, -0.5083281993865967, -0.24459689855575562, -0.2308860421180725, -0.2655605375766754, -0.00010132275929208845, -0.14737676084041595, -0.0020233176182955503, -0.06147381663322449, -0.006938056088984013, -0.0012411518255248666, -0.013939877040684223, -0.0006890306831337512, -0.6664657592773438, -6.317892984952778e-05, -4.1960789531003684e-05, -0.0004687402688432485, -0.0008323303773067892, -0.01907891035079956, -0.03450470417737961, -0.0037387963384389877, -0.0008925982983782887, -0.029467221349477768, -0.0003955773718189448, -0.015967829152941704, -0.03799792006611824, -0.0016599221853539348, -0.014289083890616894, -0.0006759266252629459, -0.014612206257879734, -0.00017891713650897145, -0.0041359844617545605, -1.156323378381785e-05, -4.51792984677013e-05, -0.0005156855913810432, -0.02579103782773018, -7.152555099310121e-07, -1.7881377516459906e-06, -8.880697714630514e-05, -3.6954811548639555e-06, -4.494089080253616e-05, -0.00156589865218848, -1.6212332411669195e-05, -1.311301275563892e-06, -0.0027027528267353773, -0.0007078525959514081, -0.06915204226970673, -0.00012373158824630082, -0.00974398571997881, -0.0008218486327677965, -0.000198821333469823, -4.792098479811102e-05, -0.00023982033599168062, -0.00018380382971372455, -0.007525310385972261, -0.0007306052139028907, -0.001670038211159408, -0.0038662224542349577, -0.0031587013509124517, -0.0002975021197926253, -0.001770953880622983, -0.0002739054325502366, -2.8132995794294402e-05, -0.00021860594279132783, -0.00013743886665906757, -0.0005401106318458915, -8.4638240878121e-06, -1.0371154530730564e-05, -3.40932747349143e-05, -0.00018714107864070684, -0.0013779440196231008, -0.008308607153594494, -0.0003066784702241421, -0.0006326819420792162, -0.020723484456539154, -0.0018237876938655972, -0.07085130363702774, -0.0008833082392811775, -0.3654075264930725, -0.026782788336277008, -0.632487416267395], "finish_reason": "stop"}], "metrics": {"energy": 536.4528256874082, "energy_per_token": 3.6003545348148203, "time": 12.413318, "time_per_token": 0.08331085906040268}}
{"outputs": [{"text": "try:\n        if not os.path.exists(src_folder):\n            raise ValueError(\"The given source folder does not exist.\")\n\n        # Backup the source folder\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n\n        # Delete the source folder\n        shutil.rmtree(src_folder)\n\n        return True\n\n    except Exception as e:\n        print(f\"An error occurred during backup: {e}\")\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " given", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "        ", "#", " Backup", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "\n", "        ", "#", " Delete", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "\n", "        ", "return", " True", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", " during", " backup", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False"], "logprobs": [-1.8821158409118652, -0.0003143055073451251, -0.0025913489516824484, -0.016529638320207596, -0.46019431948661804, -0.5395276546478271, -0.006128448061645031, -1.8000440832111053e-05, -0.0007147617870941758, -6.794906312279636e-06, -0.0713745653629303, -0.00021944021864328533, -0.011700810864567757, -4.911301948595792e-05, -4.589452510117553e-05, -0.007298237178474665, -0.0072155119851231575, -0.001405324088409543, -0.03148047998547554, -0.002427728148177266, -5.006777428206988e-06, -0.08294181525707245, -0.8443057537078857, -1.6713299751281738, -2.996502161026001, -0.12130172550678253, -0.00938078761100769, -0.027983972802758217, -0.00021598390594590455, -0.0014937683008611202, -0.22707505524158478, -0.010515992529690266, -0.0005525015876628458, -0.001134705264121294, -0.4037350118160248, -0.005231619346886873, -1.1572656631469727, -1.081390380859375, -0.12408725172281265, -0.16142453253269196, -0.006789708510041237, -0.49906283617019653, -0.0011867393041029572, -0.24993567168712616, -5.4238757002167404e-05, -1.0132738680113107e-05, -0.13563187420368195, -0.0005224770284257829, -1.490105023549404e-05, -0.0018220028141513467, -2.396077979938127e-05, -5.960446742392378e-06, -3.504691630951129e-05, -0.2979596257209778, -1.9073468138230965e-06, -2.8967437174287625e-05, -3.576272320060525e-06, -0.00031764229061082006, -0.00010549465514486656, -0.004237245302647352, -3.218599158572033e-05, -1.847726889536716e-05, -0.00615190714597702, -0.35609734058380127, -5.602820692729438e-06, -7.724463648628443e-05, -4.410734163684538e-06, -0.002446041675284505, -2.3841830625315197e-06, -3.8742269680369645e-05, -0.0013131813611835241, -1.1801649634435307e-05, -2.264974000354414e-06, -0.055828046053647995, -0.0011759040644392371, -0.06959480792284012, -0.0028010678943246603, -0.0022224506828933954, -0.048953477293252945, -0.0015807764139026403, -0.027760107070207596, -0.000896052282769233, -0.026905106380581856, -0.00044252615771256387, -0.11319084465503693, -5.960462772236497e-07, -2.622600959512056e-06, -0.0001003691868390888, -1.1920922133867862e-06, -4.255681051290594e-05, -0.0011562574654817581, -2.312633478140924e-05, -8.344646857949556e-07, -0.010054417885839939, -0.0007433511782437563, -0.255255788564682, -0.05804266780614853, -0.09473740309476852, -0.001875904854387045, -0.016701988875865936, -0.8764380216598511, -0.0005777596961706877, -0.005492595490068197, -0.11844286322593689, -0.021373650059103966, -0.08227448910474777, -0.00020013237372040749, -0.002057103905826807, -0.001328896265476942, -0.34251055121421814, -0.002368028275668621, -0.14769408106803894, -0.007815969176590443, -0.748805046081543, -0.002612275304272771, -0.010758021846413612, -2.925741195678711, -2.795487642288208, -1.0108885765075684, -0.001712523982860148, -0.535734236240387, -0.005759311839938164, -0.000949885172303766, -0.0034794998355209827, -0.01808440312743187, -0.01491525862365961, -0.0013322297018021345], "finish_reason": "stop"}], "metrics": {"energy": 446.3831633720395, "energy_per_token": 3.5148280580475553, "time": 10.722302, "time_per_token": 0.08442757480314961}}
{"outputs": [{"text": "try:\n        # Check if source folder exists\n        if not os.path.exists(src_folder):\n            raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n        # Check if backup directory exists\n        if not os.path.exists(backup_dir):\n            # If it does not exist, create it\n            os.makedirs(backup_dir)\n        # Rename source folder\n        backup_folder = os.path.join(backup_dir, os.path.basename(src_folder))\n        if os.path.exists(backup_folder):\n            # If the backup folder already exists, increment the name until we get a unique one\n            i = 1\n            while os.path.exists(backup_folder):\n                backup_folder = os.path.join(backup_dir, f\"{os.path.basename(src_folder)}_{i}\")\n                i += 1\n        # Backup source folder\n        shutil.copytree(src_folder, backup_folder)\n        # Delete source folder\n        shutil.rmtree(src_folder)\n", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " source", " folder", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "#", " Check", " if", " backup", " directory", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "            ", "#", " If", " it", " does", " not", " exist", ",", " create", " it", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "        ", "#", " R", "ename", " source", " folder", "\n", "        ", "backup", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "backup", "_", "folder", "):", "\n", "            ", "#", " If", " the", " backup", " folder", " already", " exists", ",", " increment", " the", " name", " until", " we", " get", " a", " unique", " one", "\n", "            ", "i", " =", " ", "1", "\n", "            ", "while", " os", ".", "path", ".", "exists", "(", "backup", "_", "folder", "):", "\n", "                ", "backup", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " f", "\"", "{", "os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")}_{", "i", "}\"", ")", "\n", "                ", "i", " +=", " ", "1", "\n", "        ", "#", " Backup", " source", " folder", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "folder", ")", "\n", "        ", "#", " Delete", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n"], "logprobs": [-1.8821158409118652, -0.0003143055073451251, -0.0025913489516824484, -0.016529638320207596, -1.3900630474090576, -0.31152281165122986, -0.031821999698877335, -1.7609822750091553, -0.014311999082565308, -0.01096438430249691, -0.04039110615849495, -0.0005000770906917751, -0.010387050919234753, -0.1545512080192566, -0.0021157516166567802, -7.986990567587782e-06, -0.00014768941036891192, -1.1205610462639015e-05, -0.1440739929676056, -5.364274329622276e-05, -0.0009398810216225684, -3.015949550899677e-05, -2.9205850296420977e-05, -0.006783196236938238, -0.0007724162423983216, -0.0007700338610447943, -0.027581650763750076, -0.0023129635956138372, -3.4570634852570947e-06, -0.03890839219093323, -0.39560067653656006, -0.04594571888446808, -0.1529332548379898, -0.0064477031119167805, -0.48138707876205444, -0.00011801023356383666, -0.0020475867204368114, -3.886147169396281e-05, -5.364403477869928e-06, -0.0018202179344370961, -0.027680449187755585, -0.0001662831346038729, -0.0009245174005627632, -0.19844001531600952, -0.004717885982245207, -0.00018559163436293602, -0.0005199749139137566, -1.8920972347259521, -0.10699912160634995, -3.262213706970215, -0.008024477399885654, -0.13279715180397034, -0.16617296636104584, -0.036453258246183395, -1.5002384185791016, -0.0008899780223146081, -0.06291060149669647, -0.00912861991673708, -0.0009864469757303596, -1.4305104514278355e-06, -4.935142715112306e-05, -1.9073468138230965e-06, -0.03540340065956116, -6.878139538457617e-05, -0.001086121890693903, -2.2291887944447808e-05, -0.00011884459672728553, -0.0026026444975286722, -0.00012790338951162994, -0.0009912106906995177, -2.391141653060913, -1.5268447399139404, -1.501097559928894, -1.884186863899231, -0.003962048329412937, -0.01677349954843521, -0.006056882906705141, -0.03479418903589249, -0.2683526575565338, -0.033859796822071075, -0.0002696150622796267, -0.016947448253631592, -1.9073468138230965e-06, -0.02799162268638611, -6.318072337307967e-06, -0.0001311216183239594, -7.986703712958843e-05, -0.0003196682082489133, -1.168244216387393e-05, -3.576272320060525e-06, -0.02494935132563114, -0.0003987947420682758, -0.13503453135490417, -0.015023771673440933, -3.5725231170654297, -0.0017473918851464987, -0.8890239596366882, -0.006088519003242254, -1.9814893007278442, -0.0006135011790320277, -1.5721991062164307, -0.002755180699750781, -0.9284717440605164, -0.25993600487709045, -0.08324284106492996, -9.298280929215252e-06, -4.60137271147687e-05, -2.861018856492592e-06, -0.01251133717596531, -0.00016878610767889768, -0.007907751016318798, -2.038458114839159e-05, -1.3947389561508317e-05, -0.0004889961564913392, -0.19413746893405914, -8.106198947643861e-06, -0.00015448330668732524, -3.933898824470816e-06, -0.002910071052610874, -4.6491513785440475e-06, -8.046303264563903e-05, -0.004750394728034735, -6.556489552167477e-06, -4.529942543740617e-06, -0.04250556603074074, -0.009597706608474255, -0.007326520513743162, -3.562060594558716, -0.09844514727592468, -2.2649508537142538e-05, -0.0011451836908236146, -1.4543427823809907e-05, -0.012625055387616158, -0.0002203936892328784, -0.0045485603623092175, -8.22540732769994e-06, -0.0014860312221571803, -0.0035918739158660173, -0.0023475727066397667, -0.002002021996304393, -1.0471140146255493, -0.11547353863716125, -1.2550039291381836, -0.2370021939277649, -0.028147753328084946, -0.05160822719335556, -0.001134109916165471, -0.01176973432302475, -2.928842306137085, -0.31214675307273865, -1.3259822130203247, -1.0010387897491455, -2.257124662399292, -1.0992424488067627, -0.12085402011871338, -0.014304478652775288, -2.5692176818847656, -0.01855270192027092, -0.0001931004080688581, -0.5558698177337646, -0.0014352031284943223, -0.0001627074379939586, -0.05036380514502525, -0.00022516099852509797, -0.00013207517622504383, -0.013881448656320572, -0.15594728291034698, -2.3841855067985307e-07, -1.5497195136049413e-06, -1.0728830375228426e-06, -2.7656173188006505e-05, -0.00013100242358632386, -0.548287034034729, -4.768360213347478e-06, -0.00010764019680209458, -0.4208424389362335, -8.761498611420393e-05, -0.00030298411729745567, -0.07136757671833038, -2.9802276912960224e-06, -0.0002915434306487441, -0.01864689588546753, -0.16673514246940613, -2.9802276912960224e-06, -2.0265373677830212e-05, -6.9141146923357155e-06, -0.0012441283324733377, -3.0636318115284666e-05, -0.13608591258525848, -1.9073468138230965e-06, -0.00019798702851403505, -7.486063259420916e-05, -0.2850854992866516, -0.03298196941614151, -0.004088971298187971, -0.018891995772719383, -8.4638240878121e-06, -1.1920858014491387e-05, -2.9802276912960224e-06, -4.9232225137529895e-05, 0.0, -4.255681051290594e-05, -0.00277289398945868, -5.960446742392378e-06, -3.2543604902457446e-05, -1.581149935722351, -0.030264174565672874, -0.0340961255133152, -0.00016366096679121256, -0.0003846143954433501, -0.0030046815518289804, -0.0012144817737862468, -0.0016565899131819606, -0.000601349223870784, -2.3007127310847864e-05, -0.00022539935889653862, -0.031906407326459885, -0.7843639254570007, -1.2656803131103516, -0.28462401032447815, -0.002873223042115569, -0.3214744031429291, -0.0007888542604632676, -0.025421420112252235, -3.933898824470816e-06, -2.50339189733495e-06, -0.9725730419158936, -9.357491217087954e-05, -1.0609570381348021e-05, -0.0012949660886079073, -1.2159273865108844e-05, -2.861018856492592e-06, -5.781483559985645e-05, -0.0016125545371323824, -2.145764938177308e-06, -7.450303382938728e-05, -0.061857692897319794, -0.0009480987209826708, -0.018453465774655342, -0.016313161700963974, -0.046640679240226746, -0.05945945158600807, -0.0007446615491062403, -0.011619863100349903, -0.0004993622424080968, -0.09033211320638657, -4.768370445162873e-07, -4.768360213347478e-06, -0.0001517419150331989, -2.0265558760002023e-06, -4.31528314948082e-05, -0.0013074668822810054, -1.2993727978027891e-05, -6.198863957251888e-06, -0.004480323754251003, -0.00041654970846138895], "finish_reason": "length"}], "metrics": {"energy": 888.93031731987, "energy_per_token": 3.4723840520307423, "time": 21.863811, "time_per_token": 0.08540551171875}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder {src_folder} does not exist.\")\n\n    # Create the backup directory if it doesn't exist\n    if not os.path.exists(backup_dir):\n        os.makedirs(backup_dir)\n\n    # Backup the source folder\n    shutil.copytree(src_folder, backup_dir)\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"Error deleting source folder {src_folder}: {e}\")\n        return False", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " backup", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " source", " folder", " {", "src", "_", "folder", "}:", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -0.38799870014190674, -0.00682451855391264, -1.2010823488235474, -0.0009808497270569205, -2.455681169521995e-05, -2.9802276912960224e-06, -0.0014669859083369374, -0.04134824499487877, -0.00014780859055463225, -0.0012554391287267208, -0.4309273660182953, -0.004642541520297527, -0.0003409996279515326, -0.0005595310358330607, -0.20310063660144806, -0.0007924277451820672, -0.08670145273208618, -1.5580188035964966, -0.8481720089912415, -0.12999603152275085, -0.4013400673866272, -0.032676730304956436, -0.0034551466815173626, -0.27628588676452637, -0.0003911683743353933, -2.4318398573086597e-05, -0.021154602989554405, -0.02532135136425495, -0.00022933237778488547, -0.303959459066391, -0.0018572239205241203, -0.0004614718782249838, -6.6756979322235566e-06, -4.6967357775429264e-05, -6.9141146923357155e-06, -0.0039747534319758415, -2.407998726994265e-05, -0.0010158622171729803, -1.4066597032069694e-05, -2.396077979938127e-05, -0.00030429501202888787, -6.007967749610543e-05, -0.0005863377591595054, -0.01740456372499466, -5.960446742392378e-06, -0.02864970825612545, -2.9802276912960224e-06, -5.2689116273541003e-05, -3.9219088648678735e-05, -0.00014518637908622622, -1.0132738680113107e-05, -3.3378546504536644e-06, -0.004622606560587883, -0.00024530262453481555, -0.013991719111800194, -0.0009230881696566939, -0.016313279047608376, -1.2004889249801636, -0.022410938516259193, -0.037518661469221115, -0.002734733046963811, -0.5440709590911865, -0.0006151691195555031, -0.4218389689922333, -4.482168878894299e-05, -1.2636104656849056e-05, -0.08905342221260071, -0.0005428509321063757, -1.2159273865108844e-05, -0.0015219782944768667, -1.8596476365928538e-05, -4.768370445162873e-07, -4.1483970562694594e-05, -1.460756540298462, -2.884823152271565e-05, -0.00011443436960689723, -0.08688005059957504, -0.0009402383584529161, -0.016238803043961525, -0.00035255891270935535, -0.017747409641742706, -0.04493200033903122, -0.0004419303731992841, -0.029478102922439575, -0.0006420934805646539, -0.03142433613538742, -0.00026770823751576245, -0.030111730098724365, -1.645074735279195e-05, -8.594620157964528e-05, -0.0011269653914496303, -0.034613873809576035, -3.576278118089249e-07, -9.536738616588991e-07, -3.6000557884108275e-05, -2.622600959512056e-06, -4.029192859889008e-05, -0.0009159421897493303, -3.2305197237292305e-05, -1.5497195136049413e-06, -0.0016780118457973003, -0.0012935374397784472, -0.6844696998596191, -0.08137839287519455, -0.0014213945250958204, -0.016004666686058044, -0.002491348423063755, -0.00037853704998269677, -0.009510921314358711, -0.036391761153936386, -0.014954484067857265, -8.95221673999913e-05, -0.003564791288226843, -0.0004980515805073082, -0.9641678333282471, -0.0009589364635758102, -0.03952839598059654, -0.00248873233795166, -0.22975407540798187, -0.2524667978286743, -0.33172228932380676, -0.0012444854946807027, -0.8574333786964417, -0.0018161722691729665, -2.407998726994265e-05, -4.6132929128361866e-05, -0.016037866473197937, -0.0017497718799859285, -0.44117456674575806, -0.0037516227457672358, -0.0007932615117169917, -0.0021096847485750914, -0.01278642751276493, -0.018787646666169167, -0.0006434039096347988, -1.556403636932373, -1.3470558769768104e-05, -3.4570634852570947e-06, -4.529942543740617e-06, -5.435795901576057e-05, -1.5266305208206177, -0.0016494491137564182], "finish_reason": "stop"}], "metrics": {"energy": 584.6603655071257, "energy_per_token": 3.4190664649539513, "time": 14.30057, "time_per_token": 0.08362906432748539}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n    try:\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"Error backing up source folder: {str(e)}\")\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " backing", " up", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -1.3825328350067139, -0.8041752576828003, -8.153582894010469e-05, -0.00046695294440723956, -0.003537470242008567, -0.2407289296388626, -1.0847986231965479e-05, -6.079655122448457e-06, -0.6460103988647461, -0.0008580578723922372, -4.994744449504651e-05, -0.0048852842301130295, -5.507317473529838e-05, -7.986990567587782e-06, -0.00011145447206217796, -0.5734707713127136, -1.0251946150674485e-05, -5.721882189391181e-05, -2.50339189733495e-06, -0.00043084874050691724, -0.00012730741582345217, -0.009934977628290653, -4.2676016164477915e-05, -1.07287787614041e-05, -0.00684523768723011, -0.29318273067474365, -1.549708758830093e-05, -8.237022848334163e-05, -5.8412379075889476e-06, -0.004202107898890972, -6.079655122448457e-06, -9.321732068201527e-05, -0.01240773219615221, -2.90866428258596e-05, -7.748573807475623e-06, -0.04921191558241844, -0.004072943702340126, -0.061354756355285645, -0.040274664759635925, -1.1920922133867862e-06, -2.50339189733495e-06, -0.00024589852546341717, -1.6689286894688848e-06, -7.009260298218578e-05, -0.001642546383664012, -1.8358061424805783e-05, -2.7418097943154862e-06, -0.005208257120102644, -0.0032283354084938765, -0.2870320677757263, -0.08657453954219818, -0.0019458661554381251, -0.0029599922709167004, -0.0015484021278098226, -0.0003071551618631929, -0.019809503108263016, -0.052801571786403656, -0.042181048542261124, -0.00014554394874721766, -0.0033875482622534037, -0.0005276002921164036, -0.4084308445453644, -0.002497175009921193, -0.25330087542533875, -0.005540254060178995, -0.31915104389190674, -2.23854923248291, -0.0012338890228420496, -3.011714220046997, -0.007123548071831465, -0.5348529815673828, -0.0007884969236329198, -1.3086448907852173, -0.00015984688070602715, -3.158996332786046e-05, -0.0005844315164722502, -0.002727600047364831, -0.0009168949909508228, -0.0021234839223325253, -0.022408491000533104, -0.015362856909632683, -0.000998594332486391, -0.6038424968719482, -0.030484359711408615, -0.4325232207775116], "finish_reason": "stop"}], "metrics": {"energy": 380.1854690399168, "energy_per_token": 3.3644731773443968, "time": 9.471998, "time_per_token": 0.08382299115044248}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"The source folder '{src_folder}' does not exist.\")\n\n    # Backup the source folder\n    shutil.copytree(src_folder, os.path.join(backup_dir, src_folder))\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"An error occurred while deleting the source folder: {str(e)}\")\n        return False", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "))", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -1.6513348817825317, -0.24959857761859894, -0.003114256775006652, -0.42072200775146484, -0.00017414960893802345, -0.002613702090457082, -3.635817120084539e-05, -4.410734163684538e-06, -0.0012721073580905795, -0.004467388149350882, -0.00014745102089364082, -0.0008571050129830837, -0.09406303614377975, -0.008105598390102386, -0.0003626880934461951, -0.0007308434578590095, -0.1724948287010193, -0.0007980260998010635, -0.13142648339271545, -1.2902331352233887, -0.031537655740976334, -0.06070180982351303, -0.0013905627420172095, -0.5684027671813965, -0.0008523407159373164, -0.4202854633331299, -4.935142715112306e-05, -1.1920858014491387e-05, -0.1529359221458435, -0.0008237544680014253, -1.585470999998506e-05, -0.0014817459741607308, -2.753696753643453e-05, -2.145764938177308e-06, -4.3987260141875595e-05, -0.23649831116199493, -4.6491513785440475e-06, -3.0397906812140718e-05, -8.106198947643861e-06, -0.00018606838420964777, -9.154854342341423e-05, -0.005994792561978102, -3.361645576660521e-05, -1.3232143828645349e-05, -0.005026086233556271, -1.8651334047317505, -7.617183291586116e-05, -0.00028689560713246465, -0.16782227158546448, -0.002217336092144251, -0.02746300958096981, -0.0004471732536330819, -0.010829959064722061, -0.04757196456193924, -0.0008089845650829375, -0.015752404928207397, -0.0005749003030359745, -0.023200254887342453, -0.0003759154351428151, -0.04380258545279503, -2.062299427052494e-05, -0.00012003655137959868, -0.0012979424791410565, -0.05268554762005806, -5.960462772236497e-07, -2.0265558760002023e-06, -7.70062324590981e-05, -6.6756979322235566e-06, -6.01988795096986e-05, -0.0012852036161348224, -4.3987260141875595e-05, -1.7881377516459906e-06, -0.0022225696593523026, -0.0011517327511683106, -0.6487596035003662, -0.09374506026506424, -0.001901724492199719, -0.01961115375161171, -0.001634453423321247, -0.0003165697562508285, -0.008517486043274403, -0.0298027191311121, -0.034077346324920654, -0.00011872540198964998, -0.0035563574638217688, -0.00045563330058939755, -0.8048010468482971, -0.0011480414541438222, -0.044475894421339035, -0.0036830941680818796, -0.7502464056015015, -0.0024861162528395653, -0.004410421010106802, -0.04386773705482483, -0.0074495854787528515, -0.05896126478910446, -0.04169967770576477, -0.0011800715001299977, -0.25159743428230286, -0.0017566739115864038, -0.9096083641052246, -0.00013004888023715466, -3.909988299710676e-05, -0.0009470268851146102, -0.006983159575611353, -0.0016164820408448577, -0.002734257373958826, -0.014855947345495224, -0.030245091766119003, -0.0010190776083618402, -1.3430390357971191, -7.390948667307384e-06, -2.622600959512056e-06, -3.814689989667386e-06, -4.637133679352701e-05, -1.599013090133667, -0.0016852713888511062], "finish_reason": "stop"}], "metrics": {"energy": 537.8483636875151, "energy_per_token": 3.683892901969281, "time": 12.1876335, "time_per_token": 0.08347694178082192}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(\"The specified source folder does not exist.\")\n\n    # Make the backup of the source folder in the given directory\n    try:\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n    except Exception as e:\n        print(f\"Error backing up the source folder: {e}\")\n        return False\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f\"Error deleting the source folder: {e}\")\n        return False\n\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Make", " the", " backup", " of", " the", " source", " folder", " in", " the", " given", " directory", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " backing", " up", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "def"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.9034494161605835, -1.7463246583938599, -1.8539751768112183, -0.12840482592582703, -0.0025007424410432577, -0.008484980091452599, -0.00012385078298393637, -0.0007138088112697005, -0.18773500621318817, -0.0064467559568583965, -0.0009513143450021744, -0.0006169561529532075, -0.19187110662460327, -0.000774917658418417, -0.08784319460391998, -4.092462539672852, -0.869127631187439, -0.13199129700660706, -2.988635778427124, -0.021443428471684456, -0.11634820699691772, -0.00719101307913661, -2.456045389175415, -0.021293366327881813, -3.4053707122802734, -0.7695619463920593, -0.07941730320453644, -0.0013444918440654874, -1.8488614559173584, -8.713819261174649e-05, -0.0002493547508493066, -0.0028263882268220186, -0.19281724095344543, -1.3708974620385561e-05, -5.722029527532868e-06, -0.08573130518198013, -0.0022131730802357197, -3.6238969187252223e-05, -0.0018649582052603364, -4.684815212385729e-05, -6.556489552167477e-06, -0.00012730741582345217, -0.22015294432640076, -9.536697689327411e-06, -4.2914423829643056e-05, -9.775113539944869e-06, -0.00024339574156329036, -0.0001456631434848532, -0.010453234426677227, -3.099393507000059e-05, -4.565611743601039e-05, -0.012165159918367863, -0.5162068605422974, -1.2397689715726301e-05, -7.92710343375802e-05, -2.622600959512056e-06, -0.003111048135906458, -4.887569048150908e-06, -6.949660019017756e-05, -0.0033327771816402674, -2.4199192921514623e-05, -6.437280717364047e-06, -0.03855299577116966, -0.0012722263345494866, -0.11826897412538528, -0.0012757980730384588, -0.1919008195400238, -0.03834444656968117, -0.030268223956227303, -0.0003091811086051166, -0.003106294432654977, -0.000526289688423276, -0.3342854976654053, -0.0020499660167843103, -0.13225148618221283, -0.006283645983785391, -0.39406251907348633, -0.7599488496780396, -0.0002273062855238095, -0.2752152383327484, -0.09569690376520157, -0.0025982451625168324, -0.014698902145028114, -0.00046993177966214716, -0.41649654507637024, -0.008613931015133858, -0.0002406545972917229, -0.0017522709676995873, -0.04157618060708046, -0.03848589211702347, -0.0032185916788876057, -0.0022387460339814425, -0.019053297117352486, -0.0009137984015978873, -0.007642081007361412, -0.0941224992275238, -0.0014809127897024155, -0.07151885330677032, -0.0016905077500268817, -0.10770827531814575, -0.00019500737835187465, -0.004532658960670233, -1.4543427823809907e-05, -4.708655978902243e-05, -0.000513064325787127, -0.016927404329180717, -5.960462772236497e-07, -8.344646857949556e-07, -3.58813522325363e-05, -8.344646857949556e-07, -2.7894584491150454e-05, -0.0009664393728598952, -2.2649508537142538e-05, -3.576278118089249e-07, -0.0041851322166621685, -0.0011360150529071689, -0.19881150126457214, -0.0001387499796692282, -0.015529656782746315, -0.0006090931710787117, -0.00017093151109293103, -5.030505417380482e-05, -0.000300600629998371, -0.000259365770034492, -0.027510561048984528, -0.00011538793478393927, -0.001980012049898505, -0.00024077377747744322, -0.004895723424851894, -0.01323462650179863, -0.0026145342271775007, -0.004274517763406038, -0.0004104725376237184, -0.002419165801256895, -0.00010311071673640981, -0.0005619138828478754, -0.00024399164249189198, -5.1377883210079744e-05, -0.00014220656885299832, -0.0012173393042758107, -0.005213712342083454, -0.00027104519540444016, -0.000612071540672332, -0.03337336331605911, -0.002272525103762746, -0.3448169529438019, -0.000876757490914315, -0.4873199164867401, -0.030764954164624214, -1.7957969903945923], "finish_reason": "stop"}], "metrics": {"energy": 627.7693970069885, "energy_per_token": 3.54671975710163, "time": 15.132266, "time_per_token": 0.08549302824858757}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f'Source folder \"{src_folder}\" does not exist.')\n\n    # Get the name of the source folder\n    src_folder_name = os.path.basename(src_folder)\n\n    # Create the backup folder path\n    backup_folder = os.path.join(backup_dir, src_folder_name)\n\n    # Backup the source folder\n    try:\n        shutil.copytree(src_folder, backup_folder)\n    except Exception as e:\n        raise Exception(f'An error occurred while backing up the folder: {str(e)}') from e\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f'An error occurred while deleting the folder: {str(e)}') from e\n\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Source", " folder", " \"", "{", "src", "_", "folder", "}\"", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Get", " the", " name", " of", " the", " source", " folder", "\n", "    ", "src", "_", "folder", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")", "\n", "\n", "    ", "#", " Create", " the", " backup", " folder", " path", "\n", "    ", "backup", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "_", "name", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "'", "An", " error", " occurred", " while", " backing", " up", " the", " folder", ":", " {", "str", "(", "e", ")}", "')", " from", " e", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "'", "An", " error", " occurred", " while", " deleting", " the", " folder", ":", " {", "str", "(", "e", ")}", "')", " from", " e", "\n", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -2.8680105209350586, -0.4869389832019806, -0.007016897201538086, -1.1877343654632568, -0.00037925204378552735, -0.004709936212748289, -8.21318244561553e-05, -6.9141146923357155e-06, -0.0022406489588320255, -0.028987333178520203, -0.00018535325943958014, -0.001010384177789092, -0.3006919324398041, -0.009117280133068562, -0.0008235162240453064, -0.2207677960395813, -0.0008069596369750798, -0.11683134734630585, -2.433361053466797, -0.11384424567222595, -1.6333359479904175, -0.014474039897322655, -0.0017259714659303427, -0.05576378479599953, -0.0036944961175322533, -0.22805452346801758, -0.00023934361524879932, -0.4473227262496948, -0.0005613181856460869, -0.12025698274374008, -0.0008385241380892694, -0.0236215740442276, -0.0005317704635672271, -0.006235904525965452, -4.172316494077677e-06, -6.556489552167477e-06, -4.768360213347478e-06, -0.009759568609297276, 0.0, -9.65590606938349e-06, -0.6420523524284363, -1.5139465176616795e-05, -3.576272320060525e-06, -0.42503175139427185, -0.0012685356196016073, -0.02086125686764717, -0.00021598390594590455, -0.00809093564748764, -1.0019196271896362, -0.2837093770503998, -0.4807298183441162, -0.7052555680274963, -1.1757967472076416, -0.15754765272140503, -0.00016759421851020306, -0.07564062625169754, -0.00028200942324474454, -0.22846005856990814, -0.26641327142715454, -0.003783569438382983, -2.3841830625315197e-06, -1.0609570381348021e-05, -9.059865078597795e-06, -0.0014105618465691805, -6.675497570540756e-05, -0.0015804193681105971, -1.4185804502631072e-05, -1.2636104656849056e-05, -0.000485183292767033, -0.023081209510564804, -2.3841830625315197e-06, -1.2278481335670222e-05, -0.0005627478822134435, -3.2186455882765586e-06, -0.018884042277932167, -0.0005952732171863317, -0.01426934078335762, -0.00018499570433050394, -0.02457849122583866, -1.7681622505187988, -0.015500900335609913, -0.05754535272717476, -0.0010025242809206247, -0.4961749315261841, -0.0003332536434754729, -1.1738014221191406, -3.242440288886428e-05, -5.566918844124302e-05, -0.001437702914699912, -0.03704572468996048, -3.576272320060525e-06, -1.5497195136049413e-06, -0.013787508942186832, -5.972207145532593e-05, -8.4638240878121e-06, -0.0006459057331085205, -6.198863957251888e-06, -4.6491513785440475e-06, -0.00017677174764685333, -0.0037534041330218315, -1.7881377516459906e-06, -0.00019905969384126365, -0.03983762487769127, -0.0007317964336834848, -0.1343248039484024, -0.0007986216805875301, -0.16909919679164886, -0.02203902043402195, -0.036282096058130264, -0.00018130090029444546, -0.001128751551732421, -0.00032145579461939633, -1.114601969718933, -0.15234912931919098, -0.01067463867366314, -0.022364893928170204, -0.06380292773246765, -2.857778310775757, -0.002245049923658371, -0.005773890297859907, -0.02945379540324211, -0.06214900314807892, -0.00015186110977083445, -0.4774431586265564, -0.9702814221382141, -0.14022941887378693, -0.0032423564698547125, -0.5290777683258057, -0.00017891713650897145, -1.597391747054644e-05, -0.0006654431927017868, -0.006245263386517763, -1.898650884628296, -0.0011598295532166958, -0.00037281715776771307, -0.0147544639185071, -0.0005554801900871098, -0.0068400283344089985, -0.05995907261967659, -0.0004914983292110264, -0.033711355179548264, -0.00029404606902971864, -0.008917270228266716, -0.0002076410164590925, -0.011447224766016006, -1.3708974620385561e-05, -9.500529267825186e-05, -0.00041130665340460837, -0.019459297880530357, -2.3841855067985307e-07, -7.152555099310121e-07, -2.4676019165781327e-05, -1.0728830375228426e-06, -2.002696055569686e-05, -0.000851387856528163, -5.722029527532868e-06, -7.271740287251305e-06, -0.0031993414741009474, -0.0007559779332950711, -0.2649663984775543, -0.00038521020906046033, -0.016344591975212097, -0.0005644158809445798, -0.0001842805795604363, -6.90197994117625e-05, -0.00022480344341602176, -0.00021598390594590455, -0.07326572388410568, -0.0007838514284230769, -0.004388107918202877, -0.0017254954436793923, -0.0015499495202675462, -0.016899744048714638, -0.00010907054820563644, -0.00021634146105498075, -0.0003228858404327184, -0.0046491860412061214, -0.0008688965463079512, -0.48593753576278687, -0.002885822905227542, -0.0003277718205936253, -0.0014693664852529764, -7.986990567587782e-06, -3.576272320060525e-06, -3.361645576660521e-05, -0.0006901028100401163, -0.0015655416063964367, -0.00010573305189609528, -0.0010418231831863523, -0.01374929491430521, -0.003756254445761442, -0.3653092682361603, -0.004901417531073093, -1.1185717582702637, -5.364403477869928e-06, -2.50339189733495e-06, -2.264974000354414e-06, -5.864924969500862e-05, -0.16087813675403595], "finish_reason": "stop"}], "metrics": {"energy": 798.3484186038964, "energy_per_token": 3.5169533859202486, "time": 19.134329, "time_per_token": 0.08429219823788547}}
{"outputs": [{"text": "# Check if source folder exists\n    if not os.path.isdir(src_folder):\n        raise ValueError(f\"Source folder {src_folder} does not exist\")\n\n    try:\n        # Back up source folder\n        shutil.copytree(src_folder, os.path.join(backup_dir, src_folder))\n        # Delete source folder\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"Error while deleting source folder {src_folder}: {str(e)}\")\n    else:\n        return True", "tokens": ["#", " Check", " if", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Back", " up", " source", " folder", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "))", "\n", "        ", "#", " Delete", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " while", " deleting", " source", " folder", " {", "src", "_", "folder", "}:", " {", "str", "(", "e", ")}", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -2.04245924949646, -0.01823681965470314, -0.01136873196810484, -0.04816208779811859, -0.0012287693098187447, -0.007137396838515997, -0.04094371572136879, -0.0022952421568334103, -8.583032467868179e-06, -0.00019739109848160297, -2.276871418871451e-05, -2.5253846645355225, -0.00017915551143232733, -0.00011336160969221964, -0.000854841957334429, -4.386805812828243e-05, -2.682172998902388e-05, -0.0013887770473957062, -0.000720956246368587, -0.001658732071518898, -0.03485601395368576, -0.0006730675231665373, -4.6491513785440475e-06, -0.07242194563150406, -0.40925678610801697, -0.0636184886097908, -0.2262873500585556, -0.007045899052172899, -1.3610563278198242, -0.0014571059728041291, -5.280832192511298e-05, -5.006777428206988e-06, -0.0017667888896539807, -0.04421668499708176, -0.0001578206429257989, -0.0009064141195267439, -1.320810317993164, -0.00025674383505247533, -0.0005277194431982934, -0.24999630451202393, -0.000785161682870239, -2.32292103767395, -5.471556869451888e-05, -0.001471152063459158, -0.006122049875557423, -0.02926059067249298, -2.38739275932312, -0.06414443254470825, -0.3712345063686371, -0.002422614488750696, -0.5432806015014648, -0.0005018643569201231, -0.14917799830436707, -1.3232143828645349e-05, -6.9141146923357155e-06, -0.10363215953111649, -0.00025459862081333995, -1.5735502529423684e-05, -0.0013598490040749311, -3.731181277544238e-05, -4.887569048150908e-06, -4.708655978902243e-05, -0.26976871490478516, -2.9802276912960224e-06, -1.883488948806189e-05, -5.245195097813848e-06, -0.00030894274823367596, -9.595887240720913e-05, -0.011404914781451225, -2.753696753643453e-05, -5.960446742392378e-06, -0.004833442624658346, -1.9799960851669312, -6.472854875028133e-05, -0.00022432672267314047, -0.16179826855659485, -0.001278179232031107, -1.6278067827224731, -0.15835149586200714, -0.03716621920466423, -0.021892663091421127, -0.0004245333548169583, -0.018715694546699524, -0.0005245024804025888, -0.03889084607362747, -1.4305104514278355e-06, -4.0531076592742465e-06, -0.00020466140995267779, -4.529942543740617e-06, -7.70062324590981e-05, -0.0017482249531894922, -4.0649541915627196e-05, -7.033323527139146e-06, -0.00443486962467432, -0.0005706112715415657, -1.1915569305419922, -0.003172842552885413, -0.02948608808219433, -0.020225010812282562, -0.03922193869948387, -0.00013958434283267707, -0.0034393463283777237, -0.0007300095749087632, -1.1512255668640137, -0.07566925138235092, -0.0014148473273962736, -0.03948989138007164, -0.002861573826521635, -0.2906767725944519, -1.5972270965576172, -0.22886502742767334, -0.31074440479278564, -0.0019092203583568335, -0.5879262089729309, -0.005494729615747929, -4.7801782784517854e-05, -7.664863369427621e-05, -0.017894258722662926, -0.0019022003980353475, -0.8435767889022827, -0.00011324241495458409, -2.1576648578047752e-05, -0.001706811715848744, -0.00020692592079285532, -0.002487067598849535, -0.2348780632019043, -1.657410740852356, -0.47859278321266174, -3.7431014789035544e-05, -0.001934325322508812, -0.0026318933814764023, -0.12370221316814423, -0.0019036282319575548, -0.2646614909172058, -0.19806437194347382, -0.4912881553173065], "finish_reason": "stop"}], "metrics": {"energy": 469.09926999473583, "energy_per_token": 3.3748148920484593, "time": 11.571658, "time_per_token": 0.08324933812949639}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.copytree(src_folder, backup_dir)\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"Error while deleting source folder: {e}\")\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " while", " deleting", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -0.2953173816204071, -0.0009109399979934096, -0.906694233417511, -6.806619057897478e-05, -0.0005644158809445798, -0.005032728426158428, -0.36818063259124756, -1.1086402082582936e-05, -5.006777428206988e-06, -0.45627662539482117, -0.0005708495154976845, -3.611976353568025e-05, -0.0034860337618738413, -4.756337511935271e-05, -5.722029527532868e-06, -6.151010165922344e-05, -1.1092033386230469, -2.7179348762729205e-05, -4.136476854910143e-05, -0.08396980911493301, -0.0109970448538661, -0.08299063891172409, -0.04511536285281181, -1.1920922133867862e-06, -3.814689989667386e-06, -0.0006366133457049727, -4.887569048150908e-06, -0.00010084597306558862, -0.0019234981155022979, -5.400034933700226e-05, -2.264974000354414e-06, -0.005025611724704504, -0.0030600647442042828, -1.1491971015930176, -0.0005800233921036124, -0.03836257383227348, -0.06295112520456314, -0.0419134683907032, -0.0001408954558428377, -0.0026880106888711452, -0.0005684667266905308, -1.6523473262786865, -0.1136007085442543, -0.0038355845026671886, -0.22009582817554474, -0.004637320525944233, -0.33915549516677856, -1.5477091073989868, -0.1134752407670021, -0.445786714553833, -0.0028285279404371977, -0.06351076066493988, -0.0009442876325920224, -0.4242808222770691, -0.005343677941709757, -0.0023700501769781113, -0.16292724013328552, -0.1015113815665245, -0.007976582273840904, -0.08038743585348129, -0.03315981104969978, -0.5819875597953796, -0.024636413902044296, -0.5882399678230286], "finish_reason": "stop"}], "metrics": {"energy": 312.6762291526796, "energy_per_token": 3.398654664703039, "time": 7.572279, "time_per_token": 0.08230738043478261}}
{"outputs": [{"text": "if os.path.exists(src_folder):\n        shutil.make_archive(os.path.join(backup_dir, os.path.basename(src_folder)), 'zip', src_folder)\n        shutil.rmtree(src_folder)\n        return True\n    else:\n        raise ValueError('The source folder does not exist.')\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"An error occurred while deleting the source folder: {e}\")\n        return False", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "else", ":", "\n", "        ", "raise", " Value", "Error", "('", "The", " source", " folder", " does", " not", " exist", ".", "')", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -2.0062294006347656, -0.00044800734031014144, -0.0030314228497445583, -3.218599158572033e-05, -0.21705539524555206, -0.0002269487304147333, -0.03692061826586723, -8.248942322097719e-05, -7.843663479434326e-05, -0.023548688739538193, -0.009633244946599007, -0.023690497502684593, -0.8617716431617737, -6.12716976320371e-05, -2.407998726994265e-05, -1.617476463317871, -9.536738616588991e-07, -4.172238186583854e-05, -0.00961187481880188, -0.43282949924468994, -1.0013530300057027e-05, -4.994744449504651e-05, -7.748573807475623e-06, -0.0479012168943882, -0.0004714807728305459, -0.00584393460303545, -0.00010859376925509423, -7.903263758635148e-05, -0.0023274733684957027, -0.44969332218170166, -3.40932747349143e-05, -0.00015269544383045286, -7.867782187531702e-06, -0.006221688352525234, -1.2040065485052764e-05, -0.00016866691294126213, -0.009011314250528812, -4.136476854910143e-05, -1.1086402082582936e-05, -0.018560074269771576, -0.0009592937421984971, -0.19351720809936523, -0.012807730585336685, -9.48860906646587e-05, -5.090107151772827e-05, -0.07109181582927704, -0.0003121604095213115, -3.325883881188929e-05, -0.007033233065158129, -0.006192188709974289, -0.08289452642202377, -0.6310778260231018, -9.417489309271332e-06, -1.9907753085135482e-05, -0.0037520977202802896, -5.960462772236497e-07, -0.00011395759065635502, -0.007428405340760946, -4.577531944960356e-05, -6.556489552167477e-06, -0.024655023589730263, -0.006533571053296328, -0.14567594230175018, -0.09657345712184906, -0.02297182008624077, -0.005893472582101822, -0.022497311234474182, -0.04499422386288643, -6.544376083184034e-05, -0.0006255338666960597, -0.0010371787939220667, -0.7697681784629822, -0.012853040359914303, -1.6331539882230572e-05, -2.124727249145508, -1.5447434186935425, -0.4860065281391144, -0.016063909977674484, -0.03695979341864586, -0.0003219324571546167, -0.0034602549858391285, -0.28406476974487305, -0.011901560239493847, -0.10569310188293457, -1.563460350036621, -1.9625282287597656, -0.001722401357255876, -0.0029408561531454325, -0.05712784454226494, -0.5198102593421936, -7.271740287251305e-06, -6.83045873302035e-05, -0.03057154081761837, -7.497983460780233e-05, -0.0027251034043729305, -0.006056882906705141, -0.0003364712174516171, -0.00025817399728111923, -0.0018900641007348895, -0.0024563875049352646, -0.7156698107719421, -0.024496950209140778, -0.006889872252941132, -0.0014753182185813785, -0.003479262348264456, -0.0006061147432774305, -0.02318359911441803, -0.0882420688867569, -0.06772877275943756, -0.00036769305006600916, -0.00139318173751235, -0.0014194899704307318, -1.0764687061309814, -0.0977403074502945, -0.3200516700744629, -0.7075365781784058, -0.9503417015075684, -0.003316499525681138, -0.01507039088755846, -0.18084250390529633, -0.015048549510538578, -0.0314909890294075, -0.05365178361535072, -0.0028254371136426926, -0.018881000578403473, -0.0015950588276609778, -0.32540151476860046, -0.004709936212748289, -0.0009584600338712335, -0.0029709271620959044, -0.017313767224550247, -0.06767741590738297, -0.002493250882253051, -0.5175018906593323, -0.09229888767004013, -0.5001649260520935], "finish_reason": "stop"}], "metrics": {"energy": 502.10588882064826, "energy_per_token": 3.665006487741958, "time": 11.348347, "time_per_token": 0.0828346496350365}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f\"Error while deleting source folder: {e}\")\n        return False\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " while", " deleting", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -0.3426953852176666, -0.015348652377724648, -0.06366077065467834, -0.0001954841281985864, -0.0017007424030452967, -0.6849973201751709, -0.0065392558462917805, -0.0014732946874573827, -0.0009735850035212934, -0.2953173816204071, -0.0009109399979934096, -0.906694233417511, -6.806619057897478e-05, -0.0005644158809445798, -0.005032728426158428, -0.36818063259124756, -1.1086402082582936e-05, -5.006777428206988e-06, -0.45627662539482117, -0.0005708495154976845, -3.611976353568025e-05, -0.0034860337618738413, -4.756337511935271e-05, -5.722029527532868e-06, -6.151010165922344e-05, -0.4123497009277344, -3.3378546504536644e-06, -2.682172998902388e-05, -1.311301275563892e-06, -0.0003736513026524335, -0.00010215714428341016, -0.007823184132575989, -3.111314072157256e-05, -7.152531907195225e-06, -0.005651922430843115, -0.33880674839019775, -4.577531944960356e-05, -9.250213042832911e-05, -4.410734163684538e-06, -0.003454077523201704, -8.22540732769994e-06, -6.55629628454335e-05, -0.0062356675043702126, -2.312633478140924e-05, -6.6756979322235566e-06, -0.046223144978284836, -0.0049212281592190266, -0.10250971466302872, -0.034803055226802826, -1.0728830375228426e-06, -2.7418097943154862e-06, -0.00021371940965764225, -1.0728830375228426e-06, -4.51792984677013e-05, -0.0012034086976200342, -2.1934269170742482e-05, -2.622600959512056e-06, -0.006246329750865698, -0.004116039723157883, -1.2256810665130615, -0.000596107158344239, -0.034458521753549576, -0.03894313424825668, -0.036454636603593826, -0.00011789103882620111, -0.00330414273776114, -0.0006825978052802384, -0.35836392641067505, -0.002672911621630192, -0.11108706891536713, -0.004941512830555439, -0.36826246976852417, -2.3133342266082764, -0.23966237902641296, -0.4928044080734253, -0.0032900036312639713, -0.05467623472213745, -0.0009556017466820776, -0.3771505355834961, -0.009049827232956886, -0.0005828827270306647, -0.0020568659529089928, -0.004050385672599077, -0.01641225814819336, -0.0013388964580371976, -0.0012717501958832145, -0.215717151761055, -0.0036385541316121817, -0.050300437957048416, -0.007195510435849428, -0.5335282683372498, -0.021778244525194168, -0.5782244801521301], "finish_reason": "stop"}], "metrics": {"energy": 419.13089957427974, "energy_per_token": 3.742240174770355, "time": 9.2596445, "time_per_token": 0.08267539732142858}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist\")\n\n    # Check if the backup directory exists\n    if not os.path.exists(backup_dir):\n        os.makedirs(backup_dir)\n\n    # Copy the source folder to the backup directory\n    backup_folder = os.path.join(backup_dir, os.path.basename(src_folder))\n    shutil.copytree(src_folder, backup_folder)\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(\"Error deleting source folder\") from e\n\n    # Return True to indicate successful completion\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " backup", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Copy", " the", " source", " folder", " to", " the", " backup", " directory", "\n", "    ", "backup", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "folder", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "\"", "Error", " deleting", " source", " folder", "\"", ")", " from", " e", "\n", "\n", "    ", "#", " Return", " True", " to", " indicate", " successful", " completion", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.9034494161605835, -0.24291810393333435, -0.00682061119005084, -0.05262187495827675, -0.00013374387344811112, -0.0014019908849149942, -0.9635871052742004, -0.0014637719141319394, -0.0007470439304597676, -0.21552757918834686, -0.0008222059695981443, -0.0829639807343483, -2.716604232788086, -0.013970323838293552, -0.1184615045785904, -0.19232629239559174, -0.08438316732645035, -0.04458911344408989, -1.4114317893981934, -0.00028701478731818497, -0.022502440959215164, -0.01053415797650814, -0.0014671048847958446, -4.172316494077677e-06, -4.95898348162882e-05, -6.794906312279636e-06, -0.01696772314608097, -4.565611743601039e-05, -0.0007406114018522203, -1.8000440832111053e-05, -6.437280717364047e-06, -0.0013873485149815679, -6.5205356804654e-05, -0.0013802058529108763, -0.35190480947494507, -1.3828182090946939e-05, -0.03071640245616436, -3.182837463100441e-05, -9.107174992095679e-05, -0.00019047829846385866, -0.0008544846205040812, -2.658331868587993e-05, -1.549708758830093e-05, -0.00915177259594202, -0.01528819277882576, -0.02401595003902912, -0.001278179232031107, -0.023046845570206642, -1.9755356311798096, -0.050753552466630936, -0.06400411576032639, -0.003196252044290304, -0.054320190101861954, -0.003109503071755171, -0.014230440370738506, -0.0053413063287734985, -0.05229360982775688, -0.0005511910421773791, -2.245412826538086, -0.0028278145473450422, -1.2489774227142334, -0.07468844950199127, -0.04646305739879608, -4.0531076592742465e-06, -3.075552376685664e-05, -4.410734163684538e-06, -0.007897461764514446, -4.625213477993384e-05, -0.003055073320865631, -2.8967437174287625e-05, -7.748573807475623e-06, -0.0008274468709714711, -0.06650292873382568, -2.3603161025675945e-05, -5.018585216021165e-05, -1.6689286894688848e-06, -0.002942995633929968, -5.340433563105762e-05, -3.0040289857424796e-05, -0.0026475873310118914, -7.867782187531702e-06, -1.9073468138230965e-06, -0.006207827012985945, -0.0015262633096426725, -0.005786453373730183, -0.08173569291830063, -4.887569048150908e-06, -2.50339189733495e-06, -0.0014017528155818582, -0.00013791563105769455, -8.940656698541716e-06, -0.0006876011611893773, -7.510157047363464e-06, -3.099436753473128e-06, -2.9682672902708873e-05, -0.000996331567876041, -1.7881377516459906e-06, -0.0001472126314183697, -0.052003033459186554, -0.0006416169344447553, -0.021581102162599564, -0.00045348849380388856, -0.020934339612722397, -0.10462526232004166, -0.0005586970364674926, -0.03639291226863861, -0.0006424508756026626, -0.021356496959924698, -0.000379132863599807, -0.052727844566106796, -1.8596476365928538e-05, -5.602679812000133e-05, -0.001085764612071216, -0.03669840097427368, -2.3841855067985307e-07, -9.536738616588991e-07, -3.8265450712060556e-05, -2.145764938177308e-06, -3.1470757676288486e-05, -0.0011862630490213633, -1.07287787614041e-05, -3.3378546504536644e-06, -0.0016421893378719687, -0.0006893880781717598, -0.5650753974914551, -0.00034231049357913435, -0.05684598907828331, -0.060943882912397385, -0.02468421496450901, -0.00015686711412854493, -0.0022737146355211735, -0.000532842765096575, -0.4248724579811096, -0.07344374805688858, -0.001989886863157153, -1.0041097402572632, -0.3281429708003998, -0.2223949283361435, -0.10411685705184937, -0.0010028815595433116, -1.0318284034729004, -0.07962120324373245, -0.02350921742618084, -0.00022230061586014926, -0.0020753054413944483, -0.046117398887872696, -0.003237841185182333, -1.028011441230774, -0.34295615553855896, -0.04149944707751274, -1.5477536916732788, -0.06652936339378357, -1.8570730686187744, -0.581320583820343, -0.14744485914707184, -0.0006181474891491234, -0.006483590696007013, -0.0015657796757295728, -0.45226240158081055, -0.032471682876348495, -0.59921795129776], "finish_reason": "stop"}], "metrics": {"energy": 679.8120044555664, "energy_per_token": 3.6160213002955657, "time": 16.194078, "time_per_token": 0.08613871276595746}}
{"outputs": [{"text": "# Check if the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n\n    # Create the backup folder if it doesn't exist\n    if not os.path.exists(backup_dir):\n        os.makedirs(backup_dir)\n\n    # Get the current timestamp\n    timestamp = datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S\")\n\n    # Backup the source folder to the backup directory\n    try:\n        shutil.copytree(src_folder, os.path.join(backup_dir, f\"{src_folder}_{timestamp}\"))\n    except Exception as e:\n        print(f\"Error backing up the source folder: {str(e)}\")\n        return False\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f\"Error deleting the source folder: {str(e)}\")\n        return False", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " backup", " folder", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "\n", "    ", "#", " Get", " the", " current", " timestamp", "\n", "    ", "timestamp", " =", " datetime", ".", "now", "()", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "_", "%", "H", "-%", "M", "-%", "S", "\"", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", " to", " the", " backup", " directory", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " f", "\"", "{", "src", "_", "folder", "}_{", "timestamp", "}\"", "))", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " backing", " up", " the", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " the", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -0.07272005826234818, -0.1608637273311615, -0.022357316687703133, -0.009101568721234798, -0.011039843782782555, -0.07336355000734329, -0.0013704441953450441, -0.006843462120741606, -0.03578832745552063, -0.0020584126468747854, -4.410734163684538e-06, -0.0002834395272657275, -2.539125671319198e-05, -0.08503583818674088, -7.176141662057489e-05, -0.0011177966371178627, -5.8410845667822286e-05, -3.194758028257638e-05, -0.005093337036669254, -0.000731558189727366, -0.001880307332612574, -0.08885285258293152, -0.0010055014863610268, -4.0531076592742465e-06, -0.0570351779460907, -0.5339959859848022, -0.06490998715162277, -0.38799870014190674, -0.00682451855391264, -0.6044217348098755, -0.00013124081306159496, -0.001716808183118701, -5.8530047681415454e-05, -5.960446742392378e-06, -0.0015231685247272253, -0.03031540848314762, -0.0001284993631998077, -0.0010825494537129998, -0.21849685907363892, -0.0027903690934181213, -0.00030989613151177764, -0.0008049347088672221, -0.17883740365505219, -0.0008183944155462086, -0.16150395572185516, -1.6872502565383911, -0.7962231040000916, -0.1384475827217102, -1.3272043466567993, -0.32359638810157776, -0.005011259578168392, -0.22191932797431946, -0.00030655929003842175, -1.8358061424805783e-05, -0.023940881714224815, -0.039819180965423584, -0.00030429501202888787, -0.21909426152706146, -0.0018092705868184566, -0.0007123793475329876, -5.8412379075889476e-06, -3.707340147229843e-05, -4.172316494077677e-06, -0.0022264947183430195, -2.47952248173533e-05, -0.004022721666842699, -2.0146166207268834e-05, -0.0006399490521289408, -0.000358159770257771, -6.8662193370983e-05, -0.0005222387262620032, -0.01229128148406744, -5.364403477869928e-06, -0.04597509279847145, -1.4305104514278355e-06, -7.211902266135439e-05, -4.541770613286644e-05, -9.822363062994555e-05, -1.2397689715726301e-05, -6.9141146923357155e-06, -0.006535702850669622, -0.00033087024348787963, -0.009097316302359104, -0.0009093916742131114, -0.014425395056605339, -2.167729377746582, -0.06419239938259125, -1.179065227508545, -1.3116750717163086, -0.6612238883972168, -0.00033122775494121015, -0.12762773036956787, -0.0018260485958307981, -0.5305803418159485, -0.00031144535751082003, -0.39576470851898193, -0.004703529179096222, -0.006825583986938, -0.00932646170258522, -1.1920928244535389e-07, -0.4711882472038269, -0.0074472189880907536, -0.0010124086402356625, -0.014380626380443573, -1.585781216621399, -0.0002321927313460037, -4.494089080253616e-05, -0.00020930961181875318, -0.2237701117992401, -1.597391747054644e-05, -6.01988795096986e-05, -0.02012418769299984, -2.074220174108632e-05, -0.002581836888566613, -1.811964830267243e-05, -0.005747340619564056, -5.972207145532593e-05, -0.001095648156479001, -0.01630108244717121, -0.00019572250312194228, -0.002483856864273548, -2.215257167816162, -0.028706932440400124, -0.09238769114017487, -0.002634627977386117, -1.8255624771118164, -0.026597077026963234, -0.20177055895328522, -0.26546362042427063, -0.4628596007823944, -0.0003980797773692757, -2.7392618656158447, -3.397406908334233e-05, -6.723177648382261e-05, -0.0011551857460290194, -0.21004168689250946, -6.437280717364047e-06, -2.7418097943154862e-06, -0.03841603547334671, -0.0004142856632824987, -2.2649508537142538e-05, -0.010537107475101948, -1.3708974620385561e-05, -7.152555099310121e-07, -3.7431014789035544e-05, -0.03159263730049133, -6.318072337307967e-06, -1.680836794548668e-05, -1.2636104656849056e-05, -4.339123915997334e-05, -5.6622808187967166e-05, -0.021509351208806038, -9.775113539944869e-06, -4.887569048150908e-06, -0.0004536076739896089, -0.2203271985054016, -0.04200434684753418, -0.1199759840965271, -0.8917902112007141, -5.3165931603871286e-05, -6.890059739816934e-05, -0.29767870903015137, -0.00018630675913300365, -0.01983650028705597, -0.019902879372239113, -0.0008503158460371196, -0.15847338736057281, -0.00043871314846910536, -0.1846884787082672, -0.019458245486021042, -0.02083510532975197, -0.0001436368766007945, -0.0015699454816058278, -0.00032586511224508286, -0.5116855502128601, -0.0003833036171272397, -0.024118591099977493, -0.0007962394156493247, -0.1868649572134018, -0.3668290674686432, -7.116541382856667e-05, -2.0351109504699707, -0.16358043253421783, -0.000945240433793515, -0.02004123292863369, -0.00030870441696606576, -0.8003816604614258, -5.340433563105762e-05, -1.7523612768854946e-05, -0.0005637010326609015, -0.0032406931277364492, -0.00018070495571009815, -0.0005920564290136099, -0.02121470868587494, -0.05164026468992233, -0.004007880110293627, -0.0019374187104403973, -0.008797340095043182, -0.0005977750988677144, -0.009750360623002052, -0.05135119706392288, -0.00028046013903804123, -0.03397848457098007, -0.0003771070914808661, -0.04746442660689354, -0.00018368464952800423, -0.005185013171285391, -1.07287787614041e-05, -5.829164365422912e-05, -0.0003190723655279726, -0.017836879938840866, -2.3841855067985307e-07, -1.1920922133867862e-06, -3.0278701160568744e-05, -4.768370445162873e-07, -2.1934269170742482e-05, -0.0005679901223629713, -1.597391747054644e-05, -1.1920928244535389e-07, -0.003668366465717554, -0.0007594323833473027, -1.3575410842895508, -0.41409894824028015, -0.001526977401226759, -0.015374477952718735, -0.0022251864429563284, -0.00010287232726113871, -0.013446241617202759, -0.002506093354895711, -0.00014172980445437133, -4.5298504119273275e-05, -0.0006885541952215135, -0.000271521887043491, -0.007965820841491222, -0.00010871296399272978, -0.001311752712354064, -9.929640509653836e-05, -0.009337681345641613, -0.00848474446684122, -0.005145283881574869, -0.0015509016811847687, -0.00021407696476671845, -0.005840616300702095, -0.00028606137493625283, -0.0004866131057497114, -7.033323527139146e-06, -5.8412379075889476e-06, -2.95634672511369e-05, -0.00015352977789007127, -0.00011932138295378536, -0.0005168771021999419, -0.04068679362535477, -0.003476648824289441, -0.0003657863999251276], "finish_reason": "length"}], "metrics": {"energy": 903.5294513015747, "energy_per_token": 3.529411919146776, "time": 21.844387, "time_per_token": 0.08532963671875}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder {src_folder} does not exist.\")\n\n    src_folder_name = os.path.basename(src_folder)\n    shutil.make_archive(os.path.join(backup_dir, src_folder_name), 'zip', src_folder)\n\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"Error while deleting source folder {src_folder}: {e}\")\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "src", "_", "folder", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "_", "name", ")", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", " while", " deleting", " source", " folder", " {", "src", "_", "folder", "}:", " {", "e", "}\"", ")", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -0.43118491768836975, -0.10489750653505325, -0.44068312644958496, -0.010457481257617474, -1.0588459968566895, -0.0014615101972594857, -2.8967437174287625e-05, -2.7418097943154862e-06, -0.003457047278061509, -0.03490079566836357, -0.00020132421923335642, -0.0013333010720089078, -0.29482144117355347, -0.0055698915384709835, -0.00036006642039865255, -0.0006100462633185089, -0.31667962670326233, -0.0009658439084887505, -3.135645866394043, -0.02623077481985092, -0.7971570491790771, -0.12170806527137756, -0.600426435470581, -0.0016379047883674502, -0.0064794453792274, -5.125986263010418e-06, -3.58813522325363e-05, -3.2186455882765586e-06, -0.019708288833498955, -2.3841855067985307e-07, -2.098061486321967e-05, -0.5960007309913635, -7.152531907195225e-06, -6.198863957251888e-06, -0.5573408603668213, -0.010938208550214767, -0.05773147940635681, -2.189518451690674, -0.0016024379292503, -0.0004275123355910182, -0.8543780446052551, -8.344646857949556e-07, -5.495397272170521e-05, -0.000573351513594389, -0.15692168474197388, -3.814689989667386e-06, -1.07287787614041e-05, -3.3378546504536644e-06, -9.822363062994555e-05, -0.00011932138295378536, -0.0029910134617239237, -2.6702524337451905e-05, -1.4424220353248529e-05, -0.00029202012228779495, -0.020441342145204544, -4.768360213347478e-06, -2.2291887944447808e-05, -0.0017435838235542178, -4.768360213347478e-06, -0.011989434249699116, -0.0005245024804025888, -0.21333128213882446, -0.011715891771018505, -0.00011729506513802335, -3.516612196108326e-05, -0.05042852833867073, -0.0001137191939051263, -6.556489552167477e-06, -0.009611639194190502, -0.005435094237327576, -0.24453622102737427, -0.0006444760947488248, -0.16916050016880035, -3.504691630951129e-05, -0.00018451895448379219, -0.0015550674870610237, -0.04203200712800026, -7.152555099310121e-07, -2.50339189733495e-06, -0.0002783149539027363, -7.152555099310121e-07, -6.806619057897478e-05, -0.002559602027758956, -9.417489309271332e-06, -1.9073468138230965e-06, -0.004016191698610783, -0.0025874252896755934, -0.6880224943161011, -0.0001731960946926847, -0.021628232672810555, -0.0371670238673687, -0.0368429496884346, -0.00013386306818574667, -0.0024261821527034044, -0.0005154472892172635, -0.8350973129272461, -0.033874087035655975, -0.0011759040644392371, -0.019076921045780182, -0.0065673235803842545, -0.37935492396354675, -1.792965054512024, -0.015075557865202427, -0.4909234344959259, -0.0015262633096426725, -0.3447342813014984, -0.0013683013385161757, -1.5616295058862306e-05, -4.2199197196168825e-05, -0.022927898913621902, -0.0023268787190318108, -0.583895742893219, -0.0032222752925008535, -0.005057280883193016, -0.06468351185321808, -2.4329209327697754, -1.029597282409668, -0.013051087968051434, -0.5026215314865112, -0.034147050231695175, -0.5327354073524475], "finish_reason": "stop"}], "metrics": {"energy": 500.09020036125213, "energy_per_token": 3.597771225620519, "time": 11.571942, "time_per_token": 0.08325138129496402}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"The source folder does not exist.\")\n    shutil.make_archive(os.path.join(backup_dir, 'backup'), 'zip', src_folder)\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        print(f\"Error deleting source folder: {str(e)}\")\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " '", "backup", "')", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " deleting", " source", " folder", ":", " {", "str", "(", "e", ")}", "\"", ")", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -1.516790509223938, -0.29297080636024475, -0.006623694207519293, -0.06896980851888657, -0.00018404220463708043, -0.001715261023491621, -0.18265751004219055, -0.013599132187664509, -0.00120698066893965, -0.0009581027552485466, -1.2815030813217163, -1.4709787368774414, -6.0437283536884934e-05, -4.660974445869215e-05, -1.325687289237976, -2.3841855067985307e-07, -3.957670196541585e-05, -0.005867874715477228, -0.36689335107803345, -2.729855441430118e-05, -2.992108420585282e-05, -7.390948667307384e-06, -0.014453830197453499, -0.00032431588624604046, -0.005140777211636305, -4.6132929128361866e-05, -2.098061486321967e-05, -0.0010946955299004912, -2.393177032470703, -0.12800413370132446, -0.03149156644940376, -0.00033301531220786273, -0.0329718180000782, -0.013359436765313148, -7.533743337262422e-05, -4.625213477993384e-05, -0.044768549501895905, -0.00027724236133508384, -3.790783375734463e-05, -0.006857432425022125, -0.008608375675976276, -0.014705715700984001, -0.5483279824256897, -4.053033626405522e-05, -0.00019453064305707812, -0.0019766809418797493, -0.05052974075078964, -1.311301275563892e-06, -3.576272320060525e-06, -0.0007284610182978213, -1.5497195136049413e-06, -0.00016485285595990717, -0.003172723576426506, -3.2305197237292305e-05, -1.3589766240329482e-05, -0.0052713449113070965, -0.003596268827095628, -0.5101635456085205, -0.0002675890573300421, -0.03713417425751686, -0.059163760393857956, -0.042415305972099304, -0.00020346954988781363, -0.0026442583184689283, -0.0006547214579768479, -0.4345455467700958, -0.003945781383663416, -0.21069484949111938, -0.008193806745111942, -0.39072316884994507, -0.30153030157089233, -1.1720119714736938, -0.002788467099890113, -0.05837838724255562, -0.0007195267826318741, -1.2673041820526123, -0.0001515035255579278, -4.935142715112306e-05, -0.0007675323868170381, -0.0021801055409014225, -0.0006922471220605075, -0.0015092422254383564, -0.0047048344276845455, -0.019282745197415352, -0.0011941214324906468, -0.0015520919114351273, -0.011553286574780941, -0.07088839262723923, -0.005690090823918581, -0.532759428024292, -0.03917299211025238, -0.7597845196723938], "finish_reason": "stop"}], "metrics": {"energy": 404.2273112888338, "energy_per_token": 3.641687489088593, "time": 9.248304, "time_per_token": 0.08331805405405404}}
{"outputs": [{"text": "# Check that the source folder exists\n    if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist\")\n    try:\n        # Create a backup of the source folder\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n        # Delete the source folder\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        raise Exception(f\"An error occurred while deleting the source folder: {e}\")\n    return True", "tokens": ["#", " Check", " that", " the", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "#", " Create", " a", " backup", " of", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "        ", "#", " Delete", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.0445857048034668, -0.3562227487564087, -2.895226001739502, -0.03206007927656174, -0.023250572383403778, -0.008588519878685474, -0.010682540945708752, -0.07478225976228714, -0.0015022194711491466, -0.010545128956437111, -0.022386109456419945, -0.002085298066958785, -7.629365427419543e-06, -0.00026294111739844084, -2.0861407392658293e-05, -0.08921851217746735, -9.667406266089529e-05, -0.0010742137674242258, -5.7338023907504976e-05, -5.1973900554003194e-05, -0.012427041307091713, -0.0007788485381752253, -0.002025339985266328, -0.039531029760837555, -0.0009683449170552194, -4.172316494077677e-06, -0.07361896336078644, -1.4481533765792847, -0.28332117199897766, -0.004726428538560867, -0.06103338301181793, -8.630380034446716e-05, -0.0007737264968454838, -0.8497082591056824, -0.0015274535398930311, -0.0007046362152323127, -1.5869719982147217, -2.5265159606933594, -0.00044943721150048077, -0.002877739956602454, -0.015086830593645573, -0.039679184556007385, -1.6981028318405151, -0.45651906728744507, -0.6466756463050842, -0.3300788998603821, -0.0015140033792704344, -0.031178129836916924, -0.0017483439296483994, -0.5229480266571045, -0.0009706076816655695, -0.12773390114307404, -2.729855441430118e-05, -7.390948667307384e-06, -0.13028521835803986, -0.000878663151524961, -2.372236667724792e-05, -0.0018534163245931268, -4.9828242481453344e-05, -3.814689989667386e-06, -0.0001147919538198039, -0.24067355692386627, -3.099436753473128e-06, -2.6464111215318553e-05, -8.583032467868179e-06, -0.0003122795606032014, -0.00019178935326635838, -0.023642530664801598, -3.93382906622719e-05, -1.3351351299206726e-05, -0.00458012567833066, -0.5904827117919922, -1.2755313036905136e-05, -7.748303323751315e-05, -6.079655122448457e-06, -0.002866566414013505, -5.364403477869928e-06, -7.748303323751315e-05, -0.0032506741117686033, -1.3112935448589269e-05, -2.50339189733495e-06, -0.060668714344501495, -0.0007204797584563494, -0.14016404747962952, -0.01935652643442154, -0.06370081752538681, -0.0005260513862594962, -0.06961871683597565, -0.0005185451591387391, -0.031198697164654732, -0.0004994813934899867, -0.026723943650722504, -1.6689286894688848e-06, -2.622600959512056e-06, -9.274052717955783e-05, -3.576272320060525e-06, -7.486063259420916e-05, -0.001447463990189135, -5.185469490243122e-05, -4.410734163684538e-06, -0.004596857354044914, -0.0004259632551111281, -1.1943080425262451, -0.008918097242712975, -0.032669804990291595, -0.0600024089217186, -0.04867817088961601, -0.0002134810492862016, -0.0053151012398302555, -0.001209600013680756, -1.2940421104431152, -0.10349157452583313, -0.0029502459801733494, -0.2840704321861267, -0.006076551973819733, -1.8671915531158447, -0.005034151952713728, -0.013464707881212234, -0.16557733714580536, -0.07071024924516678, -0.04644109681248665, -0.04054245352745056, -0.00268503837287426, -0.018256602808833122, -0.0015668508131057024, -0.3991432189941406, -0.0042913733050227165, -0.004354875069111586, -0.03471336141228676, -0.11892562359571457, -0.27888548374176025, -0.0071301767602562904, -0.5042497515678406, -0.03872193768620491, -0.6675029993057251], "finish_reason": "stop"}], "metrics": {"energy": 458.91806403350853, "energy_per_token": 3.399393066914878, "time": 11.36203, "time_per_token": 0.08416318518518519}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"The specified source folder does not exist.\")\n\n    # Back up the source folder\n    src_folder_name = os.path.basename(os.path.normpath(src_folder))\n    dst_folder = os.path.join(backup_dir, src_folder_name)\n    try:\n        shutil.copytree(src_folder, dst_folder)\n        print(f\"Folder '{src_folder}' backed up successfully.\")\n    except Exception as e:\n        print(f\"Error while backing up the folder: {e}\")\n\n    # Delete the source folder\n    try:\n        shutil.rmtree(src_folder)\n        print(f\"Source folder '{src_folder}' deleted successfully.\")\n        return True\n    except Exception as e:\n        print(f\"Error while deleting the source folder: {e}\")\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " specified", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Back", " up", " the", " source", " folder", "\n", "    ", "src", "_", "folder", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "os", ".", "path", ".", "norm", "path", "(", "src", "_", "folder", "))", "\n", "    ", "dst", "_", "folder", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " src", "_", "folder", "_", "name", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " dst", "_", "folder", ")", "\n", "        ", "print", "(", "f", "\"", "Folder", " '", "{", "src", "_", "folder", "}'", " backed", " up", " successfully", ".", "\"", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " while", " backing", " up", " the", " folder", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "print", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " deleted", " successfully", ".", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " while", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -1.0771046876907349, -1.516790509223938, -1.8778058290481567, -0.13398423790931702, -0.006879808846861124, -0.012591388076543808, -0.0001461399078834802, -0.0008453133050352335, -0.18474674224853516, -0.006676272489130497, -0.0009860896971076727, -0.0008329259580932558, -0.26889169216156006, -0.0008916454971767962, -1.6168535947799683, -1.863171100616455, -0.5536683797836304, -0.11730512976646423, -0.16009745001792908, -0.009178114123642445, -0.47703102231025696, -0.0015589953400194645, -3.610891819000244, -0.014070241712033749, -0.42402639985084534, -0.013081209734082222, -0.3677341639995575, -0.0016950300196185708, -0.00820113718509674, -6.6756979322235566e-06, -1.645074735279195e-05, -1.7881377516459906e-06, -0.020420553162693977, -1.1920928244535389e-07, -2.4437606043647975e-05, -0.8348010182380676, -6.6756979322235566e-06, -3.099436753473128e-06, -2.3841830625315197e-06, -0.0439375601708889, -2.7418097943154862e-06, -1.823885577323381e-05, -0.0006836699321866035, -1.168244216387393e-05, -4.529942543740617e-06, -0.0002115741081070155, -0.013243920169770718, -0.003931413404643536, -2.6508378982543945, -0.06814789026975632, -0.2157391607761383, -0.11501790583133698, -0.009077469818294048, -5.722029527532868e-06, -2.8967437174287625e-05, -4.291525328881107e-06, -0.0032611305359750986, -0.00012587709352374077, -0.0028016623109579086, -1.2516897186287679e-05, -4.0531076592742465e-06, -0.00112160702701658, -0.016550039872527122, -2.50339189733495e-06, -1.7762025890988298e-05, -0.0004439560289029032, -7.390948667307384e-06, -0.018816424533724785, -0.005183353088796139, -0.08064557611942291, -1.3242840766906738, -3.2543604902457446e-05, -0.0002696150622796267, -0.0012166248634457588, -0.04743987321853638, -4.0531076592742465e-06, -2.145764938177308e-06, -0.010331599973142147, -0.00010513706365600228, -1.3828182090946939e-05, -0.0017798787448555231, -4.279521817807108e-05, -5.960446742392378e-06, -0.00016532962035853416, -0.0037847571074962616, -1.9073304429184645e-05, -4.291525328881107e-06, -0.06289929151535034, -0.0023514972999691963, -2.0541183948516846, -0.2454455941915512, -0.007888000458478928, -0.12803706526756287, -0.028778981417417526, -2.4624717235565186, -0.812534511089325, -0.0001394651480950415, -0.0052198790945112705, -1.4662635294371285e-05, -6.19869097135961e-05, -0.5692582130432129, -0.8028843402862549, -0.0003212174342479557, -1.0031529664993286, -1.2566970586776733, -0.028409305959939957, -0.00041059168870560825, -0.0015093612018972635, -0.0679575651884079, -0.0002057340752799064, -0.17701944708824158, -0.010699407197535038, -0.03741072490811348, -0.0003134713042527437, -0.0007765853079035878, -0.00022706791060045362, -0.06519002467393875, -0.0001951265730895102, -0.01652705855667591, -0.0003406421164982021, -0.40593674778938293, -2.052827835083008, -0.046085067093372345, -0.00016258825780823827, -0.6871435642242432, -0.03311564028263092, -0.08422154933214188, -0.0008401916129514575, -0.7478037476539612, -0.007577249314635992, -0.00029273517429828644, -0.0003131137927994132, -1.571350336074829, -0.004993230104446411, -0.020425574854016304, -0.042065154761075974, -0.0027545862831175327, -0.03904620185494423, -0.0007148809381760657, -0.01739027164876461, -0.0005353448214009404, -0.017096873372793198, -2.9682672902708873e-05, -4.732496745418757e-05, -0.00042846560245379806, -0.03891618922352791, -3.576278118089249e-07, -8.344646857949556e-07, -4.124556289752945e-05, -3.576278118089249e-07, -3.361645576660521e-05, -0.0022934582084417343, -1.728519782773219e-05, -1.9073468138230965e-06, -0.005780764389783144, -0.001973468577489257, -0.012458711862564087, -0.009944655932486057, -0.00013314791431184858, -0.007382374722510576, -0.00014900050882715732, -2.2042534351348877, -0.0012997282901778817, -0.0028047531377524137, -2.1934269170742482e-05, -0.000766102981287986, -1.585470999998506e-05, -1.9073468138230965e-06, -0.0015320956008508801, -0.045704539865255356, -0.0043599787168204784, -0.0021063541062176228, -0.0008636558777652681, -7.56950321374461e-05, -0.000188332938705571, -0.4228214919567108, -0.018780861049890518, -0.0010967198759317398, -0.011024869978427887, -0.0013524680398404598, -5.9960475482512265e-05, -0.015238765627145767, -0.002435933565720916, -0.0003129946126136929, -4.8397800128441304e-05, -0.000339569611242041, -0.00018869050836656243, -0.006735715549439192, -8.666139910928905e-05, -0.0020842275116592646, -0.00011312322021694854, -0.01464521698653698, -0.012985194101929665, -0.0011594723910093307, -0.007599491626024246, -0.028865499421954155, -0.0005637010326609015, -0.00543390866369009, -0.00030524839530698955, -0.00047910655848681927, -0.00043442347669042647, -0.0006049233488738537, -0.003197559155523777, -0.07291336357593536, -0.012674258090555668, -0.0007608617888763547, -0.32956552505493164, -0.03579465299844742, -1.876946210861206], "finish_reason": "stop"}], "metrics": {"energy": 780.8886928367614, "energy_per_token": 3.4400382944350723, "time": 19.342173, "time_per_token": 0.08520781057268723}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n    try:\n        # Backup source folder to backup directory\n        shutil.copytree(src_folder, os.path.join(backup_dir, 'backup'))\n        # Delete source folder\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        raise Exception(f\"Error: {e}\")", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "#", " Backup", " source", " folder", " to", " backup", " directory", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " '", "backup", "'))", "\n", "        ", "#", " Delete", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Error", ":", " {", "e", "}\"", ")"], "logprobs": [-0.8864912986755371, -0.15093234181404114, -0.01061307080090046, -2.6940935640595853e-05, -0.0006269635050557554, -8.702239938429557e-06, -0.043545372784137726, -0.00013028726971242577, -0.0029487009160220623, -4.6967357775429264e-05, -4.8040190449682996e-05, -0.008213551715016365, -0.0059697893448174, -0.002742460463196039, -0.07479940354824066, -0.0013754441170021892, -6.437280717364047e-06, -0.10252337902784348, -0.43118491768836975, -0.10489750653505325, -0.44068312644958496, -0.010457481257617474, -0.7157216668128967, -0.00023731753753963858, -0.00285574933513999, -3.576214658096433e-05, -6.556489552167477e-06, -0.0020632902160286903, -0.024426572024822235, -0.00021288513380568475, -0.0010438475292176008, -0.2165975123643875, -0.0038694285321980715, -0.0004010588163509965, -0.0007969540893100202, -1.403390645980835, -0.6952641010284424, -7.176141662057489e-05, -0.00039915222441777587, -0.003805539570748806, -2.415780544281006, -1.1042035818099976, -2.6600754261016846, -0.013419189490377903, -1.202836036682129, -0.49779248237609863, -0.05902498587965965, -0.11260519176721573, -0.0009279712685383856, -0.14665834605693817, -3.540453326422721e-05, -1.1324817933200393e-05, -0.08960387855768204, -0.0004887578543275595, -2.2291887944447808e-05, -0.0022832294926047325, -3.45700973412022e-05, -7.390948667307384e-06, -6.437094270950183e-05, -0.20982491970062256, -3.3378546504536644e-06, -2.0146166207268834e-05, -5.722029527532868e-06, -0.0004457433824427426, -0.0001102625101339072, -0.010272488929331303, -3.802703940891661e-05, -8.22540732769994e-06, -0.008088570088148117, -2.678229570388794, -0.5900967717170715, -0.1821068972349167, -0.001420085085555911, -0.16369429230690002, -0.018397290259599686, -0.05085190385580063, -0.06328777223825455, -0.0008294717408716679, -0.02938561700284481, -0.000359351426595822, -0.051423218101263046, -1.1920922133867862e-06, -2.3841830625315197e-06, -6.758938252460212e-05, -1.7881377516459906e-06, -0.00011681827891152352, -0.00119066855404526, -3.290122185717337e-05, -2.145764938177308e-06, -0.004336833953857422, -0.0007377525325864553, -0.23833630979061127, -0.0775437131524086, -0.0013821106404066086, -0.0071700639091432095, -0.00189482350833714, -0.0003369478799868375, -0.012530761770904064, -0.024689681828022003, -0.024781905114650726, -0.00012492353562265635, -0.002915657591074705, -0.0004940004437230527, -1.3620188236236572, -0.1204042136669159, -0.004976268392056227, -0.03730461746454239, -0.023104391992092133, -0.3312883675098419, -2.7217459678649902, -0.2635486423969269, -0.43992844223976135, -0.024614082649350166, -0.11466389894485474], "finish_reason": "stop"}], "metrics": {"energy": 405.04377377605425, "energy_per_token": 3.553015559439072, "time": 9.468022, "time_per_token": 0.0830528245614035}}
