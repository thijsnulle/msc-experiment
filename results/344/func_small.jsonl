{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f'Source folder does not exist: {src_folder}')\n\n    shutil.make_archive(backup_dir, 'zip', src_folder)\n\n    try:\n        os.remove(src_folder)\n        return True\n    except Exception as e:\n        print(f'Error deleting source folder: {src_folder}\\n{e}')\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Source", " folder", " does", " not", " exist", ":", " {", "src", "_", "folder", "}", "')", "\n", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Error", " deleting", " source", " folder", ":", " {", "src", "_", "folder", "}\\", "n", "{", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-0.6623913049697876, -0.07533365488052368, -0.017953038215637207, -9.536697689327411e-06, -9.023735765367746e-05, -0.0008950994815677404, -0.2617756128311157, -0.00018952481332235038, -0.002277163788676262, -3.2782016205601394e-05, -5.590759246842936e-05, -0.0014215136179700494, -0.005841446109116077, -0.0006392342620529234, -0.012773951515555382, -0.01515610795468092, -1.8596476365928538e-05, -0.8936046361923218, -0.38236868381500244, -0.8192961812019348, -0.6434894800186157, -0.015158808790147305, -0.928161084651947, -0.0003326578007545322, -0.005678000394254923, -0.04595596343278885, -0.007345809601247311, -0.003555882256478071, -0.0001433984871255234, -0.000327652640407905, -0.017430689185857773, -0.027078578248620033, -0.0015923213213682175, -0.4420448839664459, -0.0002649671514518559, -1.635963797569275, -0.00013934595335740596, -2.2291887944447808e-05, -0.3771906793117523, -1.9073468138230965e-06, -0.0014072287594899535, -0.024407610297203064, -0.1736968755722046, -6.735097849741578e-05, -0.0009153467253781855, -0.008495263755321503, -0.05180010199546814, -0.5501455664634705, -0.008161881938576698, -0.00021169328829273582, -0.06558988988399506, -0.0002516191452741623, -4.470248313737102e-05, -0.023481037467718124, -0.02745964750647545, -1.42313551902771, -0.001538523007184267, -0.3113458454608917, -0.00011419598013162613, -0.0007675323868170381, -0.0008947421447373927, -0.7019427418708801, -1.0847986231965479e-05, -0.9133697152137756, -0.0002051381452474743, -0.0016265984158962965, -4.3987260141875595e-05, -1.2278481335670222e-05, -0.0005679901223629713, -0.008845077827572823, -1.2366173267364502, -0.07110347598791122, -0.004381461534649134, -0.0029043657705187798, -0.054269153624773026, -0.0015061474405229092, -0.08462022989988327, -0.27581271529197693, -0.1893993765115738, -5.817244164063595e-05, -0.005586369428783655, -0.0003992714046034962, -0.46525493264198303, -0.12189940363168716, -0.06991355121135712, -0.0703103169798851, -0.4468519687652588, -1.089601755142212, -0.14434190094470978, -0.0035531502217054367, -0.013423658907413483, -0.0014497257070615888, -0.631191074848175, -0.00011789103882620111, -0.0001397035230183974, -2.687797784805298, -0.15202274918556213, -0.11930320411920547, -0.2008613497018814, -0.055160537362098694, -0.0009872806258499622, -0.012773598544299603, -0.02133362554013729, -0.01728787273168564, -0.0004059444472659379, -0.7329332828521729, -0.014436205849051476, -2.934661626815796], "finish_reason": "stop"}], "metrics": {"energy": 137.23120245361326, "energy_per_token": 1.2706592819779006, "time": 5.667437, "time_per_token": 0.05247626851851851}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.make_archive(os.path.join(backup_dir,\n                                        '{}.tar.gz'.format(os.path.basename(src_folder))), 'gztar', src_folder)\n        shutil.rmtree(src_folder)\n        print(\"Source folder backed up and deleted successfully.\")\n        return True\n    except Exception:\n        print(\"An error occurred while backing up and deleting the source folder.\")\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", "\n", "                ", "                ", "        ", "'", "{}", ".", "tar", ".", "gz", "'", ".", "format", "(", "os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "print", "(", "\"", "Source", " folder", " backed", " up", " and", " deleted", " successfully", ".", "\"", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", " while", " backing", " up", " and", " deleting", " the", " source", " folder", ".", "\"", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -1.3043959140777588, -0.5487631559371948, -0.006466417107731104, -0.05229360982775688, -9.011816291604191e-05, -0.002009755000472069, -0.342553973197937, -0.005334547720849514, -0.00010287232726113871, -0.0025894464924931526, -0.3792317509651184, -0.00026639728457666934, -0.7176259756088257, -6.067568756407127e-05, -0.00033766290289349854, -0.0014373458689078689, -0.08744022250175476, -2.7656173188006505e-05, -6.198863957251888e-06, -0.3499388098716736, -1.5497195136049413e-06, -0.0015053142560645938, -0.022195732221007347, -2.9731905460357666, -0.0001081169830285944, -0.00016127715934999287, -0.001053374377079308, -0.4049821197986603, -0.0009485750924795866, -0.02481830306351185, -1.3351351299206726e-05, -8.141662692651153e-05, -0.003962285816669464, -3.310673475265503, -0.07581811398267746, -0.12464097142219543, -2.5323948860168457, -3.0608584880828857, -1.9592201709747314, -0.2569751441478729, -0.9299461245536804, -0.3212050199508667, -0.005680134054273367, -0.008939128369092941, -0.004017616156488657, -0.0015807764139026403, -0.0159824937582016, -0.6466619372367859, -0.0015488782664760947, -0.0004505096294451505, -0.0013577061472460628, -0.05284804478287697, -1.9073468138230965e-06, -0.0002493547508493066, -0.017142225056886673, -0.0009215399040840566, -5.304672595229931e-05, -0.07562825083732605, -0.003642473602667451, -0.7802553772926331, -0.07423697412014008, -0.006084490567445755, -0.003392300335690379, -0.00048029806930571795, -0.20922312140464783, -0.0022433847188949585, -6.69933797325939e-05, -0.03288738429546356, -0.005307867657393217, -0.1259109228849411, -1.2622716426849365, -2.9444261599564925e-05, -6.925819616299123e-05, -0.0026223815511912107, -3.707340147229843e-05, -0.00033909291960299015, -0.00875172670930624, -8.606540359323844e-05, -1.0847986231965479e-05, -0.03432318568229675, -0.007899354211986065, -0.34100931882858276, -2.940518856048584, -0.35937657952308655, -0.13965576887130737, -1.5148059129714966, -0.014957420527935028, -1.3075168132781982, -0.006780710071325302, -0.9620757102966309, -0.019982459023594856, -0.13268399238586426, -0.1127089262008667, -0.008496091701090336, -0.0013468727702274919, -0.001678725820966065, -0.15009388327598572, -0.009965901263058186, -0.004076742567121983, -0.002619171282276511, -0.07968417555093765, -0.0018120075110346079, -0.05228535085916519, -2.136890411376953, -0.008532142266631126, -0.0005715643637813628, -0.16975529491901398, -0.016825545579195023, -0.011521940119564533, -0.46276789903640747, -0.023373905569314957, -0.010026919655501842, -0.06433034688234329, -1.1950492858886719, -0.0022852513939142227, -0.33712339401245117, -0.0023752828128635883, -0.02552298828959465, -0.008159280754625797, -0.0017260904423892498, -0.01517970860004425, -0.01749289222061634, -0.005075783468782902, -0.009476440958678722, -0.013977965340018272, -0.019095752388238907, -0.0005887205479666591, -1.3269679546356201, -1.0728830375228426e-06, -3.576278118089249e-07, -1.490105023549404e-05, -0.00022659118985757232, -0.2512003779411316], "finish_reason": "stop"}], "metrics": {"energy": 179.12244398498535, "energy_per_token": 1.1862413508939427, "time": 6.9375267, "time_per_token": 0.04594388543046358}}
{"outputs": [{"text": "if os.path.exists(src_folder):\n        shutil.make_archive(backup_dir, 'zip', src_folder)\n        os.remove(src_folder)\n        return True\n    raise ValueError(\"Source folder does not exist.\")\n    # raise Exception(\"An error occurred while deleting the source folder.\")", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " raise", " Exception", "(", "\"", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ".", "\"", ")", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -2.977005958557129, -1.549708758830093e-05, -0.0008918836829252541, -0.002674694871529937, -0.1729235202074051, -0.0002803409588523209, -0.007089104037731886, -4.6132929128361866e-05, -7.509902934543788e-05, -0.06837369501590729, -0.014329508878290653, -0.0064454530365765095, -0.5994882583618164, -6.818538531661034e-05, -1.764281842042692e-05, -0.5226554274559021, -2.264974000354414e-06, -0.0014461545506492257, -0.012629998847842216, -0.192360520362854, -9.63164638960734e-05, -0.0006146925734356046, -0.013964446261525154, -0.06547500938177109, -0.37266775965690613, -0.007884570397436619, -0.00022373080719262362, -0.04781973734498024, -0.0005351065192371607, -3.85038583772257e-05, -0.023362841457128525, -0.022637637332081795, -0.08968289196491241, -0.7471545934677124, -0.00013076403411105275, -0.2591864764690399, -0.000346362212439999, -0.008338872343301773, -8.523101132595912e-05, -9.894321920000948e-06, -0.002257657703012228, -0.006420342717319727, -0.1777738630771637, -0.048474788665771484, -0.010829251259565353, -0.0037104112561792135, -0.03814641386270523, -1.4823598861694336, -0.06002531200647354, -4.8040190449682996e-05, -0.8841866254806519, -0.8303645849227905, -0.5437485575675964, -0.021340860053896904, -0.1114354059100151, -0.00022480344341602176, -0.005111364647746086, -0.4973849356174469, -0.007101887371391058, -0.01561686024069786, -0.04084358364343643, -1.0851020812988281, -1.4228711128234863, -1.0309793949127197, -0.04501986503601074, -0.0682402029633522, -0.02877272665500641, -0.4918786287307739, -0.13276949524879456, -0.031210483983159065, -0.01591104455292225, -0.07592275738716125, -0.07712056487798691, -0.019411128014326096, -0.0034866277128458023, -0.019814996048808098, -0.0036882013082504272, -0.1978895217180252, -0.33866173028945923, -0.07573048025369644, -0.666290283203125], "finish_reason": "stop"}], "metrics": {"energy": 92.91816451454162, "energy_per_token": 1.1331483477383124, "time": 3.7981749, "time_per_token": 0.046319206097560975}}
{"outputs": [{"text": "if not os.path.isdir(src_folder):\n        raise ValueError('Source folder does not exist.')\n\n    backup_path = os.path.join(backup_dir, os.path.basename(src_folder))\n    try:\n        shutil.move(src_folder, backup_path)\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        # Handle any exceptions that may occur while deleting the source folder\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "backup", "_", "path", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " backup", "_", "path", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Handle", " any", " exceptions", " that", " may", " occur", " while", " deleting", " the", " source", " folder", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -1.302979588508606, -0.016367578878998756, -7.545663538621739e-05, -0.008362752385437489, -4.95898348162882e-05, -5.876845170860179e-05, -0.0014160377904772758, -0.005848793778568506, -0.0007306052139028907, -0.015695255249738693, -0.015029525384306908, -1.5616295058862306e-05, -0.5264291763305664, -1.1416676044464111, -0.010800712741911411, -0.08548104017972946, -0.00010656742961145937, -0.0015403084689751267, -0.29201796650886536, -0.004286269191652536, -0.0010643299901857972, -0.6155020594596863, -0.0002366024418734014, -2.8360087871551514, -0.03068888746201992, -1.5005648136138916, -0.002083513652905822, -0.03752417489886284, -1.4424220353248529e-05, -6.4490144723095e-05, -0.0018428262555971742, -0.002572205848991871, -0.0002760506176855415, -0.018466221168637276, -4.434487345861271e-05, -4.875540980719961e-05, -0.00040928093949332833, -0.06878386437892914, -0.000254241080256179, -0.0003152588615193963, -0.002627256326377392, -0.016185786575078964, -4.768370445162873e-07, -6.651657167822123e-05, -0.0062645734287798405, -0.0001081169830285944, -0.00011944057769142091, -0.01735934242606163, -0.0015901790466159582, -0.1576298177242279, -1.6594414710998535, -8.844937838148326e-05, -0.0002540027489885688, -0.0006973695708438754, -0.10915308445692062, -2.0265373677830212e-05, -2.50339189733495e-06, -2.4805145263671875, -2.634490556374658e-05, -0.001870788517408073, -8.654219709569588e-05, -2.062299427052494e-05, -7.450303382938728e-05, -0.00038223114097490907, -8.821448318485636e-06, -0.014157102443277836, -0.00041261743172071874, -0.013607482425868511, -0.38873881101608276, -1.294654130935669, -5.686121585313231e-05, -0.00010227633902104571, -0.00015317220822907984, -3.349725011503324e-05, -0.00023183519078884274, -0.19826677441596985, -0.00010334911348763853, -6.174850568640977e-05, -0.03164807707071304, -0.01473414245992899, -1.057174801826477, -0.001940036192536354, -0.07379072159528732, -0.40192756056785583, -0.11868099123239517, -3.0636318115284666e-05, -0.008366298861801624, -0.00022873646230436862, -2.913844347000122, -1.4362038373947144, -0.3051065504550934, -1.1895372867584229, -0.6313261985778809, -1.2721766233444214, -0.07946421205997467, -1.5180898904800415, -0.5508914589881897, -0.1379700005054474, -0.04313088208436966, -0.008573982864618301, -0.5308553576469421, -0.002527615986764431, -2.595794200897217, -0.002028790069743991, -0.03780670464038849, -0.18050499260425568, -0.2175663858652115, -0.0014085381990298629, -1.0457329750061035, -3.576278118089249e-07, -3.576278118089249e-07, -1.7523612768854946e-05, -0.00016878610767889768, -0.1638496369123459], "finish_reason": "stop"}], "metrics": {"energy": 118.77363750934599, "energy_per_token": 0.9897803125778832, "time": 5.056402, "time_per_token": 0.042136683333333334}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError('The source folder does not exist.')\n    try:\n        shutil.move(src_folder, backup_dir)\n        os.rmdir(src_folder)\n        return True\n    except Exception:\n        raise Exception", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " source", " folder", " does", " not", " exist", ".", "')", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "raise", " Exception", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.6404927968978882, -0.9107569456100464, -0.07600175589323044, -0.004225018434226513, -0.025974690914154053, -0.00013064485392533243, -0.0011513754725456238, -0.13468514382839203, -0.0036582706961780787, -0.0008775911992415786, -0.904580295085907, -0.7374406456947327, -7.676783570786938e-05, -0.0002983363519888371, -0.0009465504554100335, -0.06612317264080048, -3.2066785934148356e-05, -7.629365427419543e-06, -2.8335423469543457, -0.00010609064338495955, -0.002833639271557331, -6.496695277746767e-05, -4.51792984677013e-05, -0.00014029949670657516, -0.0067933788523077965, -1.0251946150674485e-05, -2.8609820219571702e-05, -0.0013387774815782905, -0.025799401104450226, -0.09288091212511063, -0.3971046805381775, -1.0967194612021558e-05, -0.37010857462882996, -0.004237007815390825, -0.00017963226127903908, -0.04738723486661911, -8.594620157964528e-05, -6.592056161025539e-05, -0.00041261743172071874, -0.0448344349861145, -0.4097733497619629, -0.03291691467165947, -0.0033369355369359255, -0.0021743958350270987, -0.004272737540304661, -0.0019225463038310409, -0.08065228909254074, -1.039977788925171, -0.022141749039292336, -0.0003923600015696138, -1.9236834049224854, -1.5243098735809326, -1.8237918615341187, -0.07201259583234787, -0.5009785294532776], "finish_reason": "stop"}], "metrics": {"energy": 74.34092369174957, "energy_per_token": 1.0325128290520773, "time": 2.9349525, "time_per_token": 0.040763229166666665}}
{"outputs": [{"text": "# Check if the source folder exists.\n    if not os.path.isdir(src_folder):\n        raise ValueError(\"The source folder does not exist.\")\n\n    # Create the backup directory if it doesn't exist.\n    os.makedirs(backup_dir, exist_ok=True)\n\n    # Backup the source folder to the backup directory.\n    shutil.copytree(src_folder, os.path.join(backup_dir, 'backup'), dirs_exist_ok=True)\n\n    # Delete the source folder.\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        # Log the error and return False\n        print(\"Error deleting source folder: {}\".format(e))\n        return False\n\n    return True", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " backup", " directory", " if", " it", " doesn", "'", "t", " exist", ".", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Backup", " the", " source", " folder", " to", " the", " backup", " directory", ".", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " '", "backup", "')", ",", " d", "irs", "_", "exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Delete", " the", " source", " folder", ".", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Log", " the", " error", " and", " return", " False", "\n", "        ", "print", "(", "\"", "Error", " deleting", " source", " folder", ":", " {", "}\"", ".", "format", "(", "e", "))", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "#"], "logprobs": [-2.139662027359009, -0.5260730981826782, -0.21219806373119354, -0.27346840500831604, -0.045352350920438766, -0.011588637717068195, -0.007592156529426575, -2.1864638328552246, -0.03596382960677147, -0.0011208925861865282, -0.029280155897140503, -0.017315875738859177, -0.003575481940060854, -7.867782187531702e-06, -3.6954195820726454e-05, -0.0006672301678918302, -1.9432315826416016, -0.003337054280564189, -2.9444261599564925e-05, -0.0009965697536244988, -5.9960475482512265e-05, -4.184158387943171e-05, -0.00037472377880476415, -0.0007581220706924796, -0.0003912875254172832, -0.018374232575297356, -0.011712711304426193, -8.106198947643861e-06, -0.7633081078529358, -1.348406434059143, -0.5256474018096924, -0.0917481780052185, -0.00306303589604795, -0.058657895773649216, -8.105902816168964e-05, -0.0006709231529384851, -0.06297764927148819, -0.002801424590870738, -0.00011228884250158444, -0.0020042823161929846, -0.1280965358018875, -0.0011095802765339613, -0.06937828660011292, -1.04708993434906, -0.641327977180481, -0.16791932284832, -0.43086397647857666, -0.20006881654262543, -0.017883602529764175, -0.40393704175949097, -0.00041738382424227893, -7.867782187531702e-06, -0.15906786918640137, -0.06924993544816971, -0.0012882990995422006, -0.00016175392374861985, -1.4917442798614502, -8.4638240878121e-06, -0.0026006230618804693, -3.886147169396281e-05, -0.00024470672360621393, -4.672895011026412e-05, -0.008334261365234852, -4.291525328881107e-06, -6.663577369181439e-05, -0.0020536540541797876, -0.003994463477283716, 0.0, -3.1470757676288486e-05, -0.0006741396500729024, -0.00041166413575410843, -0.000200609109015204, -0.007820582017302513, -0.014472395181655884, -0.0002299282787134871, -0.05272626131772995, -1.2128453254699707, -0.007382611744105816, -0.03495996817946434, -0.004565173760056496, -0.588038980960846, -0.02061021700501442, -0.01949448697268963, -0.013478939421474934, -0.10189063847064972, -0.0012401993153616786, -0.0003091811086051166, -0.3426608443260193, -2.9682672902708873e-05, -3.4570634852570947e-06, -1.0564513206481934, -0.003706966992467642, -6.341733387671411e-05, -0.002048300579190254, -0.00018416139937471598, -2.4437606043647975e-05, -6.329813186312094e-05, -0.16084982454776764, -5.006777428206988e-06, -4.0531076592742465e-06, -0.0007040405762381852, -0.00017641419253777713, -1.0609570381348021e-05, -0.003078604582697153, -7.235741941258311e-05, -3.6954811548639555e-06, -0.00025388356880284846, -2.940464973449707, -0.4487844407558441, -1.9329006671905518, -0.000894027529284358, -0.34106576442718506, -0.0022082962095737457, -0.0006043276516720653, -0.0015193596482276917, 0.0, -0.012225925922393799, -0.0002890407631639391, -0.008386749774217606, -0.02073819749057293, -0.002305232686921954, -0.04409179091453552, -0.0007873057620599866, -0.05587967857718468, -0.06893787533044815, -0.0005914607318118215, -0.01705269329249859, -0.0009469077922403812, -0.06837759166955948, -0.0032384353689849377, -0.0008547228644602001, -0.3285852074623108, -1.8954096958623268e-05, -0.00021062063751742244, -0.0003407612966839224, -0.1378280371427536, -3.421248038648628e-05, -5.018585216021165e-05, -3.731181277544238e-05, -1.168244216387393e-05, -0.00024136967840604484, -0.0009517907164990902, -0.00012194366718176752, -1.5139465176616795e-05, -0.09839393943548203, -0.0035405587404966354, -0.4376877546310425, -0.0011806668480858207, -0.0855499878525734, -0.1941063553094864, -0.0601409375667572, -2.276871418871451e-05, -0.006677219644188881, -0.00019596086349338293, -1.8133759498596191, -2.427306890487671, -0.16804368793964386, -0.03013370744884014, -0.5348176956176758, -1.0514225959777832, -0.03409036621451378, -1.3331806659698486, -0.0006694936309941113, -0.22502785921096802, -0.02084374614059925, -1.4996984004974365, -0.22879286110401154, -0.7252516150474548, -1.023209571838379, -0.004047061316668987, -1.01841139793396, -0.8279503583908081, -0.08751896768808365, -0.0012343652779236436, -0.001859008800238371, -0.00011276562872808427, -0.2668481767177582, -0.0037009096704423428, -0.001369729870930314, -0.0033881422132253647, -0.00496476236730814, -0.00043299360550008714, -0.009267880581319332, -0.13778793811798096, -0.0026391458231955767, -0.690345048904419, -0.0006494796834886074, -0.606106698513031, -0.005718182772397995, -1.6369514465332031], "finish_reason": "stop"}], "metrics": {"energy": 235.07982952499387, "energy_per_token": 1.2372622606578625, "time": 8.206208, "time_per_token": 0.043190568421052636}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(\"The source folder does not exist.\")\n\n    shutil.make_archive(backup_dir, 'zip', src_folder)\n    try:\n        shutil.rmtree(src_folder)\n        return True\n    except Exception:\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -1.3043959140777588, -1.0830782651901245, -0.07223176956176758, -0.003939844202250242, -0.03964114561676979, -0.00013934595335740596, -0.0011266082292422652, -0.13319706916809082, -0.004491716623306274, -0.00013016807497479022, -0.00224861828610301, -0.4193531274795532, -0.0002637753786984831, -1.5555694103240967, -0.00014602071314584464, -3.015949550899677e-05, -0.3125496506690979, -1.311301275563892e-06, -0.0019133847672492266, -0.024188991636037827, -0.22651159763336182, -8.666139910928905e-05, -0.0011177966371178627, -0.012480138801038265, -0.1184777021408081, -0.5468682646751404, -0.006692376919090748, -0.00020346954988781363, -0.051346100866794586, -0.0003131137927994132, -5.638440416078083e-05, -0.028416259214282036, -0.03088458999991417, -0.24523693323135376, -1.3814661502838135, -0.00014256415306590497, -0.0006042085005901754, -0.0008506731828674674, -0.8924615383148193, -2.8609820219571702e-05, -0.00013636612857226282, -0.0016767027555033565, -6.067568756407127e-05, -0.00015889335190877318, -0.004528979770839214, -6.115249561844394e-05, -1.7881233361549675e-05, -0.03217044100165367, -0.005214305128902197, -1.0228503942489624, -0.060328152030706406, -0.006836950313299894, -0.002555915853008628, -0.010401680134236813, -0.0011560192797333002, -0.09390503913164139, -1.1416159868240356, -0.01657196693122387, -0.0004618293314706534, -0.6937273144721985, -0.0006493605324067175, -0.6452855467796326, -0.013180862180888653, -1.364661455154419], "finish_reason": "stop"}], "metrics": {"energy": 73.68700098991395, "energy_per_token": 0.8986219632916336, "time": 3.3754148, "time_per_token": 0.041163595121951224}}
{"outputs": [{"text": "try:\n        if not os.path.exists(src_folder):\n            raise ValueError(\"The source folder does not exist\")\n        os.makedirs(backup_dir, exist_ok=True)\n        shutil.move(src_folder, backup_dir)\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(\"Error occurred during backup: {}\".format(str(e)))\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " source", " folder", " does", " not", " exist", "\"", ")", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", " occurred", " during", " backup", ":", " {", "}\"", ".", "format", "(", "str", "(", "e", ")))", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -0.8855334520339966, -0.2532607316970825, -0.016226019710302353, -6.079655122448457e-06, -0.0001431601122021675, -0.0007593132322654128, -0.294424831867218, -0.00023636408150196075, -0.008755744434893131, -8.583032467868179e-06, -6.687417771900073e-05, -0.00279357866384089, -0.006200600415468216, -0.000788139586802572, -0.0159186702221632, -0.018751846626400948, -1.0967194612021558e-05, -0.8426046371459961, -0.9555107951164246, -1.0726971626281738, -0.08665477484464645, -0.0037627865094691515, -0.03649463504552841, -0.00015925093612167984, -0.0011132716899737716, -2.8933756351470947, -0.00023326536756940186, -0.004729869309812784, -0.45243537425994873, -2.2982475757598877, -7.223821739898995e-05, -0.2526746094226837, -6.425174069590867e-05, -0.0005828827270306647, -0.0006556744920089841, -0.06458216160535812, -1.2516897186287679e-05, -8.380061626667157e-05, -0.12447246164083481, -0.018080655485391617, -2.3841855067985307e-07, -5.030505417380482e-05, -0.0014223469188436866, -0.004618928302079439, -0.0023468590807169676, -0.06814633309841156, -0.019556328654289246, -0.08569049090147018, -3.3378044463461265e-05, -4.887569048150908e-06, -1.8772687911987305, -0.00010156115604331717, -0.0031797345727682114, -6.925819616299123e-05, -3.3854863431770355e-05, -0.00020811776630580425, -0.04215944930911064, -9.536697689327411e-06, -7.271740287251305e-06, -0.007364743389189243, -0.01858733780682087, -0.04918978735804558, -1.0072970390319824, -0.0002474478678777814, -9.679325739853084e-05, -9.011816291604191e-05, -3.528532761265524e-05, -0.00013267113536130637, -0.028623875230550766, -9.154854342341423e-05, -3.015949550899677e-05, -0.09995754063129425, -0.010073771700263023, -0.209906205534935, -0.05879750847816467, -0.00557285500690341, -0.001369610894471407, -0.018434857949614525, -0.001039322349242866, -0.055282820016145706, -0.16854025423526764, -0.09705185145139694, -6.711257447022945e-05, -0.004711360204964876, -0.0002535260282456875, -0.288916677236557, -0.028066040948033333, -1.02455735206604, -1.012485384941101, -0.5549176931381226, -2.952310085296631, -1.1821990013122559, -1.6228524446487427, -1.147067904472351, -0.06491076946258545, -0.001585775287821889, -0.0023271164391189814, -0.00014375607133843005, -1.2228145599365234, -0.0001565095444675535, -0.0010552796302363276, -0.004144294653087854, -0.006468667648732662, -0.041771020740270615, -0.02149803377687931, -0.00027998341829515994, -0.5337386131286621, -0.025648945942521095, -1.2855503559112549], "finish_reason": "stop"}], "metrics": {"energy": 149.8817119350433, "energy_per_token": 1.3263868312835692, "time": 4.846904, "time_per_token": 0.04289295575221239}}
{"outputs": [{"text": "try:\n        if not os.path.exists(src_folder):\n            raise ValueError(\"The source folder does not exist.\")\n        shutil.make_archive(backup_dir, 'gztar', src_folder)\n        os.remove(src_folder)\n        return True\n    except Exception as e:\n        print(\"Error occurred while performing the backup:\", e)\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", " occurred", " while", " performing", " the", " backup", ":\"", ",", " e", ")", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -0.8855334520339966, -0.2532607316970825, -0.016226019710302353, -6.079655122448457e-06, -0.0001431601122021675, -0.0007593132322654128, -0.294424831867218, -0.00023636408150196075, -0.008755744434893131, -8.583032467868179e-06, -6.687417771900073e-05, -0.00279357866384089, -0.006200600415468216, -0.000788139586802572, -0.0159186702221632, -0.018751846626400948, -1.0967194612021558e-05, -0.8426046371459961, -0.9555107951164246, -1.0726971626281738, -0.08665477484464645, -0.0037627865094691515, -0.03649463504552841, -0.00015925093612167984, -0.0011132716899737716, -0.09751346707344055, -0.004816833417862654, -4.172238186583854e-05, -0.0018289043800905347, -0.5167439579963684, -0.35871681571006775, -3.9934315282152966e-05, -7.629365427419543e-06, -0.31984928250312805, -2.264974000354414e-06, -0.0015716117341071367, -0.010379736311733723, -0.22517025470733643, -6.97350042173639e-05, -0.0007582411635667086, -0.013112859800457954, -0.11515698581933975, -1.1615725755691528, -0.0002735478919930756, -0.0031974404118955135, -0.00014876213390380144, -0.054691132158041, -0.0012292455649003386, -3.2305197237292305e-05, -0.025326233357191086, -0.03149387985467911, -0.02508607693016529, -0.40348148345947266, -1.847726889536716e-05, -0.2917864918708801, -0.00014506718434859067, -0.004807579796761274, -5.304672595229931e-05, -1.966933996300213e-05, -0.0014349650591611862, -0.011780455708503723, -0.37482550740242004, -0.04308429732918739, -0.005070920567959547, -0.0019904817454516888, -0.019179487600922585, -0.0014081810368224978, -0.09267143905162811, -0.19287455081939697, -0.09336009621620178, -6.01988795096986e-05, -0.004686087369918823, -0.00017927470616996288, -0.25559383630752563, -0.027409890666604042, -1.458125352859497, -1.4271869659423828, -0.5767545104026794, -0.2730388343334198, -3.115781784057617, -0.4127187728881836, -0.9125866293907166, -1.4835752248764038, -0.03031032159924507, -0.6247360706329346, -0.03350767493247986, -0.004186912905424833, -0.01868234947323799, -0.006705047097057104, -0.0001517419150331989, -1.1832051277160645, -9.536738616588991e-07, -3.576278118089249e-07, -2.5033637939486653e-05, -8.976056415122002e-05, -0.1758628934621811], "finish_reason": "stop"}], "metrics": {"energy": 99.71763135051725, "energy_per_token": 0.9971763135051726, "time": 4.2187862, "time_per_token": 0.042187862}}
{"outputs": [{"text": "try:\n        if not os.path.exists(src_folder):\n            raise ValueError(f'Source folder {src_folder} does not exist.')\n        shutil.make_archive(backup_dir, 'tar', src_folder)\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print('An error occurred while backing up the source folder:', str(e))\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "f", "'", "Source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "')", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "An", " error", " occurred", " while", " backing", " up", " the", " source", " folder", ":'", ",", " str", "(", "e", "))", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -0.8855334520339966, -0.2532607316970825, -0.016226019710302353, -6.079655122448457e-06, -0.0001431601122021675, -0.0007593132322654128, -0.294424831867218, -0.00023636408150196075, -0.008755744434893131, -8.583032467868179e-06, -6.687417771900073e-05, -0.00279357866384089, -0.006200600415468216, -0.000788139586802572, -0.0159186702221632, -0.018751846626400948, -1.0967194612021558e-05, -0.8426046371459961, -0.5319992899894714, -1.0700466632843018, -0.5464299321174622, -0.012609398923814297, -0.6725135445594788, -0.0013777059502899647, -4.625213477993384e-05, -0.00016544880054425448, -0.02141542360186577, -0.0820326954126358, -0.00026663561584427953, -0.004509754944592714, -0.2264486700296402, -0.003287864848971367, -0.0009548871894367039, -0.4631260335445404, -0.4028007388114929, -4.732496745418757e-05, -7.748573807475623e-06, -0.3437221646308899, -2.861018856492592e-06, -0.0012893705861642957, -0.01576625183224678, -0.14720392227172852, -7.950943836476654e-05, -0.0006485265912488103, -0.01216197945177555, -0.04792530834674835, -2.615400552749634, -0.06834163516759872, -0.0006200536736287177, -0.06438042223453522, -0.00019214690837543458, -2.729855441430118e-05, -0.02013493701815605, -0.03223508596420288, -0.030203916132450104, -1.1599820852279663, -0.0002012050390476361, -0.00039402826223522425, -0.0040895650163292885, -5.185469490243122e-05, -0.0001998939987970516, -0.010620619170367718, -4.160317621426657e-05, -1.1324817933200393e-05, -0.02906595915555954, -0.008268174715340137, -0.19155795872211456, -0.05754974111914635, -0.00765438424423337, -0.0013775869738310575, -0.02089429646730423, -0.0017231153324246407, -0.04449128732085228, -0.1927986592054367, -0.14202123880386353, -5.936446541454643e-05, -0.0053079864010214806, -0.00021240839851088822, -0.2805114984512329, -2.545332431793213, -0.6700296401977539, -0.016754508018493652, -0.030109994113445282, -0.5603560209274292, -0.8051481246948242, -0.0012137673329561949, -1.6833133697509766, -0.12159300595521927, -0.005774008575826883, -0.28123489022254944, -0.0005041282274760306, -1.2411653995513916, -9.536288416711614e-05, -0.0023500702809542418, -0.018121981993317604, -0.005104604177176952, -0.022653719410300255, -0.014037680812180042, -0.00020716428116429597, -1.0357334613800049, -5.960462772236497e-07, -3.576278118089249e-07, -3.9934315282152966e-05, -0.0001280225842492655, -0.22325359284877777], "finish_reason": "stop"}], "metrics": {"energy": 127.71148072052002, "energy_per_token": 1.1716649607387157, "time": 4.6304984, "time_per_token": 0.0424816366972477}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"The source folder does not exist: {src_folder}\")\n\n    try:\n        shutil.make_archive(backup_dir, 'tar', src_folder)\n        os.rmdir(src_folder)\n        return True\n    except Exception:\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " source", " folder", " does", " not", " exist", ":", " {", "src", "_", "folder", "}\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "return", " False", "\n", "\n", "def"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -0.3533289432525635, -0.6893883943557739, -1.4821834564208984, -0.11438632756471634, -0.00861168559640646, -1.4448051452636719, -0.00045408427831716835, -0.00317308004014194, -0.08191276341676712, -0.04666616767644882, -0.0029341999907046556, -0.00013267113536130637, -0.0003668589051812887, -0.09976185113191605, -9.798523387871683e-05, -0.003197915619239211, -0.3920857608318329, -0.00028546550311148167, -0.6591489315032959, -5.6503606174374e-05, -0.0003305127320345491, -0.001401514746248722, -0.10674448311328888, -3.2782016205601394e-05, -7.390948667307384e-06, -0.4812905788421631, -2.264974000354414e-06, -0.0015757775399833918, -0.016814760863780975, -0.2032955139875412, -0.0001248043408850208, -0.000876757490914315, -0.011719544418156147, -0.1200975701212883, -2.5371551513671875, -0.02941814437508583, -0.0004717191040981561, -0.08456458896398544, -0.0003259842633269727, -5.1616290875244886e-05, -0.017913227900862694, -0.020748356357216835, -0.09549344331026077, -0.3451234996318817, -1.0967194612021558e-05, -1.9440194368362427, -0.00656519178301096, -0.00016425691137555987, -0.018156282603740692, -5.8530047681415454e-05, -1.0251946150674485e-05, -0.0003965306677855551, -0.024483572691679, -0.4916608929634094, -0.08966360241174698, -0.006633286364376545, -0.001617077155970037, -0.045939795672893524, -0.0020016650669276714, -0.05321682244539261, -1.5223369598388672, -0.017452945932745934, -0.0003743662964552641, -0.760974645614624, -0.0005766874528490007, -0.7127262949943542, -0.019685963168740273, -1.254670262336731], "finish_reason": "stop"}], "metrics": {"energy": 102.77050092411044, "energy_per_token": 1.1950058246989586, "time": 3.5838134, "time_per_token": 0.041672248837209304}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n    shutil.make_archive(backup_dir, 'tar', src_folder)\n    try:\n        os.remove(src_folder)\n    except Exception:\n        print('There was an error while deleting the source folder.')\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "tar", "'", ",", " src", "_", "folder", ")", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", ":", "\n", "        ", "print", "('", "There", " was", " an", " error", " while", " deleting", " the", " source", " folder", ".", "')", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -0.3533289432525635, -0.6893883943557739, -0.6663418412208557, -0.016678422689437866, -1.1164625883102417, -0.0001517419150331989, -0.0013335392577573657, -0.00015007323236204684, -0.000288087350782007, -0.0017678599106147885, -0.0675029307603836, -0.00017855956684798002, -0.00302381650544703, -0.1136472076177597, -0.004638150800019503, -9.452849917579442e-05, -0.002004639245569706, -1.3154263496398926, -1.256125807762146, -9.870042413240299e-05, -1.728519782773219e-05, -0.24569764733314514, -1.7881377516459906e-06, -0.0014674619305878878, -0.012633766047656536, -0.21079865097999573, -9.655486064730212e-05, -0.0010507544502615929, -0.010114014148712158, -0.0664016455411911, -2.059708595275879, -0.057249318808317184, -0.00036566724884323776, -0.06529054045677185, -0.0002351722796447575, -3.480850500636734e-05, -0.03946777433156967, -0.027867814525961876, -0.006299045868217945, -1.2417657375335693, -8.49926145747304e-05, -0.000636255950666964, -0.0006899837171658874, -0.8598978519439697, -8.583032467868179e-06, -0.7589371204376221, -0.00017724849749356508, -0.0019064837833866477, -4.637133679352701e-05, -8.821448318485636e-06, -0.0005841932725161314, -0.005217032972723246, -0.2986563742160797, -0.002476127352565527, -0.09798146784305573, -1.3640824556350708, -0.026080850511789322, -0.0005379660287871957, -1.8689062595367432, -1.7503228187561035, -4.219961166381836, -0.12338804453611374, -0.16086342930793762, -0.1459621787071228, -0.6990633010864258, -0.1066100150346756, -0.054026249796152115, -0.04555317759513855, -0.012441875413060188, -0.2158716320991516, -0.07065382599830627, -0.010730424895882607, -0.11804261058568954, -0.09348061680793762, -0.002865258837118745, -0.010760970413684845, -0.016391737386584282, -0.1723112314939499, -0.0029298022855073214, -1.418229341506958, -4.768370445162873e-07, -3.576278118089249e-07, -4.160317621426657e-05, -0.0001072826053132303, -0.26758021116256714], "finish_reason": "stop"}], "metrics": {"energy": 136.7846170196533, "energy_per_token": 1.328005990482071, "time": 4.4249544, "time_per_token": 0.04296072233009709}}
{"outputs": [{"text": "# Check if the source folder exists.\n    if not os.path.exists(src_folder):\n        raise ValueError(f\"Source folder '{src_folder}' does not exist.\")\n\n    # Backs up the source folder.\n    shutil.make_archive(backup_dir, 'gztar', src_folder)\n\n    # Deletes the source folder.\n    try:\n        os.rmdir(src_folder)\n    except OSError:\n        raise Exception(f\"Failed to delete source folder '{src_folder}'.\")", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Back", "s", " up", " the", " source", " folder", ".", "\n", "    ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "\n", "    ", "#", " De", "letes", " the", " source", " folder", ".", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "    ", "except", " O", "SE", "rror", ":", "\n", "        ", "raise", " Exception", "(", "f", "\"", "Failed", " to", " delete", " source", " folder", " '", "{", "src", "_", "folder", "}'", ".", "\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.139662027359009, -0.5260730981826782, -0.21219806373119354, -0.27346840500831604, -0.045352350920438766, -0.011588637717068195, -0.007592156529426575, -2.1864638328552246, -0.03596382960677147, -0.0011208925861865282, -0.029280155897140503, -0.017315875738859177, -0.003575481940060854, -7.867782187531702e-06, -3.6954195820726454e-05, -0.0006672301678918302, -0.15481948852539062, -8.034383063204587e-05, -0.0007370378007180989, -5.07818695041351e-05, -4.0649541915627196e-05, -0.0011297041783109307, -0.001010384177789092, -0.0004419303731992841, -0.01666927896440029, -0.013672629371285439, -1.1324817933200393e-05, -0.8416028618812561, -0.3187543451786041, -0.45704296231269836, -0.36906322836875916, -0.00677064573392272, -0.8526977896690369, -9.619726915843785e-05, -0.0011636398267000914, -0.00010477947944309562, -0.00022921319759916514, -0.0015626850072294474, -0.06200290843844414, -0.0001072826053132303, -0.0021259819623082876, -0.03593059629201889, -0.0030433074571192265, -6.770858453819528e-05, -0.0016526625258848071, -0.08525031059980392, -0.0009413101943209767, -0.10640329122543335, -2.901395797729492, -1.7249008417129517, -0.001189835020340979, -0.007018317934125662, -0.011037131771445274, -0.003426634706556797, -1.9502618312835693, -0.0017948722233995795, -0.00031799983116798103, -0.5288333892822266, -6.663577369181439e-05, -1.3947389561508317e-05, -0.2520862817764282, -1.1920922133867862e-06, -0.001141730579547584, -0.00909353606402874, -0.20693528652191162, -0.00011979816190432757, -0.003564434824511409, -0.01315262634307146, -0.05435112491250038, -1.3145999908447266, -0.00020954797219019383, -0.004881369415670633, -0.00010561384988250211, -0.05593525245785713, -0.0003033416287507862, -4.31528314948082e-05, -0.028323790058493614, -0.007732932455837727, -0.09936246275901794, -0.0006949870148673654, -0.08477839082479477, -1.5957541465759277, -0.002331873867660761, -0.0012742503313347697, -0.0072486503049731255, -0.000510204816237092, -0.04733959585428238, -0.0033339650835841894, -0.0010451575508341193, -0.16270235180854797, -1.8596476365928538e-05, -0.000196556793525815, -0.00038747431244701147, -1.5011487007141113, -4.6491513785440475e-06, -0.42570510506629944, -0.021363966166973114, -0.00028772983932867646, -0.005545470397919416, -3.0636318115284666e-05, -9.417489309271332e-06, -0.00041786045767366886, -0.009603610262274742, -0.23589389026165009, -0.0031865080818533897, -1.1425813436508179, -1.1324817933200393e-05, -1.1444026313256472e-05, -0.8509318828582764, -0.018399396911263466, -0.0006727101281285286, -0.754679262638092, -0.0625317245721817, -0.2384219765663147, -0.16877782344818115, -0.010680182836949825, -0.9216293692588806, -0.0037335706874728203, -0.028933830559253693, -0.28081193566322327, -0.001968947472050786, -0.044679176062345505, -7.188061863416806e-05, -0.002114086179062724, -7.223821739898995e-05, -0.000129691296024248, -0.009231502190232277, -0.040157750248909, -0.006141599267721176, -1.8346247673034668, -2.3841855067985307e-07, -3.576278118089249e-07, -3.8742269680369645e-05, -0.00022182388056535274, -0.21820910274982452], "finish_reason": "stop"}], "metrics": {"energy": 132.01014976978303, "energy_per_token": 0.9778529612576521, "time": 5.6861367, "time_per_token": 0.04211953111111111}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError('Source folder does not exist.')\n    try:\n        shutil.make_archive(src_folder, 'zip', src_folder)\n        shutil.rmtree(src_folder)\n        return True\n    except Exception:\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ".", "')", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "src", "_", "folder", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.6404927968978882, -0.6821612119674683, -0.010087579488754272, -0.05423561856150627, -0.00011121608258690685, -0.002211745595559478, -0.29827558994293213, -0.004579057916998863, -0.00096941675292328, -0.8235864043235779, -0.7841812372207642, -8.582700684200972e-05, -0.00026353701832704246, -0.0009011736838147044, -0.0834728330373764, -3.421248038648628e-05, -6.9141146923357155e-06, -0.33092230558395386, -1.9073468138230965e-06, -0.0014807938132435083, -0.04040232673287392, -2.653334379196167, -8.451581379631534e-05, -0.0011997176334261894, -0.06294720619916916, -0.035725757479667664, -0.38108447194099426, -0.00381860276684165, -0.000192504478036426, -0.3125709295272827, -0.002994579030200839, -6.794698856538162e-05, -0.08454190939664841, -0.025694839656352997, -0.03940795361995697, -0.2946571111679077, -0.00018773700867313892, -0.0001597276859683916, -1.7717840671539307, -0.00010227633902104571, -0.00030489088385365903, -0.008768743835389614, -4.1960789531003684e-05, -1.2278481335670222e-05, -0.025576788932085037, -0.007861034013330936, -0.3011956214904785, -1.5660427808761597, -0.09889090061187744, -0.0017101438716053963, -0.00692988745868206, -0.0015808953903615475, -0.05987531319260597, -1.1940028667449951, -0.02032710798084736, -0.00033122775494121015, -0.44893258810043335, -0.0007403731578961015, -1.1027921438217163, -7.152555099310121e-07, -3.576278118089249e-07, -4.756337511935271e-05, -0.00010168035078095272, -0.22085650265216827], "finish_reason": "stop"}], "metrics": {"energy": 81.65395434856414, "energy_per_token": 1.0080735104761005, "time": 3.3754723, "time_per_token": 0.0416724975308642}}
{"outputs": [{"text": "if not os.path.isdir(src_folder):\n        raise ValueError(f\"{src_folder} is not a directory\")\n\n    try:\n        shutil.make_archive(backup_dir, 'zip', src_folder)\n        os.rmdir(src_folder)\n    except Exception:\n        return False\n\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "src", "_", "folder", "}", " is", " not", " a", " directory", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", ":", "\n", "        ", "return", " False", "\n", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -1.302979588508606, -0.016367578878998756, -7.545663538621739e-05, -0.008362752385437489, -4.95898348162882e-05, -5.876845170860179e-05, -0.0014160377904772758, -0.005848793778568506, -0.0007306052139028907, -0.015695255249738693, -0.015029525384306908, -1.5616295058862306e-05, -0.9043474197387695, -0.35114261507987976, -0.6365800499916077, -1.1376680135726929, -0.008015135303139687, -0.00013469743134919554, -0.00046695294440723956, -0.05233727768063545, -0.22669073939323425, -0.012180233374238014, -0.017120663076639175, -0.5702638626098633, -0.9994439482688904, -0.00026174934464506805, -0.004695104900747538, -0.6366450190544128, -0.00039426659350283444, -0.9580366611480713, -0.0001408954558428377, -0.0004850641416851431, -0.002815451705828309, -0.11687907576560974, -3.242440288886428e-05, -9.65590606938349e-06, -0.5152386426925659, -2.9802276912960224e-06, -0.0018111744429916143, -0.01739238016307354, -0.1630673110485077, -0.0001292145170737058, -0.0011866202112287283, -0.016809837892651558, -0.10008255392313004, -0.46822071075439453, -0.00791260041296482, -0.0002033503697020933, -0.08307303488254547, -0.0002113357331836596, -5.495397272170521e-05, -0.018518881872296333, -0.019813595339655876, -0.14359600841999054, -0.39187172055244446, -1.3232143828645349e-05, -1.5451338291168213, -0.005662828218191862, -0.0001867835089797154, -0.014415760524570942, -4.0411134250462055e-05, -2.0861407392658293e-05, -0.0002812943421304226, -0.013812552206218243, -0.9645845890045166, -0.0036516194231808186, -0.10248980671167374, -1.1140851974487305, -0.021592067554593086, -0.0006856950931251049, -0.4939687252044678, -0.0014222278259694576, -0.048495229333639145, -0.98575359582901, -0.004083510022610426, -0.007240247447043657, -0.0038611162453889847, -0.7581319212913513, -0.005632719490677118, -0.5466942191123962], "finish_reason": "stop"}], "metrics": {"energy": 124.90648861122135, "energy_per_token": 1.452401030363039, "time": 3.5900426, "time_per_token": 0.041744681395348836}}
{"outputs": [{"text": "try:\n        # Check if the source folder exists\n        if not os.path.exists(src_folder):\n            raise ValueError('Source folder does not exist.')\n        # Create the backup directory if it does not exist\n        if not os.path.exists(backup_dir):\n            os.makedirs(backup_dir)\n        # Backup the source folder to the backup directory\n        shutil.make_archive(backup_dir, 'zip', src_folder)\n        # Delete the source folder\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print('An error occurred while processing the source folder:', str(e))\n        return False", "tokens": ["try", ":", "\n", "        ", "#", " Check", " if", " the", " source", " folder", " exists", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ".", "')", "\n", "        ", "#", " Create", " the", " backup", " directory", " if", " it", " does", " not", " exist", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ")", "\n", "        ", "#", " Backup", " the", " source", " folder", " to", " the", " backup", " directory", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "#", " Delete", " the", " source", " folder", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "('", "An", " error", " occurred", " while", " processing", " the", " source", " folder", ":'", ",", " str", "(", "e", "))", "\n", "        ", "return", " False"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -2.122544288635254, -0.8035803437232971, -0.13695210218429565, -0.30663201212882996, -0.04667390137910843, -0.012098618783056736, -0.006897449027746916, -0.237868532538414, -0.00034540885826572776, -0.040273748338222504, -0.031766220927238464, -0.0025634069461375475, -5.006777428206988e-06, -3.242440288886428e-05, -0.0006544832140207291, -0.18596504628658295, -9.953480184776708e-05, -0.0007005859515629709, -2.622600959512056e-06, -4.8040190449682996e-05, -0.0011439929949119687, -0.00102324562612921, -0.0005012686015106738, -0.011237896978855133, -0.018249578773975372, -5.602820692729438e-06, -0.7267707586288452, -0.5249977111816406, -0.003047229489311576, -0.06458573788404465, -3.957670196541585e-05, -0.0015831567579880357, -0.3064148426055908, -0.003895790548995137, -0.0008590107318013906, -1.5375263690948486, -0.05243467912077904, -1.0678547620773315, -0.715934693813324, -0.1199493408203125, -0.49462637305259705, -0.2698061168193817, -0.027600320056080818, -1.2508518695831299, -0.00016318420239258558, -0.09341525286436081, -0.024788301438093185, -0.0002543602604418993, -0.23342452943325043, -0.004469524137675762, -0.0004273931554052979, -5.722029527532868e-06, -2.825220326485578e-05, -0.00011359999916749075, -0.06873545795679092, -2.9682672902708873e-05, -0.0016751555958762765, -4.768360213347478e-06, -1.3232143828645349e-05, -0.0010390841634944081, -0.0005233110277913511, -0.000685576000250876, -0.01619740016758442, -8.046303264563903e-05, -0.13318434357643127, -2.634490556374658e-05, -0.000842692912556231, -3.564294092939235e-05, -0.0004898302140645683, -1.3470558769768104e-05, -1.0967194612021558e-05, -0.017033005133271217, -0.0006445952458307147, -0.06592487543821335, -0.02160070091485977, -1.8071891069412231, -0.011793886311352253, -0.01932881399989128, -0.00572991743683815, -0.6806709170341492, -0.022734127938747406, -0.008267228491604328, -0.011739102192223072, -0.04437064379453659, -0.0002723561483435333, -0.0286283940076828, -2.706014311115723e-05, -2.3841830625315197e-06, -0.8446863889694214, -4.172316494077677e-06, -0.0010824303608387709, -0.016345178708434105, -0.3702907860279083, -2.3603161025675945e-05, -0.0065229120664298534, -0.12214209139347076, -0.025843314826488495, -0.4140470027923584, -0.0060318815521895885, -0.00015186110977083445, -0.035946350544691086, -0.0001842805795604363, -4.339123915997334e-05, -0.023098915815353394, -0.003974634688347578, -0.028028368949890137, -0.0601515993475914, -0.05236510932445526, -0.0006736631621606648, -0.008562400005757809, -0.0006080209277570248, -0.04807892441749573, -0.0007905219099484384, -0.7537819147109985, -0.00013457823661156, -0.0001062098381225951, -0.00014232576359063387, -1.0967194612021558e-05, -0.00022301571152638644, -0.0028152139857411385, -6.97350042173639e-05, -1.2993727978027891e-05, -0.03464185819029808, -0.0024400956463068724, -0.16848224401474, -0.08963297307491302, -0.001888398313894868, -0.008103705942630768, -0.014067772775888443, -0.006947408430278301, -0.0431324802339077, -0.12466190755367279, -0.06717795878648758, -3.4927710657939315e-05, -0.007518211379647255, -0.00014161060971673578, -0.2564808428287506, -1.64682936668396, -0.7209638953208923, -0.0061767869628965855, -0.014843732118606567, -0.7688355445861816, -2.2897236347198486, -0.15028150379657745, -0.749954879283905, -0.011632825247943401, -0.35674938559532166, -0.0004654039512388408, -1.5854169130325317, -5.1616290875244886e-05, -0.007056670729070902, -0.008631185628473759, -0.004395348019897938, -0.013766344636678696, -0.007726544979959726, -0.00012027494085486978], "finish_reason": "stop"}], "metrics": {"energy": 180.5180046443938, "energy_per_token": 1.1282375290274613, "time": 6.950818, "time_per_token": 0.0434426125}}
{"outputs": [{"text": "try:\n        shutil.make_archive(backup_dir, 'gztar', src_folder)\n        os.rmdir(src_folder)\n        return True\n    except:\n        print(\"An error occurred\")\n        return False", "tokens": ["try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", ":", "\n", "        ", "print", "(", "\"", "An", " error", " occurred", "\"", ")", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -1.6752082109451294, -0.00010144196130568162, -2.1815061700181104e-05, -0.4445958435535431, -4.291525328881107e-06, -0.0015547104412689805, -0.05032617226243019, -0.18118607997894287, -0.00015198028995655477, -0.0010044296504929662, -0.015369665808975697, -0.05591372400522232, -1.1506961584091187, -0.00032300499151460826, -0.006537715904414654, -0.00012218205665703863, -0.09737981110811234, -0.0007781338645145297, -0.0001062098381225951, -0.019555160775780678, -0.03276798874139786, -0.13837990164756775, -0.5445932149887085, -3.2305197237292305e-05, -1.9707422256469727, -0.005833149887621403, -0.0003564914222806692, -0.0346919447183609, -3.528532761265524e-05, -1.8358061424805783e-05, -0.000695344409905374, -0.016381533816456795, -0.2939993739128113, -0.0737759992480278, -0.008160935714840889, -0.0024272524751722813, -0.03279256075620651, -0.001801535952836275, -3.4251630306243896, -0.03955979272723198, -0.0012503195321187377, -2.6439108848571777, -0.5727081894874573, -0.3700472414493561, -1.3112614154815674, -0.07579468935728073, -0.08439017832279205, -3.16318941116333, -0.03878489509224892, -0.009152363054454327, -0.06341812014579773, -0.22703193128108978, -0.0022312526125460863, -0.2977234125137329, -0.046137090772390366, -0.4723413586616516], "finish_reason": "stop"}], "metrics": {"energy": 50.62344013690949, "energy_per_token": 0.8437240022818248, "time": 2.5417943, "time_per_token": 0.04236323833333333}}
{"outputs": [{"text": "if not os.path.isdir(src_folder):\n        raise ValueError(\"Source folder does not exist.\")\n\n    try:\n        shutil.make_archive(backup_dir, \"zip\", src_folder)\n        os.remove(src_folder)\n        return True\n    except Exception as e:\n        print(e)\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Source", " folder", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " \"", "zip", "\"", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "        ", "return", " False"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -1.302979588508606, -0.016367578878998756, -7.545663538621739e-05, -0.008362752385437489, -4.95898348162882e-05, -5.876845170860179e-05, -0.0014160377904772758, -0.005848793778568506, -0.0007306052139028907, -0.015695255249738693, -0.015029525384306908, -1.5616295058862306e-05, -0.9043474197387695, -1.3373239040374756, -0.8833057284355164, -0.012142077088356018, -0.08866436034440994, -9.619726915843785e-05, -0.0017996320966631174, -0.31440335512161255, -0.004936767742037773, -0.00013136000779923052, -0.0029264739714562893, -0.5175015926361084, -0.0002843929105438292, -0.7440758943557739, -6.186770770000294e-05, -0.0002661589242052287, -0.0012380562257021666, -0.11599021404981613, -2.407998726994265e-05, -4.291525328881107e-06, -0.34743401408195496, -1.9073468138230965e-06, -0.001831522211432457, -0.021076751872897148, -0.1712455451488495, -0.00010287232726113871, -0.0009302341495640576, -0.0151565782725811, -2.7074520587921143, -0.24197883903980255, -0.0005137792322784662, -0.006159371230751276, -0.05560029298067093, -0.0004233417857903987, -6.615896563744172e-05, -0.022396601736545563, -0.023658014833927155, -0.10490050911903381, -0.3484021723270416, -1.2993727978027891e-05, -0.32480743527412415, -0.00010442188795423135, -0.008354240097105503, -4.053033626405522e-05, -3.313963316031732e-05, -0.0022195959463715553, -0.013506695628166199, -0.4891660809516907, -0.0696418434381485, -0.005035100504755974, -0.0021547689102590084, -0.04367033764719963, -0.0012222208315506577, -0.03597348928451538, -0.2590818703174591, -0.09169857949018478, -4.815939246327616e-05, -0.0038890219293534756, -0.00018249277491122484, -0.3362100124359131, -0.01200274471193552, -2.724972724914551, -0.033097535371780396, -0.013043910264968872, -0.011617271229624748, -0.023507703095674515, -0.00026341783814132214], "finish_reason": "stop"}], "metrics": {"energy": 85.36648652744294, "energy_per_token": 1.004311606205211, "time": 3.589702, "time_per_token": 0.04223178823529412}}
{"outputs": [{"text": "try:\n        if not os.path.exists(src_folder):\n            raise ValueError(f'Source folder {src_folder} does not exist.')\n        if os.path.exists(backup_dir):\n            shutil.rmtree(backup_dir)\n        shutil.make_archive(backup_dir, 'zip', src_folder)\n        os.remove(src_folder)\n    except Exception as e:\n        print(f'Error: {e}')\n        return False\n    return True", "tokens": ["try", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "            ", "raise", " Value", "Error", "(", "f", "'", "Source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "')", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "backup", "_", "dir", "):", "\n", "            ", "sh", "util", ".", "rm", "tree", "(", "backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "zip", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Error", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -0.8855334520339966, -0.2532607316970825, -0.016226019710302353, -6.079655122448457e-06, -0.0001431601122021675, -0.0007593132322654128, -0.294424831867218, -0.00023636408150196075, -0.008755744434893131, -8.583032467868179e-06, -6.687417771900073e-05, -0.00279357866384089, -0.006200600415468216, -0.000788139586802572, -0.0159186702221632, -0.018751846626400948, -1.0967194612021558e-05, -0.8426046371459961, -0.5319992899894714, -1.0700466632843018, -0.5464299321174622, -0.012609398923814297, -0.6725135445594788, -0.0013777059502899647, -4.625213477993384e-05, -0.00016544880054425448, -0.02141542360186577, -0.0820326954126358, -0.00026663561584427953, -0.004509754944592714, -0.2264486700296402, -0.003287864848971367, -0.0009548871894367039, -0.4631260335445404, -2.873662233352661, -1.4059085845947266, -1.9788545614574105e-05, -0.015239940024912357, -0.0009622710640542209, -0.79311203956604, -0.0010552796302363276, -0.1294282078742981, -1.3708974620385561e-05, -8.391981828026474e-05, -0.06662315875291824, -0.008190850727260113, -0.0011207734933122993, -0.4670688807964325, -3.2305197237292305e-05, -1.0013530300057027e-05, -0.2903488576412201, -1.7165990357170813e-05, -0.00030012393835932016, -0.036946121603250504, -5.435795901576057e-05, -6.592056161025539e-05, -0.0912623405456543, -0.038621701300144196, -0.04629985988140106, -0.5989537835121155, -2.1219027985353023e-05, -0.00024041623692028224, -1.4279917478561401, -3.2186455882765586e-06, -0.0027989281807094812, -0.013104270212352276, -0.06727158278226852, -0.00033158526639454067, -0.00019596086349338293, -0.008341354317963123, -0.05575363710522652, -0.33825579285621643, -0.011775507591664791, -0.0001821352052502334, -0.06473703682422638, -0.00037555795279331505, -6.270212179515511e-05, -0.02306024171411991, -0.021290915086865425, -0.05486876517534256, -0.5996339321136475, -1.0490362910786644e-05, -0.4348420798778534, -0.00011157367407577112, -0.008605184964835644, -5.364274329622276e-05, -1.2278481335670222e-05, -0.0012132910778746009, -0.006063162814825773, -1.4124094247817993, -0.004034713376313448, -0.09635511785745621, -0.2917896807193756, -0.1347207874059677, -7.211902266135439e-05, -0.004832256119698286, -0.0003678122302517295, -0.27226462960243225, -0.10305044800043106, -0.08353402465581894, -0.10315313935279846, -0.6435889601707458, -1.86134934425354, -0.03295521065592766, -0.1658651977777481, -0.04570044204592705, -0.008029444143176079, -0.006497448310256004, -0.05968206003308296, -0.014543360099196434, -0.0006469779182225466, -0.008632604032754898, -0.06018965318799019, -0.29917532205581665, -0.002305113710463047, -1.084973931312561, -2.3841855067985307e-07, -3.576278118089249e-07, -0.00010215714428341016, -5.6503606174374e-05, -0.19161897897720337], "finish_reason": "stop"}], "metrics": {"energy": 128.35885235500336, "energy_per_token": 1.0268708188400268, "time": 5.4695287, "time_per_token": 0.043756229599999995}}
{"outputs": [{"text": "if not os.path.isdir(src_folder):\n        raise ValueError('Source folder does not exist.')\n\n    backup_file = os.path.join(backup_dir, os.path.basename(src_folder))\n\n    try:\n        shutil.copytree(src_folder, backup_file)\n        os.rmdir(src_folder)\n        return True\n    except Exception as e:\n        print(f'Error deleting source folder: {e}')\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "backup", "_", "file", " =", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", "))", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "file", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Error", " deleting", " source", " folder", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -1.302979588508606, -0.016367578878998756, -7.545663538621739e-05, -0.008362752385437489, -4.95898348162882e-05, -5.876845170860179e-05, -0.0014160377904772758, -0.005848793778568506, -0.0007306052139028907, -0.015695255249738693, -0.015029525384306908, -1.5616295058862306e-05, -0.5264291763305664, -1.1416676044464111, -0.010800712741911411, -0.08548104017972946, -0.00010656742961145937, -0.0015403084689751267, -0.29201796650886536, -0.004286269191652536, -0.0010643299901857972, -0.6155020594596863, -0.0002366024418734014, -2.8360087871551514, -0.03068888746201992, -0.9917414784431458, -0.12343345582485199, -0.12701110541820526, -5.07818695041351e-05, -0.00010847456724150106, -0.0012236495967954397, -0.017591403797268867, -0.000337305391440168, -0.03586205095052719, -2.7417760065873154e-05, -6.747018051100895e-05, -0.0003319427778478712, -0.09398674964904785, -0.00031025364296510816, -0.0004825619689654559, -0.002056271303445101, -0.011951977387070656, -7.152555099310121e-07, -9.321732068201527e-05, -0.00617785332724452, -8.284702198579907e-05, -8.821098163025454e-05, -0.1289995312690735, -0.018357964232563972, -1.6374636888504028, -0.0002026352594839409, -0.36123907566070557, -7.080780778778717e-05, -0.0002649671514518559, -0.0013900866033509374, -0.10385825484991074, -1.8954096958623268e-05, -4.0531076592742465e-06, -0.8473023772239685, -0.0036374852061271667, -0.00014184899919200689, -0.005938268266618252, -2.4676019165781327e-05, -3.9934315282152966e-05, -0.00010966652916977182, -0.0021023093722760677, -6.556489552167477e-06, -0.020959554240107536, -0.08082415908575058, -0.011986136436462402, -0.33080002665519714, -0.4992300570011139, -7.152531907195225e-06, -0.1631021499633789, -0.028454842045903206, -0.00018821375851985067, -0.05477961152791977, -8.904537389753386e-05, -3.516612196108326e-05, -0.0004262015863787383, -0.027762772515416145, -0.4868141710758209, -0.09619932621717453, -0.004201870411634445, -0.0033896868117153645, -0.09622596204280853, -0.0009954979177564383, -0.12334231287240982, -0.609866201877594, -0.137071430683136, -3.158996332786046e-05, -0.008320075459778309, -0.000316927267704159, -0.42457038164138794, -0.1967991590499878, -0.2079080492258072, -0.2048172503709793, -0.5118734240531921, -2.6880321502685547, -0.28011196851730347, -0.008956259116530418, -0.0781916007399559, -0.0020427091512829065, -0.393680214881897, -0.022065024822950363, -0.007280958816409111, -0.008091527037322521, -0.016354912891983986, -0.023381823673844337, -0.0003713871701620519, -0.5789865255355835, -0.013441890478134155, -0.5442748665809631], "finish_reason": "stop"}], "metrics": {"energy": 130.47415014457704, "energy_per_token": 1.0964214297863617, "time": 5.060947, "time_per_token": 0.042528966386554616}}
{"outputs": [{"text": "try:\n        os.mkdir(backup_dir)\n        shutil.copytree(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n        os.rmdir(src_folder)\n    except OSError:\n        return False\n    else:\n        return True", "tokens": ["try", ":", "\n", "        ", "os", ".", "mk", "dir", "(", "backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "    ", "except", " O", "SE", "rror", ":", "\n", "        ", "return", " False", "\n", "    ", "else", ":", "\n", "        ", "return", " True"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -1.7308131456375122, -0.00010632903286023065, -1.9402363300323486, -6.496695277746767e-05, -0.0006481691962108016, -0.05654073879122734, -2.658331868587993e-05, -0.00014280252798926085, -0.045072514563798904, -0.06552580744028091, -0.6984625458717346, -0.260317325592041, -8.725739462533966e-05, -1.2993727978027891e-05, -0.682784378528595, -0.002144420053809881, -0.00036066226311959326, -0.004701749421656132, -0.00022063204960431904, -8.260862523457035e-05, -0.0002225389762315899, -0.3103189170360565, -2.9801878554280847e-05, -1.7523612768854946e-05, -0.0015391181223094463, -0.00024720950750634074, -6.12716976320371e-05, -0.0052115777507424355, -7.331102824537084e-05, -1.0847986231965479e-05, -0.0011999557027593255, -0.2090693563222885, -0.0006619884516112506, -0.0002933310461230576, -0.0023338955361396074, -0.03357776254415512, -7.986990567587782e-06, -4.23184028477408e-05, -0.00979415699839592, -0.000392598332837224, -2.610649426060263e-05, -0.014821534045040607, -0.003963354509323835, -0.0843510627746582, -0.9131893515586853, -9.703165414975956e-05, -0.07637269794940948, -0.01179011631757021, -0.00032431588624604046, -0.16996613144874573, -0.00017045476124621928, -2.002696055569686e-05, -0.00018380382971372455, -0.028514858335256577, -1.2212450504302979, -0.003574056550860405, -1.3452101945877075, -1.2874520507466514e-05, -8.344646857949556e-07, -0.6703509092330933, -0.0248419102281332, -0.0005141366855241358, -0.5239895582199097, -0.0018434212543070316, -0.03271445631980896, -0.08491583168506622, -1.3521835803985596, -3.397406908334233e-05, -0.0023695745039731264, -0.0003833036171272397, -0.0222553089261055, -0.004752055741846561], "finish_reason": "stop"}], "metrics": {"energy": 85.78684315109253, "energy_per_token": 1.1287742519880595, "time": 3.1614435, "time_per_token": 0.04159794078947368}}
{"outputs": [{"text": "try:\n        shutil.copytree(src_folder, backup_dir)\n        os.rmdir(src_folder)\n    except FileNotFoundError:\n        print('File not found:', src_folder)\n        return False\n    except OSError:\n        print('Cannot delete:', src_folder)\n        return False\n    except Exception:\n        print('Unknown error while copying and deleting files.')\n        return False\n    return True", "tokens": ["try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "os", ".", "rm", "dir", "(", "src", "_", "folder", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "('", "File", " not", " found", ":'", ",", " src", "_", "folder", ")", "\n", "        ", "return", " False", "\n", "    ", "except", " O", "SE", "rror", ":", "\n", "        ", "print", "('", "C", "annot", " delete", ":'", ",", " src", "_", "folder", ")", "\n", "        ", "return", " False", "\n", "    ", "except", " Exception", ":", "\n", "        ", "print", "('", "Unknown", " error", " while", " copying", " and", " deleting", " files", ".", "')", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -1.6752082109451294, -0.00010144196130568162, -2.1815061700181104e-05, -1.1927151679992676, -0.0019687095191329718, -0.0005463061388581991, -0.004451247863471508, -0.00021991695393808186, -0.00015400654228869826, -0.0001311216183239594, -0.16505977511405945, -2.5748875486897305e-05, -0.00017128908075392246, -0.07080843299627304, -0.022019311785697937, -0.23475608229637146, -1.029620885848999, -2.074220174108632e-05, -0.31988078355789185, -0.011116358451545238, -0.0005050813779234886, -0.03471117466688156, -7.295342220459133e-05, -0.00010609064338495955, -0.0012821081327274442, -0.06278208643198013, -1.4766151905059814, -0.0027782435063272715, -1.380305290222168, -0.047541387379169464, -2.1219027985353023e-05, -0.15212319791316986, -0.0445641465485096, -0.000399033073335886, -2.054405689239502, -1.131462812423706, -2.4379043579101562, -0.39541134238243103, -0.011169761419296265, -2.3556759357452393, -0.001335801207460463, -0.038839247077703476, -0.0014393694000318646, -0.0006878394051454961, -0.009353270754218102, -0.005112313199788332, -0.32754501700401306, -0.12559744715690613, -0.005299330223351717, -0.006040886975824833, -0.028592364862561226, -0.052870772778987885, -1.3630353212356567, -1.07287787614041e-05, -1.9073468138230965e-06, -0.7370977997779846, -0.0044067418202757835, -0.00027176024741493165, -0.05120227485895157, -0.03360888734459877, -3.459099769592285, -0.0267795380204916, -0.5479265451431274, -1.0054234266281128, -0.0003399271226953715, -0.012699917890131474, -0.0002824861148837954, -0.00014172980445437133, -0.014563098549842834, -0.0021144431084394455, -0.007081173360347748, -0.02316100150346756, -0.0007304860628210008, -0.014893883839249611, -0.08328737318515778, -1.8272337913513184, -0.16139644384384155, -0.5996481776237488, -0.008972917683422565, -0.0003069168305955827, -0.11209847778081894, -0.024342110380530357, -1.8280158042907715, -0.11801252514123917, -1.9372167587280273, -3.086745262145996, -1.0370662212371826, -0.09006818383932114, -2.123278856277466, -0.7610243558883667, -0.039775073528289795, -0.0011076750233769417, -0.0115036740899086, -0.010852953419089317, -0.001524715917184949, -0.010764979757368565, -0.08482624590396881, -0.27650579810142517, -0.002900443272665143, -0.5895586609840393, -0.010049224831163883, -0.5745882391929626], "finish_reason": "stop"}], "metrics": {"energy": 121.57910661315914, "energy_per_token": 1.1469727038977278, "time": 4.42812, "time_per_token": 0.041774716981132075}}
{"outputs": [{"text": "# Check if source folder exists\n    if not os.path.isdir(src_folder):\n        raise ValueError(f\"The source folder '{src_folder}' does not exist.\")\n\n    try:\n        # Delete source folder\n        os.remove(src_folder)\n\n        # Create backup directory\n        os.makedirs(backup_dir, exist_ok=True)\n\n        # Move source folder contents to backup directory\n        shutil.move(src_folder, backup_dir)\n\n        return True\n\n    except Exception as e:\n        print(f\"An error occurred while backing up and deleting the source folder: {e}\")\n        return False", "tokens": ["#", " Check", " if", " source", " folder", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " source", " folder", " '", "{", "src", "_", "folder", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Delete", " source", " folder", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "\n", "        ", "#", " Create", " backup", " directory", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "#", " Move", " source", " folder", " contents", " to", " backup", " directory", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "\n", "        ", "return", " True", "\n", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "An", " error", " occurred", " while", " backing", " up", " and", " deleting", " the", " source", " folder", ":", " {", "e", "}\"", ")", "\n", "        ", "return", " False", "\n", "\n", "#"], "logprobs": [-2.139662027359009, -0.5260730981826782, -0.21219806373119354, -1.8460716009140015, -0.02400221675634384, -0.01536144781857729, -0.10811825096607208, -0.0012268644059076905, -0.015071212314069271, -0.020712392404675484, -0.004176703747361898, -5.483612312673358e-06, -3.361645576660521e-05, -0.0005573864909820259, -1.6017265319824219, -0.0026679181028157473, -3.3854863431770355e-05, -0.0008120815036818385, -0.00023421882360707968, -4.2914423829643056e-05, -0.00045158201828598976, -0.0010066924151033163, -0.0003849719068966806, -0.012817027978599072, -0.013184744864702225, -1.0013530300057027e-05, -0.7551920413970947, -0.2966303825378418, -0.4634004831314087, -1.9291009902954102, -0.19509980082511902, -0.008058298379182816, -0.5724563002586365, -9.917721035890281e-05, -0.0013261580606922507, -8.630380034446716e-05, -0.0002294515579706058, -0.000802075956016779, -0.027995333075523376, -0.00020597243565134704, -0.0015880366554483771, -0.07721635699272156, -0.004098706413060427, -6.174850568640977e-05, -0.0013409203384071589, -0.08097126334905624, -0.0008744944934733212, -2.564976692199707, -3.85038583772257e-05, -0.0008659188752062619, -0.002477316651493311, -0.5141989588737488, -3.8933329582214355, -0.8122844099998474, -0.010459722951054573, -0.3222317099571228, -0.00035613393993116915, -1.7536191940307617, -7.867782187531702e-06, -1.419007658958435, -0.0014171091606840491, -0.03547301143407822, -6.747018051100895e-05, -0.00017712931730784476, -0.0005874100024811924, -0.007935071364045143, -0.5513479113578796, -0.05069338530302048, -0.014738136902451515, -1.623593807220459, -0.29047468304634094, -1.3544425964355469, -0.9298951029777527, -0.00020656836568377912, -0.78465735912323, -0.001341872732155025, -0.06048986315727234, -4.207999518257566e-05, -0.0006569849792867899, -9.512448741588742e-05, -0.011639776639640331, -9.417489309271332e-06, -7.009260298218578e-05, -0.07750344276428223, -0.0076718926429748535, 0.0, -2.5748875486897305e-05, -0.0006180283380672336, -0.007625045254826546, -0.0010912423022091389, -0.024366891011595726, -0.056715790182352066, -0.0018767378060147166, -0.01013678964227438, -1.8661282062530518, -0.17932765185832977, -0.06272890418767929, -1.1863293647766113, -0.09128889441490173, -0.039314206689596176, -0.12328772246837616, -0.010584171861410141, -0.00019405389321036637, -0.0783635675907135, -3.158996332786046e-05, -1.9073468138230965e-06, -0.04810994118452072, -0.00019572250312194228, -0.004982436075806618, -9.738924563862383e-05, -1.1205610462639015e-05, -0.0003580405900720507, -0.00544149661436677, -2.002696055569686e-05, -3.6477376852417365e-05, -0.0025676873046904802, -0.001313419546931982, -0.5307021141052246, -0.2516564726829529, -0.45851489901542664, -0.004256119020283222, -0.007950563915073872, -0.9203053116798401, -0.000653530121780932, -0.012902114540338516, -0.03454040363430977, -0.09691315144300461, -0.07121172547340393, -4.5298504119273275e-05, -0.010590423829853535, -0.0013300867285579443, -0.41975483298301697, -0.03232569247484207, -0.1104138195514679, -0.03543538972735405, -0.29610806703567505, -0.005204462446272373, -0.005635682959109545, -0.08977171033620834, -0.6796595454216003, -0.0007655074005015194, -0.32345595955848694, -0.005385533440858126, -0.09600505977869034, -0.0237690769135952, -0.003257565898820758, -0.28376224637031555, -0.003947087563574314, -0.19542939960956573, -0.02771082893013954, -0.044913992285728455, -0.06766237318515778, -0.1522136926651001, -0.013165097683668137, -0.0001934579631779343, -0.6379512548446655, -0.006369053851813078, -2.132042646408081], "finish_reason": "stop"}], "metrics": {"energy": 167.64658334159844, "energy_per_token": 1.0610543249468256, "time": 6.940294, "time_per_token": 0.043925911392405065}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError('Source folder does not exist.')\n    shutil.copytree(src_folder, backup_dir)\n    try:\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        # Print any error messages\n        print(f'Error deleting source folder: {src_folder}')\n        print(f'Error message: {str(e)}')\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "Source", " folder", " does", " not", " exist", ".", "')", "\n", "    ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " Print", " any", " error", " messages", "\n", "        ", "print", "(", "f", "'", "Error", " deleting", " source", " folder", ":", " {", "src", "_", "folder", "}", "')", "\n", "        ", "print", "(", "f", "'", "Error", " message", ":", " {", "str", "(", "e", ")}", "')", "\n", "        ", "return", " False", "\n", "    ", "return", " True", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.6404927968978882, -0.6821612119674683, -0.010087579488754272, -0.05423561856150627, -0.00011121608258690685, -0.002211745595559478, -0.29827558994293213, -0.004579057916998863, -0.00096941675292328, -0.8235864043235779, -1.131646752357483, -0.00010585224663373083, -2.098061486321967e-05, -1.6315929889678955, -0.012670962139964104, -0.0002873722987715155, -0.007798700127750635, -8.332382276421413e-05, -7.784063927829266e-05, -0.00023195437097456306, -0.16638273000717163, -2.7179348762729205e-05, -6.353653589030728e-05, -0.09064595401287079, -0.03903978317975998, -0.010277561843395233, -1.262815237045288, -8.535020606359467e-05, -0.0010251511121168733, -0.0005526207387447357, -0.13478578627109528, -4.5536911784438416e-05, -3.6954195820726454e-05, -4.1483970562694594e-05, -2.825220326485578e-05, -0.00016699827392585576, -0.00177714170422405, -0.00010609064338495955, -1.4781842764932662e-05, -0.01613558456301689, -0.006259005516767502, -0.37608322501182556, -0.0013812773395329714, -0.09059804677963257, -0.47011980414390564, -0.11125389486551285, -5.090107151772827e-05, -0.00946581270545721, -0.00022718709078617394, -2.8505101203918457, -4.299229621887207, -2.490225315093994, -1.1969504356384277, -1.1436554193496704, -1.9773857593536377, -0.00043644916149787605, -0.13383398950099945, -0.09626223146915436, -0.704598069190979, -0.3992551565170288, -0.27917227149009705, -1.1037993431091309, -0.16499266028404236, -0.0027831175830215216, -0.021471314132213593, -0.0014632957754656672, -1.640176773071289, -0.00032360086333937943, -0.0002805792901199311, -0.3131185472011566, -0.5508782267570496, -0.003704235190525651, -0.009219218976795673, -0.20253711938858032, -0.038564808666706085, -0.33010101318359375, -0.030667731538414955, -0.3481259047985077, -1.3318943977355957, -0.01342342421412468, -0.002515130676329136, -0.8139697909355164, -0.00010775939153973013, -0.0023268787190318108, -0.006975109688937664, -0.0009971652179956436, -0.004080779384821653, -0.08563534170389175, -0.3759269714355469, -0.0007358465809375048, -0.013829600065946579, -0.025924628600478172, -0.09405847638845444, -0.0010507544502615929, -0.6787317991256714, -0.007120352238416672, -0.4791840612888336], "finish_reason": "stop"}], "metrics": {"energy": 128.43878142356874, "energy_per_token": 1.1266559773997258, "time": 4.8429737, "time_per_token": 0.04248222543859649}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f\"{src_folder} does not exist\")\n    try:\n        shutil.make_archive(backup_dir, 'gztar', src_folder)\n        os.remove(src_folder)\n        print(\"Source folder backed up to {}\".format(backup_dir))\n    except Exception as e:\n        print(\"Error while deleting source folder: {}\".format(str(e)))\n        return False\n    return True", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "{", "src", "_", "folder", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "print", "(", "\"", "Source", " folder", " backed", " up", " to", " {", "}\"", ".", "format", "(", "backup", "_", "dir", "))", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "\"", "Error", " while", " deleting", " source", " folder", ":", " {", "}\"", ".", "format", "(", "str", "(", "e", ")))", "\n", "        ", "return", " False", "\n", "    ", "return", " True"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -0.3533289432525635, -0.6893883943557739, -2.2194786071777344, -0.007877591997385025, -0.00021336186910048127, -0.0004538459761533886, -0.05469338968396187, -0.20880991220474243, -0.0006967739318497479, -0.006671062204986811, -1.088793158531189, -0.0002361257211305201, -0.006623812485486269, -0.8138872385025024, -0.8357237577438354, -0.00021431533969007432, -0.00036197309964336455, -0.001488054753281176, -0.09851731359958649, -3.0040289857424796e-05, -7.748573807475623e-06, -0.34459492564201355, -2.7418097943154862e-06, -0.0012881800066679716, -0.010939269326627254, -0.18457083404064178, -0.00010346830822527409, -0.0009135602158494294, -0.014868514612317085, -0.10053426027297974, -1.2629789113998413, -0.0003106111544184387, -0.007464139256626368, -0.0001817776501411572, -0.07647617906332016, -0.0002857038634829223, -5.1616290875244886e-05, -0.02557341940701008, -0.01770630292594433, -0.08928829431533813, -0.3179655075073242, -1.0609570381348021e-05, -0.26133236289024353, -0.00016437610611319542, -0.006911182310432196, -6.4490144723095e-05, -3.421248038648628e-05, -0.0014137759571895003, -0.007857603952288628, -0.6603763699531555, -2.726519823074341, -0.11707229912281036, -1.2618916034698486, -1.88872492313385, -0.03789738193154335, -1.0135290622711182, -0.00722486199811101, -1.515503168106079, -1.2632170915603638, -0.20236527919769287, -0.003318519564345479, -0.002214838284999132, -0.0002015625941567123, -0.01436499785631895, -0.0001760566228767857, -0.0006189814303070307, -0.017508121207356453, -0.0013893722789362073, -1.2233890295028687, -0.003945306409150362, -0.07209401577711105, -0.17552898824214935, -0.13566403090953827, -0.0002300474588992074, -0.005574158858507872, -0.0005085367010906339, -0.10199226438999176, -0.019185451790690422, -0.6234804391860962, -0.6672908067703247, -1.1393860578536987, -0.9139239192008972, -0.5533925294876099, -0.009160513989627361, -0.22329631447792053, -0.15774600207805634, -0.007313148118555546, -0.0014177043922245502, -0.0024561495520174503, -0.0001932195882545784, -1.8506767749786377, -0.00018034738604910672, -0.0008562712464481592, -0.005276088137179613, -0.015733394771814346, -0.18467262387275696, -0.03351343795657158, -0.0009382136631757021, -0.020420435816049576, -0.04525425657629967, -0.06951107829809189, -0.001508409040980041], "finish_reason": "stop"}], "metrics": {"energy": 141.20204913711552, "energy_per_token": 1.176683742809296, "time": 5.0584474, "time_per_token": 0.042153728333333335}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError('The source folder does not exist.')\n\n    try:\n        shutil.make_archive(backup_dir, 'tar', src_folder)\n        os.remove(src_folder)\n        return True\n    except Exception as e:\n        # TODO: handle the error\n        pass\n    return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " source", " folder", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " TODO", ":", " handle", " the", " error", "\n", "        ", "pass", "\n", "    ", "return", " False", "\n", "\n", "if"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.6404927968978882, -0.9107569456100464, -0.07600175589323044, -0.004225018434226513, -0.025974690914154053, -0.00013064485392533243, -0.0011513754725456238, -0.13468514382839203, -0.0036582706961780787, -0.0008775911992415786, -0.5222064852714539, -0.0002586507180240005, -0.6898426413536072, -5.447716102935374e-05, -0.00037865620106458664, -0.0013237770181149244, -0.08813270926475525, -2.586808113846928e-05, -6.794906312279636e-06, -0.4203625023365021, -1.4305104514278355e-06, -0.0012209111591801047, -0.03669437766075134, -0.18841545283794403, -7.271502545336261e-05, -0.0010503972880542278, -0.01441869791597128, -0.051769088953733444, -2.621276378631592, -0.027739932760596275, -0.0004122599493712187, -0.08484366536140442, -0.0006194579764269292, -8.654219709569588e-05, -0.014020754024386406, -0.019064875319600105, -0.10512664914131165, -0.327222615480423, -8.821448318485636e-06, -0.19362792372703552, -0.0001433984871255234, -0.0075366683304309845, -7.462222856702283e-05, -2.586808113846928e-05, -0.0022653888445347548, -0.008766498416662216, -0.5287627577781677, -0.062407635152339935, -0.005000821780413389, -0.0019357530400156975, -0.05496535450220108, -0.001129108713939786, -0.03801008313894272, -0.4051268994808197, -0.11803265661001205, -4.2676016164477915e-05, -0.005526502151042223, -0.000161038784426637, -3.4551095962524414, -2.8779850006103516, -0.2140914350748062, -2.354935884475708, -1.1947038173675537, -1.1054060459136963, -1.056044101715088, -0.0013063953956589103, -2.394705295562744, -0.09986865520477295, -0.5683533549308777, -0.054262492805719376, -0.0020623384043574333, -0.6192963719367981, -0.006398666650056839, -0.5257908701896667], "finish_reason": "stop"}], "metrics": {"energy": 112.72021934127808, "energy_per_token": 1.2386837290250339, "time": 4.226281, "time_per_token": 0.04644264835164835}}
{"outputs": [{"text": "try:\n        if os.path.isfile(src_folder):\n            os.makedirs(backup_dir, exist_ok=True)\n            shutil.copyfile(src_folder, os.path.join(backup_dir, os.path.basename(src_folder)))\n            os.remove(src_folder)\n            return True\n        else:\n            raise ValueError('The source folder does not exist.')\n    except Exception as e:\n        print(f'Error occurred while deleting source folder: {e}')\n        return False", "tokens": ["try", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "src", "_", "folder", "):", "\n", "            ", "os", ".", "m", "aked", "irs", "(", "backup", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "            ", "sh", "util", ".", "copy", "file", "(", "src", "_", "folder", ",", " os", ".", "path", ".", "join", "(", "backup", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "folder", ")))", "\n", "            ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "            ", "return", " True", "\n", "        ", "else", ":", "\n", "            ", "raise", " Value", "Error", "('", "The", " source", " folder", " does", " not", " exist", ".", "')", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "Error", " occurred", " while", " deleting", " source", " folder", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "\n", "\n", "if"], "logprobs": [-1.2498514652252197, -0.0002002515539061278, -0.0019195717759430408, -0.004189405590295792, -0.8855334520339966, -1.5501452684402466, -6.6756979322235566e-06, -0.0027813343331217766, -0.0012417471734806895, -1.1786348819732666, -2.0586869716644287, -0.001142564113251865, -0.04257822409272194, -0.0001147919538198039, -0.00034195298212580383, -0.0692046582698822, -0.05156656354665756, -0.0013423488708212972, -2.2668399810791016, -0.00011717586312443018, -1.216841459274292, -0.0004058252670802176, -0.0009409529156982899, -0.0017115719383582473, -0.1358601152896881, -2.3007127310847864e-05, -0.00014673586701974273, -0.0690198764204979, -0.007150889839977026, -2.3841855067985307e-07, -5.352353764465079e-05, -0.0016355245606973767, -0.0035671668592840433, -0.0014461545506492257, -0.02411067858338356, -0.020140545442700386, -0.059248700737953186, -3.361645576660521e-05, -3.6954811548639555e-06, -0.21176119148731232, -1.5295324325561523, -0.008152895607054234, -0.007964283227920532, -8.689979586051777e-05, -0.00029845553217455745, -0.00013779645087197423, -0.0505087748169899, -1.2159273865108844e-05, -2.0503786799963564e-05, -0.0009260656661354005, -0.0003259842633269727, -2.7894584491150454e-05, -0.008936174213886261, -0.0001062098381225951, -1.2040065485052764e-05, -0.00044943721150048077, -0.0708661824464798, -0.0003328961320221424, -0.0016732513904571533, -0.0015974391717463732, -0.03063778765499592, -1.5497195136049413e-06, -7.426462980220094e-05, -0.00522011611610651, -0.0002351722796447575, -2.992108420585282e-05, -0.0021274094469845295, -0.0037268009036779404, -0.33432039618492126, -0.1000395193696022, -1.3828182090946939e-05, -0.12898622453212738, -0.00014244495832826942, -0.00483035808429122, -7.164221460698172e-05, -1.3828182090946939e-05, -0.0002525725867599249, -0.009073217399418354, -0.5657505989074707, -0.08479613065719604, -0.007546961773186922, -0.002584690460935235, -0.24663157761096954, -0.7558408379554749, -0.00011252723925281316, -0.00648536765947938, -0.0006702084210701287, -0.4278927147388458, -0.08211176097393036, -2.2053474822314456e-05, -0.7701365947723389, -0.7324612736701965, -0.3824504017829895, -0.024798186495900154, -0.16498883068561554, -0.0002795067266561091, -0.0018039158312603831, -0.15868142247200012, -0.00934925489127636, -0.001580062322318554, -0.044633347541093826, -0.0026680370792746544, -0.0914124920964241, -0.18854764103889465, -0.14759771525859833, -7.10462118149735e-05, -0.006536176428198814, -0.0003607814433053136, -0.24540968239307404, -0.2425641566514969, -0.2531607747077942, -0.22830702364444733, -0.8887705206871033, -1.0295671224594116, -0.388751357793808, -1.2209715843200684, -2.341148853302002, -0.01341330911964178, -0.06985574960708618, -0.0065063307993113995, -0.4957411587238312, -0.02735085040330887, -0.010334313847124577, -0.011606783606112003, -0.044988300651311874, -0.025916149839758873, -0.0003103728231508285, -0.5063063502311707, -0.036088019609451294, -0.4494397044181824], "finish_reason": "stop"}], "metrics": {"energy": 145.58920326232908, "energy_per_token": 1.1199169481717621, "time": 5.4784636, "time_per_token": 0.042142027692307696}}
{"outputs": [{"text": "src_exists = os.path.exists(src_folder)\n\n    if src_exists is False:\n        raise ValueError(\n            f'The source folder {src_folder} does not exist.')\n\n    try:\n        shutil.make_archive(backup_dir, 'gztar', src_folder)\n        os.remove(src_folder)\n        return True\n    except Exception:\n        raise Exception(\n            'An error occurred while deleting the source folder.')", "tokens": ["src", "_", "exists", " =", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", ")", "\n", "\n", "    ", "if", " src", "_", "exists", " is", " False", ":", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "'", "The", " source", " folder", " {", "src", "_", "folder", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "make", "_", "archive", "(", "backup", "_", "dir", ",", " '", "gz", "tar", "'", ",", " src", "_", "folder", ")", "\n", "        ", "os", ".", "remove", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", ":", "\n", "        ", "raise", " Exception", "(", "\n", "            ", "'", "An", " error", " occurred", " while", " deleting", " the", " source", " folder", ".", "')", "\n", "\n", "def"], "logprobs": [-3.4456045627593994, -0.02761957049369812, -2.7084996700286865, -0.007884097285568714, -0.03821617737412453, -3.421248038648628e-05, -0.0007839705212973058, -0.002000356325879693, -0.2799408733844757, -0.0002627027570270002, -0.001100173220038414, -2.3007127310847864e-05, -0.00017915551143232733, -0.00013696208770852536, -0.009546817280352116, -2.456962823867798, -0.00011288482346571982, -0.08588261157274246, -1.5662295818328857, -1.764281842042692e-05, -0.0013708013575524092, -2.4886844158172607, -0.16325606405735016, -0.0022150760050863028, -0.010152720846235752, -0.0025469979736953974, -0.04715584218502045, -0.026903366670012474, -4.3987260141875595e-05, -0.8088846206665039, -2.658339262008667, -0.008113166317343712, -0.5436310172080994, -0.8668857216835022, -0.8962416648864746, -0.3632583022117615, -0.07151263952255249, -0.9453820586204529, -0.011590405367314816, -9.667406266089529e-05, -0.001639332971535623, -0.027679288759827614, -0.09782765805721283, -0.0021421597339212894, -0.01673293672502041, -0.37348389625549316, -0.5383007526397705, -0.006744122598320246, -0.08794811367988586, -0.0005212855176068842, -0.8778388500213623, -0.00017438798386137933, -0.0007191693875938654, -0.007967948913574219, -0.10569749772548676, -5.280832192511298e-05, -2.1934269170742482e-05, -0.350640207529068, -2.622600959512056e-06, -0.001061233808286488, -0.021782560274004936, -0.3146933615207672, -0.00014852374442853034, -0.0019501493079587817, -0.011061537079513073, -0.122346431016922, -1.2394441366195679, -0.00047910655848681927, -0.010289006866514683, -0.00018344627460464835, -0.13535943627357483, -0.00025567124248482287, -0.0013846105430275202, -0.0257837176322937, -0.012809495441615582, -0.28787100315093994, -0.5595055222511292, -2.2172682292875834e-05, -0.205762580037117, -0.0002889215829782188, -0.005980573128908873, -5.98412734689191e-05, -9.905801562126726e-05, -0.0016226709121838212, -0.007778591942042112, -0.8883736729621887, -0.11798053234815598, -0.009244140237569809, -0.002502645133063197, -0.14836324751377106, -0.002999927382916212, -0.09063778817653656, -1.8263195753097534, -0.018944986164569855, -0.001453891978599131, -1.9444687366485596, -1.2052106857299805, -0.7979310154914856, -0.5029773712158203, -0.0026314177084714174, -2.59421706199646, -0.2660365402698517, -0.12479081749916077, -0.08177348226308823, -0.013662398792803288, -0.29724568128585815, -0.047930873930454254, -0.017367543652653694, -0.013050146400928497, -0.600385844707489, -0.09966938197612762, -0.7731736302375793, -0.10278017073869705, -1.4667034149169922], "finish_reason": "stop"}], "metrics": {"energy": 115.24093239212036, "energy_per_token": 1.010885371860705, "time": 4.850324, "time_per_token": 0.04254670175438596}}
{"outputs": [{"text": "if not os.path.exists(src_folder):\n        raise ValueError(f'Source folder does not exist: {src_folder}')\n    try:\n        shutil.copytree(src_folder, backup_dir)\n        shutil.rmtree(src_folder)\n        return True\n    except Exception as e:\n        print(f'An error occurred while backing up and deleting: {e}')\n        return False", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Source", " folder", " does", " not", " exist", ":", " {", "src", "_", "folder", "}", "')", "\n", "    ", "try", ":", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "dir", ")", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "        ", "return", " True", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "'", "An", " error", " occurred", " while", " backing", " up", " and", " deleting", ":", " {", "e", "}", "')", "\n", "        ", "return", " False", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.6945993900299072, -0.057444509118795395, -0.017485512420535088, -1.0967194612021558e-05, -9.810443589231e-05, -0.0008424547268077731, -0.31759557127952576, -0.0002109781780745834, -0.0028552738949656487, -2.3841830625315197e-06, -4.95898348162882e-05, -0.0014894831692799926, -0.006154632195830345, -0.0006043276516720653, -0.01527281291782856, -0.014900578185915947, -2.2291887944447808e-05, -0.7583211660385132, -0.3533289432525635, -0.8220788240432739, -0.6950864791870117, -0.016716642305254936, -0.8770719766616821, -0.00034457468427717686, -0.005730628501623869, -0.0459599494934082, -0.008262262679636478, -0.0032526941504329443, -0.00020859450160060078, -0.0003846143954433501, -0.016500089317560196, -0.033156465739011765, -0.0016438555903732777, -1.0747365951538086, -0.7883293628692627, -0.00010251473577227443, -0.000339569611242041, -0.0010149095905944705, -0.0949460044503212, -3.2543604902457446e-05, -8.22540732769994e-06, -1.4688754081726074, -0.003502308391034603, -0.00024530262453481555, -0.0036221628542989492, -9.881961887003854e-05, -5.9126061387360096e-05, -0.00013767725613433868, -0.21569553017616272, -1.2993727978027891e-05, -5.8053239627042785e-05, -0.11496870964765549, -0.01740901544690132, -0.11681808531284332, -0.5581092834472656, -0.0002329078270122409, -0.00019464982324279845, -6.770858453819528e-05, -2.992108420585282e-05, -0.00011276562872808427, -0.0024525821208953857, -9.929640509653836e-05, -1.0847986231965479e-05, -0.02251467853784561, -0.004925854504108429, -0.454615980386734, -0.07471554726362228, -0.003955517895519733, -0.0021651177667081356, -0.005500538740307093, -0.001658732071518898, -0.06838461011648178, -0.23579785227775574, -0.14926354587078094, -5.185469490243122e-05, -0.006091125775128603, -0.0001597276859683916, -0.4739043712615967, -0.09882070869207382, -0.062286000698804855, -0.058459457010030746, -1.2436232566833496, -0.008214497938752174, -0.014746359549462795, -0.12885701656341553, -0.5559480786323547, -0.001369729870930314, -0.4515645205974579, -0.006747082807123661, -2.3315365314483643, -0.004813393112272024, -0.37656763195991516, -0.02900203876197338, -0.006955813616514206, -0.008821445517241955, -0.01555101852864027, -0.013331794179975986, -0.00032443503732793033, -1.0400888919830322, -8.344646857949556e-07, -3.576278118089249e-07, -3.0040289857424796e-05, -0.00010382589971413836, -0.2815832495689392], "finish_reason": "stop"}], "metrics": {"energy": 142.26714989852906, "energy_per_token": 1.3679533644089332, "time": 4.4296064, "time_per_token": 0.04259236923076923}}
{"outputs": [{"text": "# Check if the source folder exists.\n    if not os.path.exists(src_folder):\n        raise ValueError('The source folder does not exist.')\n\n    # Create a temporary backup folder.\n    backup_folder = tempfile.mkdtemp()\n\n    try:\n        # Copy the source folder to the backup folder.\n        shutil.copytree(src_folder, backup_folder)\n\n        # Delete the source folder.\n        shutil.rmtree(src_folder)\n    except Exception as e:\n        # If an error occurs, delete the backup folder and raise an exception.\n        shutil.rmtree(backup_folder)\n        raise Exception(e)\n    else:\n        # Return True if the operation is successful.\n        return True\n    finally:\n        # Delete the backup folder.\n        shutil.rmtree(backup_folder)", "tokens": ["#", " Check", " if", " the", " source", " folder", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "folder", "):", "\n", "        ", "raise", " Value", "Error", "('", "The", " source", " folder", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Create", " a", " temporary", " backup", " folder", ".", "\n", "    ", "backup", "_", "folder", " =", " temp", "file", ".", "mk", "d", "temp", "()", "\n", "\n", "    ", "try", ":", "\n", "        ", "#", " Copy", " the", " source", " folder", " to", " the", " backup", " folder", ".", "\n", "        ", "sh", "util", ".", "copy", "tree", "(", "src", "_", "folder", ",", " backup", "_", "folder", ")", "\n", "\n", "        ", "#", " Delete", " the", " source", " folder", ".", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "src", "_", "folder", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "#", " If", " an", " error", " occurs", ",", " delete", " the", " backup", " folder", " and", " raise", " an", " exception", ".", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "backup", "_", "folder", ")", "\n", "        ", "raise", " Exception", "(", "e", ")", "\n", "    ", "else", ":", "\n", "        ", "#", " Return", " True", " if", " the", " operation", " is", " successful", ".", "\n", "        ", "return", " True", "\n", "    ", "f", "inally", ":", "\n", "        ", "#", " Delete", " the", " backup", " folder", ".", "\n", "        ", "sh", "util", ".", "rm", "tree", "(", "backup", "_", "folder", ")"], "logprobs": [-2.139662027359009, -0.5260730981826782, -0.21219806373119354, -0.27346840500831604, -0.045352350920438766, -0.011588637717068195, -0.007592156529426575, -2.1864638328552246, -0.03596382960677147, -0.0011208925861865282, -0.029280155897140503, -0.017315875738859177, -0.003575481940060854, -7.867782187531702e-06, -3.6954195820726454e-05, -0.0006672301678918302, -0.15481948852539062, -8.034383063204587e-05, -0.0007370378007180989, -5.07818695041351e-05, -4.0649541915627196e-05, -0.0011297041783109307, -0.001010384177789092, -0.0004419303731992841, -0.01666927896440029, -0.013672629371285439, -1.1324817933200393e-05, -0.5668531060218811, -0.6403364539146423, -0.04543209448456764, -0.0029162520077079535, -0.020018214359879494, -0.00010358751023886725, -0.0009888288332149386, -0.05402534827589989, -0.0033745982218533754, -0.0008261366747319698, -0.13609464466571808, -0.0010696887038648129, -0.08587648719549179, -1.084506630897522, -0.9152295589447021, -1.69309663772583, -0.7014061212539673, -0.8681751489639282, -0.5001174807548523, -0.0025216706562787294, -0.00030596344731748104, -0.46714696288108826, -0.04953257367014885, -0.24520036578178406, -0.009915501810610294, -0.6790904998779297, -8.308542601298541e-05, -4.2199197196168825e-05, -0.001634096377529204, -0.011783401481807232, -0.00014327930693980306, -0.11671360582113266, -0.0025617422070354223, -0.38555246591567993, -0.0001591317413840443, -1.9421663284301758, -1.7881233361549675e-05, -0.000436091679148376, -0.004266090225428343, -0.11245094239711761, -0.46434497833251953, -0.07762566953897476, -0.14038193225860596, -0.014335972256958485, -0.22160552442073822, -0.0031350532080978155, -0.8243036866188049, -0.0375157929956913, -0.03913768380880356, -0.0009410720085725188, -0.00019965562387369573, -0.02545163594186306, -1.8358061424805783e-05, -1.9073468138230965e-06, -0.011166342534124851, -0.0001941730733960867, -6.0794889577664435e-05, -0.0022903657518327236, -9.178694017464295e-05, -2.312633478140924e-05, -5.638440416078083e-05, -0.007565063424408436, -1.4781842764932662e-05, -0.00012218205665703863, -0.030763797461986542, -0.0015184074873104692, -0.08341734111309052, -0.01337837427854538, -0.004526962526142597, -0.17258933186531067, -0.0005233110277913511, -0.04175855964422226, -0.0004166688595432788, -0.03717552125453949, -0.0031015409622341394, -0.0002740246127359569, -0.4244934916496277, -0.0003321811091154814, -8.940297266235575e-05, -5.185469490243122e-05, -1.3112935448589269e-05, -0.0001255195093108341, -0.004984689876437187, -3.886147169396281e-05, -3.3378044463461265e-05, -0.018973995000123978, -0.0016351675149053335, -1.7549692392349243, -0.02331637404859066, -0.11818858236074448, -0.7287994027137756, -0.05382801964879036, -2.7179348762729205e-05, -0.01085719931870699, -0.00047231485950760543, -0.19227592647075653, -0.5034457445144653, -0.3478600084781647, -0.032870542258024216, -0.007497150916606188, -0.983640730381012, -0.543548583984375, -0.0026515109930187464, -1.345606803894043, -0.005596801172941923, -0.6034303903579712, -0.4599164128303528, -1.599593997001648, -0.34819793701171875, -0.04076565057039261, -0.0005611990345641971, -0.00042834642226807773, -0.10103759914636612, -4.100715523236431e-05, -9.345571743324399e-05, -8.702239938429557e-06, -9.059865078597795e-06, -5.221230458118953e-05, -0.0007379907765425742, -7.629365427419543e-06, -0.00029213930247351527, -0.03008616529405117, -0.004876861814409494, -0.00801951065659523, -0.011803311295807362, -1.2861536741256714, -0.11724427342414856, -1.3796579837799072, -0.02845345251262188, -0.07871181517839432, -0.6468135714530945, -0.26368042826652527, -2.074220174108632e-05, -0.0021460852585732937, -0.0005248599336482584, -0.3375483453273773, -2.596179962158203, -0.04954584687948227, -0.11839521676301956, -0.18440033495426178, -0.3211517632007599, -0.04966359958052635, -0.0017948722233995795, -0.12537632882595062, -0.0004925706889480352, -7.855583680793643e-05, -0.007679936941713095, -0.0024468740448355675, -0.46500876545906067, -1.6463794708251953, -0.006913431454449892, -9.536738616588991e-07, -1.5616295058862306e-05, -0.0008672290714457631, -0.0010605193674564362, -0.017282014712691307, -0.35641106963157654, -0.00262785074301064, -0.7780718803405762, -0.002342220861464739, -0.34272873401641846, -0.007804259657859802, -0.0001820160250645131, -0.00586420064792037, -3.957670196541585e-05, -3.635817120084539e-05, -6.6756979322235566e-06, -2.145764938177308e-06, -5.9960475482512265e-05, -0.0003492222458589822, -0.00010680581908673048, -0.0009461931767873466, -0.4283920228481293], "finish_reason": "stop"}], "metrics": {"energy": 232.55429375076287, "energy_per_token": 1.1627714687538144, "time": 9.041153, "time_per_token": 0.045205764999999995}}
