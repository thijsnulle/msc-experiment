{"outputs": [{"text": "if seed is not None:\n        np.random.seed(seed)\n\n    if len(array) == 0 or array.ndim != 2:\n        raise ValueError('Empty or non-two-dimensional array given.')\n    if features is None:\n        features = [f'c{i}' for i in range(1, array.shape[1]+1)]\n    elif len(features) != array.shape[1]:\n        raise ValueError('Wrong number of features given.')\n\n    shuffled_array = array[np.random.permutation(array.shape[0]), :]\n    ax = sns.heatmap(shuffled_array, yticklabels=features)\n\n    return ax", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "if", " len", "(", "array", ")", " ==", " ", "0", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "Empty", " or", " non", "-", "two", "-", "dimensional", " array", " given", ".", "')", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "f", "'", "c", "{", "i", "}'", " for", " i", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]+", "1", ")]", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "('", "W", "rong", " number", " of", " features", " given", ".", "')", "\n", "\n", "    ", "sh", "uff", "led", "_", "array", " =", " array", "[", "np", ".", "random", ".", "per", "mutation", "(", "array", ".", "shape", "[", "0", "])", ",", " :", "]", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "sh", "uff", "led", "_", "array", ",", " y", "tick", "labels", "=", "features", ")", "\n", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.7895010113716125, -2.458031177520752, -0.41891923546791077, -0.04739098623394966, -0.00012218205665703863, -0.005686653312295675, -0.021110599860548973, -0.0034196253400295973, -0.09834132343530655, -0.00017271934484597296, -0.00030620177858509123, -3.790783375734463e-05, -0.003157394239678979, -0.0008228015503846109, -0.004674459807574749, -0.012699094600975513, -0.0077477190643548965, -0.7794042229652405, -0.00039033422945067286, -0.3227890729904175, -1.6317222118377686, -0.00025555206229910254, -0.023160535842180252, -0.28827184438705444, -0.2569079101085663, -0.001261273049749434, -0.0014543681172654033, -0.4708208739757538, -0.8159464597702026, -0.0003685271949507296, -0.06871931999921799, -0.00035506143467500806, -0.073354572057724, 0.0, -5.960462772236497e-07, -0.0008600826840847731, -0.00012659224739763886, -0.019137853756546974, -0.019720561802387238, -0.0010115751065313816, -0.026504788547754288, -0.001585894264280796, -2.1815061700181104e-05, -1.4197444915771484, -3.6375112533569336, -0.8488195538520813, -0.6736231446266174, -0.043815936893224716, -2.6433489322662354, -0.05263861268758774, -0.022374220192432404, -0.3847651183605194, -2.4334208965301514, -0.7063480615615845, -0.04161883518099785, -0.002454841509461403, -1.7272284030914307, -0.45896729826927185, -0.07326096296310425, -0.1407741755247116, -1.1388916969299316, -0.03024647943675518, -0.018145045265555382, -0.0018330690218135715, -0.1290004700422287, -0.004993942100554705, -0.7356945872306824, -0.6856781840324402, -0.6147605776786804, -3.299130439758301, -0.08452273905277252, -0.1951000988483429, -0.733269214630127, -0.003257565898820758, -0.00037508129025809467, -0.006560336332768202, -0.005965642165392637, -0.00028272447525523603, -0.21961627900600433, -0.0005664412747137249, -0.2353430986404419, -0.0015694693429395556, -0.002641167026013136, -0.013670395128428936, -0.009687081910669804, -1.4408187866210938, -0.00038771264371462166, -0.0028748870827257633, -0.014529732055962086, -0.1466442346572876, -1.3188239336013794, -0.027875002473592758, -7.486063259420916e-05, -0.01082170382142067, -0.0002812943421304226, -0.011917109601199627, 0.0, -3.3378546504536644e-06, -0.013285093940794468, -0.00010907054820563644, -0.00047100416850298643, -0.0010913613950833678, -0.001312109874561429, -0.003692002035677433, -0.001672775368206203, -0.0012548437807708979, -0.011412693187594414, -0.004707444459199905, -5.2927523938706145e-05, -0.6438910365104675, -3.1737663745880127, -0.0003120412293355912, -0.10971395671367645, -0.005265297368168831, -0.41814979910850525, -0.6166706085205078, -0.1689024716615677, -0.17116779088974, -0.0010083595989271998, -0.15299637615680695, -0.000266278104390949, -3.0214006900787354, -0.12179524451494217, -0.02106577903032303, -0.4078053832054138, -0.33424872159957886, -0.0035223839804530144, -1.0702000856399536, -0.9423312544822693, -0.22726550698280334, -8.046303264563903e-05, -0.1384698897600174, -9.905801562126726e-05, -0.17303763329982758, -0.010195555165410042, -0.0012063853209838271, -0.18195635080337524, -0.00011693747364915907, -0.0012206730898469687, -0.004034832119941711, -0.011812971904873848, -0.14920008182525635, -0.0033091329969465733, -0.021234314888715744, -0.0012966329231858253, -0.029299836605787277, -0.48392847180366516, -0.8377741575241089, -0.019500799477100372, -0.09042511880397797, -2.145764938177308e-06, -3.755022044060752e-05, -0.0035709680523723364, -0.00043084874050691724, -0.0003323002893012017, -0.12943574786186218, -0.00011193125828867778, -6.198863957251888e-06, -8.583032467868179e-06, -3.6238969187252223e-05, -0.01103453803807497, -3.3728580474853516, -0.16713130474090576, -0.00017331528943032026, -0.012110867537558079, -0.06340894848108292, -1.4558229446411133, -0.02554657682776451, -1.4424985647201538, -0.003715399419888854, -0.0752730667591095, -0.003158463630825281, -1.3692724704742432, -7.152555099310121e-07, -2.50339189733495e-06, -4.4225667807040736e-05, -0.00013910756388213485, -1.5876164436340332, -0.004071162547916174], "finish_reason": "stop"}], "metrics": {"energy": 302.38491293811774, "energy_per_token": 1.6893011895984231, "time": 10.093211, "time_per_token": 0.056386653631284915}}
{"outputs": [{"text": "array = np.array(array)\n    if len(array.shape) != 2 or array.size == 0:\n        raise ValueError('array must be non-empty 2D numpy array')\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError('Number of features must match number of columns in array')\n\n    if features is None:\n        features = ['A', 'B', 'C', 'D', 'E']\n    elif len(features) != array.shape[1]:\n        raise ValueError('Number of features must match number of columns in array')\n\n    # Create a copy of the array so as not to mutate the original\n    shuffled_array = array.copy()\n    shuffled_array = np.random.permutation(shuffled_array).reshape(shuffled_array.shape[0], shuffled_array.shape[1])\n\n    fig, ax = plt.subplots()\n    sns.heatmap(shuffled_array, annot=True, fmt", "tokens": ["array", " =", " np", ".", "array", "(", "array", ")", "\n", "    ", "if", " len", "(", "array", ".", "shape", ")", " ", "!", "=", " ", "2", " or", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "array", " must", " be", " non", "-", "empty", " ", "2", "D", " numpy", " array", "')", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "('", "Number", " of", " features", " must", " match", " number", " of", " columns", " in", " array", "')", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " ['", "A", "'", ",", " '", "B", "'", ",", " '", "C", "'", ",", " '", "D", "'", ",", " '", "E", "']", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "('", "Number", " of", " features", " must", " match", " number", " of", " columns", " in", " array", "')", "\n", "\n", "    ", "#", " Create", " a", " copy", " of", " the", " array", " so", " as", " not", " to", " mut", "ate", " the", " original", "\n", "    ", "sh", "uff", "led", "_", "array", " =", " array", ".", "copy", "()", "\n", "    ", "sh", "uff", "led", "_", "array", " =", " np", ".", "random", ".", "per", "mutation", "(", "sh", "uff", "led", "_", "array", ")", ".", "resh", "ape", "(", "sh", "uff", "led", "_", "array", ".", "shape", "[", "0", "]", ",", " shuff", "led", "_", "array", ".", "shape", "[", "1", "])", "\n", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "sh", "uff", "led", "_", "array", ",", " annot", "=", "True", ",", " fmt"], "logprobs": [-2.9094181060791016, -0.18733061850070953, -0.05090741813182831, -0.00017176583060063422, -0.7763860821723938, -0.004423713777214289, -0.00285836448892951, -0.10300613939762115, -0.09123905748128891, -0.26517152786254883, -0.2084074765443802, -1.6949262619018555, -0.00028951745480298996, -0.008232350461184978, -0.2733793556690216, -0.02559410221874714, -0.0006997520686127245, -0.1563221514225006, -1.1920928244535389e-07, -2.264974000354414e-06, -0.0008226824575103819, -0.0005230727256275713, -2.1885383129119873, -0.6062551140785217, -0.0017794027226045728, -0.22277621924877167, -0.05449213087558746, -0.0004993622424080968, -8.105902816168964e-05, -0.013272506184875965, -0.02452905662357807, -0.0014725804794579744, -0.034356243908405304, -0.0016146968118846416, -3.433168603805825e-05, -1.3335533142089844, -1.330947995185852, -0.06872455030679703, -0.276242196559906, -2.5719876289367676, -0.055759839713573456, -0.008085968904197216, -0.7157836556434631, -0.0003120412293355912, -0.2481957972049713, -0.9070467948913574, -0.013720016926527023, -0.3644740879535675, -0.002481597475707531, -0.5431618690490723, -0.3356417417526245, -0.06045923009514809, -0.1522149294614792, -0.6241776943206787, -3.0397906812140718e-05, -0.46475932002067566, -0.0936070904135704, -7.676783570786938e-05, -0.022123558446764946, -0.0004621868138201535, -0.00892884936183691, 0.0, -6.198863957251888e-06, -0.06381243467330933, -0.00019107422849629074, -0.0012265071272850037, -0.015708984807133675, -0.0024260631762444973, -0.006417144555598497, -0.0026702960021793842, -0.0007843278581276536, -0.005796409212052822, -0.0033532127272337675, -1.764281842042692e-05, -0.2681933343410492, -2.897340774536133, -0.001029080944135785, -0.24331027269363403, -0.7995398640632629, -0.03479338437318802, -1.0213274955749512, -0.0012016226537525654, -0.03954203054308891, -0.35482943058013916, -0.162184938788414, -0.1279795914888382, -0.00042572495294734836, -0.8109836578369141, -0.0002455409849062562, -1.1692242622375488, -0.26047205924987793, -0.04054749011993408, -0.3278924822807312, -0.005806839093565941, -0.02226102165877819, -0.0013341344892978668, -0.13089241087436676, -0.004598162602633238, -1.174490213394165, -3.6128950119018555, -0.0954858586192131, -0.04476866498589516, -0.027062103152275085, -0.0021438251715153456, -0.0010702840518206358, -0.0001616347290109843, -0.0015044810716062784, -0.00019035911827813834, -0.0005502378917299211, -0.00033539868309162557, -0.0023613683879375458, -0.0004239375703036785, -0.0007502601947635412, -0.0001250427303602919, -0.0008568667690269649, -0.00043084874050691724, -0.2716926336288452, -0.8115668892860413, -1.3557586669921875, -1.988120675086975, -0.2828983962535858, -0.00027783826226368546, -0.005977965891361237, -0.0010064542293548584, -0.34085944294929504, 0.0, -1.9073468138230965e-06, -0.02340453304350376, -0.00013255194062367082, -0.0005678709712810814, -0.0007819455349817872, -0.002257182030007243, -0.004238669760525227, -0.0037645678967237473, -0.001400562352500856, -0.1188865676522255, -0.003565385239198804, -2.3483953555114567e-05, -0.03647429123520851, -0.111078642308712, -0.0005972985527478158, -0.014315172098577023, -0.04167429357767105, -0.020550893619656563, -0.006531320512294769, -0.0005940818227827549, -0.0009832315845414996, -0.005654767621308565, -0.004755140747874975, -0.007336934097111225, -0.0004161922261118889, -0.0713481530547142, -0.00043084874050691724, -2.4973859786987305, -2.974416971206665, -0.466903418302536, -2.0738701820373535, -0.4562143087387085, -0.102332703769207, -0.42261314392089844, -2.002316474914551, -2.2096211910247803, -0.6900587677955627, -0.004865236114710569, -1.854947566986084, -0.002162381773814559, -0.19661858677864075, -0.03678285703063011, -0.6899598836898804, -0.0004334702098276466, -1.3510849475860596, -0.021188098937273026, -0.003021201817318797, -0.20050418376922607, -0.03694497421383858, -0.0008536509121768177, -0.6016374230384827, -0.0736088901758194, -0.006063755601644516, -0.011090539395809174, -0.004431546665728092, -0.6491923332214355, -3.5728917121887207, -0.2569625973701477, -0.0589686818420887, -0.04283374920487404, -0.1256105899810791, -0.09315735101699829, -1.2799032926559448, -0.0005964645533822477, -0.20488640666007996, -6.222531374078244e-05, -0.5422828197479248, -0.017689788714051247, -0.0006547214579768479, -0.14167748391628265, -0.0006301801186054945, -1.0847986231965479e-05, -4.172316494077677e-06, -3.659658250398934e-05, -0.3121030330657959, -2.680385112762451, -0.08529026061296463, -1.7762025890988298e-05, -0.21819251775741577, -1.3323817253112793, -0.0011302995262667537, -0.00016532962035853416, -3.909988299710676e-05, -0.00013422065239865333, -0.0017676219576969743, -0.029219375923275948, -1.3822109699249268, -0.17231985926628113, -0.010851774364709854, -0.010520121082663536, -0.9613116979598999, -2.6702524337451905e-05, -7.581423415103927e-05, -2.8729025871143676e-05, -0.00015424491721205413, -0.0012567488010972738, -0.004723106045275927, -0.023394983261823654, -0.03198757767677307, -0.015453244559466839, -0.3159956932067871, -0.0002862997353076935, -1.8439719676971436, -0.08466535806655884, -0.028448006138205528, -0.01427968218922615, -0.0016323111485689878, -1.4305012882687151e-05, -0.00038223114097490907, -8.487341256113723e-05, -0.540861964225769, -0.004261460620909929, -0.10169456899166107, -0.5102990865707397, -0.0001538873475510627, -0.0022693139035254717, -0.02932831458747387, -0.00011455356434453279, -0.0002464944263920188, -0.06660754233598709, -1.5616295058862306e-05, -2.7418097943154862e-06, -1.811964830267243e-05, -4.5536911784438416e-05, -0.008284962736070156, -1.427292823791504, -0.0023777803871780634, -0.18650898337364197, -0.008075681515038013, -0.528997540473938], "finish_reason": "length"}], "metrics": {"energy": 283.1611535539626, "energy_per_token": 1.1060982560701664, "time": 11.562845, "time_per_token": 0.04516736328125}}
{"outputs": [{"text": "if not isinstance(array, np.ndarray):\n        raise TypeError(\"'array' must be a numpy.ndarray\")\n\n    if array.ndim != 2:\n        raise ValueError(f\"'array' must be a 2D numpy.ndarray, but it has {array.ndim} dimensions.\")\n    if not array.size:\n        raise ValueError(\"'array' must contain elements to be shuffled, but it is empty.\")\n\n    if features is None:\n        features = [str(i) for i in range(1, array.shape[1] + 1)]\n\n    if len(features) != array.shape[1]:\n        raise ValueError(f\"The length of 'features' must match the number of columns in 'array', but it has {len(features)} elements.\")\n\n    rng = np.random.default_rng(seed)\n    indices = rng.permutation(array.shape[1])\n\n    ax = sns.heatmap(array[:, indices],\n                     annot=True", "tokens": ["if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " numpy", ".", "nd", "array", "\"", ")", "\n", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "'", "array", "'", " must", " be", " a", " ", "2", "D", " numpy", ".", "nd", "array", ",", " but", " it", " has", " {", "array", ".", "nd", "im", "}", " dimensions", ".", "\"", ")", "\n", "    ", "if", " not", " array", ".", "size", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " contain", " elements", " to", " be", " shuff", "led", ",", " but", " it", " is", " empty", ".", "\"", ")", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "str", "(", "i", ")", " for", " i", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")]", "\n", "\n", "    ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "The", " length", " of", " '", "features", "'", " must", " match", " the", " number", " of", " columns", " in", " '", "array", "'", ",", " but", " it", " has", " {", "len", "(", "features", ")}", " elements", ".", "\"", ")", "\n", "\n", "    ", "r", "ng", " =", " np", ".", "random", ".", "default", "_", "r", "ng", "(", "seed", ")", "\n", "    ", "indices", " =", " r", "ng", ".", "per", "mutation", "(", "array", ".", "shape", "[", "1", "])", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", "[:", ",", " indices", "]", ",", "\n", "                ", "     ", "annot", "=", "True"], "logprobs": [-0.8079642653465271, -1.2848204374313354, -0.7170402407646179, -0.00023338454775512218, -0.05980300158262253, -0.000886285852175206, -0.010381506755948067, -1.6689160474925302e-05, -0.0003067976504098624, -3.433168603805825e-05, -0.5622075796127319, -0.02150573395192623, -0.002029741881415248, -0.09038406610488892, -0.6630909442901611, -1.2278481335670222e-05, -0.12815211713314056, -0.37768566608428955, -1.527190923690796, -0.007028734777122736, -0.0012037658598273993, -0.06400064378976822, -0.0011447074357420206, -0.11236997693777084, -0.3715880811214447, -2.544684886932373, -0.008746527135372162, -0.00013040646445006132, -0.6500329375267029, -0.00028534632292576134, -0.0029074561316519976, -1.6754984855651855, -0.00017808281700126827, -0.15600919723510742, -0.7311041355133057, -0.000743708573281765, -0.3665958642959595, -0.00034600470098666847, -0.1205039769411087, 0.0, -4.768370445162873e-07, -0.000667468411847949, -0.00019631843315437436, -0.061367761343717575, -0.007247111760079861, -0.0004259632551111281, -0.006346429232507944, -0.017509175464510918, -1.0967194612021558e-05, -0.03448328375816345, -2.886930227279663, -0.016927054151892662, -0.28043457865715027, -0.0013423488708212972, -0.004830120597034693, -0.011142529547214508, -0.026593709364533424, -0.24246294796466827, -0.018462125211954117, -0.0002903516869992018, -0.30929645895957947, -0.4290383756160736, -1.602027416229248, -0.020353274419903755, -0.0015887507470324636, -0.8376296162605286, -1.140188217163086, -1.6440881490707397, -0.7274510264396667, -0.28884318470954895, -0.009116925299167633, -4.708655978902243e-05, -0.01171813067048788, -7.366862701019272e-05, -0.01901528425514698, -0.1260325312614441, -1.7660750150680542, -0.012850216589868069, -0.0034329311456531286, -0.0025808855425566435, -2.0843775272369385, -0.5206253528594971, -2.1582937240600586, -0.2528896629810333, -0.004170174244791269, -0.28368568420410156, -0.03922663629055023, -0.04418463632464409, -0.00026603974401950836, -0.011984722688794136, -0.003499932587146759, -5.364403477869928e-06, -0.012466364540159702, -0.22058577835559845, -0.05012108385562897, -0.00047469791024923325, -0.0008459088858217001, -0.23549975454807281, -2.8533477783203125, -2.9080467224121094, -2.374318838119507, -1.349150538444519, -0.409677654504776, -0.00035982808913104236, -3.2286057472229004, -0.05569951981306076, -0.024634553119540215, -0.2699059545993805, -0.004078523721545935, -0.11104791611433029, -0.0012303171679377556, -0.00031573555315844715, -0.0016479019541293383, -0.27591532468795776, -0.00017033556650858372, -0.2914395034313202, -0.09756072610616684, -0.21075133979320526, -0.7383936047554016, -0.018757812678813934, -0.015650073066353798, -0.0011867393041029572, -0.23447485268115997, -0.005358618218451738, -0.3470219075679779, -0.9286490678787231, -0.008872135542333126, -0.2917157709598541, -0.6251608729362488, -0.0018083186587318778, -0.00048101297579705715, -0.0010927902767434716, -0.0042530326172709465, -0.00032062159152701497, -0.15605519711971283, -0.0006566275842487812, -0.10729289054870605, -0.00020895205670967698, -0.003353687934577465, -0.007025183644145727, -0.012443759478628635, -0.20708715915679932, -0.004895367659628391, -0.0012636542087420821, -0.00010322991875000298, -0.0020762570202350616, -0.026879807934165, -1.4488407373428345, -0.0026686314959079027, -0.10621561110019684, -0.10730766505002975, -5.2689116273541003e-05, -0.00787652749568224, -0.00016282663273159415, -0.011368142440915108, 0.0, -7.152555099310121e-07, -0.00293990527279675, -2.4676019165781327e-05, -0.0007618147064931691, -0.0004037995240651071, -0.0013229437172412872, -0.0026238083373755217, -0.0021012388169765472, -0.000481132126878947, -0.013582197949290276, -0.00326017988845706, -1.2040065485052764e-05, -0.004082678817212582, -0.7504169940948486, -0.0039429315365850925, -1.3306281566619873, -1.014721155166626, -0.009017103351652622, -0.3229413628578186, -0.0025880197063088417, -0.0008511496125720441, -0.6384656429290771, -0.17932555079460144, -0.016018157824873924, -0.009478684514760971, -0.0019488405669108033, -0.007951273582875729, -0.10501138865947723, -0.09782149642705917, -0.002302616136148572, -0.08654797077178955, -0.22563135623931885, -0.3526970148086548, -0.12383166700601578, -0.6083911061286926, -0.09964078664779663, -0.08150025457143784, -0.00020585325546562672, -0.003682143986225128, -0.004183470271527767, -1.2092061042785645, -0.16987228393554688, -0.015879247337579727, -0.0014229421503841877, -0.0015143604250624776, -0.02208169922232628, -0.0002330270071979612, -2.486825466156006, -0.039608146995306015, -0.012872223742306232, -0.04926275834441185, -7.891343557275832e-05, -0.0008431693422608078, -0.005616005044430494, -0.26405686140060425, -9.536738616588991e-07, -1.6331539882230572e-05, -1.9430925021879375e-05, -0.009393305517733097, -0.005813357420265675, -0.2429509311914444, -0.018209194764494896, -0.18908929824829102, -2.539679765701294, -0.01202335674315691, -0.1072705090045929, -1.4781842764932662e-05, -8.702239938429557e-06, -0.1813109815120697, -0.0030333243776112795, -0.0029471556190401316, -0.09047401696443558, -0.0006073060794733465, -0.01377481035888195, -0.003133151913061738, -0.0666559487581253, -0.0016019619069993496, -0.023574071004986763, -0.9140068888664246, -7.795983401592821e-05, -1.1499675512313843, -0.018379617482423782, -0.21330825984477997, -1.6689286894688848e-06, -5.090107151772827e-05, -0.009685074910521507, -0.00011002412065863609, -0.0004256058018654585, -0.24745173752307892, -0.5060315132141113, -0.0014868644066154957, -0.023216795176267624, -0.02638578787446022, -0.024152686819434166, -1.2270900011062622, -0.03475354611873627, -0.10083585977554321, -0.8373891115188599, -0.013969618827104568, -1.4396586418151855], "finish_reason": "length"}], "metrics": {"energy": 314.2750290765762, "energy_per_token": 1.2276368323303757, "time": 11.549351, "time_per_token": 0.04511465234375}}
{"outputs": [{"text": "try:\n        from matplotlib import pyplot as plt\n        import matplotlib\n    except ImportError:\n        print(\n            \"'matplotlib' and 'numpy' libraries are required for this task. You can install them using 'pip install matplotlib numpy'.\"\n        )\n        exit(1)\n\n    try:\n        import seaborn as sns\n        seaborn_available = True\n    except ImportError:\n        seaborn_available = False\n\n    try:\n        import numpy\n    except ImportError:\n        print(\"'numpy' library is required for this task. You can install it using 'pip install numpy'.\")\n        exit(1)\n\n    if len(array.shape) != 2:\n        raise ValueError(\"'array' must be a 2D numpy array.\")\n\n    if (array.shape[0] != array.shape[1]) or (array.shape[0] == 0):\n        raise ValueError(\"'array' must be a non-empty 2D numpy array.\")\n\n    if features is None:\n        features", "tokens": ["try", ":", "\n", "        ", "from", " matplotlib", " import", " py", "plot", " as", " plt", "\n", "        ", "import", " matplotlib", "\n", "    ", "except", " Import", "Error", ":", "\n", "        ", "print", "(", "\n", "            ", "\"", "'", "mat", "plotlib", "'", " and", " '", "numpy", "'", " libraries", " are", " required", " for", " this", " task", ".", " You", " can", " install", " them", " using", " '", "pip", " install", " matplotlib", " numpy", "'", ".", "\"", "\n", "        ", ")", "\n", "        ", "exit", "(", "1", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "import", " se", "ab", "orn", " as", " s", "ns", "\n", "        ", "se", "ab", "orn", "_", "available", " =", " True", "\n", "    ", "except", " Import", "Error", ":", "\n", "        ", "se", "ab", "orn", "_", "available", " =", " False", "\n", "\n", "    ", "try", ":", "\n", "        ", "import", " numpy", "\n", "    ", "except", " Import", "Error", ":", "\n", "        ", "print", "(", "\"", "'", "numpy", "'", " library", " is", " required", " for", " this", " task", ".", " You", " can", " install", " it", " using", " '", "pip", " install", " numpy", "'", ".", "\"", ")", "\n", "        ", "exit", "(", "1", ")", "\n", "\n", "    ", "if", " len", "(", "array", ".", "shape", ")", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " ", "2", "D", " numpy", " array", ".", "\"", ")", "\n", "\n", "    ", "if", " (", "array", ".", "shape", "[", "0", "]", " ", "!", "=", " array", ".", "shape", "[", "1", "])", " or", " (", "array", ".", "shape", "[", "0", "]", " ==", " ", "0", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " non", "-", "empty", " ", "2", "D", " numpy", " array", ".", "\"", ")", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features"], "logprobs": [-3.0458202362060547, -0.0006593675934709609, -0.019216325134038925, -0.01097829733043909, -3.187192440032959, -0.3636821508407593, -0.16887237131595612, -0.10078606754541397, -6.05564855504781e-05, -0.039997756481170654, -0.0016947920667007565, -0.02632215991616249, -0.16182027757167816, -1.4764766693115234, -2.330281972885132, -2.6787350177764893, -1.6518973112106323, -0.0011338717304170132, -0.21414214372634888, -0.00010287232726113871, -1.0594089031219482, -0.029360033571720123, -0.0010206258157268167, -1.713756799697876, -0.12216055393218994, -2.914963722229004, -0.007800592575222254, -0.2816380262374878, -3.846334934234619, -0.834789514541626, -0.0004543225804809481, -0.19600379467010498, -2.737978458404541, -0.20388834178447723, -0.9313514232635498, -0.012039022520184517, -1.5873141288757324, -0.35894206166267395, -0.5363658666610718, -0.7818887829780579, -0.37840715050697327, -1.4023197889328003, -0.49641281366348267, -3.7095131874084473, -0.4141335189342499, -0.3358615040779114, -0.164312481880188, -0.8009634613990784, -1.0726486444473267, -0.050538696348667145, -0.16346624493598938, -0.28555166721343994, -0.724742591381073, -0.024424826726317406, -0.6867508292198181, -0.0571441687643528, -0.6108673214912415, -0.014478035271167755, -0.0001559135998832062, -0.0025032395496964455, -0.13273024559020996, -2.0441198348999023, -1.1353927850723267, -0.1667409986257553, -0.0079458337277174, -0.008356604725122452, -0.5411861538887024, -0.0004320403386373073, -2.0238969326019287, -0.00015221867943182588, -0.006760699674487114, -0.002498364308848977, -0.7873484492301941, -0.2864435017108917, -0.000192504478036426, -4.887569048150908e-06, -0.20999297499656677, -0.0270323995500803, -0.0018442542059347034, -0.015837712213397026, -1.7888962030410767, -3.780665874481201, -0.07570307701826096, -0.010462435893714428, -0.7953764796257019, -2.2663280963897705, -0.0055599333718419075, -0.007844475097954273, -0.0038737035356462, -0.03271780163049698, -0.0016796779818832874, -0.042496539652347565, -0.0003474347176961601, -0.006667391397058964, -0.009035295806825161, -0.0011046981671825051, -1.1725256443023682, -0.0004049911512993276, -0.00017450717859901488, -0.00028939827461726964, -0.0036574392579495907, -0.0005816913326270878, -0.001524953986518085, -0.001760838902555406, -0.38404396176338196, -0.004021296743303537, -2.6564650535583496, -0.00010275312524754554, -0.006112216040492058, -0.002448895713314414, -0.762023389339447, -0.12420444190502167, -2.4493167400360107, -1.3153584003448486, -0.00016234986833296716, -0.01065034233033657, -0.0005957497633062303, -0.006841093767434359, -0.0035309370141476393, -0.0020772088319063187, -0.03798380494117737, -0.006237089168280363, -0.5291197896003723, -0.15833450853824615, -0.011173180304467678, -0.0014327033422887325, -0.11220088601112366, -0.048301126807928085, -0.008097084239125252, -0.0326261930167675, -0.0028785718604922295, -0.003426278242841363, -0.014493544586002827, -0.05707571282982826, -0.0020149897318333387, -0.0008910499745979905, -0.0022975020110607147, -0.010625101625919342, -0.005276799667626619, -0.003913839813321829, -0.001256391522474587, -0.0032547141890972853, -0.006855064537376165, -0.01894592121243477, -0.001853654277510941, -0.00040797016117721796, -0.0010681406129151583, -0.0054494403302669525, -0.008203856647014618, -0.002185339340940118, -0.007126743905246258, -0.00032217081752605736, -0.0002571013756096363, -0.03703860193490982, -0.0005073452484793961, -0.7959712147712708, -1.728411078453064, -0.0005414212355390191, -0.10413607954978943, -1.0943121910095215, -0.02881060168147087, -0.0008634176338091493, -0.11746848374605179, -4.410734163684538e-06, -2.3841830625315197e-06, -0.0008450751192867756, -0.0003457663697190583, -0.08479120582342148, -0.01728588156402111, -0.000924993772059679, -0.23735755681991577, -0.008146747015416622, -2.9444261599564925e-05, -0.03883729875087738, -0.32396239042282104, -0.7552685141563416, -0.005200904794037342, -0.0014605579199269414, -0.05464372783899307, -0.020814206451177597, -0.16462568938732147, -0.023518647998571396, -0.0002004899288294837, -0.33212125301361084, -0.17950539290905, -0.006075959652662277, -0.15024252235889435, -0.027713032439351082, -0.0003413571394048631, -0.002569114323705435, -0.5970750451087952, -0.0003289635351393372, -0.2714197039604187, -3.510256290435791, -2.6358468532562256, -0.2287437468767166, -0.4663197100162506, -0.01683926023542881, -0.11930172145366669, -0.030601948499679565, -1.7831394672393799, -7.557583012385294e-05, -1.9430925021879375e-05, -1.7558456659317017, -0.0008878341759555042, -0.012346506118774414, -0.0053137969225645065, -0.010174315422773361, -0.49770885705947876, -0.7289901375770569, -0.31228965520858765, -0.37319278717041016, -0.004651796538382769, -0.10577364265918732, -0.02304859273135662, -0.14660882949829102, -0.003312697634100914, -0.28433412313461304, -0.008684486150741577, -0.011115886270999908, -0.09159840643405914, -0.02015129290521145, -0.0007857572636567056, -0.04939858242869377, -0.0011887634173035622, -1.07287787614041e-05, -0.003217641031369567, -0.19783024489879608, -0.07749760150909424, -0.0018496087286621332, -0.002572681289166212, -0.024164089933037758, -0.3390205502510071, -0.050382621586322784, -0.6523275971412659, -0.018454518169164658, -0.016137108206748962, -0.5939300656318665, -0.000871159543748945, -0.012898466549813747, -0.12701120972633362, -0.01780315488576889, -0.3811337351799011, -0.0061293961480259895, -0.00040975757292471826, -0.002659238874912262, -0.03676964342594147, -0.0003057250869460404, -0.2797095477581024, -0.21713022887706757, -0.18841297924518585, -0.43168237805366516, -0.03663887083530426, -0.012570081278681755, -0.005175762809813023, -0.5208006501197815], "finish_reason": "length"}], "metrics": {"energy": 282.1325689220427, "energy_per_token": 1.1020803473517293, "time": 11.570903, "time_per_token": 0.04519883984375}}
{"outputs": [{"text": "# Check requirements\n    for rq in [numpy, matplotlib, seaborn]:\n        if not isinstance(rq, module_type):\n            raise ImportError(\"One or more required modules are not installed. Please install them and rerun the code.\")\n\n    # Check input\n    if not isinstance(array, np.ndarray):\n        raise TypeError(\"'array' must be of type 'numpy.ndarray'.\")\n    if len(array) == 0 or array.ndim != 2:\n        raise ValueError(\"'array' must be a non-empty 2D numpy array.\")\n\n    # If features is provided, check its length, otherwise, create numerical labels\n    if features:\n        if len(features) != array.shape[1]:\n            raise ValueError(\"The length of 'features' does not match the number of columns in the array.\")\n    else:\n        features = [\"col_{}\".format(col) for col in range(1, array.shape[1] + 1)]\n\n    # Shuffle the columns and plot the heat", "tokens": ["#", " Check", " requirements", "\n", "    ", "for", " r", "q", " in", " [", "numpy", ",", " matplotlib", ",", " se", "ab", "orn", "]:", "\n", "        ", "if", " not", " isinstance", "(", "rq", ",", " module", "_", "type", "):", "\n", "            ", "raise", " Import", "Error", "(", "\"", "One", " or", " more", " required", " modules", " are", " not", " installed", ".", " Please", " install", " them", " and", " re", "run", " the", " code", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " input", "\n", "    ", "if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "'", "array", "'", " must", " be", " of", " type", " '", "numpy", ".", "nd", "array", "'", ".", "\"", ")", "\n", "    ", "if", " len", "(", "array", ")", " ==", " ", "0", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " non", "-", "empty", " ", "2", "D", " numpy", " array", ".", "\"", ")", "\n", "\n", "    ", "#", " If", " features", " is", " provided", ",", " check", " its", " length", ",", " otherwise", ",", " create", " numerical", " labels", "\n", "    ", "if", " features", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "\"", "The", " length", " of", " '", "features", "'", " does", " not", " match", " the", " number", " of", " columns", " in", " the", " array", ".", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "features", " =", " [", "\"", "col", "_{", "}\"", ".", "format", "(", "col", ")", " for", " col", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Sh", "uffle", " the", " columns", " and", " plot", " the", " heat"], "logprobs": [-1.6297416687011719, -0.8563365340232849, -1.9421910047531128, -0.33686843514442444, -0.004542864393442869, -1.227704405784607, -3.7905282974243164, -1.0972175598144531, -0.23986366391181946, -0.6461343169212341, -0.8499065637588501, -0.016432663425803185, -0.10598103702068329, -0.8598067760467529, -0.11803127825260162, -0.00042381841922178864, -4.100715523236431e-05, -0.04326583072543144, -0.006403404753655195, -0.002476959954947233, -0.4927462041378021, -0.5567334890365601, -2.015735149383545, -0.00488243717700243, -0.17808367311954498, -0.015162565745413303, -1.5880277156829834, -1.0132129192352295, -0.38213759660720825, -0.04214081913232803, -0.033849768340587616, -0.0012262690579518676, -0.08590339869260788, -0.5518425107002258, -0.002991845365613699, -0.11239469796419144, -1.7920763492584229, -2.9634132385253906, -0.561143696308136, -0.017735112458467484, -1.199596881866455, -0.5530110597610474, -0.2627086937427521, -0.5819013714790344, -0.43069738149642944, -0.5199259519577026, -2.014604091644287, -0.40847641229629517, -0.5999483466148376, -2.397698402404785, -2.512331247329712, -0.3833707869052887, -0.7117787599563599, -2.0327088832855225, -0.19068117439746857, -0.0755004733800888, -0.023973120376467705, -0.007149351295083761, -0.19735778868198395, -0.0008625839254818857, -0.5058547258377075, -0.30735892057418823, -1.3364720344543457, -1.207423448562622, -0.0035082479007542133, -0.22747556865215302, -0.8152733445167542, -0.33608752489089966, -0.00027092601521871984, -0.047495804727077484, -0.0005646541831083596, -0.3015662729740143, -0.0005851463647559285, -0.0007805161876603961, -6.651657167822123e-05, -0.7254258990287781, -0.010929600335657597, -0.0014067525044083595, -0.07939925044775009, -0.6170975565910339, -2.2411095415009186e-05, -0.030910365283489227, -0.30853670835494995, -1.3368560075759888, -0.007591919973492622, -0.00146793806925416, -0.2064177691936493, -0.0013859200989827514, -2.980550527572632, -0.03982673957943916, -1.1530535221099854, -0.12930795550346375, -0.0015869655180722475, -0.003968697972595692, -0.00011657988943625242, -0.014859823510050774, -0.575614333152771, -0.03335030376911163, -0.0012707976857200265, -0.0026423560921102762, -0.1228044331073761, -0.36167365312576294, -1.3913742303848267, -0.00028451209072954953, -0.014088225550949574, -0.7355169057846069, -0.2188909500837326, -0.001426989445462823, -0.0004807746736332774, -0.994739294052124, -0.7497125864028931, -0.00026472879108041525, -0.07414820790290833, -0.00028975578607060015, -0.15822339057922363, -5.364403477869928e-06, -3.576278118089249e-07, -0.0007707485929131508, -0.00015138434537220746, -0.011416582390666008, -0.01144357118755579, -0.0005137792322784662, -0.010795406065881252, -0.003542221849784255, -1.8000440832111053e-05, -0.016308939084410667, -0.029343249276280403, -0.101781465113163, -0.0008731843554414809, -0.001105531700886786, -0.032427944242954254, -0.35849544405937195, -0.14784082770347595, -0.7165335416793823, -0.016655445098876953, -0.010927360504865646, -0.02569902315735817, -5.221230458118953e-05, -0.17166632413864136, -0.2617507576942444, -0.008767088875174522, -0.04147051274776459, -0.005739280954003334, -0.000694153131917119, -0.0034964873921126127, -1.042346715927124, -0.0004631400224752724, -0.3128071427345276, -3.6893386840820312, -0.34181976318359375, -0.6884196400642395, -0.6041309237480164, -0.13178107142448425, -0.31003856658935547, -1.0888020992279053, -0.2286617010831833, -3.667210102081299, -0.3740222752094269, -1.5396580696105957, -2.356872081756592, -1.822809100151062, -0.3854406476020813, -0.38907867670059204, -0.0007412070408463478, -0.1005481705069542, -0.03463759645819664, -1.4961352348327637, -0.003185438457876444, -0.001077428925782442, -0.08374914526939392, -0.18799789249897003, -7.784063927829266e-05, -0.03164230287075043, -0.00022516099852509797, -0.011822867207229137, 0.0, -1.6689286894688848e-06, -0.150880366563797, -0.0005069877952337265, -0.001440678839571774, -0.005902716424316168, -0.002856937935575843, -0.005000940524041653, -0.0034457615111023188, -0.0008702066843397915, -0.00874097365885973, -0.007455974817276001, -9.059865078597795e-06, -0.010611419565975666, -0.37842756509780884, -1.4999403953552246, -0.6443576216697693, -0.00392345804721117, -0.23399478197097778, -0.0022168601863086224, -0.000847814604640007, -1.73087477684021, -0.00040522945346310735, -0.0036005449946969748, -0.010848118923604488, -0.008568900637328625, -0.0025027638766914606, -0.009411255829036236, -0.048138681799173355, -2.9267737865448, -0.3014429211616516, -0.03153211250901222, -0.021498149260878563, -0.0019307559123262763, -0.0012268644059076905, -0.6393489241600037, -0.03015071153640747, -4.0411134250462055e-05, -0.0015850611962378025, -0.0008663953049108386, -0.08009204268455505, -0.0028326883912086487, -0.28421247005462646, -2.9323434829711914, -2.293480396270752, -1.793002724647522, -0.07650577276945114, -0.0004172646440565586, -0.0003469580551609397, -0.002586236223578453, -2.694143772125244, -0.47749561071395874, -0.003628814360126853, -0.0010806442005559802, -0.0016423083143308759, -0.015374477952718735, -0.0001902399235405028, -0.1633172184228897, -0.00017569905321579427, -0.029861727729439735, -3.135155202471651e-05, -0.0005609607324004173, -0.00046266341814771295, -0.0014447261346504092, -0.21044906973838806, -0.005354823544621468, -0.001441036001779139, -0.00010775939153973013, -0.0015717307105660439, -0.012326606549322605, -0.03085615672171116, -0.001327705685980618, -0.10145095735788345, -0.7203958630561829, -0.013461179099977016, -0.8474715948104858, -0.26732486486434937, -1.2555394172668457, -1.602675199508667, -0.7656750082969666, -0.19464382529258728], "finish_reason": "length"}], "metrics": {"energy": 324.39043779945376, "energy_per_token": 1.2671501476541163, "time": 12.396455, "time_per_token": 0.04842365234375}}
{"outputs": [{"text": "if features is None:\n        features = ['{0} {1}'.format(col_idx + 1, col)\n                    for col_idx, col in enumerate(array.T)]\n    if array.ndim != 2 or array.size == 0:\n        raise ValueError(f'Invalid array of shape {array.shape} or empty.')\n\n    if seed is not None:\n        np.random.seed(seed)\n\n    # Shuffle columns of the array\n    array = np.random.permutation(array)\n\n    # Plot heatmap\n    return sns.heatmap(data=array, xticklabels=features, yticklabels=features,\n                       linewidth=0, cbar_kws={'shrink': 0.5})", "tokens": ["if", " features", " is", " None", ":", "\n", "        ", "features", " =", " ['", "{", "0", "}", " {", "1", "}'", ".", "format", "(", "col", "_", "idx", " +", " ", "1", ",", " col", ")", "\n", "                ", "    ", "for", " col", "_", "idx", ",", " col", " in", " enumerate", "(", "array", ".", "T", ")]", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", " or", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Invalid", " array", " of", " shape", " {", "array", ".", "shape", "}", " or", " empty", ".", "')", "\n", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Sh", "uffle", " columns", " of", " the", " array", "\n", "    ", "array", " =", " np", ".", "random", ".", "per", "mutation", "(", "array", ")", "\n", "\n", "    ", "#", " Plot", " heat", "map", "\n", "    ", "return", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " ", "xt", "ick", "labels", "=", "features", ",", " y", "tick", "labels", "=", "features", ",", "\n", "                ", "       ", "linewidth", "=", "0", ",", " c", "bar", "_", "k", "ws", "={", "'", "sh", "rink", "':", " ", "0", ".", "5", "})", "\n", "\n", "if"], "logprobs": [-0.8079642653465271, -1.6663035154342651, -0.21779729425907135, -0.5212817192077637, -0.031225042417645454, -0.03788555786013603, -0.0027232011780142784, -0.19029226899147034, -0.006656141486018896, -1.8343758583068848, -3.2219088077545166, -0.5257759690284729, -1.5381333827972412, -1.667272925376892, -0.020365305244922638, -0.03486384078860283, -0.0021214615553617477, -0.0006017066189087927, -0.028189940378069878, -2.7883472442626953, -1.8634765148162842, -1.367496132850647, -0.6199610829353333, -0.0015904169995337725, -0.00019941726350225508, -0.0020591262727975845, -0.8274955153465271, -1.2660801410675049, -1.2226377725601196, -0.29598259925842285, -0.17621497809886932, -0.010729363188147545, -0.009278392419219017, -0.006219911389052868, -0.0005650115781463683, -0.0022182876709848642, -0.0067000738345086575, -0.026133228093385696, -0.016491413116455078, -0.0021899782586842775, -0.10827583819627762, -0.013774693012237549, -0.3655503988265991, -0.20012815296649933, -0.006409327033907175, -0.48961690068244934, -1.1858596801757812, -1.352891206741333, -0.006811849772930145, -0.7816900014877319, -0.0005332001601345837, -0.13129842281341553, -1.1920928244535389e-07, -2.50339189733495e-06, -0.0006355411605909467, -0.00024327656137757003, -0.6306962966918945, -0.4162522852420807, -0.0018409223994240165, -0.1596800982952118, -0.08010843396186829, -0.0003667397249955684, -6.01988795096986e-05, -0.03721526265144348, -0.01072759460657835, -0.0014549632323905826, -0.015950465574860573, -0.0022182876709848642, -4.160317621426657e-05, -0.8728369474411011, -2.1705660820007324, -0.9436092376708984, -2.229336738586426, -0.7971815466880798, -4.042268753051758, -0.4570164680480957, -0.1747688502073288, -0.0237419530749321, -0.0005239067832008004, -0.008872726000845432, -0.1690382957458496, -3.2506842613220215, -0.3344225287437439, -0.8411846160888672, -0.06352216750383377, -0.001465676468797028, -1.3614357709884644, -0.0003567297535482794, -1.3029201030731201, -1.051025152206421, -0.21059036254882812, -0.05815402418375015, -6.007967749610543e-05, -0.004216115456074476, -0.006502896081656218, -0.0008551992941647768, -0.14287196099758148, -0.00026067672297358513, -0.00041559641249477863, -2.288792165927589e-05, -0.007292320020496845, -0.0004748170613311231, -0.00371718080714345, -0.03212853893637657, -0.003536044852808118, -0.3114970624446869, -0.0005292683490552008, -1.9957157373428345, -1.4682610034942627, -0.08144761621952057, -1.233503818511963, -1.731743335723877, -0.5427432656288147, -0.459254652261734, -0.47424036264419556, -0.0005124686285853386, -2.2377729415893555, -0.26414811611175537, -1.1452306509017944, -0.0005352256703190506, -0.19608120620250702, -2.2291887944447808e-05, -0.03366340696811676, -0.01472251396626234, -0.0005316513124853373, -0.005249644163995981, -0.4601384699344635, -0.3765488862991333, -0.13194699585437775, -0.00020203932945150882, -0.25256404280662537, -2.143575668334961, -0.7777400016784668, -0.0066407471895217896, -0.5185081958770752, -0.001622313866391778, -2.586742401123047, -0.06838416308164597, -2.622600959512056e-06, -8.260862523457035e-05, -0.003099282970651984, -0.00027092601521871984, -0.0003194298769813031, -2.8673603534698486, -0.00500698946416378, -0.002407154766842723, -0.014550527557730675, -1.6793019771575928, -0.0003383779258001596, -0.021585067734122276, -2.288792165927589e-05, -0.002323905238881707, -0.01050631981343031, -0.13853631913661957, -0.2256130874156952, -0.0005383234238252044, -4.482168878894299e-05, -0.031278423964977264, -0.03545023128390312, -0.2787855565547943, -0.787352442741394, -0.011961636133491993, -0.13019950687885284, -2.0680301189422607, -0.8348979353904724, -0.7542619705200195, -0.9196377992630005, -0.5596935749053955, -0.21654365956783295, -0.42195507884025574, -0.15714094042778015, -0.0013860390754416585, -0.2711050510406494, -0.007510165683925152, -1.2516499757766724, -0.0025855228304862976, -0.0005093707586638629, -0.05316267907619476, -0.2407914400100708, -0.006226782221347094, -1.6612880229949951, -1.0251410007476807, -0.33088865876197815, -0.03757917135953903, -0.6379859447479248], "finish_reason": "stop"}], "metrics": {"energy": 201.5613352069853, "energy_per_token": 1.089520730848569, "time": 8.211221, "time_per_token": 0.044384978378378376}}
{"outputs": [{"text": "if seed is not None:\n        np.random.seed(seed)\n    array_copy = array.copy()\n    array_copy = array_copy[:, np.random.permutation(array.shape[1])]\n    if features is not None:\n        assert len(features) == array.shape[1]\n        ax = sns.heatmap(array_copy, cmap='viridis', cbar=False, annot=True,\n                         yticklabels=features, xticklabels=features)\n    else:\n        ax = sns.heatmap(array_copy, cmap='viridis', cbar=False, annot=True)\n    return ax", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "array", "_", "copy", " =", " array", ".", "copy", "()", "\n", "    ", "array", "_", "copy", " =", " array", "_", "copy", "[:", ",", " np", ".", "random", ".", "per", "mutation", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "assert", " len", "(", "features", ")", " ==", " array", ".", "shape", "[", "1", "]", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", "_", "copy", ",", " c", "map", "='", "vir", "idis", "'", ",", " c", "bar", "=", "False", ",", " annot", "=", "True", ",", "\n", "                ", "         ", "yt", "ick", "labels", "=", "features", ",", " ", "xt", "ick", "labels", "=", "features", ")", "\n", "    ", "else", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", "_", "copy", ",", " c", "map", "='", "vir", "idis", "'", ",", " c", "bar", "=", "False", ",", " annot", "=", "True", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-0.8079642653465271, -2.5703792572021484, -0.399784654378891, -0.051558636128902435, -0.00014137222024146467, -0.006847013719379902, -0.01813790388405323, -0.0029103087726980448, -0.11603140085935593, -0.00014935807848814875, -0.0002719986077863723, -3.9219088648678735e-05, -0.0028897454030811787, -0.0007873057620599866, -0.004058102611452341, -0.014407417736947536, -0.006005812902003527, -0.6365225911140442, -2.3807191848754883, -2.3994829654693604, -2.5681986808776855, -0.017209134995937347, -0.5687864422798157, -0.032510802149772644, -0.019008615985512733, -0.018655087798833847, -0.06537797302007675, -0.3738212585449219, -1.6048201322555542, -0.07159498333930969, -0.05905015766620636, -0.234676331281662, -0.6619917750358582, -0.02504352666437626, -0.00022110878489911556, -1.900092601776123, -0.019502904266119003, -0.14209310710430145, -0.00021205084340181202, -0.045793820172548294, -4.970903682988137e-05, -0.2521994709968567, -0.0023636280093342066, -0.000608854868914932, -0.20080362260341644, -0.5691642761230469, -0.0015192406717687845, -0.013730129227042198, -0.015948588028550148, -0.0039876955561339855, -0.002411792753264308, -0.02841591089963913, -0.27970242500305176, -0.4880855679512024, -0.06330298632383347, -0.11852365732192993, -0.9723523259162903, -6.4490144723095e-05, -0.20340241491794586, -0.0038167026359587908, -0.001720973290503025, -2.39143967628479, -0.22345097362995148, -0.00021002470748499036, -0.03528016060590744, -0.00024875884992070496, -0.0070548951625823975, -0.02093644067645073, -0.21243521571159363, -0.0011143434094265103, -0.002967599080875516, -0.004328287672251463, -0.00010442188795423135, -0.8812317252159119, -0.10647852718830109, -2.473952054977417, -0.040949322283267975, -0.09877999126911163, -2.264974000354414e-06, -6.747018051100895e-05, -0.0028190179727971554, -0.00014125302550382912, -0.0004374024283606559, -0.20803411304950714, -0.04173557832837105, -3.2066785934148356e-05, -0.01275618001818657, -1.8827793598175049, -0.4328790605068207, -0.24585838615894318, -2.2357213497161865, -7.86750388215296e-05, -0.052248015999794006, -0.001885542762465775, -2.8983232975006104, -0.0009066523634828627, -0.14401216804981232, -0.04958668723702431, -0.13889774680137634, -1.3270176649093628, -0.00431784288957715, -1.1589516401290894, -0.11552706360816956, -1.3175963163375854, -0.010617434978485107, -0.17648589611053467, -2.150789260864258, -0.01620127074420452, -0.0002101439022226259, -0.03285427764058113, -0.03770143911242485, -0.26178231835365295, -1.2258952856063843, -3.58813522325363e-05, -0.00031859567388892174, -1.6212332411669195e-05, -0.004098350182175636, -0.008958149701356888, -0.5266495943069458, -0.019092008471488953, -0.10856762528419495, -0.007893795147538185, -0.00013469743134919554, -0.0019102912629023194, -0.0007205988513305783, -0.33576029539108276, -0.0013848486123606563, -0.0051463511772453785, -6.318072337307967e-06, -2.0265558760002023e-06, -9.679325739853084e-05, -4.887569048150908e-06, -0.00010692501382436603, -0.0030793175101280212, -0.006726006045937538, -4.768370445162873e-07, -0.002084584441035986, -0.0030364145059138536, -0.008687795139849186, -0.0030815755017101765, -0.0031442036852240562, -0.0017448929138481617, -0.015231486409902573, -7.021180499577895e-05, -0.01864982210099697, -0.00010775939153973013, -0.0002162222663173452, -0.0036572017706930637, -0.016853444278240204, -0.031007101759314537, -8.34430247778073e-05, -0.0022170981392264366, -1.1715387105941772, -0.010476828552782536, -0.32622960209846497, -0.13220083713531494, -0.0023913378827273846, -0.3979055881500244, -0.01374565064907074, -0.8380571603775024], "finish_reason": "stop"}], "metrics": {"energy": 191.053242389679, "energy_per_token": 1.194082764935494, "time": 7.155178, "time_per_token": 0.0447198625}}
{"outputs": [{"text": "# check if empty array\n    if array.ndim == 0 or array.size == 0:\n        raise ValueError(\"Empty array cannot be used for visualization.\")\n    # check if features\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError(\n            f\"Number of features does not match the number of columns in the array.\"\n            f\"Got {len(features)} features for {array.shape[1]} columns.\"\n        )\n    # check if seed\n    if seed is not None:\n        np.random.seed(seed)\n    # check if features\n    if features is None:\n        features = list(range(1, array.shape[1] + 1))\n    # shuffle the columns\n    array = np.random.permutation(array, axis=0)\n    # create the heatmap\n    ax = sns.heatmap(array, annot=True, fmt=\"g\", vmin=0.0, vmax=1.0, cmap=\"Blues\",\n                     xticklabels=", "tokens": ["#", " check", " if", " empty", " array", "\n", "    ", "if", " array", ".", "nd", "im", " ==", " ", "0", " or", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Empty", " array", " cannot", " be", " used", " for", " visualization", ".", "\"", ")", "\n", "    ", "#", " check", " if", " features", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "\"", "Number", " of", " features", " does", " not", " match", " the", " number", " of", " columns", " in", " the", " array", ".", "\"", "\n", "            ", "f", "\"", "G", "ot", " {", "len", "(", "features", ")}", " features", " for", " {", "array", ".", "shape", "[", "1", "]}", " columns", ".", "\"", "\n", "        ", ")", "\n", "    ", "#", " check", " if", " seed", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "#", " check", " if", " features", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " list", "(", "range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", "))", "\n", "    ", "#", " shuffle", " the", " columns", "\n", "    ", "array", " =", " np", ".", "random", ".", "per", "mutation", "(", "array", ",", " axis", "=", "0", ")", "\n", "    ", "#", " create", " the", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", " annot", "=", "True", ",", " fmt", "=", "\"", "g", "\"", ",", " v", "min", "=", "0", ".", "0", ",", " v", "max", "=", "1", ".", "0", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ",", "\n", "                ", "     ", "xt", "ick", "labels", "="], "logprobs": [-1.6297416687011719, -2.651538848876953, -1.2395169734954834, -2.5749921798706055, -1.3893285989761353, -0.4352854788303375, -0.0023266407661139965, -0.04579905793070793, -0.9820836782455444, -0.024559298530220985, -1.9341950416564941, -0.00024148885859176517, -0.3573513329029083, -0.0020328350365161896, -0.024418313056230545, -1.401833415031433, -0.29175931215286255, -0.002500266768038273, -0.11878897249698639, -0.02926846407353878, -0.0014837696217000484, -0.0008910499745979905, -0.07620690762996674, -0.01073526032269001, -0.0018794744974002242, -0.03153407573699951, -0.002133714035153389, -2.932505594799295e-05, -0.2614491879940033, -0.07376138120889664, -1.8254015445709229, -0.26789361238479614, -1.5190316438674927, -0.001625646254979074, -3.375159502029419, -1.239501953125, -0.684520959854126, -0.40425997972488403, -0.028877196833491325, -0.00028081765049137175, -0.0017534609651193023, -1.398138165473938, -0.2545136511325836, -0.18759885430335999, -0.20665377378463745, -2.786449432373047, -4.061161518096924, -0.002859077649191022, -0.1439288705587387, -0.05332837626338005, -0.26989930868148804, -0.4009251892566681, -5.23315102327615e-05, -0.9312180280685425, -0.13472223281860352, -4.458328112377785e-05, -0.023096119984984398, -0.00036566724884323776, -0.016262730583548546, 0.0, -3.3378546504536644e-06, -0.02665000781416893, -0.00013839241000823677, -0.007212316617369652, -0.013658988289535046, -0.007064601872116327, -0.007270307745784521, -0.004436175338923931, -0.0010973153403028846, -0.013759289868175983, -0.002717970171943307, -1.3589766240329482e-05, -0.012839624658226967, -1.759791374206543, -0.007551812566816807, -0.3552858829498291, -0.01715218648314476, -2.0129928588867188, -0.001658970140852034, -0.332813560962677, -1.5668257474899292, -0.0009036748087964952, -0.006516990251839161, -0.5564727783203125, -0.04057782515883446, -0.002780977636575699, -0.015315781347453594, -0.3855219781398773, -0.44777151942253113, -0.1462324559688568, -0.6332254409790039, -1.7690072059631348, -0.7361199855804443, -0.9003827571868896, -0.05751924216747284, -0.0013585394481197, -2.5973877906799316, -0.003882253309711814, -0.19077318906784058, -0.1231006532907486, -0.00010752100206445903, -0.0020874394103884697, -0.008307425305247307, -0.37844061851501465, -2.6835696697235107, -0.20184412598609924, -0.04683999717235565, -0.0023963325656950474, -0.005617546383291483, -0.02704899199306965, -0.020664984360337257, -0.006989315617829561, -0.0192315261811018, -0.11919231712818146, -0.006667746230959892, -0.3536490499973297, -0.015113837085664272, -4.1483970562694594e-05, -0.0014669859083369374, -0.49172160029411316, -0.1128106340765953, -0.8065786957740784, -0.23967128992080688, -1.4269288778305054, -0.24207869172096252, -0.001302228425629437, -0.2342223972082138, -0.022983355447649956, -0.10800044983625412, -0.08961836993694305, -5.1020273531321436e-05, -0.01944783888757229, -0.004132304340600967, -0.0006279165390878916, -0.11825975775718689, -0.00019131260341964662, -0.0002503081923350692, -2.1576648578047752e-05, -0.0037212190218269825, -0.0004959068610332906, -0.0034436231944710016, -0.029468148946762085, -0.006443913094699383, -0.5878270268440247, -0.1381194293498993, -1.5566989183425903, -0.1635657548904419, -0.10163469612598419, -0.22144581377506256, -0.0018413984216749668, -0.11869623512029648, -0.02008434757590294, -0.02223467454314232, -0.265821635723114, -0.007953284308314323, -0.006977122277021408, -0.0011960265692323446, -0.17915655672550201, -0.0051564318127930164, -2.5791568756103516, -0.006090178154408932, -0.5745578408241272, -0.0002727136597968638, -0.06120787560939789, -0.00025722055579535663, -0.03175594285130501, -4.434487345861271e-05, -0.000847814604640007, -0.0008136299438774586, -0.002823059679940343, -0.07340364903211594, -7.486063259420916e-05, -0.0006129055400379002, -0.00015352977789007127, -0.0017106198938563466, -0.030751775950193405, -0.345280259847641, -0.192902073264122, -1.6663997173309326, -1.9353125095367432, -0.36852777004241943, -0.32460856437683105, -0.0013086573453620076, -1.6230270862579346, -0.1983703076839447, -0.7781669497489929, -0.0003196682082489133, -0.26811501383781433, -2.8371408916427754e-05, -0.05177520215511322, -0.016290174797177315, -0.0005920564290136099, -0.013118507340550423, -1.1797124147415161, -0.0557122603058815, -0.01085271779447794, -0.8650086522102356, -0.014290140941739082, -0.18167179822921753, -0.07453709095716476, -0.0940588042140007, -1.0898555517196655, -1.0941218137741089, -1.0182842016220093, -0.008550344035029411, -0.20514968037605286, -0.0015328098088502884, -1.1752077341079712, -0.015577543526887894, -0.12016227096319199, -1.4305104514278355e-06, -3.981510963058099e-05, -0.0031690397299826145, -0.00012814177898690104, -0.0002598424907773733, -0.8220574855804443, -0.051994774490594864, -1.7942955493927002, -0.0010718321427702904, -0.3341515064239502, -0.024345949292182922, -1.6521098613739014, -0.3345447778701782, -0.3308987617492676, -3.2322983741760254, -0.0018849477637559175, -0.038265857845544815, -2.6310553550720215, -0.0469372533261776, -0.04068450257182121, -0.0857667550444603, -2.4854114055633545, -0.22454380989074707, -0.019053412601351738, -0.02026788331568241, -0.0005324853118509054, -0.0004158347437623888, -0.02501039206981659, -0.015802275389432907, -0.00130425242241472, -0.06447989493608475, -0.6549196243286133, -0.21074187755584717, -0.08880649507045746, -0.010399439372122288, -1.4775352478027344, -0.001111485529690981, -0.03201066702604294, -0.297843873500824, -1.0034033060073853, -0.01592101715505123, -0.08349016308784485, -0.4471563994884491, -0.015455474145710468, -8.999896090244874e-05, -0.005056094378232956], "finish_reason": "length"}], "metrics": {"energy": 291.3026722021102, "energy_per_token": 1.137901063289493, "time": 11.562745, "time_per_token": 0.04516697265625}}
{"outputs": [{"text": "# Checking requirements\n    try:\n        import numpy\n    except ImportError as e:\n        raise ImportError(\"The function 'task_func' requires the following Python module: 'numpy'\") from e\n    try:\n        import matplotlib.pyplot as plt\n    except ImportError as e:\n        raise ImportError(\n            \"The function 'task_func' requires the following Python module: 'matplotlib.pyplot'\") from e\n    try:\n        import seaborn\n    except ImportError as e:\n        raise ImportError(\n            \"The function 'task_func' requires the following Python module: 'seaborn'\") from e\n\n    # Checking the input array\n    try:\n        array = numpy.asarray(array)\n        assert array.ndim == 2\n    except Exception as e:\n        raise ValueError(\"The function 'task_func' requires a 2D numpy array as input\") from e\n\n    # Setting the seed\n    if seed:\n        numpy.random.seed(seed)\n\n    # Setting up the Axes object and visualizing the shuffled", "tokens": ["#", " Check", "ing", " requirements", "\n", "    ", "try", ":", "\n", "        ", "import", " numpy", "\n", "    ", "except", " Import", "Error", " as", " e", ":", "\n", "        ", "raise", " Import", "Error", "(", "\"", "The", " function", " '", "task", "_", "func", "'", " requires", " the", " following", " Python", " module", ":", " '", "numpy", "'", "\"", ")", " from", " e", "\n", "    ", "try", ":", "\n", "        ", "import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "    ", "except", " Import", "Error", " as", " e", ":", "\n", "        ", "raise", " Import", "Error", "(", "\n", "            ", "\"", "The", " function", " '", "task", "_", "func", "'", " requires", " the", " following", " Python", " module", ":", " '", "mat", "plotlib", ".", "py", "plot", "'", "\"", ")", " from", " e", "\n", "    ", "try", ":", "\n", "        ", "import", " se", "ab", "orn", "\n", "    ", "except", " Import", "Error", " as", " e", ":", "\n", "        ", "raise", " Import", "Error", "(", "\n", "            ", "\"", "The", " function", " '", "task", "_", "func", "'", " requires", " the", " following", " Python", " module", ":", " '", "se", "ab", "orn", "'", "\"", ")", " from", " e", "\n", "\n", "    ", "#", " Check", "ing", " the", " input", " array", "\n", "    ", "try", ":", "\n", "        ", "array", " =", " numpy", ".", "as", "array", "(", "array", ")", "\n", "        ", "assert", " array", ".", "nd", "im", " ==", " ", "2", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " function", " '", "task", "_", "func", "'", " requires", " a", " ", "2", "D", " numpy", " array", " as", " input", "\"", ")", " from", " e", "\n", "\n", "    ", "#", " Setting", " the", " seed", "\n", "    ", "if", " seed", ":", "\n", "        ", "numpy", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Setting", " up", " the", " Ax", "es", " object", " and", " visual", "izing", " the", " shuff", "led"], "logprobs": [-1.6297416687011719, -0.8563365340232849, -2.493223190307617, -1.5979151725769043, -0.38929539918899536, -0.007865764200687408, -2.6740036010742188, -0.0007889734115451574, -0.012797843664884567, -0.004622606560587883, -0.3623642325401306, -0.15792222321033478, -1.6132564544677734, -1.417931318283081, -0.0005022218101657927, -0.24533133208751678, -0.00019977481861133128, -1.2292616367340088, -0.6132599711418152, -0.01850472204387188, -0.018583593890070915, -0.0014181805308908224, -0.3390251398086548, -0.13210421800613403, -0.0007518087513744831, -0.2291141003370285, -0.6426756381988525, -1.9820836782455444, -3.2510011196136475, -1.4088547229766846, -0.04003601148724556, -0.006769224535673857, -0.006456941831856966, -0.06891528517007828, -0.22203420102596283, -0.4662885367870331, -3.3854851722717285, -2.932772159576416, -1.1234359741210938, -0.4340936839580536, -1.1663846969604492, -0.03320293873548508, -0.08972877264022827, -1.0914771556854248, -0.03378477320075035, -0.1878550499677658, -0.0018386616138741374, -0.002068524481728673, -0.4210968315601349, -0.07420476526021957, -1.3470558769768104e-05, -0.0003083468764089048, -0.0005484507419168949, -0.08874660730361938, -0.011984134092926979, -0.2190401554107666, -0.0020673349499702454, -2.6464111215318553e-05, -0.2371269017457962, -0.09683188796043396, -0.011832763440907001, -0.07529252767562866, -9.023735765367746e-05, -0.0009763241396285594, -0.00025054652360267937, -0.0020623384043574333, -0.00046135272714309394, -0.00047469791024923325, -0.0005469018360599875, -0.0004847066884394735, -0.0017253764672204852, -0.0005768066039308906, -5.638440416078083e-05, -0.0016389759257435799, -2.947375774383545, -0.020653774961829185, -0.008311444893479347, -0.004281758330762386, -0.0028246049769222736, -0.0012882990995422006, -0.0009320206008851528, -7.70062324590981e-05, -0.000547378440387547, -0.0007824220228940248, -0.003342757234349847, -0.02129324898123741, -0.0020387833938002586, -0.008524458855390549, -0.1402657926082611, -0.022468404844403267, -0.00808679684996605, -0.0050531295128166676, -3.266281055402942e-05, -0.09362435340881348, -0.0007631250191479921, -0.0004694551753345877, -0.023641018196940422, -0.021643398329615593, -0.8632951974868774, -0.022848671302199364, -0.0005422552349045873, -0.00017450717859901488, -0.012976015917956829, -0.0059037827886641026, -8.4638240878121e-06, -0.00029905137489549816, -0.00011336160969221964, -0.006489038933068514, -0.022081581875681877, -0.00013660451804753393, -7.271740287251305e-06, -1.184316635131836, -0.03900963068008423, -0.0002051381452474743, -0.0006750926841050386, -1.2040065485052764e-05, -0.001413180842064321, -0.0002351722796447575, -0.0002547178009990603, -0.0009606037638150156, -0.0003723404952324927, -0.006335649639368057, -0.00046171018038876355, -2.634490556374658e-05, -0.0011655449634417892, -0.16824661195278168, -0.0027822854463011026, -0.00042489083716645837, -0.0006668727728538215, -0.0005479741375893354, -0.0003554189461283386, -0.0006057572900317609, -0.00017176583060063422, -0.0003175231395289302, -0.0004418112221173942, -0.0003904534096363932, -0.0015353093622252345, -0.0006145734223537147, -0.0012007892364636064, -0.017530377954244614, -0.0027759848162531853, -0.00127877457998693, -0.006693442817777395, -0.0002101439022226259, -9.42901024245657e-05, -0.00548358540982008, -0.003770030802115798, -0.012811495922505856, -0.0021627387031912804, -0.0001995364436879754, -0.004133966285735369, -0.16086779534816742, -0.0005415403284132481, -0.41827213764190674, -0.3206202983856201, -0.06867825239896774, -2.31099796295166, -1.6235417127609253, -1.843347430229187, -0.5211212635040283, -0.002789299236610532, -3.0741617679595947, -0.0002775999018922448, -0.00328465667553246, -0.001542688929475844, -1.1576321125030518, -0.36975547671318054, -1.5880823135375977, -0.00019810620869975537, -1.3684446811676025, -0.1434299349784851, -0.0019881022162735462, -0.008815418928861618, -0.12157200276851654, -0.031906984746456146, -1.6237921714782715, -2.170722007751465, -0.6510879993438721, -0.0012763934209942818, -0.04629678651690483, -0.00035506143467500806, -0.34652408957481384, -0.0008075552177615464, -0.0006790239713154733, -0.2340620458126068, -0.23011496663093567, -0.0010381315369158983, -2.658686637878418, -0.0910402312874794, -0.030791310593485832, -0.0009344025747850537, -0.007577604614198208, -0.000558220490347594, -0.0813034400343895, -0.09521330893039703, -2.8967437174287625e-05, -0.08472122251987457, -0.4905915856361389, -0.4364264905452728, -1.2013216018676758, -0.0587027482688427, -0.0039087338373064995, -0.00019810620869975537, -0.0012451999355107546, -0.016104264184832573, -0.42959290742874146, -0.5107008218765259, -0.1687474101781845, -0.00040546778473071754, -0.3305884897708893, -0.25849437713623047, -0.01711292937397957, -0.41888731718063354, -0.2086666226387024, -0.9067060947418213, -0.004454333335161209, -0.00938503909856081, -0.00038580605178140104, -0.0010116941994056106, -0.3577671945095062, -0.00043084874050691724, -0.18250158429145813, -3.101856231689453, -0.9246561527252197, -0.6674848794937134, -0.9245518445968628, -0.0008132726070471108, -0.47364363074302673, -0.0492464154958725, -1.3560800552368164, -0.008832789026200771, -0.0006224363460205495, -0.1757483035326004, -0.00010692501382436603, -0.0003070359816774726, -3.909988299710676e-05, -0.0042093489319086075, -0.0007895689341239631, -0.0041090352460742, -0.00813858862966299, -0.0015630420530214906, -0.0840514674782753, -0.0013763965107500553, -0.09687062352895737, -2.1608142852783203, -2.617816925048828, -0.4812469780445099, -3.56583571434021, -0.007600201293826103, -0.6037554740905762, -2.5472335815429688, -3.169976234436035, -0.03505562245845795, -0.3969222605228424, -1.595659613609314, -0.01282279472798109], "finish_reason": "length"}], "metrics": {"energy": 294.83722214412717, "energy_per_token": 1.1517078990004967, "time": 11.559539, "time_per_token": 0.04515444921875}}
{"outputs": [{"text": "if len(array) < 2 or array.ndim < 2:\n        raise ValueError(\"'array' must not be empty or not 2-dimensional.\")\n\n    np.random.seed(seed)\n\n    if features is None:\n        features = [str(i + 1) for i in range(array.shape[1])]\n\n    if len(features) != array.shape[1]:\n        raise ValueError(f\"'features' must match the number of columns in 'array'.\")\n\n    ax = sns.heatmap(data=array, xticklabels=features, yticklabels=features, annot=True, fmt=\"\", cmap='RdBu_r',\n                     ax=None).fig.axes[0]\n\n    return ax", "tokens": ["if", " len", "(", "array", ")", " <", " ", "2", " or", " array", ".", "nd", "im", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " not", " be", " empty", " or", " not", " ", "2", "-", "dimensional", ".", "\"", ")", "\n", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "str", "(", "i", " +", " ", "1", ")", " for", " i", " in", " range", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "\n", "    ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "'", "features", "'", " must", " match", " the", " number", " of", " columns", " in", " '", "array", "'", ".", "\"", ")", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " ", "xt", "ick", "labels", "=", "features", ",", " y", "tick", "labels", "=", "features", ",", " annot", "=", "True", ",", " fmt", "=", "\"", "\"", ",", " c", "map", "='", "R", "dB", "u", "_", "r", "'", ",", "\n", "                ", "     ", "ax", "=", "None", ")", ".", "fig", ".", "axes", "[", "0", "]", "\n", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.8079642653465271, -1.982437014579773, -0.0004077318590134382, -0.04632638022303581, -0.2116928994655609, -2.37807297706604, -0.0031364792957901955, -1.0692662000656128, -0.6826570630073547, -1.2187120914459229, -0.006273813545703888, -0.09028168767690659, -0.0008094609947875142, -1.2834404706954956, -0.001211624126881361, -0.01925000175833702, -0.05069485679268837, -0.028667664155364037, -0.0018889933126047254, -0.03405384346842766, -0.0028484982904046774, -3.0874729418428615e-05, -0.2876897156238556, -0.18283337354660034, -1.1491398811340332, -0.007039506919682026, -0.002807368291541934, -0.044734809547662735, -1.3452759981155396, -0.0018667429685592651, -0.008512166328728199, -0.2530544400215149, -0.29642602801322937, -0.19074255228042603, -0.0006130246329121292, -0.07902909815311432, -0.021534783765673637, -0.4095905125141144, -0.010072119534015656, -0.0005768066039308906, -0.0042360578663647175, -0.9277318716049194, -0.00017355366435367614, -2.483747959136963, -0.0011503038695082068, -0.0007148809381760657, -5.721882189391181e-05, -0.043557241559028625, -0.0007229813490994275, -0.00663541816174984, -0.028132453560829163, -0.03403333202004433, -0.8482921719551086, -0.00011383838864276186, -0.49183547496795654, -0.036926016211509705, -0.23728525638580322, -0.32290613651275635, -0.010429168120026588, -0.016671976074576378, -0.0019919094629585743, -0.2833166718482971, -0.009613881818950176, -0.41633978486061096, -1.0182788372039795, -0.011228702031075954, -0.2763316333293915, -0.9213461875915527, -0.00030155404238030314, -0.00015722469834145159, -0.0002843929105438292, -0.002373974770307541, -0.0020762570202350616, -0.003873941022902727, -0.0023448371794074774, -0.00019214690837543458, -0.27319830656051636, -0.0007969540893100202, -0.003404774935916066, -0.020102808251976967, -0.008366298861801624, -0.0014765085652470589, -0.0016070796409621835, -0.017539748921990395, -0.7645100951194763, -0.007865645922720432, -0.15236417949199677, -0.02386569045484066, -5.304672595229931e-05, -0.01861226186156273, -0.0002426806604489684, -0.02876473404467106, 0.0, -1.0728830375228426e-06, -0.006835647858679295, -8.713819261174649e-05, -0.00037674958002753556, -0.0010806442005559802, -0.0008911690674722195, -0.0022656265646219254, -0.0016673009376972914, -0.0005032941699028015, -0.009639030322432518, -0.00175691198091954, -8.940656698541716e-06, -0.016092650592327118, -1.7925692796707153, -0.009171380661427975, -1.2678502798080444, -0.008670895360410213, -0.002233155770227313, -0.19039367139339447, -0.2937159836292267, -0.03286800533533096, -0.0047534797340631485, -0.0016295737586915493, -0.004364726599305868, -0.05032118409872055, -0.034711405634880066, -0.0024442579597234726, -0.2804623246192932, -0.4305076003074646, -1.2947384119033813, -0.06719645857810974, -0.002986140549182892, -0.033934470266103745, -0.0003743662964552641, -1.528131127357483, -0.015681056305766106, -0.1342080682516098, -1.7881377516459906e-06, -4.458328112377785e-05, -0.01427568681538105, -8.415821503149346e-05, -0.0005144941387698054, -2.543217182159424, -0.004366744309663773, -0.014191773720085621, -0.034942470490932465, -1.7716995477676392, -0.0010789770167320967, -0.039427436888217926, -2.4914430468925275e-05, -0.0019593106117099524, -0.013687445782124996, -0.04099841043353081, -0.3159736096858978, -0.0009178477921523154, -3.71926071238704e-05, -0.03727739676833153, -0.03251807391643524, -0.20486727356910706, -1.596952199935913, -0.0027977393474429846, -0.18837259709835052, -0.3585876524448395, -1.5798721313476562, -0.512618362903595, -0.5351523160934448, -0.9261390566825867, -0.32812654972076416, -0.9109176397323608, -0.22562003135681152, -1.1723231077194214, -2.033470392227173, -0.5948090553283691, -4.184158387943171e-05, -1.1851117610931396, -0.000428108120104298, -0.6178834438323975, -0.001611840445548296, -1.2038028240203857, -0.0172597523778677, -0.0778057873249054, -2.5922303199768066, -0.02439900115132332, -0.7223297357559204, -2.02761173248291, -2.9204788208007812, -3.2475414276123047, -0.0020424711983650923, -0.859520435333252, -0.09374907612800598, -0.0683244913816452, -0.0034833012614399195, -0.1460648775100708, -0.40430834889411926, -0.0018205749802291393, -0.2060406506061554, -0.0026112052146345377, -1.8871620893478394, -1.1920922133867862e-06, -2.861018856492592e-06, -0.00012027494085486978, -0.00011908298620255664, -0.11770790815353394], "finish_reason": "stop"}], "metrics": {"energy": 249.05766209316252, "energy_per_token": 1.2707023576181762, "time": 8.83739, "time_per_token": 0.045088724489795916}}
{"outputs": [{"text": "# Check requirements\n    try:\n        import numpy as np\n        import matplotlib.pyplot as plt\n        import seaborn as sns\n    except ImportError as err:\n        raise ImportError(\"This script requires numpy, matplotlib and seaborn\") from err\n\n    # Check input validity\n    if len(array) < 2:\n        raise ValueError(\"Input array must be at least 2 dimensional.\")\n\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError(\"Number of features doesn't match the number of columns in array.\")\n\n    if array.ndim != 2:\n        raise ValueError(\"Input array must be 2D.\")\n\n    if array.size == 0:\n        raise ValueError(\"Input array must not be empty.\")\n\n    # Generate random seed if not provided\n    if seed is None:\n        np.random.seed()\n        seed = np.random.randint(10**10)\n\n    # Shuffle array columns\n    np.random.", "tokens": ["#", " Check", " requirements", "\n", "    ", "try", ":", "\n", "        ", "import", " numpy", " as", " np", "\n", "        ", "import", " matplotlib", ".", "py", "plot", " as", " plt", "\n", "        ", "import", " se", "ab", "orn", " as", " s", "ns", "\n", "    ", "except", " Import", "Error", " as", " err", ":", "\n", "        ", "raise", " Import", "Error", "(", "\"", "This", " script", " requires", " numpy", ",", " matplotlib", " and", " se", "ab", "orn", "\"", ")", " from", " err", "\n", "\n", "    ", "#", " Check", " input", " validity", "\n", "    ", "if", " len", "(", "array", ")", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " array", " must", " be", " at", " least", " ", "2", " dimensional", ".", "\"", ")", "\n", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Number", " of", " features", " doesn", "'", "t", " match", " the", " number", " of", " columns", " in", " array", ".", "\"", ")", "\n", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " array", " must", " be", " ", "2", "D", ".", "\"", ")", "\n", "\n", "    ", "if", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " array", " must", " not", " be", " empty", ".", "\"", ")", "\n", "\n", "    ", "#", " Generate", " random", " seed", " if", " not", " provided", "\n", "    ", "if", " seed", " is", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "()", "\n", "        ", "seed", " =", " np", ".", "random", ".", "rand", "int", "(", "1", "0", "**", "1", "0", ")", "\n", "\n", "    ", "#", " Sh", "uffle", " array", " columns", "\n", "    ", "np", ".", "random", "."], "logprobs": [-1.6297416687011719, -0.8563365340232849, -1.9421910047531128, -0.33686843514442444, -0.004542864393442869, -2.4774184226989746, -0.0005178302526473999, -0.011803311295807362, -0.0027232011780142784, -0.2979613244533539, -0.18061794340610504, -0.2244468480348587, -0.022943394258618355, -0.08526311814785004, -0.1624649614095688, -0.10402081161737442, -0.0035953186452388763, -0.016249006614089012, -0.0005803807871416211, -7.271740287251305e-06, -0.0005063920398242772, -0.0008572241058573127, -0.001985247014090419, -0.015000167302787304, -0.03962911292910576, -0.0035770260728895664, -0.0001497156627010554, -9.894321920000948e-06, -0.03950433060526848, -0.010357438586652279, -0.00027736154152080417, -0.005269447807222605, -0.0726839229464531, -0.0005532164941541851, -0.2680231034755707, -0.00010442188795423135, -0.4473799467086792, -2.396080732345581, -0.003379469271749258, -0.006695455405861139, -0.0005737089086323977, -0.37100422382354736, -0.09165257215499878, -0.0009147512027993798, -0.12598860263824463, -1.1776973009109497, -1.9309821128845215, -2.937386989593506, -0.06547467410564423, -0.8281285166740417, -0.04040805250406265, -0.007114197593182325, -1.987271785736084, -0.04020802304148674, -0.0008579387213103473, -0.0003526780928950757, -3.0053954124450684, -0.09276314079761505, -0.10761354863643646, -0.0008058876264840364, -0.0018969652010127902, -0.19952642917633057, -0.0003432638186495751, -0.36474430561065674, -0.27391284704208374, -1.435925006866455, -3.763845920562744, -0.052710991352796555, -0.004182639066129923, -0.17120777070522308, -1.7696409225463867, -0.0004211969207972288, -0.0419582799077034, -0.2611861228942871, -2.3461880683898926, -0.0025659038219600916, -1.1791791915893555, -0.8666917085647583, -0.03335549309849739, -0.0006579380133189261, -0.026346080005168915, -0.003238197648897767, -2.6702524337451905e-05, -0.11500345170497894, -0.13710053265094757, -1.9510536193847656, -0.34774062037467957, -0.12152333557605743, -0.32009321451187134, -0.6895130276679993, -0.00834348239004612, -0.09728127717971802, -0.00596813065931201, -2.680955410003662, -1.3308115005493164, -0.017682058736681938, -0.0005486889858730137, -0.008914670906960964, -1.439885139465332, -0.00026854246971197426, -0.5215370059013367, -0.33675581216812134, -0.22515778243541718, -0.2663944363594055, -3.9457496313843876e-05, -0.43293875455856323, -0.12403608113527298, -8.165503095369786e-05, -0.04425420984625816, -0.0003023882454726845, -0.02380749024450779, 0.0, -5.125986263010418e-06, -0.3039611279964447, -0.0027982147876173258, -0.004627234302461147, -0.0209734458476305, -0.005632600747048855, -0.006043730769306421, -0.004745174665004015, -0.0010345588671043515, -0.007779065053910017, -0.0022592039313167334, -9.65590606938349e-06, -0.007850625552237034, -0.36552324891090393, -1.5688447952270508, -0.001026222831569612, -0.28620660305023193, -3.7474052906036377, -0.002419879427179694, -4.172316494077677e-06, -0.008866936899721622, -0.8026379346847534, -0.07318850606679916, -0.003663140581920743, -0.03516335412859917, -0.2542254328727722, -1.8280397653579712, -0.14969870448112488, -0.010440140031278133, -0.001774523756466806, -0.00204806262627244, -0.10179804265499115, -0.0004532501916401088, -1.0270349979400635, -1.9150240421295166, -0.010862741619348526, -0.7853991389274597, -0.0001559135998832062, -0.43638548254966736, -1.1920928244535389e-07, -1.311301275563892e-06, -0.000791236583609134, -0.00038354191929101944, -0.04219544678926468, -0.007916503585875034, -0.0006335158832371235, -0.013197333551943302, -0.008428478613495827, -2.658331868587993e-05, -0.00757523812353611, -0.025883391499519348, -0.11382924020290375, -0.03710499778389931, -0.0325232669711113, -0.003226434113457799, -0.44282853603363037, -0.00033361115492880344, -1.3059329986572266, -0.08253741264343262, -0.009909010492265224, -0.0002494739310350269, -0.000824230897706002, -0.037412334233522415, -0.0005801424849778414, -0.44592615962028503, -1.164509654045105, -0.007332082372158766, -0.3265177309513092, -0.048309989273548126, -0.0016321921721100807, -0.0009818024700507522, -0.013294151984155178, -0.01235039159655571, -0.00033706706017255783, -0.010235085152089596, -0.002546165604144335, -7.629365427419543e-06, -0.003702097339555621, -0.0026838495396077633, -0.12359665334224701, -0.006609246600419283, -0.5249508619308472, -0.2887078821659088, -0.0016662298003211617, -0.00485716899856925, -0.024433085694909096, -0.0015197168104350567, -0.0001578206429257989, -0.0004568248405121267, -0.006034369580447674, -0.0007675323868170381, -0.39850351214408875, -2.49876070022583, -1.4659382104873657, -0.8612874150276184, -0.48154884576797485, -1.2406082153320312, -0.5253836512565613, -0.050007130950689316, -0.001013718661852181, -0.22128722071647644, -0.05133568495512009, -0.022747179493308067, -0.08383651822805405, -0.002424279460683465, -0.0029199367854744196, -0.00041166413575410843, -2.170121192932129, -0.00119066855404526, -0.0002618685248307884, -5.006664650863968e-05, -0.0027668310794979334, -0.5514411926269531, -0.009291266091167927, -0.543583333492279, -0.061654508113861084, -0.01030163187533617, -0.009147520177066326, -0.0005864569102413952, -0.002815570682287216, -0.00010418349120300263, -0.04142865166068077, -0.002554964739829302, -0.010199567303061485, -1.45929753780365, -0.5605152249336243, -2.6753804683685303, -1.8605141639709473, -0.2856736183166504, -0.07324190437793732, -0.01640123501420021, -0.27867990732192993, -0.0014382981462404132, -0.1685338020324707, -0.6394128799438477, -0.011712946929037571, -1.92597496509552, -1.9645835161209106, -0.5195366740226746, -0.0005916990339756012, -0.7350167632102966, -0.00013481661153491586, -0.0004886387032456696, -1.0490362910786644e-05], "finish_reason": "length"}], "metrics": {"energy": 297.24898250579827, "energy_per_token": 1.1611288379132745, "time": 11.548868, "time_per_token": 0.045112765625}}
{"outputs": [{"text": "assert array.shape[0] > 0, \"Empty array.\"\n    assert len(array.shape) == 2, \"array must be 2D\"\n\n    np.random.seed(seed)\n    if features is not None:\n        assert len(features) == array.shape[1], \"The number of features must match the number of columns.\"\n\n    if features is None:\n        features = [str(i+1) for i in range(array.shape[1])]\n\n    # create the axes object and configure\n    ax = plt.subplots()[1]\n    ax = sns.heatmap(array,\n                      cmap='RdYlGn',\n                      annot=False,\n                      fmt=\"\",\n                      mask_params={'marker': 'o', 'marker_size': 0},\n                      xticklabels=features,\n                      yticlabels=features,\n                      vmin=0,\n                      vmax=1,\n                      ax=ax)\n    ax.set_xticklabels(ax.get_xt", "tokens": ["assert", " array", ".", "shape", "[", "0", "]", " >", " ", "0", ",", " \"", "Empty", " array", ".", "\"", "\n", "    ", "assert", " len", "(", "array", ".", "shape", ")", " ==", " ", "2", ",", " \"", "array", " must", " be", " ", "2", "D", "\"", "\n", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "assert", " len", "(", "features", ")", " ==", " array", ".", "shape", "[", "1", "]", ",", " \"", "The", " number", " of", " features", " must", " match", " the", " number", " of", " columns", ".", "\"", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "str", "(", "i", "+", "1", ")", " for", " i", " in", " range", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "\n", "    ", "#", " create", " the", " axes", " object", " and", " configure", "\n", "    ", "ax", " =", " plt", ".", "sub", "plots", "()[", "1", "]", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", "\n", "                ", "      ", "cm", "ap", "='", "R", "d", "Y", "l", "G", "n", "'", ",", "\n", "                ", "      ", "annot", "=", "False", ",", "\n", "                ", "      ", "fmt", "=", "\"", "\"", ",", "\n", "                ", "      ", "mask", "_", "params", "={", "'", "marker", "':", " '", "o", "'", ",", " '", "marker", "_", "size", "':", " ", "0", "}", ",", "\n", "                ", "      ", "xt", "ick", "labels", "=", "features", ",", "\n", "                ", "      ", "y", "tic", "labels", "=", "features", ",", "\n", "                ", "      ", "v", "min", "=", "0", ",", "\n", "                ", "      ", "v", "max", "=", "1", ",", "\n", "                ", "      ", "ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "ax", ".", "get", "_", "xt"], "logprobs": [-3.609006881713867, -1.153968095779419, -0.026645829901099205, -2.083320379257202, -0.05207138508558273, -0.10872878134250641, -0.0028206822462379932, -0.6810975670814514, -0.0037760876584798098, -0.04058846831321716, -0.511031448841095, -0.5166740417480469, -2.2288312911987305, -0.44507062435150146, -1.9780738353729248, -0.08398011326789856, -0.01820603385567665, -0.050338298082351685, -0.1371661126613617, -1.138283133506775, -0.0005765683017671108, -0.016312692314386368, -0.06314755231142044, -0.01162575464695692, -0.0012424614978954196, -0.04204618185758591, -0.0010761191369965672, -0.0007194076315499842, -0.007707618176937103, -0.15307442843914032, -3.3424301147460938, -0.14568521082401276, -0.03927982226014137, -0.26135390996932983, -0.0008224442135542631, -0.6616145372390747, -1.1108647584915161, -0.005299804266542196, -0.6543855667114258, -0.00025018901214934886, -2.6135239601135254, -0.001313776709139347, -0.0009598892065696418, -0.00011085849109804258, -0.03144074231386185, -0.00187923654448241, -0.01083160936832428, -0.03987118601799011, -0.030058518052101135, -0.5335317850112915, -1.967620849609375, -0.045676637440919876, -0.32471516728401184, -1.3114840984344482, -8.451581379631534e-05, -0.05342523008584976, -0.010640199296176434, -0.00283447140827775, -0.19772078096866608, -0.060596346855163574, -0.0001935771433636546, -0.05201050266623497, -0.000409161759307608, -0.010639962740242481, -0.10944483429193497, -0.00016378014697693288, -0.0013765154872089624, -0.009626396931707859, -0.0053177098743617535, -0.00034362133010290563, -0.06682422012090683, -0.2702583074569702, -3.012105703353882, -0.8430457711219788, -0.00454618688672781, -0.3193899691104889, -0.8683432340621948, -0.0950390174984932, -0.031330645084381104, -0.058480821549892426, -0.004265377763658762, -0.022853447124361992, -1.5995917320251465, -0.0049865879118442535, -0.0024525821208953857, -2.513455867767334, -0.23788027465343475, -1.622369647026062, -0.044655691832304, -0.041279613971710205, -0.2578267455101013, -0.009341932833194733, -0.020270921289920807, -0.0029962430708110332, -0.3079865872859955, -0.01030753180384636, -0.34568920731544495, -0.6931470632553101, -0.014856535010039806, -0.3597312867641449, -1.7731380462646484, -0.0015553055563941598, -0.0021799865644425154, -0.0024431876372545958, -0.0010826685465872288, -0.005817979574203491, -0.005582575686275959, -0.0005785936955362558, -0.04038984701037407, -0.00013374387344811112, -0.0005648924270644784, -0.0017440598458051682, -0.004792394116520882, -0.004029252100735903, -0.0005104430601932108, -0.022685185074806213, -0.18851882219314575, -0.001057542278431356, -2.839841842651367, -3.337613582611084, -1.3703621625900269, -2.844142198562622, -1.7421925067901611, -1.8410816192626953, -3.588606595993042, -3.5087685585021973, -0.005545233376324177, -0.5230335593223572, -0.030088594183325768, -0.41836297512054443, -6.282132380874828e-05, -0.4489351212978363, -0.27106186747550964, -0.9628322720527649, -0.009153780527412891, -0.0035967440344393253, -0.054969530552625656, -0.1424666941165924, -0.4282571077346802, -3.043682098388672, -0.03027273342013359, -1.1920922133867862e-06, -4.60137271147687e-05, -0.008714266121387482, -8.022463589441031e-05, -0.0005560758872888982, -0.4185929000377655, -0.034579675644636154, -1.6042044162750244, -0.08608487248420715, -2.504455089569092, -2.0761919021606445, -0.0005329619161784649, -0.6632928252220154, -1.6269196271896362, -0.859470546245575, -0.09774895757436752, -0.0010827876394614577, -0.2653127908706665, -0.006418921053409576, -0.29939156770706177, -0.0021099227014929056, -0.06863506883382797, -0.00043156370520591736, -0.000653411028906703, -0.9184766411781311, -0.014626655727624893, -0.6084659099578857, -0.013532334007322788, -0.03195755556225777, -0.0006125480867922306, -0.0007306052139028907, -2.148739814758301, -0.1742192804813385, -1.3994667530059814, -0.1849604845046997, -0.012714630924165249, -0.02555122599005699, -0.0005578630371019244, -0.0009872806258499622, -3.9969143867492676, -0.008779851719737053, -3.3489279747009277, -0.9133400321006775, -0.03132232651114464, -3.6786434650421143, -0.00098204065579921, -0.4206690788269043, -1.5938397645950317, -0.032675229012966156, -0.00038354191929101944, -0.03626979514956474, -0.6485156416893005, -0.4882960021495819, -0.23942071199417114, -0.0004542034293990582, -0.020869547501206398, -2.5832276344299316, -0.5198577642440796, -0.003518464043736458, -0.009505371563136578, -0.0010971962474286556, -0.0020327160600572824, -0.7720215916633606, -0.005167817231267691, -0.00011121608258690685, -0.011288582347333431, -0.045611947774887085, -0.028259243816137314, -0.032493263483047485, -0.0009168949909508228, -0.0022971450816839933, -1.3865413665771484, -1.8041049242019653, -0.38181978464126587, -0.028390420600771904, -0.0518905408680439, -0.3391853868961334, -0.021485082805156708, -0.003171654185280204, -0.009594755247235298, -3.5024774074554443, -0.05215466767549515, -0.18149742484092712, -0.2174840122461319, -0.09684260189533234, -0.22084857523441315, -0.00043108707177452743, -0.001622551935724914, -0.03862399235367775, -0.0028973526787012815, -0.002614772180095315, -0.06068195402622223, -0.40957003831863403, -0.04253743961453438, -0.0028023754712194204, -0.007753751706331968, -0.7938517928123474, -0.011830407194793224, -0.0027109559159725904, -0.4772818684577942, -0.04070121422410011, -0.6458128094673157, -0.8618265390396118, -0.01399254146963358, -0.4678425192832947, -0.14224720001220703, -1.4237929582595825, -0.1634954959154129, -0.00020740265608765185, -0.07454085350036621, -0.6512803435325623, -0.00025054652360267937, -0.03372899070382118, -8.844937838148326e-05, -0.017463840544223785], "finish_reason": "length"}], "metrics": {"energy": 279.1267545766831, "energy_per_token": 1.0903388850651683, "time": 11.5578575, "time_per_token": 0.045147880859375}}
{"outputs": [{"text": "# check array is 2-d\n    if not isinstance(array, np.ndarray) or array.ndim != 2:\n        raise ValueError(\"'array' must be a 2D numpy array\")\n\n    # check features list matches number of columns\n    if features and len(features) != array.shape[1]:\n        raise ValueError(f\"Length of 'features' must match the number of columns in 'array'. Got: {len(features)}\")\n\n    # get features list if none is provided\n    if features is None:\n        features = [f\"col{col_idx}\" for col_idx in range(1, array.shape[1] + 1)]\n\n    # shuffle array\n    np.random.seed(seed)\n    array = np.random.permutation(array)\n\n    # generate plot\n    fig, ax = plt.subplots()\n    sns.heatmap(array, cmap='Blues', annot=False, square=True, ax=ax)\n    ax.set_xticklabels(features)\n    return ax", "tokens": ["#", " check", " array", " is", " ", "2", "-", "d", "\n", "    ", "if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", ")", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " ", "2", "D", " numpy", " array", "\"", ")", "\n", "\n", "    ", "#", " check", " features", " list", " matches", " number", " of", " columns", "\n", "    ", "if", " features", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Length", " of", " '", "features", "'", " must", " match", " the", " number", " of", " columns", " in", " '", "array", "'", ".", " Got", ":", " {", "len", "(", "features", ")}", "\"", ")", "\n", "\n", "    ", "#", " get", " features", " list", " if", " none", " is", " provided", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "f", "\"", "col", "{", "col", "_", "idx", "}\"", " for", " col", "_", "idx", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " shuffle", " array", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "array", " =", " np", ".", "random", ".", "per", "mutation", "(", "array", ")", "\n", "\n", "    ", "#", " generate", " plot", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "array", ",", " c", "map", "='", "Bl", "ues", "'", ",", " annot", "=", "False", ",", " square", "=", "True", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "features", ")", "\n", "    ", "return", " ax"], "logprobs": [-1.6297416687011719, -2.651538848876953, -3.1853339672088623, -1.550877332687378, -1.567509651184082, -0.0025694710202515125, -1.442352056503296, -1.7801073789596558, -0.5418368577957153, -0.0017070496687665582, -0.11606898158788681, -1.446608543395996, -0.3986279368400574, -0.00030250742565840483, -0.0010149095905944705, -0.0006621075444854796, -0.00934405904263258, -7.748573807475623e-06, -0.00036542891757562757, -1.5616295058862306e-05, -0.2392551749944687, -0.0064099193550646305, -0.17220686376094818, -0.0001699779968475923, -0.029222965240478516, -0.00027700403006747365, -0.08930999040603638, -1.1920928244535389e-07, -5.960462772236497e-07, -0.001848061801865697, -7.271502545336261e-05, -0.02894425205886364, -0.002295004203915596, -0.0016164820408448577, -0.02812213823199272, -0.01098855584859848, -4.100715523236431e-05, -0.2044428437948227, -0.28123560547828674, -1.181896448135376, -0.0030463975854218006, -0.0020080895628780127, -0.04169910401105881, -0.03076171688735485, -0.07435295730829239, -0.01912183128297329, -7.60526381782256e-05, -0.5608412027359009, -0.04398444667458534, -0.00547682773321867, -1.0023167133331299, -0.00024399164249189198, -0.0007765853079035878, -0.3596513271331787, -0.0005731132114306092, -0.1583428531885147, -0.36966291069984436, -0.8090614080429077, -1.8153210878372192, -1.1428906917572021, -0.87106853723526, -0.003181992331519723, -0.07694584876298904, -0.629899799823761, -0.00048101297579705715, -0.10161347687244415, -0.03205384686589241, -1.5562944412231445, -0.03551362454891205, -3.099393507000059e-05, -0.02796136774122715, -0.00016878610767889768, -0.004088615067303181, 0.0, -2.264974000354414e-06, -0.01028735563158989, -0.00012063252506777644, -0.0006404255982488394, -0.0044684563763439655, -0.0024568631779402494, -0.0029318227898329496, -0.0010115751065313816, -0.0006677066558040679, -0.006252608262002468, -0.000892121868673712, -1.2159273865108844e-05, -0.01732560060918331, -1.3029208183288574, -0.009648947976529598, -2.4891974925994873, -0.017291856929659843, -0.3932498097419739, -0.002604427980259061, -0.0017635759431868792, -0.6540863513946533, -0.0905880257487297, -1.5863018035888672, -0.007282615639269352, -0.00401702243834734, -0.005448728799819946, -0.1240105926990509, -0.06910265237092972, -0.0035632471553981304, -0.18781247735023499, -1.0039793252944946, -1.494696021080017, -2.3479912281036377, -0.12699997425079346, -0.04495866596698761, -0.00014661667228210717, -0.007883269339799881, -0.029516298323869705, -0.9751754403114319, -0.02119475230574608, -0.0025347506161779165, -0.07465437054634094, -0.0005149707430973649, -0.2615226209163666, -3.5167160034179688, -2.0078165531158447, -1.2363176345825195, -1.2411669492721558, -1.603649616241455, -2.0105996131896973, -0.4716013967990875, -0.08777353167533875, -0.0003133521240670234, -0.1615736484527588, -0.7168157696723938, -0.07535090297460556, -0.004596619866788387, -0.005622050724923611, -0.007296935189515352, -0.0019318267004564404, -0.10461452603340149, -0.003622400341555476, -0.29969215393066406, -0.7026747465133667, -0.16756188869476318, -1.7921950817108154, -0.5194199085235596, -2.6862893104553223, -2.1200385093688965, -1.0998435020446777, -0.386033833026886, -0.0035886666737496853, -0.00035124807618558407, -2.2649508537142538e-05, -8.237022848334163e-05, -0.012331551872193813, -0.0032501989044249058, -0.00011145447206217796, -0.17764273285865784, -0.00011002412065863609, -0.01562589779496193, -2.1934269170742482e-05, -0.0003748429589904845, -0.00046433156239800155, -0.0014923398848623037, -0.25267690420150757, -0.008738728240132332, -0.0021460852585732937, -8.284702198579907e-05, -0.0015698263887315989, -0.013286740519106388, -0.08798904716968536, -0.002143468242138624, -0.11733661592006683, -0.7586939930915833, -1.3219341039657593, -0.8731764554977417, -0.0011051744222640991, -0.7663021087646484, -0.0024924185127019882, -0.0002933310461230576, -1.3470558769768104e-05, -0.057795729488134384, -0.0005809764843434095, -0.0014248467050492764, -0.01761365868151188, -0.040556877851486206, -0.004709105938673019, -1.20382821559906, -0.13584616780281067, -0.5214025378227234, -0.00022063204960431904, -0.08525392413139343, -2.4676019165781327e-05, -0.08025334030389786, -0.02057494968175888, -0.0003951007383875549, -0.003021796001121402, -0.16231781244277954, -0.09101911634206772, -0.047431230545043945, -0.0002177716523874551, -0.10796770453453064, -3.1851885318756104, -2.134474992752075, -0.19490234553813934, -0.002148702275007963, -1.6295137405395508, -0.07634872943162918, -0.030034340918064117, -0.007977410219609737, -0.0025247621815651655, -2.6464111215318553e-05, -0.00023803261865396053, -4.339123915997334e-05, -0.579430103302002, -0.0027277187909930944, -0.11677215993404388, -0.41611447930336, -9.727005090098828e-05, -0.00257422705180943, -0.0331728421151638, -0.0001971527235582471, -0.00023934361524879932, -0.17550887167453766, -0.010441319085657597, -2.0815954208374023, -0.2611446976661682, -0.7073428630828857, -1.2406975030899048, -0.0017539369873702526, -0.01670081540942192, -0.0004152389301452786, -1.355225920677185, -0.0011759040644392371, -1.3051656484603882, -0.0239848755300045, -2.7401013374328613, -0.00240430049598217, -0.024504046887159348, -0.027473680675029755, -0.5607932209968567, -0.0011326810345053673, -0.00025388356880284846, -0.757620632648468, -0.009590976871550083, -0.13087891042232513, -0.15715479850769043, -0.0010432521812617779, -0.10220517218112946, -0.09073217958211899, -0.8279000520706177, -0.07085374742746353, -0.00014351768186315894, -0.008036894723773003, -0.01650771126151085, -0.36217212677001953, -0.01220343355089426, -0.06367351859807968, -2.414409875869751, -0.017607100307941437], "finish_reason": "stop"}], "metrics": {"energy": 324.40840545654316, "energy_per_token": 1.2721898253197772, "time": 11.554865, "time_per_token": 0.04531319607843137}}
{"outputs": [{"text": "assert seed is None or type(seed) == int\n    if np.ndim(array) != 2 or np.shape(array)[0] == 0:\n        raise ValueError(\"Input array must be 2D and non-empty\")\n    if features:\n        assert np.shape(features) == (np.shape(array)[1],),\\\n            \"Feature list must be of length {0} (number of columns in array)\".format(np.shape(array)[1])\n    else:\n        features = list(range(1, np.shape(array)[1] + 1))\n\n    np.random.seed(seed)\n    rng = np.random.default_rng(seed)\n    array = rng.permutation(array)\n\n    if features:\n        ax = sns.heatmap(\n            array,\n            ax=None,\n            cmap='Blues',\n            xticklabels=features,\n            yticklabels=features,\n            square=True\n        )\n    else:\n        ax = sns.heatmap(\n", "tokens": ["assert", " seed", " is", " None", " or", " type", "(", "seed", ")", " ==", " int", "\n", "    ", "if", " np", ".", "nd", "im", "(", "array", ")", " ", "!", "=", " ", "2", " or", " np", ".", "shape", "(", "array", ")[", "0", "]", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " array", " must", " be", " ", "2", "D", " and", " non", "-", "empty", "\"", ")", "\n", "    ", "if", " features", ":", "\n", "        ", "assert", " np", ".", "shape", "(", "features", ")", " ==", " (", "np", ".", "shape", "(", "array", ")[", "1", "]", ",", ")", ",", "\\", "\n", "            ", "\"", "Feature", " list", " must", " be", " of", " length", " {", "0", "}", " (", "number", " of", " columns", " in", " array", ")\"", ".", "format", "(", "np", ".", "shape", "(", "array", ")[", "1", "])", "\n", "    ", "else", ":", "\n", "        ", "features", " =", " list", "(", "range", "(", "1", ",", " np", ".", "shape", "(", "array", ")[", "1", "]", " +", " ", "1", "))", "\n", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "r", "ng", " =", " np", ".", "random", ".", "default", "_", "r", "ng", "(", "seed", ")", "\n", "    ", "array", " =", " r", "ng", ".", "per", "mutation", "(", "array", ")", "\n", "\n", "    ", "if", " features", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n", "            ", "array", ",", "\n", "            ", "ax", "=", "None", ",", "\n", "            ", "cm", "ap", "='", "Bl", "ues", "'", ",", "\n", "            ", "xt", "ick", "labels", "=", "features", ",", "\n", "            ", "yt", "ick", "labels", "=", "features", ",", "\n", "            ", "square", "=", "True", "\n", "        ", ")", "\n", "    ", "else", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n"], "logprobs": [-3.609006881713867, -3.1367104053497314, -0.03855735436081886, -0.2278849333524704, -0.08830875158309937, -0.856328010559082, -0.00019751029321923852, -0.0099532725289464, -0.00027366707217879593, -0.8232081532478333, -0.011537142097949982, -0.6708372831344604, -0.284304141998291, -1.5156537294387817, -3.2520017623901367, -0.0002946419408544898, -1.1022415161132812, -8.40390202938579e-05, -0.0003197873884346336, -0.002092554699629545, -0.0038121899124234915, -0.6007474660873413, -7.152555099310121e-07, -1.2040065485052764e-05, -0.001882449141703546, -0.00027259447961114347, -1.2197896242141724, -1.2981932163238525, -0.0020035686902701855, -1.5277793407440186, -0.0005370128201320767, -0.0012367465533316135, -0.3275436460971832, -0.03493809700012207, -0.0024126251228153706, -0.2700859606266022, -0.010474822483956814, -0.0005323661607690156, -0.17580589652061462, -0.028715968132019043, -0.0025290430057793856, -0.05070290341973305, -0.009371694177389145, -7.545663538621739e-05, -0.4114077091217041, -0.32089734077453613, -2.9476962089538574, -0.4802248477935791, -0.1972680538892746, -0.13387903571128845, -0.9186703562736511, -0.0006124289939180017, -0.44873717427253723, -0.18716029822826385, -0.5020729303359985, -0.08233147114515305, -0.008663922548294067, -0.9807855486869812, -0.0010943383676931262, -0.002803564304485917, -0.3575887978076935, -0.3606621026992798, -0.08956976234912872, -2.0797362327575684, -0.02152475155889988, -0.0010319390567019582, -0.28084686398506165, -2.6282424926757812, -0.0035975754726678133, -0.23835435509681702, -0.000780635280534625, -0.4922458231449127, -0.6758966445922852, -0.021953539922833443, -0.5108425617218018, -0.23077607154846191, -0.0005988473421894014, -0.023269671946763992, -0.00023147765023168176, -0.0021975908894091845, -0.017150545492768288, -0.0071608321741223335, -0.13024146854877472, -0.000949885172303766, -0.12113191932439804, -1.4073158502578735, -3.153229236602783, -4.0531076592742465e-06, -0.21563538908958435, -0.5991586446762085, -3.5911898612976074, -0.3695942163467407, -0.388683557510376, -2.4013471603393555, -1.0218336582183838, -1.1071869134902954, -1.470358967781067, -2.4727630615234375, -1.185983419418335, -1.6667357683181763, -0.9726877212524414, -0.0025607910938560963, -0.049558211117982864, -0.5729935765266418, -0.650244951248169, -0.196668341755867, -0.044420935213565826, -0.011830407194793224, -0.006981621030718088, -0.22488953173160553, -0.0001754606782924384, -0.006455994211137295, -0.00038211196078918874, -0.0021528657525777817, -0.002126933541148901, -0.00415034918114543, -0.0057817124761641026, -0.0009556017466820776, -0.49893298745155334, -0.8901016116142273, -0.00029690624796785414, -0.01031083520501852, -0.0009575072908774018, -0.08436212688684464, -0.0053785378113389015, -1.820520043373108, -0.01710214838385582, -0.6402367353439331, -0.0007133323233574629, -0.18928593397140503, -0.00040260792593471706, -0.08674255013465881, -0.0003698380314745009, -0.01120713073760271, -8.964136941358447e-05, -0.00034290633630007505, -0.0018716213526204228, -0.0026987106539309025, -0.3029150664806366, -0.0016414752462878823, -0.00453348970040679, -0.0001591317413840443, -0.004509754944592714, -0.03183215856552124, -1.0849382877349854, -0.0004489606071729213, -1.5845146179199219, -0.0013609204906970263, -0.0012230543652549386, -3.9457496313843876e-05, -0.0861784890294075, -0.002076494973152876, -0.017775047570466995, -0.015648312866687775, -0.03252742066979408, -0.1019386574625969, -4.568097114562988, -0.7022859454154968, -0.024866677820682526, -0.013992659747600555, -0.00019000156316906214, -0.03423759713768959, -0.013240626081824303, -0.5196278691291809, -1.4781842764932662e-05, -0.00010799778101500124, -2.2649508537142538e-05, -0.33174967765808105, -0.07542784512042999, -0.12820853292942047, -0.01138865016400814, -0.15716111660003662, -2.652733325958252, -0.29207199811935425, -0.12713707983493805, -3.2305197237292305e-05, -3.755022044060752e-05, -0.16281470656394958, -0.01643090508878231, -0.0005423743859864771, -0.03998309746384621, -0.28059452772140503, -0.08008929342031479, -0.6163111925125122, -0.00013279033009894192, -1.1437193155288696, -0.48943889141082764, -0.5403854250907898, -0.01371978223323822, -0.001811888418160379, -1.283121109008789, -0.01957947574555874, -0.08196548372507095, -2.264974000354414e-06, -7.354942499659956e-05, -0.0039856769144535065, -0.00010442188795423135, -0.00042691652197390795, -2.1878862380981445, -0.04330384358763695, -0.09092475473880768, -0.1378292739391327, -0.15286727249622345, -0.0006899837171658874, -3.3001351356506348, -0.017803387716412544, -0.6636284589767456, -0.0028249616734683514, -0.042666416615247726, -0.0008511496125720441, -1.50675368309021, -0.00010251473577227443, -0.6797062754631042, -1.0707218647003174, -0.003090964164584875, -0.025165244936943054, -0.0047317673452198505, -0.018539361655712128, -0.0013272295473143458, -1.789198875427246, -0.011627286672592163, -8.165503095369786e-05, -0.011162570677697659, -0.029666520655155182, -0.013052618131041527, -0.005065108649432659, -0.009076288901269436, -0.083179771900177, -0.0005227153305895627, -3.182837463100441e-05, -0.0036245384253561497, -0.014430447481572628, -0.13209940493106842, -0.0018168861279264092, -0.09824386239051819, -2.640204668045044, -0.001409133430570364, -0.10688289999961853, -2.0127480030059814, -0.02218780480325222, -0.0018185520311817527, -0.025760482996702194, -0.3124253749847412, -0.007115026004612446, -0.00025912740966305137, -0.002987685613334179, -0.0012530578533187509, -0.09426853060722351, -0.0014080620603635907, -0.01076993253082037, -1.3351351299206726e-05, -4.768360213347478e-06, -0.00031406714697368443, -5.602820692729438e-06, -0.00018082413589581847, -0.079339899122715], "finish_reason": "length"}], "metrics": {"energy": 282.49341401100156, "energy_per_token": 1.1034898984804749, "time": 11.558657, "time_per_token": 0.04515100390625}}
{"outputs": [{"text": "if array.ndim != 2:\n        raise ValueError(\"array must be 2-dimensional\")\n    if features is not None:\n        if len(features) != array.shape[1]:\n            raise ValueError(\"features must have the same number of columns as the array\")\n    else:\n        features = [str(col + 1) for col in range(array.shape[1])]\n    ax = sns.heatmap(array,\n                     annot=True,\n                     linewidths=0,\n                     fmt='',\n                     yticklabels=features)\n    ax.yaxis.set_ticks_position('right')\n    return ax", "tokens": ["if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "array", " must", " be", " ", "2", "-", "dimensional", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "\"", "features", " must", " have", " the", " same", " number", " of", " columns", " as", " the", " array", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "features", " =", " [", "str", "(", "col", " +", " ", "1", ")", " for", " col", " in", " range", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", "\n", "                ", "     ", "annot", "=", "True", ",", "\n", "                ", "     ", "linewidth", "s", "=", "0", ",", "\n", "                ", "     ", "fmt", "=", "''", ",", "\n", "                ", "     ", "yt", "ick", "labels", "=", "features", ")", "\n", "    ", "ax", ".", "y", "axis", ".", "set", "_", "t", "icks", "_", "position", "('", "right", "')", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-0.8079642653465271, -1.4244707822799683, -0.02581845410168171, -0.4785267412662506, -0.00048137042904272676, -0.1689128428697586, -1.1920928244535389e-07, -5.245195097813848e-06, -0.0014449642039835453, -0.00024875884992070496, -0.16157323122024536, -0.02551078610122204, -0.0023057085927575827, -0.022851349785923958, -0.003789507318288088, -3.3854863431770355e-05, -0.24967855215072632, -0.23525933921337128, -1.2680563926696777, -0.022202610969543457, -0.029962152242660522, -0.6233820915222168, -0.00015209948469419032, -0.4387262463569641, -0.03664657101035118, -0.327015221118927, -0.0003587556129787117, -0.0036376039497554302, -0.39106684923171997, -0.24607333540916443, -0.6303948760032654, -0.24263980984687805, -0.6860935091972351, -3.313963316031732e-05, -1.2664766311645508, -0.0028687058947980404, -0.0007655074005015194, -0.11845165491104126, -0.0707658976316452, -4.851700214203447e-05, -0.013874512165784836, -0.00016985881666187197, -0.0069884867407381535, 0.0, -1.6689286894688848e-06, -0.018449369817972183, -0.00012182447244413197, -0.0020166554022580385, -0.007021632511168718, -0.003063154872506857, -0.004613469820469618, -0.003508960595354438, -0.0012515101116150618, -0.00829229224473238, -0.0011528043542057276, -5.602820692729438e-06, -0.009751422330737114, -0.42358317971229553, -0.9337380528450012, -0.4496011435985565, -1.6310293674468994, -0.2926822602748871, -0.013927415013313293, -0.38428443670272827, -0.005173983983695507, -0.42519479990005493, -0.03514022007584572, -0.9242908954620361, -0.5994812250137329, -0.22510962188243866, -0.0008150592911988497, -0.0012203158112242818, -1.026944637298584, -0.4049294888973236, -6.675497570540756e-05, -0.008372918702661991, -0.0010825494537129998, -0.08214394003152847, -0.003759936196729541, -0.3030630648136139, -0.8791899681091309, -0.006215646397322416, -2.596020221710205, -0.9947271943092346, -0.0011687598889693618, -5.2689116273541003e-05, -0.0002907091984525323, -0.002262296387925744, -0.0007314390386454761, -0.0006864098832011223, -0.013045910745859146, -0.00010096516780322418, -0.007207819260656834, -5.054346183896996e-05, -0.00020203932945150882, -0.0005706112715415657, -0.0019224273273721337, -0.0008535317610949278, -0.00022706791060045362, -0.015319068916141987, -0.7290663719177246, -2.741257667541504, -0.01641894318163395, -0.14192308485507965, -1.4305104514278355e-06, -3.576214658096433e-05, -0.007762386463582516, -9.16677454370074e-05, -0.0004166688595432788, -0.30962565541267395, -0.03555101528763771, -1.9962794780731201, -0.0451417975127697, -0.15835902094841003, -0.890204906463623, -0.009129919111728668, -0.8830373883247375, -0.011684550903737545, -0.14067496359348297, -0.0001967951684491709, -0.0006282739923335612, -2.561838150024414, -0.29893559217453003, -0.07023386657238007, -0.9276940822601318, -0.3659531772136688, -0.021306786686182022, -0.00015424491721205413, -0.000321336614433676, -1.065339207649231, -0.23794905841350555, -1.0116102695465088, -0.0018148632952943444, -0.009667247533798218, -0.00021634146105498075, -0.0004987664869986475, -3.5347838401794434, -0.012493089772760868, -0.00019643761334009469, -0.012141605839133263, -0.13778804242610931, -2.5071651935577393, -0.02364940010011196, -0.05585623160004616, -1.4722542762756348, -0.013498697429895401, -2.368011236190796, -0.0004439560289029032, -0.0005384425749070942, -0.10049717873334885, -0.009703374467790127, -1.016664743423462, -0.007290544454008341, -0.15355496108531952, -0.0006445952458307147, -0.11409633606672287, -2.4671366214752197, -0.0030284514650702477, -0.017515970394015312, -0.03012734465301037, -1.4506230354309082, -0.0035052781458944082, -0.4266913831233978, -0.010862152092158794, -0.9048309922218323], "finish_reason": "stop"}], "metrics": {"energy": 210.18690731430044, "energy_per_token": 1.2738600443290935, "time": 7.997521, "time_per_token": 0.04846982424242424}}
{"outputs": [{"text": "if not isinstance(array, np.ndarray) or array.size == 0:\n        raise ValueError(f\"Input must be a non-empty 2D numpy array but received: {type(array)}\")\n    if array.ndim != 2:\n        raise ValueError(f\"Input must be a 2D numpy array but received: {array.ndim}D\")\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError(f\"Features length must be {array.shape[1]} but received: {len(features)}\")\n    if seed is not None:\n        np.random.seed(seed)\n    else:\n        np.random.shuffle(array, axis=0)\n    if features is not None:\n        ax = sns.heatmap(data=array, x=features, annot=False, cbar=False)\n    else:\n        ax = sns.heatmap(data=array, annot=False, cbar=False)\n    plt.show()\n    return ax", "tokens": ["if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", ")", " or", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " must", " be", " a", " non", "-", "empty", " ", "2", "D", " numpy", " array", " but", " received", ":", " {", "type", "(", "array", ")}", "\"", ")", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Input", " must", " be", " a", " ", "2", "D", " numpy", " array", " but", " received", ":", " {", "array", ".", "nd", "im", "}", "D", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Features", " length", " must", " be", " {", "array", ".", "shape", "[", "1", "]}", " but", " received", ":", " {", "len", "(", "features", ")}", "\"", ")", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "else", ":", "\n", "        ", "np", ".", "random", ".", "sh", "uffle", "(", "array", ",", " axis", "=", "0", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " x", "=", "features", ",", " annot", "=", "False", ",", " c", "bar", "=", "False", ")", "\n", "    ", "else", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " annot", "=", "False", ",", " c", "bar", "=", "False", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-0.8079642653465271, -1.2848204374313354, -0.7170402407646179, -0.00023338454775512218, -0.05980300158262253, -0.000886285852175206, -0.010381506755948067, -1.6689160474925302e-05, -0.0003067976504098624, -3.433168603805825e-05, -0.8445466756820679, -0.014912792481482029, -0.3023713529109955, -0.0006799769471399486, -1.9142342805862427, -0.12168136239051819, -0.002257657703012228, -0.00010585224663373083, -1.2721614837646484, -0.0276948269456625, -0.0016513533191755414, -0.02198117971420288, -0.0036505504976958036, -1.8358061424805783e-05, -0.2726849317550659, -2.502436637878418, -0.16586317121982574, -2.686645984649658, -1.684131145477295, -0.08703315258026123, -0.1399993747472763, -0.40509605407714844, -0.03671988844871521, -0.018793027848005295, -0.3643561005592346, -0.00041261743172071874, -0.07100265473127365, -0.17904333770275116, -0.0051255966536700726, -2.947291851043701, -1.306426763534546, -1.7818517684936523, -0.056630294770002365, -0.9277178645133972, -0.0004744596080854535, -0.00200297380797565, -0.031182406470179558, -0.21469175815582275, -0.002676240401342511, -0.0032877461053431034, -0.36436039209365845, -0.30699941515922546, -0.5734661817550659, -0.00024089295766316354, -0.03897569328546524, -0.0006043276516720653, -0.043400075286626816, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.000786591088399291, -8.725739462533966e-05, -0.020923832431435585, -0.004142276477068663, -0.0004654039512388408, -0.004263715818524361, -0.005463430192321539, -6.9141146923357155e-06, -0.011946558952331543, -0.2793416976928711, -0.009308746084570885, -0.1838971972465515, -0.16467534005641937, -0.006472931243479252, -0.06579294800758362, -0.017560716718435287, -0.00013779645087197423, -0.06794765591621399, -0.06432107090950012, -0.0019668058957904577, -0.06608110666275024, -0.011269133538007736, -0.16685006022453308, -0.008903564885258675, -0.7160891890525818, -0.01446299534291029, -0.14074382185935974, -0.0006430465145967901, -0.5048863291740417, -0.10936960577964783, -0.6418461799621582, -0.0005841932725161314, -0.002058055717498064, -0.5188676118850708, -0.167627215385437, -0.10671138018369675, -0.30419623851776123, -0.4867441952228546, -4.434487345861271e-05, -0.47928890585899353, -0.1443784385919571, -6.460934673668817e-05, -0.01852426491677761, -0.0003736513026524335, -0.008159753866493702, 0.0, -4.172316494077677e-06, -0.018192103132605553, -0.00010561384988250211, -0.003264219732955098, -0.013334146700799465, -0.004647406283766031, -0.0080768633633852, -0.00436911778524518, -0.001149232150055468, -0.008359678089618683, -0.0024568631779402494, -5.8412379075889476e-06, -0.0052458494901657104, -0.5957770347595215, -0.01212217379361391, -1.3379522562026978, -2.5243608951568604, -0.503386378288269, -1.8418148756027222, -1.2546799182891846, -0.010202163830399513, -0.0003305127320345491, -0.0013533014571294188, -0.0017225203337147832, -0.0067743160761892796, -0.06902199238538742, -0.2791278064250946, -0.11736566573381424, -0.4334069490432739, -0.005878066644072533, -0.019371608272194862, -8.689979586051777e-05, -0.001450797077268362, -0.0029314663261175156, -0.03873604163527489, -0.0006071869283914566, -0.001785709522664547, -0.8261638283729553, -0.6317327618598938, -1.3039900064468384, -0.16834403574466705, -0.06508849561214447, -4.124556289752945e-05, -0.039255864918231964, -0.008144027553498745, -0.0009064141195267439, -0.10369524359703064, -0.00026723151677288115, -0.00026854246971197426, -2.5748875486897305e-05, -0.004655237775295973, -0.0004751745145767927, -0.0033208958338946104, -0.017882198095321655, -0.004959661513566971, -0.5938010215759277, -3.418684482574463, -0.00019453064305707812, -0.007618656847625971, -0.0012506766943261027, -0.17079482972621918, -0.00011395759065635502, -0.0010887415846809745, -0.00012408917245920748, -1.463167428970337, -0.0001934579631779343, -0.0044206278398633, -0.06180255860090256, -2.681314706802368, -0.2419605851173401, -0.010392006486654282, -0.422722190618515, -0.039865344762802124, -0.024056099355220795, -0.3107834756374359, -0.5075090527534485, -0.013920714147388935, -0.06846175342798233, -1.2760851383209229, -1.883488948806189e-05, -0.006008419673889875, -0.00412779301404953, -0.0017185931792482734, -1.8355367183685303, -0.03184809535741806, -0.0787821114063263, -1.7881377516459906e-06, -6.067568756407127e-05, -0.003545666579157114, -7.092700980138034e-05, -0.00036113892565481365, -2.496570348739624, -0.00517433974891901, -0.00818564835935831, -0.024900631979107857, -2.343531370162964, -2.0554802417755127, -0.013552562333643436, -0.17025725543498993, -1.7862118482589722, -0.0021004059817641973, -0.7596089243888855, -0.2672525942325592, -0.48532968759536743, -1.2577790021896362, -0.11010324954986572, -0.05449506640434265, -0.9685924053192139, -0.03816878795623779, -0.11195769160985947, -0.009717423468828201, -8.630380034446716e-05, -0.0012138864258304238, -0.0008044582791626453, -0.3432026505470276, -0.0014004433760419488, -0.007897106930613518, -7.152531907195225e-06, -3.099436753473128e-06, -0.0001652104256208986, -8.380061626667157e-05, -0.00013863079948350787, -0.016069423407316208, -0.0008100565755739808, -0.009289376437664032, -0.023106254637241364, -0.16528403759002686, -0.00011014331539627165, -0.02053816244006157, -0.04402140900492668, -0.009601838886737823, -0.010341392830014229, -0.003389449091628194, -0.018349772319197655, -0.19433939456939697, -0.012722517363727093, -0.29345300793647766, -2.9460856914520264, -6.985420623095706e-05, -1.124600887298584, -0.05791003629565239, -0.025640465319156647, -0.011830642819404602, -0.015382930636405945, -0.015503247268497944, -0.4651735723018646, -0.023791193962097168, -1.2546226978302002], "finish_reason": "stop"}], "metrics": {"energy": 300.5376657905581, "energy_per_token": 1.1878959122156447, "time": 11.741155, "time_per_token": 0.04640772727272727}}
{"outputs": [{"text": "# Validate input: 'features' and 'seed' must be provided as arguments\n    if features is None:\n        features = [f\"Feature {i}\" for i in range(1, len(array.T) + 1)]\n    elif len(features) != len(array.T):\n        raise ValueError(\"Features must match the number of columns in array.\")\n    elif seed is None:\n        seed = 0\n\n    # Check if array is 2D and not empty\n    if array.ndim != 2 or array.size == 0:\n        raise ValueError(\"Input must be a 2D array and non-empty.\")\n\n    # Create a figure and axes object\n    fig, ax = plt.subplots(figsize=(12, 7))\n\n    # Create a heatmap using Seaborn\n    sns.heatmap(array, annot=True, fmt='', cmap='Blues', ax=ax)\n\n    # Set the title and labels of the heatmap\n    ax.set_title('Heat Map')\n    ax.", "tokens": ["#", " Valid", "ate", " input", ":", " '", "features", "'", " and", " '", "seed", "'", " must", " be", " provided", " as", " arguments", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "f", "\"", "Feature", " {", "i", "}\"", " for", " i", " in", " range", "(", "1", ",", " len", "(", "array", ".", "T", ")", " +", " ", "1", ")]", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " len", "(", "array", ".", "T", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Features", " must", " match", " the", " number", " of", " columns", " in", " array", ".", "\"", ")", "\n", "    ", "elif", " seed", " is", " None", ":", "\n", "        ", "seed", " =", " ", "0", "\n", "\n", "    ", "#", " Check", " if", " array", " is", " ", "2", "D", " and", " not", " empty", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", " or", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " must", " be", " a", " ", "2", "D", " array", " and", " non", "-", "empty", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " figure", " and", " axes", " object", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "2", ",", " ", "7", "))", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", " using", " Se", "ab", "orn", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "array", ",", " annot", "=", "True", ",", " fmt", "=", "''", ",", " c", "map", "='", "Bl", "ues", "'", ",", " ax", "=", "ax", ")", "\n", "\n", "    ", "#", " Set", " the", " title", " and", " labels", " of", " the", " heat", "map", "\n", "    ", "ax", ".", "set", "_", "title", "('", "He", "at", " Map", "')", "\n", "    ", "ax", "."], "logprobs": [-1.6297416687011719, -2.974940299987793, -0.1933847814798355, -0.8689069747924805, -2.9558265209198, -3.848392963409424, -1.5900672674179077, -0.0026886051055043936, -2.3153202533721924, -0.16528171300888062, -1.995479702949524, -0.0029439465142786503, -1.8888367414474487, -0.15639953315258026, -2.268327236175537, -1.3887685537338257, -2.2844042778015137, -1.4695613384246826, -0.007720157038420439, -0.20350755751132965, -0.244238018989563, -0.059586260467767715, -0.09362934529781342, -0.8175281882286072, -0.03687753528356552, -0.002390980953350663, -0.5688435435295105, -0.012326370924711227, -0.521427571773529, -0.7548837065696716, -0.39759179949760437, -2.210683822631836, -0.20487776398658752, -0.1970265805721283, -0.8558801412582397, -0.0033075883984565735, -0.0006127863889560103, -0.001746677909977734, -0.007306994404643774, -0.00033408781746402383, -0.1819901466369629, -0.00026890001026913524, -1.675479769706726, -6.580135959666222e-05, -0.016006192192435265, -0.93978351354599, -0.29505985975265503, -0.4558098614215851, -0.0003363520372658968, -0.002422019839286804, -0.0002759314374998212, -0.0022205475252121687, -0.044042740017175674, -0.17959684133529663, -1.5178171396255493, -0.13340522348880768, -7.962863310240209e-05, -0.02450067363679409, -0.0003673355677165091, -0.011720605194568634, 0.0, -1.5497195136049413e-06, -0.12229674309492111, -8.368142152903602e-05, -0.001158162602223456, -0.008553772233426571, -0.0005256939912214875, -0.01153478492051363, -0.002851707860827446, -0.0013677061069756746, -0.059596482664346695, -0.006642404943704605, -2.038458114839159e-05, -0.013128272257745266, -0.49512913823127747, -2.7797696590423584, -0.8388784527778625, -0.5238760113716125, -0.0789480209350586, -0.01138464268296957, -0.0008268513483926654, -0.016428325325250626, -0.04725625365972519, -1.672432780265808, -0.4844839870929718, -0.01861237920820713, -0.0018487757770344615, -0.004067007452249527, -0.33928152918815613, -1.4283361434936523, -0.5848967432975769, -0.01478112768381834, -0.058220382779836655, -0.02084362879395485, -0.005669228732585907, -0.0013899675104767084, -1.2015397548675537, -0.006507278420031071, -0.8516300320625305, -0.1764005571603775, -0.009615889750421047, -0.44046443700790405, -0.002144895726814866, -0.17533592879772186, -2.867371082305908, -0.8973459005355835, -1.2997620105743408, -0.034669145941734314, -1.4494036436080933, -0.0033283811062574387, -0.531981348991394, -0.9406782388687134, -0.558173656463623, -0.0034956559538841248, -0.13592025637626648, -0.0004970983718521893, -0.03251299634575844, -1.0108762979507446, -0.0008744944934733212, -0.03251068666577339, -4.649054244509898e-05, -0.0671168714761734, 0.0, -1.0728830375228426e-06, -0.0004407388041727245, -0.00010334911348763853, -0.020139142870903015, -0.5142080187797546, -0.0007850425899960101, -0.04895949363708496, -0.021067997440695763, -0.0001961992384167388, -7.86750388215296e-05, -0.005652041174471378, -0.003063867799937725, -0.0005026984144933522, -0.012176229618489742, -0.0019032713025808334, -3.2186455882765586e-06, -0.014109030365943909, -0.032089173793792725, -1.594596266746521, -1.7236738204956055, -0.01160124596208334, -0.05661621689796448, -0.15658405423164368, -9.691245941212401e-05, -0.07688260078430176, -0.9697421193122864, -1.211988925933838, -1.819801926612854, -0.02213008888065815, -0.006405181251466274, -0.030070895329117775, -0.0022712168283760548, -0.0002138386043952778, -0.0012546057114377618, -0.0316060371696949, -0.0007466865936294198, -0.22411221265792847, -2.1012442111968994, -0.5217574834823608, -3.29892897605896, -0.676023006439209, -0.7771450281143188, -0.33613070845603943, -0.6141208410263062, -0.0003830652858596295, -0.12211761623620987, -0.020572146400809288, -0.07200904935598373, -0.005865385755896568, -0.00024637524620629847, -8.34461570775602e-06, -0.00033063191222026944, -5.018585216021165e-05, -0.8655537366867065, -0.136627197265625, -0.0002512616047170013, -0.010093952529132366, -0.8437628149986267, -1.2502551078796387, -0.0021961636375635862, -0.01812596246600151, -2.6647768020629883, -0.07091060280799866, -0.002654007636010647, -0.1046677753329277, -0.0003564914222806692, -0.032814133912324905, -1.4263496398925781, -0.39868098497390747, -0.6347197890281677, -0.022123092785477638, -1.1253712177276611, -0.9753638505935669, -0.003660646267235279, -1.8715683836489916e-05, -0.5433991551399231, -0.00044276448898017406, -0.1804840862751007, -0.00011920218821614981, -0.005521167069673538, -0.02471189573407173, -3.504691630951129e-05, -0.00012957210128661245, -0.3851568400859833, -0.009049354121088982, -1.0103025436401367, -0.0012784174177795649, -0.12523381412029266, -0.0012062662281095982, -0.39625492691993713, -0.39912593364715576, -1.433503270149231, -2.992108420585282e-05, -0.7761010527610779, -0.2071675956249237, -0.11326482892036438, -1.1145460605621338, -0.0017100248951464891, -0.019241467118263245, -0.0008642514003440738, -0.7341675758361816, -0.0002109781780745834, -7.426462980220094e-05, -1.1386758089065552, -0.012767243199050426, -0.10574876517057419, -0.0002960720448754728, -0.04891522228717804, -1.0853780508041382, -0.8400042057037354, -1.582321047782898, -0.4978782832622528, -0.7526688575744629, -2.245237350463867, -0.02664896287024021, -0.3010319769382477, -0.0012285312404856086, -0.08209913223981857, -0.0005777596961706877, -0.041275497525930405, -0.00011824862303910777, -0.002119439421221614, -0.019360851496458054, -0.022792741656303406, -1.606620192527771, -0.2971402108669281, -0.00016675988445058465, -2.8884265422821045, -0.6290046572685242, -0.0015607806853950024, -0.0058125280775129795, -0.03215809166431427, -0.00015686711412854493], "finish_reason": "length"}], "metrics": {"energy": 287.5441455392838, "energy_per_token": 1.1232193185128274, "time": 11.556686, "time_per_token": 0.0451433046875}}
{"outputs": [{"text": "if seed is not None:\n        np.random.seed(seed)\n    if features is None:\n        features = ['{}'.format(col) for col in range(1, len(array) + 1)]\n    elif len(features) != len(array):\n        raise ValueError('Number of features does not match the number of columns in '\n                         'array: {}'.format(len(features)))\n    if len(array) == 0 or array.ndim != 2:\n        raise ValueError('Array must be 2D: {}'.format(array))\n    labels = features\n    array = np.reshape(array, (len(array), -1))\n    ax = sns.heatmap(data=array, xticklabels=labels, yticklabels=labels, annot=True)\n    return ax", "tokens": ["if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " ['", "{}", "'", ".", "format", "(", "col", ")", " for", " col", " in", " range", "(", "1", ",", " len", "(", "array", ")", " +", " ", "1", ")]", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " len", "(", "array", "):", "\n", "        ", "raise", " Value", "Error", "('", "Number", " of", " features", " does", " not", " match", " the", " number", " of", " columns", " in", " '", "\n", "                ", "         ", "'", "array", ":", " {", "}'", ".", "format", "(", "len", "(", "features", ")))", "\n", "    ", "if", " len", "(", "array", ")", " ==", " ", "0", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "Array", " must", " be", " ", "2", "D", ":", " {", "}'", ".", "format", "(", "array", "))", "\n", "    ", "labels", " =", " features", "\n", "    ", "array", " =", " np", ".", "resh", "ape", "(", "array", ",", " (", "len", "(", "array", ")", ",", " -", "1", "))", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " ", "xt", "ick", "labels", "=", "labels", ",", " y", "tick", "labels", "=", "labels", ",", " annot", "=", "True", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-0.8079642653465271, -2.5703792572021484, -0.399784654378891, -0.051558636128902435, -0.00014137222024146467, -0.006847013719379902, -0.01813790388405323, -0.0029103087726980448, -0.11603140085935593, -0.00014935807848814875, -0.0002719986077863723, -3.9219088648678735e-05, -0.0028897454030811787, -0.0007873057620599866, -0.004058102611452341, -0.014407417736947536, -0.006005812902003527, -0.6365225911140442, -0.5724534392356873, -1.2844549417495728, -0.05450601503252983, -0.262180358171463, -0.022492416203022003, -0.019384002313017845, -0.0014592485968023539, -0.1874055415391922, -0.007669171784073114, -1.7480701208114624, -2.121330976486206, -0.1023876965045929, -0.0011600677389651537, -0.000841025379486382, -0.009461562149226665, -2.363041400909424, -0.8566429615020752, -0.011809554882347584, -0.0027015639934688807, -0.0031827054917812347, -0.05345562845468521, -0.00041607304592616856, -0.47952529788017273, -0.0008428120636381209, -1.4477851390838623, -0.00010239553375868127, -0.009174570441246033, -1.754022479057312, -0.0007002285565249622, -0.0020887479186058044, -0.0005561950383707881, -0.007013583090156317, -0.01326556596904993, -0.062403604388237, -1.5618647336959839, -0.058608654886484146, -0.000129691296024248, -0.03392789885401726, -0.00035041390219703317, -0.01857832819223404, -1.1920928244535389e-07, -3.576272320060525e-06, -0.17631122469902039, -0.0002109781780745834, -0.003604345954954624, -0.0898892879486084, -0.00217760750092566, -0.0011550667695701122, -0.05673336237668991, -0.012329667806625366, -3.349725011503324e-05, -1.107823371887207, -1.7590605020523071, -0.002169043058529496, -0.34525030851364136, -0.7106754779815674, -0.0006976078147999942, -0.005869296845048666, -0.652320384979248, -0.036987364292144775, -0.007215157151222229, -0.030122140422463417, -0.2150123566389084, -2.9910857677459717, -0.06605321168899536, -0.004604807589203119, -0.01596008613705635, -0.09974393993616104, -2.0275356769561768, -2.460559844970703, -1.168567419052124, -0.11105676740407944, -0.0015931545058265328, -0.0008899780223146081, -0.003369727171957493, -0.38925814628601074, -0.00011407678539399058, -0.2653455138206482, -0.1317605972290039, -0.0007077334448695183, -0.4264506995677948, -1.6041003465652466, -0.787713348865509, -0.0004693360242526978, -0.04050891101360321, -0.47508713603019714, -0.2512631416320801, -0.0015447123441845179, -0.005607707425951958, -0.3046116828918457, -1.4824600219726562, -0.0005603650351986289, -0.09165855497121811, -0.0002889215829782188, -0.05124678462743759, 0.0, -5.960462772236497e-07, -0.0006079017766751349, -0.001956217223778367, -0.014837037771940231, -0.005037591326981783, -0.00047100416850298643, -0.010144224390387535, -0.002077327808365226, -1.8358061424805783e-05, -0.09930288046598434, -0.9907329678535461, -0.35384371876716614, -0.4630565643310547, -1.0095436573028564, -0.0006372089846991003, -0.8213934898376465, -1.3490698337554932, -0.16937215626239777, -0.0051271384581923485, -0.0013946102699264884, -0.0012680593645200133, -0.002261701738461852, -0.2448960244655609, -0.5285546183586121, -0.0005093707586638629, -0.5578256845474243, -4.540149211883545, -0.059312403202056885, -0.9016536474227905, -0.15726900100708008, -0.07144960016012192, -3.395191192626953, -0.16144756972789764, -1.4169840812683105, -0.00023147765023168176, -3.2684173583984375, -0.00014959646796341985, -0.001998809864744544, -0.05458593741059303, -0.016662245616316795, -0.6511135101318359, -0.960401713848114, -0.00010680581908673048, -0.19203905761241913, -0.12046043574810028, -0.04158155620098114, -0.36595433950424194, -0.000296310376143083, -0.027477042749524117, -0.11787140369415283, -0.03607663884758949, -1.022805094718933, -0.020117061212658882, -0.07329995930194855, -1.7881377516459906e-06, -4.017272294731811e-05, -0.01341730821877718, -0.0001668790791882202, -0.00031001531169749796, -2.2804272174835205, -0.004750987980514765, -0.004475339315831661, -0.01738804578781128, -1.3312938213348389, -0.0006817638641223311, -0.03561808541417122, -2.396077979938127e-05, -0.0018486568005755544, -0.03799757361412048, -0.06070360541343689, -0.1622527539730072, -0.0007297713309526443, -1.9550132492440753e-05, -0.004603739827871323, -0.05123341828584671, -0.35394957661628723, -1.6540195941925049, -0.0027970261871814728, -0.27841904759407043, -1.049714207649231, -0.02683698572218418, -0.01680620387196541, -0.25224968791007996, -0.003005275735631585, -0.5520382523536682, -0.010807787999510765, -0.9013268947601318], "finish_reason": "stop"}], "metrics": {"energy": 236.86490837478644, "energy_per_token": 1.178432379974062, "time": 9.021996, "time_per_token": 0.04488555223880597}}
{"outputs": [{"text": "if not isinstance(array, np.ndarray) or array.ndim != 2:\n        raise ValueError(\"Input 'array' must be a 2D numpy array.\")\n    if features is not None:\n        if len(features) != array.shape[1]:\n            raise ValueError(\"Length of 'features' must match number of columns in 'array'.\")\n        features.sort(key=lambda x: int(x))\n        ax = sns.heatmap(array, annot=False, cbar=False, roworder=\"ascending\", x_pos=features)\n    else:\n        features = list(np.arange(array.shape[1]))\n        features.sort()\n        ax = sns.heatmap(array, annot=False, cbar=False, roworder=\"ascending\", x_pos=features)\n    ax.tick_params(\n        axis=\"x\",\n        left=False,\n        right=False,\n        top=False,\n        bottom=False,\n        labelbottom=False,\n    )\n    ", "tokens": ["if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", ")", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Input", " '", "array", "'", " must", " be", " a", " ", "2", "D", " numpy", " array", ".", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "\"", "Length", " of", " '", "features", "'", " must", " match", " number", " of", " columns", " in", " '", "array", "'", ".", "\"", ")", "\n", "        ", "features", ".", "sort", "(", "key", "=", "lambda", " x", ":", " int", "(", "x", "))", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", " annot", "=", "False", ",", " c", "bar", "=", "False", ",", " row", "order", "=", "\"", "asc", "ending", "\"", ",", " x", "_", "pos", "=", "features", ")", "\n", "    ", "else", ":", "\n", "        ", "features", " =", " list", "(", "np", ".", "ar", "ange", "(", "array", ".", "shape", "[", "1", "]))", "\n", "        ", "features", ".", "sort", "()", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", " annot", "=", "False", ",", " c", "bar", "=", "False", ",", " row", "order", "=", "\"", "asc", "ending", "\"", ",", " x", "_", "pos", "=", "features", ")", "\n", "    ", "ax", ".", "tick", "_", "params", "(", "\n", "        ", "axis", "=", "\"", "x", "\"", ",", "\n", "        ", "left", "=", "False", ",", "\n", "        ", "right", "=", "False", ",", "\n", "        ", "top", "=", "False", ",", "\n", "        ", "bottom", "=", "False", ",", "\n", "        ", "label", "bottom", "=", "False", ",", "\n", "    ", ")", "\n", "    "], "logprobs": [-0.8079642653465271, -1.2848204374313354, -0.7170402407646179, -0.00023338454775512218, -0.05980300158262253, -0.000886285852175206, -0.010381506755948067, -1.6689160474925302e-05, -0.0003067976504098624, -3.433168603805825e-05, -0.8445466756820679, -0.014912792481482029, -0.3023713529109955, -0.0006799769471399486, -0.3742714822292328, -0.0003281293320469558, -0.2151574343442917, -1.1920928244535389e-07, -8.344646857949556e-07, -0.0021074246615171432, -0.0003045333724003285, -0.5711812973022461, -0.012450352311134338, -0.0016990762669593096, -0.02050662972033024, -0.010192959569394588, -3.135155202471651e-05, -0.25559133291244507, -0.20411786437034607, -2.432190179824829, -2.8852295875549316, -0.00420816196128726, -0.000916537712328136, -0.06905914843082428, -0.01781310886144638, -0.0735546201467514, -0.026338648051023483, -7.819823804311454e-05, -0.2146586775779724, -0.05983332172036171, -0.005976543761789799, -0.23369766771793365, -0.010106579400599003, -0.0002748588449321687, -0.003895434318110347, -0.4246053099632263, -0.3344321846961975, -0.6450022459030151, -0.24834534525871277, -0.4679388999938965, -2.7179348762729205e-05, -1.0682809352874756, -0.004389176145195961, -0.0008678245940245688, -0.09369751811027527, -0.18287824094295502, -4.339123915997334e-05, -0.011716245673596859, -0.00016497205069754273, -0.006410155910998583, 0.0, -1.0728830375228426e-06, -0.015456531196832657, -8.070142939686775e-05, -0.0009352362249046564, -0.004793936386704445, -0.0020975510124117136, -0.005967063829302788, -0.003200886305421591, -0.001208766596391797, -0.00874097365885973, -0.0012306743301451206, -6.079655122448457e-06, -0.02073831483721733, -0.4404647648334503, -1.8228557109832764, -0.02609269507229328, -0.23893043398857117, -0.002041757572442293, -0.0010605193674564362, -0.5427436232566833, -0.03948152810335159, -1.4903643131256104, -0.00105015910230577, -0.018138840794563293, -0.06304178386926651, -0.07667835801839828, -0.0011439929949119687, -0.009251699782907963, -0.03845825046300888, -0.003640929702669382, -0.0008760428754612803, -0.0016148157883435488, -0.366132915019989, -2.0499978065490723, -3.127595901489258, -0.43726927042007446, -2.468381643295288, -0.6635032296180725, -0.008453183807432652, -0.9440926313400269, -0.19765730202198029, -0.0032834685407578945, -0.8211754560470581, -0.0033814890775829554, -0.0361565500497818, -0.4556339383125305, -0.16933955252170563, -0.4598371684551239, -2.355038642883301, -0.04057656601071358, -0.09203819185495377, -2.3841830625315197e-06, -5.709961988031864e-05, -0.005833860952407122, -0.00011288482346571982, -0.0006447143969126046, -0.1938013732433319, -0.07349491864442825, -1.2218166589736938, -0.0028493304271250963, -1.109476089477539, -0.016888609156012535, -0.8234544992446899, -0.9832388758659363, -0.057882584631443024, -0.07368020713329315, -0.063198022544384, -3.112949848175049, -2.872704267501831, -1.0866351127624512, -0.9957975149154663, -0.13177679479122162, -0.007568021304905415, -0.000987995183095336, -0.13793905079364777, -3.599167823791504, -1.1133348941802979, -2.0513863563537598, -0.27383697032928467, -0.20051392912864685, -0.7134810090065002, -0.03454339876770973, -0.1417277753353119, -0.01385828759521246, -7.974783511599526e-05, -0.0034514637663960457, -0.0016857474111020565, -2.707939624786377, -0.00845259241759777, -1.7966516017913818, -0.015093640424311161, -3.2577857971191406, -0.0006213641609065235, -0.15048335492610931, -2.4318398573086597e-05, -0.0013786583440378308, -2.1602001190185547, -0.0005029367166571319, -0.0016019619069993496, -0.0027894179802387953, -0.006212921347469091, -0.7129040956497192, -0.017049646005034447, -0.003784400876611471, -1.8879930973052979, -0.06508023291826248, -0.0027056061662733555, -2.478266477584839, -0.012587503530085087, -0.005227705929428339, -0.11221228539943695, -0.0016891986597329378, -0.0020772088319063187, -7.986990567587782e-06, -2.622600959512056e-06, -0.0002488780301064253, -6.079655122448457e-06, -0.00010418349120300263, -0.016176169738173485, -0.0023505459539592266, -0.018672402948141098, -0.00010573305189609528, -0.010973463766276836, -0.003465482033789158, -0.014220803044736385, -0.0005667987279593945, -0.001140778069384396, -0.006341217085719109, -0.04224207624793053, -0.08697796612977982, -0.0012353177880868316, -0.0033621233887970448, -0.011220922693610191, -0.004092295654118061, -8.4638240878121e-06, -3.45700973412022e-05, -0.5089757442474365, -0.09424389898777008, -0.014783007092773914, -0.008647376671433449, -0.016865283250808716, -0.01869884692132473, -0.09785144031047821, -0.0021020714193582535, -0.17542225122451782, -2.1367685794830322, -0.020510951057076454, -2.373263120651245, -0.039718709886074066, -0.0007769426447339356, -0.023259656503796577, -2.835078239440918, -0.026138104498386383, -0.30566826462745667, -0.27918344736099243, -0.007518921047449112, -0.4609132707118988, -4.2914423829643056e-05, -0.0019850090611726046, -0.8839368224143982, -0.0008716359734535217, -1.3997864723205566, -0.006452914793044329, -0.14730505645275116, -0.0032397424802184105, -0.04444282874464989, -0.012901173904538155, -0.9723221659660339, -0.000969535845797509, -0.04568472504615784, -0.008855593390762806, -0.00874097365885973, -0.010619794018566608, -0.9661939740180969, -0.00015639036428183317, -0.05272049084305763, -0.0015936305280774832, -0.0022551598958671093, -0.00240013818256557, -0.3582136332988739, -0.00024148885859176517, -0.06041007861495018, -0.03379790857434273, -0.006942436099052429, -0.037304844707250595, -0.09852335602045059, -2.0362391471862793, -0.00025567124248482287, -0.07345139235258102, -0.10391820967197418, -0.009072745218873024, -1.2694936990737915, -0.0016726563917472959, -0.020361801609396935, -0.030713627114892006], "finish_reason": "length"}], "metrics": {"energy": 293.992532333374, "energy_per_token": 1.1484083294272422, "time": 11.570096, "time_per_token": 0.0451956875}}
{"outputs": [{"text": "if np.ndim(array) != 2:\n        raise ValueError('array must be a 2D array')\n    if features is not None and len(features) != np.shape(array)[1]:\n        raise ValueError('features must be a list of strings with the same number of columns as array')\n\n    ax = sns.heatmap(data=array,\n                     annot=False,\n                     linewidths=1,\n                     cbar=True,\n                     cbar_kws={'label':'Frequency'},\n                     xticklabels=features if features else [f'Column {i+1}' for i in range(np.shape(array)[1])],\n                     yticklabels=features if features else [f'Column {i+1}' for i in range(np.shape(array)[1])]\n                     )\n    plt.show()\n    return ax", "tokens": ["if", " np", ".", "nd", "im", "(", "array", ")", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "array", " must", " be", " a", " ", "2", "D", " array", "')", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " np", ".", "shape", "(", "array", ")[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "('", "features", " must", " be", " a", " list", " of", " strings", " with", " the", " same", " number", " of", " columns", " as", " array", "')", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", "\n", "                ", "     ", "annot", "=", "False", ",", "\n", "                ", "     ", "linewidth", "s", "=", "1", ",", "\n", "                ", "     ", "c", "bar", "=", "True", ",", "\n", "                ", "     ", "c", "bar", "_", "k", "ws", "={", "'", "label", "':", "'", "F", "requency", "'}", ",", "\n", "                ", "     ", "xt", "ick", "labels", "=", "features", " if", " features", " else", " [", "f", "'", "Column", " {", "i", "+", "1", "}'", " for", " i", " in", " range", "(", "np", ".", "shape", "(", "array", ")[", "1", "]", ")]", ",", "\n", "                ", "     ", "yt", "ick", "labels", "=", "features", " if", " features", " else", " [", "f", "'", "Column", " {", "i", "+", "1", "}'", " for", " i", " in", " range", "(", "np", ".", "shape", "(", "array", ")[", "1", "]", ")]", "\n", "                ", "     ", ")", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax"], "logprobs": [-0.8079642653465271, -3.6601715087890625, -0.0002936885575763881, -0.5463745594024658, -5.173549288883805e-05, -0.0002809368306770921, -0.0011960265692323446, -0.0033150739036500454, -0.31742584705352783, -9.536738616588991e-07, -1.2278481335670222e-05, -0.002167615806683898, -0.00017391123401466757, -0.1476985067129135, -0.04436425864696503, -0.0034985069651156664, -0.026418063789606094, -0.007436569780111313, -5.4596363042946905e-05, -1.316558837890625, -1.1694403886795044, -0.05404172092676163, -0.04469969868659973, -0.9886214137077332, -0.028647739440202713, -0.00023982033599168062, -0.37518149614334106, -1.3445444107055664, -0.46911707520484924, -0.0027353274635970592, -0.20632398128509521, -0.22425682842731476, -0.4070453643798828, -0.2641291618347168, -0.7095423340797424, -5.686121585313231e-05, -0.4949592649936676, -0.09846372902393341, -8.642300235806033e-05, -0.02107231691479683, -0.00027223696815781295, -0.010791396722197533, 0.0, -1.2636104656849056e-05, -0.9353821277618408, -0.0006526962388306856, -0.15177972614765167, -0.0006095697171986103, -0.0058169132098555565, -0.023638106882572174, -0.010158266872167587, -0.005677408073097467, -0.003999925218522549, -0.0014857931528240442, -0.008722774684429169, -0.003360935254022479, -1.0609570381348021e-05, -0.15722274780273438, -0.844203531742096, -0.361042857170105, -1.326006531715393, -0.6116467714309692, -0.02248542383313179, -0.2779066562652588, -2.1591954231262207, -0.9737126231193542, -0.6975029110908508, -0.07943899929523468, -0.5852127075195312, -0.018272053450345993, -0.15501675009727478, -0.19659459590911865, -0.9351601004600525, -0.06506280601024628, -0.0004923323867842555, -0.8641018867492676, -0.0003510097449179739, -3.6626172065734863, -0.032427828758955, -0.3721481263637543, -2.50339189733495e-06, -7.092700980138034e-05, -0.0105985626578331, -0.00010501786891836673, -0.0008257793379016221, -2.1599318981170654, -0.010213727131485939, -0.021190550178289413, -0.03389563411474228, -1.659857988357544, -0.023544147610664368, -0.17205461859703064, -0.6923772096633911, -0.009334729053080082, -0.5775147676467896, -0.02165214717388153, -0.09033984690904617, -0.00024768622824922204, -0.0017089537577703595, -2.2214064598083496, -0.3039000928401947, -0.09672118723392487, -2.409517288208008, -0.2778390049934387, -0.02582716755568981, -0.0002762889489531517, -0.0008442413527518511, -1.7143999338150024, -0.005046012811362743, -0.4603811800479889, -2.769766092300415, -0.06816659867763519, -0.011344215832650661, -0.00037377048283815384, -0.0009494088008068502, -0.6078053116798401, -0.00307456380687654, -0.00012027494085486978, -0.2603461742401123, -0.0028609796427190304, -0.4111953377723694, -0.034913115203380585, -1.234171986579895, -0.009217211045324802, -2.39805006980896, -3.412386894226074, -0.3219793140888214, -0.3769161105155945, -0.06817818433046341, -0.005578900687396526, -0.0012386515736579895, -0.005963390693068504, -1.6264197826385498, -0.007661482319235802, -0.0002646096108946949, -0.0331607349216938, -0.028161892667412758, -0.9376150369644165, -0.00884188711643219, -1.0583332777023315, -1.3670620918273926, -0.47494032979011536, -0.7436449527740479, -1.534669280052185, -0.11474627256393433, -0.22106428444385529, -0.6104457974433899, -0.0010378933511674404, -0.1161392480134964, -0.026355832815170288, -0.0007936188485473394, -0.010041081346571445, -0.008061490952968597, -0.0010885033989325166, -0.24935196340084076, -0.0008476955117657781, -0.009617188014090061, -0.00044312194222584367, -0.0018267625709995627, -0.0020041633397340775, -0.007916503585875034, -0.003862184938043356, -0.0006090931710787117, -0.28243115544319153, -0.01653667353093624, -0.0008641323074698448, -0.0029724722262471914, -0.3245164752006531, -0.0008799732895568013, -5.1973900554003194e-05, -0.04717756435275078, -0.04610168933868408, -0.005240394733846188, -0.00016985881666187197, -0.0004884004010818899, -0.006972860544919968, -0.00168658047914505, -0.002096956130117178, -0.5993254780769348, -0.00013052565918769687, -0.00432282779365778, -0.002753992099314928, -5.0424259825376794e-05, -0.0006673493189737201, -0.00077622797107324, -3.683499380713329e-05, -0.00011050090688513592, -0.00100740697234869, -0.0001227780303452164, -0.0010702840518206358, -0.0006204110686667264, -0.00021765247220173478, -0.00019965562387369573, -8.999896090244874e-05, -8.666139910928905e-05, -0.13840076327323914, -0.014389203861355782, -0.00018845213344320655, -2.8332269191741943, -0.030834078788757324, -0.11994300037622452, -0.025778258219361305, -0.018906032666563988, -0.3279128968715668, -2.483180284500122, -5.829164365422912e-05, -0.566893458366394, -0.06943389773368835, -0.022531230002641678, -0.060556963086128235, -0.025792082771658897, -0.011238603852689266], "finish_reason": "stop"}], "metrics": {"energy": 255.7371158370972, "energy_per_token": 1.206307150174987, "time": 9.456668, "time_per_token": 0.04460692452830189}}
{"outputs": [{"text": "if not isinstance(array, np.ndarray):\n        raise TypeError(\"'array' must be a numpy array\")\n    if array.size == 0:\n        raise ValueError(\"'array' must contain at least one row\")\n    if array.ndim != 2:\n        raise ValueError(\"'array' must be a 2D array\")\n    if features is not None:\n        if len(features) != array.shape[1]:\n            raise ValueError(f\"number of features must match number of columns in 'array'\")\n        columns = features\n    else:\n        columns = [f\"x{i + 1}\" for i in range(array.shape[1])]\n    sns.heatmap(array, annot=False, cbar=False, cmap='Blues', square=True)\n    ax = plt.gca()\n    ax.set_xticklabels(columns)\n    ax.set_yticklabels(columns)\n    return ax", "tokens": ["if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " numpy", " array", "\"", ")", "\n", "    ", "if", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " contain", " at", " least", " one", " row", "\"", ")", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " ", "2", "D", " array", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "f", "\"", "number", " of", " features", " must", " match", " number", " of", " columns", " in", " '", "array", "'", "\"", ")", "\n", "        ", "columns", " =", " features", "\n", "    ", "else", ":", "\n", "        ", "columns", " =", " [", "f", "\"", "x", "{", "i", " +", " ", "1", "}\"", " for", " i", " in", " range", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "array", ",", " annot", "=", "False", ",", " c", "bar", "=", "False", ",", " c", "map", "='", "Bl", "ues", "'", ",", " square", "=", "True", ")", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "columns", ")", "\n", "    ", "ax", ".", "set", "_", "yt", "ick", "labels", "(", "columns", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-0.8079642653465271, -1.2848204374313354, -0.7170402407646179, -0.00023338454775512218, -0.05980300158262253, -0.000886285852175206, -0.010381506755948067, -1.6689160474925302e-05, -0.0003067976504098624, -3.433168603805825e-05, -0.5622075796127319, -0.02150573395192623, -0.002029741881415248, -0.09038406610488892, -0.6630909442901611, -1.2278481335670222e-05, -0.12815211713314056, -0.37768566608428955, -1.527190923690796, -0.007028734777122736, -0.0012037658598273993, -0.06400064378976822, -0.0011447074357420206, -0.11236997693777084, -0.3715880811214447, -0.2027031034231186, -0.7607872486114502, -0.00031013446277938783, -0.002400851808488369, -0.19737032055854797, -0.4137224853038788, -0.7642203569412231, -0.0006323245470412076, -2.08739972114563, -0.09221040457487106, -0.002779789036139846, -0.00027783826226368546, -0.3265329599380493, -0.009674095548689365, -0.0003541081096045673, -0.013255919329822063, -0.007460116408765316, -8.583032467868179e-06, -0.029705749824643135, -0.007301195524632931, -0.12419454753398895, -0.000618624035269022, -0.001212219474837184, -0.2777119576931, -2.8405795097351074, -0.19364696741104126, -0.0025377231650054455, -0.2057528793811798, -1.4983086585998535, -0.22220727801322937, -0.00011634149996098131, -0.001746439840644598, -0.028557609766721725, -0.044796932488679886, -0.25014203786849976, -0.00011705666838679463, -0.018375519663095474, -0.0007447806419804692, -0.06131204217672348, 0.0, -1.1920928244535389e-07, -0.0007182164117693901, -0.00015233787416946143, -0.005523419938981533, -0.0015736351488158107, -0.0002215855201939121, -0.0024458037223666906, -0.015375887043774128, -5.8412379075889476e-06, -0.013095092959702015, -0.04392249882221222, -0.01158734131604433, -0.00034981805947609246, -0.0008629412623122334, -0.003114256775006652, -0.006264455150812864, -0.09821619838476181, -0.019375817850232124, -0.00014041867689229548, -0.2054487019777298, -1.1704882383346558, -0.0769832655787468, -0.0002153879904653877, -0.0011978124966844916, -0.35411447286605835, -0.09273283183574677, -0.18482136726379395, -0.19594234228134155, -0.31157371401786804, -2.729855441430118e-05, -0.7611536979675293, -0.0025115632452070713, -0.0006836699321866035, -0.05930779501795769, -0.164624884724617, -4.672895011026412e-05, -0.011806256137788296, -0.00018475732940714806, -0.006789708510041237, 0.0, -9.536738616588991e-07, -0.021259989589452744, -5.1020273531321436e-05, -0.0025379611179232597, -0.006519832648336887, -0.0029622504953294992, -0.005715812090784311, -0.0030013537034392357, -0.0008029097807593644, -0.006542690098285675, -0.003388855140656233, -2.3841830625315197e-06, -0.020130496472120285, -1.8318047523498535, -0.010415719822049141, -3.8792567253112793, -0.0023178397677838802, -0.38635310530662537, -0.9188700318336487, -0.22455370426177979, -0.6314415335655212, -0.0019096963806077838, -0.015052659437060356, -0.5482052564620972, -0.3917441964149475, -0.006502659525722265, -0.22729988396167755, -0.9501119256019592, -0.008372563868761063, -0.004651084542274475, -0.5464711785316467, -3.702584743499756, -0.14097866415977478, -0.25150030851364136, -0.015844281762838364, -0.017932312563061714, -0.008359559811651707, -2.9682672902708873e-05, -0.0027586284559220076, -0.0003426679759286344, -0.049625370651483536, -0.0007024919614195824, -0.30635175108909607, -0.5049828290939331, -0.10514198988676071, -3.0714645385742188, -0.06257662922143936, -0.1616048812866211, -1.585221767425537, -0.0009617946925573051, -0.00016592556494288146, -0.007826260291039944, -0.0021472747903317213, -0.0002811751910485327, -0.002686940599232912, -0.0027381805703043938, -0.00011443436960689723, -0.0076733119785785675, -3.421248038648628e-05, -0.0004592079494614154, -0.0017078827368095517, -0.001255200942978263, -0.0009065332706086338, -0.00043358939001336694, -0.004589974880218506, -0.286205530166626, -3.1782243251800537, -0.013714255765080452, -0.008235306479036808, -0.29349762201309204, -0.00010334911348763853, -0.000497336674015969, -0.2776118218898773, -0.03846433013677597, -1.0773237943649292, -0.0020793499425053596, -1.201852798461914, -0.01659189909696579, -0.8085548877716064, -1.1998461484909058, -0.040645815432071686, -0.04654647037386894, -0.053597889840602875, -1.1823333501815796, -0.22962237894535065, -0.6508334279060364, -0.864264726638794, -0.0010384886991232634, -0.15767014026641846, -0.0007919512572698295, -2.1754298210144043, -0.0021469180937856436, -0.0223240926861763, -1.7785120010375977, -0.02829841338098049, -0.017067458480596542, -0.39147141575813293, -0.031764835119247437, -0.09642418473958969, -0.00010239553375868127, -0.020541900768876076, -0.02104383520781994, -0.002119439421221614, -0.015611344017088413, -0.007749493233859539, -0.08592801541090012, -0.0018373527564108372, -0.375667542219162, -0.03623116761445999, -0.40941938757896423, -0.10284729301929474, -0.0005901502445340157, -0.015177595429122448, -0.003693545935675502, -0.21458615362644196, -0.006086505018174648, -0.001383658149279654, -0.062231335788965225, -0.0003992714046034962, -0.02348872274160385, -0.002113491529598832, -0.030833270400762558, -0.0008264940115623176, -1.3708974620385561e-05, -0.024700265377759933, -0.0068536438047885895, -0.02391725406050682, -0.004837119951844215, -0.013034733012318611, -0.9067265391349792, -0.009623563848435879, -0.7341386079788208, -0.016951432451605797, -1.0835853815078735], "finish_reason": "stop"}], "metrics": {"energy": 269.16247301101686, "energy_per_token": 1.1262028159456772, "time": 10.712913, "time_per_token": 0.04482390376569038}}
{"outputs": [{"text": "if array.size == 0:\n        raise ValueError(\"array must not be empty\")\n\n    if array.ndim != 2:\n        raise ValueError(\"array must be a 2D numpy array\")\n\n    if features:\n        if len(features) != array.shape[1]:\n            raise ValueError(\"features must be provided with the same number of columns\")\n        x = features\n    else:\n        x = [f\"column {i+1}\" for i in range(array.shape[1])]\n\n    ax = plt.subplots(figsize=(8, 8))[1]\n    sns.heatmap(array, cbar=False, ax=ax, xticklabels=x, yticklabels=x, cbar_kws={\"ax\": ax})\n\n    ax.tick_params(top=False, bottom=False, left=False, right=False,\n                   labelleft=False, labelbottom=False, labelsize=\"large\")\n\n    plt.xticks(fontsize=15)\n    plt.", "tokens": ["if", " array", ".", "size", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "array", " must", " not", " be", " empty", "\"", ")", "\n", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "array", " must", " be", " a", " ", "2", "D", " numpy", " array", "\"", ")", "\n", "\n", "    ", "if", " features", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "\"", "features", " must", " be", " provided", " with", " the", " same", " number", " of", " columns", "\"", ")", "\n", "        ", "x", " =", " features", "\n", "    ", "else", ":", "\n", "        ", "x", " =", " [", "f", "\"", "column", " {", "i", "+", "1", "}\"", " for", " i", " in", " range", "(", "array", ".", "shape", "[", "1", "]", ")]", "\n", "\n", "    ", "ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "8", ",", " ", "8", "))", "[", "1", "]", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "array", ",", " c", "bar", "=", "False", ",", " ax", "=", "ax", ",", " ", "xt", "ick", "labels", "=", "x", ",", " y", "tick", "labels", "=", "x", ",", " c", "bar", "_", "k", "ws", "=", "{\"", "ax", "\":", " ax", "})", "\n", "\n", "    ", "ax", ".", "tick", "_", "params", "(", "top", "=", "False", ",", " bottom", "=", "False", ",", " left", "=", "False", ",", " right", "=", "False", ",", "\n", "                ", "   ", "label", "left", "=", "False", ",", " label", "bottom", "=", "False", ",", " label", "size", "=", "\"", "large", "\"", ")", "\n", "\n", "    ", "plt", ".", "xt", "icks", "(", "fonts", "ize", "=", "1", "5", ")", "\n", "    ", "plt", "."], "logprobs": [-0.8079642653465271, -1.4244707822799683, -0.02581845410168171, -1.4459129571914673, -0.11557559669017792, -0.0016925308154895902, -0.0005099665140733123, -0.31982147693634033, -0.04245004057884216, -0.001843778183683753, -0.02778804861009121, -0.003890090622007847, -2.3364747903542593e-05, -0.22562649846076965, -0.10716941952705383, -2.0406060218811035, -0.2596133053302765, -0.10873637348413467, -0.0011526852613314986, -0.006355550140142441, -0.35694628953933716, -0.000196556793525815, -0.004279503133147955, -0.9920624494552612, -0.00010156115604331717, -0.1454116851091385, -0.384802907705307, -0.0001454247540095821, -0.01372460275888443, -0.0006356602534651756, -0.027341339737176895, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0006562701892107725, -0.0001227780303452164, -0.00809542927891016, -0.0018202179344370961, -0.00032574593205936253, -0.003269210224971175, -0.003051626728847623, -9.775113539944869e-06, -0.007568257860839367, -0.07026586681604385, -0.027565183117985725, -0.005904138553887606, -0.007264627143740654, -0.6149197220802307, -0.012362519279122353, -0.00012492353562265635, -0.31307077407836914, -0.5321115255355835, -0.011135456152260303, -0.028646811842918396, -0.00017832119192462415, -0.0005316513124853373, -0.011355767026543617, -0.00018737945356406271, -0.19990532100200653, -0.05711343139410019, -2.0537946224212646, -0.006944330409169197, -0.0015520919114351273, -0.17555838823318481, -0.06092223525047302, -3.671578815556131e-05, -0.015387038700282574, -0.00013600854435935616, -0.005589569918811321, 0.0, -8.344646857949556e-07, -0.0200883187353611, -0.0001161031104857102, -0.0025620989035815, -0.008383439853787422, -0.0032808545511215925, -0.0038935344200581312, -0.0030859727412462234, -0.0008482910343445837, -0.005270277615636587, -0.0012331746984273195, -6.079655122448457e-06, -0.007845539599657059, -0.39610418677330017, -0.7848123908042908, -0.38800039887428284, -2.501716375350952, -0.8975568413734436, -1.35679292678833, -0.41288673877716064, -0.2355167120695114, -0.02210257016122341, -0.008078164421021938, -0.05731450021266937, -3.1345694065093994, -0.02194257825613022, -0.0021075436379760504, -0.35488370060920715, -2.416318416595459, -1.8006117343902588, -0.50645911693573, -0.011614561080932617, -0.0578581728041172, -0.005378182046115398, -4.815939246327616e-05, -0.0015149556566029787, -0.000720956246368587, -0.0725739523768425, -0.0024827865418046713, -0.5788886547088623, -0.5742635130882263, -0.060887690633535385, -2.8228116035461426, -0.4270639717578888, -0.1771780252456665, -1.0096269845962524, -0.00044979469384998083, -0.010042616166174412, -0.0026723172049969435, -0.0009051040397025645, -0.00466200103983283, -0.001890778075903654, -0.0001045410826918669, -0.007324981968849897, -5.173549288883805e-05, -0.0004060635983478278, -0.0010186012368649244, -0.0027214179281145334, -0.0011543523287400603, -0.00013219437096267939, -0.007012398913502693, -0.07697642594575882, -0.0010208638850599527, -1.8097978830337524, -0.014578841626644135, -1.8575398921966553, -6.5205356804654e-05, -0.36894941329956055, -0.21920007467269897, -0.7091504335403442, -0.6594040989875793, -0.00019691436318680644, -0.0477941669523716, -1.770202875137329, -0.008367953822016716, -0.09257049113512039, -0.7655131220817566, -0.04181218147277832, -0.01694146916270256, -0.00125698687043041, -0.00014518637908622622, -0.025135833770036697, -0.2839982807636261, -0.6278433203697205, -0.0004917366313748062, -0.002120985882356763, -0.043095484375953674, -9.870042413240299e-05, -0.0005254556890577078, -0.3915756940841675, -0.021896161139011383, -2.0497822761535645, -1.3436858654022217, -0.2496672123670578, -0.0937233492732048, -0.016209833323955536, -1.9163235425949097, -0.0027228444814682007, -0.0003194298769813031, -0.17714287340641022, -1.4718878269195557, -0.0006876011611893773, -0.010023850947618484, -8.356221951544285e-05, -0.0019518149783834815, -0.024848654866218567, -0.03516761213541031, -0.014892826788127422, -0.00033158526639454067, -1.6331539882230572e-05, -0.002193308901041746, -0.0049817245453596115, -1.0398110151290894, -1.0635424852371216, -0.8961406946182251, -0.0027019204571843147, -0.14143939316272736, -0.001026341924443841, -0.5331940054893494, -0.25803491473197937, -4.162088394165039, -0.004047892522066832, -0.11522561311721802, -0.5213252305984497, -0.03181865066289902, -1.1427791118621826, -0.005051587242633104, -2.302321672439575, -0.009387046098709106, -1.5769554376602173, -0.011142175644636154, -0.0004211969207972288, -0.017851166427135468, -2.6797542572021484, -0.002597650745883584, -0.18360009789466858, -0.003796870354562998, -0.18339301645755768, -0.0011117237154394388, -0.03838024288415909, -0.007258236408233643, -0.1231055036187172, -0.0004260824352968484, -0.04503525048494339, -0.0010390841634944081, -0.05395261198282242, -4.6132929128361866e-05, -0.013352379202842712, -0.1983049064874649, -1.1171839237213135, -0.009920814074575901, -0.11648678779602051, -0.02427881769835949, -2.0371360778808594, -7.56950321374461e-05, -0.01795526221394539, -0.0005043664714321494, -0.008833142928779125, -0.030931515619158745, -8.368142152903602e-05, -0.005912907887250185, -1.373044490814209, -0.9598093032836914, -2.669407367706299, -0.023982780054211617, -1.4752392768859863, -1.925369381904602, -0.00021610308613162488, -0.14179211854934692, -0.008943263441324234, -1.0053662061691284, -0.00260644918307662, -2.726686716079712, -2.6225699912174605e-05, -3.2529807090759277, -0.003750910283997655, -0.009169372729957104, -1.888514518737793, -0.00022635281493421644, -0.08177271485328674, -0.887610673904419, -1.9521965980529785, -0.26558592915534973, -0.008580010384321213, -0.005796053912490606, -0.004224068485200405, -0.00023982033599168062], "finish_reason": "length"}], "metrics": {"energy": 317.0660572824476, "energy_per_token": 1.238539286259561, "time": 11.573727, "time_per_token": 0.04520987109375}}
{"outputs": [{"text": "# Validate array and features\n    if array.shape[0] == 0:\n        raise ValueError(\"array must not be empty\")\n    if array.ndim != 2:\n        raise ValueError(\"array must be a 2D array\")\n    if features is not None:\n        if len(features) != array.shape[1]:\n            raise ValueError(\"features must match the number of columns in array\")\n    else:\n        features = [f\"col{i}\" for i in range(1, array.shape[1] + 1)]\n\n    # Shuffle columns\n    rng = np.random.default_rng(seed)\n    shuffled_idx = rng.shuffle(np.arange(array.shape[1]))\n    array[:, shuffled_idx] = array\n\n    # Plot heatmap\n    fig, ax = plt.subplots(figsize=(9, 9))\n    sns.heatmap(array, ax=ax, cbar_kws={'label': 'col_num'}, cmap='R", "tokens": ["#", " Valid", "ate", " array", " and", " features", "\n", "    ", "if", " array", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "array", " must", " not", " be", " empty", "\"", ")", "\n", "    ", "if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "array", " must", " be", " a", " ", "2", "D", " array", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "if", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "\"", "features", " must", " match", " the", " number", " of", " columns", " in", " array", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "features", " =", " [", "f", "\"", "col", "{", "i", "}\"", " for", " i", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")]", "\n", "\n", "    ", "#", " Sh", "uffle", " columns", "\n", "    ", "r", "ng", " =", " np", ".", "random", ".", "default", "_", "r", "ng", "(", "seed", ")", "\n", "    ", "sh", "uff", "led", "_", "idx", " =", " r", "ng", ".", "sh", "uffle", "(", "np", ".", "ar", "ange", "(", "array", ".", "shape", "[", "1", "]))", "\n", "    ", "array", "[:", ",", " shuff", "led", "_", "idx", "]", " =", " array", "\n", "\n", "    ", "#", " Plot", " heat", "map", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "9", ",", " ", "9", "))", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "array", ",", " ax", "=", "ax", ",", " c", "bar", "_", "k", "ws", "={", "'", "label", "':", " '", "col", "_", "num", "'}", ",", " c", "map", "='", "R"], "logprobs": [-1.6297416687011719, -2.974940299987793, -0.1933847814798355, -2.6080617904663086, -1.8048596382141113, -0.6514262557029724, -0.41255638003349304, -0.0029245722107589245, -0.27552181482315063, -0.9845450520515442, -0.013579140417277813, -2.5382206439971924, -0.10342901200056076, -0.06579864025115967, -0.0014865073608234525, -0.4033679962158203, -0.016359252855181694, -0.0073736184276640415, -1.0331315994262695, -0.0234917514026165, -0.000699156429618597, -0.013097682036459446, -0.0013669917825609446, -8.583032467868179e-06, -0.25325247645378113, -0.06587431579828262, -1.8097753524780273, -0.2966725528240204, -0.08664767444133759, -0.0009845414897426963, -0.0035955561324954033, -0.2943120300769806, -0.0001212284987559542, -0.004144294653087854, -0.13637354969978333, -0.22582244873046875, -0.6063721179962158, -0.00022790218645241112, -0.027682535350322723, -0.0001525762490928173, -0.04123157262802124, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.0004198861715849489, -0.00016497205069754273, -0.013487877324223518, -0.0014603198505938053, -0.0001967951684491709, -0.0026385514065623283, -0.003152046585455537, -7.510157047363464e-06, -0.005244663450866938, -0.06613187491893768, -0.013032379560172558, -0.005285337567329407, -0.007382019888609648, -0.7554978728294373, -0.0070328782312572, -0.00012230125139467418, -0.26802098751068115, -0.936470627784729, -0.0344148688018322, -0.00012706902634818107, -0.0006834316882304847, -0.32777756452560425, -0.09722179174423218, -0.05983354523777962, -0.1765575408935547, -0.08049006760120392, -2.169585604860913e-05, -0.9392915964126587, -0.002133833011612296, -0.0004215544031467289, -0.04287189245223999, -0.05366342142224312, -2.1576648578047752e-05, -0.009686374105513096, -9.321732068201527e-05, -0.0026383136864751577, 0.0, -5.960462772236497e-07, -0.013068384490907192, -4.124556289752945e-05, -0.0003861635341309011, -0.0050504012033343315, -0.0014821031363680959, -0.002479338087141514, -0.0017473918851464987, -0.0005555993411689997, -0.007571570575237274, -0.0007247682078741491, -3.6954811548639555e-06, -0.004610384814441204, -0.4523754119873047, -0.5546243786811829, -0.26803815364837646, -0.24819961190223694, -0.1272231638431549, -0.0038288156501948833, -0.0006504327175207436, -0.008697603829205036, -0.040532033890485764, -0.330349326133728, -0.017054568976163864, -0.00040880427695810795, -0.0014728185487911105, -0.8071868419647217, -0.14623266458511353, -2.52720492426306e-05, -0.01921457052230835, -0.0009869233472272754, -0.0772458165884018, -0.001637547742575407, -0.32222169637680054, -0.5331226587295532, -0.057314272969961166, -1.7216707468032837, -0.3893823027610779, -0.11664316803216934, -0.5564463138580322, -0.0016276695532724261, -0.0002734287118073553, -0.0014697236474603415, -0.0022600365336984396, -0.00010048838157672435, -0.25853046774864197, -9.822363062994555e-05, -0.012516752816736698, -1.6689160474925302e-05, -0.0002460177056491375, -0.00020203932945150882, -0.0017134760273620486, -0.21708907186985016, -0.004014291800558567, -0.0018152202246710658, -6.890059739816934e-05, -0.0009969270322471857, -0.01476162951439619, -0.11115235090255737, -0.0006036128615960479, -0.17978797852993011, -0.7548288106918335, -0.007508391048759222, -1.436569333076477, -0.771381676197052, -0.0005539313424378633, -2.0923867225646973, -0.03296593576669693, -0.005291859619319439, -0.037429098039865494, -8.940656698541716e-06, -0.00044919890933670104, -0.002409889828413725, -0.1968402862548828, -1.0728830375228426e-06, -1.9550132492440753e-05, -2.634490556374658e-05, -0.006793971173465252, -0.006631865166127682, -0.2341221272945404, -0.030459729954600334, -0.004634591285139322, -1.7688724994659424, -0.021945727989077568, -0.008496091701090336, -0.13316358625888824, -3.3127214908599854, -0.11278954893350601, -0.03331006318330765, -1.1444026313256472e-05, -6.437280717364047e-06, -2.886198043823242, -0.013981609605252743, -0.0010040724882856011, -0.35573306679725647, -3.4450891689630225e-05, -0.00942826084792614, -6.9141146923357155e-06, -0.00015710550360381603, -0.08315081149339676, -4.1126360883936286e-05, -0.00019751029321923852, -0.0010461101774126291, -0.003333489876240492, -0.13857628405094147, -0.033822689205408096, -0.031352825462818146, -0.3733510375022888, -1.7186278104782104, -0.06715789437294006, -0.0042646657675504684, -9.178694017464295e-05, -1.3947389561508317e-05, -7.819823804311454e-05, -0.0016786068445071578, -0.032145507633686066, -0.033981941640377045, -1.195317029953003, -0.07347176969051361, -0.00020037073409184813, -0.06530449539422989, -1.6189961433410645, -0.24175438284873962, -0.001601009746082127, -0.08786295354366302, -0.000505677133332938, -1.3598196506500244, -0.049756042659282684, -0.030283721163868904, -0.008355659432709217, -0.0034926861990243196, -9.464769391342998e-05, -0.00029404606902971864, -6.0794889577664435e-05, -0.760169267654419, -0.11878516525030136, -0.0002586507180240005, -0.01918591931462288, -3.2432799339294434, -0.04158967360854149, -0.02654089219868183, -1.3406697511672974, -0.12875063717365265, -0.004062376916408539, -0.0450567901134491, -0.3000629246234894, -0.00013839241000823677, -0.001524715917184949, -0.05530831217765808, -0.00024279984063468874, -0.0003094194398727268, -0.28267863392829895, -0.015866106376051903, -1.0833995342254639, -0.0008654424455016851, -5.090107151772827e-05, -0.028428541496396065, -1.2019914388656616, -1.4721397161483765, -1.4461613893508911, -0.15498194098472595, -0.0007008241955190897, -0.9103466272354126, -0.026966840028762817, -1.0276306867599487, -0.004431784152984619, -0.325877845287323, -4.030628204345703, -1.7695502042770386, -2.652660846710205, -0.4269985556602478, -0.0006848612101748586, -1.3193318843841553, -0.8079167008399963, -0.2135103940963745, -1.4673924446105957], "finish_reason": "length"}], "metrics": {"energy": 314.3594067401887, "energy_per_token": 1.2279664325788622, "time": 11.559851, "time_per_token": 0.04515566796875}}
{"outputs": [{"text": "np.random.seed(seed)\n\n    # Check that the array has at least one row\n    if array.ndim < 2:\n        raise ValueError(\"Array must be 2D or higher\")\n\n    # Check that features matches the number of columns in the array\n    if features and len(features) != array.shape[1]:\n        raise ValueError(\"Number of features must match number of columns in array\")\n\n    # Shuffle the array\n    np.random.shuffle(array, axis=1)\n\n    # Create a matplotlib figure and axes\n    fig, ax = plt.subplots(figsize=(15, 8))\n\n    # If features is provided, use them as labels for the x-axis\n    if features:\n        ax.set_xticklabels(features)\n\n    # Plot the heatmap\n    sns.heatmap(\n        array,\n        ax=ax,\n        cmap='YlOrBr',  # use a different color scheme\n        linewidths=.25,  # make the heatmap more visible\n        vmin=0", "tokens": ["np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Check", " that", " the", " array", " has", " at", " least", " one", " row", "\n", "    ", "if", " array", ".", "nd", "im", " <", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Array", " must", " be", " ", "2", "D", " or", " higher", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " features", " matches", " the", " number", " of", " columns", " in", " the", " array", "\n", "    ", "if", " features", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Number", " of", " features", " must", " match", " number", " of", " columns", " in", " array", "\"", ")", "\n", "\n", "    ", "#", " Sh", "uffle", " the", " array", "\n", "    ", "np", ".", "random", ".", "sh", "uffle", "(", "array", ",", " axis", "=", "1", ")", "\n", "\n", "    ", "#", " Create", " a", " matplotlib", " figure", " and", " axes", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "5", ",", " ", "8", "))", "\n", "\n", "    ", "#", " If", " features", " is", " provided", ",", " use", " them", " as", " labels", " for", " the", " x", "-", "axis", "\n", "    ", "if", " features", ":", "\n", "        ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "features", ")", "\n", "\n", "    ", "#", " Plot", " the", " heat", "map", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "\n", "        ", "array", ",", "\n", "        ", "ax", "=", "ax", ",", "\n", "        ", "cm", "ap", "='", "Y", "l", "Or", "Br", "'", ",", "  ", "#", " use", " a", " different", " color", " scheme", "\n", "        ", "linewidth", "s", "=", ".", "2", "5", ",", "  ", "#", " make", " the", " heat", "map", " more", " visible", "\n", "        ", "v", "min", "=", "0"], "logprobs": [-3.696622848510742, -0.0025326102040708065, -0.0031890033278614283, -0.00018916724366135895, -0.023648353293538094, -0.001585775287821889, -0.00713349087163806, -0.01897142082452774, -0.026990164071321487, -1.0441970825195312, -0.0002865380665753037, -1.9518282413482666, -0.51881343126297, -2.605219841003418, -0.8282304406166077, -0.6219271421432495, -2.7412874698638916, -0.9327646493911743, -0.0020350953564047813, -0.684613823890686, -0.3692370355129242, -1.7925175428390503, -0.00047755756531842053, -0.05744045600295067, -0.8947514295578003, -0.0030024233274161816, -1.3694623708724976, -0.00019500737835187465, -0.8182397484779358, -0.00019739109848160297, -0.08197690546512604, -0.13507285714149475, -0.0026121563278138638, -0.0007413261337205768, -0.01145405974239111, -0.0011195826809853315, -1.7046782886609435e-05, -0.13476912677288055, -0.12071583420038223, -1.028785228729248, -0.024464961141347885, -0.610548198223114, -1.4673625230789185, -0.0001248043408850208, -0.9268397092819214, -0.4026264548301697, -1.7713234424591064, -1.7574851512908936, -0.00021300431399140507, -0.0025144172832369804, -0.1338346153497696, -0.00025733973598107696, -0.20760734379291534, -0.3783692717552185, -0.33022594451904297, -1.4385755062103271, -1.8164079189300537, -0.17948874831199646, -0.05390020087361336, -0.000390215078368783, -0.017013784497976303, -0.43769970536231995, -0.20431728661060333, -0.01202641986310482, -0.05603940784931183, -0.00042775063775479794, -0.09216669946908951, -0.015420377254486084, -1.2818478345870972, -0.04377417638897896, -2.1457441107486375e-05, -0.014599048532545567, -0.0001248043408850208, -0.0019415830029174685, 0.0, -7.152555099310121e-07, -0.01037855725735426, -0.0001081169830285944, -0.0010526598198339343, -0.010057603940367699, -0.001470794901251793, -0.0030720680952072144, -0.000694153131917119, -0.0005981324939057231, -0.004205194301903248, -0.0006778326351195574, -2.1815061700181104e-05, -0.00648785475641489, -0.36664724349975586, -0.9499632716178894, -0.00022718709078617394, -0.15733815729618073, -0.45542967319488525, -0.014426100067794323, -1.4719682931900024, -0.0003773453936446458, -0.0074220155365765095, -0.30438387393951416, -0.553924024105072, -0.0635862722992897, -0.0007011815905570984, -0.0011960265692323446, -0.046401720494031906, -0.0006050424999557436, -0.2521701157093048, -1.7310562133789062, -0.010323223657906055, -0.19600379467010498, -1.7980222702026367, -1.3737213611602783, -0.0005759726045653224, -1.3236641883850098, -0.00020203932945150882, -0.002133119385689497, -1.0371154530730564e-05, -0.0009397619287483394, -2.9802276912960224e-06, -0.00021550717065110803, -0.0009136793087236583, -0.09929252415895462, -0.08216886222362518, -0.006632694508880377, -1.638473629951477, -0.08089287579059601, -0.008109145797789097, -0.026812614873051643, -0.00021407696476671845, -0.15788252651691437, -1.008918046951294, -0.6505686044692993, -2.106600284576416, -1.9512813091278076, -0.6059916615486145, -0.5069835186004639, -1.2721515893936157, -0.0005035324720665812, -0.07823745906352997, -0.011109991930425167, -0.052516575902700424, -0.009535009041428566, -0.0005613181856460869, -1.2636104656849056e-05, -0.0004698126285802573, -3.421248038648628e-05, -0.9759831428527832, -0.11631117761135101, -0.0003723404952324927, -0.010903069749474525, -1.3457610607147217, -2.552612543106079, -0.004401994403451681, -0.04199988767504692, -3.0934605598449707, -0.04825160279870033, -0.002369931200519204, -0.09300290048122406, -0.00026603974401950836, -0.06880612671375275, -1.8348661661148071, -0.06040525436401367, -0.6345393657684326, -0.19878140091896057, -0.010131125338375568, -0.2643849849700928, -0.6317611932754517, -0.031143810600042343, -0.9027860760688782, -0.5653741955757141, -0.035387177020311356, -0.7633526921272278, -0.05863428860902786, -0.0008814025786705315, -0.09607739746570587, -0.0001463782973587513, -0.010921464301645756, -0.002690626075491309, -0.07386169582605362, -0.0005514293443411589, -0.0007082099909894168, -0.260670930147171, -0.0003904534096363932, -0.06214810535311699, -0.022202961146831512, -0.11156710237264633, -0.7357621788978577, -0.00019262365822214633, -0.007962272502481937, -0.007553587201982737, -0.11813678592443466, -0.0030341562815010548, -0.9858368039131165, -0.056615088135004044, -0.08129662275314331, -1.0686564445495605, -0.1654784232378006, -0.12965671718120575, -0.0040076426230371, -0.5338075160980225, -0.0003415954706724733, -0.14816507697105408, -8.153582894010469e-05, -0.00129270413890481, -0.006055105477571487, -8.141662692651153e-05, -0.00013684290752280504, -1.7814375162124634, -0.014140060171484947, -0.19609011709690094, -0.03567123040556908, -0.08033991605043411, -0.0005285535007715225, -0.7610228657722473, -0.0013149671722203493, -0.0002269487304147333, -0.001515431678853929, -0.013070032000541687, -0.0022429090458899736, -0.6923431158065796, -0.00015066919149830937, -0.7668637037277222, -2.101221799850464, -0.000750736624468118, -1.619539737701416, -1.6738767623901367, -0.023249058052897453, -0.005964931100606918, -2.642331600189209, -0.00044610086479224265, -3.414788246154785, -1.3756693601608276, -2.761869430541992, -0.20411416888237, -1.3754887580871582, -0.5395115613937378, -0.007772795855998993, -1.650014042854309, -0.607894778251648, -0.0011401826050132513, -2.0014381408691406, -3.009279727935791, -1.341051697731018, -0.010574735701084137, -0.4809020459651947, -2.1219027985353023e-05, -1.475081443786621, -0.266849160194397, -0.7995429635047913, -0.0018193849828094244, -1.434084415435791, -1.9573638439178467, -0.12408114969730377, -0.03551189973950386, -1.4603345394134521, -0.03836039453744888, -0.09989907592535019, -0.1954023391008377], "finish_reason": "length"}], "metrics": {"energy": 322.32138385009785, "energy_per_token": 1.2590679056644447, "time": 11.554625, "time_per_token": 0.04513525390625}}
{"outputs": [{"text": "if array.ndim != 2:\n        raise ValueError(f\"'{array.ndim}' is not a valid array shape.\")\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError(\n            f\"'{features}' is not a valid number of features. Expected {array.shape[1]}.\"\n        )\n    # shuffle the columns of the given numpy array\n    rng = np.random.default_rng(seed)\n    cols = np.arange(array.shape[1])\n    rng.shuffle(cols)\n    arr = array[:, cols]\n    # set the labels for the x-axis\n    if features is not None:\n        cols_labels = features\n    else:\n        cols_labels = list(range(1, array.shape[1] + 1))\n\n    # visualize the shuffled array as a heatmap\n    fig, ax = plt.subplots()\n    ax = sns.heatmap(arr, annot=True, fmt='', ax=ax)\n    ax.set", "tokens": ["if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "'{", "array", ".", "nd", "im", "}'", " is", " not", " a", " valid", " array", " shape", ".", "\"", ")", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "\"", "'{", "features", "}'", " is", " not", " a", " valid", " number", " of", " features", ".", " Expected", " {", "array", ".", "shape", "[", "1", "]}", ".", "\"", "\n", "        ", ")", "\n", "    ", "#", " shuffle", " the", " columns", " of", " the", " given", " numpy", " array", "\n", "    ", "r", "ng", " =", " np", ".", "random", ".", "default", "_", "r", "ng", "(", "seed", ")", "\n", "    ", "cols", " =", " np", ".", "ar", "ange", "(", "array", ".", "shape", "[", "1", "])", "\n", "    ", "r", "ng", ".", "sh", "uffle", "(", "cols", ")", "\n", "    ", "arr", " =", " array", "[:", ",", " col", "s", "]", "\n", "    ", "#", " set", " the", " labels", " for", " the", " x", "-", "axis", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "cols", "_", "labels", " =", " features", "\n", "    ", "else", ":", "\n", "        ", "cols", "_", "labels", " =", " list", "(", "range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", "))", "\n", "\n", "    ", "#", " visualize", " the", " shuff", "led", " array", " as", " a", " heat", "map", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "arr", ",", " annot", "=", "True", ",", " fmt", "=", "''", ",", " ax", "=", "ax", ")", "\n", "    ", "ax", ".", "set"], "logprobs": [-0.8079642653465271, -1.4244707822799683, -0.02581845410168171, -0.4785267412662506, -0.00048137042904272676, -0.1689128428697586, -1.1920928244535389e-07, -5.245195097813848e-06, -0.0014449642039835453, -0.00024875884992070496, -0.16157323122024536, -0.02551078610122204, -0.0023057085927575827, -0.022851349785923958, -0.003789507318288088, -3.3854863431770355e-05, -0.24967855215072632, -1.892939805984497, -0.22084704041481018, -3.0752410888671875, -0.06401540338993073, -0.3945581912994385, -0.3953050374984741, -0.0005042473785579205, -0.1271773874759674, -0.7001374363899231, -0.19988755881786346, -0.297573983669281, -1.013009786605835, -2.300130844116211, -2.7465507984161377, -0.6869578957557678, -1.4439301490783691, -0.044182583689689636, -0.008000588975846767, -0.34045174717903137, -0.35673263669013977, -1.2004905939102173, -0.3365676701068878, -0.6454375982284546, -5.5549986427649856e-05, -0.38692355155944824, -0.15353257954120636, -0.0001062098381225951, -0.04094497114419937, -0.000398198957554996, -0.01594190113246441, 0.0, -7.271740287251305e-06, -0.021613184362649918, -0.00015698630886618048, -0.0037972265854477882, -0.017078006640076637, -0.004801410716027021, -0.007488040253520012, -0.004042074549943209, -0.0012013844680041075, -0.010377377271652222, -0.003135290928184986, -4.887569048150908e-06, -0.010169949382543564, -1.8612487316131592, -0.007125087082386017, -0.05143601447343826, -0.010064566507935524, -0.6670634746551514, -1.0315892696380615, -0.04258725047111511, -1.7284759283065796, -0.346057653427124, -0.31395432353019714, -0.08016333729028702, -1.518080711364746, -0.008319602347910404, -0.40422701835632324, -0.5838213562965393, -1.6496938467025757, -0.6528933644294739, -0.013567262329161167, -0.00037126801908016205, -0.001994883641600609, -0.0028725096490234137, -0.007363323122262955, -0.02998737245798111, -0.8006851673126221, -0.00903092510998249, -0.9217008948326111, -0.004110340960323811, -0.0001586549769854173, -0.0014671048847958446, -0.5155490636825562, -3.1586251258850098, -2.677311658859253, -1.2378758192062378, -0.4049825072288513, -1.2041072845458984, -0.1759883612394333, -2.109511137008667, -2.159641742706299, -0.02923743613064289, -0.23764775693416595, -0.002875243779271841, -2.9209744930267334, -0.08830045908689499, -0.011754889972507954, -0.03975743427872658, -2.825220326485578e-05, -0.0008547228644602001, -0.006076314952224493, -0.24538767337799072, -1.4305104514278355e-06, -3.242440288886428e-05, -1.1920858014491387e-05, -0.011931363493204117, -0.014908798970282078, -0.29390376806259155, -0.03526761755347252, -0.015441975556313992, -3.039511203765869, -0.09606894850730896, -3.153179883956909, -0.00013624693383462727, -0.49848222732543945, -0.0001245659514097497, -0.0006030171643942595, -0.09026426076889038, -0.00024339574156329036, -0.0017471539322286844, -0.0063437046483159065, -0.003995057195425034, -0.03708994761109352, -0.028105679899454117, -0.005124647635966539, -0.06952697783708572, -0.0005896736984141171, -0.0006598440813831985, -0.0018546062055975199, -2.4437606043647975e-05, -4.541770613286644e-05, -0.0001961992384167388, -0.021347511559724808, -0.011012843810021877, -0.15567083656787872, -3.6603429317474365, -0.282053679227829, -0.12412948161363602, -0.05924386903643608, -0.0007815881981514394, -0.017734527587890625, -2.0265558760002023e-06, -0.005031186621636152, -0.026769092306494713, -0.6457855105400085, -0.3774157166481018, -3.0536630153656006, -1.0325514078140259, -2.0311827659606934, -0.6840301156044006, -0.09160710871219635, -0.8604514598846436, -0.16849060356616974, -0.015768012031912804, -1.0360113382339478, -0.0017389428103342652, -0.27481475472450256, -0.013749766163527966, -0.14594301581382751, -0.5098941922187805, -1.597391747054644e-05, -0.004881962668150663, -0.002917797304689884, -0.0004798214649781585, -4.016264915466309, -0.9172461032867432, -0.5753587484359741, -0.003962167073041201, -0.06334998458623886, -0.010473289526998997, -0.018692176789045334, -0.011034302413463593, -3.111314072157256e-05, -0.004598755855113268, -0.0002787916746456176, -0.07243303209543228, -0.002253732644021511, -0.0007553822943009436, -0.000504723924677819, -2.7000856399536133, -0.015609818510711193, -1.1051228046417236, -0.00021896349790040404, -0.03216201439499855, -0.0004551566671580076, -0.12266946583986282, -6.09140915912576e-05, -0.0005499995895661414, -0.00036840804386883974, -0.0015445933677256107, -0.08133509010076523, -9.131014667218551e-05, -0.0005810956354252994, -8.976056415122002e-05, -0.003006345359608531, -0.007906687445938587, -1.935003399848938, -0.0014607959892600775, -0.5275004506111145, -2.92570161819458, -0.1788281351327896, -0.9463410973548889, -0.012060576118528843, -0.5256624221801758, -0.12792903184890747, -0.06424203515052795, -0.009100859984755516, -0.02011694386601448, -0.1327594667673111, -0.0030947669874876738, -1.4484407901763916, -0.17153097689151764, -0.04017652943730354, -0.010038367472589016, -0.0022134108003228903, -5.054346183896996e-05, -0.0004959068610332906, -5.495397272170521e-05, -0.8471894264221191, -0.0027305721305310726, -0.043356698006391525, -1.807379961013794, -2.1855978965759277, -0.006708480883389711, -1.311301275563892e-06, -2.169585604860913e-05, -0.001208409434184432, -7.1403817855753e-05, -0.0001915509783430025, -0.23158343136310577, -0.012290574610233307, -1.0728029012680054, -0.0013313962845131755, -0.08478036522865295, -0.01739238016307354, -1.0661439895629883, -0.5539077520370483, -1.300734281539917, -8.380061626667157e-05, -2.512483835220337, -0.0005181877058930695, -0.00039200251922011375, -1.2221267223358154, -0.015970293432474136, -0.03860598802566528, -0.1486360728740692, -0.002967599080875516, -0.04272261634469032], "finish_reason": "length"}], "metrics": {"energy": 282.7383976411821, "energy_per_token": 1.1044468657858675, "time": 11.558426, "time_per_token": 0.0451501015625}}
{"outputs": [{"text": "# Check input type\n    if not isinstance(array, np.ndarray):\n        raise TypeError(f'Expected input of type numpy.ndarray, but found {type(array)}')\n    elif not len(array.shape) == 2:\n        raise ValueError(f'Expected a 2D array, but found shape {array.shape}')\n\n    # Check empty array\n    if len(array) == 0:\n        raise ValueError('Array is empty')\n\n    # Check features provided\n    if features is not None:\n        if not len(features) == array.shape[1]:\n            raise ValueError(f'Expected {array.shape[1]} columns, but found {features}')\n        else:\n            return sns.heatmap(data=array, row_labels=features, square=True, ax=ax)\n    else:\n        # Generate numerical labels\n        labels = [i for i in range(1, array.shape[1]+1)]\n        return sns.heatmap(data=array, row_labels=labels, square=True, ax=ax)", "tokens": ["#", " Check", " input", " type", "\n", "    ", "if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", "):", "\n", "        ", "raise", " Type", "Error", "(", "f", "'", "Expected", " input", " of", " type", " numpy", ".", "nd", "array", ",", " but", " found", " {", "type", "(", "array", ")}", "')", "\n", "    ", "elif", " not", " len", "(", "array", ".", "shape", ")", " ==", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "Expected", " a", " ", "2", "D", " array", ",", " but", " found", " shape", " {", "array", ".", "shape", "}", "')", "\n", "\n", "    ", "#", " Check", " empty", " array", "\n", "    ", "if", " len", "(", "array", ")", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "Array", " is", " empty", "')", "\n", "\n", "    ", "#", " Check", " features", " provided", "\n", "    ", "if", " features", " is", " not", " None", ":", "\n", "        ", "if", " not", " len", "(", "features", ")", " ==", " array", ".", "shape", "[", "1", "]:", "\n", "            ", "raise", " Value", "Error", "(", "f", "'", "Expected", " {", "array", ".", "shape", "[", "1", "]}", " columns", ",", " but", " found", " {", "features", "}", "')", "\n", "        ", "else", ":", "\n", "            ", "return", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " row", "_", "labels", "=", "features", ",", " square", "=", "True", ",", " ax", "=", "ax", ")", "\n", "    ", "else", ":", "\n", "        ", "#", " Generate", " numerical", " labels", "\n", "        ", "labels", " =", " [", "i", " for", " i", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]+", "1", ")]", "\n", "        ", "return", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", " row", "_", "labels", "=", "labels", ",", " square", "=", "True", ",", " ax", "=", "ax", ")", "\n", "\n", "#"], "logprobs": [-1.6297416687011719, -0.8563365340232849, -3.003450393676758, -2.8150157928466797, -1.142330288887024, -0.003645324381068349, -0.09551402926445007, -0.28649166226387024, -0.14251817762851715, -0.00035446559195406735, -0.028555871918797493, -0.0002899941464420408, -0.009011550806462765, -1.3828182090946939e-05, -0.0003594706067815423, -1.9550132492440753e-05, -0.4153355658054352, -0.007569795940071344, -0.0011995985405519605, -0.062159981578588486, -0.3028397560119629, -5.125986263010418e-06, -0.12712669372558594, -1.0558521747589111, -2.1371023654937744, -1.9446049928665161, -1.8570164442062378, -0.9691550135612488, -0.0769210159778595, -1.0935962200164795, -0.02398592233657837, -0.03335987403988838, -0.00028391621890477836, -0.4413737654685974, -1.102606177330017, -2.4268531799316406, -0.3042593002319336, -0.016391033306717873, -0.0004904259694740176, -0.0023372257128357887, -0.041651651263237, -0.8143811225891113, -0.0009095107670873404, -0.7129822373390198, -1.9627147912979126, -2.3011062145233154, -1.6878582239151, -0.0003289635351393372, -0.013025790452957153, -0.15357081592082977, -0.020823780447244644, -0.06639505922794342, -0.021064728498458862, -0.0009319015080109239, -0.0002549561613705009, -0.01739823818206787, -0.03668805584311485, -0.0007524043321609497, -0.018833154812455177, -0.10923292487859726, -1.490105023549404e-05, -0.6352695226669312, -0.2375330775976181, -0.1150200292468071, -0.24414502084255219, -1.4214727878570557, -0.03628002479672432, -0.0005255748401395977, -0.24531109631061554, -0.5981929302215576, -0.22745172679424286, -0.02222476340830326, -0.0906795933842659, -1.70993971824646, -0.09352719038724899, -0.04040999710559845, -0.00016532962035853416, -0.0006423317245207727, -0.009869822300970554, -0.09326410293579102, -0.004059646278619766, -1.148597240447998, -0.0009610801353119314, -0.23389242589473724, -0.5636574625968933, -3.646362781524658, -0.5231523513793945, -0.1482129842042923, -0.0004359725280664861, -0.03842739015817642, -0.42086029052734375, -0.00029273517429828644, -0.01007577870041132, -0.10679548233747482, -0.06349744647741318, -0.002820563269779086, -0.0002603192115202546, -0.023679319769144058, -0.004363658372312784, -0.0005212855176068842, -0.02518419176340103, -0.00743727944791317, -1.0371154530730564e-05, -0.3791871964931488, -1.6413612365722656, -1.3839008808135986, -0.008089989423751831, -0.5029337406158447, -0.00020037073409184813, -0.06375215202569962, -0.0002543602604418993, -0.12811289727687836, -0.3692379593849182, -0.8419102430343628, -3.0666370391845703, -0.3287256062030792, -0.002802732167765498, -0.09723055362701416, -0.05451967567205429, -0.345110684633255, -0.21162430942058563, -4.494089080253616e-05, -0.2614864706993103, -0.002565666101872921, -0.004023196641355753, -0.1188933402299881, -0.7171772122383118, -0.6290056109428406, -0.00011395759065635502, -0.05936655029654503, -0.00036900385748595, -0.0052790530025959015, -0.2195524424314499, -0.0005899119423702359, -0.0015023384476080537, -0.013453886844217777, -0.006170033942908049, -0.0060303411446511745, -0.008458975702524185, -0.001538523007184267, -0.01296271849423647, -0.003214194905012846, -3.731181277544238e-05, -0.20658843219280243, -0.33217641711235046, -0.10301140695810318, -0.6514725089073181, -0.6684980988502502, -0.053520265966653824, -0.00018773700867313892, -0.00022659118985757232, -0.001971921883523464, -0.005636157002300024, -0.009600657969713211, -2.868924379348755, -0.5468921065330505, -0.10030363500118256, -0.2505384385585785, -0.010707545094192028, -2.2450640201568604, -0.007462364621460438, -0.16915927827358246, -0.00040451448876410723, -1.3565902709960938, -1.0881941318511963, -7.581423415103927e-05, -0.033085886389017105, -0.0018342590192332864, -2.60610032081604, -0.22018755972385406, -1.764281842042692e-05, -0.00035529976594261825, -0.007058801595121622, -9.560128091834486e-05, -0.0007965967524796724, -2.8939061164855957, -0.009337090887129307, -0.016045374795794487, -0.022741585969924927, -2.3545193672180176, -0.040803875774145126, -1.627103567123413, -0.027692507952451706, -0.017341651022434235, -0.0701836347579956, -3.055375337600708, -0.0017134760273620486, -0.02313048392534256, -0.34898558259010315, -2.802797794342041, -0.006618365179747343, -0.1327400505542755, -0.6989390254020691, -0.029903843998908997, -0.21376948058605194, -0.040881235152482986, -5.435795901576057e-05, -0.008087033405900002, -0.007510165683925152, -2.4300761222839355, -1.815467119216919, -1.5696090459823608, -0.5434630513191223, -0.6729041934013367, -0.001335205975919962, -1.5598394870758057, -0.009377126581966877, -0.504809558391571, -3.5787408351898193, -0.4087785482406616, -0.001378777320496738, -0.0030983323231339455, -0.009982306510210037, -0.00044907975825481117, -0.06375763565301895, -0.000359351426595822, -0.10993024706840515, -0.00019012074335478246, -0.0010368215152993798, -0.0014209183864295483, -0.005950118415057659, -1.0589028596878052, -0.00022790218645241112, -0.006862641777843237, -0.009023009799420834, -0.10791515558958054, -0.13652008771896362, -0.0014757943572476506, -5.8412379075889476e-06, -3.576272320060525e-06, -0.00016127715934999287, -3.576278118089249e-07, -0.00016366096679121256, -0.009328233078122139, -0.0011439929949119687, -0.002809864701703191, -0.0013491347199305892, -0.022207507863640785, -7.033323527139146e-06, -0.0024937265552580357, -0.0011712603736668825, -0.00451640086248517, -0.002540576970204711, -0.055256422609090805, -5.566918844124302e-05, -0.0005384425749070942, -0.007118695415556431, -0.0034517014864832163, -0.0002181292074965313, -0.0002615109842736274, -0.1987963616847992, -0.2538895010948181, -0.026775941252708435, -1.9703141450881958], "finish_reason": "stop"}], "metrics": {"energy": 277.5726684827804, "energy_per_token": 1.0928057814282692, "time": 11.335636, "time_per_token": 0.04462848818897638}}
{"outputs": [{"text": "if seed is None:\n        seed = np.random.randint(0, 100)\n\n    np.random.seed(seed)\n\n    if not isinstance(array, np.ndarray):\n        raise TypeError(\"The input array must be a numpy array.\")\n    if array.shape[0] == 0:\n        raise ValueError(\"The input array cannot be empty.\")\n    if len(array.shape) != 2:\n        raise ValueError(\"The input array must be a 2D numpy array.\")\n\n    if features is not None and len(features) != array.shape[1]:\n        raise ValueError(\"The features list must match the number of columns in the input array.\")\n\n    if features is None:\n        features = [str(i) for i in range(1, array.shape[1] + 1)]\n\n    ax = sns.heatmap(array, cbar_kws={'label': 'Probability'})\n    ax.set_xticklabels(features)\n    ax.set_ytick", "tokens": ["if", " seed", " is", " None", ":", "\n", "        ", "seed", " =", " np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ")", "\n", "\n", "    ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "if", " not", " isinstance", "(", "array", ",", " np", ".", "nd", "array", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "The", " input", " array", " must", " be", " a", " numpy", " array", ".", "\"", ")", "\n", "    ", "if", " array", ".", "shape", "[", "0", "]", " ==", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " array", " cannot", " be", " empty", ".", "\"", ")", "\n", "    ", "if", " len", "(", "array", ".", "shape", ")", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " input", " array", " must", " be", " a", " ", "2", "D", " numpy", " array", ".", "\"", ")", "\n", "\n", "    ", "if", " features", " is", " not", " None", " and", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "\"", "The", " features", " list", " must", " match", " the", " number", " of", " columns", " in", " the", " input", " array", ".", "\"", ")", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "str", "(", "i", ")", " for", " i", " in", " range", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")]", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "array", ",", " c", "bar", "_", "k", "ws", "={", "'", "label", "':", " '", "Prob", "ability", "'})", "\n", "    ", "ax", ".", "set", "_", "xt", "ick", "labels", "(", "features", ")", "\n", "    ", "ax", ".", "set", "_", "yt", "ick"], "logprobs": [-0.8079642653465271, -2.5703792572021484, -0.399784654378891, -2.9959022998809814, -0.012155267409980297, -0.043614987283945084, -0.0025859985034912825, -0.6059247255325317, -0.010219037532806396, -0.21075104176998138, -0.00024816294899210334, -0.003544241189956665, -0.00046039948938414454, -0.05255107209086418, -0.0019613332115113735, -0.0063717784360051155, -0.9521605968475342, -0.004835221916437149, -0.16214825212955475, -0.25751516222953796, -0.09207320213317871, -0.11609955132007599, -1.3947398662567139, -0.021191833540797234, -1.1336913108825684, -0.00042906138696707785, -2.1244964599609375, -0.0003477922291494906, -0.0008600826840847731, -4.339123915997334e-05, -0.027280325070023537, -0.0005268854438327253, -0.0029805542435497046, -0.008469495922327042, -0.011537023819983006, -0.6488310098648071, -0.00015198028995655477, -0.34594765305519104, -1.658362865447998, -0.704660177230835, -0.00012754580529872328, -0.06250596791505814, -0.0008297099848277867, -0.010074716061353683, -1.883488948806189e-05, -0.00044383687782101333, -4.100715523236431e-05, -0.7621013522148132, -0.009047700092196465, -0.0008873577462509274, -0.150361105799675, -1.0445386171340942, -1.5735502529423684e-05, -0.13172245025634766, -0.313478022813797, -2.4446558952331543, -1.3821113109588623, -1.1681376695632935, -0.1263408213853836, -0.0010126468259841204, -0.10595808923244476, -0.3522593379020691, -0.21778684854507446, -0.22141142189502716, -0.015100333839654922, -0.00048494499060325325, -0.002001427114009857, -0.7355560064315796, -0.6267032027244568, -0.599618673324585, -0.0007245299639180303, -2.2213149070739746, -0.21508245170116425, -0.00862645823508501, -0.0018398514948785305, -0.9255927801132202, -0.011041022837162018, -0.00776948407292366, -1.1654243469238281, -0.010940566658973694, -0.00039176418795250356, -0.01264718547463417, -0.010803896933794022, -7.152531907195225e-06, -0.009972864761948586, -0.015106087550520897, -0.12269192934036255, -0.21741226315498352, -0.010457245633006096, -1.182329773902893, -0.0015713736647740006, -0.026615416631102562, -0.06226617470383644, -0.0042457920499145985, -0.00011514954530866817, -0.0014884117990732193, -0.1468329280614853, -0.06517874449491501, -0.9632882475852966, -0.00013767725613433868, -0.007553114090114832, -0.011982838623225689, -0.005554480012506247, -0.00036137725692242384, -0.07468368858098984, 0.0, 0.0, -0.0003693613689392805, -0.00033825874561443925, -0.013619712553918362, -0.001800346071831882, -0.00028713393840007484, -0.0031516901217401028, -0.030328476801514626, -1.7046782886609435e-05, -0.003852209774777293, -0.06059522554278374, -0.022549178451299667, -0.045449066907167435, -0.01577833853662014, -0.0076287128031253815, -0.007620668038725853, -0.3460240662097931, -0.025645460933446884, -0.000243634101934731, -0.15689611434936523, -0.36814185976982117, -0.005038540344685316, -0.014698198065161705, -0.002975443610921502, -0.0004231034545227885, -0.0015608996618539095, -0.15830734372138977, -0.00018845213344320655, -0.3134673833847046, -0.04204709827899933, -0.0830502137541771, -1.439854383468628, -2.682172998902388e-05, -1.0318937301635742, -0.07821629196405411, -3.242440288886428e-05, -0.017683230340480804, -0.0003997480380348861, -0.00608176551759243, 0.0, -2.861018856492592e-06, -0.03212115168571472, -3.9219088648678735e-05, -0.0002598424907773733, -0.006062452215701342, -0.0025418850127607584, -0.004112834110856056, -0.002227684250101447, -0.0010478964541107416, -0.004939377307891846, -0.0025050232652574778, -7.390948667307384e-06, -0.008043752983212471, -0.4183393716812134, -0.17438651621341705, -1.8289823532104492, -0.042706966400146484, -0.13724032044410706, -0.24144159257411957, -0.0016368337674066424, -0.005284981802105904, -0.0013404440833255649, -0.0033124599140137434, -0.03160753846168518, -0.07982242107391357, -0.7887048125267029, -0.027652734890580177, -0.015448314137756824, -0.002003092784434557, -0.0007078525959514081, -0.0008142255246639252, -0.20294533669948578, -0.00023684080224484205, -0.7638968825340271, -0.04519808664917946, -0.0350419245660305, -0.21545569598674774, -0.008182928897440434, -0.008644422516226768, -0.001490554423071444, -0.1568140834569931, -0.005120022222399712, -0.2622925937175751, -0.7139277458190918, -0.00810689851641655, -0.28394344449043274, -0.6016688346862793, -0.0022565871477127075, -0.0002225389762315899, -0.00027736154152080417, -0.005300397519022226, -0.00019369633810129017, -0.029285134747624397, -0.00010823617776622996, -0.017028434202075005, -1.9311717551317997e-05, -0.00017295771976932883, -0.00020239688456058502, -0.001723591354675591, -0.15339556336402893, -0.00393806304782629, -0.0008279233006760478, -6.925819616299123e-05, -0.0020889858715236187, -0.013250861316919327, -0.10140410810709, -0.0004828002711292356, -1.2272238731384277, -0.020180033519864082, -0.2943210005760193, -1.6689286894688848e-06, -3.099393507000059e-05, -0.01006610132753849, -9.16677454370074e-05, -0.0003216941258870065, -0.21965263783931732, -0.052727844566106796, -1.7685099840164185, -1.2396860122680664, -1.91801118850708, -0.43414753675460815, -0.0008632985409349203, -0.6504204273223877, -0.03960929065942764, -0.471574991941452, -0.008172051049768925, -0.4286712408065796, -2.246100902557373, -0.17642085254192352, -1.844794750213623, -0.022998731583356857, -0.11979802697896957, -0.07233811914920807, -0.0028741739224642515, -0.09895946830511093, -0.13381114602088928, -0.49671486020088196, -0.012857983820140362, -0.0008893824997358024, -0.004319504369050264, -0.01871674694120884, -0.38623079657554626, -0.011112821288406849, -0.18515029549598694, -0.2525307834148407, -0.0011522090062499046, -0.04045487567782402, -0.013133566826581955, -0.16837355494499207, -0.0007892115972936153], "finish_reason": "length"}], "metrics": {"energy": 281.23697172355656, "energy_per_token": 1.0985819207951428, "time": 11.572568, "time_per_token": 0.04520534375}}
{"outputs": [{"text": "if features and not (len(features) == array.shape[1]):\n        raise ValueError('features does not match the number of columns in the array')\n    if not array.shape[0] <= 2:\n        raise ValueError('array must not be empty or not 2-dimensional')\n    if array.shape[1] == 0 or array.ndim != 2:\n        raise ValueError('array must not be empty or not 2-dimensional')\n    if features:\n        ax = sns.heatmap(data=array,\n                         ax=plt.subplots(1, 1)[1],\n                         cbar=False,\n                         xticklabels=features,\n                         yticklabels=features)\n        return ax\n    else:\n        return sns.heatmap(data=array,\n                          ax=plt.subplots(1, 1)[1],\n                          cbar=False,\n                          xticklabels=np.arange(1, array.shape[1] + 1),\n                          yticklabels=np.arange(1", "tokens": ["if", " features", " and", " not", " (", "len", "(", "features", ")", " ==", " array", ".", "shape", "[", "1", "]", "):", "\n", "        ", "raise", " Value", "Error", "('", "features", " does", " not", " match", " the", " number", " of", " columns", " in", " the", " array", "')", "\n", "    ", "if", " not", " array", ".", "shape", "[", "0", "]", " <=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "array", " must", " not", " be", " empty", " or", " not", " ", "2", "-", "dimensional", "')", "\n", "    ", "if", " array", ".", "shape", "[", "1", "]", " ==", " ", "0", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "('", "array", " must", " not", " be", " empty", " or", " not", " ", "2", "-", "dimensional", "')", "\n", "    ", "if", " features", ":", "\n", "        ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", "\n", "                ", "         ", "ax", "=", "plt", ".", "sub", "plots", "(", "1", ",", " ", "1", ")[", "1", "]", ",", "\n", "                ", "         ", "c", "bar", "=", "False", ",", "\n", "                ", "         ", "xt", "ick", "labels", "=", "features", ",", "\n", "                ", "         ", "yt", "ick", "labels", "=", "features", ")", "\n", "        ", "return", " ax", "\n", "    ", "else", ":", "\n", "        ", "return", " s", "ns", ".", "heat", "map", "(", "data", "=", "array", ",", "\n", "                ", "          ", "ax", "=", "plt", ".", "sub", "plots", "(", "1", ",", " ", "1", ")[", "1", "]", ",", "\n", "                ", "          ", "c", "bar", "=", "False", ",", "\n", "                ", "          ", "xt", "ick", "labels", "=", "np", ".", "ar", "ange", "(", "1", ",", " array", ".", "shape", "[", "1", "]", " +", " ", "1", ")", ",", "\n", "                ", "          ", "yt", "ick", "labels", "=", "np", ".", "ar", "ange", "(", "1"], "logprobs": [-0.8079642653465271, -1.6663035154342651, -2.552676200866699, -3.0469045639038086, -1.9285211563110352, -1.1033732891082764, -0.00023362292267847806, -0.12477061152458191, -0.006965047679841518, -0.015843812376260757, -0.16284842789173126, -0.0008553183870390058, -0.006480630021542311, -0.027148423716425896, -0.006434437353163958, -0.020678997039794922, -0.015535877086222172, -0.020309120416641235, -0.0031417079735547304, -0.026371043175458908, -0.01285610068589449, -4.1483970562694594e-05, -1.830315113067627, -1.3209142684936523, -2.848404884338379, -0.002683611586689949, -0.053825534880161285, -0.42154011130332947, -0.05211721733212471, -0.0036491251084953547, -0.023617615923285484, -0.1454070508480072, -1.4681556224822998, -0.17120707035064697, -0.4958534836769104, -0.0013184197014197707, -0.5041727423667908, -0.5657590627670288, -1.2047100067138672, -0.6555256247520447, -0.022451620548963547, -0.9981618523597717, -0.18382340669631958, -0.07047175616025925, -0.35578852891921997, -3.4091928005218506, -0.5519659519195557, -0.5847201943397522, -0.4739011228084564, -0.030591541901230812, -0.0008063640561886132, -0.014766445383429527, -0.005296484101563692, -1.4662635294371285e-05, -0.1368696689605713, -0.30001479387283325, -0.22386369109153748, -1.3655580282211304, -0.0208988506346941, -0.01298272330313921, -0.27601563930511475, -0.3623218536376953, -0.1313134729862213, -0.0018555581336840987, -0.12645870447158813, -0.027989188209176064, -0.04007392004132271, -0.0012446045875549316, -0.42391785979270935, -0.5540353655815125, -2.179908275604248, -0.004426324740052223, -1.538297176361084, -0.022969374433159828, -0.7837944626808167, -0.028790099546313286, -0.7557463049888611, -0.01143921073526144, -0.21905098855495453, -2.603559732437134, -0.46226564049720764, -0.0034773615188896656, -1.084022879600525, -0.000436091679148376, -0.18376587331295013, -4.768370445162873e-07, -3.933898824470816e-06, -0.0015710166189819574, -0.0016946729738265276, -0.017833249643445015, -0.020382007583975792, -0.0004898302140645683, -0.04259398952126503, -0.006984816864132881, -2.884823152271565e-05, -0.03600672259926796, -0.04705258086323738, -0.035645004361867905, -0.08727450668811798, -0.001911837956868112, -0.0014172281371429563, -0.033958550542593, -0.0025914679281413555, -0.0018130784155800939, -0.0002803409588523209, -0.002858245512470603, -0.0014013956533744931, -0.004807579796761274, -0.001540784491226077, -0.4416781961917877, -0.5472445487976074, -0.7101922631263733, -0.8589298129081726, -0.012294813990592957, -0.001209600013680756, -2.280099391937256, -0.040897712111473083, -0.07935993373394012, -3.6954811548639555e-06, -0.00011312322021694854, -0.006613628473132849, -7.164221460698172e-05, -0.0009675112669356167, -2.276265859603882, -0.006280210800468922, -0.020652607083320618, -0.05133930966258049, -1.7900558710098267, -0.016449667513370514, -0.2489682137966156, -2.9228322505950928, -0.00940169021487236, -1.330733299255371, -0.006383741740137339, -1.8290256261825562, -0.2879893481731415, -0.9772107601165771, -0.6185990571975708, -0.13602890074253082, -0.18820589780807495, -0.0049100774340331554, -0.12992128729820251, -0.003989476710557938, -0.003775256220251322, -0.02349291555583477, -0.042781781405210495, -0.00025555206229910254, -0.0010929093696177006, -2.2704553604125977, -0.01721229776740074, -0.18935340642929077, -0.06866835057735443, -0.02659521996974945, -0.06631909310817719, -0.00015162272029556334, -0.0007739647408016026, -1.352207064628601, -0.004961440805345774, -0.00021371940965764225, -0.007771376520395279, -0.02861611358821392, -0.0902484655380249, -0.016812417656183243, -0.0002450642641633749, -0.001995002618059516, -0.26563209295272827, -0.0006164796068333089, -5.781483559985645e-05, -0.002152389846742153, -0.007601739373058081, -0.833803653717041, -0.05039089545607567, -2.5913939476013184, -1.398148536682129, -0.023293547332286835, -0.04395638406276703, -0.06827661395072937, -0.5578303933143616, -0.00010918975021922961, -0.003721575252711773, -0.0016645636642351747, -2.0188169479370117, -0.055932775139808655, -7.271740287251305e-06, -1.6689160474925302e-05, -0.0003014348621945828, -3.4570634852570947e-06, -0.00041309406515210867, -0.04446551948785782, -0.002877620980143547, -0.015299228020012379, -0.01446464005857706, -0.20236538350582123, -0.0007076143519952893, -1.3360931873321533, -0.05738440155982971, -0.0013735393295064569, -0.0007800396997481585, -4.2914423829643056e-05, -0.002093387534841895, -2.95634672511369e-05, -0.00083078199531883, -0.000310730334604159, -0.00036769305006600916, -0.010287591256201267, -0.00019226610311307013, -0.0008245882345363498, -0.0005133026279509068, -0.16085022687911987, -0.0007215518853627145, -0.0021991373505443335, -0.00024923557066358626, -0.005880436860024929, -0.028382888063788414, -0.00022516099852509797, -0.008229040540754795, -0.00777102168649435, -0.34547141194343567, -0.022979626432061195, -0.0005895545473322272, -0.007545896805822849, -0.22669386863708496, -0.0006541258189827204, -4.279521817807108e-05, -0.4827732741832733, -1.1430095434188843, -0.00031859567388892174, -0.10085418075323105, -2.8967437174287625e-05, -0.00045158201828598976, -0.06234166771173477, -0.001328420010395348, -0.114540696144104, -0.0003543464408721775, -0.0019361099693924189, -0.0007720588473603129, -0.011163867078721523, -0.3746839761734009, -0.002295004203915596, -0.0027173757553100586, -0.0005159238935448229, -0.3254372477531433, -0.07272682338953018, -0.004712427966296673, -0.00014602071314584464, -0.0009448830969631672, -0.0064744711853563786, -3.9219088648678735e-05, -7.629365427419543e-06, -0.002776697976514697, -0.0024683980736881495, -0.0009563163621351123, -0.001191144809126854, -8.4638240878121e-06, -5.113947918289341e-05, -0.0033254106529057026], "finish_reason": "length"}], "metrics": {"energy": 325.1087540111543, "energy_per_token": 1.2699560703560715, "time": 11.560398, "time_per_token": 0.0451578046875}}
{"outputs": [{"text": "# Validate input array\n    if len(array) == 0 or array.ndim != 2:\n        raise ValueError(\"'array' must be a non-empty 2-dimensional numpy array\")\n\n    # Validate features\n    if features is None:\n        features = [f\"x{i+1}\" for i in range(len(array[0]))]\n    elif len(features) != len(array[0]):\n        raise ValueError(\"If 'features' is provided, it must match the number of columns in 'array'\")\n\n    # Seed random number generator\n    if seed is not None:\n        np.random.seed(seed)\n\n    # Shuffle columns and apply default colorscale\n    shuffled_columns = array[:, np.random.permutation(len(array[0]))]\n\n    # Create heatmap using seaborn\n    ax = sns.heatmap(shuffled_columns,\n                     vmin=0,\n                     vmax=1,\n                     yticklabels=features,\n                     xticklabels=features", "tokens": ["#", " Valid", "ate", " input", " array", "\n", "    ", "if", " len", "(", "array", ")", " ==", " ", "0", " or", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "array", "'", " must", " be", " a", " non", "-", "empty", " ", "2", "-", "dimensional", " numpy", " array", "\"", ")", "\n", "\n", "    ", "#", " Valid", "ate", " features", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "features", " =", " [", "f", "\"", "x", "{", "i", "+", "1", "}\"", " for", " i", " in", " range", "(", "len", "(", "array", "[", "0", "]))", "]", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " len", "(", "array", "[", "0", "]", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "If", " '", "features", "'", " is", " provided", ",", " it", " must", " match", " the", " number", " of", " columns", " in", " '", "array", "'", "\"", ")", "\n", "\n", "    ", "#", " Seed", " random", " number", " generator", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "#", " Sh", "uffle", " columns", " and", " apply", " default", " colors", "cale", "\n", "    ", "sh", "uff", "led", "_", "columns", " =", " array", "[:", ",", " np", ".", "random", ".", "per", "mutation", "(", "len", "(", "array", "[", "0", "]))", "]", "\n", "\n", "    ", "#", " Create", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "sh", "uff", "led", "_", "columns", ",", "\n", "                ", "     ", "v", "min", "=", "0", ",", "\n", "                ", "     ", "v", "max", "=", "1", ",", "\n", "                ", "     ", "yt", "ick", "labels", "=", "features", ",", "\n", "                ", "     ", "xt", "ick", "labels", "=", "features"], "logprobs": [-1.6297416687011719, -2.974940299987793, -0.1933847814798355, -0.8689069747924805, -2.4238078594207764, -0.3589740991592407, -0.0020763759966939688, -0.1343284547328949, -1.7011950016021729, -0.00018702188390307128, -0.025666259229183197, -0.15784993767738342, -0.1504947394132614, -0.0010658780811354518, -0.0005820487276650965, -0.22283002734184265, -0.6992143988609314, -0.0006040894077159464, -0.026258645579218864, -0.00016199229867197573, -0.06396788358688354, 0.0, -2.3841855067985307e-07, -0.0008518642862327397, -8.463501580990851e-05, -0.009961534291505814, -0.008829598315060139, -0.0016855093417689204, -0.015347360633313656, -0.001057542278431356, -1.2636104656849056e-05, -0.2485409826040268, -0.08624367415904999, -1.421294093132019, -0.0033629550598561764, -0.0010604002745822072, -0.031810566782951355, -0.7978090643882751, -0.12759320437908173, -0.5350742340087891, -0.008474460802972317, -0.004654762800782919, -0.006315393373370171, -2.8371408916427754e-05, -2.099928140640259, -0.11604371666908264, -0.5717082619667053, -0.006160200573503971, -1.6225521564483643, -0.0003237200144212693, -0.000933807052206248, -0.1092810183763504, -0.0004033228906337172, -0.11608999967575073, -1.3695969581604004, -0.0019386084750294685, -0.93349689245224, -1.329249382019043, -0.0007828985108062625, -0.087264783680439, -0.02022290788590908, -0.2472812980413437, -1.826103687286377, -0.05536290258169174, -0.016603155061602592, -0.0005679901223629713, -0.21221502125263214, -0.006489868275821209, -0.4422271251678467, -0.5084742307662964, -0.19169239699840546, -2.757368326187134, -0.06256811320781708, -0.11994078010320663, -0.7604711651802063, -0.00048029806930571795, -0.008078282698988914, -0.0017314456636086106, -0.0004640932602342218, -0.0027959563303738832, -0.000952386180870235, -9.405170567333698e-05, -2.165374279022217, -0.00010227633902104571, -0.005326603073626757, -0.10318819433450699, -0.00086198840290308, -0.01698366366326809, -0.0004172646440565586, -0.018411919474601746, -0.06731805950403214, -0.37878480553627014, -0.016006426885724068, -3.576214658096433e-05, -0.014875679276883602, -8.654219709569588e-05, -0.004130167420953512, 0.0, -4.768370445162873e-07, -0.01682238094508648, -7.593343616463244e-05, -0.0007277462864294648, -0.0023756397422403097, -7.295342220459133e-05, -0.002590159885585308, -7.545663538621739e-05, -0.0015120989410206676, -0.0003935516288038343, -0.015074030496180058, -0.0013717536348849535, -1.3232143828645349e-05, -0.004171005450189114, -0.5673493146896362, -3.0185799598693848, -0.5749066472053528, -0.001085883704945445, -0.0010207447921857238, -0.018470317125320435, -0.18734832108020782, -0.015251797623932362, -0.059959519654512405, -0.011636949144303799, -0.4407663643360138, -0.009594046510756016, -0.0048590670339763165, -0.005164022091776133, -0.008577055297791958, -0.04109245911240578, -0.05913342162966728, -0.0012231733417138457, -0.011282099410891533, -0.06834720075130463, -0.0004994813934899867, -0.002307730494067073, -0.02899150177836418, -0.0007314390386454761, -0.07889911532402039, -2.7240519523620605, -1.5434117317199707, -0.24810045957565308, -0.013845236971974373, -0.2413187325000763, -0.0005003153928555548, -0.49023571610450745, -0.005540372803807259, -0.09268545359373093, -0.02857487089931965, -1.156323378381785e-05, -0.0012416280806064606, -0.0015217402251437306, -0.0002053765201708302, -0.0490858294069767, -6.365573790390044e-05, -0.00012861855793744326, -8.106198947643861e-06, -0.000732868502382189, -0.00011646069469861686, -0.0005993238883093, -0.0018450870411470532, -0.0008569859201088548, -0.01760018989443779, -0.0010548033751547337, -0.033264171332120895, -0.15407942235469818, -0.004664848558604717, -0.46165695786476135, -1.877850890159607, -4.34999418258667, -3.674417018890381, -3.9931681156158447, -0.7514422535896301, -0.5270177125930786, -0.0008187517523765564, -1.4524918794631958, -0.0266454815864563, -0.00629525538533926, -0.2802010476589203, -1.9107770919799805, -0.003153472673147917, -2.5914111137390137, -0.08989603817462921, -0.0006169561529532075, -0.019234800711274147, -0.0004917366313748062, -0.0042777229100465775, -1.0013530300057027e-05, -0.03986614570021629, -0.003269447945058346, -0.0001538873475510627, -0.3070700168609619, -5.483612312673358e-06, -0.016540424898266792, -0.003954567946493626, -9.512448741588742e-05, -0.00020287363440729678, -0.002190216211602092, -0.01311615388840437, -0.834010660648346, -0.00023147765023168176, -0.04520731419324875, -0.6313077211380005, -0.7855518460273743, -0.0032922611571848392, -1.837425708770752, -0.7710364460945129, -0.0007292948430404067, -2.4318398573086597e-05, -0.444827675819397, -0.00025328766787424684, -1.1862974166870117, -0.008910535834729671, -0.021306436508893967, -2.0265558760002023e-06, -1.6569954823353328e-05, -0.0017006233101710677, -6.115249561844394e-05, -0.00014625910262111574, -0.22133155167102814, -9.536697689327411e-06, -1.0967194612021558e-05, -1.597391747054644e-05, -1.4185804502631072e-05, -0.007108989637345076, -0.994876503944397, -0.023450413718819618, -0.12472610175609589, -2.3273916244506836, -0.015298289246857166, -0.034505970776081085, -1.158675193786621, -0.11524441838264465, -1.2565891742706299, -6.294052582234144e-05, -0.00021610308613162488, -0.0293824914842844, -0.00019012074335478246, -0.0007284610182978213, -0.045464787632226944, -0.04173615202307701, -0.012585149146616459, -0.0006059955921955407, -0.0004114258335903287, -2.711284875869751, -0.029830604791641235, -0.00015793983766343445, -0.014514575712382793, -0.06765981018543243, -0.043988097459077835, -0.0056894985027611256, -0.0003586364327929914, -0.0005349873681552708, -0.7805465459823608, -0.0005455912905745208, -1.2159273865108844e-05, -0.010955541394650936, -0.012111573480069637], "finish_reason": "length"}], "metrics": {"energy": 317.0843035802841, "energy_per_token": 1.2386105608604847, "time": 11.544871, "time_per_token": 0.04509715234375}}
{"outputs": [{"text": "if array.ndim != 2:\n        raise ValueError(f\"Invalid array dimensions: {array.ndim}\")\n\n    if seed is not None:\n        np.random.seed(seed)\n\n    if features is None:\n        # Generate numerical labels\n        n_columns = array.shape[1]\n        features = [f\"Column {i + 1}\" for i in range(n_columns)]\n    elif len(features) != array.shape[1]:\n        raise ValueError(f\"Invalid number of features: {len(features)}, expected {array.shape[1]}\")\n\n    # Shuffle the columns of the array\n    np.random.shuffle(array, axis=0)\n\n    # Create a heatmap using seaborn\n    fig, ax = plt.subplots()\n    sns.heatmap(\n        data=array,\n        ax=ax,\n        annot=True,\n        fmt=\"\",\n        square=True,\n        linewidths=.5,\n        linecolor=\"white\",\n        cbar=False,\n", "tokens": ["if", " array", ".", "nd", "im", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Invalid", " array", " dimensions", ":", " {", "array", ".", "nd", "im", "}\"", ")", "\n", "\n", "    ", "if", " seed", " is", " not", " None", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "\n", "    ", "if", " features", " is", " None", ":", "\n", "        ", "#", " Generate", " numerical", " labels", "\n", "        ", "n", "_", "columns", " =", " array", ".", "shape", "[", "1", "]", "\n", "        ", "features", " =", " [", "f", "\"", "Column", " {", "i", " +", " ", "1", "}\"", " for", " i", " in", " range", "(", "n", "_", "columns", ")]", "\n", "    ", "elif", " len", "(", "features", ")", " ", "!", "=", " array", ".", "shape", "[", "1", "]:", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Invalid", " number", " of", " features", ":", " {", "len", "(", "features", ")}", ",", " expected", " {", "array", ".", "shape", "[", "1", "]}", "\"", ")", "\n", "\n", "    ", "#", " Sh", "uffle", " the", " columns", " of", " the", " array", "\n", "    ", "np", ".", "random", ".", "sh", "uffle", "(", "array", ",", " axis", "=", "0", ")", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "fig", ",", " ax", " =", " plt", ".", "sub", "plots", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "\n", "        ", "data", "=", "array", ",", "\n", "        ", "ax", "=", "ax", ",", "\n", "        ", "annot", "=", "True", ",", "\n", "        ", "fmt", "=", "\"", "\"", ",", "\n", "        ", "square", "=", "True", ",", "\n", "        ", "linewidth", "s", "=", ".", "5", ",", "\n", "        ", "line", "color", "=", "\"", "white", "\"", ",", "\n", "        ", "c", "bar", "=", "False", ",", "\n"], "logprobs": [-0.8079642653465271, -1.4244707822799683, -0.02581845410168171, -0.4785267412662506, -0.00048137042904272676, -0.1689128428697586, -1.1920928244535389e-07, -5.245195097813848e-06, -0.0014449642039835453, -0.00024875884992070496, -0.16157323122024536, -0.02551078610122204, -0.0023057085927575827, -0.022851349785923958, -0.003789507318288088, -3.3854863431770355e-05, -0.24967855215072632, -1.892939805984497, -0.22084704041481018, -3.2546024322509766, -0.81464022397995, -1.8284987211227417, -0.617592453956604, -0.2900226414203644, -0.003950886894017458, -0.0006646093097515404, -0.09783187508583069, -0.00010251473577227443, -1.0625734329223633, -0.0004940004437230527, -0.006397837307304144, -1.0294405221939087, -0.00021765247220173478, -0.2473677694797516, -2.985490083694458, -0.26321941614151, -0.04913531243801117, -5.3881147323409095e-05, -0.004902366548776627, -0.006652825977653265, -0.000777776469476521, -0.11243368685245514, -0.0001438752660760656, -0.00017379203927703202, -2.062299427052494e-05, -0.0016300498973578215, -0.0003625689132604748, -0.0014815079048275948, -0.01406671479344368, -0.005465446040034294, -0.1069907695055008, -0.0002928543253801763, -0.37254875898361206, -0.05002731457352638, -0.07513440400362015, -0.4008018374443054, -0.012731462717056274, -0.013068854808807373, -0.0012504386249929667, -3.1948671340942383, -2.080078601837158, -1.9805876016616821, -0.3214915990829468, -2.3919010162353516, -0.00028689560713246465, -3.135352849960327, -0.3142927885055542, -1.6250243186950684, -0.00985164474695921, -0.10061144828796387, -0.0008261366747319698, -0.0013709203340113163, -0.007574646733701229, -0.008570672944188118, -7.319182623177767e-05, -0.005243596155196428, -0.009507378563284874, -0.2023293524980545, -0.003238910576328635, -0.21378988027572632, -0.2854600250720978, -0.031677182763814926, -1.7869389057159424, -0.1078823059797287, -0.15571634471416473, -1.085121750831604, -0.00030298411729745567, -4.5060096454108134e-05, -0.010724527761340141, -0.002739726100116968, -0.00045003299601376057, -0.00017331528943032026, -0.00025960413040593266, -3.0397906812140718e-05, -0.0022800182923674583, -3.576278118089249e-07, -1.9430925021879375e-05, -0.0008935510995797813, -0.002428203821182251, -0.9763853549957275, -0.4218894839286804, -0.024720152840018272, -2.372236667724792e-05, -0.0033339650835841894, -7.533743337262422e-05, -0.0032819239422678947, 0.0, -4.768370445162873e-07, -0.007059867028146982, -3.194758028257638e-05, -0.00026782741770148277, -0.001032772590406239, -0.0009058186551555991, -0.0016471878625452518, -0.0025200059171766043, -0.0005078217945992947, -0.037363070994615555, -0.0010383697226643562, -2.7418097943154862e-06, -0.0016568278660997748, -0.54254150390625, -0.0030280950013548136, -1.220840334892273, -0.4491152763366699, -0.0005516675882972777, -0.1546405851840973, -0.1113235354423523, -0.06165461987257004, -0.10438118129968643, -1.966933996300213e-05, -0.0005905076395720243, -0.002130740089341998, -2.5021510124206543, -0.2961324453353882, -0.06477178633213043, -0.006686100736260414, -0.00010263393050990999, -0.000553335587028414, -0.00032443503732793033, -0.002170351566746831, -0.0027712297160178423, -0.1881154328584671, -0.0002908283786382526, -0.0016649207100272179, -0.03646038472652435, -0.00044324109330773354, -0.7077543139457703, -0.29572659730911255, -0.015607119537889957, -0.7153593301773071, -0.14409217238426208, -1.264695644378662, -0.06681530177593231, -0.1748913675546646, -0.27664998173713684, -0.00038246947224251926, -2.707352638244629, -0.004707326181232929, -0.0006299418746493757, -7.390948667307384e-06, -0.0014260371681302786, -4.410734163684538e-06, -0.00015269544383045286, -0.19062009453773499, -0.06916695088148117, -0.09604588896036148, -0.004910314455628395, -0.36111071705818176, -0.03210164234042168, -0.0065736002288758755, -0.08719934523105621, -0.0001486429391661659, -0.2673451900482178, -0.6394485831260681, -0.3358687460422516, -0.8227001428604126, -0.008652577176690102, -1.5038822889328003, -0.8187170028686523, -0.0004683827864937484, -2.539125671319198e-05, -0.328025221824646, -0.00033563701435923576, -2.1490750312805176, -0.0491454117000103, -0.01530051976442337, -0.003113900311291218, -0.017115389928221703, -1.3947389561508317e-05, -0.00011514954530866817, -5.066266385256313e-05, -0.6608102321624756, -0.0007233387441374362, -0.02678336761891842, -0.08428379148244858, -3.194758028257638e-05, -0.001370087033137679, -0.016557427123188972, -7.903263758635148e-05, -8.844937838148326e-05, -1.811055302619934, -0.006236496847122908, -2.574218988418579, -0.0018944665789604187, -0.006870810873806477, -0.004827036056667566, -0.07696130126714706, -0.00019095504831057042, -1.0400139093399048, -0.00030751267331652343, -0.00015531764074694365, -0.00037055302527733147, -0.009454004466533661, -0.0004980515805073082, -0.9860818982124329, -0.0022807319182902575, -0.7774552702903748, -0.0027340196538716555, -0.05793478712439537, -0.0027212989516556263, -0.17817844450473785, -0.04632478579878807, -0.05297660082578659, -0.9745004773139954, -0.0016105312388390303, -0.024236582219600677, -0.0036923582665622234, -3.038135051727295, -0.0001161031104857102, -0.011450995691120625, -0.008089161477982998, -0.006880519445985556, -0.018036285415291786, -0.6577475666999817, -0.14939691126346588, -0.0007415643776766956, -0.8301060199737549, -0.0458265021443367, -0.005149316042661667, -0.01175324060022831, -0.022584376856684685, -1.2502577304840088, -0.03384838625788689, -0.13178369402885437, -0.004838780965656042, -0.4254850745201111, -2.9444261599564925e-05, -0.055363353341817856, -0.0018039158312603831, -0.0674053207039833, -1.0889923572540283, -0.003822284284979105, -0.6956337094306946, -0.09914873540401459, -0.07204310595989227, -0.013101917691528797], "finish_reason": "length"}], "metrics": {"energy": 331.66958058738714, "energy_per_token": 1.295584299169481, "time": 12.600949, "time_per_token": 0.04922245703125}}
