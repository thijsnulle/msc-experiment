{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -1.8466919660568237, -0.0029498895164579153, -0.8374051451683044, -0.00817299634218216, -0.00028224775451235473, -0.0012430568458512425], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -2.4795777797698975, -0.1417645961046219, -0.2349005788564682, -0.005060364492237568, -0.00032646095496602356, -0.0014703187625855207], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.465196967124939, -0.0065645999275147915, -0.09412141144275665, -0.007117393426597118, -0.004211010877043009], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -0.3789644241333008, -0.2589721977710724, -0.07552379369735718, -0.5003394484519958, -0.0028556303586810827, -0.00723847234621644, -0.1949659138917923, -0.02440784126520157, -0.015192858874797821, -0.046466927975416183, -0.19293352961540222, -0.7789281010627747, -0.3089091181755066, -0.06653493642807007, -0.0032626751344650984, -0.0006569849792867899, -0.0010183630511164665], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005821678787469864, -6.794698856538162e-05, -7.152555099310121e-07, -0.010691032744944096, -0.019248249009251595], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05982489883899689, -1.1920928244535389e-07, -1.728519782773219e-05, -0.0016680150292813778, -0.005101164802908897, -0.00019369633810129017, -0.000341476290486753, -0.005372609477490187, -0.06885976344347, -0.012495444156229496], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components, svd_solver=\"full\")", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ",", " s", "vd", "_", "s", "olver", "=", "\"", "full", "\"", ")", "\n"], "logprobs": [-0.0011897159274667501, -0.0012694880133494735, -0.009718249551951885, -4.660974445869215e-05, -0.0001262346631847322, -0.015203190967440605, -0.0050469618290662766, -3.9934315282152966e-05, -9.059865078597795e-06, -1.7466013431549072, -0.5317566990852356, -0.013596427626907825, -8.344646857949556e-07, -0.00022301571152638644, -0.008446918800473213, -2.273426055908203, -0.0013500871136784554, -0.06440792232751846, -7.807903602952138e-05, -0.5211928486824036, -0.03201978653669357], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010745285078883171, -4.5060096454108134e-05, -8.391981828026474e-05, -0.0004938812926411629, -0.007880785502493382, -2.1576648578047752e-05, -0.0001333863037871197, -0.002203062642365694, -0.006347376853227615, -3.933898824470816e-06, -2.0265558760002023e-06, -0.003144441172480583, -0.011075684800744057], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=['PC'+str(i) for i in range(1, n_components+1)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=['", "PC", "'+", "str", "(", "i", ")", " for", " i", " in", " range", "(", "1", ",", " n", "_", "components", "+", "1", ")]", ")"], "logprobs": [-0.08896595984697342, -1.1205610462639015e-05, -0.0010356307029724121, -0.003311034059152007, -0.01780385710299015, -0.06323797255754471, -0.0004748170613311231, -0.32377293705940247, -0.10272875428199768, -2.3402304649353027, -1.3968695402145386, -1.396156907081604, -0.04842924699187279, -0.005549501162022352, -0.14114876091480255, -0.41148632764816284, -0.07287667691707611, -0.0003461238811723888, -0.009486123919487, -0.005628096405416727, -0.0013606823049485683, -0.46716341376304626, -0.00030751267331652343, -0.23593391478061676, -0.0013431822881102562, -2.109982233378105e-05, -0.14572396874427795, -0.00031799983116798103, -0.0039285640232264996, -0.45292145013809204], "finish_reason": "stop"}], "metrics": {"energy": 258.3733359203339, "energy_per_token": 1.6998245784232493, "time": 9.88138, "time_per_token": 0.06500907894736842}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.9831831455230713, -0.0002623452164698392, -0.0008681819308549166], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.8583299517631531, -0.14442889392375946, -0.00984704028815031, -1.0172008275985718, -0.01688380353152752, -0.03212830796837807], "finish_reason": "stop"}, {"text": " ValueError(\"Data cannot have non-numeric columns\")", "tokens": [" Value", "Error", "(", "\"", "Data", " cannot", " have", " non", "-", "numeric", " columns", "\"", ")", "\n"], "logprobs": [-0.0021928329952061176, -7.033323527139146e-06, -0.031172120943665504, -0.022837018594145775, -1.5974141359329224, -3.4857726097106934, -2.6646931171417236, -0.06817873567342758, -0.02086907997727394, -0.09778722375631332, -1.6362797021865845, -2.6180968284606934, -0.0012335318606346846, -0.005506822373718023], "finish_reason": "stop"}, {"text": " len(data.columns) < n_components:", "tokens": [" len", "(", "data", ".", "columns", ")", " <", " n", "_", "components", ":", "\n"], "logprobs": [-1.0727183818817139, -0.00036137725692242384, -0.004296951927244663, -1.3317546844482422, -0.04516333341598511, -0.005143742077052593, -0.6584777235984802, -0.3427295684814453, -6.961580220377073e-05, -1.2040065485052764e-05, -0.023467065766453743, -0.0026227382477372885], "finish_reason": "stop"}, {"text": " ValueError(f\"n_components can not be greater than the number of columns. n_components: {n_components}, number of columns: {len(data.columns)}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "n", "_", "components", " can", " not", " be", " greater", " than", " the", " number", " of", " columns", ".", " n", "_", "components", ":", " {", "n", "_", "components", "}", ",", " number", " of", " columns", ":", " {", "len", "(", "data", ".", "columns", ")}", ".", "\"", ")", "\n"], "logprobs": [-0.00042798896902240813, -2.5033637939486653e-05, -0.014540658332407475, -2.229640007019043, -0.02021554857492447, -0.4267551004886627, -0.002618101192638278, -0.0035669293720275164, -3.373570680618286, -0.6820425391197205, -0.08177535235881805, -0.35195714235305786, -0.012439992278814316, -0.4505355656147003, -0.041794002056121826, -0.013238390907645226, -0.038053806871175766, -2.6865909099578857, -2.8003478050231934, -0.031098512932658195, -0.015005686320364475, -1.0033586025238037, -0.14348271489143372, -0.006147760432213545, -4.660974445869215e-05, -0.0003660247311927378, -0.08558423817157745, -0.22777044773101807, -1.1405593156814575, -0.020840710029006004, -0.017713798210024834, -0.0667446032166481, -0.020833471789956093, -0.01284197811037302, -0.00034350217902101576, -0.000935950840357691, -0.007149824406951666, -0.002140494529157877, -0.002419760450720787, -2.0045461654663086, -0.026077480986714363, -0.0018411604687571526, -0.0009765623253770173], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006249382277019322, -6.580135959666222e-05, -8.344646857949556e-07, -0.00979510135948658, -0.019088266417384148], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.copy())", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "copy", "())", "\n"], "logprobs": [-0.04789053648710251, -1.1920928244535389e-07, -2.3364747903542593e-05, -0.0024246361572295427, -0.006251660641282797, -0.00018952481332235038, -0.0003364712174516171, -0.008270775899291039, -3.025402069091797, -2.1114680767059326, -0.020533490926027298, -0.017345048487186432], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012528197839856148, -0.0012287693098187447, -0.009022891521453857, -4.2437604861333966e-05, -0.00013207517622504383, -0.013389196246862411, -0.004819443449378014, -3.1470757676288486e-05, -7.033323527139146e-06, -0.17750568687915802, -0.017960531637072563], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.008705757558345795, -6.723177648382261e-05, -6.806619057897478e-05, -0.0005194983095861971, -0.009235636331140995, -2.002696055569686e-05, -0.00015078838623594493, -0.0020493713673204184, -0.006566612981259823, -4.291525328881107e-06, -2.0265558760002023e-06, -0.0033433514181524515, -0.012295638211071491], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-0.07810031622648239, -9.298280929215252e-06, -0.0008497203234583139, -0.003989120479673147, -0.020234240218997, -0.07205663621425629, -0.00029059001826681197, -0.35443660616874695, -0.10651839524507523, -0.6240280270576477, -0.21761126816272736, -0.030503669753670692, -0.005229840520769358, -0.47923538088798523, -0.31519970297813416], "finish_reason": "stop"}], "metrics": {"energy": 256.1497737846373, "energy_per_token": 1.6419857293887008, "time": 10.313331, "time_per_token": 0.06611109615384615}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -1.8466919660568237, -0.0029498895164579153, -0.6853188872337341, -0.00020680672605521977, -0.001142564113251865], "finish_reason": "stop"}, {"text": " data.isna().values.any():", "tokens": [" data", ".", "is", "na", "()", ".", "values", ".", "any", "():", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -2.2812469005584717, -0.9785143136978149, -0.004023671615868807, -0.00016962042718660086, -1.0139873027801514, -0.0008880723617039621, -0.019526401534676552, -0.11012610048055649, -0.012230753898620605], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -1.7263071537017822, -0.01529746688902378, -0.0058433422818779945, -0.05458559840917587, -0.13682818412780762, -0.061677709221839905, -0.008817191235721111, -0.0002805792901199311, -0.0018649582052603364], "finish_reason": "stop"}, {"text": " len(data.columns) == 0:", "tokens": [" len", "(", "data", ".", "columns", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -1.177164077758789, -0.03320547565817833, -0.00427202507853508, -1.5920307636260986, -0.029227364808321, -0.00833355262875557, -0.11783347278833389, -0.012223570607602596], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -1.2418763637542725, -0.07316534966230392, -0.13930363953113556, -0.00224374164827168, -0.14116553962230682, -0.016472650691866875, -0.007288059685379267, -0.018837716430425644, -2.0947234630584717, -0.0040461113676428795, -0.0004377598816063255, -0.0006890306831337512], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005918181850574911, -5.745722592109814e-05, -1.0728830375228426e-06, -0.008916324935853481, -0.021494649350643158], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.046716224402189255, -1.1920928244535389e-07, -1.7881233361549675e-05, -0.001836043898947537, -0.006589232943952084, -0.00016008525562938303, -0.0003054867556784302, -0.005961375776678324, -0.06824220716953278, -0.011573318392038345], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012519863666966558, -0.0016814630944281816, -0.008907227776944637, -4.541770613286644e-05, -0.00016199229867197573, -0.013881330378353596, -0.0048345099203288555, -3.45700973412022e-05, -8.4638240878121e-06, -0.18765191733837128, -0.02489330619573593], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.012478608638048172, -5.185469490243122e-05, -6.925819616299123e-05, -0.0004903068183921278, -0.009619549848139286, -2.0503786799963564e-05, -0.00013934595335740596, -0.0024969372898340225, -0.006172403693199158, -4.0531076592742465e-06, -2.264974000354414e-06, -0.002812479855492711, -0.010673695243895054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns, index=data.index)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ",", " index", "=", "data", ".", "index", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.06583636999130249, -1.0371154530730564e-05, -0.0009560781763866544, -0.003759104758501053, -0.018717683851718903, -0.06754928827285767, -0.00032264748006127775, -0.36977359652519226, -0.08951722085475922, -0.7463521361351013, -0.3176305592060089, -0.032123226672410965, -0.006262322422116995, -2.051806688308716, -0.023634031414985657, -0.0024159548338502645, -0.004581549670547247, -0.0016813441179692745, -0.000324673397699371, -1.406619906425476, -2.3841855067985307e-07, -1.7881377516459906e-06, -4.684815212385729e-05, -0.00026854246971197426, -0.10471361875534058], "finish_reason": "stop"}], "metrics": {"energy": 217.38092584514618, "energy_per_token": 1.5201463345814419, "time": 9.481968, "time_per_token": 0.06630746853146853}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"input data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -3.0665535926818848, -0.167496457695961, -0.9355159997940063, -0.003790338756516576, -0.057476699352264404, -0.4728524088859558, -0.029729703441262245, -0.003884865902364254, -0.09726668149232864, -0.0005441615357995033, -0.001042656716890633], "finish_reason": "stop"}, {"text": " data.isnull().any().any():", "tokens": [" data", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -2.2812469005584717, -0.4823843538761139, -0.0025064502842724323, -0.00017486473370809108, -0.5328165292739868, -0.09524224698543549, -0.012995902448892593, -0.04035790637135506, -0.012322014197707176, -0.023439817130565643], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -2.4795777797698975, -0.1417645961046219, -0.2349005788564682, -0.005060364492237568, -0.00032646095496602356, -0.0014703187625855207], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.465196967124939, -0.0065645999275147915, -0.09412141144275665, -0.007117393426597118, -0.004211010877043009], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -1.1593561172485352, -0.1646534949541092, -0.10174141079187393, -0.005297788418829441, -0.20011897385120392, -0.01928870752453804, -0.009741506539285183, -0.02347416803240776, -0.16271674633026123, -0.6786483526229858, -0.19927945733070374, -0.053736742585897446, -0.003644730430096388, -0.0007588367443531752, -0.0007138088112697005], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0007191693875938654, -5.3881147323409095e-05, -8.344646857949556e-07, -0.007786990143358707, -0.02524731121957302], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05248309299349785, -1.1920928244535389e-07, -2.276871418871451e-05, -0.0016346914926543832, -0.007485555484890938, -0.00020323118951637298, -0.0003420721332076937, -0.006123827304691076, -0.06466362625360489, -0.014117375016212463], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components, svd_solver='full')", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ",", " s", "vd", "_", "s", "olver", "='", "full", "')", "\n"], "logprobs": [-0.0012959185987710953, -0.001500672078691423, -0.009217211045324802, -3.8265450712060556e-05, -0.00013076403411105275, -0.015940845012664795, -0.005153348669409752, -3.8980677345534787e-05, -8.940656698541716e-06, -1.6763577461242676, -0.5616604685783386, -0.012659073807299137, -5.960462772236497e-07, -0.00047291061491705477, -0.00952780619263649, -0.11068695038557053, -0.057209353893995285, -0.3520737588405609, -0.03757687285542488], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.011612322181463242, -6.067568756407127e-05, -6.031808152329177e-05, -0.0005365362740121782, -0.011608433909714222, -2.098061486321967e-05, -0.0001501924270996824, -0.001658851164393127, -0.008178080432116985, -4.529942543740617e-06, -2.0265558760002023e-06, -0.0034244961570948362, -0.011380989104509354], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.09062091261148453, -9.894321920000948e-06, -0.0008723505889065564, -0.004733903333544731, -0.020451154559850693, -0.0696527361869812, -0.0003511289251036942, -2.23315167427063, -3.576278118089249e-07, -3.4570634852570947e-06, -5.6265202147187665e-05, -0.0002806984703056514, -0.12002123892307281], "finish_reason": "stop"}], "metrics": {"energy": 248.02202335357674, "energy_per_token": 1.7972610387940344, "time": 9.262207, "time_per_token": 0.06711744202898551}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -1.5107440948486328, -0.004321759566664696, -0.8384238481521606, -0.013642290607094765, -0.0002797450579237193, -0.0012321030953899026], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should contain numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " contain", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -2.8393471240997314, -0.12629596889019012, -0.7698000073432922, -0.44135844707489014, -1.327589750289917, -0.35778310894966125, -0.37919363379478455, -0.0072693610563874245, -0.00031728477915748954, -0.0013805630151182413], "finish_reason": "stop"}, {"text": " len(data.columns) < n_components:", "tokens": [" len", "(", "data", ".", "columns", ")", " <", " n", "_", "components", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -1.177164077758789, -0.03320547565817833, -0.00427202507853508, -0.7576477527618408, -0.372876912355423, -6.842378934379667e-05, -1.0251946150674485e-05, -0.026786617934703827, -0.0026679181028157473], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -1.1593561172485352, -0.1646534949541092, -0.10174141079187393, -0.005297788418829441, -0.20011897385120392, -0.01928870752453804, -0.009741506539285183, -0.02347416803240776, -0.16271674633026123, -0.6786483526229858, -0.19927945733070374, -0.053736742585897446, -0.003644730430096388, -0.0007588367443531752, -0.0007138088112697005], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0007191693875938654, -5.3881147323409095e-05, -8.344646857949556e-07, -0.007786990143358707, -0.02524731121957302], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05248309299349785, -1.1920928244535389e-07, -2.276871418871451e-05, -0.0016346914926543832, -0.007485555484890938, -0.00020323118951637298, -0.0003420721332076937, -0.006123827304691076, -0.06466362625360489, -0.014117375016212463], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012959185987710953, -0.001500672078691423, -0.009217211045324802, -3.8265450712060556e-05, -0.00013076403411105275, -0.015940845012664795, -0.005153348669409752, -3.8980677345534787e-05, -8.940656698541716e-06, -0.2084851861000061, -0.023687703534960747], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.011612322181463242, -6.067568756407127e-05, -6.031808152329177e-05, -0.0005365362740121782, -0.011608433909714222, -2.098061486321967e-05, -0.0001501924270996824, -0.001658851164393127, -0.008178080432116985, -4.529942543740617e-06, -2.0265558760002023e-06, -0.0034244961570948362, -0.011380989104509354], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=[f\"PC{i+1}\" for i in range(n_components)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=[", "f", "\"", "PC", "{", "i", "+", "1", "}\"", " for", " i", " in", " range", "(", "n", "_", "components", ")]", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.09062091261148453, -9.894321920000948e-06, -0.0008723505889065564, -0.004733903333544731, -0.020451154559850693, -0.0696527361869812, -0.0003511289251036942, -0.32678714394569397, -0.0885080099105835, -0.8671495914459229, -0.4269869923591614, -0.3931424021720886, -0.750193178653717, -0.16318416595458984, -0.06230705976486206, -1.2995976209640503, -0.0005785936955362558, -0.0231695044785738, -0.018820870667696, -9.405170567333698e-05, -0.007914019748568535, -0.0012830605264753103, -0.0004415729199536145, -0.11310770362615585, -3.075552376685664e-05, -6.437280717364047e-06, -0.0019014865392819047, -1.2940093278884888, -1.1920928244535389e-07, -4.172316494077677e-06, -6.961580220377073e-05, -0.00024136967840604484, -0.13385725021362305], "finish_reason": "stop"}], "metrics": {"energy": 224.40288635253896, "energy_per_token": 1.4861118301492646, "time": 9.889799, "time_per_token": 0.06549535761589403}}
{"outputs": [{"text": " isinstance(data, pd.DataFrame):", "tokens": [" isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-2.902240037918091, -0.00022313489171210676, -0.007622087839990854, -0.0005372511222958565, -0.0757116973400116, -6.007967749610543e-05, -0.0943213626742363, -0.45386451482772827, -0.011414696462452412], "finish_reason": "stop"}, {"text": " ValueError(f\"Input data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -2.164577007293701, -0.14939577877521515, -0.48058024048805237, -0.11662152409553528, -1.5702528953552246, -0.05259925499558449, -0.04282175749540329, -0.41731759905815125, -0.007355158217251301, -1.5070158243179321, -0.0008472190820612013, -0.0013861581683158875], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.8688218593597412, -0.1716586947441101, -0.009896144270896912, -0.973152220249176, -0.017419442534446716, -0.02949615940451622], "finish_reason": "stop"}, {"text": " ValueError(\"Input data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00221519498154521, -5.602820692729438e-06, -0.03461733087897301, -0.023372391238808632, -2.785261631011963, -0.12105365842580795, -1.1516830921173096, -0.012403728440403938, -0.0051009273156523705, -0.08711575716733932, -0.2934935390949249, -0.07168631255626678, -0.010984192602336407, -0.0003090619284193963, -0.0015493544051423669], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.5751063823699951, -0.007783204782754183, -0.08264794200658798, -0.006021216977387667, -0.0039240517653524876], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.000460876093711704, -2.5987286790041253e-05, -0.013444477692246437, -0.1489000916481018, -0.21953770518302917, -0.001465438399463892, -0.0027890612836927176, -1.374224066734314, -0.0649699792265892, -0.14418722689151764, -0.0023611304350197315, -0.12880294024944305, -0.01572611927986145, -0.007408170960843563, -0.022108400240540504, -0.14219310879707336, -0.5806478261947632, -0.2585078179836273, -0.046250805258750916, -0.003922745585441589, -0.000731558189727366, -0.0006834316882304847], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005989664932712913, -6.139089964563027e-05, -8.344646857949556e-07, -0.007854055613279343, -0.018906502053141594], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.0719723328948021, -1.1920928244535389e-07, -1.9192511899746023e-05, -0.001803796854801476, -0.006527767516672611, -0.0002083561266772449, -0.0003295593778602779, -0.00649211835116148, -0.07251475006341934, -0.013322383165359497], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012322221882641315, -0.0017133570509031415, -0.010401798412203789, -3.909988299710676e-05, -0.0001517419150331989, -0.015172546729445457, -0.004727615043520927, -2.753696753643453e-05, -7.748573807475623e-06, -0.14310838282108307, -0.021859074011445045], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.008672312833368778, -5.519237674889155e-05, -6.139089964563027e-05, -0.0004673104267567396, -0.008764843456447124, -2.0861407392658293e-05, -0.00016497205069754273, -0.002058055717498064, -0.006164228543639183, -4.291525328881107e-06, -2.145764938177308e-06, -0.0032567339949309826, -0.012253010645508766], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, index=data.index, columns=[f\"{i:.4f}\" for i in pca.explained_variance_ratio_])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " index", "=", "data", ".", "index", ",", " columns", "=[", "f", "\"", "{", "i", ":", ".", "4", "f", "}\"", " for", " i", " in", " p", "ca", ".", "expl", "ained", "_", "variance", "_", "ratio", "_", "])"], "logprobs": [-0.07799942791461945, -9.179073458653875e-06, -0.0008778294431976974, -0.0036231130361557007, -0.017468174919486046, -0.07358219474554062, -0.00035386974923312664, -0.3212606906890869, -2.6343727111816406, -0.0033555887639522552, -0.003668722929432988, -0.0035200081765651703, -0.0004294188693165779, -0.08547075092792511, -0.025164546445012093, -0.7291005253791809, -0.35505011677742004, -0.6030219793319702, -2.947873830795288, -0.6138517260551453, -1.038063645362854, -0.1629648208618164, -2.1769521236419678, -0.497001588344574, -0.004525419790297747, -0.01833888702094555, -0.0006992755807004869, -0.001453653909265995, -0.400784432888031, -8.451581379631534e-05, -0.00013493580627255142, -0.9131017923355103, -0.0002674698771443218, -3.576278118089249e-07, -0.029926056042313576, -0.0006789048202335835, -0.0717262551188469, -0.0013825867790728807, -0.03477611392736435], "finish_reason": "stop"}], "metrics": {"energy": 223.93820997238151, "energy_per_token": 1.4929213998158768, "time": 9.888929, "time_per_token": 0.06592619333333333}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data should be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -1.499009132385254, -0.0031047496013343334, -0.09835223108530045, -0.24805152416229248, -0.03350017964839935, -0.004358435980975628, -0.5202121734619141, -0.0007295330869965255], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.8456960916519165, -0.0060431379824876785, -0.12069502472877502, -0.013675921596586704, -0.0152124660089612], "finish_reason": "stop"}, {"text": " ValueError(\"Data must be numeric.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " be", " numeric", ".", "\"", ")", "\n"], "logprobs": [-0.002207106677815318, -5.483612312673358e-06, -0.0368742011487484, -0.028253333643078804, -1.7377099990844727, -2.717395305633545, -2.0173799991607666, -0.35357698798179626, -0.15839159488677979, -0.0077925496734678745, -0.000284154579276219, -0.0012422234285622835], "finish_reason": "stop"}, {"text": " not data.shape[1] >= n_components:", "tokens": [" not", " data", ".", "shape", "[", "1", "]", " >=", " n", "_", "components", ":", "\n"], "logprobs": [-1.3403234481811523, -0.19490647315979004, -0.046163272112607956, -2.1026368141174316, -0.006750516593456268, -0.29010137915611267, -0.8745003938674927, -0.6875463724136353, -0.03298243135213852, -4.756337511935271e-05, -4.410734163684538e-06, -0.0329524427652359, -0.005129747558385134], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot exceed the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " exceed", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003911683743353933, -2.5510462364763953e-05, -0.011808141134679317, -0.18607380986213684, -0.23743607103824615, -0.0016656348016113043, -0.0024207117967307568, -1.199904441833496, -2.9131476879119873, -0.3070012629032135, -0.021113518625497818, -0.0013952055014669895, -0.01919890008866787, -0.1113799586892128, -0.6535283327102661, -0.3357905447483063, -0.04839165508747101, -0.003267190419137478, -0.0004928089329041541, -0.0007425173535011709], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006326819420792162, -6.317892984952778e-05, -7.152555099310121e-07, -0.006564836483448744, -0.02360457554459572], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.044837284833192825, -1.1920928244535389e-07, -2.2291887944447808e-05, -0.002223640214651823, -0.006653773132711649, -0.00022492263815365732, -0.00033504117163829505, -0.00718580512329936, -0.0664057731628418, -0.013529393821954727], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0013141338713467121, -0.001320086419582367, -0.009498050436377525, -4.9470632802695036e-05, -0.00014077626110520214, -0.020904920995235443, -0.005384940654039383, -2.825220326485578e-05, -7.629365427419543e-06, -0.18030542135238647, -0.019692158326506615], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010798590257763863, -6.05564855504781e-05, -7.974783511599526e-05, -0.0004850641416851431, -0.007471475284546614, -1.8358061424805783e-05, -0.00015138434537220746, -0.001779640675522387, -0.005285337567329407, -2.622600959512056e-06, -2.264974000354414e-06, -0.0030808625742793083, -0.01298943068832159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=list(range(n_components)))", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "list", "(", "range", "(", "n", "_", "components", ")))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.06381332874298096, -9.65590606938349e-06, -0.0009803733555600047, -0.003934263251721859, -0.021715372800827026, -0.08176590502262115, -0.00030620177858509123, -0.316769003868103, -0.10406529158353806, -0.7227982878684998, -2.67221999168396, -0.00552982185035944, -1.9110627174377441, -0.00040415700641460717, -0.1419384926557541, -2.4676019165781327e-05, -7.867782187531702e-06, -0.023196294903755188, -2.002922534942627, -3.576278118089249e-07, -1.311301275563892e-06, -4.672895011026412e-05, -0.0003412379592191428, -0.1444295048713684], "finish_reason": "stop"}], "metrics": {"energy": 278.811503414154, "energy_per_token": 2.050084583927603, "time": 10.312605, "time_per_token": 0.07582797794117646}}
{"outputs": [{"text": " isinstance(data, pd.DataFrame) and data.isna().sum().sum() == 0:", "tokens": [" isinstance", "(", "data", ",", " pd", ".", "DataFrame", ")", " and", " data", ".", "is", "na", "()", ".", "sum", "()", ".", "sum", "()", " ==", " ", "0", ":", "\n"], "logprobs": [-2.902240037918091, -0.00022313489171210676, -0.007622087839990854, -0.0005372511222958565, -0.0757116973400116, -6.007967749610543e-05, -0.0943213626742363, -1.008674144744873, -0.993568480014801, -0.34401872754096985, -0.010823708958923817, -2.3791699409484863, -1.1640496253967285, -0.0014894831692799926, -0.00038187362952157855, -1.5155658721923828, -0.012044087052345276, -0.5786623954772949, -0.05374035984277725, -0.007627647835761309, -0.04233749210834503, -0.015810489654541016, -0.0005601267330348492, -0.07072769105434418, -0.029171211645007133], "finish_reason": "stop"}, {"text": " ValueError('Input data is not a DataFrame.')", "tokens": [" Value", "Error", "('", "Input", " data", " is", " not", " a", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -1.2635831832885742, -0.0050723436288535595, -0.02086896263062954, -0.3987284302711487, -0.0038631348870694637, -1.1108125448226929, -0.03617172688245773, -0.0011470888275653124], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.8456960916519165, -0.0060431379824876785, -0.12069502472877502, -0.013675921596586704, -0.0152124660089612], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.002207106677815318, -5.483612312673358e-06, -0.0368742011487484, -0.028253333643078804, -0.5411272048950195, -0.291095107793808, -0.34725746512413025, -0.7815200090408325, -0.16550934314727783, -0.33895185589790344, -0.033198095858097076, -0.004625573288649321, -0.0003424296446610242, -0.001303061842918396], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.0344419479370117, -0.0003713871701620519, -0.00468157883733511, -0.3681327998638153, -0.18754024803638458, -0.00038342276820912957, -0.00020680672605521977, -0.00492016039788723, -0.006014581304043531], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less or equal to the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " or", " equal", " to", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0003911683743353933, -2.5510462364763953e-05, -0.011808141134679317, -0.18607380986213684, -0.23743607103824615, -0.0016656348016113043, -0.0024207117967307568, -0.5242471098899841, -0.4683733880519867, -0.23634198307991028, -2.7555339336395264, -0.005107450764626265, -0.18472206592559814, -0.3194713890552521, -0.032110992819070816, -0.010857788845896721, -0.05260751023888588, -1.8606667518615723, -0.0038221655413508415, -0.0007257211836986244, -0.0008653233526274562], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006198153714649379, -6.496695277746767e-05, -8.344646857949556e-07, -0.008410392329096794, -0.02259824611246586], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04161037132143974, -1.1920928244535389e-07, -1.8358061424805783e-05, -0.0015595904551446438, -0.0073158699087798595, -0.00016783259343355894, -0.00033480284037068486, -0.0083664171397686, -0.0622112862765789, -0.017951983958482742], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012181727215647697, -0.0014592485968023539, -0.010207001119852066, -4.207999518257566e-05, -0.0001445904199499637, -0.014661428518593311, -0.004937953781336546, -2.6702524337451905e-05, -7.510157047363464e-06, -0.1485842913389206, -0.024117078632116318], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010438487865030766, -6.270212179515511e-05, -6.305972783593461e-05, -0.000481132126878947, -0.009287132881581783, -2.074220174108632e-05, -0.00014923889830242842, -0.002035809215158224, -0.005954384338110685, -3.3378546504536644e-06, -2.50339189733495e-06, -0.002978771459311247, -0.011298130266368389], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.07194914668798447, -1.1920858014491387e-05, -0.0008727079257369041, -0.004339089151471853, -0.018551180139183998, -0.05975853651762009, -0.00036971885128878057, -1.7451287508010864], "finish_reason": "stop"}], "metrics": {"energy": 237.59513353919976, "energy_per_token": 1.7730980114865653, "time": 9.287917, "time_per_token": 0.06931281343283582}}
{"outputs": [{"text": " type(data) == pd.core.generic.NDFrame:", "tokens": [" type", "(", "data", ")", " ==", " pd", ".", "core", ".", "generic", ".", "ND", "Frame", ":", "\n"], "logprobs": [-2.9519760608673096, -0.00036006642039865255, -0.0187899861484766, -0.0007113072206266224, -3.3483545780181885, -0.2510688602924347, -0.0001497156627010554, -1.2313835620880127, -0.000248043768806383, -1.673257827758789, -0.0006300609675236046, -0.09827303886413574, -0.006372370757162571, -0.06240953877568245, -0.03617356717586517], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -1.8466919660568237, -0.0029498895164579153, -0.8374051451683044, -0.00817299634218216, -0.00028224775451235473, -0.0012430568458512425], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -0.7618539333343506, -0.15957044064998627, -1.8483070135116577, -0.0457233302295208, -0.003945306409150362, -0.0002901133266277611, -0.0009380945703014731], "finish_reason": "stop"}, {"text": " n_components > len(data.columns):", "tokens": [" n", "_", "components", " >", " len", "(", "data", ".", "columns", "):", "\n"], "logprobs": [-2.127842426300049, -0.0002851079625543207, -8.34461570775602e-06, -0.21148431301116943, -0.8729777336120605, -0.00017855956684798002, -0.01390425581485033, -0.009331775829195976, -0.007061405573040247, -0.01678217388689518, -0.002466971054673195], "finish_reason": "stop"}, {"text": " ValueError(f\"n_components should be less than the number of columns in the data. Got {n_components}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "n", "_", "components", " should", " be", " less", " than", " the", " number", " of", " columns", " in", " the", " data", ".", " Got", " {", "n", "_", "components", "}", ".", "\"", ")", "\n"], "logprobs": [-0.0005155664402991533, -2.2411095415009186e-05, -0.0131207425147295, -2.0232093334198, -0.020042868331074715, -0.4492010176181793, -0.0027599360328167677, -0.0034487314987927675, -0.5294243693351746, -0.273325115442276, -0.28740543127059937, -0.09179896861314774, -1.6299469470977783, -0.04497291520237923, -0.0063666850328445435, -0.03760373964905739, -0.30133160948753357, -0.837401270866394, -0.27194714546203613, -0.5517299175262451, -3.05248761177063, -0.2918666899204254, -0.05019307881593704, -0.000169382052263245, -0.0003587556129787117, -0.07180503755807877, -0.8956881761550903, -0.027034256607294083, -0.0011233931872993708, -0.0023783750366419554], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005881248507648706, -5.793403761344962e-05, -8.344646857949556e-07, -0.007901719771325588, -0.021654246374964714], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.046472277492284775, -1.1920928244535389e-07, -2.0146166207268834e-05, -0.0016137446509674191, -0.007158464752137661, -0.00017093151109293103, -0.000366263062460348, -0.007262023631483316, -0.07058839499950409, -0.014619254507124424], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.001210909802466631, -0.0013958006165921688, -0.010081796906888485, -4.017272294731811e-05, -0.00015948931104503572, -0.019274676218628883, -0.005504806991666555, -3.58813522325363e-05, -7.748573807475623e-06, -0.16255980730056763, -0.02175293304026127], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.011575911194086075, -4.565611743601039e-05, -6.937739817658439e-05, -0.0005277194431982934, -0.007852636277675629, -2.3364747903542593e-05, -0.0001525762490928173, -0.002574583748355508, -0.008771343156695366, -3.933898824470816e-06, -2.264974000354414e-06, -0.002964865416288376, -0.011028525419533253], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns, index=data.index)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ",", " index", "=", "data", ".", "index", ")", "\n"], "logprobs": [-0.07425324618816376, -1.0251946150674485e-05, -0.0009390473715029657, -0.0028567002154886723, -0.018699899315834045, -0.0760083869099617, -0.0003762729174923152, -0.338901549577713, -0.09848900884389877, -0.838482141494751, -0.28154006600379944, -0.030874650925397873, -0.005416242405772209, -2.004610061645508, -0.02388733997941017, -0.002859077649191022, -0.004596382845193148, -0.0014972201315686107, -0.0002711643755901605, -0.2625894248485565, -0.38232752680778503], "finish_reason": "stop"}], "metrics": {"energy": 203.1861298389435, "energy_per_token": 1.3545741989262898, "time": 9.467005, "time_per_token": 0.06311336666666667}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -0.2943362891674042, -0.023769425228238106, -0.0038267967756837606, -0.623973548412323, -0.008859019726514816, -0.000276765669696033, -0.001348063233308494], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -0.7618539333343506, -0.15957044064998627, -0.2792457640171051, -0.034866031259298325, -0.0043884641490876675, -0.0003297977091278881, -0.0014181805308908224], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -0.3746337294578552, -0.187269926071167, -0.0004359725280664861, -0.00021717573690693825, -0.006145983003079891, -0.006166124250739813], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -1.1593561172485352, -0.1646534949541092, -0.10174141079187393, -0.005297788418829441, -0.20011897385120392, -0.01928870752453804, -0.009741506539285183, -0.02347416803240776, -0.16271674633026123, -0.6786483526229858, -0.19927945733070374, -0.053736742585897446, -0.003644730430096388, -0.0007588367443531752, -0.0007138088112697005], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0007191693875938654, -5.3881147323409095e-05, -8.344646857949556e-07, -0.007786990143358707, -0.02524731121957302], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05248309299349785, -1.1920928244535389e-07, -2.276871418871451e-05, -0.0016346914926543832, -0.007485555484890938, -0.00020323118951637298, -0.0003420721332076937, -0.006123827304691076, -0.06466362625360489, -0.014117375016212463], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012959185987710953, -0.001500672078691423, -0.009217211045324802, -3.8265450712060556e-05, -0.00013076403411105275, -0.015940845012664795, -0.005153348669409752, -3.8980677345534787e-05, -8.940656698541716e-06, -0.2084851861000061, -0.023687703534960747], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.011612322181463242, -6.067568756407127e-05, -6.031808152329177e-05, -0.0005365362740121782, -0.011608433909714222, -2.098061486321967e-05, -0.0001501924270996824, -0.001658851164393127, -0.008178080432116985, -4.529942543740617e-06, -2.0265558760002023e-06, -0.0034244961570948362, -0.011380989104509354], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, index=data.index, columns=['principal_component_' + str(i) for i in range(n_components)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " index", "=", "data", ".", "index", ",", " columns", "=['", "pr", "incipal", "_", "component", "_", "'", " +", " str", "(", "i", ")", " for", " i", " in", " range", "(", "n", "_", "components", ")]", ")"], "logprobs": [-0.09062091261148453, -9.894321920000948e-06, -0.0008723505889065564, -0.004733903333544731, -0.020451154559850693, -0.0696527361869812, -0.0003511289251036942, -0.32678714394569397, -2.911069393157959, -0.00356906745582819, -0.004067244939506054, -0.003708629636093974, -0.00042012447374872863, -0.0762648954987526, -0.019584618508815765, -1.1630091667175293, -3.8891851902008057, -0.11437483876943588, -0.5622832179069519, -0.3844901919364929, -0.06607809662818909, -1.46431303024292, -0.005421103443950415, -0.020644783973693848, -0.004095263313502073, -0.09193359315395355, -0.27495211362838745, -0.33140528202056885, -0.0023901485837996006, -0.005244189407676458, -0.030123066157102585, -0.00044371772673912346, -0.4235548675060272, -8.583032467868179e-06, -7.271740287251305e-06, -0.003914196044206619, -0.31706127524375916], "finish_reason": "stop"}], "metrics": {"energy": 205.6008528842926, "energy_per_token": 1.343796424080344, "time": 9.464537, "time_per_token": 0.06185971895424837}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('input data should be a DataFrame')", "tokens": [" Value", "Error", "('", "input", " data", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -2.866671085357666, -0.1317925751209259, -1.5382425785064697, -0.00552899157628417, -0.2739070653915405, -0.9966317415237427, -0.008901319466531277, -0.17982442677021027, -0.0012197205796837807], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.8456960916519165, -0.0060431379824876785, -0.12069502472877502, -0.013675921596586704, -0.0152124660089612], "finish_reason": "stop"}, {"text": " ValueError(\"Data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002207106677815318, -5.483612312673358e-06, -0.0368742011487484, -0.028253333643078804, -1.7377099990844727, -1.0301567316055298, -0.4987388551235199, -0.6412575244903564, -0.194898322224617, -1.155388355255127, -0.05532534420490265, -0.005863726604729891, -0.00033766290289349854, -0.0013100859941914678], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.3403234481811523, -0.19490647315979004, -0.046163272112607956, -0.5091977715492249, -0.006909288000315428, -0.013114271685481071], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003911683743353933, -2.5510462364763953e-05, -0.011808141134679317, -0.18607380986213684, -0.23743607103824615, -0.0016656348016113043, -0.0024207117967307568, -0.5242471098899841, -0.4683733880519867, -0.23634198307991028, -0.07376547902822495, -0.5701767802238464, -0.0024818354286253452, -0.007005533203482628, -0.2091747671365738, -0.025029227137565613, -0.013585255481302738, -0.0481310710310936, -0.20423030853271484, -0.8598750829696655, -0.2971014082431793, -0.059120163321495056, -0.003288934240117669, -0.0008990298374556005, -0.0011156531982123852], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006198153714649379, -6.496695277746767e-05, -8.344646857949556e-07, -0.008410392329096794, -0.02259824611246586], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04161037132143974, -1.1920928244535389e-07, -1.8358061424805783e-05, -0.0015595904551446438, -0.0073158699087798595, -0.00016783259343355894, -0.00033480284037068486, -0.0083664171397686, -0.0622112862765789, -0.017951983958482742], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012181727215647697, -0.0014592485968023539, -0.010207001119852066, -4.207999518257566e-05, -0.0001445904199499637, -0.014661428518593311, -0.004937953781336546, -2.6702524337451905e-05, -7.510157047363464e-06, -0.1485842913389206, -0.024117078632116318], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010438487865030766, -6.270212179515511e-05, -6.305972783593461e-05, -0.000481132126878947, -0.009287132881581783, -2.074220174108632e-05, -0.00014923889830242842, -0.002035809215158224, -0.005954384338110685, -3.3378546504536644e-06, -2.50339189733495e-06, -0.002978771459311247, -0.011298130266368389], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=[f\"pca_{i+1}\" for i in range(n_components)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=[", "f", "\"", "p", "ca", "_{", "i", "+", "1", "}\"", " for", " i", " in", " range", "(", "n", "_", "components", ")]", ")", "\n"], "logprobs": [-0.07194914668798447, -1.1920858014491387e-05, -0.0008727079257369041, -0.004339089151471853, -0.018551180139183998, -0.05975853651762009, -0.00036971885128878057, -0.35269173979759216, -0.10827990621328354, -0.8109577894210815, -0.4413684010505676, -0.4221765995025635, -2.447995662689209, -0.21130473911762238, -0.828790009021759, -0.1577908992767334, -2.0053179264068604, -0.0007606235449202359, -0.02579277940094471, -0.01733696460723877, -0.00022635281493421644, -0.011881298385560513, -0.0021495348773896694, -0.0005415403284132481, -0.07696758955717087, -3.123234637314454e-05, -8.22540732769994e-06, -0.0016323111485689878, -0.37483033537864685, -0.29002299904823303], "finish_reason": "stop"}], "metrics": {"energy": 191.78422239875792, "energy_per_token": 1.3601717900621129, "time": 9.045167, "time_per_token": 0.06415012056737589}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data must be a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -0.7486714720726013, -0.0011825718684121966, -0.025706574320793152, -1.6561609506607056, -0.0030519834253937006, -0.516324520111084, -0.0009097489528357983], "finish_reason": "stop"}, {"text": " not data.dropna().empty:", "tokens": [" not", " data", ".", "drop", "na", "()", ".", "empty", ":", "\n"], "logprobs": [-0.9888368844985962, -0.17012663185596466, -0.0083414725959301, -4.422369003295898, -0.06760121136903763, -0.03606651723384857, -0.0004843492351938039, -0.8310845494270325, -0.00717586325481534, -0.034171588718891144], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.002203657291829586, -5.125986263010418e-06, -0.035148736089468, -0.026506993919610977, -0.5914233922958374, -1.7080416679382324, -0.01594952680170536, -0.0048279850743710995, -0.060566503554582596, -0.1397808939218521, -0.06377799063920975, -0.008714147843420506, -0.00030763185350224376, -0.001743940869346261], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.6806285381317139, -0.006486788857728243, -0.10165547579526901, -0.0076871528290212154, -0.004006693139672279], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00042548662167973816, -2.253030106658116e-05, -0.011652737855911255, -0.18257656693458557, -0.23785659670829773, -0.0019480077316984534, -0.00271071819588542, -1.2036688327789307, -0.06653939932584763, -0.14758630096912384, -0.001963712740689516, -0.13555213809013367, -0.015383517369627953, -0.007377878297120333, -0.01764949969947338, -0.15175986289978027, -0.5976646542549133, -0.21091362833976746, -0.046501293778419495, -0.0035012392327189445, -0.0007514513563364744, -0.0006551980040967464], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005783553933724761, -5.793403761344962e-05, -7.152555099310121e-07, -0.008135869167745113, -0.02049308270215988], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "values", ")", "\n"], "logprobs": [-0.049770787358284, -1.1920928244535389e-07, -2.1576648578047752e-05, -0.0019193338230252266, -0.006725650746375322, -0.00019333878299221396, -0.00039283663500100374, -0.005803165026009083, -2.869917631149292, -0.44244620203971863, -0.020616289228200912, -0.015010383911430836], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0013234198559075594, -0.0012977044098079205, -0.00964209996163845, -3.886147169396281e-05, -0.00015662873920518905, -0.0191260427236557, -0.005672666244208813, -3.349725011503324e-05, -7.986990567587782e-06, -0.18522796034812927, -0.02371308207511902], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.01149577833712101, -6.532455881824717e-05, -6.317892984952778e-05, -0.0005663221818394959, -0.007563880644738674, -1.764281842042692e-05, -0.00014447122521232814, -0.0021777264773845673, -0.006577863823622465, -3.3378546504536644e-06, -2.145764938177308e-06, -0.0027327120769768953, -0.008959803730249405], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.07994623482227325, -1.0013530300057027e-05, -0.0008114859228953719, -0.004533133469521999, -0.023141199722886086, -0.06893075257539749, -0.00027736154152080417, -1.779515266418457], "finish_reason": "stop"}], "metrics": {"energy": 219.88219294548023, "energy_per_token": 1.8023130569301657, "time": 8.639596, "time_per_token": 0.0708163606557377}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.5370867252349854, -0.0055153584107756615, -0.0002843929105438292, -0.001150541938841343], "finish_reason": "stop"}, {"text": " data.isnull().any().any():", "tokens": [" data", ".", "is", "null", "()", ".", "any", "()", ".", "any", "():", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -2.2812469005584717, -0.4823843538761139, -0.0025064502842724323, -0.00017486473370809108, -0.5328165292739868, -0.09524224698543549, -0.012995902448892593, -0.04035790637135506, -0.012322014197707176, -0.023439817130565643], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -0.7618539333343506, -0.15957044064998627, -0.2792457640171051, -0.034866031259298325, -0.0043884641490876675, -0.0003297977091278881, -0.0014181805308908224], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.465969443321228, -0.1966089904308319, -0.04586851969361305, -0.5925880074501038, -0.008464177139103413, -0.011337379924952984], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -1.2418763637542725, -0.07316534966230392, -0.13930363953113556, -0.00224374164827168, -0.14116553962230682, -0.016472650691866875, -0.007288059685379267, -0.018837716430425644, -0.15279452502727509, -0.5568687915802002, -1.942341923713684, -0.001962522976100445, -0.05857290327548981, -0.003189241047948599, -0.0007178590167313814, -0.000770391256082803], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005918181850574911, -5.745722592109814e-05, -1.0728830375228426e-06, -0.008916324935853481, -0.021494649350643158], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.046716224402189255, -1.1920928244535389e-07, -1.7881233361549675e-05, -0.001836043898947537, -0.006589232943952084, -0.00016008525562938303, -0.0003054867556784302, -0.005961375776678324, -0.06824220716953278, -0.011573318392038345], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012519863666966558, -0.0016814630944281816, -0.008907227776944637, -4.541770613286644e-05, -0.00016199229867197573, -0.013881330378353596, -0.0048345099203288555, -3.45700973412022e-05, -8.4638240878121e-06, -0.18765191733837128, -0.02489330619573593], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.012478608638048172, -5.185469490243122e-05, -6.925819616299123e-05, -0.0004903068183921278, -0.009619549848139286, -2.0503786799963564e-05, -0.00013934595335740596, -0.0024969372898340225, -0.006172403693199158, -4.0531076592742465e-06, -2.264974000354414e-06, -0.002812479855492711, -0.010673695243895054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")"], "logprobs": [-0.06583636999130249, -1.0371154530730564e-05, -0.0009560781763866544, -0.003759104758501053, -0.018717683851718903, -0.06754928827285767, -0.00032264748006127775, -0.36977359652519226, -0.08951722085475922, -0.7463521361351013, -0.3176305592060089, -0.032123226672410965, -0.006262322422116995, -0.4776241183280945], "finish_reason": "stop"}], "metrics": {"energy": 206.28593795299514, "energy_per_token": 1.5394472981566802, "time": 9.032197, "time_per_token": 0.0674044552238806}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.5370867252349854, -0.0055153584107756615, -0.0002843929105438292, -0.001150541938841343], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.8583299517631531, -0.14442889392375946, -0.00984704028815031, -1.0172008275985718, -0.01688380353152752, -0.03212830796837807], "finish_reason": "stop"}, {"text": " ValueError(\"Data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021928329952061176, -7.033323527139146e-06, -0.031172120943665504, -0.022837018594145775, -1.5974141359329224, -1.3940502405166626, -0.016182150691747665, -0.009144803509116173, -0.06612629443407059, -0.44180816411972046, -0.09180418401956558, -0.01612209342420101, -0.00028081765049137175, -0.0015785150462761521], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.0727183818817139, -0.00036137725692242384, -0.004296951927244663, -0.3131675124168396, -0.18831028044223785, -0.0004920940846204758, -0.00022206225548870862, -0.006120154168456793, -0.005249644163995981], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00042798896902240813, -2.5033637939486653e-05, -0.014540658332407475, -0.16916170716285706, -0.23525990545749664, -0.0015891077928245068, -0.0028576513286679983, -1.2200740575790405, -0.05147315189242363, -0.1500507891178131, -0.0020453264005482197, -0.12674039602279663, -0.01573973149061203, -0.006744122598320246, -0.019282042980194092, -0.17497162520885468, -0.8614208102226257, -0.0631449744105339, -0.005231975112110376, -0.0007304860628210008, -0.0007432320853695273], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006292270263656974, -6.365573790390044e-05, -7.152555099310121e-07, -0.008674204349517822, -0.020594218745827675], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.0429726205766201, -1.1920928244535389e-07, -2.038458114839159e-05, -0.0017592919757589698, -0.006716888397932053, -0.00019405389321036637, -0.0003446938644628972, -0.007203440181910992, -0.06034453958272934, -0.012661428190767765], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components, svd_solver=\"full\", random_state=42)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ",", " s", "vd", "_", "s", "olver", "=", "\"", "full", "\"", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0011840007500723004, -0.0013310391223058105, -0.012907528318464756, -4.053033626405522e-05, -0.0001426833332516253, -0.016898103058338165, -0.005318065639585257, -3.635817120084539e-05, -9.059865078597795e-06, -1.5729055404663086, -0.5243512988090515, -0.015219980850815773, -7.152555099310121e-07, -0.0002648479712661356, -0.007297881878912449, -2.0938405990600586, -0.0016148157883435488, -0.05857796221971512, -8.749579137656838e-05, -0.8974490165710449, -0.5446410179138184, -2.3841855067985307e-07, -5.5549986427649856e-05, -0.0011880489764735103, -1.7571475505828857, -0.04708544909954071, -0.016982609406113625, -0.02768566645681858], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.007902074605226517, -5.94836674281396e-05, -6.317892984952778e-05, -0.0006469779182225466, -0.008122862316668034, -1.9550132492440753e-05, -0.00013457823661156, -0.0022776394616812468, -0.007268769200891256, -4.291525328881107e-06, -2.50339189733495e-06, -0.0031332706566900015, -0.011350934393703938], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0674150139093399, -8.821448318485636e-06, -0.000739539333153516, -0.0037032850086688995, -0.016497040167450905, -0.06827783584594727, -0.00032419670606032014, -1.7083799839019775, -0.27972134947776794], "finish_reason": "stop"}], "metrics": {"energy": 226.8230592880249, "energy_per_token": 1.6086741793476942, "time": 9.8641815, "time_per_token": 0.06995873404255319}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -0.2943362891674042, -0.023769425228238106, -0.0038267967756837606, -0.623973548412323, -0.008859019726514816, -0.000276765669696033, -0.001348063233308494], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -0.3356468677520752, -1.2341744899749756, -0.2085014432668686, -0.2137639969587326, -0.0052979071624577045, -0.00031931069679558277, -0.0012960376916453242], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -0.3746337294578552, -0.187269926071167, -0.0004359725280664861, -0.00021717573690693825, -0.006145983003079891, -0.006166124250739813], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in data\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -1.2418763637542725, -0.07316534966230392, -0.13930363953113556, -0.00224374164827168, -0.14116553962230682, -0.016472650691866875, -0.007288059685379267, -0.018837716430425644, -0.15279452502727509, -0.8834621906280518, -2.8751890659332275, -0.005260079633444548, -0.003949699457734823], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005918181850574911, -5.745722592109814e-05, -1.0728830375228426e-06, -0.008916324935853481, -0.021494649350643158], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.046716224402189255, -1.1920928244535389e-07, -1.7881233361549675e-05, -0.001836043898947537, -0.006589232943952084, -0.00016008525562938303, -0.0003054867556784302, -0.005961375776678324, -0.06824220716953278, -0.011573318392038345], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012519863666966558, -0.0016814630944281816, -0.008907227776944637, -4.541770613286644e-05, -0.00016199229867197573, -0.013881330378353596, -0.0048345099203288555, -3.45700973412022e-05, -8.4638240878121e-06, -0.18765191733837128, -0.02489330619573593], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.012478608638048172, -5.185469490243122e-05, -6.925819616299123e-05, -0.0004903068183921278, -0.009619549848139286, -2.0503786799963564e-05, -0.00013934595335740596, -0.0024969372898340225, -0.006172403693199158, -4.0531076592742465e-06, -2.264974000354414e-06, -0.002812479855492711, -0.010673695243895054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=[f\"pc{i}\" for i in range(1, n_components + 1)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=[", "f", "\"", "pc", "{", "i", "}\"", " for", " i", " in", " range", "(", "1", ",", " n", "_", "components", " +", " ", "1", ")]", ")"], "logprobs": [-0.06583636999130249, -1.0371154530730564e-05, -0.0009560781763866544, -0.003759104758501053, -0.018717683851718903, -0.06754928827285767, -0.00032264748006127775, -0.36977359652519226, -0.08951722085475922, -0.9016274809837341, -0.4202066957950592, -0.4278818368911743, -2.712405204772949, -0.3875601887702942, -0.07466333359479904, -0.49707111716270447, -0.01036675926297903, -9.583967766957358e-05, -0.0028814247343689203, -0.002064479747787118, -0.00032360086333937943, -0.775453507900238, -0.00034588552080094814, -0.12977534532546997, -0.0005379660287871957, -1.5258672647178173e-05, -0.4786035716533661, -0.0031155638862401247, -0.00015472168161068112, -0.00201011192984879, -0.33664506673812866], "finish_reason": "stop"}], "metrics": {"energy": 241.71181447792057, "energy_per_token": 1.6902924089365075, "time": 9.471267, "time_per_token": 0.06623263636363635}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -0.2943362891674042, -0.023769425228238106, -0.0038267967756837606, -0.623973548412323, -0.008859019726514816, -0.000276765669696033, -0.001348063233308494], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"Data should not contain non-numerical columns.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " should", " not", " contain", " non", "-", "n", "umerical", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -1.5742809772491455, -1.011732816696167, -2.4559450149536133, -0.07949404418468475, -0.1367638260126114, -0.01590658538043499, -1.917242169380188, -0.060601845383644104, -2.999711751937866, -0.13386714458465576, -0.007215275429189205, -0.00043585337698459625, -0.0016436175210401416], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -0.3746337294578552, -0.187269926071167, -0.0004359725280664861, -0.00021717573690693825, -0.006145983003079891, -0.006166124250739813], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -0.3789644241333008, -0.2589721977710724, -0.07552379369735718, -2.9745044708251953, -0.005067836493253708, -0.05380621924996376, -0.4231201112270355, -1.4034397602081299, -0.2723424434661865, -0.0942891389131546, -0.004984571132808924, -0.000998951611109078, -0.000742279109545052], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005821678787469864, -6.794698856538162e-05, -7.152555099310121e-07, -0.010691032744944096, -0.019248249009251595], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05982489883899689, -1.1920928244535389e-07, -1.728519782773219e-05, -0.0016680150292813778, -0.005101164802908897, -0.00019369633810129017, -0.000341476290486753, -0.005372609477490187, -0.06885976344347, -0.012495444156229496], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0011897159274667501, -0.0012694880133494735, -0.009718249551951885, -4.660974445869215e-05, -0.0001262346631847322, -0.015203190967440605, -0.0050469618290662766, -3.9934315282152966e-05, -9.059865078597795e-06, -0.19281792640686035, -0.024540454149246216], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010745285078883171, -4.5060096454108134e-05, -8.391981828026474e-05, -0.0004938812926411629, -0.007880785502493382, -2.1576648578047752e-05, -0.0001333863037871197, -0.002203062642365694, -0.006347376853227615, -3.933898824470816e-06, -2.0265558760002023e-06, -0.003144441172480583, -0.011075684800744057], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.08896595984697342, -1.1205610462639015e-05, -0.0010356307029724121, -0.003311034059152007, -0.01780385710299015, -0.06323797255754471, -0.0004748170613311231, -1.8208279609680176, -0.272542804479599], "finish_reason": "stop"}], "metrics": {"energy": 205.1526487073898, "energy_per_token": 1.6281956246618239, "time": 9.018622, "time_per_token": 0.07157636507936509}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.9831831455230713, -0.0002623452164698392, -0.0008681819308549166], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should not contain non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " contain", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -2.368809938430786, -0.05477656424045563, -0.10256480425596237, -0.010080852545797825, -0.0950007513165474, -0.14258526265621185, -0.037441615015268326, -0.0031587013509124517, -0.0003091811086051166, -0.0014585343888029456], "finish_reason": "stop"}, {"text": " n_components > len(data.columns):", "tokens": [" n", "_", "components", " >", " len", "(", "data", ".", "columns", "):", "\n"], "logprobs": [-2.127842426300049, -0.0002851079625543207, -8.34461570775602e-06, -0.21148431301116943, -0.8729777336120605, -0.00017855956684798002, -0.01390425581485033, -0.009331775829195976, -0.007061405573040247, -0.01678217388689518, -0.002466971054673195], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be more than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " more", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0005155664402991533, -2.2411095415009186e-05, -0.0131207425147295, -0.20788829028606415, -0.2596862316131592, -0.0016318351263180375, -0.0028565814718604088, -1.2748440504074097, -0.07201093435287476, -3.0115678310394287, -0.0073835584335029125, -0.25833767652511597, -0.034960657358169556, -0.005722568370401859, -0.034814223647117615, -0.1904483586549759, -0.788551390171051, -0.08781371265649796, -0.0068812295794487, -0.0008310201810672879, -0.0008158930577337742], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.000542612629942596, -6.16293036728166e-05, -8.344646857949556e-07, -0.008437580429017544, -0.01888977363705635], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05697673559188843, -1.1920928244535389e-07, -2.038458114839159e-05, -0.0021820086985826492, -0.006492237094789743, -0.00018070495571009815, -0.0003797286772169173, -0.007300130557268858, -0.06262533366680145, -0.012865515425801277], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0013061572099104524, -0.001405086019076407, -0.010464088059961796, -3.9934315282152966e-05, -0.00012063252506777644, -0.014232908375561237, -0.0059204925782978535, -3.40932747349143e-05, -1.0371154530730564e-05, -0.16418230533599854, -0.024586400017142296], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.011382285505533218, -6.0794889577664435e-05, -7.235741941258311e-05, -0.0004319211875554174, -0.009763936512172222, -2.109982233378105e-05, -0.00014172980445437133, -0.0019555033650249243, -0.005389802157878876, -3.2186455882765586e-06, -1.7881377516459906e-06, -0.003043901873752475, -0.012354983016848564], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")"], "logprobs": [-0.069610595703125, -8.702239938429557e-06, -0.0009586982196196914, -0.004144769627600908, -0.018463294953107834, -0.07517819851636887, -0.0003082277253270149, -0.33674943447113037, -0.08659552782773972, -0.7288867235183716, -0.2747403085231781, -0.026603111997246742, -0.006062333472073078, -0.5270395278930664], "finish_reason": "stop"}], "metrics": {"energy": 195.45171383857723, "energy_per_token": 1.4919978155616582, "time": 8.834274, "time_per_token": 0.06743720610687023}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(f\"input data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -2.164577007293701, -0.14939577877521515, -3.135128974914551, -0.22066809237003326, -1.455504298210144, -0.06862170994281769, -0.05985431745648384, -0.179511159658432, -0.007962035946547985, -0.733747124671936, -0.0012888943310827017, -0.0019558602944016457], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-2.1253087520599365, -0.0004884004010818899, -0.00785074383020401, -0.7638341188430786, -0.13601422309875488, -0.0004781533498317003, -9.297892393078655e-05, -0.005631533917039633, -0.01320580393075943], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0022245917934924364, -5.960446742392378e-06, -0.02960691973567009, -0.025021320208907127, -0.5941232442855835, -0.2948514521121979, -0.3761858642101288, -2.7802934646606445, -0.001999523490667343, -1.14153254032135, -0.16243496537208557, -0.15038007497787476, -0.0037536416202783585, -0.0003522014303598553, -0.0019076736643910408], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.6794627904891968, -0.007803076878190041, -0.09931853413581848, -0.0073842681013047695, -0.0041993772611021996], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less or equal to number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " or", " equal", " to", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004499138449318707, -2.3841574147809297e-05, -0.014947437681257725, -0.17243604362010956, -0.22061215341091156, -0.001775832730345428, -0.0028641889803111553, -0.5212695598602295, -0.4286143183708191, -0.22474253177642822, -2.7364299297332764, -0.00444816192612052, -0.15460984408855438, -1.2828590869903564, -0.007666096091270447, -0.054748352617025375, -1.280234694480896, -0.006864062510430813, -0.00084436044562608, -0.0009183242218568921], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005864569102413952, -5.9126061387360096e-05, -7.152555099310121e-07, -0.009258667938411236, -0.02510862983763218], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05570335313677788, -1.1920928244535389e-07, -2.3603161025675945e-05, -0.0014693664852529764, -0.005831371992826462, -0.00014590153296012431, -0.00036090059438720345, -0.006413354072719812, -0.06988587230443954, -0.013854995369911194], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components, svd_solver='full', random_state=0)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ",", " s", "vd", "_", "s", "olver", "='", "full", "'", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.001262344536371529, -0.0013523490633815527, -0.008272667415440083, -4.255681051290594e-05, -0.00013350549852475524, -0.015725063160061836, -0.004743869416415691, -3.4450891689630225e-05, -8.22540732769994e-06, -1.8776476383209229, -0.4982388913631439, -0.010861562564969063, -5.960462772236497e-07, -0.00026925752172246575, -0.007948081009089947, -0.11697091907262802, -0.0479324646294117, -1.2370579242706299, -0.0016017238376662135, -0.45824626088142395, -1.1920928244535389e-07, -5.125868119648658e-05, -0.0015367376618087292, -0.512437641620636, -0.041556283831596375, -0.02629731222987175], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.009143976494669914, -5.6980417866725475e-05, -5.936446541454643e-05, -0.0005146132898516953, -0.008020811714231968, -2.13382354559144e-05, -0.00014137222024146467, -0.0017686928622424603, -0.006383268162608147, -3.576272320060525e-06, -2.861018856492592e-06, -0.0032170468475669622, -0.011281274259090424], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=[f\"PC{i+1}\" for i in range(n_components)])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=[", "f", "\"", "PC", "{", "i", "+", "1", "}\"", " for", " i", " in", " range", "(", "n", "_", "components", ")]", ")", "\n"], "logprobs": [-0.07216610759496689, -1.1205610462639015e-05, -0.0010222929995507002, -0.00458107516169548, -0.02005981095135212, -0.058979135006666183, -0.0003432638186495751, -0.3147287666797638, -0.09666707366704941, -0.8425725102424622, -0.3583664298057556, -0.41148641705513, -0.8364501595497131, -0.144540935754776, -0.055102888494729996, -1.3012375831604004, -0.000580499938223511, -0.02702856995165348, -0.015888165682554245, -9.238292841473594e-05, -0.007618775125592947, -0.001291037304326892, -0.0004412154376041144, -0.1033799946308136, -4.589452510117553e-05, -7.152531907195225e-06, -0.0013344916515052319, -0.4830799102783203, -0.2739459276199341], "finish_reason": "stop"}], "metrics": {"energy": 261.11015270805353, "energy_per_token": 1.6631219917710416, "time": 10.08833, "time_per_token": 0.06425687898089172}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data is not a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " is", " not", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -1.2635831832885742, -0.0050723436288535595, -0.02086896263062954, -1.2528314590454102, -0.019577838480472565, -0.0038691910449415445, -0.5717892050743103, -0.0007352509419433773], "finish_reason": "stop"}, {"text": " not all(data.dtypes.apply(lambda x: x.isnumeric())):", "tokens": [" not", " all", "(", "data", ".", "d", "types", ".", "apply", "(", "lambda", " x", ":", " x", ".", "is", "numeric", "()))", ":", "\n"], "logprobs": [-0.9888368844985962, -2.891413450241089, -0.07308922708034515, -0.31166693568229675, -0.03219422325491905, -0.44292399287223816, -0.0022291115019470453, -0.518123209476471, -0.39134103059768677, -0.0017617909470573068, -0.13793489336967468, -0.046450767666101456, -0.000358159770257771, -0.8086029887199402, -0.11220387369394302, -0.19565409421920776, -1.5290340185165405, -0.39803043007850647, -0.00534770917147398, -0.008114702999591827], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0022040142212063074, -6.079655122448457e-06, -0.037355147302150726, -0.021518917754292488, -0.586527943611145, -0.3510196805000305, -2.4461474418640137, -0.040248673409223557, -0.2620556950569153, -1.7067089080810547, -0.04590848460793495, -0.005820113234221935, -0.00034231049357913435, -0.001392586505971849], "finish_reason": "stop"}, {"text": " not data.columns.map(lambda s: pd.to_numeric(s, errors='coerce').notnull().all()).all():", "tokens": [" not", " data", ".", "columns", ".", "map", "(", "lambda", " s", ":", " pd", ".", "to", "_", "numeric", "(", "s", ",", " errors", "='", "co", "er", "ce", "')", ".", "not", "null", "()", ".", "all", "())", ".", "all", "():", "\n"], "logprobs": [-1.52323579788208, -0.16886572539806366, -0.047071803361177444, -2.179304838180542, -0.28050655126571655, -2.9252943992614746, -0.04187185689806938, -0.34754619002342224, -0.5093044638633728, -0.0006307758158072829, -0.924930214881897, -0.0011533997021615505, -0.04446757212281227, -8.940297266235575e-05, -0.001207337831147015, -0.0006591292913071811, -0.0020499660167843103, -0.28003349900245667, -0.0022806129418313503, -0.020656811073422432, -0.009729464538395405, -9.572047565598041e-05, -2.407998726994265e-05, -0.13581006228923798, -0.00043215948971919715, -0.09125668555498123, -0.0009868042543530464, -0.03782518208026886, -0.0005911033367738128, -0.04516766220331192, -0.029332367703318596, -0.00021062063751742244, -0.0026537699159234762, -0.002127052517607808, -0.0008453133050352335], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00041952868923544884, -2.2172682292875834e-05, -0.015239352360367775, -0.20402522385120392, -0.2597883641719818, -0.0014667478390038013, -0.003074801526963711, -0.4850831925868988, -1.1005301475524902, -0.17298638820648193, -0.113716259598732, -0.004065226297825575, -0.2063000351190567, -0.023923423141241074, -0.010845878161489964, -0.028948768973350525, -0.18820570409297943, -0.733951210975647, -0.20468349754810333, -0.050472844392061234, -0.003465125570073724, -0.0006690170848742127, -0.0006679449579678476], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006316096987575293, -5.602679812000133e-05, -8.344646857949556e-07, -0.007241785991936922, -0.020321618765592575], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04867294803261757, -1.1920928244535389e-07, -2.3007127310847864e-05, -0.001988697098568082, -0.008621140383183956, -0.00016199229867197573, -0.0003449321957305074, -0.005318302661180496, -0.06420178711414337, -0.012535235844552517], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012142435880377889, -0.0014884117990732193, -0.008681531064212322, -4.053033626405522e-05, -0.00014423283573705703, -0.019613375887274742, -0.005813239142298698, -3.194758028257638e-05, -7.986990567587782e-06, -0.14610916376113892, -0.02613229863345623], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010009688325226307, -5.578839045483619e-05, -7.223821739898995e-05, -0.0005255748401395977, -0.009581648744642735, -1.9430925021879375e-05, -0.00012432756193447858, -0.0018455630633980036, -0.005856734234839678, -4.887569048150908e-06, -2.3841830625315197e-06, -0.002654126612469554, -0.012660250999033451], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.06967063993215561, -1.0132738680113107e-05, -0.0010275328531861305, -0.0035379454493522644, -0.018645843490958214, -0.055228788405656815, -0.0004772001120727509, -0.3152526021003723, -0.11183181405067444, -0.9851470589637756, -0.31052350997924805, -0.024110563099384308, -0.005835401825606823, -1.5272996425628662, -1.1920928244535389e-07, -3.3378546504536644e-06, -2.5033637939486653e-05, -0.00042417587246745825, -0.14271187782287598], "finish_reason": "stop"}], "metrics": {"energy": 279.10427123737344, "energy_per_token": 1.6133194869212337, "time": 11.562368, "time_per_token": 0.06683449710982658}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -0.2943362891674042, -0.023769425228238106, -0.0038267967756837606, -0.623973548412323, -0.008859019726514816, -0.000276765669696033, -0.001348063233308494], "finish_reason": "stop"}, {"text": " len(data.columns) == 0:", "tokens": [" len", "(", "data", ".", "columns", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-2.129377603530884, -0.0004913791781291366, -0.007186160422861576, -0.7721472978591919, -0.06249745562672615, -0.007463666144758463, -0.7834585905075073, -0.011127675883471966, -0.004833560902625322, -0.10483235120773315, -0.02957555651664734], "finish_reason": "stop"}, {"text": " ValueError(\"Input data cannot contain non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " cannot", " contain", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -2.8393471240997314, -0.12629596889019012, -3.4282948970794678, -0.16894707083702087, -0.021092742681503296, -0.006265284027904272, -0.12131597846746445, -0.35262444615364075, -0.04158224165439606, -0.005216558463871479, -0.000288087350782007, -0.0015541153261438012], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-2.127842426300049, -0.0002851079625543207, -8.34461570775602e-06, -0.21148431301116943, -0.5490221977233887, -0.0001538873475510627, -0.12637580931186676, -0.004352263640612364, -0.01996013894677162, -0.019759364426136017, -0.00344089069403708], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not exceed the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " exceed", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004260824352968484, -2.4318398573086597e-05, -0.013156273402273655, -0.1659841537475586, -0.24550750851631165, -0.001678725820966065, -0.002787159290164709, -0.5194635391235352, -1.1879980564117432, -2.004133462905884, -0.2991853952407837, -0.035485897213220596, -0.0031989850103855133, -0.03090597316622734, -0.17613190412521362, -0.594036877155304, -0.07910895347595215, -0.0048123253509402275, -0.0005561950383707881, -0.0006671110168099403], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006302992696873844, -5.447716102935374e-05, -7.152555099310121e-07, -0.007954821921885014, -0.023088082671165466], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04725022614002228, -1.1920928244535389e-07, -1.9311717551317997e-05, -0.0016984812682494521, -0.008283544331789017, -0.00015579440514557064, -0.00042572495294734836, -0.006972623988986015, -0.06764499098062515, -0.018743891268968582], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.001278655487112701, -0.0012656782055273652, -0.007990064099431038, -4.732496745418757e-05, -0.00014554394874721766, -0.01912674494087696, -0.0048818439245224, -2.6464111215318553e-05, -7.271740287251305e-06, -0.17949074506759644, -0.02552182599902153], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.01086179818958044, -5.340433563105762e-05, -7.271502545336261e-05, -0.0006027788622304797, -0.006647852249443531, -1.764281842042692e-05, -0.00013374387344811112, -0.0018635302549228072, -0.007186752278357744, -4.291525328881107e-06, -2.0265558760002023e-06, -0.002377542434260249, -0.010704124346375465], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-0.07093170285224915, -9.894321920000948e-06, -0.0009990707039833069, -0.003412853693589568, -0.018949665129184723, -0.057522617280483246, -0.0004676678800024092, -0.3222573697566986, -0.10530541837215424, -0.8409854173660278, -0.3079358637332916, -0.026946185156702995, -0.0050766137428581715, -0.4604364037513733, -0.31259316205978394], "finish_reason": "stop"}], "metrics": {"energy": 236.79862947463977, "energy_per_token": 1.7159320976423171, "time": 9.682203, "time_per_token": 0.07016089130434783}}
{"outputs": [{"text": " type(data) is not pd.core.frame.DataFrame:", "tokens": [" type", "(", "data", ")", " is", " not", " pd", ".", "core", ".", "frame", ".", "DataFrame", ":", "\n"], "logprobs": [-2.9519760608673096, -0.00036006642039865255, -0.0187899861484766, -0.0007113072206266224, -0.9272767901420593, -0.06449532508850098, -0.03418184071779251, -0.00025900822947733104, -1.4126075506210327, -6.389413465512916e-05, -0.01857423223555088, -0.0007499027997255325, -0.002314509591087699, -0.05021870136260986, -0.008067049086093903], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.5370867252349854, -0.0055153584107756615, -0.0002843929105438292, -0.001150541938841343], "finish_reason": "stop"}, {"text": " not data.columns.isnull().all():", "tokens": [" not", " data", ".", "columns", ".", "is", "null", "()", ".", "all", "():", "\n"], "logprobs": [-0.8583299517631531, -0.14442889392375946, -0.00984704028815031, -2.017225742340088, -0.20419611036777496, -0.7615472674369812, -0.4855245351791382, -0.006163991522043943, -0.0005614373367279768, -0.2526766359806061, -0.04593535512685776, -0.01645975187420845], "finish_reason": "stop"}, {"text": " ValueError(\"Non-numeric data found in input.\")", "tokens": [" Value", "Error", "(", "\"", "Non", "-", "numeric", " data", " found", " in", " input", ".", "\"", ")", "\n"], "logprobs": [-0.0021928329952061176, -7.033323527139146e-06, -0.031172120943665504, -0.022837018594145775, -3.1469688415527344, -0.04126165434718132, -0.14250318706035614, -0.17348672449588776, -0.4474185109138489, -0.2426353245973587, -3.051724672317505, -1.4881107807159424, -0.038497135043144226, -0.0004920940846204758, -0.0018032018560916185], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.0727183818817139, -0.00036137725692242384, -0.004296951927244663, -0.3131675124168396, -0.18831028044223785, -0.0004920940846204758, -0.00022206225548870862, -0.006120154168456793, -0.005249644163995981], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.00042798896902240813, -2.5033637939486653e-05, -0.014540658332407475, -0.16916170716285706, -0.23525990545749664, -0.0015891077928245068, -0.0028576513286679983, -0.5215972661972046, -1.035752773284912, -0.1759946644306183, -0.1170627549290657, -0.0049607292748987675, -0.17375127971172333, -0.021574335172772408, -0.009841964580118656, -0.024874933063983917, -1.926098346710205, -0.003249604720622301, -0.0007013006834313273, -0.0007382289622910321], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006491222884505987, -6.770858453819528e-05, -7.152555099310121e-07, -0.007030037231743336, -0.020250946283340454], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05751980468630791, -1.1920928244535389e-07, -2.074220174108632e-05, -0.001716689090244472, -0.006027734372764826, -0.00020823694649152458, -0.00032908268622122705, -0.006723045837134123, -0.08110867440700531, -0.01171718817204237], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0011453027836978436, -0.00129341846331954, -0.00914503913372755, -4.6132929128361866e-05, -0.0001287377526750788, -0.018413206562399864, -0.005019681062549353, -3.158996332786046e-05, -7.867782187531702e-06, -0.21193180978298187, -0.02243751659989357], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.008751844987273216, -5.411955135059543e-05, -7.354942499659956e-05, -0.0005880056996829808, -0.008938891813158989, -2.13382354559144e-05, -0.00015114595589693636, -0.0021780834067612886, -0.007401781156659126, -3.6954811548639555e-06, -1.9073468138230965e-06, -0.0025307077448815107, -0.013492582365870476], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.07542286813259125, -1.0490362910786644e-05, -0.0009678685455583036, -0.004375289659947157, -0.02044694870710373, -0.06528205424547195, -0.0003607814433053136, -1.6599814891815186], "finish_reason": "stop"}], "metrics": {"energy": 200.55155483627314, "energy_per_token": 1.4966533943005458, "time": 8.849697, "time_per_token": 0.06604251492537314}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data must be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -0.7486714720726013, -0.0011825718684121966, -0.025706574320793152, -0.24834506213665009, -0.015328343026340008, -0.002571135526522994, -0.7174713611602783, -0.0006104036583565176], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.8456960916519165, -0.0060431379824876785, -0.12069502472877502, -0.013675921596586704, -0.0152124660089612], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.002207106677815318, -5.483612312673358e-06, -0.0368742011487484, -0.028253333643078804, -0.5411272048950195, -0.291095107793808, -2.4285333156585693, -0.04718177020549774, -0.26012131571769714, -0.33210209012031555, -0.04289348050951958, -0.005570839624851942, -0.0003634030872490257, -0.0013818725710734725], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.0344419479370117, -0.0003713871701620519, -0.00468157883733511, -0.3681327998638153, -0.18754024803638458, -0.00038342276820912957, -0.00020680672605521977, -0.00492016039788723, -0.006014581304043531], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003911683743353933, -2.5510462364763953e-05, -0.011808141134679317, -0.18607380986213684, -0.23743607103824615, -0.0016656348016113043, -0.0024207117967307568, -1.199904441833496, -0.056830111891031265, -0.1469840109348297, -0.0021033799275755882, -0.13439609110355377, -0.015539750456809998, -0.008515003137290478, -0.017819315195083618, -0.17021261155605316, -0.84725022315979, -0.07107672095298767, -0.005156906321644783, -0.0007474012672901154, -0.000727627135347575], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006326819420792162, -6.317892984952778e-05, -7.152555099310121e-07, -0.006564836483448744, -0.02360457554459572], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.044837284833192825, -1.1920928244535389e-07, -2.2291887944447808e-05, -0.002223640214651823, -0.006653773132711649, -0.00022492263815365732, -0.00033504117163829505, -0.00718580512329936, -0.0664057731628418, -0.013529393821954727], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0013141338713467121, -0.001320086419582367, -0.009498050436377525, -4.9470632802695036e-05, -0.00014077626110520214, -0.020904920995235443, -0.005384940654039383, -2.825220326485578e-05, -7.629365427419543e-06, -0.18030542135238647, -0.019692158326506615], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010798590257763863, -6.05564855504781e-05, -7.974783511599526e-05, -0.0004850641416851431, -0.007471475284546614, -1.8358061424805783e-05, -0.00015138434537220746, -0.001779640675522387, -0.005285337567329407, -2.622600959512056e-06, -2.264974000354414e-06, -0.0030808625742793083, -0.01298943068832159], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.06381332874298096, -9.65590606938349e-06, -0.0009803733555600047, -0.003934263251721859, -0.021715372800827026, -0.08176590502262115, -0.00030620177858509123, -0.316769003868103, -0.10406529158353806, -0.7227982878684998, -0.29041269421577454, -0.025507649406790733, -0.0054082986898720264, -1.510390281677246, -1.1920928244535389e-07, -2.7418097943154862e-06, -3.564294092939235e-05, -0.00046135272714309394, -2.1738436222076416, -0.0032027876004576683], "finish_reason": "stop"}], "metrics": {"energy": 225.7410183677673, "energy_per_token": 1.7232138806699795, "time": 9.041544, "time_per_token": 0.06901941984732825}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(f\"Input data must be a pandas DataFrame. Received {type(data)} instead.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", " Re", "ceived", " {", "type", "(", "data", ")}", " instead", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -2.164577007293701, -0.14939577877521515, -0.48058024048805237, -0.11662152409553528, -0.6043676733970642, -0.0016845572972670197, -0.05838378146290779, -0.30860045552253723, -0.02721594274044037, -0.0048789968714118, -1.0425541400909424, -2.814060688018799, -5.566918844124302e-05, -0.7857171297073364, -0.044355932623147964, -0.0002454218047205359, -0.000813034363090992, -0.027775758877396584, -2.6127281188964844, -0.06165282800793648, -0.003936044406145811, -0.0004397855664137751, -0.0011518517276272178], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.938800573348999, -0.006980436854064465, -0.11186826974153519, -0.009957284666597843, -0.01721065677702427], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0022245917934924364, -5.960446742392378e-06, -0.02960691973567009, -0.025021320208907127, -2.885261058807373, -0.13141852617263794, -0.726245641708374, -0.422710657119751, -0.5593661665916443, -0.1758851855993271, -0.5006332993507385, -0.042277272790670395, -0.006507989019155502, -0.00040141629870049655, -0.0012235306203365326], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.6794627904891968, -0.007803076878190041, -0.09931853413581848, -0.0073842681013047695, -0.0041993772611021996], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004499138449318707, -2.3841574147809297e-05, -0.014947437681257725, -0.17243604362010956, -0.22061215341091156, -0.001775832730345428, -0.0028641889803111553, -0.5212695598602295, -1.0605380535125732, -0.17066197097301483, -0.10723742097616196, -0.003898521652445197, -0.16523289680480957, -0.020694177597761154, -0.011940904892981052, -0.026180841028690338, -0.1740756630897522, -0.782794713973999, -0.07726965099573135, -0.0051290360279381275, -0.0009135602158494294, -0.0007811117684468627], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005762108485214412, -5.793403761344962e-05, -7.152555099310121e-07, -0.008667821995913982, -0.023869067430496216], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05547128617763519, -1.1920928244535389e-07, -2.276871418871451e-05, -0.0015941066667437553, -0.008205156773328781, -0.00018356545479036868, -0.0003680505615193397, -0.006092429161071777, -0.06187887117266655, -0.012605514377355576], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0014578201808035374, -0.0012871085200458765, -0.010532978922128677, -3.814624506048858e-05, -0.00014077626110520214, -0.012531350366771221, -0.00630958890542388, -3.2066785934148356e-05, -8.583032467868179e-06, -0.1729952096939087, -0.022891897708177567], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.009732415899634361, -6.401333666872233e-05, -7.438383181579411e-05, -0.00046826363541185856, -0.009065656922757626, -2.0861407392658293e-05, -0.00013505500101018697, -0.0019032713025808334, -0.008363697677850723, -4.172316494077677e-06, -2.3841830625315197e-06, -0.0032652891241014004, -0.011015201918780804], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=[col.replace(\"_\", \" \").title().strip(\" \") for col in data.columns])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=[", "col", ".", "replace", "(", "\"", "_", "\"", ",", " \"", " \"", ")", ".", "title", "()", ".", "strip", "(", "\"", " \"", ")", " for", " col", " in", " data", ".", "columns", "])", "\n"], "logprobs": [-0.08582867681980133, -9.65590606938349e-06, -0.0009107018122449517, -0.0041547417640686035, -0.01758015900850296, -0.052312955260276794, -0.00045849301386624575, -0.38242048025131226, -0.09684920310974121, -0.9590942859649658, -3.3304381370544434, -2.668419361114502, -0.4710066616535187, -0.6974492073059082, -0.027938995510339737, -0.9601730704307556, -0.08672014623880386, -0.001259844284504652, -0.025340063497424126, -0.1716533750295639, -0.00718083418905735, -0.6970847845077515, -0.966344952583313, -0.0002759314374998212, -2.688002109527588, -2.688504695892334, -1.731386661529541, -0.00755110289901495, -0.3645613491535187, -0.0021297885105013847, -0.1536840945482254, -0.00850294716656208, -0.003320420393720269, -0.1495550125837326, -0.12390285730361938, -0.004317605402320623, -0.16667762398719788, -0.527466356754303], "finish_reason": "stop"}], "metrics": {"energy": 270.9628678207397, "energy_per_token": 1.693517923879623, "time": 10.288889, "time_per_token": 0.06430555624999999}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -1.5311756134033203, -0.0017314456636086106, -0.05516347289085388, -0.2943362891674042, -0.023769425228238106, -0.0038267967756837606, -0.8846012949943542, -0.0002980979916173965, -0.0010802869219332933], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"Data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -1.5742809772491455, -1.3216559886932373, -0.017090076580643654, -0.008260844275355339, -0.07670199126005173, -0.4142427146434784, -0.08644815534353256, -0.015952929854393005, -0.0003060825983993709, -0.0012811556225642562], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.9966624975204468, -0.00033825874561443925, -0.004238788038492203, -0.3746337294578552, -0.187269926071167, -0.0004359725280664861, -0.00021717573690693825, -0.006145983003079891, -0.006166124250739813], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -1.1593561172485352, -0.1646534949541092, -0.10174141079187393, -0.005297788418829441, -0.20011897385120392, -0.01928870752453804, -0.009741506539285183, -0.02347416803240776, -2.0715742111206055, -0.0035691861994564533, -0.0005855038180015981, -0.0006809299811720848], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005770448478870094, -5.876845170860179e-05, -8.344646857949556e-07, -0.007537260185927153, -0.018229445442557335], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.060364965349435806, -1.1920928244535389e-07, -2.0503786799963564e-05, -0.00181783817242831, -0.006392744369804859, -0.00015352977789007127, -0.0003895000845659524, -0.005847016349434853, -0.06116436794400215, -0.013509870506823063], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012990139657631516, -0.0012451999355107546, -0.008550935424864292, -4.708655978902243e-05, -0.00014983485743869096, -0.015333977527916431, -0.0059112487360835075, -2.8490614567999728e-05, -7.271740287251305e-06, -0.200310617685318, -0.023842759430408478], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010638783685863018, -6.4490144723095e-05, -5.7338023907504976e-05, -0.0006094505661167204, -0.008579537272453308, -1.811964830267243e-05, -0.00012087091454304755, -0.0019892919808626175, -0.00565358204767108, -4.529942543740617e-06, -1.7881377516459906e-06, -0.003069810103625059, -0.012361223809421062], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns, index=data.index)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ",", " index", "=", "data", ".", "index", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0721900686621666, -9.775113539944869e-06, -0.0009191579301841557, -0.004296121187508106, -0.02097134478390217, -0.07514668256044388, -0.000348268891684711, -0.3377319872379303, -0.09877686202526093, -0.9802935719490051, -0.28108829259872437, -0.025929506868124008, -0.006124893669039011, -1.993194580078125, -0.020280616357922554, -0.0028406528290361166, -0.0039177583530545235, -0.0016862234333530068, -0.00028308198670856655, -1.4861952066421509, -2.3841855067985307e-07, -2.3841830625315197e-06, -3.9457496313843876e-05, -0.00038509105797857046, -0.10240685194730759], "finish_reason": "stop"}], "metrics": {"energy": 208.07828024864182, "energy_per_token": 1.5188195638586994, "time": 9.261823, "time_per_token": 0.06760454744525547}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -2.6746010780334473, -0.6092601418495178, -0.0009696549386717379, -0.07468722760677338, -1.8117306232452393, -0.007455146871507168, -0.6211292743682861, -0.00024875884992070496, -0.0012181727215647697], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"Data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -1.5742809772491455, -1.011732816696167, -0.577717661857605, -0.6627530455589294, -0.18924538791179657, -1.0577635765075684, -0.060439590364694595, -0.0060643479228019714, -0.0003480305604171008, -0.0014284178614616394], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.465196967124939, -0.0065645999275147915, -0.09412141144275665, -0.007117393426597118, -0.004211010877043009], "finish_reason": "stop"}, {"text": " ValueError(f\"n_components cannot be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -2.128654956817627, -0.022148162126541138, -0.409087598323822, -0.0028372055385261774, -0.0035361635964363813, -1.6333634853363037, -0.0757407620549202, -0.1993190050125122, -0.0032140761613845825, -0.2544843256473541, -0.018231084570288658, -0.009419403970241547, -0.020323604345321655, -0.2621828317642212, -0.622963547706604, -0.20818881690502167, -0.4446367919445038, -0.2892420291900635, -0.024349207058548927, -0.0026653024833649397], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005976559477858245, -6.794698856538162e-05, -8.344646857949556e-07, -0.007637585513293743, -0.023083772510290146], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04845934361219406, -1.1920928244535389e-07, -2.1815061700181104e-05, -0.001821169862523675, -0.006304850801825523, -0.00016926287207752466, -0.00031668893643654883, -0.006235904525965452, -0.06742192059755325, -0.014681399799883366], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0011705459328368306, -0.0017370387213304639, -0.008930503390729427, -3.8742269680369645e-05, -0.0001394651480950415, -0.01551404595375061, -0.005132593680173159, -3.516612196108326e-05, -7.510157047363464e-06, -0.16307835280895233, -0.021882282570004463], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.009069791994988918, -5.61460001335945e-05, -6.818538531661034e-05, -0.0005112771177664399, -0.006923849694430828, -1.823885577323381e-05, -0.00014530557382386178, -0.001958239823579788, -0.005864318925887346, -3.814689989667386e-06, -2.145764938177308e-06, -0.003606365295127034, -0.013914953917264938], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.07229997217655182, -1.1801649634435307e-05, -0.0010087168775498867, -0.0037659930530935526, -0.0183144249022007, -0.07984311133623123, -0.0003289635351393372, -1.7674307823181152, -0.2882181406021118], "finish_reason": "stop"}], "metrics": {"energy": 206.61626672744745, "energy_per_token": 1.7509853112495546, "time": 8.197601, "time_per_token": 0.06947119491525425}}
{"outputs": [{"text": " type(data) is not pd.DataFrame:", "tokens": [" type", "(", "data", ")", " is", " not", " pd", ".", "DataFrame", ":", "\n"], "logprobs": [-2.9519760608673096, -0.00036006642039865255, -0.0187899861484766, -0.0007113072206266224, -0.9272767901420593, -0.06449532508850098, -0.03418184071779251, -0.00025900822947733104, -0.28105390071868896, -0.07673400640487671, -0.008492781780660152], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.5370867252349854, -0.0055153584107756615, -0.0002843929105438292, -0.001150541938841343], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.8583299517631531, -0.14442889392375946, -0.00984704028815031, -1.0172008275985718, -0.01688380353152752, -0.03212830796837807], "finish_reason": "stop"}, {"text": " ValueError(\"Data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "Data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021928329952061176, -7.033323527139146e-06, -0.031172120943665504, -0.022837018594145775, -1.5974141359329224, -1.3940502405166626, -0.016182150691747665, -0.009144803509116173, -0.06612629443407059, -0.44180816411972046, -0.09180418401956558, -0.01612209342420101, -0.00028081765049137175, -0.0015785150462761521], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.4327037334442139, -0.16379711031913757, -0.045754533261060715, -0.49713146686553955, -0.006492000073194504, -0.013991131447255611], "finish_reason": "stop"}, {"text": " ValueError(f\"n_components should be less than the number of columns in data, i.e. {len(data.columns)}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "n", "_", "components", " should", " be", " less", " than", " the", " number", " of", " columns", " in", " data", ",", " i", ".", "e", ".", " {", "len", "(", "data", ".", "columns", ")}", ".", "\"", ")", "\n"], "logprobs": [-0.00042798896902240813, -2.5033637939486653e-05, -0.014540658332407475, -2.229640007019043, -0.02021554857492447, -0.4267551004886627, -0.002618101192638278, -0.0035669293720275164, -0.5686390995979309, -0.3136945962905884, -0.3091829717159271, -0.09270957857370377, -1.757400393486023, -0.04409212991595268, -0.005946681834757328, -0.032930873334407806, -0.31806516647338867, -0.5932414531707764, -1.6668164730072021, -3.778782606124878, -0.0006932000978849828, -0.0004848258395213634, -0.042819928377866745, -0.9139321446418762, -0.04351969063282013, -0.00047779586748220026, -0.0013463966315612197, -0.011036896146833897, -0.00207673292607069, -0.014837155118584633, -0.39120760560035706, -0.015954218804836273, -0.0017791647696867585, -0.0013083001831546426], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0006249382277019322, -6.580135959666222e-05, -8.344646857949556e-07, -0.00979510135948658, -0.019088266417384148], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04789053648710251, -1.1920928244535389e-07, -2.3364747903542593e-05, -0.0024246361572295427, -0.006251660641282797, -0.00018952481332235038, -0.0003364712174516171, -0.008270775899291039, -0.057083144783973694, -0.013104976154863834], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012528197839856148, -0.0012287693098187447, -0.009022891521453857, -4.2437604861333966e-05, -0.00013207517622504383, -0.013389196246862411, -0.004819443449378014, -3.1470757676288486e-05, -7.033323527139146e-06, -0.17750568687915802, -0.017960531637072563], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.008705757558345795, -6.723177648382261e-05, -6.806619057897478e-05, -0.0005194983095861971, -0.009235636331140995, -2.002696055569686e-05, -0.00015078838623594493, -0.0020493713673204184, -0.006566612981259823, -4.291525328881107e-06, -2.0265558760002023e-06, -0.0033433514181524515, -0.012295638211071491], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-0.07810031622648239, -9.298280929215252e-06, -0.0008497203234583139, -0.003989120479673147, -0.020234240218997, -0.07205663621425629, -0.00029059001826681197, -0.35443660616874695, -0.10651839524507523, -0.6240280270576477, -0.21761126816272736, -0.030503669753670692, -0.005229840520769358, -0.47923538088798523, -0.31519970297813416], "finish_reason": "stop"}], "metrics": {"energy": 207.7145424680709, "energy_per_token": 1.4731527834614957, "time": 9.466977, "time_per_token": 0.06714168085106383}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -2.6746010780334473, -1.5502123832702637, -0.016292167827486992, -0.0691569373011589, -0.686497151851654, -0.01560887973755598, -0.5705459713935852, -0.0002790300059132278, -0.001520192832686007], "finish_reason": "stop"}, {"text": " len(data.columns) < 2:", "tokens": [" len", "(", "data", ".", "columns", ")", " <", " ", "2", ":", "\n"], "logprobs": [-2.129377603530884, -0.0004913791781291366, -0.007186160422861576, -0.7721472978591919, -0.06249745562672615, -0.007463666144758463, -0.9833735227584839, -0.6819169521331787, -0.4863922894001007, -0.021788975223898888, -0.013164391741156578], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -1.7263071537017822, -0.01529746688902378, -0.0058433422818779945, -0.05458559840917587, -0.13682818412780762, -0.061677709221839905, -0.008817191235721111, -0.0002805792901199311, -0.0018649582052603364], "finish_reason": "stop"}, {"text": " not data.shape[0] > 0:", "tokens": [" not", " data", ".", "shape", "[", "0", "]", " >", " ", "0", ":", "\n"], "logprobs": [-1.465969443321228, -0.1966089904308319, -0.04586851969361305, -1.925412654876709, -0.00801135040819645, -1.2828449010849, -1.5025346279144287, -0.4187828004360199, -0.005654885899275541, -0.07747840136289597, -0.06636995822191238, -0.011760073713958263], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -0.5113865733146667, -0.3789644241333008, -0.2589721977710724, -0.07552379369735718, -0.5003394484519958, -0.0028556303586810827, -0.00723847234621644, -0.1949659138917923, -0.02440784126520157, -0.015192858874797821, -0.046466927975416183, -0.19293352961540222, -0.7789281010627747, -0.3089091181755066, -0.06653493642807007, -0.0032626751344650984, -0.0006569849792867899, -0.0010183630511164665], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005821678787469864, -6.794698856538162e-05, -7.152555099310121e-07, -0.010691032744944096, -0.019248249009251595], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.05982489883899689, -1.1920928244535389e-07, -1.728519782773219e-05, -0.0016680150292813778, -0.005101164802908897, -0.00019369633810129017, -0.000341476290486753, -0.005372609477490187, -0.06885976344347, -0.012495444156229496], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0011897159274667501, -0.0012694880133494735, -0.009718249551951885, -4.660974445869215e-05, -0.0001262346631847322, -0.015203190967440605, -0.0050469618290662766, -3.9934315282152966e-05, -9.059865078597795e-06, -0.19281792640686035, -0.024540454149246216], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.010745285078883171, -4.5060096454108134e-05, -8.391981828026474e-05, -0.0004938812926411629, -0.007880785502493382, -2.1576648578047752e-05, -0.0001333863037871197, -0.002203062642365694, -0.006347376853227615, -3.933898824470816e-06, -2.0265558760002023e-06, -0.003144441172480583, -0.011075684800744057], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.08896595984697342, -1.1205610462639015e-05, -0.0010356307029724121, -0.003311034059152007, -0.01780385710299015, -0.06323797255754471, -0.0004748170613311231, -0.32377293705940247, -0.10272875428199768, -0.709926187992096, -0.2547314465045929, -0.02578197605907917, -0.00583729799836874, -1.638350248336792, -1.1920928244535389e-07, -2.861018856492592e-06, -3.3378044463461265e-05, -0.00039152585668489337, -2.1390230655670166, -0.003172010648995638], "finish_reason": "stop"}], "metrics": {"energy": 274.2616898002624, "energy_per_token": 1.9045950680573778, "time": 10.501658, "time_per_token": 0.07292818055555556}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -0.21770773828029633, -0.17803139984607697, -0.2537998855113983, -0.08696212619543076, -0.6463050842285156, -0.0010125277331098914, -0.018125727772712708, -0.194514200091362, -0.010898352600634098, -0.002211864572018385, -0.5370867252349854, -0.0055153584107756615, -0.0002843929105438292, -0.001150541938841343], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.9275838732719421, -0.00692562572658062, -0.1341465562582016, -0.01108440849930048, -0.015616273507475853], "finish_reason": "stop"}, {"text": " ValueError(\"data should not contain non-numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " not", " contain", " non", "-", "numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0021972341928631067, -4.410734163684538e-06, -0.03511478379368782, -0.02616226114332676, -0.6149094700813293, -0.352520227432251, -2.368809938430786, -0.05477656424045563, -0.10256480425596237, -0.010080852545797825, -0.0950007513165474, -0.14258526265621185, -0.037441615015268326, -0.0031587013509124517, -0.0003091811086051166, -0.0014585343888029456], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.465196967124939, -0.0065645999275147915, -0.09412141144275665, -0.007117393426597118, -0.004211010877043009], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot exceed number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " exceed", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004861365014221519, -2.407998726994265e-05, -0.013247567228972912, -0.18028680980205536, -0.2616010010242462, -0.0013753250241279602, -0.0032587540335953236, -1.2418763637542725, -2.6681437492370605, -1.3376902341842651, -0.0022054414730519056, -0.030258161947131157, -0.2917959988117218, -0.24808456003665924, -0.12072566151618958, -0.005297788418829441, -0.00041547726141288877, -0.0008492438937537372], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005918181850574911, -5.745722592109814e-05, -1.0728830375228426e-06, -0.008916324935853481, -0.021494649350643158], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.046716224402189255, -1.1920928244535389e-07, -1.7881233361549675e-05, -0.001836043898947537, -0.006589232943952084, -0.00016008525562938303, -0.0003054867556784302, -0.005961375776678324, -0.06824220716953278, -0.011573318392038345], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012519863666966558, -0.0016814630944281816, -0.008907227776944637, -4.541770613286644e-05, -0.00016199229867197573, -0.013881330378353596, -0.0048345099203288555, -3.45700973412022e-05, -8.4638240878121e-06, -0.18765191733837128, -0.02489330619573593], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.012478608638048172, -5.185469490243122e-05, -6.925819616299123e-05, -0.0004903068183921278, -0.009619549848139286, -2.0503786799963564e-05, -0.00013934595335740596, -0.0024969372898340225, -0.006172403693199158, -4.0531076592742465e-06, -2.264974000354414e-06, -0.002812479855492711, -0.010673695243895054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, index=data.index, columns=['0', '1'])", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " index", "=", "data", ".", "index", ",", " columns", "=['", "0", "'", ",", " '", "1", "'])", "\n"], "logprobs": [-0.06583636999130249, -1.0371154530730564e-05, -0.0009560781763866544, -0.003759104758501053, -0.018717683851718903, -0.06754928827285767, -0.00032264748006127775, -0.36977359652519226, -2.87251615524292, -0.003371034050360322, -0.004494683817028999, -0.004305379465222359, -0.0004789874074049294, -0.10214123874902725, -0.028376052156090736, -1.1330034732818604, -1.8481073379516602, -0.07069714367389679, -0.043269481509923935, -0.039476025849580765, -0.0007173825288191438, -0.055234313011169434, -0.6979227066040039], "finish_reason": "stop"}], "metrics": {"energy": 213.5376276159287, "energy_per_token": 1.617709300120672, "time": 9.247966, "time_per_token": 0.07006034848484849}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data should be a pandas DataFrame.')", "tokens": [" Value", "Error", "('", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -1.499009132385254, -0.0031047496013343334, -0.09835223108530045, -0.24805152416229248, -0.03350017964839935, -0.004358435980975628, -1.0482425689697266, -0.012873400002717972, -0.0010590903693810105], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.8456960916519165, -0.0060431379824876785, -0.12069502472877502, -0.013675921596586704, -0.0152124660089612], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.002207106677815318, -5.483612312673358e-06, -0.0368742011487484, -0.028253333643078804, -0.5411272048950195, -0.291095107793808, -0.34725746512413025, -1.2063075304031372, -0.21666528284549713, -0.22104622423648834, -0.005951540544629097, -0.0003051292151212692, -0.001383896335028112], "finish_reason": "stop"}, {"text": " not len(data.columns):", "tokens": [" not", " len", "(", "data", ".", "columns", "):", "\n"], "logprobs": [-1.3403234481811523, -2.804466485977173, -0.00041059168870560825, -0.004175635054707527, -0.6721895337104797, -0.047700293362140656, -0.16155081987380981, -0.005911604501307011], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should not be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " not", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003911683743353933, -2.5510462364763953e-05, -0.011808141134679317, -0.18607380986213684, -0.23743607103824615, -0.0016656348016113043, -0.0024207117967307568, -0.5242471098899841, -0.9889422655105591, -0.16780966520309448, -0.1009432002902031, -0.004270126111805439, -0.2006131410598755, -0.020319398492574692, -0.010385989211499691, -0.02682793326675892, -0.17613910138607025, -0.7849422693252563, -0.20716100931167603, -0.05107938125729561, -0.003363430267199874, -0.0007453762227669358, -0.0007694382802583277], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.000559292733669281, -5.9126061387360096e-05, -7.152555099310121e-07, -0.007604578509926796, -0.02130351960659027], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.04648866131901741, -1.1920928244535389e-07, -2.002696055569686e-05, -0.0019010106334462762, -0.007504486478865147, -0.00016032364510465413, -0.00030119650182314217, -0.006053328514099121, -0.05960861220955849, -0.01353445090353489], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0012880609137937427, -0.0013275867095217109, -0.008752199821174145, -4.3987260141875595e-05, -0.00013791563105769455, -0.01691966876387596, -0.005700758658349514, -3.099393507000059e-05, -6.6756979322235566e-06, -0.20476898550987244, -0.024750273674726486], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.012835505418479443, -4.637133679352701e-05, -7.199982064776123e-05, -0.0005433275364339352, -0.008012533187866211, -2.3364747903542593e-05, -0.00014959646796341985, -0.002025458961725235, -0.00566958449780941, -3.814689989667386e-06, -2.50339189733495e-06, -0.003515019081532955, -0.015255437232553959], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.06948471814393997, -1.0132738680113107e-05, -0.0009691785671748221, -0.004208992701023817, -0.02206490747630596, -0.07055751979351044, -0.000303818320389837, -1.663662314414978, -0.25803712010383606], "finish_reason": "stop"}], "metrics": {"energy": 206.88315216636664, "energy_per_token": 1.7097781170774102, "time": 8.204046, "time_per_token": 0.06780203305785124}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.1878940761089325, -0.03968789055943489, -0.00023135847004596144, -0.01529934536665678, -0.0005427317810244858, -0.026340041309595108, -1.4305012882687151e-05, -0.04086967557668686, -0.03933277353644371, -0.008077099919319153], "finish_reason": "stop"}, {"text": " ValueError('Input data should be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.036874547600746155, -5.328513361746445e-05, -1.6588374376296997, -0.3044477105140686, -0.12873545289039612, -1.499009132385254, -0.0031047496013343334, -0.09835223108530045, -0.24805152416229248, -0.03350017964839935, -0.004358435980975628, -0.5202121734619141, -0.0007295330869965255], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.9888368844985962, -0.17012663185596466, -0.0083414725959301, -1.4370843172073364, -0.013726131990551949, -0.029683994129300117], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.002203657291829586, -5.125986263010418e-06, -0.035148736089468, -0.026506993919610977, -0.5914233922958374, -0.35466331243515015, -2.524899959564209, -0.04002982750535011, -0.25661420822143555, -1.675741195678711, -0.05056963488459587, -0.005654174834489822, -0.00035065223346464336, -0.001262344536371529], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.3218486309051514, -0.17808367311954498, -0.03716127946972847, -0.5613482594490051, -0.006064110901206732, -0.01324286125600338], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be larger than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " larger", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00042548662167973816, -2.253030106658116e-05, -0.011652737855911255, -0.18257656693458557, -0.23785659670829773, -0.0019480077316984534, -0.00271071819588542, -1.2036688327789307, -0.06653939932584763, -2.812987804412842, -0.003276220755651593, -0.14632616937160492, -0.01889585703611374, -0.009031515568494797, -0.023672452196478844, -0.21790188550949097, -0.5702585577964783, -0.26471006870269775, -0.04628096520900726, -0.003577738767489791, -0.0007846852531656623, -0.0006223172531463206], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0005783553933724761, -5.793403761344962e-05, -7.152555099310121e-07, -0.008135869167745113, -0.02049308270215988], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "values", ")", "\n"], "logprobs": [-0.049770787358284, -1.1920928244535389e-07, -2.1576648578047752e-05, -0.0019193338230252266, -0.006725650746375322, -0.00019333878299221396, -0.00039283663500100374, -0.005803165026009083, -2.869917631149292, -0.44244620203971863, -0.020616289228200912, -0.015010383911430836], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0013234198559075594, -0.0012977044098079205, -0.00964209996163845, -3.886147169396281e-05, -0.00015662873920518905, -0.0191260427236557, -0.005672666244208813, -3.349725011503324e-05, -7.986990567587782e-06, -0.18522796034812927, -0.02371308207511902], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.01149577833712101, -6.532455881824717e-05, -6.317892984952778e-05, -0.0005663221818394959, -0.007563880644738674, -1.764281842042692e-05, -0.00014447122521232814, -0.0021777264773845673, -0.006577863823622465, -3.3378546504536644e-06, -2.145764938177308e-06, -0.0027327120769768953, -0.008959803730249405], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-0.07994623482227325, -1.0013530300057027e-05, -0.0008114859228953719, -0.004533133469521999, -0.023141199722886086, -0.06893075257539749, -0.00027736154152080417, -0.35857874155044556, -0.1227889284491539, -0.7229747772216797, -0.25647225975990295, -0.020229216665029526, -0.0054209851659834385, -0.4846542179584503, -0.34283456206321716], "finish_reason": "stop"}], "metrics": {"energy": 201.03230787277207, "energy_per_token": 1.5829315580533234, "time": 8.826636, "time_per_token": 0.06950107086614174}}
