{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7012560963630676, -0.0018876844551414251, -0.8928422331809998, -0.001727756578475237, -0.00028534632292576134, -0.0012694880133494735], "finish_reason": "stop"}, {"text": " not data.columns.is_unique:", "tokens": [" not", " data", ".", "columns", ".", "is", "_", "unique", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -1.1972205638885498, -0.011228937655687332, -0.9206846356391907, -0.0348484143614769, -0.008777369745075703], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.5408570170402527, -0.5854601263999939, -0.02489551529288292, -0.0022413628175854683, -0.0002643712505232543, -0.0014215136179700494], "finish_reason": "stop"}, {"text": " not isinstance(n_components, int) or n_components < 1 or n_components > len(data.columns):", "tokens": [" not", " isinstance", "(", "n", "_", "components", ",", " int", ")", " or", " n", "_", "components", " <", " ", "1", " or", " n", "_", "components", " >", " len", "(", "data", ".", "columns", "):", "\n"], "logprobs": [-1.645696759223938, -0.9157786965370178, -8.332382276421413e-05, -0.025919750332832336, -3.099436753473128e-06, -2.9802276912960224e-06, -0.0001401803019689396, -0.011906743980944157, -0.3375703990459442, -0.013561147265136242, -0.042858533561229706, -7.152555099310121e-07, -7.152555099310121e-07, -1.4375122785568237, -0.0011830481234937906, -0.07941587269306183, -1.0664070844650269, -0.059430357068777084, -5.364403477869928e-06, -7.152555099310121e-07, -0.07669790089130402, -0.5371934175491333, -0.0001062098381225951, -0.01038870308548212, -0.005357787944376469, -0.004337189719080925, -0.008945271372795105, -0.0017973711946979165], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -0.193715438246727, -0.4647279977798462, -0.00026043839170597494, -0.0005011494504287839, -1.6009459495544434, -0.055441964417696, -0.12669986486434937, -0.00284576416015625, -0.09638326615095139, -0.012362519279122353, -0.010870406404137611, -0.04715925455093384, -0.19554822146892548, -1.2142481803894043, -0.032581768929958344, -0.0011245838832110167, -0.0003692421887535602, -0.0015432840446010232], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.003146936884149909, -0.0001250427303602919, 0.0, -0.01325733121484518, -0.06236966699361801], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.to_numpy())", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "to", "_", "numpy", "())", "\n"], "logprobs": [-0.232672318816185, -7.271740287251305e-06, -3.3378044463461265e-05, -2.276871418871451e-05, -3.0517112463712692e-05, -1.6689286894688848e-06, -0.00014888131408952177, -0.0015810144832357764, -2.333264112472534, -2.026057720184326, -5.245195097813848e-06, -0.0003307510633021593, -0.04776814207434654, -0.014115612022578716], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0001728385395836085, -0.00031585473334416747, -0.00034528967808000743, -8.702239938429557e-06, -0.00010990492592100054, -0.10769543051719666, -0.005105790216475725, -1.311301275563892e-06, -2.50339189733495e-06, -0.014619019813835621, -0.004725954029709101], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0026423560921102762, -1.311301275563892e-06, -5.4596363042946905e-05, -0.0052001927979290485, -0.0007401349139399827, -6.83045873302035e-05, -5.304672595229931e-05, -0.0009557208395563066, -0.004375289659947157, -2.6464111215318553e-05, 0.0, -0.0010493254521861672, -0.002241719514131546], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0012657972984015942, -1.6689160474925302e-05, -0.00017486473370809108, -0.000806602300144732, -0.005263637285679579, -0.015272930264472961, -4.100715523236431e-05, -0.4056183099746704, -0.4329615533351898], "finish_reason": "stop"}], "metrics": {"energy": 735.8987753982547, "energy_per_token": 4.905991835988364, "time": 19.794172, "time_per_token": 0.13196114666666667}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.702659547328949, -0.0024087007623165846, -0.00034231049357913435, -0.0012511529494076967], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.4802241027355194, -1.081243634223938, -0.03208443894982338, -0.003336103865876794, -0.0002768848498817533, -0.0013923484366387129], "finish_reason": "stop"}, {"text": " not data.shape[1] >= n_components:", "tokens": [" not", " data", ".", "shape", "[", "1", "]", " >=", " n", "_", "components", ":", "\n"], "logprobs": [-1.6520425081253052, -0.6365931034088135, -0.005554005969315767, -3.6705517768859863, -0.0038134963251650333, -0.40054428577423096, -0.002638789126649499, -1.3102127313613892, -0.04163312911987305, -9.536738616588991e-07, -1.7881377516459906e-06, -0.09770528227090836, -0.007685851771384478], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -0.44318997859954834, -0.00022539935889653862, -0.0005463061388581991, -0.509316086769104, -0.23096439242362976, -0.18202173709869385, -0.19474674761295319, -0.12013383209705353, -0.002639264799654484, -0.006862405221909285, -0.10635720193386078, -0.02199179120361805, -0.01437404565513134, -0.04412669315934181, -0.34744587540626526, -0.3558478355407715, -0.728378176689148, -0.05270081385970116, -0.0008947421447373927, -0.0005735897575505078, -0.004341937601566315], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0023913378827273846, -0.00011181206355104223, 0.0, -0.012209792621433735, -0.05475015938282013], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2167321890592575, -7.867782187531702e-06, -2.884823152271565e-05, -2.884823152271565e-05, -3.40932747349143e-05, -1.7881377516459906e-06, -0.00017331528943032026, -0.0014435357879847288, -0.10177672654390335, -0.016748880967497826], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0002087136817863211, -0.0003364712174516171, -0.000446696620201692, -1.0013530300057027e-05, -7.70062324590981e-05, -0.11743339896202087, -0.004048010800033808, -1.311301275563892e-06, -2.0265558760002023e-06, -0.016820035874843597, -0.004796190652996302], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.002718208124861121, -1.1920922133867862e-06, -5.638440416078083e-05, -0.003831784473732114, -0.0010921949287876487, -0.0001037067049765028, -5.209310256759636e-05, -0.0007921895012259483, -0.0049649993889033794, -2.3364747903542593e-05, 0.0, -0.0008797351038083434, -0.002371001522988081], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0014398456551134586, -1.811964830267243e-05, -0.00021217002358753234, -0.0005515484372153878, -0.004969151224941015, -0.017130857333540916, -4.9232225137529895e-05, -0.4760614335536957, -0.4087149500846863], "finish_reason": "stop"}], "metrics": {"energy": 665.2325302133555, "energy_per_token": 5.117173309333504, "time": 18.296694, "time_per_token": 0.1407438}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError('Input data should be a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -2.4908764362335205, -0.3453797698020935, -0.020154213532805443, -1.8780910968780518, -0.0008212531101889908, -0.08477839082479477, -0.5824148654937744, -0.0026304665952920914, -0.22106590867042542, -0.0015632801223546267], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5964521765708923, -0.0004642124113161117, -0.10210787504911423, -0.014978324063122272, -0.002169875893741846], "finish_reason": "stop"}, {"text": " ValueError(\"data should be a DataFrame with all numeric columns.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " be", " a", " Data", "Frame", " with", " all", " numeric", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0009274948388338089, -1.9073468138230965e-06, -0.023645324632525444, -0.02452079765498638, -0.3434908390045166, -0.20186838507652283, -2.4340386390686035, -0.41241660714149475, -0.022438447922468185, -0.003007058519870043, -0.7929648160934448, -1.932639241218567, -1.0459067821502686, -1.1277787685394287, -0.043050725013017654, -0.0017673838883638382, -0.00040260792593471706, -0.001465795561671257], "finish_reason": "stop"}, {"text": " not isinstance(n_components, int) or n_components <= 0:", "tokens": [" not", " isinstance", "(", "n", "_", "components", ",", " int", ")", " or", " n", "_", "components", " <=", " ", "0", ":", "\n"], "logprobs": [-1.7082386016845703, -1.0804038047790527, -7.962863310240209e-05, -0.0179101824760437, -2.9802276912960224e-06, -4.887569048150908e-06, -0.00013004888023715466, -0.011338558979332447, -0.3245663642883301, -0.011904976330697536, -0.04408722743391991, -5.960462772236497e-07, -5.960462772236497e-07, -0.36827030777931213, -0.00736000994220376, -0.0014560346025973558, -0.35259196162223816, -0.0008420973899774253], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components must be smaller or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " must", " be", " smaller", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004085659747943282, -1.1920928244535389e-07, -0.010396843776106834, -0.187493696808815, -1.562162160873413, -0.0002330270071979612, -0.095763199031353, -1.4339478015899658, -0.2354796975851059, -2.5767662525177, -1.5823655128479004, -0.024346880614757538, -0.12339741736650467, -0.5781458616256714, -0.08093949407339096, -0.055199794471263885, -0.20996592938899994, -0.7811877727508545, -0.1279059499502182, -0.4533575475215912, -0.07275065034627914, -0.0009946642676368356, -0.0009177286992780864, -0.00415129866451025], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.00253700977191329, -0.00011777184408856556, 0.0, -0.012770067900419235, -0.0626891553401947], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.22588123381137848, -1.1801649634435307e-05, -3.504691630951129e-05, -3.361645576660521e-05, -2.932505594799295e-05, -1.4305104514278355e-06, -0.00016258825780823827, -0.0014427024871110916, -0.11180942505598068, -0.014045204035937786], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0001586549769854173, -0.00030286493711173534, -0.00034791138023138046, -7.986990567587782e-06, -7.760223525110632e-05, -0.1071576401591301, -0.0061767869628965855, -1.5497195136049413e-06, -2.264974000354414e-06, -0.015692908316850662, -0.004330424126237631], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003367588622495532, -1.311301275563892e-06, -5.400034933700226e-05, -0.0033687767572700977, -0.0006660388899035752, -8.49926145747304e-05, -4.029192859889008e-05, -0.0007934997556731105, -0.005655952729284763, -2.658331868587993e-05, -1.1920928244535389e-07, -0.0010064542293548584, -0.00224956963211298], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0012815127847716212, -2.062299427052494e-05, -0.00022301571152638644, -0.0006086166249588132, -0.004530641250312328, -0.017109999433159828, -4.5298504119273275e-05, -0.42597460746765137], "finish_reason": "stop"}], "metrics": {"energy": 684.3992481117252, "energy_per_token": 5.107457075460636, "time": 18.705254, "time_per_token": 0.13959144776119403}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError('Input data must be a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -2.4908764362335205, -0.3453797698020935, -0.020154213532805443, -0.28305938839912415, -0.0004855407460127026, -0.059318918734788895, -0.6597663164138794, -0.001379848807118833, -0.3152620792388916, -0.0015868464251980186], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5964521765708923, -0.0004642124113161117, -0.10210787504911423, -0.014978324063122272, -0.002169875893741846], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009274948388338089, -1.9073468138230965e-06, -0.023645324632525444, -0.02452079765498638, -0.3434908390045166, -0.20186838507652283, -0.34373340010643005, -0.06442803889513016, -0.5442846417427063, -0.4844440519809723, -0.023922258988022804, -0.0024219010956585407, -0.00029273517429828644, -0.0009677494526840746], "finish_reason": "stop"}, {"text": " not isinstance(n_components, int):", "tokens": [" not", " isinstance", "(", "n", "_", "components", ",", " int", "):", "\n"], "logprobs": [-1.7082386016845703, -1.0804038047790527, -7.962863310240209e-05, -0.0179101824760437, -2.9802276912960224e-06, -4.887569048150908e-06, -0.00013004888023715466, -0.011338558979332447, -1.2841606140136719, -0.001440440770238638], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004085659747943282, -1.1920928244535389e-07, -0.010396843776106834, -0.187493696808815, -0.4140259623527527, -0.0002406545972917229, -0.0005153281381353736, -0.5274342894554138, -0.23183880746364594, -0.1742793768644333, -0.17232497036457062, -0.09900816529989243, -0.003030115505680442, -0.007231489755213261, -0.09975817799568176, -0.029177116230130196, -0.013755409978330135, -0.042119789868593216, -1.3985991477966309, -0.0010994586627930403, -0.00027926836628466845, -0.0013863962376490235], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002458290196955204, -7.486063259420916e-05, 0.0, -0.014094102196395397, -0.05414629727602005], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.24250176548957825, -1.4424220353248529e-05, -2.777537883957848e-05, -2.3364747903542593e-05, -3.540453326422721e-05, -1.311301275563892e-06, -0.0001867835089797154, -0.0017603629967197776, -0.10602306574583054, -0.013727542944252491], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00018749863374978304, -0.0003746046277228743, -0.0003357561945449561, -9.417489309271332e-06, -6.592056161025539e-05, -0.12425382435321808, -0.005351503845304251, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.0173247791826725, -0.00515109533444047], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0036010199692100286, -8.344646857949556e-07, -5.829164365422912e-05, -0.0030251238495111465, -0.0009439303539693356, -6.770858453819528e-05, -5.125868119648658e-05, -0.0007326302584260702, -0.005615293979644775, -4.279521817807108e-05, 0.0, -0.0009133219718933105, -0.0019499113550409675], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001639213995076716, -2.1219027985353023e-05, -0.00019691436318680644, -0.0007388246012851596, -0.005304073449224234, -0.01214608084410429, -4.470248313737102e-05, -1.5429315567016602, -1.0490362910786644e-05, -1.4305104514278355e-06, -2.7418097943154862e-06, -4.0411134250462055e-05, -0.17376820743083954], "finish_reason": "stop"}], "metrics": {"energy": 641.4395232715602, "energy_per_token": 5.131516186172482, "time": 17.668137, "time_per_token": 0.141345096}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.702659547328949, -0.0024087007623165846, -0.00034231049357913435, -0.0012511529494076967], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.4802241027355194, -1.081243634223938, -0.03208443894982338, -0.003336103865876794, -0.0002768848498817533, -0.0013923484366387129], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -2.0392825603485107], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0020027358550578356, -0.00011419598013162613, 0.0, -0.013453886844217777, -0.06258244812488556], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2615421712398529, -7.629365427419543e-06, -3.5523738915799186e-05, -2.8729025871143676e-05, -3.862306402879767e-05, -2.0265558760002023e-06, -0.00016497205069754273, -0.0013508014380931854, -0.11358059197664261, -0.01471429131925106], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00017808281700126827, -0.00033802041434682906, -0.0003597089380491525, -9.775113539944869e-06, -0.00010048838157672435, -0.10490909963846207, -0.0061414809897542, -1.5497195136049413e-06, -1.7881377516459906e-06, -0.01664782501757145, -0.005032609682530165], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003348816651850939, -9.536738616588991e-07, -5.745722592109814e-05, -0.006224768236279488, -0.0010378933511674404, -7.760223525110632e-05, -6.103329360485077e-05, -0.0008816407644189894, -0.004932615906000137, -2.8371408916427754e-05, 0.0, -0.0010649253381416202, -0.0020277192816138268], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0018874465022236109, -1.9192511899746023e-05, -0.0001915509783430025, -0.0006006343755871058, -0.005701351445168257, -0.016624843701720238, -3.659658250398934e-05, -0.4183587431907654], "finish_reason": "stop"}], "metrics": {"energy": 565.6882742786406, "energy_per_token": 5.656882742786406, "time": 15.979424, "time_per_token": 0.15979424}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.4802241027355194, -0.5991765260696411, -0.026108374819159508, -0.002625472843647003, -0.0003143055073451251, -0.0009995469590649009], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.1870118379592896, -1.6331539882230572e-05, -5.125986263010418e-06, -0.05185488611459732, -0.47370263934135437, -7.855583680793643e-05, -0.0011850723531097174, -0.001359134796075523, -0.0020492523908615112, -0.004614063072949648, -0.003988289274275303], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00039521988946944475, -2.3841855067985307e-07, -0.011436853557825089, -0.16990135610103607, -0.4386269152164459, -0.00023779425828251988, -0.0005816913326270878, -1.5662728548049927, -0.06818307936191559, -0.14856886863708496, -0.002435576869174838, -0.10483116656541824, -0.009953980334103107, -0.010362040251493454, -0.03533206135034561, -0.16379742324352264, -1.05681574344635, -0.029134854674339294, -0.0011985269375145435, -0.0003430254873819649, -0.001716808183118701], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0021290748845785856, -0.00012861855793744326, 0.0, -0.012928121723234653, -0.06960447877645493], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.26093757152557373, -1.1205610462639015e-05, -2.9682672902708873e-05, -2.3483953555114567e-05, -4.625213477993384e-05, -1.4305104514278355e-06, -0.00014530557382386178, -0.0014735327567905188, -0.08933855593204498, -0.014018167741596699], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00019012074335478246, -0.00038723601028323174, -0.00043871314846910536, -7.986990567587782e-06, -9.142934868577868e-05, -0.13358943164348602, -0.005029526073485613, -1.5497195136049413e-06, -2.264974000354414e-06, -0.015474137850105762, -0.004604451823979616], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003063154872506857, -1.5497195136049413e-06, -5.1973900554003194e-05, -0.004345736000686884, -0.0008316157618537545, -8.046303264563903e-05, -4.7444173105759546e-05, -0.000705589191056788, -0.0042199138551950455, -2.6940935640595853e-05, -1.1920928244535389e-07, -0.0009112972766160965, -0.0022218560334295034], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0017977281240746379, -2.2649508537142538e-05, -0.00018368464952800423, -0.0006227937992662191, -0.005206003785133362, -0.014182019047439098, -4.815939246327616e-05, -0.4945720136165619, -0.3964041769504547], "finish_reason": "stop"}], "metrics": {"energy": 633.4084877338407, "energy_per_token": 5.149662501901144, "time": 17.447191, "time_per_token": 0.141847081300813}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -0.4710153639316559, -0.004616673570126295, -0.01309215184301138], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame should not contain non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " should", " not", " contain", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -1.8319405317306519, -0.5415541529655457, -2.0614426136016846, -0.02710827998816967, -0.14373654127120972, -0.0020961235277354717, -0.029551366344094276, -0.922482967376709, -0.042105503380298615, -0.003174149664118886, -0.0004011779965367168, -0.0015111466636881232], "finish_reason": "stop"}, {"text": " data.shape[1] <= n_components:", "tokens": [" data", ".", "shape", "[", "1", "]", " <=", " n", "_", "components", ":", "\n"], "logprobs": [-0.9939802289009094, -0.0011869773734360933, -2.0631160736083984, -0.00858367420732975, -0.29492735862731934, -0.0005312938592396677, -0.3950311541557312, -0.017138710245490074, -2.50339189733495e-06, -1.9073468138230965e-06, -0.011305673979222775, -0.003526185406371951], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the input data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " input", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003734129713848233, -2.3841855067985307e-07, -0.012102152220904827, -0.18365545570850372, -0.41475456953048706, -0.00022539935889653862, -0.0005741854547522962, -0.5769191384315491, -0.2086431235074997, -0.20133155584335327, -0.18678969144821167, -0.1045665293931961, -0.003197083715349436, -0.006737255025655031, -0.09479877352714539, -0.033375438302755356, -0.015751583501696587, -0.04840221628546715, -0.35502636432647705, -0.406996488571167, -3.3583946228027344, -0.5278350710868835, -0.07078099995851517, -0.0014800796052441, -0.0006382812280207872, -0.006870100740343332], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002765404526144266, -0.00012563870404846966, 0.0, -0.013185921125113964, -0.0581192672252655], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.24301955103874207, -1.0371154530730564e-05, -3.1470757676288486e-05, -3.480850500636734e-05, -3.611976353568025e-05, -1.4305104514278355e-06, -0.00014220656885299832, -0.0014044907875359058, -0.10856014490127563, -0.015074500814080238], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00017998983094003052, -0.0003121604095213115, -0.0004109491710551083, -1.2040065485052764e-05, -8.642300235806033e-05, -0.1217077448964119, -0.0057372660376131535, -1.4305104514278355e-06, -2.145764938177308e-06, -0.016378602012991905, -0.0046065873466432095], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0031289926264435053, -1.1920922133867862e-06, -6.01988795096986e-05, -0.004744343925267458, -0.0010345588671043515, -0.00013267113536130637, -5.507317473529838e-05, -0.0009334497735835612, -0.006313735153526068, -2.5629668016335927e-05, -1.1920928244535389e-07, -0.0009740613750182092, -0.0023049949668347836], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=list(range(n_components)))", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "list", "(", "range", "(", "n", "_", "components", ")))", "\n"], "logprobs": [-0.0015263822861015797, -1.8954096958623268e-05, -0.00014041867689229548, -0.0006548406090587378, -0.006166242994368076, -0.010240394622087479, -3.838465272565372e-05, -2.03497314453125, -0.04414300248026848, -0.5241968631744385, -1.7916862964630127, -0.008371973410248756, -0.00413135439157486, -9.500529267825186e-05, -0.09741884469985962, -9.417489309271332e-06, -4.768360213347478e-06, -0.02079027146100998, -0.4516010284423828], "finish_reason": "stop"}], "metrics": {"energy": 702.6974270133973, "energy_per_token": 4.879843243148592, "time": 19.1454, "time_per_token": 0.13295416666666665}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.8108622431755066, -0.0002308817347511649, -0.0014194899704307318], "finish_reason": "stop"}, {"text": " not data.columns.dtype == np.number.all:", "tokens": [" not", " data", ".", "columns", ".", "d", "type", " ==", " np", ".", "number", ".", "all", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -0.6981265544891357, -0.0039803339168429375, -0.40905994176864624, -1.673963189125061, -3.266281055402942e-05, -1.725736141204834, -2.73280668258667, -1.2018473148345947, -0.25222069025039673, -0.008987567387521267], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.8896405100822449, -0.43509578704833984, -0.018759099766612053, -0.0029044845141470432, -0.00022098960471339524, -0.0010548033751547337], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.0930958986282349, -0.001256510615348816, -0.17223094403743744, -0.01043117418885231, -0.001705383649095893], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -0.193715438246727, -0.4647279977798462, -0.00026043839170597494, -0.0005011494504287839, -0.4772963523864746, -0.19849954545497894, -0.19064098596572876, -0.1525425761938095, -0.12918183207511902, -0.0034718969836831093, -0.007291372865438461, -0.10097488015890121, -0.028888199478387833, -0.015338673256337643, -0.04331149160861969, -0.32077452540397644, -1.474108099937439, -0.023857425898313522, -0.0007217901293188334, -0.0005769256968051195, -0.0033608165103942156], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0026104918215423822, -9.679325739853084e-05, 0.0, -0.010663080960512161, -0.05350388213992119], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.26897111535072327, -9.298280929215252e-06, -3.2782016205601394e-05, -2.3603161025675945e-05, -4.1960789531003684e-05, -1.6689286894688848e-06, -0.00014828535495325923, -0.001657065935432911, -0.0869617909193039, -0.014901635237038136], "finish_reason": "stop"}, {"text": " PCA(n_components)", "tokens": [" PCA", "(", "n", "_", "components", ")", "\n"], "logprobs": [-0.00016592556494288146, -0.00025769727653823793, -0.00039414744242094457, -9.298280929215252e-06, -0.00012540031457319856, -2.063307523727417, -0.0028584832325577736], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003093340899795294, -1.311301275563892e-06, -5.566918844124302e-05, -0.0034880531020462513, -0.0013269914779812098, -0.00011073929636040702, -4.649054244509898e-05, -0.0007584794075228274, -0.004874845035374165, -2.396077979938127e-05, -1.1920928244535389e-07, -0.0008954567601904273, -0.0020692383404821157], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=list(range(n_components)))", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "list", "(", "range", "(", "n", "_", "components", ")))"], "logprobs": [-0.0013497299514710903, -1.9788545614574105e-05, -0.0001530530134914443, -0.0006762839620932937, -0.004402231890708208, -0.01701132208108902, -3.886147169396281e-05, -1.9861888885498047, -0.04337713122367859, -0.5027862191200256, -1.7607598304748535, -0.01442386768758297, -0.004012629389762878, -0.00010156115604331717, -0.1254182755947113, -8.34461570775602e-06, -3.3378546504536644e-06, -0.021370500326156616], "finish_reason": "stop"}], "metrics": {"energy": 719.0225029792788, "energy_per_token": 5.286930168965285, "time": 19.172548, "time_per_token": 0.14097461764705882}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " not data.columns.all():", "tokens": [" not", " data", ".", "columns", ".", "all", "():", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -3.378098249435425, -0.2653980851173401, -0.02489958517253399], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.5408570170402527, -1.0463824272155762, -0.02959696762263775, -0.002848022850230336, -0.00028046013903804123, -0.0014465117128565907], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.9787160158157349, -0.00010692501382436603, -0.001335205975919962, -0.45289909839630127, -0.1416226476430893, -0.0007694382802583277, -0.0001928620331455022, -0.14719486236572266, -0.004306210670620203], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -2.0297939777374268], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002906386274844408, -9.035655966727063e-05, 0.0, -0.011753947474062443, -0.0611930750310421], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2419842630624771, -1.07287787614041e-05, -2.4676019165781327e-05, -1.966933996300213e-05, -3.8742269680369645e-05, -1.4305104514278355e-06, -0.000188332938705571, -0.0015927974600344896, -0.10015686601400375, -0.014797572046518326], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.000161038784426637, -0.000350175570929423, -0.000482442817883566, -9.417489309271332e-06, -0.00010108436981681734, -0.11000841856002808, -0.003961692098528147, -1.311301275563892e-06, -1.9073468138230965e-06, -0.016831407323479652, -0.004889199044555426], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.002741866046562791, -9.536738616588991e-07, -5.674201020156033e-05, -0.0038638473488390446, -0.0007488307310268283, -7.128461584215984e-05, -4.6967357775429264e-05, -0.00069165148306638, -0.004200564697384834, -2.3603161025675945e-05, 0.0, -0.0009086770587600768, -0.002229706384241581], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0016455217264592648, -1.7523612768854946e-05, -0.0001691436773398891, -0.0005637010326609015, -0.0060808174312114716, -0.01296860259026289, -4.23184028477408e-05, -0.4058288633823395, -0.4365277886390686], "finish_reason": "stop"}], "metrics": {"energy": 581.5852973537441, "energy_per_token": 5.435376610782654, "time": 16.180595, "time_per_token": 0.1512205140186916}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.8108622431755066, -0.0002308817347511649, -0.0014194899704307318], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -0.4589199125766754, -0.016016749665141106, -0.002713452558964491, -0.0002464944263920188, -0.0012011463986709714], "finish_reason": "stop"}, {"text": " data.shape[1] < n_components:", "tokens": [" data", ".", "shape", "[", "1", "]", " <", " n", "_", "components", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -2.336071252822876, -0.010487444698810577, -0.26721400022506714, -0.000474936212413013, -1.3431271314620972, -0.05864923819899559, -1.6689286894688848e-06, -3.4570634852570947e-06, -0.02775048278272152, -0.004169462248682976], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -0.44318997859954834, -0.00022539935889653862, -0.0005463061388581991, -1.5260778665542603, -0.05695173516869545, -0.1383957862854004, -0.0028656155336648226, -0.10408291220664978, -0.009438889101147652, -0.007854647003114223, -0.04841777682304382, -0.20015469193458557, -0.42997854948043823, -1.2551192045211792, -0.002201516181230545, -0.02863418497145176, -0.0008747326792217791, -0.0004080893413629383, -0.003275864291936159], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002875124802812934, -0.00011634149996098131, 0.0, -0.011474448256194592, -0.0568537600338459], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), index=data.index, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " index", "=", "data", ".", "index", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.3670244216918945, -1.847726889536716e-05, -7.056941103655845e-05, -0.007772441022098064, -0.11644190549850464, -4.768370445162873e-07, -6.663577369181439e-05, -2.4318398573086597e-05, -5.483612312673358e-06, -1.9073468138230965e-06, -0.0001225396408699453, -0.0009982370538637042, -0.0628357082605362, -0.0017523899441584945, -1.4125584363937378, -0.010729835368692875, -0.001967995660379529, -5.4596363042946905e-05, -3.0874729418428615e-05, -0.029383648186922073, -0.006613391451537609, -0.00034898388548754156, -0.00036137725692242384, -5.066266385256313e-05, -0.00032062159152701497, -0.0029396675527095795, -0.004037800244987011], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00019631843315437436, -0.000248043768806383, -0.0004153581103309989, -7.271740287251305e-06, -8.356221951544285e-05, -0.145912304520607, -0.004333391785621643, -1.5497195136049413e-06, -2.0265558760002023e-06, -0.014737431891262531, -0.004211960360407829], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0027046550530940294, -1.1920922133867862e-06, -5.6265202147187665e-05, -0.004539897665381432, -0.0010905277449637651, -8.725739462533966e-05, -4.672895011026412e-05, -0.0010521834483370185, -0.006140295881778002, -2.8490614567999728e-05, 0.0, -0.0010487301042303443, -0.0021476317197084427], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0013578252401202917, -1.9550132492440753e-05, -0.00021026308240834624, -0.0007768235518597066, -0.005235414020717144, -0.01224359031766653, -4.1126360883936286e-05, -1.5642067193984985, -1.0967194612021558e-05, -1.7881377516459906e-06, -2.622600959512056e-06, -4.434487345861271e-05, -0.17903795838356018], "finish_reason": "stop"}], "metrics": {"energy": 719.1522152519221, "energy_per_token": 4.8591365895400145, "time": 19.964025, "time_per_token": 0.13489206081081082}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should have only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " have", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -2.8654911518096924, -0.3494879901409149, -0.43269121646881104, -0.5251225829124451, -0.03130834549665451, -0.003018468152731657, -0.00037269797758199275, -0.0013893722789362073], "finish_reason": "stop"}, {"text": " len(data.columns) <= n_components:", "tokens": [" len", "(", "data", ".", "columns", ")", " <=", " n", "_", "components", ":", "\n"], "logprobs": [-1.9373055696487427, -0.00015400654228869826, -0.0013296105898916721, -1.123248815536499, -0.17013387382030487, -0.0065839034505188465, -0.574403703212738, -0.015864815562963486, -5.006777428206988e-06, -2.3841830625315197e-06, -0.017756076529622078, -0.0020680485758930445], "finish_reason": "stop"}, {"text": " ValueError(\"The number of components should not exceed the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "The", " number", " of", " components", " should", " not", " exceed", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -3.280395984649658, -0.11783410608768463, -0.0013896104646846652, -0.13336995244026184, -1.2830253839492798, -0.9905722737312317, -0.32884833216667175, -0.04508402571082115, -0.045508529990911484, -0.014991946518421173, -0.25164341926574707, -0.5756087303161621, -0.16836316883563995, -0.37926021218299866, -0.03146384283900261, -0.0010676642414182425, -0.0005620330339297652, -0.004785750061273575], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0024846892338246107, -0.00013052565918769687, 0.0, -0.01323427353054285, -0.05297773331403732], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2916243076324463, -1.2993727978027891e-05, -3.2066785934148356e-05, -3.015949550899677e-05, -3.2066785934148356e-05, -1.5497195136049413e-06, -0.00014733182615600526, -0.0016664678696542978, -0.10671587288379669, -0.015278800390660763], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021789084712509066, -0.00033504117163829505, -0.0004661188868340105, -1.0609570381348021e-05, -0.0001212284987559542, -0.13000304996967316, -0.005041268654167652, -1.9073468138230965e-06, -1.9073468138230965e-06, -0.01615329645574093, -0.00482976483181119], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.005109110847115517, -1.311301275563892e-06, -6.925819616299123e-05, -0.004831069614738226, -0.0009504806366749108, -6.83045873302035e-05, -5.2927523938706145e-05, -0.000811366830021143, -0.005632482469081879, -3.2305197237292305e-05, 0.0, -0.0008364992681890726, -0.002066145185381174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001557924086228013, -1.7404405298293568e-05, -0.00020275443966966122, -0.0005452338373288512, -0.004803190007805824, -0.01524017471820116, -4.017272294731811e-05, -1.3546645641326904, -1.0371154530730564e-05, -1.311301275563892e-06, -2.9802276912960224e-06, -6.305972783593461e-05, -0.1679043024778366], "finish_reason": "stop"}], "metrics": {"energy": 663.6142428493503, "energy_per_token": 5.144296456196514, "time": 18.500452, "time_per_token": 0.14341435658914728}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data is not a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -3.0871641635894775, -0.005453589837998152, -0.011658158153295517, -0.158301442861557, -0.0008191090892069042, -0.8296281695365906, -0.0006144542712718248, -0.0012835367815569043], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -1.070797324180603, -0.030445506796240807, -0.0027054871898144484, -0.0002848696312867105, -0.001404728856869042], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components must be less than number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " must", " be", " less", " than", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -1.4576820135116577, -0.00023993951617740095, -0.06228991970419884, -1.5239042043685913, -0.2716408371925354, -0.17035749554634094, -0.11967375874519348, -2.302272081375122, -0.008181982673704624, -0.1765143722295761, -0.8095837831497192, -1.161800503730774, -0.1038794219493866, -0.0006847421173006296, -0.0003634030872490257, -0.0017127619357779622], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0024846892338246107, -0.00013052565918769687, 0.0, -0.01323427353054285, -0.05297773331403732], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2916243076324463, -1.2993727978027891e-05, -3.2066785934148356e-05, -3.015949550899677e-05, -3.2066785934148356e-05, -1.5497195136049413e-06, -0.00014733182615600526, -0.0016664678696542978, -0.10671587288379669, -0.015278800390660763], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021789084712509066, -0.00033504117163829505, -0.0004661188868340105, -1.0609570381348021e-05, -0.0001212284987559542, -0.13000304996967316, -0.005041268654167652, -1.9073468138230965e-06, -1.9073468138230965e-06, -0.01615329645574093, -0.00482976483181119], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.005109110847115517, -1.311301275563892e-06, -6.925819616299123e-05, -0.004831069614738226, -0.0009504806366749108, -6.83045873302035e-05, -5.2927523938706145e-05, -0.000811366830021143, -0.005632482469081879, -3.2305197237292305e-05, 0.0, -0.0008364992681890726, -0.002066145185381174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.001557924086228013, -1.7404405298293568e-05, -0.00020275443966966122, -0.0005452338373288512, -0.004803190007805824, -0.01524017471820116, -4.017272294731811e-05, -0.4839981198310852, -0.38001376390457153], "finish_reason": "stop"}], "metrics": {"energy": 629.0255019340515, "energy_per_token": 5.422633637362512, "time": 17.450426, "time_per_token": 0.15043470689655172}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " not all(pd.api.types.is_numeric_dtype(c) for c in data.columns):", "tokens": [" not", " all", "(", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "c", ")", " for", " c", " in", " data", ".", "columns", "):", "\n"], "logprobs": [-0.9317511916160583, -1.7274881601333618, -0.0869864895939827, -0.6226372718811035, -1.5139465176616795e-05, -0.005405334290117025, -1.5497195136049413e-06, -7.152531907195225e-06, -1.4781842764932662e-05, -0.0009869233472272754, -5.960462772236497e-07, -0.003374479478225112, -2.145764938177308e-06, -3.2186455882765586e-06, -2.9802276912960224e-06, -0.0003623305819928646, -3.435025215148926, -0.002751257736235857, -0.001347706071101129, -0.007465914357453585, -7.426462980220094e-05, -0.004108560271561146, -0.15028375387191772, -0.0038948405999690294, -0.008262972347438335, -0.002722963457927108], "finish_reason": "stop"}, {"text": " ValueError(\"data should only contain numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " only", " contain", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009189196862280369, -1.4305104514278355e-06, -0.024392951279878616, -0.026036251336336136, -0.29036810994148254, -0.1617203950881958, -2.270392417907715, -0.025565052404999733, -0.5118729472160339, -0.6071943640708923, -0.017787110060453415, -0.0026519864331930876, -0.0002543602604418993, -0.0012386515736579895], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.1949043273925781, -1.597391747054644e-05, -4.768360213347478e-06, -0.05155886337161064, -0.5518583059310913, -6.806619057897478e-05, -0.0011605439940467477, -0.0015482831513509154, -0.0018705505644902587, -0.004008711315691471, -0.003653638530522585], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than the number of columns in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " the", " number", " of", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0002991705550812185, -1.1920928244535389e-07, -0.01016640942543745, -0.16191132366657257, -0.42375433444976807, -0.00024780540843494236, -0.0005746620590798557, -0.5496890544891357, -0.14614459872245789, -0.20338548719882965, -0.15268175303936005, -2.451693534851074, -0.018560659140348434, -0.0064066024497151375, -0.03404450789093971, -0.2771856486797333, -0.3454543650150299, -0.5671356320381165, -0.001956336200237274, -0.03062622807919979, -0.0005532164941541851, -0.0004258441040292382, -0.003157750703394413], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002895213197916746, -8.308542601298541e-05, 0.0, -0.012903997674584389, -0.06153009086847305], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), index=data.index, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " index", "=", "data", ".", "index", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.6363779306411743, -1.8596476365928538e-05, -5.4238757002167404e-05, -0.009873599745333195, -0.11091263592243195, -3.576278118089249e-07, -6.01988795096986e-05, -3.0040289857424796e-05, -4.768360213347478e-06, -2.145764938177308e-06, -0.00010024998482549563, -0.0008133916999213398, -0.07059361785650253, -0.0015938685974106193, -1.1938881874084473, -0.010583228431642056, -0.0016037471359595656, -4.875540980719961e-05, -2.7179348762729205e-05, -0.02978767640888691, -0.004993348848074675, -0.00027855331427417696, -0.0003305127320345491, -5.1020273531321436e-05, -0.0003293210465926677, -0.002877977676689625, -0.004634591285139322], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00017236177518498152, -0.00037853704998269677, -0.00032693761750124395, -8.22540732769994e-06, -9.345571743324399e-05, -0.11247182637453079, -0.004898095969110727, -1.5497195136049413e-06, -2.3841830625315197e-06, -0.016889663413167, -0.004442346747964621], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0037036414723843336, -1.4305104514278355e-06, -6.48477507638745e-05, -0.004190474282950163, -0.0009990707039833069, -9.285972191719338e-05, -4.6967357775429264e-05, -0.0008836655179038644, -0.005910182371735573, -2.1219027985353023e-05, 0.0, -0.0009834696538746357, -0.0022333934903144836], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.001501148217357695, -1.966933996300213e-05, -0.00018153927521780133, -0.0006392342620529234, -0.004937598016113043, -0.014634761959314346, -3.218599158572033e-05, -0.42783141136169434, -0.3806820213794708], "finish_reason": "stop"}], "metrics": {"energy": 806.8843216304776, "energy_per_token": 4.8902080098816825, "time": 21.66076, "time_per_token": 0.13127733333333333}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError('Input data must be a DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " must", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -2.4908764362335205, -0.3453797698020935, -0.020154213532805443, -0.28305938839912415, -0.0004855407460127026, -0.059318918734788895, -0.6597663164138794, -0.001379848807118833, -0.3152620792388916, -0.0015868464251980186], "finish_reason": "stop"}, {"text": " not all(data.columns.dtype.kind == 'O'):", "tokens": [" not", " all", "(", "data", ".", "columns", ".", "d", "type", ".", "kind", " ==", " '", "O", "')", ":", "\n"], "logprobs": [-0.8968672156333923, -1.903143048286438, -0.0856204628944397, -1.1776679754257202, -0.0891638845205307, -1.022216558456421, -0.042988263070583344, -1.111919641494751, -0.015279622748494148, -0.1629958152770996, -0.13727284967899323, -0.5924967527389526, -0.3830803632736206, -1.137847900390625, -0.38981008529663086, -0.21168923377990723, -0.06969031691551208], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009348789462819695, -1.9073468138230965e-06, -0.028230734169483185, -0.028041118755936623, -1.8292145729064941, -0.4755743145942688, -0.2882469892501831, -0.06968620419502258, -0.4156983494758606, -1.5434460639953613, -0.03602546826004982, -0.003375429892912507, -0.0003644755925051868, -0.0013337773270905018], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.3870023488998413, -1.3947389561508317e-05, -6.079655122448457e-06, -0.05030270665884018, -0.5785295963287354, -7.128461584215984e-05, -0.0013371107634156942, -0.0014873405452817678, -0.0020888668950647116, -0.0037111237179487944, -0.00399458222091198], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0003641180810518563, -2.3841855067985307e-07, -0.010995865799486637, -2.1752943992614746], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002834114944562316, -9.381330892210826e-05, 0.0, -0.01484314538538456, -0.05286183953285217], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.237799733877182, -8.106198947643861e-06, -3.8742269680369645e-05, -2.8132995794294402e-05, -4.458328112377785e-05, -2.145764938177308e-06, -0.00016246906307060272, -0.0014460355741903186, -0.10342857986688614, -0.012924356386065483], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021681819634977728, -0.0003532739356160164, -0.00032824851223267615, -9.536697689327411e-06, -9.417090768693015e-05, -0.10503210127353668, -0.00472998758777976, -1.4305104514278355e-06, -1.6689286894688848e-06, -0.020696979016065598, -0.00468751136213541], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0033702023793011904, -1.311301275563892e-06, -6.353653589030728e-05, -0.004288405645638704, -0.0007308434578590095, -0.00011538793478393927, -4.684815212385729e-05, -0.001077905297279358, -0.0061243013478815556, -2.884823152271565e-05, 0.0, -0.0008780676289461553, -0.0019309938652440906], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0013743727467954159, -1.7046782886609435e-05, -0.00015567521040793508, -0.0004970983718521893, -0.0054082986898720264, -0.016037514433264732, -3.8980677345534787e-05, -1.4083141088485718, -1.3589766240329482e-05, -1.5497195136049413e-06, -2.622600959512056e-06, -5.8887653722194955e-05, -0.1588945984840393], "finish_reason": "stop"}], "metrics": {"energy": 647.4295302486419, "energy_per_token": 5.395246085405349, "time": 17.643442, "time_per_token": 0.14702868333333333}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -1.070797324180603, -0.030445506796240807, -0.0027054871898144484, -0.0002848696312867105, -0.001404728856869042], "finish_reason": "stop"}, {"text": " not data.size > 0:", "tokens": [" not", " data", ".", "size", " >", " ", "0", ":", "\n"], "logprobs": [-1.6520425081253052, -0.6365931034088135, -0.005554005969315767, -0.8728280663490295, -1.9117375612258911, -0.0012546057114377618, -0.007752213627099991, -0.030511416494846344, -0.005185368936508894], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -2.0392825603485107], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0020027358550578356, -0.00011419598013162613, 0.0, -0.013453886844217777, -0.06258244812488556], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), index=data.index, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " index", "=", "data", ".", "index", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.5052155256271362, -2.038458114839159e-05, -6.5205356804654e-05, -0.007603868842124939, -0.097932830452919, -3.576278118089249e-07, -5.2927523938706145e-05, -2.586808113846928e-05, -4.410734163684538e-06, -2.622600959512056e-06, -0.00012408917245920748, -0.001096005435101688, -0.06560663878917694, -0.0016071987338364124, -1.1817413568496704, -0.007883151061832905, -0.0018497277051210403, -4.458328112377785e-05, -2.169585604860913e-05, -0.029947808012366295, -0.008324094116687775, -0.0003104920033365488, -0.00036054308293387294, -3.325883881188929e-05, -0.00024327656137757003, -0.00279845274053514, -0.004479255992919207], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00018070495571009815, -0.00030393750057555735, -0.00047017011092975736, -9.298280929215252e-06, -0.00010013079008786008, -0.13591215014457703, -0.004982673563063145, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.01843111217021942, -0.0044023506343364716], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0038259655702859163, -1.4305104514278355e-06, -5.936446541454643e-05, -0.003588904393836856, -0.0009863278828561306, -6.997340824455023e-05, -5.090107151772827e-05, -0.0008672290714457631, -0.005750778131186962, -2.8609820219571702e-05, 0.0, -0.0010380124440416694, -0.0021766559220850468], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0013891342096030712, -2.13382354559144e-05, -0.00019774865359067917, -0.0005441615357995033, -0.00496333884075284, -0.010660131461918354, -2.706014311115723e-05, -0.4483059346675873, -0.5131632089614868], "finish_reason": "stop"}], "metrics": {"energy": 665.7550629520415, "energy_per_token": 5.502107958281335, "time": 18.310865, "time_per_token": 0.15132946280991735}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7012560963630676, -0.0018876844551414251, -0.5830430388450623, -0.0003033416287507862, -0.0012868703342974186], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data contains non-numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " contains", " non", "-", "numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -2.2888104915618896, -0.0189411249011755, -0.004006455652415752, -0.02109636180102825, -1.0138983726501465, -0.09742393344640732, -0.02077462710440159, -0.0003359945258125663, -0.0016676579834893346], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be smaller than or equal to the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " smaller", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -0.44318997859954834, -0.00022539935889653862, -0.0005463061388581991, -0.509316086769104, -0.23096439242362976, -2.5817980766296387, -0.5696461200714111, -1.6749132871627808, -0.009404405951499939, -0.01393399853259325, -0.13788141310214996, -0.04555203765630722, -0.027712684124708176, -0.1116832047700882, -0.5429359078407288, -1.3837158679962158, -0.03825954720377922, -0.0010468247346580029, -0.0006957017467357218, -0.003460017265751958], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0023913378827273846, -0.00011181206355104223, 0.0, -0.012209792621433735, -0.05475015938282013], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2167321890592575, -7.867782187531702e-06, -2.884823152271565e-05, -2.884823152271565e-05, -3.40932747349143e-05, -1.7881377516459906e-06, -0.00017331528943032026, -0.0014435357879847288, -0.10177672654390335, -0.016748880967497826], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0002087136817863211, -0.0003364712174516171, -0.000446696620201692, -1.0013530300057027e-05, -7.70062324590981e-05, -0.11743339896202087, -0.004048010800033808, -1.311301275563892e-06, -2.0265558760002023e-06, -0.016820035874843597, -0.004796190652996302], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.002718208124861121, -1.1920922133867862e-06, -5.638440416078083e-05, -0.003831784473732114, -0.0010921949287876487, -0.0001037067049765028, -5.209310256759636e-05, -0.0007921895012259483, -0.0049649993889033794, -2.3364747903542593e-05, 0.0, -0.0008797351038083434, -0.002371001522988081], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0014398456551134586, -1.811964830267243e-05, -0.00021217002358753234, -0.0005515484372153878, -0.004969151224941015, -0.017130857333540916, -4.9232225137529895e-05, -0.4760614335536957, -0.4087149500846863], "finish_reason": "stop"}], "metrics": {"energy": 632.7230162916178, "energy_per_token": 5.272691802430148, "time": 17.455696, "time_per_token": 0.14546413333333333}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.4802241027355194, -0.5991765260696411, -0.026108374819159508, -0.002625472843647003, -0.0003143055073451251, -0.0009995469590649009], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -1.4576820135116577, -0.00023993951617740095, -0.06228991970419884, -1.1247915029525757, -0.35758695006370544, -0.17591357231140137, -0.1691157966852188, -0.2016778141260147, -0.02348930574953556, -0.02832738310098648, -0.4249933362007141, -0.053570885211229324, -0.05623020976781845, -0.13848702609539032, -0.4179111421108246, -0.16583873331546783, -0.5766554474830627, -0.03604926913976669, -0.0009232072625309229, -0.000617432699073106, -0.006936398800462484], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0024846892338246107, -0.00013052565918769687, 0.0, -0.01323427353054285, -0.05297773331403732], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2916243076324463, -1.2993727978027891e-05, -3.2066785934148356e-05, -3.015949550899677e-05, -3.2066785934148356e-05, -1.5497195136049413e-06, -0.00014733182615600526, -0.0016664678696542978, -0.10671587288379669, -0.015278800390660763], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021789084712509066, -0.00033504117163829505, -0.0004661188868340105, -1.0609570381348021e-05, -0.0001212284987559542, -0.13000304996967316, -0.005041268654167652, -1.9073468138230965e-06, -1.9073468138230965e-06, -0.01615329645574093, -0.00482976483181119], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.005109110847115517, -1.311301275563892e-06, -6.925819616299123e-05, -0.004831069614738226, -0.0009504806366749108, -6.83045873302035e-05, -5.2927523938706145e-05, -0.000811366830021143, -0.005632482469081879, -3.2305197237292305e-05, 0.0, -0.0008364992681890726, -0.002066145185381174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=range(n_components))", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "range", "(", "n", "_", "components", "))"], "logprobs": [-0.001557924086228013, -1.7404405298293568e-05, -0.00020275443966966122, -0.0005452338373288512, -0.004803190007805824, -0.01524017471820116, -4.017272294731811e-05, -2.1057403087615967, -0.03391338139772415, -0.4429031014442444, -0.18838267028331757, -3.0040289857424796e-05, -0.05507592484354973, -1.728519782773219e-05, -2.0265373677830212e-05, -0.01689845509827137], "finish_reason": "stop"}], "metrics": {"energy": 685.0952781391144, "energy_per_token": 5.2699636779931875, "time": 18.458496, "time_per_token": 0.14198843076923076}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -0.4710153639316559, -0.004616673570126295, -0.01309215184301138], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.5408570170402527, -1.0463824272155762, -0.02959696762263775, -0.002848022850230336, -0.00028046013903804123, -0.0014465117128565907], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.1274815797805786, -1.3351351299206726e-05, -5.8412379075889476e-06, -0.044577598571777344, -0.5222215056419373, -7.080780778778717e-05, -0.0011408970458433032, -0.0014140140265226364, -0.0021245544776320457, -0.005292571149766445, -0.003727038623765111], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00033909291960299015, -2.3841855067985307e-07, -0.011820157989859581, -0.19785821437835693, -0.43904781341552734, -0.0002535260282456875, -0.0006361367995850742, -0.5367043018341064, -0.2514643371105194, -0.2503727078437805, -0.1907189041376114, -0.10245925188064575, -0.0029874478932470083, -0.007325692102313042, -0.09555314481258392, -0.025538209825754166, -0.015348652377724648, -0.04538709670305252, -0.33550190925598145, -1.4281803369522095, -0.025390736758708954, -0.0008593680104240775, -0.0004096384218428284, -0.0030266689136624336], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002334966091439128, -0.00011276562872808427, 0.0, -0.010980655439198017, -0.07282713055610657], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.3669281303882599, -5.8412379075889476e-06, -3.6000557884108275e-05, -3.015949550899677e-05, -3.361645576660521e-05, -1.7881377516459906e-06, -0.00017736769223120064, -0.0012893705861642957, -0.11408963799476624, -0.0122067304328084], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00018749863374978304, -0.00034850722295232117, -0.0003644755925051868, -1.0013530300057027e-05, -7.915183232398704e-05, -0.12079063802957535, -0.00501766474917531, -1.5497195136049413e-06, -2.264974000354414e-06, -0.01994927227497101, -0.004739360883831978], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0031683268025517464, -1.5497195136049413e-06, -5.590759246842936e-05, -0.00395539915189147, -0.0008493629866279662, -7.557583012385294e-05, -6.48477507638745e-05, -0.0008136299438774586, -0.005125477910041809, -2.8371408916427754e-05, 0.0, -0.0009538153535686433, -0.0021693999879062176], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0014755562879145145, -1.597391747054644e-05, -0.00016175392374861985, -0.0005286726518534124, -0.004850288387387991, -0.014952252618968487, -4.827859811484814e-05, -0.40907514095306396, -0.4759172201156616], "finish_reason": "stop"}], "metrics": {"energy": 666.7517890224455, "energy_per_token": 5.250014086790909, "time": 17.451155, "time_per_token": 0.13741066929133858}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError('Input data must be a pandas DataFrame')", "tokens": [" Value", "Error", "('", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -2.4908764362335205, -0.3453797698020935, -0.020154213532805443, -0.28305938839912415, -0.0004855407460127026, -0.059318918734788895, -0.79371178150177, -0.0020896997302770615, -0.0008977196994237602, -0.6601964235305786, -0.0015892268856987357], "finish_reason": "stop"}, {"text": " not all(data.dtypes == \"float64\"):", "tokens": [" not", " all", "(", "data", ".", "d", "types", " ==", " \"", "float", "6", "4", "\"", "):", "\n"], "logprobs": [-0.8968672156333923, -1.903143048286438, -0.0856204628944397, -1.1776679754257202, -0.0891638845205307, -0.5377920269966125, -8.583032467868179e-06, -0.7606897950172424, -1.5280523300170898, -0.11821241676807404, -0.016761189326643944, -1.1920928244535389e-07, -3.266281055402942e-05, -0.6174318194389343, -0.007551339454948902], "finish_reason": "stop"}, {"text": " ValueError(\"data should be numeric.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " be", " numeric", ".", "\"", ")", "\n"], "logprobs": [-0.0009348789462819695, -1.9073468138230965e-06, -0.028230734169483185, -0.028041118755936623, -0.319702684879303, -0.20743365585803986, -2.452205181121826, -1.6200345754623413, -0.15777307748794556, -0.008045054040849209, -0.00029976642690598965, -0.0020251020323485136], "finish_reason": "stop"}, {"text": " not data.index.empty:", "tokens": [" not", " data", ".", "index", ".", "empty", ":", "\n"], "logprobs": [-1.409295678138733, -0.6548712849617004, -0.00375934224575758, -2.2991981506347656, -0.007020685356110334, -3.0370750427246094, -0.17211775481700897, -0.0066194310784339905], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components cannot exceed number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " cannot", " exceed", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004481264913920313, -1.1920928244535389e-07, -0.011399021372199059, -0.19392627477645874, -1.4896278381347656, -0.00025388356880284846, -0.07517996430397034, -0.943728506565094, -1.0576560497283936, -0.6677035093307495, -0.0020077326335012913, -0.16285116970539093, -0.6984742283821106, -0.00125698687043041, -0.0002401778765488416, -0.0012396040838211775], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0030854973010718822, -0.00012885693286079913, 0.0, -0.011618684977293015, -0.06044060364365578], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.5285141468048096, -1.847726889536716e-05, -6.747018051100895e-05, -0.006356971804052591, -0.09782257676124573, -4.768370445162873e-07, -6.627816765103489e-05, -1.9192511899746023e-05, -4.6491513785440475e-06, -1.7881377516459906e-06, -8.535020606359467e-05, -0.0008440031087957323, -0.06526987999677658, -0.001379491644911468, -0.4478246867656708, -0.009142795577645302, -0.006169796921312809, -2.95634672511369e-05, -0.0002671123365871608, -0.2575119435787201, -0.008858547545969486], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0001646144810365513, -0.000310730334604159, -0.0003868784988299012, -1.2159273865108844e-05, -8.046303264563903e-05, -0.12527284026145935, -0.0040831537917256355, -1.6689286894688848e-06, -2.0265558760002023e-06, -0.01999332569539547, -0.0048963166773319244], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0031890033278614283, -1.0728830375228426e-06, -5.3881147323409095e-05, -0.003140282118692994, -0.0008241117466241121, -9.393251093570143e-05, -4.7444173105759546e-05, -0.0007767044589854777, -0.005549619439989328, -3.015949550899677e-05, 0.0, -0.0009172523277811706, -0.0019919094629585743], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0016990762669593096, -1.8954096958623268e-05, -0.0002215855201939121, -0.0005715643637813628, -0.004590924363583326, -0.01232272107154131, -4.970903682988137e-05, -0.5016601085662842], "finish_reason": "stop"}], "metrics": {"energy": 744.3904933195112, "energy_per_token": 5.639321919087206, "time": 19.952099, "time_per_token": 0.15115226515151514}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7012560963630676, -0.0018876844551414251, -0.5830430388450623, -0.0003033416287507862, -0.0012868703342974186], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -0.4710153639316559, -0.004616673570126295, -0.01309215184301138], "finish_reason": "stop"}, {"text": " ValueError(\"data should have only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " have", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -3.064271926879883, -0.3297003209590912, -1.0757732391357422, -1.8168580532073975, -0.04267166927456856, -0.0045724124647676945, -0.00035637227119877934, -0.0016288596671074629], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.645696759223938, -0.9091678261756897, -0.003642473602667451, -1.7204086780548096, -0.0075622242875397205, -0.004001112654805183], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -0.193715438246727, -0.4647279977798462, -0.00026043839170597494, -0.0005011494504287839, -1.6009459495544434, -0.055441964417696, -0.12669986486434937, -0.00284576416015625, -0.09638326615095139, -0.012362519279122353, -0.010870406404137611, -0.04715925455093384, -0.19554822146892548, -0.3988109230995178, -0.4667597711086273, -0.033247221261262894, -0.0009133219718933105, -0.00046754872892051935, -0.0024446146562695503], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.003146936884149909, -0.0001250427303602919, 0.0, -0.01325733121484518, -0.06236966699361801], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.232672318816185, -7.271740287251305e-06, -3.3378044463461265e-05, -2.276871418871451e-05, -3.0517112463712692e-05, -1.6689286894688848e-06, -0.00014888131408952177, -0.0015810144832357764, -0.10677598416805267, -0.014512812718749046], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0001728385395836085, -0.00031585473334416747, -0.00034528967808000743, -8.702239938429557e-06, -0.00010990492592100054, -0.10769543051719666, -0.005105790216475725, -1.311301275563892e-06, -2.50339189733495e-06, -0.014619019813835621, -0.004725954029709101], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0026423560921102762, -1.311301275563892e-06, -5.4596363042946905e-05, -0.0052001927979290485, -0.0007401349139399827, -6.83045873302035e-05, -5.304672595229931e-05, -0.0009557208395563066, -0.004375289659947157, -2.6464111215318553e-05, 0.0, -0.0010493254521861672, -0.002241719514131546], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0012657972984015942, -1.6689160474925302e-05, -0.00017486473370809108, -0.000806602300144732, -0.005263637285679579, -0.015272930264472961, -4.100715523236431e-05, -0.4056183099746704], "finish_reason": "stop"}], "metrics": {"energy": 614.1086298389438, "energy_per_token": 5.160576721335662, "time": 17.01699, "time_per_token": 0.14299991596638656}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -1.070797324180603, -0.030445506796240807, -0.0027054871898144484, -0.0002848696312867105, -0.001404728856869042], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components is greater than the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " is", " greater", " than", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -1.4576820135116577, -0.00023993951617740095, -0.06228991970419884, -3.0235838890075684, -0.12219199538230896, -0.007306520827114582, -0.4259730577468872, -0.05357811599969864, -0.024856096133589745, -0.06284332275390625, -0.33643007278442383, -0.15866026282310486, -0.22507306933403015, -0.0669357180595398, -0.0035906860139220953, -0.0013056810712441802, -0.0033454899676144123], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0024846892338246107, -0.00013052565918769687, 0.0, -0.01323427353054285, -0.05297773331403732], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "values", ")", "\n"], "logprobs": [-0.2916243076324463, -1.2993727978027891e-05, -3.2066785934148356e-05, -3.015949550899677e-05, -3.2066785934148356e-05, -1.5497195136049413e-06, -0.00014733182615600526, -0.0016664678696542978, -2.3206937313079834, -0.29336437582969666, -0.033054862171411514, -0.0169881172478199], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021789084712509066, -0.00033504117163829505, -0.0004661188868340105, -1.0609570381348021e-05, -0.0001212284987559542, -0.13000304996967316, -0.005041268654167652, -1.9073468138230965e-06, -1.9073468138230965e-06, -0.01615329645574093, -0.00482976483181119], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.005109110847115517, -1.311301275563892e-06, -6.925819616299123e-05, -0.004831069614738226, -0.0009504806366749108, -6.83045873302035e-05, -5.2927523938706145e-05, -0.000811366830021143, -0.005632482469081879, -3.2305197237292305e-05, 0.0, -0.0008364992681890726, -0.002066145185381174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.001557924086228013, -1.7404405298293568e-05, -0.00020275443966966122, -0.0005452338373288512, -0.004803190007805824, -0.01524017471820116, -4.017272294731811e-05, -0.4839981198310852, -0.38001376390457153], "finish_reason": "stop"}], "metrics": {"energy": 634.9368280525204, "energy_per_token": 5.335603597080003, "time": 17.647343, "time_per_token": 0.14829699999999998}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7012560963630676, -0.0018876844551414251, -0.5830430388450623, -0.0003033416287507862, -0.0012868703342974186], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -0.4589199125766754, -0.016016749665141106, -0.002713452558964491, -0.0002464944263920188, -0.0012011463986709714], "finish_reason": "stop"}, {"text": " len(data) == 0:", "tokens": [" len", "(", "data", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.9373055696487427, -0.00015400654228869826, -0.0013296105898916721, -0.3951222896575928, -0.11959623545408249, -0.0007728926721028984, -0.00022968991834204644, -0.10759738087654114, -0.003914433531463146], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -0.44318997859954834, -0.00022539935889653862, -0.0005463061388581991, -0.509316086769104, -0.23096439242362976, -0.18202173709869385, -0.19474674761295319, -0.12013383209705353, -0.002639264799654484, -0.006862405221909285, -0.10635720193386078, -0.02199179120361805, -0.01437404565513134, -0.04412669315934181, -0.34744587540626526, -0.3558478355407715, -0.7691878080368042, -0.001033129869028926, -0.031960442662239075, -0.0007918321643956006, -0.0004111875023227185, -0.00350052653811872], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0023913378827273846, -0.00011181206355104223, 0.0, -0.012209792621433735, -0.05475015938282013], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2167321890592575, -7.867782187531702e-06, -2.884823152271565e-05, -2.884823152271565e-05, -3.40932747349143e-05, -1.7881377516459906e-06, -0.00017331528943032026, -0.0014435357879847288, -0.10177672654390335, -0.016748880967497826], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0002087136817863211, -0.0003364712174516171, -0.000446696620201692, -1.0013530300057027e-05, -7.70062324590981e-05, -0.11743339896202087, -0.004048010800033808, -1.311301275563892e-06, -2.0265558760002023e-06, -0.016820035874843597, -0.004796190652996302], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.002718208124861121, -1.1920922133867862e-06, -5.638440416078083e-05, -0.003831784473732114, -0.0010921949287876487, -0.0001037067049765028, -5.209310256759636e-05, -0.0007921895012259483, -0.0049649993889033794, -2.3364747903542593e-05, 0.0, -0.0008797351038083434, -0.002371001522988081], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0014398456551134586, -1.811964830267243e-05, -0.00021217002358753234, -0.0005515484372153878, -0.004969151224941015, -0.017130857333540916, -4.9232225137529895e-05, -0.4760614335536957, -0.4087149500846863], "finish_reason": "stop"}], "metrics": {"energy": 656.5635086421968, "energy_per_token": 5.210821497160292, "time": 18.05221, "time_per_token": 0.14327150793650792}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -1.872023105621338, -0.5572388172149658, -0.369001179933548, -0.07236850261688232, -0.4269036054611206, -0.33661338686943054, -0.026351535692811012, -0.0031104539521038532, -0.00039915222441777587, -0.0017303746426478028], "finish_reason": "stop"}, {"text": " not data.empty:", "tokens": [" not", " data", ".", "empty", ":", "\n"], "logprobs": [-1.8070769309997559, -0.5766919851303101, -0.003662309143692255, -1.7070324420928955, -0.007372908294200897, -0.004316180944442749], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.00035279724397696555, -1.1920928244535389e-07, -0.010472463443875313, -0.18559181690216064, -0.4348096549510956, -0.00026651646476238966, -0.0005458295345306396, -0.4994116723537445, -0.18809331953525543, -0.19492363929748535, -0.16161441802978516, -0.11156006157398224, -0.002641286002472043, -0.007539626210927963, -0.10356014966964722, -0.02933410368859768, -0.013693912886083126, -0.050650209188461304, -1.3714056015014648, -0.0010139568476006389, -0.00031096869497559965, -0.0012285312404856086], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002537604421377182, -0.00013660451804753393, 0.0, -0.014355949126183987, -0.05924106016755104], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.26472964882850647, -1.0609570381348021e-05, -3.0636318115284666e-05, -2.5510462364763953e-05, -3.766942609217949e-05, -1.311301275563892e-06, -0.00014804698002990335, -0.0013725870521739125, -0.0849003866314888, -0.01285574771463871], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00022098960471339524, -0.00033408781746402383, -0.0003369478799868375, -9.65590606938349e-06, -9.345571743324399e-05, -0.0951620489358902, -0.005034388974308968, -1.5497195136049413e-06, -2.264974000354414e-06, -0.013714726082980633, -0.005216914229094982], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0030526963528245687, -1.5497195136049413e-06, -6.425174069590867e-05, -0.00435000890865922, -0.0012010273057967424, -4.9232225137529895e-05, -5.090107151772827e-05, -0.0009779914980754256, -0.005324824247509241, -2.2411095415009186e-05, 0.0, -0.0010224120924249291, -0.0020713796839118004], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0013655632501468062, -2.0503786799963564e-05, -0.00019059749320149422, -0.0006983225466683507, -0.005219167564064264, -0.013698969036340714, -4.60137271147687e-05, -0.4322752058506012], "finish_reason": "stop"}], "metrics": {"energy": 627.1765077676775, "energy_per_token": 5.22647089806398, "time": 17.416508, "time_per_token": 0.14513756666666666}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7451327443122864, -0.005164022091776133, -0.0014779369812458754, -0.6327540874481201, -0.001685152412392199, -0.00037150635034777224, -0.0007097586058080196], "finish_reason": "stop"}, {"text": " not data.columns.is_numeric():", "tokens": [" not", " data", ".", "columns", ".", "is", "_", "numeric", "():", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -1.1972205638885498, -0.011228937655687332, -0.607805073261261, -0.16537567973136902, -0.018211768940091133], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.8896405100822449, -0.43509578704833984, -0.018759099766612053, -0.0029044845141470432, -0.00022098960471339524, -0.0010548033751547337], "finish_reason": "stop"}, {"text": " data.shape[1] < n_components:", "tokens": [" data", ".", "shape", "[", "1", "]", " <", " n", "_", "components", ":", "\n"], "logprobs": [-1.0930958986282349, -0.001256510615348816, -2.00481915473938, -0.009737610816955566, -0.23868614435195923, -0.0006170752458274364, -1.360519289970398, -0.059966593980789185, -1.9073468138230965e-06, -2.9802276912960224e-06, -0.025368306785821915, -0.004526606760919094], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components should not exceed the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " should", " not", " exceed", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -0.193715438246727, -1.4836221933364868, -0.0002675890573300421, -0.07511494308710098, -1.1907358169555664, -1.166698694229126, -0.39184755086898804, -0.3330816924571991, -0.03185802698135376, -0.014568384736776352, -0.12027473747730255, -0.9734918475151062, -0.0005775213940069079, -0.00019405389321036637, -0.0012715120101347566], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002261463785544038, -0.00011407678539399058, 0.0, -0.013740358874201775, -0.0654926523566246], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.19634807109832764, -7.748573807475623e-06, -3.361645576660521e-05, -3.0397906812140718e-05, -2.1576648578047752e-05, -1.311301275563892e-06, -0.00014685506175737828, -0.0016794399125501513, -0.12287116795778275, -0.014773375354707241], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.0001991788885788992, -0.0003200257197022438, -0.0003632839070633054, -1.07287787614041e-05, -9.500529267825186e-05, -0.1087358370423317, -0.005892050452530384, -1.4305104514278355e-06, -2.145764938177308e-06, -0.019505009055137634, -0.005036761052906513], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0034458802547305822, -1.4305104514278355e-06, -5.304672595229931e-05, -0.003983658738434315, -0.000920706195756793, -7.426462980220094e-05, -5.340433563105762e-05, -0.000773488252889365, -0.005307511892169714, -3.433168603805825e-05, 0.0, -0.0008812834857963026, -0.0022280411794781685], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0014017528155818582, -1.8954096958623268e-05, -0.0001627074379939586, -0.0005422552349045873, -0.004732953850179911, -0.011194635182619095, -4.935142715112306e-05, -0.4649397134780884, -0.4012753665447235], "finish_reason": "stop"}], "metrics": {"energy": 660.0606570606237, "energy_per_token": 5.156723883286123, "time": 17.851488, "time_per_token": 0.13946475}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"DataFrame should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "DataFrame", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -1.872023105621338, -0.5572388172149658, -0.369001179933548, -0.07236850261688232, -0.4269036054611206, -0.33661338686943054, -0.026351535692811012, -0.0031104539521038532, -0.00039915222441777587, -0.0017303746426478028], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.113461971282959, -1.4185804502631072e-05, -4.768360213347478e-06, -0.05886000394821167, -0.48664453625679016, -8.177422569133341e-05, -0.0010446811793372035, -0.0015013862866908312, -0.00221234024502337, -0.003895790548995137, -0.004249471705406904], "finish_reason": "stop"}, {"text": " ValueError(\"The number of components must be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "The", " number", " of", " components", " must", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0003578022588044405, -1.1920928244535389e-07, -0.010224700905382633, -0.18331460654735565, -3.0014901161193848, -0.11814133822917938, -0.0012207920663058758, -0.15293918550014496, -1.7530620098114014, -0.22595827281475067, -0.29361140727996826, -0.15749825537204742, -0.7692853808403015, -0.03229210525751114, -0.04279525950551033, -0.08367130160331726, -0.11492205411195755, -0.07428334653377533, -0.27844467759132385, -0.48201677203178406, -0.06253676116466522, -0.36861494183540344, -0.07672738283872604, -0.0013554443139582872, -0.0008554374799132347, -0.004192254971712828], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.00231082271784544, -0.00011264643399044871, 0.0, -0.011936663649976254, -0.05825783312320709], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), index=data.index, columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " index", "=", "data", ".", "index", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.448559284210205, -1.823885577323381e-05, -6.007967749610543e-05, -0.007837733253836632, -0.10659351199865341, -4.768370445162873e-07, -5.221230458118953e-05, -2.074220174108632e-05, -4.887569048150908e-06, -2.7418097943154862e-06, -0.00010835537250386551, -0.0008407871937379241, -0.07051519304513931, -0.0016201715916395187, -1.1000359058380127, -0.011953037232160568, -0.0021925950422883034, -4.303362584323622e-05, -2.4914430468925275e-05, -0.028433870524168015, -0.006645483896136284, -0.00027056847466155887, -0.00031537804170511663, -3.909988299710676e-05, -0.00034505134681239724, -0.002388602588325739, -0.004900112748146057], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.000179036331246607, -0.0004001055203843862, -0.0004124982515349984, -1.2278481335670222e-05, -9.083335316972807e-05, -0.12793228030204773, -0.0049329716712236404, -1.4305104514278355e-06, -2.145764938177308e-06, -0.019725587218999863, -0.004772818181663752], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0032690914813429117, -1.4305104514278355e-06, -5.2927523938706145e-05, -0.0038845096714794636, -0.0008255410939455032, -8.535020606359467e-05, -5.674201020156033e-05, -0.000824230897706002, -0.004519723821431398, -2.47952248173533e-05, -1.1920928244535389e-07, -0.0011154150124639273, -0.0019741824362426996], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced, columns=range(n_components))", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ",", " columns", "=", "range", "(", "n", "_", "components", "))", "\n"], "logprobs": [-0.0014793653972446918, -1.7523612768854946e-05, -0.00019226610311307013, -0.0006328010931611061, -0.006679825019091368, -0.010059492662549019, -4.8636207793606445e-05, -1.8607219457626343, -0.03544585779309273, -0.4535369873046875, -0.229938805103302, -2.407998726994265e-05, -0.06636616587638855, -1.549708758830093e-05, -1.7881233361549675e-05, -0.020535361021757126, -0.4591943919658661], "finish_reason": "stop"}], "metrics": {"energy": 762.9190146770482, "energy_per_token": 4.922058159206762, "time": 20.582926, "time_per_token": 0.13279307096774193}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7012560963630676, -0.0018876844551414251, -0.5830430388450623, -0.0003033416287507862, -0.0012868703342974186], "finish_reason": "stop"}, {"text": " not data.columns.is_unique:", "tokens": [" not", " data", ".", "columns", ".", "is", "_", "unique", ":", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -1.1972205638885498, -0.011228937655687332, -0.9206846356391907, -0.0348484143614769, -0.008777369745075703], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.5408570170402527, -0.5854601263999939, -0.02489551529288292, -0.0022413628175854683, -0.0002643712505232543, -0.0014215136179700494], "finish_reason": "stop"}, {"text": " len(data.columns) < n_components:", "tokens": [" len", "(", "data", ".", "columns", ")", " <", " n", "_", "components", ":", "\n"], "logprobs": [-1.9787160158157349, -0.00010692501382436603, -0.001335205975919962, -1.0130683183670044, -0.11987088620662689, -0.0069076307117938995, -1.0288126468658447, -0.031790703535079956, -2.861018856492592e-06, -2.3841830625315197e-06, -0.02080650068819523, -0.002392170252278447], "finish_reason": "stop"}, {"text": " ValueError(\"n_components should be less than or equal to the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.00031287543242797256, -2.3841855067985307e-07, -0.013588901609182358, -0.193715438246727, -0.4647279977798462, -0.00026043839170597494, -0.0005011494504287839, -0.4772963523864746, -0.19849954545497894, -0.19064098596572876, -0.1525425761938095, -0.12918183207511902, -0.0034718969836831093, -0.007291372865438461, -0.10097488015890121, -0.028888199478387833, -0.015338673256337643, -0.04331149160861969, -1.48759126663208, -0.0009535771678201854, -0.0003040566807612777, -0.0012385324807837605], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0026104918215423822, -9.679325739853084e-05, 0.0, -0.010663080960512161, -0.05350388213992119], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.26897111535072327, -9.298280929215252e-06, -3.2782016205601394e-05, -2.3603161025675945e-05, -4.1960789531003684e-05, -1.6689286894688848e-06, -0.00014828535495325923, -0.001657065935432911, -0.0869617909193039, -0.014901635237038136], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00016592556494288146, -0.00025769727653823793, -0.00039414744242094457, -9.298280929215252e-06, -0.00012540031457319856, -0.142222061753273, -0.005425134673714638, -1.5497195136049413e-06, -2.0265558760002023e-06, -0.015869861468672752, -0.0049628643319010735], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003763380227610469, -1.1920922133867862e-06, -5.936446541454643e-05, -0.002809151541441679, -0.0011378012131899595, -5.4596363042946905e-05, -4.7205765440594405e-05, -0.0008455515489913523, -0.0040525225922465324, -3.0397906812140718e-05, 0.0, -0.001053493469953537, -0.002130621112883091], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.0014772227732464671, -1.680836794548668e-05, -0.0002252801787108183, -0.0006406639004126191, -0.004780174233019352, -0.014868749305605888, -3.766942609217949e-05, -0.42996490001678467], "finish_reason": "stop"}], "metrics": {"energy": 669.8877112827294, "energy_per_token": 5.192927994439763, "time": 18.094748, "time_per_token": 0.14026936434108528}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a pandas DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.6813991665840149, -0.002680877223610878, -0.0007173825288191438, -0.6327540278434753, -0.0011728082317858934, -0.0003480305604171008, -0.0009234455064870417], "finish_reason": "stop"}, {"text": " not data.columns.equals(data.columns.dropna()):", "tokens": [" not", " data", ".", "columns", ".", "equals", "(", "data", ".", "columns", ".", "drop", "na", "()", "):", "\n"], "logprobs": [-0.9317511916160583, -0.2747713625431061, -0.0005540504935197532, -1.0787748098373413, -0.0011923355050384998, -2.6622474193573, -0.0014111570781096816, -0.02238144725561142, -0.0030994017142802477, -0.23442119359970093, -0.01207576971501112, -1.6424604654312134, -0.5971996784210205, -0.11447829008102417, -0.0026644703466445208, -0.007675678003579378], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical values.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " values", ".", "\"", ")", "\n"], "logprobs": [-0.0009240409708581865, -1.9073468138230965e-06, -0.02772601880133152, -0.023145277053117752, -0.3208893835544586, -0.1691889762878418, -0.37192338705062866, -0.06368504464626312, -0.8896405100822449, -0.43509578704833984, -0.018759099766612053, -0.0029044845141470432, -0.00022098960471339524, -0.0010548033751547337], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.1274815797805786, -1.3351351299206726e-05, -5.8412379075889476e-06, -0.044577598571777344, -0.5222215056419373, -7.080780778778717e-05, -0.0011408970458433032, -0.0014140140265226364, -0.0021245544776320457, -0.005292571149766445, -0.003727038623765111], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components should be less than or equal to the number of columns in the data.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.00033909291960299015, -2.3841855067985307e-07, -0.011820157989859581, -0.19785821437835693, -1.477055549621582, -0.00019894051365554333, -0.07979688793420792, -1.358880877494812, -0.3635549545288086, -0.1510607749223709, -0.16887760162353516, -0.20322099328041077, -0.026354322209954262, -0.03228425607085228, -0.3495364785194397, -0.06507141143083572, -0.05521073937416077, -0.19650126993656158, -0.500801146030426, -0.14776749908924103, -0.4997037649154663, -0.03665335103869438, -0.0007714632665738463, -0.0007047553663142025, -0.007686679717153311], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002721180208027363, -0.00010764019680209458, 0.0, -0.011335141025483608, -0.05513538047671318], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.21489928662776947, -1.3947389561508317e-05, -2.455681169521995e-05, -2.539125671319198e-05, -3.71926071238704e-05, -1.311301275563892e-06, -0.00014554394874721766, -0.0013405631761997938, -0.10944301635026932, -0.015131684951484203], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.000198821333469823, -0.00043990471749566495, -0.00037317464011721313, -9.179073458653875e-06, -8.439661905867979e-05, -0.10571219027042389, -0.004475814290344715, -1.311301275563892e-06, -2.50339189733495e-06, -0.016718870028853416, -0.004764988087117672], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.002388126915320754, -1.4305104514278355e-06, -6.508615479106084e-05, -0.007861742749810219, -0.0012306743301451206, -6.937739817658439e-05, -5.173549288883805e-05, -0.0008011230966076255, -0.004324133507907391, -2.4914430468925275e-05, 0.0, -0.0011299422476440668, -0.0021158705931156874], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001675869687460363, -1.9550132492440753e-05, -0.00018153927521780133, -0.0005787128466181457, -0.004670781549066305, -0.016988703981041908, -4.2676016164477915e-05, -1.628049612045288, -1.2397689715726301e-05, -1.5497195136049413e-06, -2.145764938177308e-06, -3.099393507000059e-05, -0.1738472580909729], "finish_reason": "stop"}], "metrics": {"energy": 758.6142442436218, "energy_per_token": 5.2681544739140405, "time": 20.594547, "time_per_token": 0.1430176875}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.7360572218894958, -0.00027497802511788905, -0.0018966082716360688], "finish_reason": "stop"}, {"text": " not all(isinstance(c, (int, float)) for c in data.values.flatten()):", "tokens": [" not", " all", "(", "is", "instance", "(", "c", ",", " (", "int", ",", " float", "))", " for", " c", " in", " data", ".", "values", ".", "fl", "atten", "()", "):", "\n"], "logprobs": [-0.9317511916160583, -1.7274881601333618, -0.0869864895939827, -2.0154404640197754, -0.005876407492905855, -0.0002867764269467443, -2.4247264862060547, -0.008610975928604603, -0.6408020257949829, -0.131602481007576, -0.0001629458274692297, -0.002883326727896929, -0.10486777126789093, -0.00955378357321024, -0.3491194546222687, -0.0005459486856125295, -0.007284272462129593, -0.013910134322941303, -0.17554117739200592, -0.01748071052134037, -0.050065524876117706, -4.339123915997334e-05, -0.004604926332831383, -0.037931811064481735, -0.0022639615926891565], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009189196862280369, -1.4305104514278355e-06, -0.024392951279878616, -0.026036251336336136, -0.29036810994148254, -0.1617203950881958, -0.32622063159942627, -0.06963472813367844, -0.9486876726150513, -1.0996582508087158, -0.02825947478413582, -0.0029755623545497656, -0.00029881304362788796, -0.0012160295154899359], "finish_reason": "stop"}, {"text": " n_components > data.shape[1]:", "tokens": [" n", "_", "components", " >", " data", ".", "shape", "[", "1", "]:", "\n"], "logprobs": [-1.1949043273925781, -1.597391747054644e-05, -4.768360213347478e-06, -0.05155886337161064, -0.5518583059310913, -6.806619057897478e-05, -0.0011605439940467477, -0.0015482831513509154, -0.0018705505644902587, -0.004008711315691471, -0.003653638530522585], "finish_reason": "stop"}, {"text": " ValueError(\"n_components cannot be greater than the number of columns in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " cannot", " be", " greater", " than", " the", " number", " of", " columns", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.0002991705550812185, -1.1920928244535389e-07, -0.01016640942543745, -0.16191132366657257, -0.42375433444976807, -0.00024780540843494236, -0.0005746620590798557, -1.5959575176239014, -0.06910442560911179, -0.13067537546157837, -0.002910903189331293, -0.08920444548130035, -0.009733124636113644, -0.00837185513228178, -0.039263200014829636, -0.1778896152973175, -0.4031376540660858, -1.3010751008987427, -0.001699790358543396, -0.028721297159790993, -0.0008416209602728486, -0.0004152389301452786, -0.003658151952549815], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0020976699888706207, -9.548207890475169e-05, 0.0, -0.014259351417422295, -0.062394868582487106], "finish_reason": "stop"}, {"text": " pd.DataFrame(scaler.fit_transform(data), columns=data.columns)", "tokens": [" pd", ".", "DataFrame", "(", "scal", "er", ".", "fit", "_", "transform", "(", "data", ")", ",", " columns", "=", "data", ".", "columns", ")", "\n"], "logprobs": [-1.5324265956878662, -2.2649508537142538e-05, -7.176141662057489e-05, -0.005702299997210503, -0.09735168516635895, -3.576278118089249e-07, -6.48477507638745e-05, -2.5987286790041253e-05, -4.768360213347478e-06, -2.50339189733495e-06, -0.00011359999916749075, -0.0012449617497622967, -0.07110880315303802, -0.0013572300085797906, -0.3487517833709717, -0.007689282298088074, -0.006154513452202082, -4.3748852476710454e-05, -0.0003093002596870065, -0.24569158256053925, -0.009850582107901573], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00016699827392585576, -0.0004557524516712874, -0.00047791501856409013, -7.152531907195225e-06, -9.870042413240299e-05, -0.1159399002790451, -0.003938181791454554, -1.4305104514278355e-06, -1.7881377516459906e-06, -0.016889898106455803, -0.005453471094369888], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.003270517336204648, -1.5497195136049413e-06, -4.792098479811102e-05, -0.006330556236207485, -0.0012394849909469485, -8.606540359323844e-05, -4.100715523236431e-05, -0.0007102350937202573, -0.006341809406876564, -2.0861407392658293e-05, -1.1920928244535389e-07, -0.0009860896971076727, -0.001926591619849205], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.0013084192760288715, -1.9073304429184645e-05, -0.0001674750237725675, -0.0005413020844571292, -0.004432970657944679, -0.00842883251607418, -4.577531944960356e-05, -0.47270166873931885, -0.45661452412605286], "finish_reason": "stop"}], "metrics": {"energy": 769.5883862934113, "energy_per_token": 4.933258886496226, "time": 20.622997, "time_per_token": 0.13219869871794873}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data must be a DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -0.25846317410469055, -0.00021240839851088822, -0.0424051359295845, -0.7504108548164368, -0.0009335688664577901, -0.702659547328949, -0.0024087007623165846, -0.00034231049357913435, -0.0012511529494076967], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numeric data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numeric", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.4802241027355194, -1.081243634223938, -0.03208443894982338, -0.003336103865876794, -0.0002768848498817533, -0.0013923484366387129], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"Number of components should be less than or equal to the number of columns.\")", "tokens": [" Value", "Error", "(", "\"", "Number", " of", " components", " should", " be", " less", " than", " or", " equal", " to", " the", " number", " of", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -1.4576820135116577, -0.00023993951617740095, -0.06228991970419884, -1.1247915029525757, -0.35758695006370544, -0.17591357231140137, -0.1691157966852188, -0.2016778141260147, -0.02348930574953556, -0.02832738310098648, -0.4249933362007141, -0.053570885211229324, -0.05623020976781845, -0.13848702609539032, -1.1466022729873657, -0.000696654780767858, -0.00040534863364882767, -0.003088111989200115], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.0024846892338246107, -0.00013052565918769687, 0.0, -0.01323427353054285, -0.05297773331403732], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ")", "\n"], "logprobs": [-0.2916243076324463, -1.2993727978027891e-05, -3.2066785934148356e-05, -3.015949550899677e-05, -3.2066785934148356e-05, -1.5497195136049413e-06, -0.00014733182615600526, -0.0016664678696542978, -0.10671587288379669, -0.015278800390660763], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00021789084712509066, -0.00033504117163829505, -0.0004661188868340105, -1.0609570381348021e-05, -0.0001212284987559542, -0.13000304996967316, -0.005041268654167652, -1.9073468138230965e-06, -1.9073468138230965e-06, -0.01615329645574093, -0.00482976483181119], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.005109110847115517, -1.311301275563892e-06, -6.925819616299123e-05, -0.004831069614738226, -0.0009504806366749108, -6.83045873302035e-05, -5.2927523938706145e-05, -0.000811366830021143, -0.005632482469081879, -3.2305197237292305e-05, 0.0, -0.0008364992681890726, -0.002066145185381174], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")"], "logprobs": [-0.001557924086228013, -1.7404405298293568e-05, -0.00020275443966966122, -0.0005452338373288512, -0.004803190007805824, -0.01524017471820116, -4.017272294731811e-05, -0.4839981198310852], "finish_reason": "stop"}], "metrics": {"energy": 647.9625792350769, "energy_per_token": 5.491208298602347, "time": 17.255024, "time_per_token": 0.14622901694915252}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.030553387477993965, -0.021184364333748817, -7.283422019099817e-05, -0.0023264028131961823, -0.0008469808381050825, -0.004051691386848688, -1.0490362910786644e-05, -0.012370997108519077, -0.030740100890398026, -0.004284607246518135], "finish_reason": "stop"}, {"text": " ValueError(\"Input data should be a pandas DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Input", " data", " should", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.02672440931200981, -2.50339189733495e-06, -0.08712887018918991, -0.027337975800037384, -0.2622457444667816, -0.03242690861225128, -1.748049020767212, -0.0004377598816063255, -0.04697444662451744, -0.7451327443122864, -0.005164022091776133, -0.0014779369812458754, -0.837996244430542, -0.0003332536434754729, -0.0012404375011101365], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-0.5783957839012146, -0.0004667146422434598, -0.08986923843622208, -0.012167279608547688, -0.002167615806683898], "finish_reason": "stop"}, {"text": " ValueError(\"data should contain only numerical data.\")", "tokens": [" Value", "Error", "(", "\"", "data", " should", " contain", " only", " numerical", " data", ".", "\"", ")", "\n"], "logprobs": [-0.0009204680100083351, -1.5497195136049413e-06, -0.032274212688207626, -0.026145190000534058, -0.31252723932266235, -0.14583946764469147, -0.39553943276405334, -0.06690182536840439, -0.9808154106140137, -1.070797324180603, -0.030445506796240807, -0.0027054871898144484, -0.0002848696312867105, -0.001404728856869042], "finish_reason": "stop"}, {"text": " data.empty:", "tokens": [" data", ".", "empty", ":", "\n"], "logprobs": [-1.050827145576477, -0.0011085085570812225, -0.13069555163383484, -0.010600686073303223, -0.0016042232746258378], "finish_reason": "stop"}, {"text": " ValueError(\"n_components can not be larger than the number of data columns.\")", "tokens": [" Value", "Error", "(", "\"", "n", "_", "components", " can", " not", " be", " larger", " than", " the", " number", " of", " data", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.0004009396652691066, -1.1920928244535389e-07, -0.012706509791314602, -0.1942833513021469, -0.44318997859954834, -0.00022539935889653862, -0.0005463061388581991, -3.2736096382141113, -0.9706051349639893, -0.09080087393522263, -2.1359574794769287, -0.0346732921898365, -0.26449882984161377, -0.06806927174329758, -0.015083776786923409, -2.623699426651001, -0.3371381163597107, -0.13686269521713257, -0.003670266829431057, -0.001134586171247065, -0.002317126141861081], "finish_reason": "stop"}, {"text": " StandardScaler()", "tokens": [" Standard", "Scal", "er", "()", "\n"], "logprobs": [-0.002875124802812934, -0.00011634149996098131, 0.0, -0.011474448256194592, -0.0568537600338459], "finish_reason": "stop"}, {"text": " scaler.fit_transform(data.values)", "tokens": [" scal", "er", ".", "fit", "_", "transform", "(", "data", ".", "values", ")", "\n"], "logprobs": [-0.30221837759017944, -1.2159273865108844e-05, -3.433168603805825e-05, -2.52720492426306e-05, -4.2914423829643056e-05, -1.4305104514278355e-06, -0.00017081231635529548, -0.001437107683159411, -2.3798129558563232, -0.3197284936904907, -0.029538173228502274, -0.0208306685090065], "finish_reason": "stop"}, {"text": " PCA(n_components=n_components)", "tokens": [" PCA", "(", "n", "_", "components", "=", "n", "_", "components", ")", "\n"], "logprobs": [-0.00018249277491122484, -0.00031704644788987935, -0.0003389737685211003, -1.0490362910786644e-05, -9.870042413240299e-05, -0.11201279610395432, -0.004689646884799004, -1.5497195136049413e-06, -2.50339189733495e-06, -0.01714785024523735, -0.004780767485499382], "finish_reason": "stop"}, {"text": " pca.fit_transform(data_scaled)", "tokens": [" p", "ca", ".", "fit", "_", "transform", "(", "data", "_", "scal", "ed", ")", "\n"], "logprobs": [-0.0028338772244751453, -1.0728830375228426e-06, -5.7338023907504976e-05, -0.0048661851324141026, -0.0011226787464693189, -6.5205356804654e-05, -5.3881147323409095e-05, -0.0008083889842964709, -0.004726428538560867, -3.1470757676288486e-05, 0.0, -0.0008705640211701393, -0.0022094857413321733], "finish_reason": "stop"}, {"text": " pd.DataFrame(data_reduced)", "tokens": [" pd", ".", "DataFrame", "(", "data", "_", "reduced", ")", "\n"], "logprobs": [-0.001693720929324627, -2.1576648578047752e-05, -0.00015233787416946143, -0.0005249790847301483, -0.005856852978467941, -0.014317874796688557, -4.184158387943171e-05, -0.4285469055175781, -0.4195050895214081], "finish_reason": "stop"}], "metrics": {"energy": 669.2567441015244, "energy_per_token": 5.57713953417937, "time": 18.286211, "time_per_token": 0.15238509166666667}}
