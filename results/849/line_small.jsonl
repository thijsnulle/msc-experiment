{"outputs": [{"text": " re.findall(r'\\S+', input_string)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "S", "+'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -1.246380090713501, -0.0015938685974106193, -0.32292822003364563, -0.052030760794878006, -1.856750726699829, -1.0949912071228027, -0.24427294731140137, -0.00016664070426486433, -0.01459458377212286, -0.00022456508304458112, -0.00011252723925281316, -0.2352994829416275, -0.06899762153625488], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -1.2086122035980225, -0.028018400073051453, -0.0008449559682048857, -0.005481095518916845, -3.6954195820726454e-05, -0.0032367717940360308, -8.344646857949556e-07, -3.933898824470816e-06, -0.00016044282529037446, -1.0132738680113107e-05, -0.030576974153518677, -0.009421530179679394], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -0.45246943831443787], "finish_reason": "stop"}], "metrics": {"energy": 61.289317498207105, "energy_per_token": 1.0214886249701185, "time": 3.1595507, "time_per_token": 0.052659178333333334}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -1.982437252998352, -0.01197094190865755], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4104979932308197, -8.284702198579907e-05, -3.2543604902457446e-05, -1.4851858615875244, -1.0728830375228426e-06, -1.0728830375228426e-06, -0.00029023250681348145, -7.688703772146255e-05, -0.05153769254684448], "finish_reason": "stop"}], "metrics": {"energy": 48.96759262657166, "energy_per_token": 1.04186367290578, "time": 2.7473922, "time_per_token": 0.05845515319148937}}
{"outputs": [{"text": " [line.strip() for line in input_string.split('\\n') if line.strip()]", "tokens": [" [", "line", ".", "strip", "()", " for", " line", " in", " input", "_", "string", ".", "split", "('", "\\", "n", "')", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-2.85148549079895, -0.2360163927078247, -0.2580571174621582, -0.18502211570739746, -0.03525921702384949, -0.03448443487286568, -0.0006224363460205495, -0.0004481264913920313, -0.10235670208930969, -0.00020144341397099197, -0.0002978596603497863, -0.0013217531377449632, -0.10192293673753738, -0.5107479095458984, -0.007027669344097376, -0.0011242267210036516, -0.009192051365971565, -0.9321689605712891, -0.11458151787519455, -0.27505895495414734, -0.0034493254497647285, -0.0014240134041756392, -0.12422718852758408, -0.01791779324412346], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " [word for word in re.findall(r'\\w+', line) if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.7018864154815674, -0.403391569852829, -0.5968129634857178, -0.001261273049749434, -0.0004164305282756686, -0.6462011933326721, -7.30726242181845e-05, -0.3352263867855072, -0.0006715188501402736, -0.047299232333898544, -0.012557603418827057, -0.08792158216238022, -0.06529355049133301, -0.019526401534676552, -2.6940935640595853e-05, -0.004848509095609188, -0.5231189131736755, -0.09636789560317993, -0.11068055033683777, -0.8207988739013672, -3.766942609217949e-05, -0.0033305196557193995, -5.960462772236497e-07, -3.099436753473128e-06, -0.00013755806139670312, -1.2278481335670222e-05, -0.015857893973588943, -0.007650361862033606], "finish_reason": "stop"}, {"text": " [w for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -1.4623974561691284, -0.000248043768806383, -0.00016973962192423642, -0.00906317587941885, -0.004483172204345465, -0.08175525069236755, -0.7072163820266724, -0.02246922068297863, -0.0005239067832008004, -0.004447093699127436, -1.2755313036905136e-05, -0.003867766121402383, -9.536738616588991e-07, -2.145764938177308e-06, -0.00034433635300956666, -1.0490362910786644e-05, -0.013796326704323292, -0.009084676392376423], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -1.5295453071594238, -0.007529096212238073, -0.004374577663838863, -0.009827917441725731, -0.003817890305072069], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -1.0264250040054321, -5.960462772236497e-07, -1.311301275563892e-06, -0.0005290300468914211, -9.548207890475169e-05, -0.07765015959739685], "finish_reason": "stop"}], "metrics": {"energy": 110.79951480102537, "energy_per_token": 1.1422630391858286, "time": 5.0520196, "time_per_token": 0.0520826762886598}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word.lower() not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.7945795655250549, -0.3845989406108856, -0.050251465290784836, -3.6000557884108275e-05, -0.013838065788149834, -0.0001433984871255234, -0.0001679517881711945, -0.0026963327545672655, -0.17722754180431366, -0.045789722353219986, -0.9796194434165955, -0.033544331789016724, -0.001465557492338121, -0.008052976801991463, -7.009260298218578e-05, -0.003937231842428446, -9.536738616588991e-07, -4.0531076592742465e-06, -0.00016342257731594145, -1.1205610462639015e-05, -0.02646276168525219, -0.00784459337592125], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.3589766240329482e-05, -0.0013446108205243945, -0.22298532724380493, -0.0003477922291494906, -0.0023053516633808613], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4408857226371765, -9.190614218823612e-05, -3.373566141817719e-05, -1.3988800048828125, -1.1920922133867862e-06, -1.0728830375228426e-06, -0.00035506143467500806, -8.415821503149346e-05, -0.04410353675484657], "finish_reason": "stop"}], "metrics": {"energy": 113.39355138397218, "energy_per_token": 1.6924410654324207, "time": 3.589214, "time_per_token": 0.05357035820895523}}
{"outputs": [{"text": " re.sub('\\W+', ' ', input_string).split(' ')", "tokens": [" re", ".", "sub", "('", "\\", "W", "+'", ",", " '", " '", ",", " input", "_", "string", ")", ".", "split", "('", " '", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -2.4733927249908447, -0.8527785539627075, -1.0364488363265991, -3.3684635162353516, -0.2816384732723236, -0.0002273062855238095, -0.152056023478508, -0.03621012717485428, -0.0006167178507894278, -0.013479880057275295, -0.0001711698860162869, -9.691245941212401e-05, -0.01855890266597271, -0.19136148691177368, -0.25120100378990173, -0.5976788997650146, -1.5183353424072266, -0.023350264877080917, -0.09432353079319], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -0.356091171503067, -0.06422906368970871, -3.540453326422721e-05, -0.00987961981445551, -0.0001528146385680884, -0.0001567479339428246, -0.002236367203295231, -0.17690788209438324, -0.046364277601242065, -0.3614192306995392, -3.2066785934148356e-05, -0.002367433626204729, -9.536738616588991e-07, -3.576272320060525e-06, -0.0002157455455744639, -1.3351351299206726e-05, -0.027020564302802086, -0.006517463829368353], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4066597032069694e-05, -0.0014352031284943223, -0.2546629011631012, -0.0004204819560982287, -0.0024594792630523443], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.47188061475753784, -0.00010311071673640981, -2.9682672902708873e-05, -0.6815587282180786], "finish_reason": "stop"}], "metrics": {"energy": 77.09771754074094, "energy_per_token": 1.243511573237757, "time": 3.389546, "time_per_token": 0.05467009677419355}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -0.05484292283654213, -0.00764515670016408], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -1.0264250040054321, -5.960462772236497e-07, -1.311301275563892e-06, -0.0005290300468914211, -9.548207890475169e-05, -0.07765015959739685], "finish_reason": "stop"}], "metrics": {"energy": 67.41946531963347, "energy_per_token": 1.1624045744764393, "time": 3.381117, "time_per_token": 0.05829512068965517}}
{"outputs": [{"text": " re.split(r'\\n+', input_string)", "tokens": [" re", ".", "split", "(", "r", "'\\", "n", "+'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -0.5112345814704895, -0.7635837197303772, -0.20734287798404694, -0.8889150023460388, -0.04049895331263542, -0.5726515054702759, -0.00016616393986623734, -0.009265046566724777, -0.0002734287118073553, -0.00013517419574782252, -0.10032670944929123, -0.10366837680339813], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ".", "lower", "())", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -1.0723061561584473, -0.038833629339933395, -0.004832611884921789, -0.018650991842150688], "finish_reason": "stop"}, {"text": " [w for w in words if w not in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -1.4180688858032227, -0.0002557904226705432, -0.00015758226800244302, -0.009164175018668175, -0.005616479087620974, -0.09445326030254364, -0.6952323317527771, -1.9550132492440753e-05, -0.0024978886358439922, -4.768370445162873e-07, -4.529942543740617e-06, -0.00019000156316906214, -1.2755313036905136e-05, -0.019855549558997154, -0.015444323420524597], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count"], "logprobs": [-0.35105082392692566, -7.784063927829266e-05, -2.682172998902388e-05], "finish_reason": "stop"}], "metrics": {"energy": 59.2390293521881, "energy_per_token": 0.9873171558698016, "time": 3.1689844, "time_per_token": 0.05281640666666666}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -0.18027447164058685, -0.0572689063847065, -1.0390338897705078, -0.027869785204529762, -0.0006884350441396236, -0.005326010286808014, -3.194758028257638e-05, -0.0036580332089215517, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.00018892886873800308, -1.0609570381348021e-05, -0.03051430732011795, -0.007262378465384245], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")", "\n"], "logprobs": [-1.258103847503662, -0.0033169749658554792, -0.006348324473947287, -0.00013314791431184858, -4.672895011026412e-05, -0.46008098125457764, -0.4269198477268219], "finish_reason": "stop"}], "metrics": {"energy": 67.89047929191588, "energy_per_token": 1.0444689121833213, "time": 3.3799596, "time_per_token": 0.05199937846153846}}
{"outputs": [{"text": " input_string.split('\\\\n')", "tokens": [" input", "_", "string", ".", "split", "('\\\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -2.792705535888672, -0.01537987869232893, -0.015936855226755142, -0.06537630409002304], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " [w for w in line.split() if not w.lower() in STOPWORDS]", "tokens": [" [", "w", " for", " w", " in", " line", ".", "split", "()", " if", " not", " w", ".", "lower", "()", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.7018864154815674, -1.354628324508667, -0.7295246124267578, -0.0003466005437076092, -0.0002727136597968638, -0.7041207551956177, -0.008289928548038006, -0.07129187136888504, -0.13281667232513428, -0.02124691940844059, -2.5383923053741455, -0.20018015801906586, -0.8994196653366089, -0.2565906047821045, -0.0013241341803222895, -0.019461868330836296, -0.0035353321582078934, -1.4305104514278355e-06, -5.364403477869928e-06, -7.438383181579411e-05, -8.940656698541716e-06, -0.09651900827884674, -0.01692470908164978], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS and len(w) > 1]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", " and", " len", "(", "w", ")", " >", " ", "1", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -2.95407772064209, -0.5152834057807922, -0.00018618757894728333, -0.0023743314668536186, -0.05466731637716293, -0.2996963858604431, -0.004349771421402693, -0.4957848787307739, -0.013752705417573452, -0.029475092887878418], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")", "\n"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -0.45246943831443787, -0.48323145508766174], "finish_reason": "stop"}], "metrics": {"energy": 96.74917191123963, "energy_per_token": 1.2246730621675903, "time": 4.436139, "time_per_token": 0.0561536582278481}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -1.2100588083267212, -0.00040522945346310735, -0.00011216964776394889, -0.006451730150729418, -0.008418548852205276, -0.05475218966603279, -0.7041611075401306, -2.0265373677830212e-05, -0.003136598039418459, -5.960462772236497e-07, -4.0531076592742465e-06, -0.0001820160250645131, -1.2516897186287679e-05, -0.013536685146391392, -0.007864936254918575], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.3589766240329482e-05, -0.0011711412807926536, -1.4284725189208984, -0.006375924218446016, -0.005850571673363447, -0.010602808557450771, -0.0032133632339537144], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.3978726863861084, -6.55629628454335e-05, -2.9205850296420977e-05, -0.6840019226074219], "finish_reason": "stop"}], "metrics": {"energy": 49.189525951385505, "energy_per_token": 1.0038678765588878, "time": 2.738646, "time_per_token": 0.05589073469387756}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [w.lower() for w in words]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -1.9118571281433105, -0.013141919858753681], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.35105082392692566, -7.784063927829266e-05, -2.682172998902388e-05, -0.759344756603241], "finish_reason": "stop"}], "metrics": {"energy": 50.63416863155365, "energy_per_token": 1.0126833726310729, "time": 2.753815, "time_per_token": 0.055076299999999995}}
{"outputs": [{"text": " input_string.split(\"\\n\")", "tokens": [" input", "_", "string", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.8726636171340942, -0.011439800262451172, -0.20894409716129303, -0.0011609011562541127, -0.005649788770824671, -0.003246277803555131, -0.054539430886507034], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ".", "lower", "())", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -1.0723061561584473, -0.038833629339933395, -0.004832611884921789, -0.018650991842150688], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.7945795655250549, -0.3845989406108856, -0.050251465290784836, -3.6000557884108275e-05, -0.013838065788149834, -0.0001433984871255234, -0.0001679517881711945, -0.0026963327545672655, -0.17722754180431366, -0.045789722353219986, -0.48366492986679077, -2.5033637939486653e-05, -0.002710837172344327, -9.536738616588991e-07, -3.3378546504536644e-06, -0.00020525732543319464, -1.5139465176616795e-05, -0.0276375450193882, -0.006955221761018038], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.3589766240329482e-05, -0.0013446108205243945, -0.22298532724380493, -0.0003477922291494906, -0.0023053516633808613], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")"], "logprobs": [-1.064697504043579, -0.003509911010041833, -0.004992281552404165, -0.00013445904187392443, -3.8980677345534787e-05, -0.4487644135951996], "finish_reason": "stop"}], "metrics": {"energy": 101.66940555953977, "energy_per_token": 1.5641447009159963, "time": 3.5905733, "time_per_token": 0.05523958923076923}}
{"outputs": [{"text": " input_string.splitlines()", "tokens": [" input", "_", "string", ".", "split", "lines", "()", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.3733597993850708, -0.00816862192004919, -0.03426777943968773], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -0.18027447164058685, -0.0572689063847065, -1.0390338897705078, -0.027869785204529762, -0.0006884350441396236, -0.005326010286808014, -3.194758028257638e-05, -0.0036580332089215517, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.00018892886873800308, -1.0609570381348021e-05, -0.03051430732011795, -0.007262378465384245], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -1.2896571159362793, -0.007970314472913742, -0.006564125884324312, -0.010647275485098362, -0.003720862790942192], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.258103847503662, -0.0033169749658554792, -0.006348324473947287, -0.00013314791431184858, -4.672895011026412e-05, -1.0093554258346558, -5.960462772236497e-07, -1.1920922133867862e-06, -0.0008877150830812752, -8.821098163025454e-05, -0.08451780676841736], "finish_reason": "stop"}], "metrics": {"energy": 78.78308287715912, "energy_per_token": 1.1585747481935165, "time": 3.5900753, "time_per_token": 0.052795225}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word.lower() not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -0.356091171503067, -0.06422906368970871, -3.540453326422721e-05, -0.00987961981445551, -0.0001528146385680884, -0.0001567479339428246, -0.002236367203295231, -0.17690788209438324, -0.046364277601242065, -1.2176756858825684, -0.03562729060649872, -0.0015278107021003962, -0.008045408874750137, -6.186770770000294e-05, -0.0033899242989718914, -1.0728830375228426e-06, -3.576272320060525e-06, -0.00017033556650858372, -9.417489309271332e-06, -0.02318418212234974, -0.007533000782132149], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4066597032069694e-05, -0.0014352031284943223, -0.2546629011631012, -0.0004204819560982287, -0.0024594792630523443], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.47188061475753784, -0.00010311071673640981, -2.9682672902708873e-05, -0.6815587282180786], "finish_reason": "stop"}], "metrics": {"energy": 56.90514781951904, "energy_per_token": 1.0537990336947969, "time": 2.9606705, "time_per_token": 0.054827231481481484}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-3.232304811477661, -0.023595262318849564], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word.lower() not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -0.356091171503067, -0.06422906368970871, -3.540453326422721e-05, -0.00987961981445551, -0.0001528146385680884, -0.0001567479339428246, -0.002236367203295231, -0.17690788209438324, -0.046364277601242065, -1.2176756858825684, -0.03562729060649872, -0.0015278107021003962, -0.008045408874750137, -6.186770770000294e-05, -0.0033899242989718914, -1.0728830375228426e-06, -3.576272320060525e-06, -0.00017033556650858372, -9.417489309271332e-06, -0.02318418212234974, -0.007533000782132149], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4066597032069694e-05, -0.0014352031284943223, -0.2546629011631012, -0.0004204819560982287, -0.0024594792630523443], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.47188061475753784, -0.00010311071673640981, -2.9682672902708873e-05, -0.6815587282180786], "finish_reason": "stop"}], "metrics": {"energy": 68.62592632484436, "energy_per_token": 1.491867963583573, "time": 3.1604629, "time_per_token": 0.06870571521739131}}
{"outputs": [{"text": " re.sub(\"\\n{2,}\", \"\\n\", input_string)", "tokens": [" re", ".", "sub", "(", "\"", "\\", "n", "{", "2", ",", "}\"", ",", " \"", "\\", "n", "\"", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -2.4733927249908447, -0.6492701768875122, -2.2724177837371826, -1.5178589820861816, -0.2895720899105072, -2.084400177001953, -0.21785885095596313, -0.005285337567329407, -0.015184405259788036, -0.00043501926120370626, -0.05903510004281998, -0.17754431068897247, -0.0012768696760758758, -0.03689499944448471, -0.0027821664698421955, -0.024618618190288544, -0.000301673193462193, -0.00011777184408856556, -0.04514795169234276, -2.030062198638916], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -0.356091171503067, -0.06422906368970871, -3.540453326422721e-05, -0.00987961981445551, -0.0001528146385680884, -0.0001567479339428246, -0.002236367203295231, -0.17690788209438324, -0.046364277601242065, -0.3614192306995392, -3.2066785934148356e-05, -0.002367433626204729, -9.536738616588991e-07, -3.576272320060525e-06, -0.0002157455455744639, -1.3351351299206726e-05, -0.027020564302802086, -0.006517463829368353], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.4066597032069694e-05, -0.0014352031284943223, -1.5147088766098022, -0.006705047097057104, -0.004588194657117128, -0.011277031153440475, -0.0035981694236397743], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")", "\n"], "logprobs": [-1.0186927318572998, -0.0038228780031204224, -0.006648088805377483, -0.00014161060971673578, -5.113947918289341e-05, -0.47360464930534363, -0.4935765564441681], "finish_reason": "stop"}], "metrics": {"energy": 70.1293945055008, "energy_per_token": 1.031314625080894, "time": 3.574795, "time_per_token": 0.05257051470588235}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -0.05484292283654213, -0.00764515670016408], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -1.0264250040054321, -5.960462772236497e-07, -1.311301275563892e-06, -0.0005290300468914211, -9.548207890475169e-05, -0.07765015959739685], "finish_reason": "stop"}], "metrics": {"energy": 79.9032495574951, "energy_per_token": 1.401811395745528, "time": 3.1707423, "time_per_token": 0.05562705789473685}}
{"outputs": [{"text": " re.split(r\"\\n{2,}\", input_string)", "tokens": [" re", ".", "split", "(", "r", "\"", "\\", "n", "{", "2", ",", "}\"", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -0.5112345814704895, -0.7635837197303772, -0.20734287798404694, -1.1669931411743164, -0.5067755579948425, -0.07695192098617554, -3.1062567234039307, -0.09986229240894318, -0.009878084994852543, -0.04641776531934738, -0.0004164305282756686, -0.021608866751194, -0.0003407612966839224, -0.00010215714428341016, -0.07735317945480347, -0.11862646788358688], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -0.05484292283654213, -0.00764515670016408], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.4104979932308197, -8.284702198579907e-05, -3.2543604902457446e-05, -0.6779768466949463], "finish_reason": "stop"}], "metrics": {"energy": 94.94867476654055, "energy_per_token": 1.6092995723142467, "time": 3.381934, "time_per_token": 0.05732091525423729}}
{"outputs": [{"text": " []", "tokens": [" []", "\n"], "logprobs": [-3.232304811477661, -0.023595262318849564], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ".", "lower", "())", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -1.0723061561584473, -0.038833629339933395, -0.004832611884921789, -0.018650991842150688], "finish_reason": "stop"}, {"text": " [w.lower() for w in words]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -1.9118571281433105, -0.013141919858753681], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count"], "logprobs": [-0.35105082392692566, -7.784063927829266e-05, -2.682172998902388e-05], "finish_reason": "stop"}], "metrics": {"energy": 93.75135620498659, "energy_per_token": 2.1802640977903858, "time": 2.7497528, "time_per_token": 0.06394773953488372}}
{"outputs": [{"text": " re.findall('\\n.*', input_string)", "tokens": [" re", ".", "find", "all", "('", "\\", "n", ".", "*", "'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -1.246380090713501, -0.0015938685974106193, -1.3893802165985107, -1.3925821781158447, -0.7130101919174194, -1.1099780797958374, -0.4392227232456207, -0.2658471465110779, -0.00031704644788987935, -0.02026788331568241, -0.00035589560866355896, -0.0001012035645544529, -0.09559258073568344, -0.1215614452958107], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " [word for word in line.split() if word.lower() not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " line", ".", "split", "()", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.7018864154815674, -0.403391569852829, -0.5968129634857178, -0.001261273049749434, -0.0004164305282756686, -0.7792406678199768, -0.005752911325544119, -0.09084213525056839, -0.15366865694522858, -0.04336971044540405, -0.13250306248664856, -0.7075660228729248, -0.07021886110305786, -0.0012465096078813076, -0.012440227903425694, -6.580135959666222e-05, -0.004125418607145548, -8.344646857949556e-07, -3.933898824470816e-06, -0.00011216964776394889, -1.0490362910786644e-05, -0.059218477457761765, -0.007360128220170736], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -0.05484292283654213, -0.00764515670016408], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")", "\n"], "logprobs": [-1.125017523765564, -0.0037486536893993616, -0.006335649639368057, -0.00011121608258690685, -3.58813522325363e-05, -0.45246943831443787, -0.48323145508766174], "finish_reason": "stop"}], "metrics": {"energy": 98.21367342567446, "energy_per_token": 1.2591496593035187, "time": 4.413355, "time_per_token": 0.056581474358974364}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ".", "lower", "())", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -1.0723061561584473, -0.038833629339933395, -0.004832611884921789, -0.018650991842150688], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -0.18027447164058685, -0.0572689063847065, -1.0390338897705078, -0.027869785204529762, -0.0006884350441396236, -0.005326010286808014, -3.194758028257638e-05, -0.0036580332089215517, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.00018892886873800308, -1.0609570381348021e-05, -0.03051430732011795, -0.007262378465384245], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.35105082392692566, -7.784063927829266e-05, -2.682172998902388e-05, -0.759344756603241], "finish_reason": "stop"}], "metrics": {"energy": 86.8987948169708, "energy_per_token": 1.3577936690151688, "time": 3.799459, "time_per_token": 0.059366546875}}
{"outputs": [{"text": " re.findall(r'(.*\\n)', input_string)", "tokens": [" re", ".", "find", "all", "(", "r", "'(", ".", "*\\", "n", ")'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -1.246380090713501, -0.0015938685974106193, -0.32292822003364563, -0.052030760794878006, -1.9547178745269775, -0.9468337297439575, -2.756167411804199, -0.320206880569458, -0.5371213555335999, -0.0002712835557758808, -0.018608517944812775, -0.00033146608620882034, -0.00013851160474587232, -0.09105688333511353, -0.06897637248039246], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [word for word in words if word not in STOPWORDS]", "tokens": [" [", "word", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.7945795655250549, -1.146287202835083, -0.00039104922325350344, -9.953480184776708e-05, -0.0059246402233839035, -0.007647759281098843, -0.0721994936466217, -0.6813467144966125, -2.2172682292875834e-05, -0.003555526025593281, -5.960462772236497e-07, -3.933898824470816e-06, -0.00019691436318680644, -1.0847986231965479e-05, -0.01359195914119482, -0.007885516621172428], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4662635294371285e-05, -0.0013367536012083292, -0.4174417555332184, -0.00027700403006747365, -0.002561979927122593], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")", "\n"], "logprobs": [-1.0758858919143677, -0.003960030153393745, -0.007354566361755133, -0.00014757021563127637, -3.802703940891661e-05, -0.4835982918739319, -0.4415467381477356], "finish_reason": "stop"}], "metrics": {"energy": 82.50879726028442, "energy_per_token": 1.2501332918224912, "time": 4.001442, "time_per_token": 0.06062790909090909}}
{"outputs": [{"text": " input_string.split('\\\\n')", "tokens": [" input", "_", "string", ".", "split", "('\\\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -2.792705535888672, -0.01537987869232893, -0.015936855226755142, -0.06537630409002304], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -0.18027447164058685, -0.0572689063847065, -1.0390338897705078, -0.027869785204529762, -0.0006884350441396236, -0.005326010286808014, -3.194758028257638e-05, -0.0036580332089215517, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.00018892886873800308, -1.0609570381348021e-05, -0.03051430732011795, -0.007262378465384245], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.35105082392692566, -7.784063927829266e-05, -2.682172998902388e-05, -0.759344756603241], "finish_reason": "stop"}], "metrics": {"energy": 65.15792951869965, "energy_per_token": 1.068162778995076, "time": 3.1680322, "time_per_token": 0.05193495409836065}}
{"outputs": [{"text": " input_string.splitlines()", "tokens": [" input", "_", "string", ".", "split", "lines", "()", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.3733597993850708, -0.00816862192004919, -0.03426777943968773], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.6425390839576721, -0.278195321559906, -0.0396735705435276, -5.1616290875244886e-05, -0.009035414084792137, -5.8410845667822286e-05, -8.618460560683161e-05, -0.003862184938043356, -0.18027447164058685, -0.0572689063847065, -1.0390338897705078, -0.027869785204529762, -0.0006884350441396236, -0.005326010286808014, -3.194758028257638e-05, -0.0036580332089215517, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.00018892886873800308, -1.0609570381348021e-05, -0.03051430732011795, -0.007262378465384245], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.5616295058862306e-05, -0.0011207734933122993, -0.3302950859069824, -0.00039402826223522425, -0.0016625404823571444], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")"], "logprobs": [-1.258103847503662, -0.0033169749658554792, -0.006348324473947287, -0.00013314791431184858, -4.672895011026412e-05, -0.46008098125457764], "finish_reason": "stop"}], "metrics": {"energy": 105.86012886238095, "energy_per_token": 1.7074214332642088, "time": 3.3820286, "time_per_token": 0.054548848387096775}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -1.2086122035980225, -0.028018400073051453, -0.0008449559682048857, -0.005481095518916845, -3.6954195820726454e-05, -0.0032367717940360308, -8.344646857949556e-07, -3.933898824470816e-06, -0.00016044282529037446, -1.0132738680113107e-05, -0.030576974153518677, -0.009421530179679394], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.4104979932308197, -8.284702198579907e-05, -3.2543604902457446e-05, -0.6779768466949463], "finish_reason": "stop"}], "metrics": {"energy": 84.46647675895692, "energy_per_token": 1.5641940140547577, "time": 2.9551013, "time_per_token": 0.054724098148148145}}
{"outputs": [{"text": " input_string.split('\\n')", "tokens": [" input", "_", "string", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -0.6481190919876099, -0.012088018469512463, -0.0011138670379295945, -0.003880234668031335, -0.04795394092798233], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line.lower())", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ".", "lower", "())", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -1.0723061561584473, -0.038833629339933395, -0.004832611884921789, -0.018650991842150688], "finish_reason": "stop"}, {"text": " [word.lower() for word in words]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", "]", "\n"], "logprobs": [-0.035195231437683105, -0.7945795655250549, -0.3845989406108856, -0.050251465290784836, -3.6000557884108275e-05, -0.013838065788149834, -0.0001433984871255234, -0.0001679517881711945, -0.0026963327545672655, -2.0573296546936035, -0.01163612399250269], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.3589766240329482e-05, -0.0013446108205243945, -0.22298532724380493, -0.0003477922291494906, -0.0023053516633808613], "finish_reason": "stop"}, {"text": " dict(word_count)", "tokens": [" dict", "(", "word", "_", "count", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-1.064697504043579, -0.003509911010041833, -0.004992281552404165, -0.00013445904187392443, -3.8980677345534787e-05, -1.0345417261123657, -5.960462772236497e-07, -1.311301275563892e-06, -0.0005133026279509068, -6.782778655178845e-05, -0.09382396936416626], "finish_reason": "stop"}], "metrics": {"energy": 102.84198901557923, "energy_per_token": 1.7731377416479177, "time": 3.16548, "time_per_token": 0.054577241379310346}}
{"outputs": [{"text": " input_string.splitlines()", "tokens": [" input", "_", "string", ".", "split", "lines", "()", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.3733597993850708, -0.00816862192004919, -0.03426777943968773], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.7439352869987488, -0.356091171503067, -0.06422906368970871, -3.540453326422721e-05, -0.00987961981445551, -0.0001528146385680884, -0.0001567479339428246, -0.002236367203295231, -0.17690788209438324, -0.046364277601242065, -0.3614192306995392, -3.2066785934148356e-05, -0.002367433626204729, -9.536738616588991e-07, -3.576272320060525e-06, -0.0002157455455744639, -1.3351351299206726e-05, -0.027020564302802086, -0.006517463829368353], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4066597032069694e-05, -0.0014352031284943223, -0.2546629011631012, -0.0004204819560982287, -0.0024594792630523443], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47188061475753784, -0.00010311071673640981, -2.9682672902708873e-05, -1.369543194770813, -1.4305104514278355e-06, -1.0728830375228426e-06, -0.00022003613412380219, -0.00011812942830147222, -0.04888661578297615], "finish_reason": "stop"}], "metrics": {"energy": 69.20402257347108, "energy_per_token": 1.2815559735827977, "time": 3.3768177, "time_per_token": 0.06253366111111111}}
{"outputs": [{"text": " input_string.splitlines()", "tokens": [" input", "_", "string", ".", "split", "lines", "()", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.3733597993850708, -0.00816862192004919, -0.03426777943968773], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " [w.lower() for w in re.findall(r'\\w+', line) if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-2.7018864154815674, -1.354628324508667, -0.6620712280273438, -0.20796294510364532, -0.000972155889030546, -0.0521271750330925, -0.0003091811086051166, -0.000316927267704159, -0.3938683569431305, -7.056941103655845e-05, -0.0498012974858284, -0.00011288482346571982, -0.04294738173484802, -0.013231685385107994, -0.07440364360809326, -0.026391128078103065, -0.018479445949196815, -2.8013790142722428e-05, -0.004777801223099232, -1.1040064096450806, -0.1385456621646881, -0.055127933621406555, -0.3535209894180298, -0.003512286813929677, -0.0012163867941126227, -0.005580797791481018, -2.8967437174287625e-05, -0.003150858450680971, -9.536738616588991e-07, -4.529942543740617e-06, -0.00016258825780823827, -1.168244216387393e-05, -0.014867574907839298, -0.008392187766730785], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w.lower() not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -1.2086122035980225, -0.028018400073051453, -0.0008449559682048857, -0.005481095518916845, -3.6954195820726454e-05, -0.0032367717940360308, -8.344646857949556e-07, -3.933898824470816e-06, -0.00016044282529037446, -1.0132738680113107e-05, -0.030576974153518677, -0.009421530179679394], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -1.5295453071594238, -0.007529096212238073, -0.004374577663838863, -0.009827917441725731, -0.003817890305072069], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.4104979932308197, -8.284702198579907e-05, -3.2543604902457446e-05, -0.6779768466949463], "finish_reason": "stop"}], "metrics": {"energy": 124.769679397583, "energy_per_token": 1.5032491493684699, "time": 4.2186, "time_per_token": 0.05082650602409639}}
{"outputs": [{"text": " input_string.splitlines()", "tokens": [" input", "_", "string", ".", "split", "lines", "()", "\n"], "logprobs": [-0.4262154996395111, -0.00018690270371735096, -0.0003219324571546167, -0.0010470629204064608, -0.1660274714231491, -1.3733597993850708, -0.00816862192004919, -0.03426777943968773], "finish_reason": "stop"}, {"text": " Counter()", "tokens": [" Counter", "()", "\n"], "logprobs": [-0.26385697722435, -0.06154298037290573, -0.02786364033818245], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " re.findall(r'\\w+', line)", "tokens": [" re", ".", "find", "all", "(", "r", "'\\", "w", "+'", ",", " line", ")", "\n"], "logprobs": [-1.0167515277862549, -7.366862701019272e-05, -0.11429009586572647, -0.0001662831346038729, -0.04517142474651337, -0.011233535595238209, -0.053056079894304276, -0.1040889248251915, -0.02061150223016739, -1.7046782886609435e-05, -0.004279978107661009, -0.42210623621940613, -0.016543004661798477], "finish_reason": "stop"}, {"text": " [word.lower() for word in words if word.lower() not in STOPWORDS]", "tokens": [" [", "word", ".", "lower", "()", " for", " word", " in", " words", " if", " word", ".", "lower", "()", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.035195231437683105, -0.7945795655250549, -0.3845989406108856, -0.050251465290784836, -3.6000557884108275e-05, -0.013838065788149834, -0.0001433984871255234, -0.0001679517881711945, -0.0026963327545672655, -0.17722754180431366, -0.045789722353219986, -0.9796194434165955, -0.033544331789016724, -0.001465557492338121, -0.008052976801991463, -7.009260298218578e-05, -0.003937231842428446, -9.536738616588991e-07, -4.0531076592742465e-06, -0.00016342257731594145, -1.1205610462639015e-05, -0.02646276168525219, -0.00784459337592125], "finish_reason": "stop"}, {"text": "update(Counter(words))", "tokens": ["update", "(", "Counter", "(", "words", "))", "\n"], "logprobs": [-1.3589766240329482e-05, -0.0013446108205243945, -1.6399259567260742, -0.007014529779553413, -0.006271799560636282, -0.010073300451040268, -0.003751147771254182], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count"], "logprobs": [-0.4408857226371765, -9.190614218823612e-05, -3.373566141817719e-05], "finish_reason": "stop"}], "metrics": {"energy": 63.64847815322876, "energy_per_token": 1.0434176746430943, "time": 3.182103, "time_per_token": 0.052165622950819675}}
{"outputs": [{"text": " re.split('[\\n\\r]+', input_string)", "tokens": [" re", ".", "split", "('", "[\\", "n", "\\", "r", "]+", "'", ",", " input", "_", "string", ")", "\n"], "logprobs": [-1.5273183584213257, -0.00015758226800244302, -0.5112345814704895, -0.7852054238319397, -2.040823221206665, -0.15261708199977875, -1.1710388660430908, -0.3246102035045624, -0.5084809064865112, -0.0049840970896184444, -0.0002361257211305201, -0.021842045709490776, -0.00033408781746402383, -0.00010227633902104571, -0.041080787777900696, -0.05015237629413605], "finish_reason": "stop"}, {"text": " {}", "tokens": [" {}", "\n"], "logprobs": [-1.617397427558899, -0.010714149102568626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002994579030200839, -0.0016162439715117216, -0.001637666835449636, -0.0022267326712608337], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.6424134373664856, -0.002611324191093445, -0.1807885766029358, -0.04611978679895401, -0.01299731433391571], "finish_reason": "stop"}, {"text": " [w.lower() for w in words if w not in STOPWORDS]", "tokens": [" [", "w", ".", "lower", "()", " for", " w", " in", " words", " if", " w", " not", " in", " ST", "OP", "W", "OR", "DS", "]", "\n"], "logprobs": [-0.037378571927547455, -0.6860358119010925, -0.2646263539791107, -0.03998905047774315, -4.386805812828243e-05, -0.009233628399670124, -5.6980417866725475e-05, -9.107174992095679e-05, -0.0035345007199794054, -0.16680727899074554, -0.056794069707393646, -0.36419469118118286, -2.95634672511369e-05, -0.0027240333147346973, -8.344646857949556e-07, -3.4570634852570947e-06, -0.00020787939138244838, -1.2993727978027891e-05, -0.05484292283654213, -0.00764515670016408], "finish_reason": "stop"}, {"text": "update(words)", "tokens": ["update", "(", "words", ")", "\n"], "logprobs": [-1.4305012882687151e-05, -0.0012861560098826885, -0.252138614654541, -0.00038556772051379085, -0.0029113786295056343], "finish_reason": "stop"}, {"text": " word_count", "tokens": [" word", "_", "count", "\n"], "logprobs": [-0.4104979932308197, -8.284702198579907e-05, -3.2543604902457446e-05, -0.6779768466949463], "finish_reason": "stop"}], "metrics": {"energy": 94.53369448280334, "energy_per_token": 1.6881016871929169, "time": 3.1727922, "time_per_token": 0.05665700357142857}}
