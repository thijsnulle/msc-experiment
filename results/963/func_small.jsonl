{"outputs": [{"text": "# check if the source directory exists\n    source_dir_exists = os.path.exists(source_directory)\n    if not source_dir_exists:\n        raise OSError(f\"Source directory {source_directory} doesn't exist.\")\n\n    # get the list of file extensions in the source directory\n    valid_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    file_extensions = [os.path.splitext(file)[1] for file in glob.glob(f\"{source_directory}/*\") if not os.path.isdir(file)]\n\n    valid_file_extensions = [extension for extension in file_extensions if extension in valid_extensions]\n    print(f'Valid file extensions: {valid_file_extensions}')\n\n    # if the target directory does not exist, create it\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # create a zipfile from the valid files in the source directory\n    path = Path(target_directory, f", "tokens": ["#", " check", " if", " the", " source", " directory", " exists", "\n", "    ", "source", "_", "dir", "_", "exists", " =", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "dir", "_", "exists", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " doesn", "'", "t", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " get", " the", " list", " of", " file", " extensions", " in", " the", " source", " directory", "\n", "    ", "valid", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "file", "_", "extensions", " =", " [", "os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", "\"", ")", " if", " not", " os", ".", "path", ".", "is", "dir", "(", "file", ")]", "\n", "\n", "    ", "valid", "_", "file", "_", "extensions", " =", " [", "extension", " for", " extension", " in", " file", "_", "extensions", " if", " extension", " in", " valid", "_", "extensions", "]", "\n", "    ", "print", "(", "f", "'", "Valid", " file", " extensions", ":", " {", "valid", "_", "file", "_", "extensions", "}", "')", "\n", "\n", "    ", "#", " if", " the", " target", " directory", " does", " not", " exist", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " create", " a", " zip", "file", " from", " the", " valid", " files", " in", " the", " source", " directory", "\n", "    ", "path", " =", " Path", "(", "target", "_", "directory", ",", " f"], "logprobs": [-1.3695322275161743, -2.5609500408172607, -0.8995028734207153, -0.9655869603157043, -0.2068156749010086, -0.6026951670646667, -0.033614419400691986, -0.14374138414859772, -0.0023191480431705713, -2.8676748275756836, -0.022978810593485832, -2.1159894466400146, -1.4803216457366943, -1.4618780612945557, -0.012158328667283058, -0.22140702605247498, -4.792098479811102e-05, -0.0009232072625309229, -0.004742208402603865, -0.5447058081626892, -0.0011458981316536665, -0.003991969861090183, -1.7165990357170813e-05, -2.4437606043647975e-05, -0.0003251500893384218, -0.00554475886747241, -0.09737256169319153, -0.04528752714395523, -0.04919375851750374, -0.003469758667051792, -8.5588610090781e-05, -4.577531944960356e-05, -2.312633478140924e-05, -7.390948667307384e-06, -0.0007439468172378838, -0.010140093974769115, -0.002196639310568571, -0.06854201853275299, -0.048925552517175674, -3.3378044463461265e-05, -7.033323527139146e-06, -0.3672291338443756, -0.4311555027961731, -0.25668302178382874, -0.94317227602005, -0.03617241606116295, -0.8558493256568909, -0.0013224674621596932, -8.391981828026474e-05, -0.0013003236381337047, -0.01371037494391203, -2.9486658573150635, -0.002295717829838395, -6.437280717364047e-06, -0.02862468734383583, -0.5649556517601013, -0.045816823840141296, -0.0005355831235647202, -0.0028003547340631485, -0.184941366314888, -0.0008686583023518324, -0.23686711490154266, -1.8881162405014038, -1.693619728088379, -0.9337940216064453, -0.002020938089117408, -2.852689504623413, -1.3540394306182861, -2.721118688583374, -0.2613658607006073, -0.13075518608093262, -0.040711741894483566, -0.09335173666477203, -0.0010969580616801977, -3.102283477783203, -0.0011619728757068515, -0.16388849914073944, -0.0136391157284379, -0.11258473992347717, -0.05512748286128044, -0.0018572239205241203, -0.00047743841423653066, -5.8410845667822286e-05, -0.00239205127581954, -0.00044848397374153137, -0.0020350953564047813, -0.000727627135347575, -0.00013016807497479022, -5.722029527532868e-06, -0.0005295066512189806, -0.00018273114983458072, -0.00105015910230577, -5.721882189391181e-05, -0.0003960540343541652, -0.00010609064338495955, -1.0847986231965479e-05, -0.0006031363154761493, -0.0002097863471135497, -0.001191025716252625, -0.011591819114983082, -0.00814000703394413, -0.1320236772298813, -1.098305106163025, -0.0037928326055407524, -0.21334832906723022, -0.05458017811179161, -0.4881219267845154, -2.3837714195251465, -6.925819616299123e-05, -0.0025813612155616283, -5.5549986427649856e-05, -0.01399101410061121, -0.000125281119835563, -7.152555099310121e-07, -0.0004233417857903987, -0.5391130447387695, -0.4408780634403229, -0.0008705640211701393, -0.02450765296816826, -0.15367580950260162, -0.0025994342286139727, -0.0022776394616812468, -0.6722250580787659, -0.00018761781393550336, -0.04204869642853737, -0.0173894502222538, -1.0989928245544434, -0.31310397386550903, -0.0031693964265286922, -0.008181864395737648, -7.950943836476654e-05, -0.0019073167350143194, -0.08827415853738785, -0.02239450253546238, -0.1712280660867691, -0.8808197379112244, -0.282850056886673, -2.586564302444458, -0.5653393864631653, -0.00021360022947192192, -0.00025733973598107696, -0.000912369170691818, -0.000974537746515125, -0.0719817578792572, -0.00018940561858471483, -0.05282452702522278, -0.04776336997747421, -0.01599246636033058, -0.7820340991020203, -0.00031251792097464204, -3.0115230083465576, -0.0394880585372448, -2.121216297149658, -0.003631546162068844, -0.03972822055220604, -0.034257642924785614, -0.28783032298088074, -0.971958339214325, -0.034565623849630356, -0.0009602464851923287, -0.00048744716332294047, -0.5231881737709045, -6.318072337307967e-06, -4.2676016164477915e-05, -0.0228324756026268, -0.02107173204421997, -0.05863417685031891, -0.0012641304638236761, -1.311301275563892e-06, -8.4638240878121e-06, -0.0048085288144648075, -0.006757028866559267, -1.492325782775879, -3.4882123470306396, -0.0427519716322422, -1.0843405723571777, -2.1264700889587402, -0.905138373374939, -1.1382718086242676, -0.011255578137934208, -0.3604586124420166, -0.11224254965782166, -0.01684945821762085, -1.0251946150674485e-05, -0.29050061106681824, -4.446407547220588e-05, -1.5020257706055418e-05, -0.0494823157787323, -0.03946743160486221, -0.029290806502103806, -0.28122174739837646, -0.0007539528887718916, -0.3028623163700104, -2.538010358810425, -0.8043838143348694, -0.18911613523960114, -0.040328480303287506, -0.8969852328300476, -0.0017982041463255882, -0.013213921338319778, -0.022424811497330666, -0.042607586830854416, -0.002477197675034404, -0.04261535406112671, -0.000646501372102648, -0.41453999280929565, -0.00965201761573553, -0.012012520805001259, -1.9073468138230965e-06, -2.729855441430118e-05, -8.368142152903602e-05, -0.04110881686210632, -0.0003361137059982866, -0.003181279404088855, -1.1920922133867862e-06, -1.5616295058862306e-05, -0.003594843437895179, -0.0019152885070070624, -0.002022960688918829, -0.0912688747048378, -1.8715683836489916e-05, -0.04994260519742966, -1.4066597032069694e-05, -0.0003082277253270149, -0.00012063252506777644, -0.0034886470530182123, -8.821448318485636e-06, -9.65590606938349e-06, -0.06075206771492958, -0.002914468990638852, -0.09502709656953812, -0.002492894185706973, -0.25203949213027954, -0.8412150144577026, -1.1464110612869263, -0.584568202495575, -2.435839891433716, -2.775324583053589, -0.2365921288728714, -0.9862684607505798, -2.160928726196289, -1.1532232761383057, -0.024741899222135544, -0.02828925848007202, -0.014803444966673851, -0.08371482789516449, -0.003456453327089548, -3.9308953285217285, -0.2124926596879959, -0.8272518515586853, -0.008703158237040043, -0.20445692539215088, -1.6093124941107817e-05, -1.6331539882230572e-05, -2.808349847793579, -0.21787342429161072], "finish_reason": "length"}], "metrics": {"energy": 297.3546357173919, "energy_per_token": 1.161541545771062, "time": 12.352853, "time_per_token": 0.04825333203125}}
{"outputs": [{"text": "extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    extensions_str = \"/\" + \"/\".join(extensions)\n    valid_exts_str = \".\".join(extensions)\n    exts = []\n\n    # Create the target directory if it does not exist\n    try:\n        if not Path(target_directory).exists():\n            os.mkdir(target_directory)\n    except OSError as e:\n        raise OSError(f\"Cannot create target directory: {target_directory}\") from e\n\n    # Look for valid extensions in the source directory\n    for filename in glob.glob(source_directory + extensions_str):\n        ext = os.path.splitext(filename)[-1]\n        if ext not in valid_exts_str:\n            raise FileNotFoundError(f\"The extension '{ext}' is invalid. Valid extensions are: {valid_exts_str}\")\n        exts.append(ext)\n\n    # Create the zip file\n    zf = zipfile.ZipFile(target", "tokens": ["extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "extensions", "_", "str", " =", " \"", "/\"", " +", " \"", "/\"", ".", "join", "(", "extensions", ")", "\n", "    ", "valid", "_", "ext", "s", "_", "str", " =", " \"", ".", "\"", ".", "join", "(", "extensions", ")", "\n", "    ", "ext", "s", " =", " []", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "try", ":", "\n", "        ", "if", " not", " Path", "(", "target", "_", "directory", ")", ".", "exists", "():", "\n", "            ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "    ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "C", "annot", " create", " target", " directory", ":", " {", "target", "_", "directory", "}\"", ")", " from", " e", "\n", "\n", "    ", "#", " Look", " for", " valid", " extensions", " in", " the", " source", " directory", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "source", "_", "directory", " +", " extensions", "_", "str", "):", "\n", "        ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "[-", "1", "]", "\n", "        ", "if", " ext", " not", " in", " valid", "_", "ext", "s", "_", "str", ":", "\n", "            ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " extension", " '", "{", "ext", "}'", " is", " invalid", ".", " Valid", " extensions", " are", ":", " {", "valid", "_", "ext", "s", "_", "str", "}\"", ")", "\n", "        ", "ext", "s", ".", "append", "(", "ext", ")", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", "\n", "    ", "z", "f", " =", " zip", "file", ".", "Z", "ip", "File", "(", "target"], "logprobs": [-3.3165597915649414, -0.16890056431293488, -0.15622131526470184, -0.048669882118701935, -0.002979246899485588, -0.00031931069679558277, -0.0001408954558428377, -0.0038849846459925175, -0.0006968930247239769, -0.0018236687174066901, -0.0005752577562816441, -0.00017987063620239496, -2.47952248173533e-05, -0.0008796160109341145, -0.00029404606902971864, -0.0008890252211131155, -6.353653589030728e-05, -0.0005831210291944444, -0.00019071667338721454, -5.340433563105762e-05, -0.001134824356995523, -0.00030179237364791334, -0.0011612584348767996, -0.012177996337413788, -0.02203388884663582, -0.45356106758117676, -4.555878639221191, -0.5020495653152466, -1.8340264558792114, -0.025006670504808426, -1.4345932006835938, -3.7927470207214355, -1.9906715154647827, -0.26562798023223877, -0.10364935547113419, -0.0016918168403208256, -0.0004363300104159862, -0.04423687234520912, -0.04401307925581932, -0.012842448428273201, -0.12689916789531708, -0.3965555727481842, -4.037226676940918, -0.04035424068570137, -3.447507381439209, -1.431206464767456, -1.9252278804779053, -2.2696259021759033, -0.04196536913514137, -0.7088732719421387, -2.3999805450439453, -0.364097535610199, -1.0819201469421387, -0.001978227635845542, -0.033248256891965866, -0.01665661670267582, -0.024662582203745842, -0.054422590881586075, -0.48167434334754944, -3.992314338684082, -0.4826541543006897, -0.9003210663795471, -2.149460792541504, -0.020735861733555794, -1.4149093627929688, -0.00037949037505313754, -1.7143869400024414, -3.0556118488311768, -1.097883939743042, -0.39790529012680054, -0.14717161655426025, -0.14910642802715302, -0.03705698251724243, -0.897781252861023, -0.0007039214833639562, -0.051122650504112244, -0.20993876457214355, -0.0007938570925034583, -2.4025368690490723, -0.0003047717036679387, -0.0012486526975408196, -0.0020523453131318092, -2.3818397521972656, -0.07113156467676163, -2.299741744995117, -0.015208826400339603, -0.00716071343049407, -9.775113539944869e-06, -3.707340147229843e-05, -0.001192573574371636, -0.00012635385792236775, -0.21879690885543823, -0.004059171304106712, -0.006585798226296902, -0.001947531825862825, -0.2633116841316223, -2.729855441430118e-05, -2.1625466346740723, -3.0278701160568744e-05, -0.0006348263123072684, -0.011260529048740864, -1.3589766240329482e-05, -1.3351351299206726e-05, -0.009140077978372574, -0.003882490796968341, -0.12076602131128311, -0.005770690273493528, -0.7027431130409241, -2.9801878554280847e-05, -2.0265558760002023e-06, -1.2109012603759766, -0.4861862361431122, -0.0014528206083923578, -0.008170395158231258, -0.001794158248230815, -1.5019229650497437, -0.28550490736961365, -2.7656173188006505e-05, -1.1324817933200393e-05, -0.10291483253240585, -0.43624162673950195, -0.18106761574745178, -2.2642834186553955, -0.09588029235601425, -0.05906600132584572, -0.5512042045593262, -0.049027033150196075, -0.47872722148895264, -0.02011157013475895, -0.9264290928840637, -0.00013410145766101778, -8.809178689261898e-05, -0.7880659699440002, -0.009146693162620068, -0.530778169631958, -0.0028297165408730507, -0.0026651835069060326, -0.048671357333660126, -0.0005127069307491183, -0.4063068628311157, -4.681488037109375, -0.10357852280139923, -2.397892951965332, -1.0604490041732788, -0.4880527853965759, -0.2065351903438568, -0.06900563836097717, -0.04269634187221527, -0.3067888617515564, -0.0013653251808136702, -0.14421746134757996, -1.9510612487792969, -0.005162480287253857, -0.7375089526176453, -5.471556869451888e-05, -0.18842542171478271, -0.01339107844978571, -1.2751803398132324, -7.974783511599526e-05, -5.1377883210079744e-05, -0.026086771860718727, -0.4625321626663208, -0.0004683827864937484, -3.2186455882765586e-06, -0.24045434594154358, -0.00643337145447731, -0.0104918098077178, -0.7413104176521301, -0.10430590063333511, -0.7991757988929749, -2.4914430468925275e-05, -0.0006901028100401163, -7.402622577501461e-05, -0.05493364855647087, -4.577531944960356e-05, -5.960462772236497e-07, -0.0003716255014296621, -0.019355356693267822, -1.5293984413146973, -0.003934619482606649, -0.00031668893643654883, -0.011563066393136978, -0.14233829081058502, -0.050435326993465424, -0.34051036834716797, -0.03565409407019615, -1.136091947555542, -1.1205610462639015e-05, -1.9355137348175049, -5.125986263010418e-06, -0.0004960260121151805, -3.0278701160568744e-05, -0.000782183778937906, -7.867782187531702e-06, -0.03061085008084774, -0.02791465073823929, -0.0011940023396164179, -1.616341233253479, -2.16204833984375, -0.07281450182199478, -6.854299135738984e-05, -0.015273399651050568, -0.14651544392108917, -0.02382553368806839, -3.477059841156006, -1.3403875827789307, -1.5253093242645264, -0.00585554912686348, -0.008713084273040295, -0.09535431116819382, -0.1455862820148468, -2.4867730140686035, -0.4669456481933594, -1.4820244312286377, -0.02567903883755207, -0.2532202899456024, -0.2118537873029709, -0.15656019747257233, -0.03564304858446121, -0.001529477071017027, -0.0007871866691857576, -0.000726197671610862, -0.0138675756752491, -5.364403477869928e-06, -0.18265284597873688, -0.002531777834519744, -0.011114000342786312, -0.07441116869449615, -0.15465344488620758, -0.035640519112348557, -0.005554242990911007, -0.001752984942868352, -0.009386692196130753, -0.0905253067612648, -0.07727164030075073, -0.00472441129386425, -0.12452635914087296, -0.013463061302900314, -0.2504292130470276, -0.8656244277954102, -0.24427275359630585, -0.10494537651538849, -0.0927218571305275, -0.6695815920829773, -0.0011535187950357795, -2.839409351348877, -1.237597107887268, -0.041088223457336426, -0.026737291365861893, -8.237022848334163e-05, -5.090107151772827e-05, -0.004022484179586172, -0.0006566275842487812, -5.9960475482512265e-05, -0.005319844000041485, -0.6048892736434937], "finish_reason": "length"}], "metrics": {"energy": 294.97537759685525, "energy_per_token": 1.1522475687377158, "time": 11.352829, "time_per_token": 0.04434698828125}}
{"outputs": [{"text": "os.chdir(source_directory)\n\n    source_file_list = []\n    for path_ in glob.glob(\"*\", recursive=True):\n        for ext in ['.txt', '.docx', '.xlsx', '.csv']:\n            if str(path_).endswith(ext):\n                source_file_list.append(Path(path_))\n\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    with zipfile.ZipFile(os.path.join(target_directory, zip_name + \".zip\"), \"w\") as zf:\n        for source_path in source_file_list:\n            zf.write(source_path)\n\n    return os.path.join(target_directory, zip_name + \".zip\")", "tokens": ["os", ".", "ch", "dir", "(", "source", "_", "directory", ")", "\n", "\n", "    ", "source", "_", "file", "_", "list", " =", " []", "\n", "    ", "for", " path", "_", " in", " glob", ".", "glob", "(", "\"", "*", "\"", ",", " recursive", "=", "True", "):", "\n", "        ", "for", " ext", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "            ", "if", " str", "(", "path", "_)", ".", "end", "sw", "ith", "(", "ext", "):", "\n", "                ", "source", "_", "file", "_", "list", ".", "append", "(", "Path", "(", "path", "_", "))", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " \"", ".", "zip", "\"", ")", ",", " \"", "w", "\"", ")", " as", " z", "f", ":", "\n", "        ", "for", " source", "_", "path", " in", " source", "_", "file", "_", "list", ":", "\n", "            ", "z", "f", ".", "write", "(", "source", "_", "path", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " \"", ".", "zip", "\"", ")", "\n", "\n", "def"], "logprobs": [-3.721529960632324, -0.015104678459465504, -1.4221645593643188, -0.005412092432379723, -0.012015936896204948, -0.5105250477790833, -0.00010108436981681734, -4.637133679352701e-05, -0.0029548814054578543, -0.14086104929447174, -1.3926855325698853, -0.000571326119825244, -3.735316276550293, -0.05264618992805481, -3.19518780708313, -0.08679031580686569, -1.066305160522461, -0.027179399505257607, -1.8336596488952637, -0.024474266916513443, -0.25834476947784424, -0.5312045216560364, -3.964271068572998, -2.177657127380371, -2.8169143199920654, -0.24824480712413788, -7.664863369427621e-05, -0.10561072826385498, -0.4849313497543335, -0.18846017122268677, -0.1423570066690445, -1.720496654510498, -2.223801851272583, -0.00813504122197628, -0.010278387926518917, -0.37236231565475464, -0.006012448575347662, -0.03124641813337803, -0.013333087787032127, -2.658647060394287, -1.3829419612884521, -0.026906151324510574, -0.9189425110816956, -0.07033142447471619, -0.008405545726418495, -0.0005752577562816441, -0.00022587609419133514, -0.006734176073223352, -0.0008582960581406951, -0.004101437050849199, -0.0010829067323356867, -0.0001928620331455022, -5.173549288883805e-05, -0.0015589953400194645, -0.00038628268521279097, -0.002155244816094637, -0.00012599628826137632, -0.0007767044589854777, -0.00047755756531842053, -6.508615479106084e-05, -0.0017289465758949518, -0.0003349220205564052, -0.002513109240680933, -0.01295824721455574, -0.00036554806865751743, -0.005790601950138807, -0.0040677194483578205, -0.030264869332313538, -3.458564281463623, -0.02461070939898491, -0.37407180666923523, -0.33340707421302795, -0.019427144899964333, -0.08361297100782394, -1.0371154530730564e-05, -1.1920928244535389e-07, -0.0020387833938002586, -0.003458829363808036, -0.02831985056400299, -0.01032133586704731, -0.0020443748217076063, -0.040852054953575134, -6.603976362384856e-05, -0.0004357342259027064, -0.0006678258068859577, -0.00010275312524754554, -0.010316026397049427, -0.0025164387188851833, -0.006968717556446791, -2.5606067180633545, -0.009845034219324589, -0.16643057763576508, -0.3307439386844635, -0.010018422268331051, -0.0054757604375481606, -0.2410508543252945, -0.004755377769470215, -1.6784086227416992, -0.35395267605781555, -0.2646109163761139, -1.7762025890988298e-05, -0.0014517493546009064, -0.00017534149810671806, -0.31992512941360474, -0.005621220916509628, -0.07832454890012741, -6.6756979322235566e-06, -2.729855441430118e-05, -0.00902466382831335, -0.011932187713682652, -0.0035655039828270674, -0.1105443686246872, -0.0011194637045264244, -0.2082909494638443, -3.862306402879767e-05, -0.0009336879593320191, -0.0004576589271891862, -0.01558024249970913, -8.34461570775602e-06, -1.2993727978027891e-05, -0.09267132729291916, -0.0083787115290761, -0.17054417729377747, -0.0007416835287585855, -1.2692041397094727, -0.14629580080509186, -0.0003325386205688119, -3.1709168979432434e-05, -0.0057928538881242275, -0.0011099375551566482, -6.282132380874828e-05, -0.012362166307866573, -0.8358554244041443, -0.00023803261865396053, -0.0037785815075039864, -0.001122440560720861, -0.0034656007774174213, -0.001090885023586452, -0.033450376242399216, -1.9311717551317997e-05, -1.1086402082582936e-05, -0.002201516181230545, -0.443362295627594, -0.0002946419408544898, -0.00015472168161068112, -0.46224573254585266, -1.0787389278411865, -0.0005382042727433145, -0.00012051333033014089, -0.00010299152199877426, -0.008568782359361649, -0.0007650309125892818, -1.0456018447875977, -0.025654755532741547, -0.0001333863037871197, -0.5244287252426147, -0.0003149013500660658, -2.284832000732422, -0.42209669947624207, -0.00225825235247612, -0.004231309983879328, -0.012661663815379143, -0.046770378947257996, -1.137066125869751, -0.11973637342453003, -2.9136056900024414, -0.020960021764039993, -0.004946613218635321, -5.722029527532868e-06, -0.00041654970846138895, -3.576272320060525e-06, -2.169585604860913e-05, -0.000408327643526718, -0.002170589519664645, -0.006601904518902302, -0.20400306582450867, -0.01423631701618433, -0.00018344627460464835, -0.0007946909172460437, -0.0016987192211672664, -0.07530059665441513, -3.266281055402942e-05, -0.00035613393993116915, -0.6523900032043457, -0.02705676481127739, -0.1777523159980774, -0.0443807952105999, -0.2225286215543747, -0.16465753316879272, -2.0265558760002023e-06, -0.0010116941994056106, -0.0028634758200496435, -0.05569827929139137, -0.0009598892065696418, -0.020278047770261765, -3.540453326422721e-05, -8.821448318485636e-06, -0.0014907924924045801, -0.08510952442884445, -2.8967437174287625e-05, -2.5987286790041253e-05, -0.03002265654504299, -0.032513804733753204, -0.00019560330838430673, -3.766942609217949e-05, -9.285972191719338e-05, -0.46735167503356934, -0.16842280328273773, -0.009276974946260452, -1.2770644426345825], "finish_reason": "stop"}], "metrics": {"energy": 220.0867909793853, "energy_per_token": 1.0480323379970728, "time": 9.051426, "time_per_token": 0.043102028571428565}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise OSError(\n            f\"The source directory {source_directory} does not exist.\"\n        )\n\n    target_directory_path = Path(target_directory)\n    target_directory_path.mkdir(parents=True, exist_ok=True)\n\n    zip_name_with_ext = f\"{zip_name}.zip\"\n    zip_path = os.path.join(target_directory, zip_name_with_ext)\n\n    zip_file = zipfile.ZipFile(zip_path, 'w')\n\n    for file in glob.glob(os.path.join(source_directory, \"**/*.txt\")):\n        zip_file.write(file)\n\n    for file in glob.glob(os.path.join(source_directory, \"**/*.docx\")):\n        zip_file.write(file)\n\n    for file in glob.glob(os.path.join(source_directory, \"**/*.xlsx\")):\n        zip_file.write", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\n", "            ", "f", "\"", "The", " source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", "\n", "        ", ")", "\n", "\n", "    ", "target", "_", "directory", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "directory", "_", "path", ".", "mk", "dir", "(", "parents", "=", "True", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "zip", "_", "name", "_", "with", "_", "ext", " =", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", "_", "with", "_", "ext", ")", "\n", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "txt", "\"", "))", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "doc", "x", "\"", "))", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "x", "ls", "x", "\"", "))", ":", "\n", "        ", "zip", "_", "file", ".", "write"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -1.2988874912261963, -0.0032447329722344875, -0.0003023882454726845, -0.005556851159781218, -0.00014435203047469258, -4.792098479811102e-05, -0.002004520269110799, -0.02544466219842434, -0.0029696195852011442, -0.04432719573378563, -0.04187025874853134, -3.4689302992774174e-05, -3.576272320060525e-06, -0.40211057662963867, -3.1746983528137207, -0.0063348207622766495, -0.3145192861557007, -0.25795626640319824, -1.1710104942321777, -0.39795395731925964, -0.19331590831279755, -0.8307098150253296, -0.0074358596466481686, -5.9126061387360096e-05, -0.0001618731184862554, -0.03162093460559845, -0.1618163138628006, -0.002219476969912648, -0.006999851204454899, -0.44453164935112, -0.11888667196035385, -1.3493858575820923, -0.02004730887711048, -0.00010394509445177391, -0.006629260256886482, -0.417324036359787, -0.00039843725971877575, -2.6237831115722656, -0.018453815951943398, -0.2312699854373932, -1.981513500213623, -0.17503796517848969, -0.010377377271652222, -0.0750299021601677, -0.0019174300832673907, -0.015327873639762402, -0.00019035911827813834, -9.536697689327411e-06, -0.001746558933518827, -0.18013419210910797, -0.1065252497792244, -1.1267322301864624, -0.00032646095496602356, -0.008929794654250145, -0.004025808535516262, -0.00842091254889965, -0.0027448381297290325, -0.009483171626925468, -1.3589766240329482e-05, -0.00031442465842701495, -0.30287042260169983, -0.0010684978915378451, -0.00229119835421443, -0.0017778557958081365, -0.003491260576993227, 0.0, -3.4450891689630225e-05, -0.00014673586701974273, -0.0011848341673612595, -0.0004226268210913986, -0.012537237256765366, -0.2511136531829834, -7.629103492945433e-05, -1.0944880247116089, -0.014768090099096298, -1.128420114517212, -0.9603702425956726, -0.6896228194236755, -0.0004981707315891981, -1.7302436828613281, -0.016090068966150284, -0.5482449531555176, -0.01760733500123024, -0.0009366653976030648, -0.1482645869255066, -9.405170567333698e-05, -0.00013910756388213485, -0.008463704027235508, -0.0001234931987710297, -0.0005202132160775363, -6.4490144723095e-05, -0.03667714074254036, -0.14842388033866882, -0.2840745449066162, -0.008060544729232788, -0.7056809067726135, -0.018311146646738052, -2.0352799892425537, -8.940297266235575e-05, -0.0006683023530058563, -0.03587953373789787, -0.005218574311584234, -0.0003064401389565319, -0.08251161873340607, -3.6954811548639555e-06, -3.3378044463461265e-05, -0.7359766960144043, -0.0024213064461946487, -1.4781842764932662e-05, -0.00016604475968051702, -0.002053059171885252, -1.156323378381785e-05, -3.3378044463461265e-05, -7.152555099310121e-07, -0.0004978132783435285, -0.004541914910078049, -0.3243758976459503, -0.00011944057769142091, -2.718899726867676, -0.05234123766422272, -0.5284090042114258, -0.07684705406427383, -0.15993644297122955, -0.0004996005445718765, -0.00010334911348763853, -0.0048415097407996655, -0.000753476400859654, -4.5536911784438416e-05, -0.0003734129713848233, -0.11979876458644867, -7.295342220459133e-05, -0.0009810879128053784, -0.0008727079257369041, -0.9002101421356201, -0.029244383797049522, -0.505706250667572, -0.019512256607413292, -0.25098752975463867, -0.00022075122979003936, -0.4388696849346161, -0.5859251618385315, -0.9407696723937988, -0.1111457347869873, -6.210611172718927e-05, -0.1833796203136444, -0.013151685707271099, -0.5861408710479736, -0.00033480284037068486, -0.00012385078298393637, -0.0012571059633046389, -0.00037853704998269677, -0.00031835734262131155, -0.006742109544575214, -2.264974000354414e-06, -1.823885577323381e-05, -0.0007622911944054067, -1.1665552854537964, -1.009069561958313, -0.32384511828422546, -0.32563522458076477, -0.23349682986736298, -0.03089221939444542, -0.3574974238872528, -0.03193284943699837, -0.005866333842277527, -0.0033333711326122284, -0.22232457995414734, -0.002789774676784873, -0.020901301875710487, -0.00024923557066358626, -0.001156733720563352, -0.00022659118985757232, -0.0482630729675293, -0.5097862482070923, -0.012935417704284191, -0.2472153902053833, -0.008344192057847977, -0.050040919333696365, -0.002214838284999132, -0.0028318562544882298, -0.0009236836922354996, -0.00027056847466155887, -0.00011777184408856556, -8.272782724816352e-05, -0.015563459135591984, -0.0022500455379486084, -2.50339189733495e-06, -0.0011597104603424668, -6.794906312279636e-06, -2.3841574147809297e-05, -0.003379588248208165, -8.583032467868179e-06, -4.410734163684538e-06, -2.0265373677830212e-05, -0.002242433140054345, -0.0007026110542938113, -0.000633992429357022, -0.0005746620590798557, -0.020234940573573112, -0.000504723924677819, -0.0003311085747554898, -6.067568756407127e-05, -9.536697689327411e-06, -0.00017271934484597296, -0.00018142008048016578, -0.0044023506343364716, -3.433168603805825e-05, -0.0001911934232339263, -8.34461570775602e-06, -3.242440288886428e-05, -1.7165990357170813e-05, -0.0010512308217585087, -0.003382914699614048, -0.00019333878299221396, -0.006582837551832199, -9.48860906646587e-05, -0.0007581220706924796, -6.258291978156194e-05, -2.610649426060263e-05, -0.00019202772818971425, -0.0001515035255579278, -9.524368942948058e-05, -2.109982233378105e-05, -0.0005063920398242772, -0.007208647672086954, -9.536738616588991e-07, -0.00011276562872808427, -3.4570634852570947e-06, -2.861018856492592e-06, -0.00025555206229910254, -1.1205610462639015e-05, -1.0728830375228426e-06, -1.0490362910786644e-05, -0.00039664984797127545, -0.00010835537250386551, -3.0636318115284666e-05, -0.00015317220822907984, -0.0036491251084953547, -0.00015269544383045286, -0.0007009433466009796, -7.64102369430475e-05, -2.0503786799963564e-05, -5.364403477869928e-06, -2.610649426060263e-05, -4.732496745418757e-05, -0.00042822727118618786, -5.602820692729438e-06, -5.8412379075889476e-06, -5.364403477869928e-06, -2.47952248173533e-05], "finish_reason": "length"}], "metrics": {"energy": 271.0940296831132, "energy_per_token": 1.058961053449661, "time": 11.12951, "time_per_token": 0.0434746484375}}
{"outputs": [{"text": "# Check for source_directory existence\n    if not os.path.exists(source_directory):\n        raise OSError('Source directory does not exist')\n\n    # Create zip file path\n    zip_file_path = Path(target_directory) / f'{zip_name}.zip'\n\n    # Create a zip file containing the specified extension files\n    with zipfile.ZipFile(zip_file_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for filename in glob.glob(os.path.join(source_directory, '**', '*.*')):\n            if os.path.splitext(filename)[-1] in ['.txt', '.docx', '.xlsx', '.csv']:\n                zip_file.write(filename)\n\n    # Return the full path of the zip file\n    return str(zip_file_path)", "tokens": ["#", " Check", " for", " source", "_", "directory", " existence", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "Source", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "#", " Create", " zip", " file", " path", "\n", "    ", "zip", "_", "file", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", " /", " f", "'{", "zip", "_", "name", "}", ".", "zip", "'", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " containing", " the", " specified", " extension", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "*", "'))", ":", "\n", "            ", "if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "[-", "1", "]", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "filename", ")", "\n", "\n", "    ", "#", " Return", " the", " full", " path", " of", " the", " zip", " file", "\n", "    ", "return", " str", "(", "zip", "_", "file", "_", "path", ")", "\n", "\n", "def"], "logprobs": [-1.4324654340744019, -1.0502543449401855, -3.204895496368408, -1.6310902833938599, -0.9046822190284729, -0.008034765720367432, -0.5708011388778687, -0.2240699976682663, -0.0028463585767894983, -0.1430678814649582, -0.02179539017379284, -0.07646601647138596, -1.7762025890988298e-05, -0.0002747396647464484, -0.003262199927121401, -0.2151193618774414, -0.00047469791024923325, -0.0015648273983970284, -6.937739817658439e-05, -2.3483953555114567e-05, -0.0013086573453620076, -0.006909998599439859, -0.0016517103649675846, -0.04328318312764168, -0.06076160445809364, -2.396077979938127e-05, -3.099436753473128e-06, -1.151463508605957, -0.658012866973877, -0.0492718368768692, -0.18682865798473358, -0.0004153581103309989, -0.004334697499871254, -1.052760124206543, -0.0019376566633582115, -0.12088306993246078, -0.0010642108973115683, -0.1892261505126953, -1.0575661659240723, -3.363750696182251, -0.42555704712867737, -1.5642855167388916, -0.42156654596328735, -0.0007440659101121128, -0.32150179147720337, -0.016196344047784805, -1.1445894241333008, -0.21622556447982788, -0.046422090381383896, -0.0029768699314445257, -2.171664237976074, -0.026271650567650795, -0.14814452826976776, -2.145764938177308e-06, -1.1444026313256472e-05, -0.1979081928730011, -0.10596559196710587, -1.0166882276535034, -0.24191051721572876, -0.011759013868868351, -4.768258077092469e-05, -0.00012492353562265635, -0.002057936741039157, -0.00018880968855228275, -9.42901024245657e-05, -0.00019226610311307013, -0.012579734437167645, -0.087406687438488, -0.00031406714697368443, -0.08125189691781998, -0.8974220752716064, -3.187960386276245, -1.3647265434265137, -0.38325825333595276, -2.676412343978882, -1.4644771814346313, -2.5026421546936035, -3.5846595764160156, -0.14617931842803955, -0.7634996175765991, -0.0011893587652593851, -0.22359882295131683, -0.11312633007764816, -0.00010466027742950246, -1.4424220353248529e-05, -0.00194193993229419, -0.0012038849527016282, -3.611976353568025e-05, -0.0011328000109642744, -0.15402720868587494, -0.0007823029300197959, -0.00036793138133361936, -7.4741430580616e-05, -3.0278701160568744e-05, -0.004691545385867357, -0.1079806536436081, -0.0077491383999586105, -1.2452809810638428, -0.0006984416977502406, -0.7588586807250977, -5.6980417866725475e-05, -2.1934269170742482e-05, -0.001965259201824665, -0.015961024910211563, -0.000582644424866885, -0.001142206834629178, -0.00021646064124070108, -0.0005370128201320767, -0.02395065873861313, -0.0002531684876885265, -0.06927496194839478, -0.08723790943622589, -0.03959886357188225, -0.0005415403284132481, -0.0021395429503172636, -0.01686622016131878, -0.15339167416095734, -1.8721835613250732, -0.0021294315811246634, -0.10516688972711563, -2.9205850296420977e-05, -0.25269079208374023, -0.021525800228118896, -0.5446187257766724, -1.156323378381785e-05, -0.00014351768186315894, -0.0005849081207998097, -0.002325094770640135, -0.0010624246206134558, -0.004714563488960266, -1.0013530300057027e-05, -1.07287787614041e-05, -0.0006277974462136626, -0.13303658366203308, -1.6111198663711548, -1.8793798685073853, -0.029199693351984024, -0.06797416508197784, -0.0042091114446520805, -0.16816692054271698, -2.207948684692383, -0.2056199163198471, -0.0009912106906995177, -0.010886915028095245, -0.006157001480460167, -0.7525856494903564, -0.8216705918312073, -0.00036769305006600916, -0.0010868363315239549, -0.0002300474588992074, -0.9483094215393066, -0.00019941726350225508, -1.1920928244535389e-07, -8.523101132595912e-05, -0.011760073713958263, -1.1308467388153076, -0.012391130439937115, -0.00024375328212045133, -0.00953441858291626, -0.3222985565662384, -0.14887236058712006, -0.004051098134368658, -0.006947882007807493, -0.0008336406317539513, -0.0001161031104857102, -0.004245198331773281, -0.0009124883217737079, -0.0038376033771783113, -0.0006541258189827204, -0.00013147920253686607, -2.992108420585282e-05, -0.0014421073719859123, -0.0003351603518240154, -0.0017283515771850944, -0.00012158608296886086, -0.0005327236140146852, -0.00031835734262131155, -5.61460001335945e-05, -0.0009497660794295371, -0.0002454218047205359, -0.0012056708801537752, -0.005414227023720741, -0.0029261175077408552, -0.011765257455408573, -0.0010630200849846005, -0.05496569350361824, -0.00035041390219703317, -0.0026934794150292873, -0.00014220656885299832, -0.000782183778937906, -8.308542601298541e-05, -0.00620699767023325, -0.26421281695365906, -0.01565946266055107, -0.07705909013748169, -0.006418921053409576, -1.5679948329925537, -0.16650676727294922, -0.3360649645328522, -0.6929470896720886, -0.033944953233003616, -1.6737525463104248, -0.013293210417032242, -1.326941967010498, -0.011343744583427906, -0.16535991430282593, -0.00033968876232393086, -0.01098855584859848, -0.35580331087112427, -0.00016807096835691482, -0.04964851215481758, -0.0005004345439374447, -0.00019929806876461953, -0.028240816667675972, -1.1920922133867862e-06, -0.30966123938560486, -0.3089732825756073, -0.009994227439165115, -1.2608894109725952], "finish_reason": "stop"}], "metrics": {"energy": 223.40431058120743, "energy_per_token": 1.0201110072201252, "time": 9.446778, "time_per_token": 0.04313597260273973}}
{"outputs": [{"text": "path = None\n\n    if not os.path.exists(source_directory):\n        raise OSError(\"Source directory does not exist\")\n\n    extension_list = ['.txt', '.docx', '.xlsx', '.csv']\n    files = glob.glob(f\"{source_directory}/*.*\")\n\n    if len(files) > 0:\n        path = os.path.join(target_directory, f\"{zip_name}.zip\")\n\n        with zipfile.ZipFile(path, 'w') as zip_file:\n            for file in files:\n                file_name = os.path.basename(file)\n\n                if file_name.endswith(extension_list):\n                    zip_file.write(file)\n\n    return path", "tokens": ["path", " =", " None", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "extension", "_", "list", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "*", "\"", ")", "\n", "\n", "    ", "if", " len", "(", "files", ")", " >", " ", "0", ":", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", ")", "\n", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "                ", "if", " file", "_", "name", ".", "end", "sw", "ith", "(", "extension", "_", "list", "):", "\n", "                ", "    ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " path", "\n", "\n", "if"], "logprobs": [-3.598261833190918, -0.1898924559354782, -2.6707451343536377, -0.028395982459187508, -1.4612020254135132, -0.00028832571115344763, -1.1548774242401123, -0.2208154946565628, -0.16834010183811188, -4.911301948595792e-05, -0.0014991246862336993, -0.005393477622419596, -0.37582704424858093, -0.0009045085171237588, -0.018525436520576477, -0.00015043080202303827, -4.303362584323622e-05, -0.003527016844600439, -0.026926111429929733, -0.0037899825256317854, -0.06996335089206696, -0.05745193734765053, -2.9205850296420977e-05, -5.006777428206988e-06, -0.40531083941459656, -0.9931778907775879, -0.9662745594978333, -0.07455269247293472, -0.19484339654445648, -0.0009545299108140171, -0.010947051458060741, -1.2882286310195923, -0.0021313349716365337, -0.007892612367868423, -0.18647950887680054, -0.00047064671525731683, -3.3990206718444824, -0.2809123992919922, -0.4476132094860077, -0.010160980746150017, -0.3711548149585724, -0.07571644335985184, -0.0052490513771772385, -0.0007204797584563494, -0.0001714082609396428, -0.006004983093589544, -0.0007873057620599866, -0.001831522211432457, -0.0009167758980765939, -0.00024482590379193425, -2.2053474822314456e-05, -0.0013543728273361921, -0.0002917817619163543, -0.0014807938132435083, -8.189342770492658e-05, -0.0007432320853695273, -0.0003083468764089048, -3.504691630951129e-05, -0.0016317160334438086, -0.0003607814433053136, -0.0018442542059347034, -0.012417740188539028, -0.015426598489284515, -0.8113875389099121, -2.1491072177886963, -0.5432400107383728, -0.6239185333251953, -0.00014876213390380144, -0.03418932855129242, -0.014470867812633514, -1.5194363594055176, -0.19112882018089294, -0.004478069022297859, -0.009182129986584187, -0.00011514954530866817, -2.2649508537142538e-05, -0.3839654326438904, -0.041856423020362854, -0.46262088418006897, -1.6309949159622192, -0.0147193418815732, -0.09654152393341064, -0.028631290420889854, -0.5217134356498718, -0.0001652104256208986, -1.490436315536499, -1.4018791913986206, -0.001580181298777461, -0.010066455230116844, -0.016354208812117577, -1.7186658382415771, -0.009458609856665134, -0.019907202571630478, -0.010944811627268791, -0.01647007092833519, -0.053768035024404526, -3.0938775539398193, -0.09474477171897888, -1.0003525018692017, -3.135155202471651e-05, -0.0026983539573848248, -0.05000406876206398, -0.025105375796556473, -0.0011634016409516335, -0.09246812015771866, -2.622600959512056e-06, -1.4305012882687151e-05, -0.0017805927200242877, -0.5905378460884094, -0.047842808067798615, -0.0011922164121642709, -0.014781598001718521, -0.00016675988445058465, -0.00010251473577227443, -0.012460124678909779, -0.00034540885826572776, -0.0002094287920044735, -7.223821739898995e-05, -0.0015029336791485548, -0.012896937318146229, -1.1953110694885254, -0.05884392932057381, -0.6102882623672485, -0.13527759909629822, -6.544376083184034e-05, -1.9907753085135482e-05, -0.004193679429590702, -0.0011813811725005507, -8.689979586051777e-05, -0.0013750869547948241, -0.019524531438946724, -0.0009217780898325145, -0.3211766481399536, -0.017292793840169907, -0.4977402985095978, -0.00032550760079175234, -0.3875758945941925, -0.29406413435935974, -0.18841011822223663, -0.00087878224439919, -0.0038484097458422184, -0.020151760429143906, -0.016864227131009102, -0.10336805880069733, -0.07382194697856903, -0.005181811284273863, -0.00017963226127903908, -0.001695148996077478, -0.011685140430927277, -1.6425206661224365, -0.2001463919878006, -0.5027067065238953, -0.04305163770914078, -0.35147133469581604, -7.772143726469949e-05, -7.915183232398704e-05, -0.0007189311436377466, -0.06728651374578476, -1.1920928244535389e-07, -3.731181277544238e-05, -0.00168503331951797, -0.0038803534116595984, -0.020266832783818245, -1.0121712684631348, -0.0002728328399825841, -0.4056110978126526, -1.409941554069519, -0.10550045967102051, -0.0010131231974810362, -0.1472172886133194, -0.342612624168396, -1.847726889536716e-05, 0.0, -0.07962781190872192, -0.3870278298854828, -0.0008156548719853163, -7.629103492945433e-05, -0.11856231093406677, -0.005600001662969589, -0.003329093800857663, -0.0008232779800891876, -0.07968923449516296, -0.0012459142599254847, -0.006255688611418009, -0.00018416139937471598, -0.0015568528324365616, -0.00015496007108595222, -0.0071301767602562904, -0.4111612141132355, -0.005988867953419685, -0.1820085197687149, -0.07873418182134628, -0.06075016409158707, -0.016808314248919487, -0.43530815839767456, -0.008113520219922066, -1.0095394849777222], "finish_reason": "stop"}], "metrics": {"energy": 219.82606610679636, "energy_per_token": 1.1158683558720628, "time": 8.421785, "time_per_token": 0.04275017766497462}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise OSError(f\"The directory {source_directory} does not exist.\")\n    target_path = os.path.join(target_directory, f\"{zip_name}.zip\")\n    if not os.path.exists(target_directory):\n        os.mkdir(target_directory)\n    with zipfile.ZipFile(target_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for path in glob.glob(os.path.join(source_directory, \"**/*.txt\")):\n            zip_file.write(path)\n        for path in glob.glob(os.path.join(source_directory, \"**/*.docx\")):\n            zip_file.write(path)\n        for path in glob.glob(os.path.join(source_directory, \"**/*.xlsx\")):\n            zip_file.write(path)\n        for path in glob.glob(os.path.join(source_directory, \"**/*.", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "target", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "target", "_", "directory", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "txt", "\"", "))", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "path", ")", "\n", "        ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "doc", "x", "\"", "))", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "path", ")", "\n", "        ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", ".", "x", "ls", "x", "\"", "))", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "path", ")", "\n", "        ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "**", "/*", "."], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -0.31944870948791504, -0.0008842610404826701, -0.006169086322188377, -0.00013505500101018697, -4.4225667807040736e-05, -0.001593511551618576, -0.02787082828581333, -0.0027619570028036833, -0.06281119585037231, -0.04351033270359039, -3.635817120084539e-05, -4.6491513785440475e-06, -0.49763643741607666, -0.43282878398895264, -0.3157106637954712, -1.3948229551315308, -3.0775232315063477, -0.5232047438621521, -0.0025907545350492, -4.1483970562694594e-05, -0.00017248096992261708, -0.01939511112868786, -0.1402255892753601, -0.001520192832686007, -0.010170421563088894, -0.41058680415153503, -0.045226000249385834, -0.0003502947511151433, -0.006102381739765406, -1.456190824508667, -2.94814395904541, -0.021988175809383392, -2.6088707447052, -0.018353750929236412, -0.6290188431739807, -3.373566141817719e-05, -0.0007964776013977826, -0.010837859474122524, -0.01513767335563898, -0.0008320921915583313, -0.027238447219133377, -0.0002212279650848359, -1.4662635294371285e-05, -0.0014478211523965001, -0.7832221984863281, -0.03190479055047035, -0.0006934384000487626, -0.012001920491456985, -0.0002903516869992018, -0.00013052565918769687, -0.004050504416227341, -0.00012563870404846966, -0.0001225396408699453, -9.727005090098828e-05, -0.0008609164506196976, -0.018510105088353157, -0.26003575325012207, -1.8742274045944214, -0.13784454762935638, -0.046252284198999405, -0.00019238528329879045, -0.00012444675667211413, -0.0006308949086815119, -0.09380681812763214, -0.00028701478731818497, -0.10571691393852234, -8.725739462533966e-05, -0.7613468170166016, -0.0021947361528873444, -0.010916748084127903, -0.0018362818518653512, -0.09347508102655411, -0.0007693191873840988, -1.9739972352981567, -6.115249561844394e-05, -0.00019870213873218745, -0.018220314756035805, -1.8596476365928538e-05, -0.008413347415626049, -0.013122271746397018, -0.005202090367674828, -0.20406536757946014, -1.3824430704116821, -0.16029092669487, -0.00015043080202303827, -2.610649426060263e-05, -0.003346559125930071, -0.0010594476480036974, -7.1403817855753e-05, -0.0008164886385202408, -0.029643259942531586, -9.095255518332124e-05, -0.0009653675369918346, -0.0004959068610332906, -0.350660115480423, -0.041280873119831085, -1.0318896770477295, -9.393251093570143e-05, -0.6265286207199097, -0.00010942813969450071, -3.957670196541585e-05, -0.00207673292607069, -0.002564001362770796, -0.0003040566807612777, -0.001978703308850527, -0.00020954797219019383, -0.00041416651220060885, -0.023276427760720253, -0.00022873646230436862, -0.33081987500190735, -0.17711570858955383, -0.1025036871433258, -0.0011363723315298557, -0.005042217206209898, -0.0036973466631025076, -0.08004439622163773, -2.3120760917663574, -0.1457473486661911, -0.17427466809749603, -4.1960789531003684e-05, -0.16293179988861084, -0.006600365042686462, -0.3926491439342499, -1.0371154530730564e-05, -9.393251093570143e-05, -0.0006023023161105812, -0.0008419782971031964, -0.000663894519675523, -0.0038899718783795834, -1.6093124941107817e-05, -9.858122211880982e-05, -0.001166735659353435, -1.2042901515960693, -1.039541482925415, -0.3047443926334381, -0.2724877893924713, -0.23364689946174622, -0.034551460295915604, -0.522796630859375, -0.038687530905008316, -0.006859445478767157, -0.004037206526845694, -0.10488902777433395, -0.00120698066893965, -0.017091015353798866, -5.6265202147187665e-05, -0.0004768426588270813, -0.0002609150833450258, -0.024390624836087227, -0.6096926927566528, -0.010935142636299133, -0.15980477631092072, -0.006924086716026068, -0.002037355676293373, -0.0006293461774475873, -0.0005529781919904053, -1.0013530300057027e-05, -0.00013505500101018697, -6.246371776796877e-05, -0.0005544078885577619, -0.0005212855176068842, -2.50339189733495e-06, -0.0002915434306487441, -6.437280717364047e-06, -2.6225699912174605e-05, -0.0008532935753464699, -2.3007127310847864e-05, -7.986990567587782e-06, -3.6477376852417365e-05, -0.003606840269640088, -0.0007715824176557362, -0.0011799524072557688, -0.0008149401983246207, -0.02829447202384472, -0.0006655623437836766, -0.000296310376143083, -9.452849917579442e-05, -1.3232143828645349e-05, -0.00018189683032687753, -0.0006677066558040679, -0.0013828248484060168, -2.1815061700181104e-05, -2.7656173188006505e-05, -3.3378546504536644e-06, -3.9934315282152966e-05, -1.7165990357170813e-05, -0.0001578206429257989, -0.0009305914281867445, -0.00019214690837543458, -0.0033433514181524515, -0.00036399890086613595, -3.480850500636734e-05, -1.3112935448589269e-05, -0.0001262346631847322, -4.088794958079234e-05, -6.758938252460212e-05, -1.549708758830093e-05, -1.823885577323381e-05, -0.0008493629866279662, -7.152555099310121e-07, -2.825220326485578e-05, -2.264974000354414e-06, -2.861018856492592e-06, -4.9232225137529895e-05, -3.433168603805825e-05, -1.7881377516459906e-06, -1.2874520507466514e-05, -0.0007357274298556149, -0.000120751719805412, -5.507317473529838e-05, -0.00017569905321579427, -0.006470799446105957, -0.00019810620869975537, -0.0009363081189803779, -7.855583680793643e-05, -2.6464111215318553e-05, -5.125986263010418e-06, -4.3748852476710454e-05, -0.00021252757869660854, -0.00027414379292167723, -6.9141146923357155e-06, -3.2186455882765586e-06, -2.539125671319198e-05, -1.2874520507466514e-05, -3.3378546504536644e-06, -6.318072337307967e-06, -5.2689116273541003e-05, -0.00013851160474587232, -0.004142395220696926, -0.0005684667266905308, -0.00012861855793744326, -1.823885577323381e-05, -0.0004406196530908346, -1.9073468138230965e-06, -0.00013445904187392443, -3.075552376685664e-05, -1.7762025890988298e-05, -0.0003860443539451808, -8.344646857949556e-07, -3.814689989667386e-06, -3.099436753473128e-06, -4.172316494077677e-06, -8.189342770492658e-05, -2.074220174108632e-05, -1.0728830375228426e-06, -9.775113539944869e-06, -0.0007459718617610633, -0.00015090756642166525, -0.0001481661747675389, -0.0001486429391661659], "finish_reason": "length"}], "metrics": {"energy": 268.56182898139963, "energy_per_token": 1.0490696444585923, "time": 11.143735, "time_per_token": 0.04353021484375}}
{"outputs": [{"text": "path = os.path.join(target_directory, zip_name + '.zip')\n\n    if not os.path.isdir(source_directory):\n        raise OSError('Invalid source directory!')\n\n    zip_file = zipfile.ZipFile(path, 'w')\n\n    extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    files = glob.glob(os.path.join(source_directory, '*.*'))\n\n    for file in files:\n        if os.path.isfile(file):\n            for ext in extensions:\n                if file.endswith(ext):\n                    zip_file.write(file)\n\n    zip_file.close()\n\n    return path", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "Invalid", " source", " directory", "!", "')", "\n", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "path", ",", " '", "w", "')", "\n", "\n", "    ", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "*", "'))", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "for", " ext", " in", " extensions", ":", "\n", "                ", "if", " file", ".", "end", "sw", "ith", "(", "ext", "):", "\n", "                ", "    ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "return", " path", "\n", "\n", "if"], "logprobs": [-3.598261833190918, -0.1898924559354782, -1.8480026721954346, -0.0008110094931907952, -0.019350796937942505, -0.017651373520493507, -0.23754934966564178, -0.003883084747940302, -0.06726578623056412, -1.4066597032069694e-05, -5.829164365422912e-05, -0.003321371041238308, -0.5029770135879517, -0.00047064671525731683, -0.00022897482267580926, -0.5989111065864563, -0.27895402908325195, -0.00025686301523819566, -0.00023529145983047783, -0.0012510338565334678, -0.028651561588048935, -1.1695228815078735, -0.0005726366653107107, -0.6257160902023315, -0.11151356995105743, -0.06023455038666725, -0.0001209901092806831, -0.0006740205571986735, -0.0009979988681152463, -1.7488808631896973, -0.006114704068750143, -0.0003149013500660658, -0.030747730284929276, -8.320462075062096e-05, -3.540453326422721e-05, -0.004849101882427931, -0.017050115391612053, -0.0031592955347150564, -0.06093457341194153, -0.06102519854903221, -3.909988299710676e-05, -5.722029527532868e-06, -0.9168186187744141, -3.7026748657226562, -0.31014758348464966, -0.2039305418729782, -2.296128034591675, -0.06636761873960495, -0.0027635025326162577, -0.1266695111989975, -0.00044645831803791225, -2.4834485054016113, -0.09982916712760925, -1.1602013111114502, -0.10759695619344711, -0.21915659308433533, -0.0005276002921164036, -9.595887240720913e-05, -0.006644773297011852, -0.0011142243165522814, -8.737658936297521e-05, -0.0025849281810224056, -0.03088667057454586, -0.001589583931490779, -0.0907798632979393, -0.023518066853284836, -0.31761136651039124, -0.02584528923034668, -0.27316001057624817, -0.00031728477915748954, -3.0827417373657227, -0.1755576878786087, -0.07139210402965546, -0.0530807226896286, -0.0027146413922309875, -0.00047565114800818264, -0.00010847456724150106, -0.002817591419443488, -0.0006946296198293567, -0.002959160367026925, -0.0005482124397531152, -0.0001954841281985864, -1.0490362910786644e-05, -0.0006224363460205495, -0.0003163314249832183, -0.0013174673076719046, -7.939023635117337e-05, -0.0005043664714321494, -0.0002598424907773733, -2.6702524337451905e-05, -0.000581572181545198, -0.00024530262453481555, -0.0019101722864434123, -0.009081368334591389, -0.009746582247316837, -0.9277257919311523, -2.1803054809570312, -0.3996051251888275, -0.582210123538971, -5.6503606174374e-05, -0.05480455234646797, -0.024758297950029373, -0.19967475533485413, -0.00042012447374872863, -0.00010549465514486656, -0.0011404207907617092, -0.000916537712328136, -0.000819347333163023, -0.004092058166861534, -7.974783511599526e-05, -1.1920858014491387e-05, -0.0021594080608338118, -0.08417092263698578, -0.5638098120689392, -0.8097772002220154, -0.3257622718811035, -0.04588411748409271, -0.011593704111874104, -0.4104408323764801, -0.0001431601122021675, -0.051518671214580536, -0.16244469583034515, -0.12477397918701172, -0.006279618479311466, -0.0002762889489531517, -0.0017178792040795088, -0.009962360374629498, -0.6967277526855469, -0.5809005498886108, -6.16293036728166e-05, -0.0007621721015311778, -0.00015567521040793508, -0.7100971937179565, -0.06204481050372124, -0.00015639036428183317, -0.001962641952559352, -0.5341675877571106, -0.010309064760804176, -0.00752826826646924, -1.9883973598480225, -0.8988052010536194, -0.004076861310750246, -0.0022611068561673164, -0.00014983485743869096, -0.0013709203340113163, -0.003937231842428446, -0.030610619112849236, -0.21789643168449402, -0.0059555694460868835, -0.03236112371087074, -3.0040289857424796e-05, 0.0, -0.001919809728860855, -0.0004003438516519964, -0.008603411726653576, -0.0024563875049352646, -0.0018441352294757962, -0.0002661589242052287, -0.10097811371088028, -0.0008792586741037667, -0.020133066922426224, -9.893881360767409e-05, -0.0020004753023386, -0.000276765669696033, -0.016110481694340706, -0.2295362502336502, -0.004643134772777557, -1.293057918548584, -0.07473435997962952, -0.02601546049118042, -0.0008429311565123498, -3.182837463100441e-05, -5.924526340095326e-05, -0.0006220789509825408, -0.0008753282018005848, -0.004806393291801214, -0.35789087414741516, -0.0011177966371178627, -0.05959445983171463, -0.07139155268669128, -0.6451988816261292, -0.007515253499150276, -0.9743627309799194], "finish_reason": "stop"}], "metrics": {"energy": 179.04108598136898, "energy_per_token": 0.9783665900621256, "time": 7.783317, "time_per_token": 0.042531786885245906}}
{"outputs": [{"text": "source_directory = os.path.abspath(source_directory)\n    if not os.path.exists(source_directory):\n        raise OSError(f\"{source_directory} does not exist!\")\n    target_directory = os.path.abspath(target_directory)\n    target_directory = os.path.join(target_directory, zip_name)\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n    # Find all the files with the correct extensions\n    files_to_zip = glob.glob(os.path.join(source_directory, \"*.txt\")) + glob.glob(os.path.join(source_directory, \"*.docx\")) + glob.glob(os.path.join(source_directory, \"*.xlsx\")) + glob.glob(os.path.join(source_directory, \"*.csv\"))\n    # Create the zip file\n    with zipfile.ZipFile(os.path.join(target_directory, zip_name + '.zip'),", "tokens": ["source", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "{", "source", "_", "directory", "}", " does", " not", " exist", "!", "\"", ")", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "    ", "#", " Find", " all", " the", " files", " with", " the", " correct", " extensions", "\n", "    ", "files", "_", "to", "_", "zip", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "*", ".", "txt", "\"", "))", " +", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "*", ".", "doc", "x", "\"", "))", " +", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "*", ".", "x", "ls", "x", "\"", "))", " +", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "*", ".", "csv", "\"", "))", "\n", "    ", "#", " Create", " the", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", ","], "logprobs": [-2.472193717956543, -0.03196806460618973, -0.1162259578704834, -0.13242296874523163, -1.8901945352554321, -0.00017271934484597296, -0.03573979064822197, -0.004711003974080086, -0.25212371349334717, -2.9205850296420977e-05, -4.017272294731811e-05, -0.003865747479721904, -0.05676726624369621, -6.282132380874828e-05, -1.2636104656849056e-05, -0.004341344349086285, -0.0454132966697216, -0.12595170736312866, -0.7832515239715576, -0.03386763110756874, -0.02431628294289112, -8.964136941358447e-05, -0.0003668589051812887, -0.0007005859515629709, -0.30350926518440247, -0.00025567124248482287, -0.002059364225715399, -4.541770613286644e-05, -8.701899787411094e-05, -0.002102547325193882, -0.011775507591664791, -0.0025763672310858965, -0.04816867411136627, -0.06371021270751953, -2.6225699912174605e-05, -1.4424220353248529e-05, -0.4434937536716461, -0.45344170928001404, -0.3439927101135254, -1.986467719078064, -0.008043752983212471, -0.0003718638326972723, -0.0004220310365781188, -0.022948287427425385, -0.3059784770011902, -0.001534238108433783, -0.014475920237600803, -2.239254951477051, -0.05095307156443596, -0.0004677870310842991, -0.004942580126225948, -0.9752172231674194, -1.5554648637771606, -0.011334668844938278, -0.0189927089959383, -0.016454944387078285, -0.08846120536327362, -0.0003349220205564052, -0.00046266341814771295, -0.0005404680268839002, -0.026117781177163124, -2.8490614567999728e-05, -5.722029527532868e-06, -0.00035744477645494044, -0.00860577542334795, -1.8596476365928538e-05, -2.861018856492592e-06, -0.000812915270216763, -0.009628994390368462, -0.0986674502491951, -3.1451845169067383, -0.016196930781006813, -0.332421213388443, -0.21919222176074982, -0.5542318820953369, -0.0014497257070615888, -0.0014891260070726275, -0.011457477696239948, -0.12775814533233643, -0.0023907432332634926, -0.029789181426167488, -5.61460001335945e-05, -0.00011920218821614981, -0.004343717824667692, -0.5526443719863892, -0.0008644896443001926, -0.00022957073815632612, -0.08009941130876541, -0.08612895011901855, -0.15119144320487976, -0.8954978585243225, -0.04413696005940437, -0.013416013680398464, -5.364403477869928e-06, -0.00015162272029556334, -1.680836794548668e-05, -2.0264837741851807, -0.0026719605084508657, -0.00012218205665703863, -0.01193501427769661, -4.8040190449682996e-05, -4.9232225137529895e-05, -0.0026424750685691833, -0.013893557712435722, -0.0016511153662577271, -0.12975430488586426, -1.1324817933200393e-05, -0.09475995600223541, -4.2199197196168825e-05, -0.0006080209277570248, -0.00016950124700088054, -0.009089755825698376, -1.1444026313256472e-05, -2.3841574147809297e-05, -0.1057668924331665, -0.006856722291558981, -0.32815927267074585, -3.9770398139953613, -3.788837432861328, -0.35270848870277405, -1.649137020111084, -0.6097734570503235, -1.2092466354370117, -1.0334699153900146, -3.46427321434021, -0.4402282238006592, -0.9473689198493958, -0.0033621233887970448, -1.4247031211853027, -0.7526301741600037, -0.22058920562267303, -8.868777513271198e-05, -0.14254330098628998, -0.0170933585613966, -0.43089234828948975, -9.560128091834486e-05, -0.014798629097640514, -0.009547289460897446, -0.42400112748146057, -1.168244216387393e-05, -0.00015722469834145159, -2.9682672902708873e-05, -0.001959905494004488, -0.0011082704877480865, -0.010029279626905918, -1.3589766240329482e-05, -1.6212332411669195e-05, -0.0007325111655518413, -1.286201000213623, -0.39889317750930786, -0.07998409122228622, -0.13362541794776917, -0.04215407744050026, -0.07686637341976166, -0.969062864780426, -1.1105964183807373, -4.255681051290594e-05, -0.0017114529618993402, -0.00037877538125030696, -0.16654391586780548, -0.00013672371278516948, -1.0847986231965479e-05, -1.537788011773955e-05, -8.165503095369786e-05, -0.00021789084712509066, -0.007943113334476948, -5.2689116273541003e-05, -1.2159273865108844e-05, -0.0001045410826918669, -0.019851693883538246, -0.0007918321643956006, -0.000996331567876041, -0.02294607274234295, -0.0007279845303855836, -0.0002455409849062562, -0.0022800182923674583, -0.09269794821739197, -0.17863841354846954, -0.004416711162775755, -0.00044204952428117394, -0.00016735584358684719, -0.016428325325250626, -0.0005853846669197083, -2.9802276912960224e-06, -1.8596476365928538e-05, -1.8596476365928538e-05, -2.777537883957848e-05, -0.000300600629998371, -3.516612196108326e-05, -5.602820692729438e-06, -6.4490144723095e-05, -0.0015943447360768914, -0.00011789103882620111, -0.000300958170555532, -0.008857838809490204, -0.00024291902082040906, -0.0009441685397177935, -0.00015186110977083445, -0.0002983363519888371, -0.009131100960075855, -0.002709767082706094, -6.437280717364047e-06, -0.0011866202112287283, -7.652943895664066e-05, -0.0003815161471720785, -0.0001833270798670128, -1.7881377516459906e-06, -2.264974000354414e-06, -1.0490362910786644e-05, -9.894321920000948e-06, -7.784063927829266e-05, -3.4450891689630225e-05, -5.006777428206988e-06, -3.0517112463712692e-05, -0.0009031984372995794, -0.00024256148026324809, -0.0003847335756290704, -0.003661477705463767, -8.05822346592322e-05, -0.0006117141456343234, -0.016213703900575638, -0.1969565898180008, -0.6549253463745117, -0.9823955297470093, -0.6536864042282104, -0.13866552710533142, -0.11313751339912415, -0.4692339301109314, -0.0011019593803212047, -0.31924521923065186, -0.01810828596353531, -3.302042750874534e-05, -8.821448318485636e-06, -0.00412779301404953, -0.0003129946126136929, -6.258291978156194e-05, -0.0028473094571381807, -0.3538222014904022, -3.099436753473128e-06, -0.0002456601650919765, -4.529942543740617e-06, -0.001585775287821889, -0.0002982171718031168, -0.008336862549185753, -6.437280717364047e-06, -1.1205610462639015e-05, -0.01129424013197422, -0.8343885540962219, -0.0013983005192130804, -4.076874756719917e-05, -0.2912910282611847, -1.1254864931106567, -0.0001230164198204875, -9.929640509653836e-05, -0.002307730494067073, -0.00029869386344216764], "finish_reason": "length"}], "metrics": {"energy": 281.2365647592543, "energy_per_token": 1.098580331090837, "time": 11.136995, "time_per_token": 0.04350388671875}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise OSError('Source directory does not exist.')\n    valid_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    files_to_zip = [f for f in Path(source_directory).glob(\"**/*\") if f.suffix in valid_extensions]\n    with zipfile.ZipFile(os.path.join(target_directory, zip_name + '.zip'), 'w') as zip_file:\n        for file in files_to_zip:\n            zip_file.write(file, os.path.relpath(file, source_directory))\n    return os.path.join(target_directory, zip_name + '.zip')", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "Source", " directory", " does", " not", " exist", ".", "')", "\n", "    ", "valid", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "files", "_", "to", "_", "zip", " =", " [", "f", " for", " f", " in", " Path", "(", "source", "_", "directory", ")", ".", "glob", "(", "\"", "**", "/*", "\"", ")", " if", " f", ".", "suff", "ix", " in", " valid", "_", "extensions", "]", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "zip", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "rel", "path", "(", "file", ",", " source", "_", "directory", "))", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "\n", "if"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -1.2988874912261963, -0.0032447329722344875, -0.0003023882454726845, -0.005556851159781218, -0.00014435203047469258, -4.792098479811102e-05, -0.002004520269110799, -0.02544466219842434, -0.0029696195852011442, -0.04432719573378563, -0.04187025874853134, -3.4689302992774174e-05, -3.576272320060525e-06, -1.220963954925537, -1.3317313194274902, -0.08686835318803787, -0.16924212872982025, -0.0008991489303298295, -0.005754570942372084, -0.827434778213501, -0.037034809589385986, -0.002861098386347294, -1.0814669132232666, -2.5377554893493652, -0.008826525881886482, -0.0893082469701767, -0.018218442797660828, -0.048818957060575485, -0.03150346502661705, -0.0018839959520846605, -0.0002549561613705009, -8.177422569133341e-05, -0.0022182876709848642, -0.0004974558250978589, -0.0011610202491283417, -0.0004549183649942279, -9.846202738117427e-05, -1.4066597032069694e-05, -0.0005520250415429473, -0.00024136967840604484, -0.0007266741595230997, -6.115249561844394e-05, -0.0006300609675236046, -0.0001399419124936685, -2.586808113846928e-05, -0.0007774191326461732, -0.00021741411183029413, -0.0012823462020605803, -0.010154490359127522, -0.015352761372923851, -0.10009776055812836, -2.3284201622009277, -0.6415126919746399, -0.2908705472946167, -0.0001472126314183697, -0.10002809017896652, -0.01682988367974758, -2.0767314434051514, -1.176621437072754, -0.041009049862623215, -0.009777157567441463, -0.0025450955145061016, -2.54461932182312, -0.0023409125860780478, -0.0033443018328398466, -3.683499380713329e-05, -1.5139465176616795e-05, -0.0003426679759286344, -0.0004319211875554174, -0.6800550818443298, -2.591642379760742, -0.06076396256685257, -0.9390650987625122, -0.006349153816699982, -0.4872764050960541, -0.00867786817252636, -0.05917690694332123, -0.3091934621334076, -0.0007525234250351787, -0.6017694473266602, -2.706014311115723e-05, -0.14064471423625946, -0.0019903627689927816, -2.3841855067985307e-07, -5.960446742392378e-06, -0.06112758815288544, -0.01320615690201521, -0.12939321994781494, -1.4108660221099854, -0.12276183068752289, -0.00039593485416844487, -2.396077979938127e-05, -0.0039107524789869785, -0.0014612721279263496, -5.23315102327615e-05, -0.00829725805670023, -0.8570057153701782, -4.529942543740617e-06, -0.002300118561834097, -0.0036562515888363123, -0.0027056061662733555, -0.00185591506306082, -0.020395908504724503, -2.3841830625315197e-06, -2.586808113846928e-05, -0.002395619172602892, -0.5938780307769775, -0.0001284993631998077, -9.560128091834486e-05, -0.49902236461639404, -0.1909918487071991, -8.618460560683161e-05, -9.846202738117427e-05, -0.003081100294366479, -0.0005840741214342415, -0.13824182748794556, -0.024330824613571167, -0.18587486445903778, -0.00021431533969007432, -0.2787632644176483, -0.14798353612422943, -0.2622385025024414, -0.0007672941428609192, -0.0032507930882275105, -0.0028621682431548834, -0.035182803869247437, -0.24544204771518707, -0.1756322979927063, -0.0028622872196137905, -4.768360213347478e-06, -1.1920858014491387e-05, -7.390948667307384e-06, -3.707340147229843e-05, -0.0001248043408850208, -0.0015503065660595894, -0.00182819040492177, -0.10033523291349411, -0.0009762050467543304, -0.012955893762409687, -6.139089964563027e-05, -0.0005864569102413952, -0.00022921319759916514, -0.06390213221311569, -1.3352118730545044, -1.3796031475067139, -0.0003325386205688119, -0.0001397035230183974, -0.0006816447712481022, -0.1469811350107193, -8.21318244561553e-05, -0.00026306029758416116, -0.014628888107836246, -0.022084729745984077, -0.23392383754253387, -9.393251093570143e-05, -2.8490614567999728e-05, -0.018833037465810776, -0.01909797452390194, -0.07269412279129028, -0.034213174134492874, -0.0706477165222168, -8.4638240878121e-06, -0.0002919009421020746, -0.00437505217269063, -0.048850856721401215, -0.0009264229447580874, -0.0063457186333835125, -1.823885577323381e-05, -1.1324817933200393e-05, -0.0006824786541983485, -0.02627304382622242, -3.635817120084539e-05, -0.0013517538318410516, -0.04123271629214287, -0.015808142721652985, -4.95898348162882e-05, -2.3245540432981215e-05, -0.0005184260080568492, -0.3562622368335724, -0.01645764149725437, -1.0882521867752075], "finish_reason": "stop"}], "metrics": {"energy": 217.61021003150958, "energy_per_token": 1.1636909627353453, "time": 8.000284, "time_per_token": 0.04278226737967915}}
{"outputs": [{"text": "extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    for ext in extensions:\n        source_files = glob.glob(f\"{source_directory}/**/*{ext}\", recursive=True)\n        for file in source_files:\n            try:\n                if os.path.isfile(file):\n                    try:\n                        os.makedirs(target_directory, exist_ok=True)\n                        with zipfile.ZipFile(f\"{target_directory}/{zip_name}.zip\", \"a\") as archive:\n                            archive.write(file)\n                    except Exception:\n                        os.remove(file)\n            except OSError:\n                raise OSError(f\"Source directory {source_directory} does not exist\")", "tokens": ["extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "for", " ext", " in", " extensions", ":", "\n", "        ", "source", "_", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}/", "**", "/*", "{", "ext", "}\"", ",", " recursive", "=", "True", ")", "\n", "        ", "for", " file", " in", " source", "_", "files", ":", "\n", "            ", "try", ":", "\n", "                ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "    ", "try", ":", "\n", "                ", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "                ", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "target", "_", "directory", "}/{", "zip", "_", "name", "}", ".", "zip", "\"", ",", " \"", "a", "\"", ")", " as", " archive", ":", "\n", "                ", "            ", "archive", ".", "write", "(", "file", ")", "\n", "                ", "    ", "except", " Exception", ":", "\n", "                ", "        ", "os", ".", "remove", "(", "file", ")", "\n", "            ", "except", " O", "SE", "rror", ":", "\n", "                ", "raise", " O", "SE", "rror", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", "\"", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3165597915649414, -0.16890056431293488, -0.15622131526470184, -0.048669882118701935, -0.002979246899485588, -0.00031931069679558277, -0.0001408954558428377, -0.0038849846459925175, -0.0006968930247239769, -0.0018236687174066901, -0.0005752577562816441, -0.00017987063620239496, -2.47952248173533e-05, -0.0008796160109341145, -0.00029404606902971864, -0.0008890252211131155, -6.353653589030728e-05, -0.0005831210291944444, -0.00019071667338721454, -5.340433563105762e-05, -0.001134824356995523, -0.00030179237364791334, -0.0011612584348767996, -0.012177996337413788, -0.02203388884663582, -1.0093986988067627, -0.0002972637885250151, -2.5504214763641357, -1.8875467777252197, -0.010249951854348183, -0.018031015992164612, -0.0007989790174178779, -0.015681760385632515, -0.01763813942670822, -2.5215935707092285, -0.04719109460711479, -0.6335062384605408, -0.05340861901640892, -0.30901941657066345, -0.00028880240279249847, -0.019831007346510887, -0.009152481332421303, -1.4628326892852783, -0.4327660799026489, -0.015410985797643661, -0.01142553985118866, -0.00021360022947192192, -2.586808113846928e-05, -1.776402235031128, -0.09872782975435257, -0.03965248912572861, -0.054871924221515656, -0.001525192055851221, -0.03770051896572113, -0.0285028088837862, -0.008616766892373562, -0.006771355867385864, -0.00538090942427516, -0.000697965151630342, -0.011804371140897274, -0.36034470796585083, -2.61401104927063, -1.0489656925201416, -0.1435478776693344, -0.008382258005440235, -5.066266385256313e-05, -9.417090768693015e-05, -0.0003357561945449561, -0.005998821463435888, -0.02057039551436901, -3.1309967041015625, -0.0001839230244513601, -0.004335765726864338, -0.0021808191668242216, -2.369791030883789, -1.2359639406204224, -2.9682672902708873e-05, -0.07610803842544556, -0.00044610086479224265, -0.28984251618385315, -0.26083269715309143, -0.00044431351125240326, -0.015904003754258156, -0.06703906506299973, -0.043829284608364105, -0.006763778161257505, -0.0011314902221783996, -4.361042022705078, -0.0009945451747626066, -0.011505912989377975, -0.002310109091922641, -0.0006779517862014472, -0.8481667637825012, -7.283422019099817e-05, -0.15707401931285858, -1.549708758830093e-05, -0.0002325502864550799, -0.0017876134952530265, -0.47343766689300537, -6.437280717364047e-06, -4.279521817807108e-05, -0.3875572681427002, -0.011437678709626198, 0.0, -4.362964682513848e-05, -0.0022325608879327774, -0.0023044003173708916, -0.0020174880046397448, -0.020794007927179337, -0.04803790897130966, -1.0345312356948853, -1.327696681022644, -0.14112205803394318, -0.000102037942269817, -1.6212332411669195e-05, -0.0060687316581606865, -0.0014680571621283889, -8.380061626667157e-05, -0.004762021824717522, -0.29866185784339905, -0.0851869210600853, -0.0006173135479912162, -0.06975280493497849, -4.815939246327616e-05, -6.556489552167477e-06, -0.02006109617650509, -0.028116807341575623, -4.1960789531003684e-05, -0.00014435203047469258, -0.6078137755393982, -0.0007875440060161054, -0.00011181206355104223, -0.00012396997772157192, -0.0008316157618537545, -1.3025014400482178, -0.3848640024662018, -0.0013574680779129267, -0.6423844695091248, -0.0006760457181371748, -2.692844867706299, -0.022443927824497223, -0.004395348019897938, -0.0009126074146479368, -0.002832331694662571, -0.09941384196281433, -0.0002445875434204936, -0.002792746527120471, -0.0002942844294011593, -0.050087183713912964, -0.5566467642784119, -0.012771009467542171, -0.04296131432056427, -0.3374723196029663, -0.006169441621750593, -1.997378945350647, -1.8695720434188843, -0.036426130682229996, -0.0014092524070292711, -0.0017953482456505299, -2.8654754161834717, -0.0005807381821796298, -1.201993465423584, -0.007053237874060869, -0.30894210934638977, -0.0058988058008253574, -0.03283201530575752, -0.6144930720329285, -0.00436852453276515, -1.5989370346069336, -8.22540732769994e-06, -5.960462772236497e-07, -0.07157035171985626, -0.006178564392030239, -0.0008648469229228795, -1.5531256198883057, -0.7156882286071777, -1.3232143828645349e-05, -5.602820692729438e-06, -0.11489357799291611, -0.3459490239620209, -0.06684283912181854, -1.8858473300933838, -0.1132563129067421, -0.7392191290855408, -0.014800744131207466, -0.0001691436773398891, -0.0010347970528528094, -0.005476234946399927, -0.21539129316806793, -0.0014688903465867043, -0.005042098928242922, -1.6092822551727295, -2.606537103652954, -2.145764938177308e-06, -9.536738616588991e-07, -4.5536911784438416e-05, -0.00012492353562265635, -0.26824283599853516], "finish_reason": "stop"}], "metrics": {"energy": 235.1717736396789, "energy_per_token": 1.1877362305034287, "time": 8.622942, "time_per_token": 0.04355021212121212}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise OSError('The source_directory does not exist!')\n    file_list = [source_directory]\n    extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    for file in glob.glob(os.path.join(source_directory, '**', '*')):\n        file = Path(file)\n        if file.suffix in extensions:\n            file_list.append(str(file))\n\n    with ZipFile(f'{target_directory}/{zip_name}.zip', 'w') as z:\n        z.write(file_list)\n\n    return f'{target_directory}/{zip_name}.zip'", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "The", " source", "_", "directory", " does", " not", " exist", "!", "')", "\n", "    ", "file", "_", "list", " =", " [", "source", "_", "directory", "]", "\n", "    ", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", "'))", ":", "\n", "        ", "file", " =", " Path", "(", "file", ")", "\n", "        ", "if", " file", ".", "suff", "ix", " in", " extensions", ":", "\n", "            ", "file", "_", "list", ".", "append", "(", "str", "(", "file", "))", "\n", "\n", "    ", "with", " Zip", "File", "(", "f", "'{", "target", "_", "directory", "}/{", "zip", "_", "name", "}", ".", "zip", "'", ",", " '", "w", "')", " as", " z", ":", "\n", "        ", "z", ".", "write", "(", "file", "_", "list", ")", "\n", "\n", "    ", "return", " f", "'{", "target", "_", "directory", "}/{", "zip", "_", "name", "}", ".", "zip", "'<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -1.2988874912261963, -0.0032447329722344875, -0.0003023882454726845, -0.005556851159781218, -0.00014435203047469258, -4.792098479811102e-05, -0.002004520269110799, -0.02544466219842434, -0.0029696195852011442, -0.04432719573378563, -0.04187025874853134, -3.4689302992774174e-05, -3.576272320060525e-06, -1.220963954925537, -1.0319476127624512, -0.20553916692733765, -1.5363497734069824, -0.0020679295994341373, -0.2744252383708954, -0.0011035073548555374, -0.00427202507853508, -2.3931093215942383, -0.03265111520886421, -0.0038226405158638954, -0.9446584582328796, -3.483159303665161, -0.04012579843401909, -1.4115151166915894, -0.03530927747488022, -2.7955121994018555, -3.3854870796203613, -0.03296651318669319, -0.047387346625328064, -2.057476758956909, -0.23518811166286469, -0.1352802962064743, -2.863795280456543, -0.1529996544122696, -0.1021886020898819, -0.08283504843711853, -0.006254859268665314, -0.0009419057168997824, -0.00016973962192423642, -0.004235702101141214, -0.0006634180317632854, -0.003123169532045722, -0.0009848987683653831, -0.0003134713042527437, -4.327203714638017e-05, -0.0015397133538499475, -0.00043752157944254577, -0.0019201666582375765, -9.48860906646587e-05, -0.0012162677012383938, -0.0006856950931251049, -5.9126061387360096e-05, -0.0013615157222375274, -0.00029476112104021013, -0.0015795861836522818, -0.01567835547029972, -0.01550301257520914, -2.0030291080474854, -0.0008722314960323274, -0.4765782058238983, -1.8431133031845093, -0.4656500518321991, -1.5050699710845947, -0.00010799778101500124, -0.25132572650909424, -0.11688023805618286, -0.6852219104766846, -0.0003813969960901886, -0.0016862234333530068, -0.003613373264670372, -0.0038213341031223536, -0.03585837036371231, -0.13161857426166534, -0.00010346830822527409, -7.664863369427621e-05, -0.01012380886822939, -0.2751731276512146, -0.9387891888618469, -1.3924955129623413, -0.010451937094330788, -0.033378779888153076, -0.007212316617369652, -0.8177284598350525, -0.003017042065039277, -0.024587564170360565, -0.012067642994225025, -2.007906913757324, -0.9458035826683044, -0.6070997714996338, -0.0009448830969631672, -0.004344074055552483, -0.0018543682526797056, -0.12452593445777893, -0.05893159657716751, -0.5237254500389099, -0.21914272010326385, -0.013629119843244553, -1.2706679105758667, -4.565611743601039e-05, -0.4089128077030182, -0.002372190821915865, -0.3706551194190979, -0.008159872144460678, -0.0020202244631946087, -0.1014120802283287, -0.011779984459280968, -0.006032710894942284, -0.005198769737035036, -0.0028070115949958563, -0.0022795426193624735, -1.650802493095398, -0.00043930893298238516, -0.008067640475928783, -0.5555331110954285, -0.0053050220012664795, -0.32045885920524597, -0.0023076115176081657, -0.9402862191200256, -2.9380178451538086, -0.005910300649702549, -0.015796056017279625, -2.1708176136016846, -0.3813261389732361, -0.1312749981880188, -2.288792165927589e-05, -3.6238969187252223e-05, -0.11665144562721252, -0.01678580790758133, -8.785339014139026e-05, -0.00012587709352374077, -0.008885250426828861, -0.0002847504511009902, -7.545663538621739e-05, -0.0029496517963707447, -0.0011454218765720725, -0.08526136726140976, -0.03599821403622627, -0.07464884221553802, -0.00043299360550008714, -2.4462456703186035, -2.653555393218994, -0.005901768337935209, -0.004376951605081558, -2.6378777027130127, -0.004528149496763945, -0.07006016373634338, -0.29241687059402466, -0.3684922456741333, -0.1345764696598053, -0.004354400094598532, -0.905843198299408, -0.0220768004655838, -0.5483760833740234, -0.018343685194849968, -0.07440441846847534, -0.27263692021369934, -0.136863112449646, -0.03305567055940628, -3.790783375734463e-05, -5.960446742392378e-06, -0.0070012714713811874, -0.0010787388309836388, -1.07287787614041e-05, -1.2874520507466514e-05, -0.0020640038419514894, -2.95634672511369e-05, -3.540453326422721e-05, -0.9966229200363159, -1.1920928244535389e-07, -9.536738616588991e-07, -5.149708886165172e-05, -0.00013851160474587232, -0.23881570994853973], "finish_reason": "stop"}], "metrics": {"energy": 218.7608888149261, "energy_per_token": 1.1954146929777383, "time": 7.787358, "time_per_token": 0.042553868852459015}}
{"outputs": [{"text": "target_directory = Path(target_directory)\n    if not target_directory.exists():\n        os.makedirs(target_directory)\n\n    valid_extensions = [\n        '.txt',\n        '.docx',\n        '.xlsx',\n        '.csv'\n    ]\n    filenames = glob.glob(os.path.join(source_directory, '*'))\n    for filename in filenames:\n        if filename.endswith(valid_extensions):\n            file_name = os.path.basename(filename)\n            new_file = target_directory / f'{zip_name}.zip'\n            with zipfile.ZipFile(new_file, 'w', compression=zipfile.ZIP_DEFLATED) as zipf:\n                zipf.write(filename, os.path.relpath(filename, source_directory))\n\n    return str(new_file)", "tokens": ["target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " target", "_", "directory", ".", "exists", "():", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "valid", "_", "extensions", " =", " [", "\n", "        ", "'", ".", "txt", "'", ",", "\n", "        ", "'", ".", "doc", "x", "'", ",", "\n", "        ", "'", ".", "x", "ls", "x", "'", ",", "\n", "        ", "'", ".", "csv", "'", "\n", "    ", "]", "\n", "    ", "fil", "en", "ames", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", "'))", "\n", "    ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "        ", "if", " filename", ".", "end", "sw", "ith", "(", "valid", "_", "extensions", "):", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "filename", ")", "\n", "            ", "new", "_", "file", " =", " target", "_", "directory", " /", " f", "'{", "zip", "_", "name", "}", ".", "zip", "'", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "new", "_", "file", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "f", ":", "\n", "                ", "zip", "f", ".", "write", "(", "filename", ",", " os", ".", "path", ".", "rel", "path", "(", "filename", ",", " source", "_", "directory", "))", "\n", "\n", "    ", "return", " str", "(", "new", "_", "file", ")", "\n", "\n", "print"], "logprobs": [-4.300112724304199, -0.034106381237506866, -0.233775794506073, -0.10561169683933258, -0.4054798185825348, -0.009473016485571861, -0.007157991174608469, -3.0040289857424796e-05, -1.6927575416048057e-05, -0.0023894349578768015, -0.3291715681552887, -0.1318412572145462, -1.2055716514587402, -0.0865299329161644, -0.2226458042860031, -4.851700214203447e-05, -5.1020273531321436e-05, -0.0006003961316309869, -0.17738279700279236, -0.005755519028753042, -0.01945403590798378, -0.0024835001677274704, -1.5518321990966797, -0.00020716428116429597, -0.0559978149831295, -0.00011407678539399058, -0.0007465674425475299, -0.0004439560289029032, -0.05000928416848183, -1.2993727978027891e-05, -3.373566141817719e-05, -0.0894688218832016, -0.05660618841648102, -0.7573503851890564, -0.0008068405441008508, -1.8680033683776855, -0.0089277857914567, -0.09170489013195038, -0.012674140743911266, -2.3735005855560303, -2.552910327911377, -0.016289236024022102, -0.4478719234466553, -0.061253514140844345, -0.003552675014361739, -0.0002108589978888631, -0.00019894051365554333, -0.4553508162498474, -0.0005429700831882656, -0.00033468366018496454, -0.00048315772437490523, -0.0015090041561052203, -0.0006652049487456679, -3.969590397900902e-05, -0.0004383556661196053, -0.006860984489321709, -0.00017474555352237076, -0.00010668662434909493, -0.00012337400403339416, -0.0016811060486361384, -0.00013624693383462727, -0.00041762212640605867, -3.814624506048858e-05, -0.0002520958660170436, -0.00024303820100612938, -0.0003725788265001029, -0.0001501924270996824, -0.0001691436773398891, -0.0036398605443537235, -0.019182059913873672, -0.5528258681297302, -0.02004590630531311, -0.00010942813969450071, -0.004065226297825575, -1.4901766777038574, -4.467476844787598, -0.003417011583223939, -7.045020902296528e-05, -0.059628937393426895, -0.831516683101654, -0.0001541257370263338, -0.041552621871232986, -0.0349649153649807, -0.897339403629303, -1.6569954823353328e-05, -0.00047708096099086106, -4.184158387943171e-05, -0.0021021903958171606, -0.0010502781951799989, -0.017792263999581337, -1.0847986231965479e-05, -2.2649508537142538e-05, -0.0018077236600220203, -0.21551209688186646, -0.4736587703227997, -0.7886922359466553, -0.015044791623950005, -0.23878557980060577, -1.172235131263733, -0.17864887416362762, -0.0018229547422379255, -0.0036693166475743055, -2.3841855067985307e-07, -2.145764938177308e-06, -0.00116637849714607, -0.0018986309878528118, -0.005102706607431173, -1.198182463645935, -2.519700288772583, -0.0408485047519207, -0.15938130021095276, -1.728519782773219e-05, 0.0, -0.07564924657344818, -0.4217386543750763, -1.9073468138230965e-06, -3.85038583772257e-05, -0.07971334457397461, -0.005926891695708036, -0.00482395151630044, -3.2358322143554688, -0.22824601829051971, -0.3373908996582031, -0.06166941672563553, -1.138784646987915, -3.707340147229843e-05, -0.00029774048016406596, -0.0024562685284763575, -0.13971859216690063, -1.1920928244535389e-07, -9.727005090098828e-05, -0.007205097004771233, -0.005950947757810354, -0.043549709022045135, -0.027272900566458702, -2.6875112056732178, -0.004547610878944397, -1.483733892440796, -1.513785719871521, -1.6522891521453857, -1.0609570381348021e-05, -3.755022044060752e-05, -0.14398925006389618, -1.0566418170928955, -0.5440521836280823, -0.18827474117279053, -0.0012755600037053227, -0.00017998983094003052, -0.8456596732139587, -0.03168399631977081, -0.006855419836938381, -0.002172492677345872, -0.02203342318534851, -0.07611764967441559, -0.5879775285720825, -0.1499558836221695, -0.00011300401820335537, -2.109982233378105e-05, -0.004432970657944679, -0.0006985607906244695, -0.00012492353562265635, -0.003676918102428317, -0.11213546246290207, -9.333651541965082e-05, -3.7431014789035544e-05, -0.013949751853942871, -0.11229156702756882, -0.28532660007476807, -1.163273811340332, -0.00010692501382436603, -0.45952701568603516, -0.011605959385633469, -0.0017526278970763087, -2.0265558760002023e-06, -1.6569954823353328e-05, -0.0035596834495663643, -0.004530878737568855, -0.0005172345554456115, -0.003649837803095579, -0.0002079985715681687, -0.0015024575404822826, -0.04483089968562126, -0.0005078217945992947, -0.2935178875923157, -2.183324098587036, -0.001278179232031107, -0.0017535799415782094, -0.0016210046596825123, -0.05704936385154724, -0.014895997941493988, -3.349725011503324e-05, -0.0024624522775411606, -0.0018744770204648376, -0.055107515305280685, -0.987584114074707, -2.858956813812256, -6.079655122448457e-06, -0.00011872540198964998, -0.00030048147891648114, -2.016214370727539, -0.00011383838864276186, -0.0005725175142288208, -0.03554031625390053, -0.0556255541741848, -0.5407105088233948, -0.0017030035378411412, -8.046303264563903e-05, -0.03946135938167572, -0.018797941505908966, -1.1259028911590576, -0.10159840434789658, -0.07765203714370728, -0.5280591249465942, -0.0008126770262606442, -0.06650270521640778, -8.201262971851975e-05, -1.7523612768854946e-05, -0.5527195930480957, -0.4423673152923584, -0.010807906277477741, -2.964242935180664], "finish_reason": "stop"}], "metrics": {"energy": 247.43798121261597, "energy_per_token": 1.1196288742652307, "time": 9.467282, "time_per_token": 0.042838380090497744}}
{"outputs": [{"text": "# create a Zip file object\n    zipf = zipfile.ZipFile(\n        os.path.join(target_directory, f\"{zip_name}.zip\"), \"w\", compression=zipfile.ZIP_DEFLATED\n    )\n\n    # create a list of filenames to zip\n    filenames = []\n    for extension in ['.txt', '.docx', '.xlsx', '.csv']:\n        files_to_zip = glob.glob(os.path.join(source_directory, f\"*{extension}\"))\n        filenames.extend(files_to_zip)\n\n    # compress the list of filenames into a zip file\n    for filename in filenames:\n        zipf.write(filename)\n\n    # close the zip file\n    zipf.close()\n    return os.path.join(target_directory, f\"{zip_name}.zip\")", "tokens": ["#", " create", " a", " Zip", " file", " object", "\n", "    ", "zip", "f", " =", " zip", "file", ".", "Z", "ip", "File", "(", "\n", "        ", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", ")", ",", " \"", "w", "\"", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", "\n", "    ", ")", "\n", "\n", "    ", "#", " create", " a", " list", " of", " fil", "en", "ames", " to", " zip", "\n", "    ", "fil", "en", "ames", " =", " []", "\n", "    ", "for", " extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "        ", "files", "_", "to", "_", "zip", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " f", "\"", "*{", "extension", "}\"", "))", "\n", "        ", "fil", "en", "ames", ".", "extend", "(", "files", "_", "to", "_", "zip", ")", "\n", "\n", "    ", "#", " compress", " the", " list", " of", " fil", "en", "ames", " into", " a", " zip", " file", "\n", "    ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "        ", "zip", "f", ".", "write", "(", "filename", ")", "\n", "\n", "    ", "#", " close", " the", " zip", " file", "\n", "    ", "zip", "f", ".", "close", "()", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", ")", "\n", "\n", "def"], "logprobs": [-1.4324654340744019, -3.826286792755127, -1.9982362985610962, -3.3664941787719727, -3.004244327545166, -0.7390385866165161, -0.043734125792980194, -0.004594128113240004, -0.6479288935661316, -3.029186248779297, -0.009576217271387577, -0.06035957857966423, -1.8000440832111053e-05, -8.320462075062096e-05, -0.006188279017806053, -0.00019464982324279845, -0.00013016807497479022, -0.07656131684780121, -2.868861675262451, -0.014338557608425617, -0.4860795736312866, -5.1377883210079744e-05, -0.00249824533239007, -0.0005638201837427914, -0.00819156039506197, -0.005473982077091932, -0.1522119641304016, -2.634490556374658e-05, -9.762764238985255e-05, -0.011624576523900032, -0.9297788739204407, -0.26448172330856323, -0.002940974896773696, -0.045591335743665695, -7.652943895664066e-05, -0.00012337400403339416, -0.009565118700265884, -0.0002933310461230576, -0.0002506657037883997, -0.0003363520372658968, -0.03083188273012638, -0.005822957493364811, -1.5288078784942627, -0.011143000796437263, -2.992108420585282e-05, -0.26532411575317383, -0.6563891172409058, -0.01125711016356945, -0.002707983832806349, -4.887569048150908e-06, -2.312633478140924e-05, -0.004798088688403368, -0.03290826454758644, -0.0003323002893012017, -0.0051450468599796295, -0.00037150635034777224, -0.0011781663633883, -0.960075318813324, -0.008615466766059399, -0.00017534149810671806, -0.04020538926124573, -0.44847968220710754, -0.0011137479450553656, -0.26358261704444885, -2.1617777347564697, -0.10485778748989105, -0.32315951585769653, -0.18943774700164795, -3.854721784591675, -0.0010083595989271998, -7.1403817855753e-05, -0.33017590641975403, -2.31423282623291, -0.13309481739997864, -0.003106413409113884, -1.0665199756622314, -0.0006681832019239664, -0.0002766464895103127, -0.10072474181652069, -1.1472856998443604, -0.00334251974709332, -0.44491034746170044, -0.18102246522903442, -2.0173888206481934, -0.07580109685659409, -2.5175747871398926, -0.11593533307313919, -0.005562422797083855, -0.0006405447493307292, -0.0002849888114724308, -0.007493956014513969, -0.0006494796834886074, -0.008438407443463802, -0.001364134717732668, -0.00030727434204891324, -3.2782016205601394e-05, -0.0019610952585935593, -0.0003630455757956952, -0.0019044610671699047, -8.856858039507642e-05, -0.00039867559098638594, -0.0005042473785579205, -4.7444173105759546e-05, -0.0023424585815519094, -0.00041571559268049896, -0.0012506766943261027, -0.006423422135412693, -0.0007627676823176444, -0.015706051141023636, -0.004966185428202152, -3.273772716522217, -2.0186784267425537, -0.46432796120643616, -0.00027378625236451626, -0.11551644653081894, -0.007634746376425028, -0.11177989840507507, -9.274052717955783e-05, -0.017794840037822723, -0.0022793046664446592, -0.4217812120914459, -4.362964682513848e-05, -0.0001037067049765028, -0.0009213017183355987, -0.000533795915544033, -0.00024196557933464646, -0.011188033036887646, -7.033323527139146e-06, -1.7404405298293568e-05, -0.0012478192802518606, -0.2919517159461975, -0.14689931273460388, -0.6794289946556091, -0.0004737447015941143, -0.004424900282174349, -0.004145719110965729, -0.0026805205270648003, -0.022604772821068764, -0.14143763482570648, -2.455681169521995e-05, -3.576278118089249e-07, -0.1317155510187149, -0.011264772154390812, -0.024789348244667053, -0.012102740816771984, -1.645074735279195e-05, -4.172316494077677e-06, -4.172238186583854e-05, -7.450303382938728e-05, -0.001302704680711031, -0.006645128596574068, -0.053028155118227005, -0.003912533633410931, -0.04362183436751366, -2.176593780517578, -0.38562890887260437, -2.6824445724487305, -0.034107185900211334, -0.29368624091148376, -0.00024577934527769685, -1.2516897186287679e-05, -1.7437613010406494, -0.21450255811214447, -0.21376436948776245, -0.5317379832267761, -0.07789875566959381, -0.0019339682767167687, -0.22662194073200226, -0.20054329931735992, -0.000606710382271558, -0.0033207768574357033, -2.861018856492592e-06, -8.344646857949556e-07, -0.00018761781393550336, -0.0018518695142120123, -0.0008525789016857743, -0.1191612035036087, -0.016108838841319084, -3.1709168979432434e-05, -0.0002942844294011593, -0.00023648326168768108, -0.017654066905379295, -0.28187429904937744, -0.016980499029159546, -0.1254207044839859, -0.0059097083285450935, -0.251404345035553, -0.047178588807582855, -0.0016746795736253262, -0.43132224678993225, -0.012273735366761684, -0.2647677958011627, -0.0003587556129787117, -0.00334251974709332, -0.00012396997772157192, -1.823885577323381e-05, -8.40390202938579e-05, -0.0004359725280664861, -0.012542534619569778, -2.3968522548675537, -0.22660700976848602, -0.21104182302951813, -4.0531076592742465e-06, -0.00045503751607611775, -0.0011553048389032483, -0.08998451381921768, -0.0008322112844325602, -0.03435186669230461, -1.4066597032069694e-05, -9.65590606938349e-06, -0.000620768463704735, -0.03041706047952175, -0.009001626633107662, -0.0013983005192130804, -0.0006519814487546682, -2.1815061700181104e-05, -4.529942543740617e-06, -0.0005305789527483284, -1.2278481335670222e-05, -3.2305197237292305e-05, -0.00010179955279454589, -0.28499045968055725, -0.12103063613176346, -0.01717304438352585, -1.1418330669403076], "finish_reason": "stop"}], "metrics": {"energy": 234.4236068067551, "energy_per_token": 1.0418826969189114, "time": 9.6731615, "time_per_token": 0.042991828888888896}}
{"outputs": [{"text": "if os.path.exists(source_directory) is False:\n        raise OSError(f'The source directory does not exist: {source_directory}')\n    zipped_files_path = os.path.join(target_directory, f'{zip_name}.zip')\n    if os.path.exists(zipped_files_path):\n        raise OSError(f'The zipped file already exists: {zipped_files_path}')\n\n    exts = ['.txt', '.docx', '.xlsx', '.csv']\n    target_files = [\n        filename\n        for filename in glob.glob(os.path.join(source_directory, '**/*.txt')) + glob.glob(\n            os.path.join(source_directory, '**/*.docx')) + glob.glob(\n            os.path.join(source_directory, '**/*.xlsx')) + glob.glob(\n            os.path.join(source_directory, '**/*.csv'))\n        if os.path.splitext(filename)[1] in", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", ")", " is", " False", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "'", "The", " source", " directory", " does", " not", " exist", ":", " {", "source", "_", "directory", "}", "')", "\n", "    ", "z", "ipped", "_", "files", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "'{", "zip", "_", "name", "}", ".", "zip", "')", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "z", "ipped", "_", "files", "_", "path", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "'", "The", " z", "ipped", " file", " already", " exists", ":", " {", "z", "ipped", "_", "files", "_", "path", "}", "')", "\n", "\n", "    ", "ext", "s", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "target", "_", "files", " =", " [", "\n", "        ", "filename", "\n", "        ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "/*", ".", "txt", "'))", " +", " glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "/*", ".", "doc", "x", "'))", " +", " glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "/*", ".", "x", "ls", "x", "'))", " +", " glob", ".", "glob", "(", "\n", "            ", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "/*", ".", "csv", "'))", "\n", "        ", "if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", " in"], "logprobs": [-1.4513596296310425, -3.0661463737487793, -0.00025781645672395825, -0.008428478613495827, -0.01484702154994011, -0.5640851855278015, -0.0018748340662568808, -0.028988489881157875, -0.00011646069469861686, -5.686121585313231e-05, -1.2700461149215698, -0.5216118097305298, -0.12006458640098572, -0.007033706642687321, -0.034724876284599304, -0.004955984186381102, -0.05888214334845543, -0.05992325767874718, -2.825220326485578e-05, -4.529942543740617e-06, -0.5409991145133972, -0.6566643714904785, -1.2181624174118042, -1.189293384552002, -0.49404051899909973, -0.25075283646583557, -1.4916610717773438, -0.003045090241357684, -0.0161809790879488, -0.32573026418685913, -0.07763350754976273, -0.011366963386535645, -8.11782301752828e-05, -0.0002146728802472353, -0.018970953300595284, -0.12575335800647736, -0.0021865288726985455, -0.9154541492462158, -4.385306358337402, -0.37776294350624084, -0.11160708218812943, -0.44041740894317627, -1.0171477794647217, -0.7458987832069397, -0.042246073484420776, -0.8303151726722717, -0.0002936885575763881, -0.005013987887650728, -0.007446035742759705, -0.014289435930550098, -0.001843778183683753, -0.06845563650131226, -2.3841830625315197e-06, -2.1457441107486375e-05, -0.0018424693262204528, -0.4016226828098297, -0.1321316808462143, -0.00952686183154583, -0.00022957073815632612, -0.00010895135346800089, -0.001564113306812942, -0.004483765456825495, -0.00013886917440686375, -0.0010626628063619137, -0.02168632671236992, -0.18473465740680695, -1.7979865074157715, -0.3404495418071747, -8.987976616481319e-05, -0.000701658078469336, -0.0005840741214342415, -0.1787772923707962, -0.000589792791288346, -0.02381121553480625, -2.6464111215318553e-05, -2.038458114839159e-05, -0.00013100242358632386, -0.00018594920402392745, -1.3351351299206726e-05, -0.6442556977272034, -0.020691609010100365, -0.0019170731538906693, -2.0598301887512207, -0.5609511733055115, -0.001341872732155025, -7.152555099310121e-07, -0.022135568782687187, -0.03288842365145683, -0.0782381221652031, -0.39545828104019165, -1.0698771476745605, -0.0034926861990243196, -1.598820447921753, -0.16132105886936188, -0.04917684942483902, -0.19318167865276337, -0.004476882051676512, -0.015895908698439598, -0.001384015311487019, -4.684815212385729e-05, -0.0010714748641476035, -0.00024029705673456192, -2.455681169521995e-05, -0.004992756061255932, -0.03328492492437363, -0.002439501229673624, -1.2846400737762451, -0.0005807381821796298, -4.0008063316345215, -0.7470235228538513, -0.15850554406642914, -0.19967328011989594, -0.12345410883426666, -0.004653695039451122, -0.0006404255982488394, -0.00023445718397852033, -0.004377188626676798, -0.0008254220010712743, -0.0035227404441684484, -0.0013103241799399257, -0.00027807659353129566, -0.00013243274588603526, -0.000993354362435639, -0.0002936885575763881, -0.0017749997787177563, -0.0001599660754436627, -0.0009279712685383856, -0.0002812943421304226, -1.883488948806189e-05, -0.0009478605352342129, -0.0005380851216614246, -0.0022533759474754333, -0.012504626996815205, -0.01750941015779972, -0.2149653434753418, -4.692819118499756, -0.029232226312160492, -1.2155791521072388, -0.22054283320903778, -1.8485772609710693, -2.0276732444763184, -0.016370393335819244, -3.399765729904175, -0.9962980151176453, -0.0025133469607681036, -0.0014296083245426416, -0.053568512201309204, -0.05830888822674751, -0.38757315278053284, -0.0003182381624355912, -0.17673587799072266, -0.021985378116369247, -0.8218910098075867, -2.9801878554280847e-05, -0.0002644904307089746, -3.683499380713329e-05, -0.003231543581932783, -0.0010545651894062757, -0.023189889267086983, -8.892617915989831e-05, -2.169585604860913e-05, -0.0014093714999035, -0.20491719245910645, -0.8799179196357727, -0.4251728951931, -1.0103486776351929, -1.585483193397522, -0.36204713582992554, -1.3964191675186157, -1.3328827619552612, -0.0004262015863787383, -0.004846254829317331, -0.0026643513701856136, -0.744075357913971, -0.056033432483673096, -0.012203669175505638, -0.00015722469834145159, -1.9907753085135482e-05, -2.4199192921514623e-05, -1.728519782773219e-05, -0.00025996167096309364, -0.026245523244142532, -3.802703940891661e-05, -8.34461570775602e-06, -3.182837463100441e-05, -0.00249396450817585, -0.0016183863626793027, -0.0006382812280207872, -0.0009727513534016907, -0.01275417860597372, -0.0009313059854321182, -0.31895843148231506, -0.03533655032515526, -0.016218628734350204, -0.0001811817055568099, -0.0003597089380491525, -0.00043358939001336694, -0.42688608169555664, -0.16695760190486908, -0.00023922442051116377, -0.00043585337698459625, -7.033323527139146e-06, -5.9960475482512265e-05, -2.3364747903542593e-05, -3.4927710657939315e-05, -0.005627740640193224, -2.777537883957848e-05, -2.861018856492592e-06, -1.1444026313256472e-05, -0.0004975749761797488, -0.0001954841281985864, -7.188061863416806e-05, -0.0002728328399825841, -0.010081443004310131, -6.23445157543756e-05, -0.0009829933987930417, -0.001149589428678155, -0.015922777354717255, -0.004812444094568491, -1.585470999998506e-05, -0.0010110987350344658, -0.0006087357178330421, -0.08667314052581787, -0.035303179174661636, -0.00020787939138244838, -0.0002706876548472792, -4.529942543740617e-06, -2.622600959512056e-06, -1.2636104656849056e-05, -3.3378044463461265e-05, -0.003714330494403839, -1.4662635294371285e-05, -3.3378546504536644e-06, -1.5139465176616795e-05, -0.0003798478574026376, -0.0003573255962692201, -0.00023266946664080024, -0.00017820201173890382, -0.0014310367405414581, -0.007656986825168133, -0.051422424614429474, -0.15551136434078217, -0.08662275224924088, -0.7122484445571899, -8.368142152903602e-05, -0.004340869374573231, -5.006777428206988e-06, -0.33245849609375, -0.0003094194398727268, -2.3841855067985307e-07, -0.0003408804477658123, -0.03869510069489479, -0.19134218990802765, -0.006107595283538103, -0.010027037002146244, -0.21195264160633087], "finish_reason": "length"}], "metrics": {"energy": 268.39555373954795, "energy_per_token": 1.0484201317951092, "time": 11.151211, "time_per_token": 0.04355941796875}}
{"outputs": [{"text": "# Check for file existence\n    if not os.path.exists(source_directory):\n        raise OSError('No such file or directory: source_directory')\n\n    # Find all the files with valid extensions\n    valid_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    file_extensions = [file for file in os.listdir(source_directory) if file.endswith(tuple(valid_extensions))]\n\n    # Save the path to the zipfile to a variable\n    zipfile_path = os.path.join(target_directory, zip_name) + '.zip'\n\n    # Create the zipfile if it doesn't exist\n    if not os.path.exists(zipfile_path):\n        zip_file = zipfile.ZipFile(zipfile_path, mode='w')\n\n    # Iterate through all the valid file extensions and add each file to the zipfile\n    for file_extension in file_extensions:\n        zip_file.write(os.path.join(source_directory, file_extension))\n\n    ", "tokens": ["#", " Check", " for", " file", " existence", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "No", " such", " file", " or", " directory", ":", " source", "_", "directory", "')", "\n", "\n", "    ", "#", " Find", " all", " the", " files", " with", " valid", " extensions", "\n", "    ", "valid", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "file", "_", "extensions", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "source", "_", "directory", ")", " if", " file", ".", "end", "sw", "ith", "(", "tuple", "(", "valid", "_", "extensions", "))", "]", "\n", "\n", "    ", "#", " Save", " the", " path", " to", " the", " zip", "file", " to", " a", " variable", "\n", "    ", "zip", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", ")", " +", " '", ".", "zip", "'", "\n", "\n", "    ", "#", " Create", " the", " zip", "file", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "zip", "file", "_", "path", "):", "\n", "        ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "file", "_", "path", ",", " mode", "='", "w", "')", "\n", "\n", "    ", "#", " Iter", "ate", " through", " all", " the", " valid", " file", " extensions", " and", " add", " each", " file", " to", " the", " zip", "file", "\n", "    ", "for", " file", "_", "extension", " in", " file", "_", "extensions", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " file", "_", "extension", "))", "\n", "\n", "    "], "logprobs": [-1.4324654340744019, -1.0502543449401855, -3.204895496368408, -4.257984161376953, -0.47586166858673096, -0.37924128770828247, -0.003021796001121402, -0.17718809843063354, -0.05744056776165962, -0.11841490864753723, -2.3245540432981215e-05, -0.0004818470624741167, -0.003953855484724045, -0.5449011325836182, -0.0008641323074698448, -0.00502917030826211, -0.00011503035057103261, -4.172238186583854e-05, -0.0026202413719147444, -0.010448044165968895, -0.002257538726553321, -0.04280279576778412, -0.14050064980983734, -2.9205850296420977e-05, -3.2186455882765586e-06, -1.2585375308990479, -3.771994113922119, -0.32539892196655273, -0.25650355219841003, -0.05483536049723625, -0.007832292467355728, -1.0590652227401733, -3.687028408050537, -0.05303177237510681, -0.009056205861270428, -0.222320094704628, -0.002179748611524701, -0.20745903253555298, -0.0011157722910866141, -0.22500310838222504, -3.825881242752075, -0.7193053960800171, -1.9531712532043457, -0.6724008321762085, -0.8968664407730103, -2.2410011291503906, -0.04821490868926048, -0.9477294087409973, -0.0012232924345880747, -1.5218274593353271, -0.005785387009382248, -0.1568981558084488, -0.011536316946148872, -0.054856691509485245, -0.024810396134853363, -0.002672435948625207, -0.00035124807618558407, -5.674201020156033e-05, -0.001827000523917377, -0.0003543464408721775, -0.0022432657424360514, -0.0005389191792346537, -0.00010346830822527409, -1.8000440832111053e-05, -0.00042548662167973816, -0.00025293012731708586, -0.001013480476103723, -6.09140915912576e-05, -0.0005303407087922096, -0.0001486429391661659, -4.577531944960356e-05, -0.0006708040600642562, -0.0002658013836480677, -0.0013428251259028912, -0.010983721353113651, -0.008985559456050396, -0.020810004323720932, -1.3431555032730103, -0.018834324553608894, -2.4989898204803467, -0.04883643984794617, -0.7385775446891785, -1.784475326538086, -0.707680881023407, -0.008577173575758934, -0.0039240517653524876, -1.7959940433502197, -0.00018249277491122484, -0.0016196954529732466, -1.0132738680113107e-05, -0.0005447572330012918, -0.011049275286495686, -5.495397272170521e-05, -1.4424220353248529e-05, -0.015574022196233273, -0.2900814116001129, -1.4856407642364502, -0.041858941316604614, -0.4454808831214905, -2.253030106658116e-05, -1.1920928244535389e-07, -0.013310150243341923, -1.268545389175415, -0.0012968709925189614, -0.0038704974576830864, -3.2186455882765586e-06, -6.198863957251888e-06, -0.0008694920688867569, -0.003960860893130302, -0.006277367472648621, -0.3168487250804901, -0.00023779425828251988, -0.15128664672374725, -3.623859405517578, -0.8061042428016663, -3.3080763816833496, -0.4699927568435669, -0.11246947944164276, -1.092404842376709, -2.901693344116211, -1.995806097984314, -0.7011582851409912, -0.1403028815984726, -0.17349866032600403, -0.0011823337990790606, -0.5089894533157349, -1.6621112823486328, -0.023224016651511192, -0.07772593200206757, -0.009145747870206833, -0.6340686082839966, -3.576214658096433e-05, -0.002009992953389883, -0.005499471910297871, -0.00939543079584837, -0.0012018608395010233, -0.05234904587268829, -4.768360213347478e-06, -1.2278481335670222e-05, -0.0022188823204487562, -0.48050394654273987, -0.0006264869589358568, -0.0001941730733960867, -1.444653868675232, -0.18786947429180145, -0.06911599636077881, -0.00018988236843142658, -0.0001919085334520787, -0.00014161060971673578, -0.012622112408280373, -0.08218149095773697, -0.000537727726623416, -0.10431449115276337, -0.9420729875564575, -0.47160661220550537, -0.8102992177009583, -0.6202927827835083, -1.9583144187927246, -0.1643752008676529, -0.6513722538948059, -0.0011020784731954336, -1.4305012882687151e-05, -0.20449919998645782, -0.3960980176925659, -0.0005117537220939994, -0.2065477967262268, -0.034784864634275436, -0.01996609941124916, -5.602820692729438e-06, -7.486063259420916e-05, -0.00013648532330989838, -0.10605105012655258, -0.00032586511224508286, -0.09461106359958649, -0.0007840896723791957, -0.00023314618738368154, -2.1219027985353023e-05, -0.005054196808487177, -0.0029343189671635628, -0.005547130014747381, -1.799316167831421, -0.7634171843528748, -0.5678133964538574, -0.016080332919955254, -0.12612248957157135, -0.0002153879904653877, -0.00011908298620255664, -0.006331029813736677, -0.0003846143954433501, -0.00012134769349358976, -0.0012737740762531757, -0.02857915870845318, -0.0016023189527913928, -0.00024423000286333263, -4.339123915997334e-05, -0.0009238027851097286, -2.581934690475464, -0.041600994765758514, -0.010592782869935036, -0.26719939708709717, -0.014042617753148079, -1.036109447479248, -0.7996414303779602, -0.2987813949584961, -1.5979703664779663, -0.008661204017698765, -0.9838442206382751, -1.309112548828125, -0.3212631344795227, -2.925957679748535, -2.0719985961914062, -0.07038465142250061, -1.0345364809036255, -0.7539839148521423, -2.7741262912750244, -0.1478491574525833, -0.08015520125627518, -0.0058466605842113495, -0.01686774380505085, -0.24175943434238434, -0.056520234793424606, -0.0011245838832110167, -0.03599729388952255, -0.2579401433467865, -0.5983235836029053, -0.18253843486309052, -0.0012885371688753366, -0.39627760648727417, -1.3589766240329482e-05, -2.0861407392658293e-05, -0.00017510310863144696, -0.0006232702871784568, -0.019910475239157677, -2.4519336223602295, -0.07300866395235062, -0.09381810575723648, -0.0038264405447989702, -0.0013447299133986235, -0.003282636869698763, -0.17629103362560272, -0.0006536492728628218, -0.00014101465058047324, -0.00010632903286023065, -0.0011405398836359382, -0.00027938754647038877, -0.005984957329928875, -2.8132995794294402e-05, -6.079655122448457e-06, -0.00046361665590666234, -0.0023688608780503273, -6.97350042173639e-05, -0.00026341783814132214, -0.5653406381607056, -0.004284607246518135, -0.058449339121580124, -0.014500828459858894], "finish_reason": "length"}], "metrics": {"energy": 283.5127894830705, "energy_per_token": 1.107471833918244, "time": 11.14356, "time_per_token": 0.04352953125}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise OSError(f\"{source_directory} is not a valid directory.\")\n\n    file_list = []\n    for root, _, files in os.walk(source_directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            if os.path.isfile(file_path):\n                extension = Path(file_path).suffix.lower()\n                if extension in ['.txt', '.docx', '.xlsx', '.csv']:\n                    file_list.append(file_path)\n\n    with zipfile.ZipFile(target_directory + os.sep + zip_name + '.zip', 'w') as zip_file:\n        for file in file_list:\n            zip_file.write(file, os.path.relpath(file, source_directory))\n\n    return target_directory + os.sep + zip_name + '.zip'", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "{", "source", "_", "directory", "}", " is", " not", " a", " valid", " directory", ".", "\"", ")", "\n", "\n", "    ", "file", "_", "list", " =", " []", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "                ", "extension", " =", " Path", "(", "file", "_", "path", ")", ".", "suff", "ix", ".", "lower", "()", "\n", "                ", "if", " extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "    ", "file", "_", "list", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "directory", " +", " os", ".", "sep", " +", " zip", "_", "name", " +", " '", ".", "zip", "'", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "rel", "path", "(", "file", ",", " source", "_", "directory", "))", "\n", "\n", "    ", "return", " target", "_", "directory", " +", " os", ".", "sep", " +", " zip", "_", "name", " +", " '", ".", "zip", "'", "\n", "\n", "if"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -1.2988874912261963, -0.0032447329722344875, -0.0003023882454726845, -0.005556851159781218, -0.00014435203047469258, -4.792098479811102e-05, -0.002004520269110799, -0.02544466219842434, -0.0029696195852011442, -0.04432719573378563, -0.04187025874853134, -3.4689302992774174e-05, -3.576272320060525e-06, -0.40211057662963867, -0.4263042211532593, -0.3264595866203308, -1.4215924739837646, -0.012193188071250916, -7.223821739898995e-05, -0.0003400462737772614, -0.029470695182681084, -0.5596267580986023, -0.028497828170657158, -0.030098427087068558, -1.0845550298690796, -0.10667248070240021, -0.6972432732582092, -0.0499405637383461, -0.0003634030872490257, -0.00774369714781642, -0.28866472840309143, -0.000490068516228348, -2.6709933280944824, -0.04042602702975273, -1.888343095779419, -0.020392052829265594, -0.7164976596832275, -0.02430255338549614, -0.2091619074344635, -0.4239664673805237, -1.83085298538208, -0.0025455711875110865, -1.4415698051452637, -0.03866516798734665, -0.1079128086566925, -0.002250402234494686, -0.0065946802496910095, -6.389413465512916e-05, -7.354942499659956e-05, -0.00035506143467500806, -0.005026086233556271, -2.2291887944447808e-05, -9.65590606938349e-06, -0.02391911670565605, -0.010939623229205608, -0.0013162767281755805, -0.06405923515558243, -0.33982735872268677, -0.18286465108394623, -0.17086327075958252, -0.0001408954558428377, -0.0021031422074884176, -0.0017660749144852161, -1.5560927391052246, -0.10685676336288452, -0.6443086862564087, -0.002783236326649785, -0.22303539514541626, -1.3589766240329482e-05, -9.142934868577868e-05, -0.0007970731821842492, -0.00362489465624094, -7.724463648628443e-05, -0.0041427514515817165, -0.0006593675934709609, -0.0012119814055040479, -0.0006155265145935118, -0.008767088875174522, -0.021843912079930305, -0.5820295214653015, -1.5007141828536987, -0.0014578201808035374, -0.0014993627555668354, -0.002692409558221698, -1.0883792638778687, -0.010909083299338818, -0.00012087091454304755, -0.0011506610317155719, -0.0007404923089779913, -5.8412379075889476e-06, -0.4474025070667267, -0.025423860177397728, -0.0030884684529155493, -1.4173978567123413, -0.012519695796072483, -2.0710935592651367, -0.00028880240279249847, -0.006317170336842537, -0.08637675642967224, -5.066266385256313e-05, -0.00022575691400561482, -3.302042750874534e-05, -0.0006789048202335835, -0.0002899941464420408, -0.9767122268676758, -0.05389760434627533, -0.01425230037420988, -0.04657445847988129, -0.020167648792266846, -0.06685532629489899, -0.05024602264165878, -0.05015543848276138, -0.33345165848731995, -0.004498837050050497, -0.004760360810905695, -0.0019821536261588335, -0.00016056202002801, -0.003452770644798875, -0.000653530121780932, -0.008645249530673027, -0.002095290692523122, -0.0006503135664388537, -4.8397800128441304e-05, -0.0008393579046241939, -0.00019453064305707812, -0.003977127838879824, -0.0003430254873819649, -0.0010003806091845036, -0.0006233894382603467, -5.006664650863968e-05, -0.0007818264421075583, -0.00016723664884921163, -0.0018576999427750707, -0.01738734170794487, -0.002153579378500581, -0.004710766952484846, -0.0003165697562508285, -0.0009490515221841633, -0.019334428012371063, -0.0010363452602177858, -0.01378127746284008, -0.0004407388041727245, -0.0003274143091402948, -0.020971812307834625, -0.06810268014669418, -0.06402301043272018, -3.290122185717337e-05, -0.0032480601221323013, -0.002476127352565527, -0.08977465331554413, -0.0036473434884101152, -1.3391786813735962, -0.0906008780002594, -0.00019047829846385866, -1.4424220353248529e-05, -0.004233802668750286, -0.0008909308817237616, -6.12716976320371e-05, -0.004219795111566782, -2.267958641052246, -0.00024327656137757003, -0.00023684080224484205, -0.31903937458992004, -2.86484432220459, -5.340433563105762e-05, -0.11234377324581146, -0.0029250476509332657, -0.06255199015140533, -0.00011932138295378536, -8.546940807718784e-05, -0.023372041061520576, -0.2665158212184906, -0.00014029949670657516, -0.00014590153296012431, -0.0013406822690740228, -0.0006792622152715921, -0.09508736431598663, -0.03834594041109085, -0.5124527215957642, -0.00015221867943182588, -0.1938999593257904, -0.14317810535430908, -0.17223848402500153, -0.0006762839620932937, -0.0019436056027188897, -0.001734539750032127, -0.07540496438741684, -0.025337856262922287, -0.17801633477210999, -0.0024194037541747093, -1.537788011773955e-05, -7.510157047363464e-06, -0.00013433984713628888, -0.00043752157944254577, -0.001207814086228609, -0.11395678669214249, -0.0017591729993000627, -0.024637345224618912, -0.00014661667228210717, -0.0005565524916164577, -0.0002899941464420408, -0.010748586617410183, -1.2848321199417114, -0.631561815738678, -0.0003897384158335626, -0.0003355178632773459, -0.0027664743829518557, -0.37012043595314026, -9.738924563862383e-05, -0.00016699827392585576, -0.00471646199002862, -0.0116654634475708, -0.37010371685028076, -7.438383181579411e-05, -3.6000557884108275e-05, -0.03649555519223213, -0.014254650101065636, -0.11737552285194397, -0.02429778315126896, -0.08082833886146545, -0.5419912934303284, -0.00040415700641460717, -1.2993727978027891e-05, -0.004027827177196741, -0.002509423065930605, -0.00020990552729927003, -0.0012775840004906058, -0.0005036516231484711, -0.0035309370141476393, -5.125986263010418e-06, -0.0014154425589367747, -0.004996551666408777, -0.012571847066283226, -2.539125671319198e-05, -2.706014311115723e-05, -0.17757844924926758, -0.2764196991920471, -0.006723755970597267, -0.7884571552276611], "finish_reason": "stop"}], "metrics": {"energy": 243.8407297792435, "energy_per_token": 0.9952682848132388, "time": 10.731035, "time_per_token": 0.04380014285714286}}
{"outputs": [{"text": "if not os.path.exists(source_directory):\n        raise OSError('Source directory does not exist')\n\n    zip_file_path = f\"{target_directory}/{zip_name}.zip\"\n    with zipfile.ZipFile(zip_file_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for file_path in glob.glob(f\"{source_directory}/*\"):\n            file = Path(file_path)\n            extension = file.suffix.lower()\n            if extension in ['.txt', '.docx', '.xlsx', '.csv']:\n                zip_file.write(file, arcname=file.relative_to(source_directory))\n\n    return zip_file_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "('", "Source", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "zip", "_", "file", "_", "path", " =", " f", "\"", "{", "target", "_", "directory", "}/{", "zip", "_", "name", "}", ".", "zip", "\"", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", "\"", "):", "\n", "            ", "file", " =", " Path", "(", "file", "_", "path", ")", "\n", "            ", "extension", " =", " file", ".", "suff", "ix", ".", "lower", "()", "\n", "            ", "if", " extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "file", ".", "relative", "_", "to", "(", "source", "_", "directory", "))", "\n", "\n", "    ", "return", " zip", "_", "file", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -0.31944870948791504, -0.0008842610404826701, -0.006169086322188377, -0.00013505500101018697, -4.4225667807040736e-05, -0.001593511551618576, -0.02787082828581333, -0.0027619570028036833, -0.06281119585037231, -0.04351033270359039, -3.635817120084539e-05, -4.6491513785440475e-06, -1.0762802362442017, -1.1063909530639648, -0.07730330526828766, -0.14437606930732727, -0.0006449526408687234, -0.009868405759334564, -0.961478590965271, -0.0024547225330024958, -0.3974126875400543, -0.0004294188693165779, -2.3452587127685547, -0.0492682047188282, -1.6734662055969238, -0.30351129174232483, -0.38134443759918213, -0.0070752548053860664, -2.609541893005371, -0.6335427165031433, -0.005375099368393421, -0.08682562410831451, -1.2040065485052764e-05, -4.6132929128361866e-05, -0.05494481697678566, -0.019007330760359764, -0.0001230164198204875, -0.00023266946664080024, -0.01553646381944418, -9.727005090098828e-05, -0.00012003655137959868, -9.810443589231e-05, -0.024816211313009262, -0.7173761129379272, -1.876017451286316, -0.1725570261478424, -0.00035089056473225355, -2.3841574147809297e-05, -0.0036899829283356667, -0.0010680215200409293, -7.724463648628443e-05, -0.0010212211636826396, -0.028477899730205536, -0.00030250742565840483, -0.00022980909852776676, -0.00010466027742950246, -4.672895011026412e-05, -0.00036769305006600916, -0.19865387678146362, -0.03805369511246681, -1.166351318359375, -0.0003135904553346336, -0.5795252323150635, -5.769562994828448e-05, -3.290122185717337e-05, -0.0022351776715368032, -0.014825879596173763, -0.0002914242504630238, -0.001177213853225112, -0.0003146630187984556, -0.0005734706646762788, -0.013912955299019814, -0.00019441144831944257, -0.1308729499578476, -0.06922435015439987, -0.04515136778354645, -0.0009633429581299424, -0.0031873397529125214, -0.01042562909424305, -0.08671195060014725, -0.4247451722621918, -0.6456946134567261, -0.22668665647506714, -0.004290305078029633, -0.12229790538549423, -5.2689116273541003e-05, -0.3113880157470703, -0.011679720133543015, -0.4770948588848114, -0.07747906446456909, -0.0005508335889317095, -0.005459992215037346, -3.480850500636734e-05, -1.3351351299206726e-05, -0.3183213472366333, -0.026755746454000473, -1.7774449586868286, -0.22814439237117767, -0.0068912929855287075, -0.004947918001562357, -1.2518759965896606, -2.9028260707855225, -0.2951791286468506, -0.0006634180317632854, -0.0018751909956336021, -0.00011944057769142091, -2.2411095415009186e-05, -0.001260558608919382, -0.08222091197967529, -0.04561593383550644, -2.548480987548828, -0.009534064680337906, -0.0673074722290039, -0.00562868919223547, -0.004459674004465342, -9.536288416711614e-05, -0.6078817844390869, -0.0581776425242424, -0.014238432049751282, -0.03998664766550064, -0.07177041471004486, -0.08430088311433792, -0.059861280024051666, -0.0646074116230011, -0.2913282513618469, -0.005869059823453426, -0.004554968327283859, -0.0012665116228163242, -0.00011598391574807465, -0.0034282978158444166, -0.000597179401665926, -0.00918968953192234, -0.0024806461296975613, -0.0006778326351195574, -2.9801878554280847e-05, -0.0007018963224254549, -0.0003408804477658123, -0.0023737368173897266, -0.0003219324571546167, -0.0005876483046449721, -0.0006634180317632854, -5.1377883210079744e-05, -0.0008281615446321666, -0.00035470392322167754, -0.0016198145458474755, -0.009485415183007717, -0.0034085765946656466, -0.009315595962107182, -0.0015063855098560452, -0.05183236300945282, -0.0004651656490750611, -0.005458569619804621, -0.0002644904307089746, -0.0006381620769388974, -0.00018451895448379219, -0.0443553626537323, -2.024054527282715, -0.6717579960823059, -0.003474747994914651, -0.0025647147558629513, -0.13250723481178284, -0.0976719781756401, -2.9900553226470947, -0.00011419598013162613, -0.0005521441926248372, -0.0005026984144933522, -0.02449532225728035, -6.639736966462806e-05, -1.7881233361549675e-05, -0.054861880838871, -0.015897199511528015, -0.2992424964904785, -0.009818238206207752, -0.026284074410796165, -0.08460851013660431, -8.296622399939224e-05, -3.814624506048858e-05, -0.001178642618469894, -2.264974000354414e-06, -0.7634093761444092, -5.960462772236497e-07, -9.536738616588991e-07, -0.0002308817347511649, -9.846202738117427e-05, -0.12278218567371368], "finish_reason": "stop"}], "metrics": {"energy": 206.90803759002677, "energy_per_token": 1.083288154921606, "time": 8.2059, "time_per_token": 0.04296282722513089}}
{"outputs": [{"text": "if not Path(source_directory).exists():\n        raise OSError('Directory {} does not exist'.format(source_directory))\n\n    # Get all file paths in the source directory with the right extensions\n    file_paths = glob.glob(os.path.join(source_directory, '*.txt'))\n    file_paths += glob.glob(os.path.join(source_directory, '*.docx'))\n    file_paths += glob.glob(os.path.join(source_directory, '*.xlsx'))\n    file_paths += glob.glob(os.path.join(source_directory, '*.csv'))\n\n    # Create a ZipFile object and add the file paths to it\n    with zipfile.ZipFile(os.path.join(target_directory, zip_name + '.zip'), 'w') as zip_file:\n        for file_path in file_paths:\n            zip_file.write(file_path, os.path.basename(file_path))\n\n    return os.path.join(target_directory, zip_name + '", "tokens": ["if", " not", " Path", "(", "source", "_", "directory", ")", ".", "exists", "():", "\n", "        ", "raise", " O", "SE", "rror", "('", "Directory", " {}", " does", " not", " exist", "'", ".", "format", "(", "source", "_", "directory", "))", "\n", "\n", "    ", "#", " Get", " all", " file", " paths", " in", " the", " source", " directory", " with", " the", " right", " extensions", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "txt", "'))", "\n", "    ", "file", "_", "paths", " +=", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "doc", "x", "'))", "\n", "    ", "file", "_", "paths", " +=", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "x", "ls", "x", "'))", "\n", "    ", "file", "_", "paths", " +=", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "csv", "'))", "\n", "\n", "    ", "#", " Create", " a", " Zip", "File", " object", " and", " add", " the", " file", " paths", " to", " it", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -2.4528374671936035, -0.01981978863477707, -0.015880538150668144, -5.674201020156033e-05, -2.13382354559144e-05, -0.00118900160305202, -7.450303382938728e-05, -0.21620847284793854, -0.0034012107644230127, -0.02844441495835781, -0.003322677919641137, -0.055591385811567307, -0.0564117394387722, -3.373566141817719e-05, -4.887569048150908e-06, -1.1697063446044922, -2.7948246002197266, -2.7894833087921143, -0.2411869615316391, -0.0019748962949961424, -0.026235537603497505, -0.8266490697860718, -0.0016382618341594934, -0.0028945000376552343, -0.0008683010237291455, -0.020552994683384895, -0.00010978573118336499, -0.00018821375851985067, -0.0026595955714583397, -0.0026513920165598392, -0.39652958512306213, -0.0004412154376041144, -1.9904054403305054, -2.4272520542144775, -0.8503604531288147, -2.6363883018493652, -0.9548657536506653, -0.9838438034057617, -0.15278767049312592, -0.1443207561969757, -0.048992980271577835, -1.5572277307510376, -1.1699745655059814, -4.297861576080322, -0.34366992115974426, -0.19433939456939697, -0.0016231469344347715, -0.8996023535728455, -0.035752441734075546, -0.13365034759044647, -0.0163781326264143, -0.8022934198379517, -0.00023231192608363926, -0.023910271003842354, -0.03650980815291405, -0.24944856762886047, -1.4185804502631072e-05, -0.00021824838768225163, -9.989239333663136e-05, -0.0014463926199823618, -0.0018189090769737959, -0.016378602012991905, -2.992108420585282e-05, -1.2040065485052764e-05, -0.0011736417654901743, -0.2968389391899109, -0.35118818283081055, -0.06205052509903908, -0.13396944105625153, -0.23382967710494995, -0.8090924620628357, -0.026589764282107353, -0.044388093054294586, -1.966933996300213e-05, -0.00022373080719262362, -0.355058878660202, -0.0032147890888154507, -1.6689286894688848e-06, -0.0003844952443614602, -0.00010966652916977182, -0.00012206286191940308, -0.0022644372656941414, -1.7881377516459906e-06, -0.0001618731184862554, -3.099436753473128e-06, -3.290122185717337e-05, -0.00039009589818306267, -1.7762025890988298e-05, -2.264974000354414e-06, -2.884823152271565e-05, -0.001016934053041041, -0.0007699147681705654, -0.0004932855372317135, -0.011318167671561241, -0.0008996253600344062, -0.00011812942830147222, -0.0006429274217225611, -0.00016616393986623734, -0.00024530262453481555, -8.344646857949556e-07, -1.0371154530730564e-05, -0.00010108436981681734, -0.00016330339713022113, -5.483612312673358e-06, -5.7338023907504976e-05, -8.106198947643861e-06, -7.510157047363464e-06, -0.0014449642039835453, -1.0728830375228426e-06, -3.182837463100441e-05, -1.6689286894688848e-06, -3.099436753473128e-06, -8.046303264563903e-05, -3.4570634852570947e-06, -9.536738616588991e-07, -9.775113539944869e-06, -0.00013314791431184858, -0.00013219437096267939, -0.0001934579631779343, -0.0036221628542989492, -0.0001284993631998077, -0.0006877202540636063, -5.7338023907504976e-05, -0.0001716466504149139, -0.00043811736395582557, -0.0004596845537889749, -2.3841855067985307e-07, -2.9205850296420977e-05, -0.00022516099852509797, -0.0002008474839385599, -1.1920922133867862e-06, -0.0001401803019689396, -1.6331539882230572e-05, -6.198863957251888e-06, -0.00109112320933491, -8.344646857949556e-07, -9.775113539944869e-06, -1.5497195136049413e-06, -4.768360213347478e-06, -6.794698856538162e-05, -4.172316494077677e-06, -1.311301275563892e-06, -9.179073458653875e-06, -0.00014041867689229548, -0.00018261195509694517, -0.00011932138295378536, -0.001513408264145255, -5.590759246842936e-05, -0.0005087750032544136, -0.0924362763762474, -0.00012933371181134135, -0.39539092779159546, -1.013900637626648, -1.016832947731018, -1.7257211208343506, -0.06809277087450027, -0.3287985622882843, -2.2815840244293213, -0.5791417956352234, -1.0470147132873535, -1.2389253377914429, -0.03658738732337952, -0.12441625446081161, -0.06915037333965302, -0.09764765202999115, -0.0005627478822134435, -0.5020071864128113, -0.02979913167655468, -1.7762025890988298e-05, -8.702239938429557e-06, -0.0017901124665513635, -5.113947918289341e-05, -5.173549288883805e-05, -0.034377552568912506, -0.17880311608314514, -1.490105023549404e-05, -0.00016378014697693288, -2.4199192921514623e-05, -0.0013690156629309058, -0.0017134760273620486, -0.013699674978852272, -3.576272320060525e-06, -2.002696055569686e-05, -0.001566374790854752, -0.2681718170642853, -0.00022301571152638644, -6.115249561844394e-05, -0.42834076285362244, -0.04927932471036911, -0.00011920218821614981, -0.0001113352773245424, -0.002732949797064066, -0.00035506143467500806, -0.03247387707233429, -0.04646579176187515, -0.17545056343078613, -0.0003134713042527437, -0.17967472970485687, -0.10859543085098267, -0.1717853993177414, -0.0005085367010906339, -0.0016012478154152632, -0.0023630333598703146, -0.035257261246442795, -0.169571191072464, -0.04636894538998604, -0.0018139113672077656, -0.00014661667228210717, -0.0013947292463853955, -2.3841855067985307e-07, -6.198863957251888e-06, -5.8530047681415454e-05, -0.0005981324939057231, -0.0008688965463079512, -0.10957881808280945, -0.001923617091961205, -0.013132978230714798, -5.018585216021165e-05, -0.000529149197973311, -0.00010442188795423135, -0.01216574851423502, -1.5497195136049413e-06, -3.6477376852417365e-05, -1.1261928081512451, -0.1617770791053772, -1.1920922133867862e-06, -6.270212179515511e-05, -4.3987260141875595e-05, -0.3309081792831421, -1.1920928244535389e-07, -5.245071224635467e-05, -0.0012397230602800846, -1.5497195136049413e-06, -4.458328112377785e-05, -0.006476484704762697, -0.011327007785439491, -0.1256815642118454, -0.01936459355056286, -0.37726670503616333, -0.06286302208900452, -1.0728830375228426e-06, -0.0002090712368953973, -0.0002203936892328784, -0.03687649965286255, -0.0011045790743082762, -0.008446800522506237, -8.106198947643861e-06, -7.867782187531702e-06, -0.0005802616360597312, -0.04196593910455704, -1.2040065485052764e-05, -0.0006797387031838298, -0.026813775300979614, -0.0059699080884456635], "finish_reason": "length"}], "metrics": {"energy": 286.7545478219986, "energy_per_token": 1.120134952429682, "time": 11.136692, "time_per_token": 0.043502703125}}
{"outputs": [{"text": "# Check if the source_directory exists\n    if not os.path.exists(source_directory):\n        raise OSError(\"Source directory does not exist.\")\n\n    # Get all files with .txt, .docx, .xlsx, .csv extensions\n    files = glob.glob(os.path.join(source_directory, '*.txt')) + glob.glob(os.path.join(source_directory, '*.docx')) + \\\n            glob.glob(os.path.join(source_directory, '*.xlsx')) + glob.glob(os.path.join(source_directory, '*.csv'))\n\n    # Check if the target_directory exists, if not, create it\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # Create the full path to the zip file\n    zip_file = os.path.join(target_directory, zip_name + '.zip')\n\n    # Create a zip file with the files\n    with zipfile.ZipFile(zip_", "tokens": ["#", " Check", " if", " the", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " with", " ", ".", "txt", ",", " ", ".", "doc", "x", ",", " ", ".", "x", "ls", "x", ",", " ", ".", "csv", " extensions", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "txt", "'))", " +", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "doc", "x", "'))", " +", " \\", "\n", "            ", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "x", "ls", "x", "'))", " +", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "csv", "'))", "\n", "\n", "    ", "#", " Check", " if", " the", " target", "_", "directory", " exists", ",", " if", " not", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Create", " the", " full", " path", " to", " the", " zip", " file", "\n", "    ", "zip", "_", "file", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " with", " the", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_"], "logprobs": [-1.4324654340744019, -1.0502543449401855, -0.6037402749061584, -0.5048860311508179, -0.12209989130496979, -0.9899027347564697, -0.003144797869026661, -0.04836541786789894, -0.31932753324508667, -0.00195526541210711, -0.14885951578617096, -0.023964857682585716, -0.04533947631716728, -1.6569954823353328e-05, -0.00022230061586014926, -0.0024175008293241262, -0.24312463402748108, -0.00030787018476985395, -0.0020810156129300594, -9.60780744208023e-05, -3.123234637314454e-05, -0.0009480987209826708, -0.004935344215482473, -0.0015368566382676363, -0.04613128677010536, -0.047884855419397354, -2.5629668016335927e-05, -4.172316494077677e-06, -0.2972985506057739, -1.1860946416854858, -0.6246652603149414, -0.031282465904951096, -0.09722352027893066, -0.00021109737281221896, -0.0031823490280658007, -0.4797658622264862, -0.01939592882990837, -0.00029523781267926097, -0.006549440789967775, -0.09862608462572098, -0.0010885033989325166, -0.1324814409017563, -2.0255420207977295, -0.7823945879936218, -0.9840555787086487, -0.6754101514816284, -3.211362600326538, -0.0009653675369918346, -0.019291982054710388, -0.14773665368556976, -0.004417304880917072, -6.198863957251888e-06, -0.0046955798752605915, -0.0025322535075247288, -0.0038805908989161253, -0.006738675758242607, -1.5735502529423684e-05, -0.0030559052247554064, -0.0005610798834823072, -0.001353063271380961, -0.15291914343833923, -1.3880283832550049, -0.00015043080202303827, -0.0027549429796636105, -0.1036553680896759, -0.7155274748802185, -0.0009894242975860834, -1.2208735942840576, -0.2647642493247986, -0.2211632877588272, -5.07818695041351e-05, -0.011454295367002487, -0.005929735954850912, -0.25339728593826294, -0.0001793938863556832, -9.07141511561349e-05, -0.0012309125158935785, -0.0005957497633062303, -0.0005799042410217226, -0.0035580205731093884, -3.6000557884108275e-05, -9.536697689327411e-06, -0.0004993622424080968, -0.6051421761512756, -0.3666410446166992, -0.03603949770331383, -0.12644430994987488, -0.1049511730670929, -0.7026692032814026, -1.1149036884307861, -0.0002740246127359569, -0.0018774517811834812, -0.00047291061491705477, -0.08903510123491287, -0.0016628975281491876, -2.9802276912960224e-06, -3.707340147229843e-05, -1.1205610462639015e-05, -0.0002004899288294837, -0.015205304138362408, -5.578839045483619e-05, -3.576272320060525e-06, -6.353653589030728e-05, -0.008091172203421593, -0.000770510348957032, -0.0003861635341309011, -0.0049997540190815926, -0.00042906138696707785, -0.000300600629998371, -0.13649991154670715, -1.3390045166015625, -1.3589766240329482e-05, -0.7349203824996948, -0.00013493580627255142, -2.3841855067985307e-07, -0.00020644917094614357, -3.3854863431770355e-05, -0.0002330270071979612, -0.0005946775199845433, -1.311301275563892e-06, -5.483612312673358e-06, -4.529942543740617e-06, -1.8358061424805783e-05, -9.989239333663136e-05, -1.823885577323381e-05, -8.344646857949556e-07, -2.1815061700181104e-05, -0.0002907091984525323, -7.593343616463244e-05, -0.00033087024348787963, -0.0017013374017551541, -4.935142715112306e-05, -0.0003225283289793879, -9.262132516596466e-05, -0.0036336842458695173, -0.016615113243460655, -0.0003507714136503637, -0.0003240775258745998, -0.00010430268594063818, -0.0005860995152033865, -0.0028745303861796856, -1.5497195136049413e-06, -6.6756979322235566e-06, -7.748573807475623e-06, -2.777537883957848e-05, -0.0007600279641337693, -9.894321920000948e-06, -4.410734163684538e-06, -1.9073304429184645e-05, -0.0016277885297313333, -0.00016151554882526398, -0.0001209901092806831, -0.0006730675231665373, -0.00035386974923312664, -0.007578196004033089, -0.08803140372037888, -0.0004226268210913986, -0.15460799634456635, -2.0803236961364746, -0.12134206295013428, -0.2403145730495453, -0.10836901515722275, -0.636759340763092, -0.002753516426309943, -0.12898266315460205, -1.2306632995605469, -0.7624608278274536, -0.10240685194730759, -0.7092167139053345, -0.06289481371641159, -0.008267819881439209, -0.143321692943573, -0.0004990047891624272, -0.1272781640291214, -0.0065673235803842545, -0.002500266768038273, -2.0265558760002023e-06, -4.8040190449682996e-05, -2.6225699912174605e-05, -0.018223358318209648, -0.0001802282058633864, -0.0036390291061252356, -9.536738616588991e-07, -8.940656698541716e-06, -0.0018964892951771617, -0.0020905323326587677, -0.002035809215158224, -0.03257877007126808, -1.9550132492440753e-05, -0.08472374081611633, -1.4662635294371285e-05, -0.00038211196078918874, -0.00012015574611723423, -0.001757030957378447, -1.311301275563892e-06, -1.1086402082582936e-05, -0.026979023590683937, -0.00422074506059289, -0.04183619096875191, -0.0015573289711028337, -0.0793834999203682, -0.6566877365112305, -0.6274504065513611, -2.719123125076294, -0.0893368050456047, -0.17811471223831177, -0.005707277916371822, -0.18510106205940247, -0.031338270753622055, -0.2886892259120941, -0.0005117537220939994, -0.42024850845336914, -0.01081722229719162, -1.490067720413208, -1.3886139392852783, -0.0783253163099289, -2.9802276912960224e-06, -7.033100700937212e-05, -1.585470999998506e-05, -0.0012411518255248666, -0.00022718709078617394, -0.006269549019634724, -4.768370445162873e-07, -5.483612312673358e-06, -0.00036149643710814416, -0.4024069309234619, -0.00015245705435518175, -8.21318244561553e-05, -0.17129376530647278, -0.16463974118232727, -8.105902816168964e-05, -5.495397272170521e-05, -0.00042822727118618786, -0.0018700745422393084, -0.02467828430235386, -0.0003106111544184387, -0.06404749304056168, -0.37989670038223267, -1.390350580215454, -1.1169167757034302, -0.47483453154563904, -0.6784505248069763, -0.4326930642127991, -1.117806315422058, -0.5055458545684814, -0.0003897384158335626, -0.03456597030162811, -0.024558832868933678, -1.6093124941107817e-05, -7.152531907195225e-06, -0.0023473347537219524, -0.0005472592893056571, -4.1960789531003684e-05, -0.0008068405441008508, -0.002762194722890854, -0.00016425691137555987], "finish_reason": "length"}], "metrics": {"energy": 292.5185748119354, "energy_per_token": 1.1426506828591227, "time": 11.141282, "time_per_token": 0.0435206328125}}
{"outputs": [{"text": "target_path = Path(target_directory) / Path(zip_name + '.zip')\n\n    try:\n        source_path = Path(source_directory)\n    except FileNotFoundError:\n        raise OSError(\n            f\"Source directory {source_directory} does not exist!\")\n\n    files_to_zip = []\n    for ext in ['txt', 'docx', 'xlsx', 'csv']:\n        files_to_zip.extend(glob.glob(str(source_path / f'*{ext}'), recursive=True))\n\n    with zipfile.ZipFile(target_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for file in files_to_zip:\n            zip_file.write(str(file))\n\n    return str(target_path)", "tokens": ["target", "_", "path", " =", " Path", "(", "target", "_", "directory", ")", " /", " Path", "(", "zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "\n", "    ", "try", ":", "\n", "        ", "source", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "\n", "            ", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", "!", "\"", ")", "\n", "\n", "    ", "files", "_", "to", "_", "zip", " =", " []", "\n", "    ", "for", " ext", " in", " ['", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "']", ":", "\n", "        ", "files", "_", "to", "_", "zip", ".", "extend", "(", "glob", ".", "glob", "(", "str", "(", "source", "_", "path", " /", " f", "'", "*{", "ext", "}", "')", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", "_", "to", "_", "zip", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "str", "(", "file", "))", "\n", "\n", "    ", "return", " str", "(", "target", "_", "path", ")", "\n", "\n", "if"], "logprobs": [-4.300112724304199, -0.034106381237506866, -2.2770307064056396, -0.019968902692198753, -0.6350991129875183, -0.015606884844601154, -0.04819457605481148, -8.022463589441031e-05, -3.5523738915799186e-05, -0.0694948360323906, -1.0647928714752197, -1.2910313606262207, -0.011957867071032524, -0.06656215339899063, -5.113947918289341e-05, -0.0001248043408850208, -2.151390790939331, -0.27676922082901, -0.00035613393993116915, -0.00035744477645494044, -0.000816131301689893, -0.0447663851082325, -1.1618651151657104, -0.00046969347749836743, -2.407090187072754, -0.0007233387441374362, -0.006967296823859215, -0.005612448789179325, -0.9600389003753662, -0.030415557324886322, -0.42420151829719543, -0.03650911897420883, -0.017298534512519836, -0.0024898024275898933, -0.007529214955866337, -3.564294092939235e-05, -1.823885577323381e-05, -0.0014175852993503213, -0.12320404499769211, -0.6398391723632812, -0.0014778178883716464, -0.45043590664863586, -0.0001262346631847322, -4.768360213347478e-06, -0.5535356402397156, -0.014445840381085873, -0.0012493670219555497, -0.22758229076862335, -0.7986642718315125, -4.005352093372494e-05, -7.748573807475623e-06, -0.4995381236076355, -2.7777631282806396, -0.011903916485607624, -0.23874951899051666, -0.3485771715641022, -1.488153338432312, -0.1522175818681717, -0.7450436949729919, -0.012028539553284645, -8.928377064876258e-05, -0.08340330421924591, -0.07942688465118408, -0.5358988642692566, -0.0020914841443300247, -0.00836133398115635, -2.161041021347046, -0.18506331741809845, -0.4934244751930237, -0.1909780502319336, -0.10730969905853271, -0.00048387263086624444, -3.2617406845092773, -0.6887527704238892, -0.5666813850402832, -0.0003190723655279726, -0.14086011052131653, -0.03875439241528511, -1.0171692371368408, -0.009524027816951275, -0.7409107685089111, -0.4344724416732788, -2.0236854553222656, -0.050418101251125336, -0.41461628675460815, -2.187026023864746, -0.0007337023853324354, -9.238292841473594e-05, -0.004804376512765884, -0.008572801016271114, -0.001838304684497416, -0.0004435985756572336, -1.1920858014491387e-05, -0.0013525871327146888, -0.004320453852415085, -0.00027414379292167723, -0.0009133219718933105, -0.0006089740199968219, -2.9205850296420977e-05, -0.0008995062671601772, -0.002172492677345872, -0.005768319591879845, -0.0002978596603497863, -0.014397782273590565, -0.002483262214809656, -0.37731289863586426, -0.018494073301553726, -0.006067547015845776, -8.34430247778073e-05, -0.0020352143328636885, -0.44747117161750793, -0.0018600797047838569, -0.03639417514204979, -0.1945975124835968, -0.00024434918304905295, -0.022482626140117645, -0.021343894302845, -1.3912615776062012, -0.04118363931775093, -0.031310658901929855, -6.8662193370983e-05, -0.008937119506299496, -0.09613316506147385, -0.2636069059371948, -0.6436423063278198, -0.7513400912284851, -0.0014023480471223593, -2.091142177581787, -0.7126922607421875, -0.015689153224229813, -0.015467447228729725, -0.0056237103417515755, -0.17452770471572876, -0.002400732832029462, -0.004022484179586172, -0.11750780791044235, -0.001110771088860929, -0.5499207377433777, -0.2335643172264099, -0.0001662831346038729, -2.074220174108632e-05, -0.0043007503263652325, -0.0022865599021315575, -4.458328112377785e-05, -0.0032703985925763845, -0.47483202815055847, -0.00015984688070602715, -0.0002899941464420408, -0.008574101142585278, -0.22194235026836395, -0.03691073879599571, -1.065805196762085, -0.00019929806876461953, -0.7064094543457031, -0.00012051333033014089, -2.539125671319198e-05, -0.0019376566633582115, -0.0036599335726350546, -0.0005916990339756012, -0.0012710357550531626, -0.00019000156316906214, -0.00100514420773834, -0.05103180557489395, -8.260862523457035e-05, -0.45434990525245667, -0.1665429025888443, -0.11213289946317673, -0.0012515101116150618, -0.002347097033634782, -0.007727254647761583, -0.04019061475992203, -0.19779767096042633, -0.3555850684642792, -0.006315985694527626, -5.602820692729438e-06, -1.847726889536716e-05, -7.033323527139146e-06, -3.433168603805825e-05, -0.0001629458274692297, -0.0016613503685221076, -0.0018795934738591313, -0.13874366879463196, -0.0024755329359322786, -0.017924819141626358, -9.154854342341423e-05, -0.0003492222458589822, -0.000639710808172822, -2.9655189514160156, -0.0001931004080688581, -0.031373389065265656, -0.3046850860118866, -0.0159072894603014, -0.13651250302791595, -0.019904399290680885, -0.06854357570409775, -0.1620490998029709, -0.0005332001601345837, -0.02399604767560959, -8.583032467868179e-06, -0.005027272272855043, -0.3978847861289978, -0.35894471406936646, -0.006069916766136885, -0.6380695104598999], "finish_reason": "stop"}], "metrics": {"energy": 235.17556421852115, "energy_per_token": 1.1528213932280449, "time": 8.834221, "time_per_token": 0.043305004901960785}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n    if not source_directory.is_dir():\n        raise OSError(\"Invalid source directory\")\n\n    zip_path = target_directory / (zip_name + \".zip\")\n\n    valid_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    # Iterate through the files in the source directory and extract the ones with the right extensions\n    files_to_zip = glob.glob(os.path.join(source_directory, '*.*'))\n    files_to_zip = [file for file in files_to_zip if os.path.splitext(file)[-1] in valid_extensions]\n    zip_archive = zipfile.ZipFile(zip_path, 'w', compression=zipfile.ZIP_DEFLATED)\n    for file in files_to_zip:\n        zip_archive.write(file)\n    zip_archive.close()\n\n    return str(zip_path)\n\n", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", ".", "is", "_", "dir", "():", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Invalid", " source", " directory", "\"", ")", "\n", "\n", "    ", "zip", "_", "path", " =", " target", "_", "directory", " /", " (", "zip", "_", "name", " +", " \"", ".", "zip", "\"", ")", "\n", "\n", "    ", "valid", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " source", " directory", " and", " extract", " the", " ones", " with", " the", " right", " extensions", "\n", "    ", "files", "_", "to", "_", "zip", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "*", ".", "*", "'))", "\n", "    ", "files", "_", "to", "_", "zip", " =", " [", "file", " for", " file", " in", " files", "_", "to", "_", "zip", " if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")", "[-", "1", "]", " in", " valid", "_", "extensions", "]", "\n", "    ", "zip", "_", "archive", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "    ", "for", " file", " in", " files", "_", "to", "_", "zip", ":", "\n", "        ", "zip", "_", "archive", ".", "write", "(", "file", ")", "\n", "    ", "zip", "_", "archive", ".", "close", "()", "\n", "\n", "    ", "return", " str", "(", "zip", "_", "path", ")", "\n", "\n"], "logprobs": [-2.472193717956543, -0.03196806460618973, -0.1162259578704834, -0.13242296874523163, -0.27925360202789307, -0.0029640335123986006, -0.005835401825606823, -5.185469490243122e-05, -9.059865078597795e-06, -0.002380991354584694, -0.14078204333782196, -0.14738859236240387, -1.0701830387115479, -0.0032272657845169306, -0.0039702411741018295, -0.0027004939038306475, -0.0059697893448174, -0.00037245964631438255, -0.0014869834994897246, -2.1576648578047752e-05, -1.0132738680113107e-05, -0.0007618147064931691, -0.006644773297011852, -0.3867115080356598, -1.5496363639831543, -0.06809744983911514, -0.07921094447374344, -2.276871418871451e-05, -2.7417760065873154e-05, -0.0002796259068418294, -2.418734550476074, -2.169585604860913e-05, -0.015297114849090576, -0.00653653172776103, -0.013596544973552227, -0.0022217370569705963, -0.04071208834648132, -0.044954679906368256, -3.2543604902457446e-05, -4.6491513785440475e-06, -0.44454073905944824, -0.9411539435386658, -3.440330982208252, -0.21215581893920898, -0.11393072456121445, -1.3187123537063599, -0.003238910576328635, -0.01252157986164093, -1.053654670715332, -0.0005635818815790117, -1.6609280109405518, -0.04434806481003761, -1.9790043830871582, -0.009927777573466301, -0.6291396617889404, -2.0265558760002023e-06, -1.7762025890988298e-05, -0.07145759463310242, -0.6996443867683411, -0.052706241607666016, -0.00021610308613162488, -5.817244164063595e-05, -0.027392955496907234, -0.6015613675117493, -0.0004864939546678215, -0.00014709345123264939, -6.806619057897478e-05, -0.00028165188268758357, -0.027560081332921982, -0.7581091523170471, -0.00038092033355496824, -2.271005153656006, -0.005654767621308565, -0.07805511355400085, -0.0083291782066226, -0.8189943432807922, -0.026632016524672508, -0.0014821031363680959, -0.0004085659747943282, -6.246371776796877e-05, -0.0024414039216935635, -0.0005455912905745208, -0.0017045505810528994, -0.0007372760446742177, -0.00014590153296012431, -1.168244216387393e-05, -0.0007591941393911839, -0.00021252757869660854, -0.0010152667528018355, -6.69933797325939e-05, -0.0004518203204497695, -0.00014900050882715732, -1.9430925021879375e-05, -0.001019673072732985, -0.00026556302327662706, -0.001277822069823742, -0.013299797661602497, -0.00771826459094882, -0.5929389595985413, -0.00019035911827813834, -2.021152973175049, -3.361335277557373, -0.0332910381257534, -0.7082272171974182, -1.9473345279693604, -0.3739173710346222, -0.0868028849363327, -0.06692947447299957, -0.05281491577625275, -0.01502541545778513, -1.8593848943710327, -3.5052568912506104, -1.7490488290786743, -0.7683174014091492, -0.4147276282310486, -1.1741443872451782, -3.002129554748535, -0.5344489812850952, -0.17993615567684174, -0.002085417043417692, -1.3675583600997925, -0.4860304296016693, -0.14308761060237885, -2.539125671319198e-05, -0.19792981445789337, -0.014408945105969906, -3.020526885986328, -7.199982064776123e-05, -0.052677519619464874, -0.009590504691004753, -1.5672292709350586, -1.2636104656849056e-05, -0.00013314791431184858, -5.2689116273541003e-05, -0.001369372708722949, -0.000871159543748945, -0.011734272353351116, -1.9073304429184645e-05, -2.002696055569686e-05, -0.017265845090150833, -0.7476919293403625, -0.4526991546154022, -0.8831297755241394, -0.49053728580474854, -0.05685511231422424, -0.010668978095054626, -0.08671041578054428, -1.2572417259216309, -0.03952106088399887, -0.08202489465475082, -5.876845170860179e-05, -0.030430937185883522, -0.03142168000340462, -0.1510545164346695, -0.7820141911506653, -0.11390338838100433, -0.03867227956652641, -0.0010849310783669353, -0.0008516260422766209, -0.0006204110686667264, -4.768360213347478e-06, -1.2755313036905136e-05, -3.135155202471651e-05, -0.035299379378557205, -1.1358637809753418, -8.642300235806033e-05, -0.0012971091782674193, -0.00086198840290308, -0.3070719540119171, -0.0002494739310350269, -2.3841855067985307e-07, -7.879423355916515e-05, -0.011127203702926636, -1.2031317949295044, -0.004322709050029516, -0.0005098473629914224, -0.0032523376867175102, -0.15446612238883972, -0.002193784574046731, -3.576278118089249e-07, -3.576272320060525e-06, -0.009252408519387245, -0.0024635223671793938, -1.7400310039520264, -1.9028449058532715, -0.2515770494937897, -2.929377317428589, -0.004939140286296606, -0.04678960517048836, -0.00016223068814724684, -2.6940935640595853e-05, -0.004626759793609381, -0.0007415643776766956, -0.00016234986833296716, -0.0012942517641931772, -0.28723210096359253, -6.890059739816934e-05, -0.00033861625706776977, -0.011072501540184021, -0.138993501663208, -0.025648830458521843, -1.210218071937561, -0.00021050144277978688, -0.8467825055122375, -0.011988845653831959, -0.0007883778307586908, -3.6954811548639555e-06, -9.775113539944869e-06, -0.0026491330936551094, -0.0030061076395213604, -0.00019870213873218745, -0.002070903778076172, -0.00035124807618558407, -0.0014701997861266136, -0.041300203651189804, -0.009015212766826153, -0.5294783115386963, -0.05970373377203941, -0.047248974442481995, -0.3364573121070862, -0.0020502039697021246, -2.861018856492592e-06, -7.867782187531702e-06, -2.50339189733495e-06, -2.0861407392658293e-05, -7.4741430580616e-05, -0.001522930571809411, -0.0017973711946979165, -0.2761040925979614, -0.004143700934946537, -0.028112635016441345, -4.95898348162882e-05, -0.0006182666402310133, -0.00021062063751742244, -0.019589995965361595, -0.4702647626399994, -0.012447644956409931, -0.18189354240894318, -0.03148382902145386, -6.246371776796877e-05, -0.0014735327567905188, -3.421248038648628e-05, -0.00036530973738990724, -0.0009234455064870417, -0.006110320333391428, -0.4333744943141937, -0.0014177043922245502, -0.0871298536658287, -0.1709502935409546, -0.00027414379292167723, -0.013287210837006569, -2.2053474822314456e-05, -0.0017225203337147832, -0.5989046096801758, -0.3185575008392334, -0.011104804463684559], "finish_reason": "length"}], "metrics": {"energy": 289.11946127605415, "energy_per_token": 1.1293728956095865, "time": 11.153617, "time_per_token": 0.04356881640625}}
{"outputs": [{"text": "# Checking if the source directory exists\n    try:\n        os.path.exists(source_directory)\n    except FileNotFoundError:\n        raise OSError(f\"The source directory {source_directory} does not exist.\")\n\n    # List all files in the source directory\n    source_files = glob.glob(os.path.join(source_directory, \"*\"))\n\n    # Filtering the list of files based on file extensions\n    txt_files = [\n        file for file in source_files if os.path.splitext(file)[1] == \".txt\"\n    ]\n    docx_files = [\n        file for file in source_files if os.path.splitext(file)[1] == \".docx\"\n    ]\n    xlsx_files = [\n        file for file in source_files if os.path.splitext(file)[1] == \".xlsx\"\n    ]\n    csv_files = [\n        file for file in source_files if os.path.splitext(file)[1] == \".csv\"\n    ", "tokens": ["#", " Check", "ing", " if", " the", " source", " directory", " exists", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "path", ".", "exists", "(", "source", "_", "directory", ")", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "The", " source", " directory", " {", "source", "_", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " source", " directory", "\n", "    ", "source", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "#", " Filter", "ing", " the", " list", " of", " files", " based", " on", " file", " extensions", "\n", "    ", "txt", "_", "files", " =", " [", "\n", "        ", "file", " for", " file", " in", " source", "_", "files", " if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " ==", " \"", ".", "txt", "\"", "\n", "    ", "]", "\n", "    ", "doc", "x", "_", "files", " =", " [", "\n", "        ", "file", " for", " file", " in", " source", "_", "files", " if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " ==", " \"", ".", "doc", "x", "\"", "\n", "    ", "]", "\n", "    ", "x", "ls", "x", "_", "files", " =", " [", "\n", "        ", "file", " for", " file", " in", " source", "_", "files", " if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " ==", " \"", ".", "x", "ls", "x", "\"", "\n", "    ", "]", "\n", "    ", "csv", "_", "files", " =", " [", "\n", "        ", "file", " for", " file", " in", " source", "_", "files", " if", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", " ==", " \"", ".", "csv", "\"", "\n", "    "], "logprobs": [-1.4324654340744019, -1.0502543449401855, -2.931880474090576, -1.0864043235778809, -0.3943999111652374, -0.21417823433876038, -0.4639309048652649, -0.04629234969615936, -0.4712667763233185, -0.0029361017514020205, -2.862086772918701, -0.000586695212405175, -0.0022834674455225468, -0.003258991753682494, -1.276272177696228, -0.0008903353591449559, -1.7664198875427246, -0.00652978103607893, -1.4552539587020874, -0.00448020501062274, -0.00640873471274972, -0.0002867764269467443, -7.748303323751315e-05, -0.0005150898941792548, -0.031843360513448715, -0.11376924067735672, -0.011999799869954586, -0.4834289252758026, -0.0006043276516720653, -1.4543427823809907e-05, -0.42797282338142395, -0.011925119906663895, -0.001277345814742148, -0.25026077032089233, -0.989601194858551, -3.266281055402942e-05, -6.794906312279636e-06, -0.3842313289642334, -0.5109187960624695, -0.2579997181892395, -0.9443891048431396, -0.22925913333892822, -0.08079106360673904, -0.8376652002334595, -0.001925639808177948, -0.0001282609737245366, -0.00023278864682652056, -0.023384036496281624, -0.10769233107566833, -0.0017402517842128873, -0.0052891322411596775, -0.3059048056602478, -0.030169101431965828, -0.0008163695456460118, -0.0068658385425806046, -0.1575625091791153, -0.0012857988476753235, -0.24009482562541962, -3.6971285343170166, -0.9821010231971741, -0.9369992017745972, -1.1812562942504883, -0.06610319763422012, -0.04962491616606712, -0.020177580416202545, -1.298893690109253, -0.0007975496700964868, -1.9270557165145874, -0.00566199840977788, -0.3202833831310272, -0.040310733020305634, -0.3259962499141693, -7.462222856702283e-05, -0.010798000730574131, -0.007317408453673124, -0.4330432116985321, -1.8000440832111053e-05, -0.00011908298620255664, -0.00011157367407577112, -0.001019553979858756, -0.0008413827163167298, -0.005449914373457432, -2.3364747903542593e-05, -1.2159273865108844e-05, -0.0006741396500729024, -0.9423701763153076, -0.38101547956466675, -0.8160462975502014, -0.0765310600399971, -0.00529565429314971, -0.13708484172821045, -0.00043930893298238516, -0.07588121294975281, -1.3650076389312744, -0.9949796199798584, -1.091266393661499, -1.7132184505462646, -0.29538393020629883, -0.3799510598182678, -0.6878506541252136, -0.0007764662150293589, -3.337395429611206, -0.15927548706531525, -0.06000835821032524, -0.0010492063593119383, -0.9982316493988037, -0.015927821397781372, -0.024671770632267, -0.05879559740424156, -0.18767701089382172, -3.4210050106048584, -0.00997463520616293, -0.48181653022766113, -0.3879545331001282, -0.0023539948742836714, -0.0009400001727044582, -0.001420323271304369, -5.924526340095326e-05, -1.5258672647178173e-05, -0.12240476161241531, -0.6278079748153687, -4.494089080253616e-05, -0.00024828212917782366, -0.00021050144277978688, -0.12643863260746002, -0.0002512616047170013, -3.576278118089249e-07, -3.0636318115284666e-05, -0.01784917525947094, -0.15504421293735504, -0.0016721803694963455, -0.0018353299237787724, -0.6532024145126343, -0.0891924574971199, -0.0030140706803649664, -0.0008562712464481592, -7.271502545336261e-05, -0.051067598164081573, -0.011001288890838623, -0.0003985564399044961, -0.006123353261500597, -0.08258603513240814, -0.054851047694683075, -0.015548788011074066, -0.00013004888023715466, -0.00030214988510124385, -0.0011324428487569094, -0.0035537441726773977, -0.0171622633934021, -0.000653411028906703, -0.0010526598198339343, -0.015706520527601242, -8.4638240878121e-06, -5.2927523938706145e-05, -0.00021407696476671845, -1.7881377516459906e-06, -5.722029527532868e-06, -0.007169708609580994, -0.010931368917226791, -2.062299427052494e-05, -1.537788011773955e-05, -3.659658250398934e-05, -2.9682672902708873e-05, -2.932505594799295e-05, -5.722029527532868e-06, -3.397406908334233e-05, -0.00015198028995655477, -9.512448741588742e-05, -8.642300235806033e-05, -6.55629628454335e-05, -0.011663224548101425, -0.0008001701789908111, -0.00020823694649152458, -6.615896563744172e-05, -0.0003597089380491525, -2.455681169521995e-05, -0.0005970602505840361, -0.0005727558163926005, -4.2437604861333966e-05, -0.00011431517486926168, -0.0016643255949020386, -0.012537471950054169, -0.0005509527400135994, -0.0009099871967919171, -7.712543447269127e-05, -0.00011050090688513592, -0.00010299152199877426, -0.00038795097498223186, -0.002279661362990737, -0.00018761781393550336, -7.438383181579411e-05, -0.0012248402927070856, -2.50339189733495e-06, -1.585470999998506e-05, -9.775113539944869e-06, -1.311301275563892e-06, -2.145764938177308e-06, -0.0004961451631970704, -8.225102646974847e-05, -7.533743337262422e-05, -2.50339189733495e-06, -0.00011062010162277147, -7.033323527139146e-06, -1.6093124941107817e-05, -1.5497195136049413e-06, -4.565611743601039e-05, -1.4662635294371285e-05, -4.410734163684538e-06, -1.3947389561508317e-05, -6.079655122448457e-06, -0.001805105828680098, -0.0001245659514097497, -0.0006713996990583837, -0.00016640232934150845, -5.531158240046352e-05, -0.00016056202002801, -2.6940935640595853e-05, -0.0001411338453181088, -0.00025817399728111923, -1.4305012882687151e-05, -1.8596476365928538e-05, -0.004789784085005522, -0.00436757504940033, -3.0278701160568744e-05, -0.00028463127091526985, -0.0002821285743266344, -0.000571326119825244, -0.004924786742776632, -0.0001778444420779124, -6.007967749610543e-05, -0.0008762810612097383, -3.3378546504536644e-06, -9.059865078597795e-06, -9.894321920000948e-06, -4.0531076592742465e-06, -2.0265558760002023e-06, -0.00040070133400149643, -0.00013469743134919554, -1.6689286894688848e-06, -3.4570634852570947e-06, -1.0013530300057027e-05, -1.3351351299206726e-05, -2.7179348762729205e-05, -1.5497195136049413e-06, -1.156323378381785e-05, -1.2516897186287679e-05, -2.264974000354414e-06, -9.059865078597795e-06, -1.0013530300057027e-05, -0.0024650683626532555, -0.00011038171214750037, -9.810443589231e-05, -0.0002910667099058628, -2.7417760065873154e-05, -0.00013171759201213717, -0.0002851079625543207], "finish_reason": "length"}], "metrics": {"energy": 287.38145182037374, "energy_per_token": 1.122583796173335, "time": 11.143233, "time_per_token": 0.04352825390625}}
{"outputs": [{"text": "# check that the source directory exists\n    source_directory_path = Path(source_directory)\n    if not source_directory_path.exists():\n        raise OSError('Source directory does not exist')\n\n    # create the target directory if it doesn't exist\n    if not os.path.exists(target_directory):\n        os.makedirs(target_directory)\n\n    # get the list of files in the source directory\n    file_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    source_files = []\n    for extension in file_extensions:\n        source_files.extend(glob.glob(source_directory + '/**/*' + extension, recursive=True))\n\n    # get the path to the zip file\n    zip_file_path = os.path.join(target_directory, zip_name + '.zip')\n\n    # create the zip file\n    with zipfile.ZipFile(zip_file_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for source_file", "tokens": ["#", " check", " that", " the", " source", " directory", " exists", "\n", "    ", "source", "_", "directory", "_", "path", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "if", " not", " source", "_", "directory", "_", "path", ".", "exists", "():", "\n", "        ", "raise", " O", "SE", "rror", "('", "Source", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "#", " create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " get", " the", " list", " of", " files", " in", " the", " source", " directory", "\n", "    ", "file", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "source", "_", "files", " =", " []", "\n", "    ", "for", " extension", " in", " file", "_", "extensions", ":", "\n", "        ", "source", "_", "files", ".", "extend", "(", "glob", ".", "glob", "(", "source", "_", "directory", " +", " '", "/**", "/*", "'", " +", " extension", ",", " recursive", "=", "True", "))", "\n", "\n", "    ", "#", " get", " the", " path", " to", " the", " zip", " file", "\n", "    ", "zip", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "\n", "    ", "#", " create", " the", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " source", "_", "file"], "logprobs": [-1.4324654340744019, -2.5945611000061035, -2.3875985145568848, -0.7954491972923279, -0.2723274528980255, -0.5041723251342773, -0.03798724710941315, -0.13134504854679108, -0.0023347281385213137, -2.4461543560028076, -0.019013529643416405, -0.22650578618049622, -0.9811000227928162, -0.27900993824005127, -0.008525168523192406, -0.06945135444402695, -0.0022508781403303146, -0.0032153832726180553, -3.0517112463712692e-05, -7.152531907195225e-06, -0.001453534816391766, -0.11076773703098297, -0.02143164351582527, -0.03358098864555359, -0.044895414263010025, -0.056261539459228516, -4.23184028477408e-05, -9.298280929215252e-06, -0.0010068115079775453, -2.8609820219571702e-05, -0.00013124081306159496, -0.16270650923252106, -0.005851756781339645, -0.004669713322073221, -0.0013822296168655157, -0.050171878188848495, -0.06704084575176239, -2.729855441430118e-05, -1.537788011773955e-05, -1.538285732269287, -0.9313163161277771, -0.03699196130037308, -0.1421220749616623, -0.000262106885202229, -0.004443651996552944, -0.8980810046195984, -0.001909815357066691, -0.14548827707767487, -0.001210433547385037, -0.1330617368221283, -1.361304759979248, -0.39522072672843933, -0.19326795637607574, -0.04685114696621895, -0.19760936498641968, -0.03090597316622734, -0.7007868885993958, -0.0005588161875493824, -1.9073304429184645e-05, -0.09081470221281052, -0.09919698536396027, -0.0003406421164982021, -1.8502593040466309, -0.03299892321228981, -0.8038526177406311, -1.9311717551317997e-05, -0.0001971527235582471, -0.0011612584348767996, -0.20435422658920288, -0.0007463291985914111, -0.0231329295784235, -4.410734163684538e-06, -1.5258672647178173e-05, -0.003336697816848755, -0.002174633787944913, -0.0010674261720851064, -0.03894634172320366, -0.0002874914789572358, -0.03640222176909447, -1.4305012882687151e-05, -0.0002818902430590242, -8.022463589441031e-05, -0.002212102524936199, -7.748573807475623e-06, -7.271740287251305e-06, -0.04830396547913551, -0.004757988266646862, -0.033858757466077805, -0.0010683787986636162, -0.15463107824325562, -1.4013773202896118, -1.1795496940612793, -0.9493314027786255, -0.0010157431242987514, -0.5616950392723083, -1.6658210754394531, -0.02840409241616726, -0.026057040318846703, -0.006773605477064848, -0.6632502675056458, -0.00032062159152701497, -0.9135210514068604, -0.006722335238009691, -2.338613510131836, -0.10627574473619461, -0.08168922364711761, -0.08879940956830978, -0.003297370159998536, -0.0003777029050979763, -4.970903682988137e-05, -0.0033047369215637445, -0.00035470392322167754, -0.002198542468249798, -0.0006563892820850015, -9.989239333663136e-05, -6.9141146923357155e-06, -0.0005438040825538337, -0.00017796363681554794, -0.0012221018550917506, -6.0794889577664435e-05, -0.00048708971007727087, -0.0002747396647464484, -2.5629668016335927e-05, -0.0008064831490628421, -0.00030393750057555735, -0.0018626974197104573, -0.009898505173623562, -0.018307050690054893, -0.015586698427796364, -1.6795172691345215, -0.0005912224878557026, -0.23547498881816864, -0.06655266880989075, -2.2730774879455566, -0.0023818237241357565, -0.014916080981492996, -0.023982780054211617, -0.413735955953598, -0.002350783674046397, -0.0013342535821720958, -2.9802276912960224e-06, -2.1457441107486375e-05, -0.0001370812824461609, -0.0016066036187112331, -0.0007225048611871898, -0.19728165864944458, -7.438383181579411e-05, -0.004948748741298914, -0.29379403591156006, -0.0013003236381337047, -0.02751450426876545, -0.05578622221946716, -7.4741430580616e-05, -0.013256154954433441, -0.009891541674733162, -1.3136519193649292, -3.886147169396281e-05, -0.00016175392374861985, -1.3171420097351074, -1.1403305530548096, -1.1764899492263794, -0.06155654415488243, -0.12253216654062271, -0.0007273888913914561, -0.0016057705506682396, -0.03896182030439377, -0.01910627819597721, -0.006889043375849724, -0.02789250761270523, -0.0011011258466169238, -0.003669791854918003, -0.06068632751703262, -0.0008110094931907952, -0.056618694216012955, -2.856268882751465, -0.14500920474529266, -3.1635475158691406, -0.33771446347236633, -0.025673577561974525, -0.7500054240226746, -0.030104326084256172, -0.4828190207481384, -0.00040284625720232725, -0.1247633546590805, -0.015833839774131775, -0.7336991429328918, -0.08520586043596268, -0.09572691470384598, -0.0026334389112889767, -0.6222978830337524, -5.8412379075889476e-06, -0.0006363751017488539, -0.007984624244272709, -0.0026915771886706352, -0.00037281715776771307, -0.04894110560417175, -3.576278118089249e-07, -5.125986263010418e-06, -0.000837571220472455, -0.0808233916759491, -0.00012289722508285195, -0.00017975145601667464, -0.08361264318227768, -0.015522262081503868, -7.4741430580616e-05, -3.766942609217949e-05, -0.0011664974736049771, -0.002174158114939928, -0.05242574214935303, -0.00027307120035402477, -0.07441825419664383, -0.22851555049419403, -0.19245649874210358, -0.02729540504515171, -0.06461635231971741, -0.2599593698978424, -0.000460876093711704, -0.056994639337062836, -0.04300219565629959, -3.540453326422721e-05, -7.986990567587782e-06, -0.0030255992896854877, -0.0015731590101495385, -5.090107151772827e-05, -0.0006299418746493757, -0.0039016089867800474, -0.00021073981770314276, -0.00022980909852776676, -3.6477376852417365e-05, -2.0503786799963564e-05, -0.0001652104256208986, -0.07021985948085785, -0.008972445502877235, -1.0614714622497559, -7.521823135903105e-05, -0.8035707473754883, -7.188061863416806e-05, -1.2159273865108844e-05, -0.002252900041639805, -0.005932342726737261, -0.0009832315845414996, -0.0011033882619813085, -0.00019059749320149422, -0.0002708068350329995, -0.023304961621761322, -2.777537883957848e-05, -0.030441805720329285, -0.04667219519615173, -0.008279051631689072, -0.00021479207498487085, -0.0008037435472942889, -0.006209959741681814, -0.08648784458637238, -0.7524973750114441, -0.00454381387680769, -0.023904450237751007], "finish_reason": "length"}], "metrics": {"energy": 256.024046169281, "energy_per_token": 1.000093930348754, "time": 11.142093, "time_per_token": 0.04352380078125}}
{"outputs": [{"text": "try:\n        Path(source_directory).is_dir()\n    except FileNotFoundError as err:\n        raise OSError from err\n\n    if Path(target_directory).exists() is False:\n        os.makedirs(target_directory, exist_ok=True)\n\n    extensions = ['.txt', '.docx', '.xlsx', '.csv']\n    for extension in extensions:\n        for file_name in glob.glob(source_directory + extension):\n            if Path(file_name).exists():\n                zip_file_name = f\"{Path(target_directory) / zip_name}.zip\"\n                zip_file_path = f\"{Path(target_directory) / zip_file_name}\"\n\n                if zipfile.is_zipfile(zip_file_path):\n                    zipfile.ZipFile(zip_file_path, 'a').close()\n                else:\n                    with zipfile.ZipFile(zip_file_path, 'w') as zip_file:\n                        zip_file.write(", "tokens": ["try", ":", "\n", "        ", "Path", "(", "source", "_", "directory", ")", ".", "is", "_", "dir", "()", "\n", "    ", "except", " File", "NotFound", "Error", " as", " err", ":", "\n", "        ", "raise", " O", "SE", "rror", " from", " err", "\n", "\n", "    ", "if", " Path", "(", "target", "_", "directory", ")", ".", "exists", "()", " is", " False", ":", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "    ", "for", " extension", " in", " extensions", ":", "\n", "        ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "source", "_", "directory", " +", " extension", "):", "\n", "            ", "if", " Path", "(", "file", "_", "name", ")", ".", "exists", "():", "\n", "                ", "zip", "_", "file", "_", "name", " =", " f", "\"", "{", "Path", "(", "target", "_", "directory", ")", " /", " zip", "_", "name", "}", ".", "zip", "\"", "\n", "                ", "zip", "_", "file", "_", "path", " =", " f", "\"", "{", "Path", "(", "target", "_", "directory", ")", " /", " zip", "_", "file", "_", "name", "}\"", "\n", "\n", "                ", "if", " zip", "file", ".", "is", "_", "zip", "file", "(", "zip", "_", "file", "_", "path", "):", "\n", "                ", "    ", "zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "a", "')", ".", "close", "()", "\n", "                ", "else", ":", "\n", "                ", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "                ", "        ", "zip", "_", "file", ".", "write", "("], "logprobs": [-3.0052690505981445, -0.0005535738891921937, -0.008866345509886742, -0.009328469634056091, -2.429946184158325, -0.010681833140552044, -0.08870472013950348, -7.998623186722398e-05, -3.8265450712060556e-05, -0.0010145523119717836, -0.10089276731014252, -1.5379626750946045, -0.00043990471749566495, -0.07552744448184967, -0.010013701394200325, -0.1665121167898178, -0.1203378438949585, -0.0011757849715650082, -0.5375987887382507, -0.0007202415145002306, -6.794906312279636e-06, -1.278063416481018, -1.560058355331421, -0.008014662191271782, -0.007653201464563608, -0.0017970141489058733, -0.5737428665161133, -0.9430420994758606, -9.846202738117427e-05, -2.288792165927589e-05, -2.608327865600586, -0.00488421693444252, -0.02389385923743248, -0.3729020357131958, -0.0015353093622252345, -2.71561861038208, -2.8514158725738525, -0.012009575963020325, -0.29837971925735474, -1.4662635294371285e-05, -3.0397906812140718e-05, -0.006279973778873682, -0.008503065444529057, -0.7747135758399963, -0.9215943217277527, -0.6304669976234436, -0.08883540332317352, -0.019446903839707375, -0.030114969238638878, -0.005393240600824356, -1.532933235168457, -0.00010585224663373083, -0.12226741760969162, -0.00010907054820563644, -0.0007588367443531752, -0.0009501233580522239, -0.043017610907554626, -1.2397689715726301e-05, -4.0411134250462055e-05, -1.7704112529754639, -0.076898492872715, -1.7881377516459906e-06, -0.00011002412065863609, -0.009852352552115917, -0.010971341282129288, -0.009911371394991875, -0.02394902892410755, -0.21247011423110962, -0.001157448161393404, -2.842719078063965, -0.14983591437339783, -0.280494749546051, -0.05761951580643654, -0.00433991989120841, -0.00042167355422861874, -0.0002051381452474743, -0.0046023158356547356, -0.0009725131676532328, -0.002375758718699217, -0.000613143783994019, -0.00018320789968129247, -1.5139465176616795e-05, -0.001341872732155025, -0.0003225283289793879, -0.0017811877187341452, -9.655486064730212e-05, -0.0006417360855266452, -0.0001805857609724626, -4.3748852476710454e-05, -0.0011373248416930437, -0.00036542891757562757, -0.0017347777029499412, -0.014645452611148357, -0.011908039450645447, -0.5514400601387024, -1.8947443962097168, -1.031158208847046, -0.010916512459516525, -0.008249612525105476, -0.0005323661607690156, -0.005337274633347988, -0.027202021330595016, -1.3490628004074097, -0.6068464517593384, -1.2954915761947632, -0.5561376810073853, -0.0067210327833890915, -0.13539306819438934, -7.283422019099817e-05, -0.1202813982963562, -0.015443384647369385, -1.3849599361419678, -9.65590606938349e-06, -2.9444261599564925e-05, -0.039800506085157394, -0.528203010559082, -0.07324112951755524, -0.004774597939103842, -0.019978486001491547, -2.621331214904785, -0.9007253646850586, -0.011794828809797764, -0.09316115081310272, -0.0005169962532818317, -0.00016115797916427255, -0.0027119070291519165, -0.004697359632700682, -0.620155930519104, -0.34919336438179016, -0.020419035106897354, -0.014906215481460094, -1.3961021900177002, -0.11466283351182938, -0.9610705375671387, -0.5051681399345398, -0.21552017331123352, -0.008130074478685856, -2.1482787132263184, -0.42087554931640625, -0.007291136309504509, -1.5132114887237549, -0.0030509138014167547, -1.1770222187042236, -9.059865078597795e-06, -1.2040065485052764e-05, -0.08960125595331192, -0.7216199040412903, -1.2218478918075562, -0.00028725311858579516, -0.00040082051418721676, -1.4455115795135498, -0.005525079555809498, -0.0032160962000489235, -0.0005230727256275713, -0.02110394835472107, -0.08991587162017822, -1.568449854850769, -0.132041335105896, -0.6033598184585571, -1.8031805753707886, -0.31116315722465515, -0.006403049454092979, -2.0696043968200684, -0.031826846301555634, -0.03559887409210205, -0.40830573439598083, -0.00802849791944027, -0.8261650800704956, -1.4662635294371285e-05, -0.0016404041089117527, -0.04322792589664459, -0.03197753056883812, -0.19545979797840118, -0.000359351426595822, -0.1201649159193039, -0.00042846560245379806, -0.00010907054820563644, -0.027110137045383453, -0.018848128616809845, -1.8914687633514404, -0.006328423973172903, -2.066359043121338, -2.4238221645355225, -0.326665997505188, -0.0005654881824739277, -0.0061444430612027645, -1.7762025890988298e-05, -0.003509317059069872, -0.000277123210253194, -0.0012404375011101365, -0.05322981998324394, -0.0006385194719769061, -0.00029202012228779495, -0.0013141338713467121, -0.023899562656879425, -0.5306588411331177, -0.023422466591000557, -0.0024546037893742323, -0.0038250156212598085, -0.9053828120231628, -0.7865241765975952, -0.027892276644706726, -0.07446594536304474, -0.001379848807118833, -0.0017884464468806982, -0.02448241040110588, -0.03905170410871506, -0.006583074573427439, -0.0004949536523781717, -3.707340147229843e-05, -0.01795830763876438, -0.22105148434638977, -0.3616054058074951, -0.5082387328147888, -0.14777274429798126, -0.24139036238193512, -0.5815435647964478, -0.004470236133784056, -0.03227883204817772, -0.17681938409805298, -0.25600865483283997, -0.0003216941258870065, -0.0021005249582231045, -0.0030687404796481133, -0.0003237200144212693, -0.6866946220397949, -0.05300509184598923, -0.00028880240279249847, -3.0278701160568744e-05, -0.0017485818825662136, -6.615896563744172e-05, -0.0002294515579706058, -0.0013006808003410697, -0.01663094200193882, -0.0009685831028036773, -9.023735765367746e-05, -1.537788011773955e-05, -0.015680352225899696, -0.0007077334448695183, -0.05984713137149811, -0.04975275322794914, -0.4157463312149048, -0.0008231588872149587, -0.29978305101394653, -0.13525281846523285, -0.0879078283905983, -0.002990300301462412, -0.0018753099720925093, -0.0027220123447477818, -0.002026291796937585, -0.06253373622894287, -0.0026529375463724136, -0.004925617016851902, -0.0010921949287876487, -0.01528161857277155, -0.001471271039918065], "finish_reason": "length"}], "metrics": {"energy": 268.50500088787084, "energy_per_token": 1.0488476597182455, "time": 11.348927, "time_per_token": 0.04433174609375}}
{"outputs": [{"text": "# Check if the source_directory exists\n    if not os.path.exists(source_directory):\n        raise OSError(\"The source directory does not exist.\")\n\n    # Define the extensions to zip\n    extensions_to_zip = ['.txt', '.docx', '.xlsx', '.csv']\n\n    # Create a list of paths to files to be zipped\n    file_paths = [p for p in Path(source_directory).glob(\"*.*\") if p.suffix.lower() in extensions_to_zip]\n\n    # Create a new zip file with the specified name and save it in the target directory\n    with zipfile.ZipFile(os.path.join(target_directory, zip_name + \".zip\"), 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for file_path in file_paths:\n            zip_file.write(file_path)\n\n    # Return the path to the created zip file\n    return os.path.join(target_directory, zip_name + \"", "tokens": ["#", " Check", " if", " the", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "The", " source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Define", " the", " extensions", " to", " zip", "\n", "    ", "extensions", "_", "to", "_", "zip", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "#", " Create", " a", " list", " of", " paths", " to", " files", " to", " be", " z", "ipped", "\n", "    ", "file", "_", "paths", " =", " [", "p", " for", " p", " in", " Path", "(", "source", "_", "directory", ")", ".", "glob", "(", "\"", "*", ".", "*", "\"", ")", " if", " p", ".", "suff", "ix", ".", "lower", "()", " in", " extensions", "_", "to", "_", "zip", "]", "\n", "\n", "    ", "#", " Create", " a", " new", " zip", " file", " with", " the", " specified", " name", " and", " save", " it", " in", " the", " target", " directory", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " \"", ".", "zip", "\"", ")", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " zip", " file", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " \""], "logprobs": [-1.4324654340744019, -1.0502543449401855, -0.6037402749061584, -0.5048860311508179, -0.12209989130496979, -0.9899027347564697, -0.003144797869026661, -0.04836541786789894, -0.31932753324508667, -0.00195526541210711, -0.14885951578617096, -0.023964857682585716, -0.04533947631716728, -1.6569954823353328e-05, -0.00022230061586014926, -0.0024175008293241262, -0.24312463402748108, -0.00030787018476985395, -0.0020810156129300594, -9.60780744208023e-05, -3.123234637314454e-05, -0.0009480987209826708, -0.004935344215482473, -0.0015368566382676363, -0.04613128677010536, -0.047884855419397354, -2.5629668016335927e-05, -4.172316494077677e-06, -0.2972985506057739, -1.1860946416854858, -1.0696096420288086, -0.06810368597507477, -0.32728123664855957, -0.0320359505712986, -0.0002681849291548133, -0.001683605252765119, -0.2328210026025772, -0.019322501495480537, -0.00025876989820972085, -0.006765080615878105, -0.08867450058460236, -0.0011479223612695932, -0.13349993526935577, -2.936467170715332, -0.4369383454322815, -2.7965893745422363, -0.7164640426635742, -1.957580327987671, -0.2095019817352295, -0.0006911749369464815, -0.2237977534532547, -2.0291101932525635, -0.03837060555815697, -0.00011383838864276186, -0.01054465677589178, -0.007434321567416191, -0.22676780819892883, -0.05330509692430496, -0.004231309983879328, -0.0011393491877242923, -4.792098479811102e-05, -0.0020072567276656628, -0.00038020533975213766, -0.0026377192698419094, -0.0005664412747137249, -0.0004828002711292356, -1.1086402082582936e-05, -0.0005152089870534837, -0.00019464982324279845, -0.0010698077967390418, -8.535020606359467e-05, -0.00040451448876410723, -0.0004822045157197863, -2.288792165927589e-05, -0.0005617947317659855, -0.00015805903240107, -0.0012943708570674062, -0.009049235843122005, -0.003190667135640979, -0.04197920113801956, -0.00031192204914987087, -0.03216801956295967, -1.3595693111419678, -1.9603406190872192, -0.8950451612472534, -0.09213908761739731, -3.0259931087493896, -0.2222757190465927, -1.568756103515625, -0.3678605258464813, -0.3876757323741913, -0.031259935349226, -9.715084888739511e-05, -0.1401665359735489, -0.0006115949945524335, -1.1143062114715576, -0.019819671288132668, -0.06392337381839752, -0.03007320873439312, -1.667016863822937, -4.21722412109375, -0.016567979007959366, -0.012903174385428429, -0.016185084357857704, -1.204508900642395, -0.002688723849132657, -0.0017903504194691777, -3.349725011503324e-05, -2.1576648578047752e-05, -0.00026174934464506805, -0.00011014331539627165, -0.9594010710716248, -1.5498249530792236, -0.028739020228385925, -0.6626635193824768, -1.8107635974884033, -0.25513386726379395, -0.00195312371943146, -0.059418562799692154, -0.0786367729306221, -0.2654672861099243, -0.0012727025896310806, -0.12951985001564026, -2.8967437174287625e-05, -1.0308605432510376, -0.002310228068381548, -0.000440262199845165, -0.009311698377132416, -0.0018892312655225396, -1.3828182090946939e-05, -5.125986263010418e-06, -1.168244216387393e-05, -1.2874520507466514e-05, -0.0253501757979393, -0.005157499574124813, -0.07117319852113724, -0.00024303820100612938, -0.04042087495326996, -0.6295914053916931, -0.7433755397796631, -3.299034833908081, -0.21582254767417908, -0.20581410825252533, -1.3487753868103027, -0.1289483904838562, -1.244837999343872, -0.14366239309310913, -1.221817970275879, -0.5358387231826782, -0.16190777719020844, -1.526963710784912, -0.024660490453243256, -0.10843639820814133, -0.047605499625205994, -0.04041709750890732, -0.0013184197014197707, -0.39371976256370544, -0.0707859992980957, -8.332382276421413e-05, -1.3708974620385561e-05, -0.0028449322562664747, -0.0009049849468283355, -6.19869097135961e-05, -0.003819315228611231, -0.559929370880127, -2.0265558760002023e-06, -0.0013990148436278105, -0.00018714107864070684, -0.002481716452166438, -0.0006860524881631136, -0.013018965721130371, -3.4570634852570947e-06, -3.40932747349143e-05, -0.0011595914838835597, -0.41148316860198975, -0.00021681819634977728, -8.666139910928905e-05, -0.32836171984672546, -0.6519242525100708, -0.0004761277523357421, -0.00014661667228210717, -7.462222856702283e-05, -0.0020374746527522802, -0.0005161621957086027, -0.8276349902153015, -0.01187246385961771, -1.5721473693847656, -0.0004210777406115085, -0.30740976333618164, -0.00011777184408856556, -2.4914430468925275e-05, -0.0011486368020996451, -0.0060881637036800385, -0.0008733034483157098, -0.0014617482665926218, -0.0002563863235991448, -0.000649956171400845, -0.016066843643784523, -0.00012396997772157192, -0.16841484606266022, -0.17173229157924652, -0.06257371604442596, -0.0003871168300975114, -0.0007540719816461205, -0.005770453251898289, -0.0376175157725811, -0.6226695775985718, -0.08129365742206573, -0.0011261318577453494, -0.00023064337437972426, -0.0073039173148572445, -2.264974000354414e-06, -5.245195097813848e-06, -6.23445157543756e-05, -0.0012738931691274047, -0.0013815154088661075, -0.0435127317905426, -0.0004502712981775403, -0.011324886232614517, -7.402622577501461e-05, -0.00026663561584427953, -0.00011622230522334576, -0.06137717887759209, -2.7418097943154862e-06, -7.629103492945433e-05, -0.965904951095581, -0.02024872601032257, -0.06086794659495354, -0.017969898879528046, -0.7799448370933533, -0.13469192385673523, -0.012713219039142132, -1.4411407709121704, -0.14783115684986115, -0.0011288706446066499, -0.29253333806991577, -0.017436545342206955, -0.005574988666921854, -0.1211419478058815, -0.0003978414461016655, -0.02686425857245922, -0.04702107980847359, -4.8636207793606445e-05, -8.022463589441031e-05, -0.002017844934016466, -0.01318262703716755, -0.00026544384309090674, -0.008226321078836918, -2.9444261599564925e-05, -5.722029527532868e-06, -0.0007002285565249622, -0.019794894382357597, -2.7417760065873154e-05, -0.004250777419656515, -0.012940713204443455, -0.02331823855638504], "finish_reason": "length"}], "metrics": {"energy": 292.23305260467555, "energy_per_token": 1.1415353617370139, "time": 11.147493, "time_per_token": 0.04354489453125}}
{"outputs": [{"text": "source_directory = Path(source_directory)\n    target_directory = Path(target_directory)\n    target_directory.mkdir(exist_ok=True, parents=True)\n    zip_name = f\"{zip_name}.zip\"\n\n    for file_name in glob.glob(str(source_directory / '**/*.txt')):\n        zipfile.ZipFile(target_directory / zip_name, 'a').write(file_name)\n\n    for file_name in glob.glob(str(source_directory / '**/*.docx')):\n        zipfile.ZipFile(target_directory / zip_name, 'a').write(file_name)\n\n    for file_name in glob.glob(str(source_directory / '**/*.xlsx')):\n        zipfile.ZipFile(target_directory / zip_name, 'a').write(file_name)\n\n    for file_name in glob.glob(str(source_directory / '**/*.csv')):\n        zipfile.ZipFile(target_directory / zip_", "tokens": ["source", "_", "directory", " =", " Path", "(", "source", "_", "directory", ")", "\n", "    ", "target", "_", "directory", " =", " Path", "(", "target", "_", "directory", ")", "\n", "    ", "target", "_", "directory", ".", "mk", "dir", "(", "exist", "_", "ok", "=", "True", ",", " parents", "=", "True", ")", "\n", "    ", "zip", "_", "name", " =", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", "\n", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "str", "(", "source", "_", "directory", " /", " '", "**", "/*", ".", "txt", "'))", ":", "\n", "        ", "zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "directory", " /", " zip", "_", "name", ",", " '", "a", "')", ".", "write", "(", "file", "_", "name", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "str", "(", "source", "_", "directory", " /", " '", "**", "/*", ".", "doc", "x", "'))", ":", "\n", "        ", "zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "directory", " /", " zip", "_", "name", ",", " '", "a", "')", ".", "write", "(", "file", "_", "name", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "str", "(", "source", "_", "directory", " /", " '", "**", "/*", ".", "x", "ls", "x", "'))", ":", "\n", "        ", "zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "directory", " /", " zip", "_", "name", ",", " '", "a", "')", ".", "write", "(", "file", "_", "name", ")", "\n", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "str", "(", "source", "_", "directory", " /", " '", "**", "/*", ".", "csv", "'))", ":", "\n", "        ", "zip", "file", ".", "Z", "ip", "File", "(", "target", "_", "directory", " /", " zip", "_"], "logprobs": [-2.472193717956543, -0.03196806460618973, -0.1162259578704834, -0.13242296874523163, -0.27925360202789307, -0.0029640335123986006, -0.005835401825606823, -5.185469490243122e-05, -9.059865078597795e-06, -0.002380991354584694, -0.14078204333782196, -0.14738859236240387, -1.0701830387115479, -0.0032272657845169306, -0.0039702411741018295, -0.0027004939038306475, -0.0059697893448174, -0.00037245964631438255, -0.0014869834994897246, -2.1576648578047752e-05, -1.0132738680113107e-05, -0.0007618147064931691, -0.006644773297011852, -0.3867115080356598, -2.4233202934265137, -0.016314921900629997, -0.09750492870807648, -0.011393600143492222, -0.00790444016456604, -2.002696055569686e-05, -0.0007148809381760657, -1.3403717279434204, -5.364274329622276e-05, -1.4662635294371285e-05, -0.004468812141567469, -0.0019665679428726435, -0.5157005190849304, -0.007166986353695393, -0.0002867764269467443, -0.0010181248653680086, -0.0038737035356462, -0.01542272511869669, -0.5953905582427979, -0.7054285407066345, -0.019881727173924446, -0.17925281822681427, -0.1668507605791092, -0.9452375173568726, -0.3409222662448883, -0.0022136487532407045, -0.3998318910598755, -0.00040368037298321724, -0.0001137191939051263, -0.032034795731306076, -0.000311802898067981, -0.00034433635300956666, -0.00010632903286023065, -0.042016349732875824, -0.6674042344093323, -0.0003861635341309011, -2.794194221496582, -1.112649917602539, -0.9450613260269165, -0.8289811611175537, -0.028698593378067017, -0.3234074115753174, -8.83301836438477e-05, -0.146036759018898, -0.019682807847857475, -2.292130947113037, -0.00863863155245781, -0.022530296817421913, -1.728519782773219e-05, -7.629365427419543e-06, -0.31087756156921387, -0.6620913147926331, -1.1490217447280884, -0.3560808300971985, -0.3662222623825073, -0.18936367332935333, -0.8932324051856995, -0.3388926386833191, -0.014837624505162239, -0.02047988586127758, -2.109201431274414, -2.3471884727478027, -0.03582225739955902, -0.12831149995326996, -0.0012278169160708785, -0.0017676219576969743, -0.014373810961842537, -0.9162396192550659, -5.721882189391181e-05, -0.00017307691450696439, -0.0394817553460598, -0.08655398339033127, -3.7431014789035544e-05, -0.0002554328821133822, -0.001416513929143548, -0.281261146068573, -0.2468254119157791, -0.5121412873268127, -0.07218551635742188, -0.007751740515232086, -0.0018431833013892174, -0.16035805642604828, -0.0018096276326104999, -0.0002865380665753037, -0.0946153998374939, -0.010013346560299397, -0.5584351420402527, -0.03506655618548393, -0.21131950616836548, -0.005185131914913654, -0.0003358753747306764, -0.0003369478799868375, -0.001082073082216084, -0.001291751628741622, -0.00014590153296012431, -0.0001225396408699453, -0.0013365155318751931, -0.0017087158048525453, -8.332382276421413e-05, -0.0014892450999468565, -3.099436753473128e-06, -8.344646857949556e-07, -0.0009386900928802788, -0.0013678251998499036, -0.0012053137179464102, -0.0014760324265807867, -0.0008055302896536887, -0.030334144830703735, -0.0026301098987460136, -0.0002982171718031168, -5.531158240046352e-05, -0.0004080893413629383, -0.0005783553933724761, -0.0060133966617286205, -0.0002571013756096363, -5.245195097813848e-06, -2.610649426060263e-05, -1.3708974620385561e-05, -5.722029527532868e-06, -4.160317621426657e-05, -0.0005585778853856027, -1.0728830375228426e-06, -5.960462772236497e-07, -0.0001754606782924384, -0.00048411093303002417, -7.033323527139146e-06, -1.1920928244535389e-07, -0.00011157367407577112, -0.0007420408655889332, -0.00014935807848814875, -0.00021884430316276848, -0.00011777184408856556, -0.00020776021119672805, -0.00022289653134066612, -0.0016858663875609636, -2.3841855067985307e-07, -8.940656698541716e-06, -0.0010698077967390418, -0.0004487222759053111, -0.015119356103241444, -0.00022075122979003936, -0.0007588367443531752, -7.080780778778717e-05, -2.2172682292875834e-05, -4.3987260141875595e-05, -2.1576648578047752e-05, -0.00023815179883968085, -2.038458114839159e-05, -0.00011073929636040702, -9.321732068201527e-05, -8.391981828026474e-05, -1.811964830267243e-05, -5.2689116273541003e-05, -4.291525328881107e-06, -2.3841855067985307e-07, -0.00012599628826137632, -0.00012289722508285195, -0.00022671037004329264, -6.19869097135961e-05, -0.00019262365822214633, -0.004729157313704491, -9.97731985989958e-05, -0.0008538890979252756, -3.8265450712060556e-05, -1.7762025890988298e-05, -8.225102646974847e-05, -0.00018606838420964777, -0.001321991323493421, -2.1815061700181104e-05, -4.768370445162873e-07, -1.1086402082582936e-05, -1.0490362910786644e-05, -2.7418097943154862e-06, -6.079655122448457e-06, -3.6000557884108275e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -5.2689116273541003e-05, -8.248942322097719e-05, -1.9073468138230965e-06, -2.3841855067985307e-07, -3.4450891689630225e-05, -0.00026425207033753395, -5.376194530981593e-05, -4.005352093372494e-05, -2.1219027985353023e-05, -4.136476854910143e-05, -1.645074735279195e-05, -0.00012218205665703863, 0.0, -2.3841830625315197e-06, -0.0004182179400231689, -0.00042965717148035765, -0.0010758809512481093, -0.00016342257731594145, -0.006004864815622568, -0.00012492353562265635, -0.00010895135346800089, -0.00013445904187392443, -5.566918844124302e-05, -0.0003817544784396887, -7.247662142617628e-05, -0.0002479245886206627, -0.00018261195509694517, -7.354942499659956e-05, -3.981510963058099e-05, -9.262132516596466e-05, -9.65590606938349e-06, -4.768370445162873e-07, -0.000105375460407231, -0.0001006075763143599, -0.0002812943421304226, -0.00014494798961095512, -0.0001720042055239901, -0.0017641709418967366, -6.341733387671411e-05, -3.6477376852417365e-05, -0.00011860620725201443, -0.00023398046323563904, -0.001526977401226759, -3.242440288886428e-05, -9.536738616588991e-07, -1.4543427823809907e-05, -5.125986263010418e-06, -3.099436753473128e-06, -1.6689160474925302e-05, -6.5205356804654e-05, -2.145764938177308e-06, -3.576278118089249e-07, -8.05822346592322e-05, -0.00017772526189219207, -2.3841830625315197e-06], "finish_reason": "length"}], "metrics": {"energy": 264.80934432029744, "energy_per_token": 1.0344115012511619, "time": 11.150095, "time_per_token": 0.04355505859375}}
{"outputs": [{"text": "# Ensure the source_directory exists\n    if not os.path.exists(source_directory):\n        raise OSError(\"Source directory does not exist\")\n\n    # Get all files with a .txt or .docx or .xlsx or .csv extension in source_directory\n    source_files = glob.glob(f\"{source_directory}/*.{['txt', 'docx', 'xlsx', 'csv']}\")\n\n    # Create the target directory if it doesn't exist\n    os.makedirs(target_directory, exist_ok=True)\n\n    # Get the full path to the zip file\n    zip_file_path = os.path.join(target_directory, f\"{zip_name}.zip\")\n\n    # Create the zip file\n    with zipfile.ZipFile(zip_file_path, 'w') as zip_file:\n        for source_file in source_files:\n            # Get the relative path from the source_directory to the source_file\n            relative_path = os.path.relpath(source_", "tokens": ["#", " Ensure", " the", " source", "_", "directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "\"", "Source", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " with", " a", " ", ".", "txt", " or", " ", ".", "doc", "x", " or", " ", ".", "x", "ls", "x", " or", " ", ".", "csv", " extension", " in", " source", "_", "directory", "\n", "    ", "source", "_", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "source", "_", "directory", "}", "/*", ".", "{", "['", "txt", "'", ",", " '", "doc", "x", "'", ",", " '", "x", "ls", "x", "'", ",", " '", "csv", "']", "}\"", ")", "\n", "\n", "    ", "#", " Create", " the", " target", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Get", " the", " full", " path", " to", " the", " zip", " file", "\n", "    ", "zip", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " f", "\"", "{", "zip", "_", "name", "}", ".", "zip", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " source", "_", "file", " in", " source", "_", "files", ":", "\n", "            ", "#", " Get", " the", " relative", " path", " from", " the", " source", "_", "directory", " to", " the", " source", "_", "file", "\n", "            ", "relative", "_", "path", " =", " os", ".", "path", ".", "rel", "path", "(", "source", "_"], "logprobs": [-1.4324654340744019, -3.948042392730713, -0.7250718474388123, -0.3715085983276367, -1.1549508571624756, -0.004735445603728294, -0.07709827274084091, -0.36958441138267517, -0.0015518538421019912, -0.15594646334648132, -0.020885774865746498, -0.051200803369283676, -1.490105023549404e-05, -0.00015054999676067382, -0.0027164246421307325, -0.3781902492046356, -0.00024923557066358626, -0.0012807984603568912, -0.00012194366718176752, -2.253030106658116e-05, -0.0010421803453937173, -0.0053930035792291164, -0.001348539488390088, -0.03470023721456528, -0.049029190093278885, -2.1219027985353023e-05, -5.602820692729438e-06, -0.25731149315834045, -1.3154778480529785, -0.6262014508247375, -0.01700698584318161, -0.09281952679157257, -0.0001174142598756589, -0.0024317714851349592, -1.4222124814987183, -0.0006071869283914566, -0.003984014969319105, -0.0872158408164978, -0.0009396428358741105, -0.15036068856716156, -2.3355793952941895, -0.8567883372306824, -1.0279062986373901, -0.6898135542869568, -2.9054226875305176, -2.5159521102905273, -0.000706780469045043, -0.02270347997546196, -2.363849401473999, -0.03994953632354736, -5.590759246842936e-05, -0.06724650412797928, -0.0011080323019996285, -0.341830849647522, -0.0015942256432026625, -3.2186455882765586e-06, -0.00824251864105463, -0.0006754500791430473, -0.0018092705868184566, -0.03336114063858986, -0.0008880723617039621, -4.768360213347478e-06, -0.0010937429033219814, -0.013241096399724483, -1.2378166913986206, -2.6355950832366943, -0.05111415311694145, -0.0030131200328469276, -0.08898526430130005, -0.00116637849714607, -2.1878414154052734, -0.003931294661015272, -0.16217561066150665, -0.02352912724018097, -0.27998051047325134, -6.508615479106084e-05, -0.010097375139594078, -0.0038290531374514103, -2.4136176109313965, -0.08482778072357178, -0.001215077005326748, -0.006392625626176596, -3.9934315282152966e-05, -9.059865078597795e-06, -0.7117388844490051, -0.030894992873072624, -0.014846199192106724, -1.1479631662368774, -1.9578545093536377, -0.07079577445983887, -0.0007767044589854777, -0.0001740304142003879, -0.066444031894207, -0.00256423931568861, -0.0010255083907395601, -0.00036769305006600916, -9.667406266089529e-05, -0.0021130156237632036, -0.001679201959632337, -0.00017009719158522785, -0.0007666985620744526, -0.000649956171400845, -8.725739462533966e-05, -0.0017197832930833101, -0.0005091324565000832, -0.09386618435382843, -0.01270756870508194, -0.029280735179781914, -0.0026385514065623283, -0.10910338908433914, -0.0002901133266277611, -0.07055884599685669, -0.6348264813423157, -0.7431483864784241, -0.30273646116256714, -0.26877206563949585, -0.15523551404476166, -0.019066162407398224, -0.5131795406341553, -0.00015424491721205413, -4.291525328881107e-06, -0.08813008666038513, -0.09870990365743637, -0.0002224197960458696, -2.7273755073547363, -3.85038583772257e-05, -0.001379372552037239, -3.3378546504536644e-06, -0.00014304091746453196, -7.426462980220094e-05, -0.06268960237503052, -1.9311717551317997e-05, -2.002696055569686e-05, -0.0010043105576187372, -0.002520957263186574, 0.0, -7.211902266135439e-05, -0.003594843437895179, -0.0006354220095090568, -0.00018773700867313892, -0.004094195086508989, -0.023473702371120453, -0.00018749863374978304, -0.03231564909219742, -2.795985460281372, -0.11534915864467621, -0.9050445556640625, -0.08234278112649918, -0.19519895315170288, -0.023441797122359276, -0.601809024810791, -0.03454454988241196, -0.6447335481643677, -0.0003980797773692757, -0.17162546515464783, -0.008544079959392548, -1.4933531284332275, -0.2912251055240631, -0.026473326608538628, -0.0009519098093733191, -0.2866136431694031, -1.168244216387393e-05, -0.00021610308613162488, -0.008073552511632442, -0.0017087158048525453, -0.00013565097469836473, -0.04058091342449188, -2.95634672511369e-05, -2.622600959512056e-06, -0.0002884448622353375, -0.30841806530952454, -0.032222848385572433, -0.00047291061491705477, -0.006738557480275631, -3.218599158572033e-05, -8.844937838148326e-05, -0.0015732781030237675, -6.55629628454335e-05, -0.0005696581210941076, -5.1973900554003194e-05, -0.0003474347176961601, -0.002254327293485403, -0.0155132245272398, -0.0002824861148837954, -0.06556432694196701, -0.37706780433654785, -0.4020657539367676, -0.04722214117646217, -0.06662549823522568, -0.6104570031166077, -0.0004328744253143668, -0.027677318081259727, -0.03402676433324814, -1.8596476365928538e-05, -7.510157047363464e-06, -0.002949414076283574, -0.0014734136639162898, -3.8265450712060556e-05, -0.0002637753786984831, -0.008903328329324722, -0.00017510310863144696, -0.00010251473577227443, -9.393251093570143e-05, -1.2993727978027891e-05, -0.0002053765201708302, -0.38181272149086, -0.00710969977080822, -0.4483982026576996, -3.4689302992774174e-05, -0.03290180489420891, -0.05917207524180412, -0.012701683677732944, -8.95221673999913e-05, -0.0010942192748188972, -0.006926809437572956, -0.17264941334724426, -0.4808511435985565, -0.006735478527843952, -0.011816035024821758, -0.038973402231931686, -0.0022306579630821943, -1.1205610462639015e-05, -3.0040289857424796e-05, -4.0649541915627196e-05, -0.0034091707784682512, -0.002379445359110832, -1.8607416152954102, -0.7006317973136902, -0.03352658078074455, -0.2520909905433655, -0.08332148939371109, -1.278056025505066, -0.5799981951713562, -0.02242131344974041, -0.869032621383667, -0.041829101741313934, -0.021634181961417198, -0.03186934068799019, -0.11865293979644775, -0.08762731403112411, -0.0014105618465691805, -0.05333301052451134, -0.0003358753747306764, -0.266188383102417, -0.0003911683743353933, -0.06725475192070007, -0.0016947920667007565, -0.05878424644470215, -1.9073468138230965e-06, -9.405170567333698e-05, -0.0005286726518534124, -0.002531896810978651, -3.1709168979432434e-05, -1.9788545614574105e-05, -0.00661564152687788, -9.65590606938349e-06], "finish_reason": "length"}], "metrics": {"energy": 253.54359318923952, "energy_per_token": 0.9904046608954669, "time": 11.136015, "time_per_token": 0.04350005859375}}
{"outputs": [{"text": "if not os.path.isdir(source_directory):\n        raise OSError(f\"Source directory {source_directory} doesn't exist.\")\n\n    valid_extensions = ['.txt', '.docx', '.xlsx', '.csv']\n\n    file_paths = []\n    for root, dirs, files in os.walk(source_directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            file_extension = os.path.splitext(file_path)[-1].lower()\n            if file_extension not in valid_extensions:\n                continue\n            file_paths.append(file_path)\n\n    zip_file_path = os.path.join(target_directory, zip_name) + '.zip'\n    with zipfile.ZipFile(zip_file_path, 'w') as zip_file:\n        for file_path in file_paths:\n            zip_file.write(file_path)\n\n    return zip_file_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "source", "_", "directory", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Source", " directory", " {", "source", "_", "directory", "}", " doesn", "'", "t", " exist", ".", "\"", ")", "\n", "\n", "    ", "valid", "_", "extensions", " =", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "source", "_", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")", "[-", "1", "]", ".", "lower", "()", "\n", "            ", "if", " file", "_", "extension", " not", " in", " valid", "_", "extensions", ":", "\n", "                ", "continue", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "zip", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", ")", " +", " '", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " zip", "_", "file", "_", "path", "\n", "\n", "if"], "logprobs": [-1.4513596296310425, -0.08952103555202484, -0.153681218624115, -3.7431014789035544e-05, -0.0007876630988903344, -0.006794089451432228, -1.2988874912261963, -0.0032447329722344875, -0.0003023882454726845, -0.005556851159781218, -0.00014435203047469258, -4.792098479811102e-05, -0.002004520269110799, -0.02544466219842434, -0.0029696195852011442, -0.04432719573378563, -0.04187025874853134, -3.4689302992774174e-05, -3.576272320060525e-06, -0.40211057662963867, -0.4263042211532593, -0.3264595866203308, -1.6212289333343506, -0.06214093416929245, -0.7727420926094055, -0.0029265929479151964, -5.8887653722194955e-05, -0.00012981049076188356, -0.01794414035975933, -2.8136637210845947, -0.003753285389393568, -6.9141146923357155e-06, -0.022493116557598114, -0.6985121965408325, -0.03655761852860451, -0.0003149013500660658, -0.003888903185725212, -0.2986811101436615, -0.0003796095261350274, -1.6161714792251587, -0.006320013199001551, -0.07206262648105621, -0.013507283292710781, -0.13988599181175232, -0.04160374030470848, -0.0020261728204786777, -0.00025388356880284846, -4.9828242481453344e-05, -0.0016752745723351836, -0.0005969410995021462, -0.0011970981722697616, -0.0004167880106251687, -9.321732068201527e-05, -6.437280717364047e-06, -0.0005810956354252994, -0.00019870213873218745, -0.000904032145626843, -6.90197994117625e-05, -0.00047267231275327504, -0.00010179955279454589, -1.811964830267243e-05, -0.0006256530177779496, -0.0001652104256208986, -0.0010152667528018355, -0.012220626696944237, -0.013359672389924526, -0.8741483688354492, -0.00025507534155622125, -2.6921820640563965, -0.037895772606134415, -0.7640548944473267, -0.02483539842069149, -0.7599504590034485, -0.012092258781194687, -0.1941780149936676, -0.07720465958118439, -2.180633068084717, -0.0025908732786774635, -0.7556409239768982, -0.0006517431465908885, -0.00023147765023168176, -0.01654406078159809, -0.0011812621960416436, -0.004860134795308113, -1.2040065485052764e-05, -4.577531944960356e-05, -0.0005311747081577778, -0.0017030035378411412, -1.823885577323381e-05, -1.6093124941107817e-05, -0.025074219331145287, -0.010445802472531796, -0.0015810144832357764, -0.07220492511987686, -0.24924437701702118, -0.23399260640144348, -0.043794598430395126, -0.00010168035078095272, -0.0016337393317371607, -0.0007528808200731874, -1.8223936557769775, -0.026865767315030098, -0.20488204061985016, -0.0044975318014621735, -0.16128575801849365, -5.245195097813848e-06, -8.809178689261898e-05, -0.0013585394481197, -0.0030242919456213713, -0.0002047805901383981, -0.005288064945489168, -0.00054058717796579, -0.0007457336178049445, -0.0005663221818394959, -0.009636432863771915, -0.022421779111027718, -1.5696336030960083, -0.0056471810676157475, -0.4813830554485321, -0.0014448452275246382, -0.166340634226799, -3.5523738915799186e-05, -6.794698856538162e-05, -0.0015606615925207734, -0.0005087750032544136, -5.376194530981593e-05, -7.152555099310121e-07, -3.8980677345534787e-05, -0.0022159088402986526, -0.12946119904518127, -2.777537883957848e-05, -0.9110407829284668, -0.0017240673769265413, -8.856858039507642e-05, -0.002448420040309429, -1.8104503154754639, -0.023476962000131607, -0.0030251238495111465, -0.02056899480521679, -0.1247808188199997, -0.01564796082675457, -0.06500650942325592, -0.001536023453809321, -0.001077071763575077, -2.9525554180145264, -4.291525328881107e-06, -0.003542578313499689, -1.1920928244535389e-07, -8.583032467868179e-06, -0.006300586275756359, -0.007472303695976734, -0.00047183825518004596, -0.07456707954406738, -0.050650209188461304, -0.04129597172141075, -0.06528127193450928, -0.00011801023356383666, -0.0033549948129802942, -0.00045277358731254935, -0.00013267113536130637, -0.008490181528031826, -0.022055111825466156, -0.001135776867158711, -4.1126360883936286e-05, -0.0014135378878563643, -0.002725697821006179, -0.04801643639802933, -0.004201039206236601, -0.8144122362136841, -0.02653473988175392, -1.2262951135635376, -0.13874979317188263, -0.13259337842464447, -0.0011934071080759168, -0.2368420958518982, -6.079655122448457e-06, -0.00010299152199877426, -0.0009391664643771946, -0.0015298341168090701, -0.0002644904307089746, -0.0392615981400013, -1.1920922133867862e-06, -1.3589766240329482e-05, -0.0005525015876628458, -0.5754791498184204, -0.00021550717065110803, -5.507317473529838e-05, -1.0321050882339478, -0.13684627413749695, -0.1460619866847992, -0.00017796363681554794, -0.00011407678539399058, -9.738924563862383e-05, -0.005401303060352802, -0.2760304808616638, -0.3906455636024475, -0.056320808827877045, -7.378782902378589e-05, -9.298280929215252e-06, -0.003029758809134364, -0.0007578838267363608, -6.05564855504781e-05, -0.000418575422372669, -0.0072403657250106335, -0.00034481301554478705, -0.00015364897262770683, -5.364274329622276e-05, -1.811964830267243e-05, -0.00017450717859901488, -0.07454638928174973, -0.015413920395076275, -0.28308290243148804, -3.4689302992774174e-05, -0.05247517675161362, -0.03674183413386345, -0.014940156601369381, -0.0002426806604489684, -0.0011183919850736856, -0.0007351318490691483, -0.04548187553882599, -0.025431182235479355, -0.06718531250953674, -0.0003782987187150866, -0.0001911934232339263, -0.002477435627952218, -3.814689989667386e-06, -3.933898824470816e-06, -3.71926071238704e-05, -0.00017998983094003052, -0.0005676327273249626, -0.11137163639068604, -0.0016599221853539348, -0.022331787273287773, -0.0008024332928471267, -0.0007770617958158255, -8.320462075062096e-05, -0.010992799885571003, -0.0015097183641046286, -3.2543604902457446e-05, -0.36017051339149475, -0.005303243175148964, -0.2608899772167206, -0.017913110554218292, -0.03318218141794205, -0.35267069935798645, -6.806619057897478e-05, -2.658331868587993e-05, -0.00025078488397412, -1.6689286894688848e-06, -0.7089499235153198, -0.004023552872240543, -1.111556053161621], "finish_reason": "stop"}], "metrics": {"energy": 275.1848271379471, "energy_per_token": 1.092003282293441, "time": 11.269388, "time_per_token": 0.04471979365079365}}
{"outputs": [{"text": "# Create target directory if it does not exist\n    if not os.path.isdir(target_directory):\n        os.makedirs(target_directory)\n\n    # Extract files that match the given extensions and save them as a zip file\n    zip_path = os.path.join(target_directory, zip_name + '.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file_path in glob.glob(os.path.join(source_directory, '**', '*')):\n            file_extension = os.path.splitext(file_path)[-1]\n            if file_extension in ['.txt', '.docx', '.xlsx', '.csv']:\n                zip_file.write(file_path)\n\n    # Return the full path to the created zip file\n    return zip_path", "tokens": ["#", " Create", " target", " directory", " if", " it", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "target", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "target", "_", "directory", ")", "\n", "\n", "    ", "#", " Ext", "ract", " files", " that", " match", " the", " given", " extensions", " and", " save", " them", " as", " a", " zip", " file", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "target", "_", "directory", ",", " zip", "_", "name", " +", " '", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "source", "_", "directory", ",", " '", "**", "'", ",", " '", "*", "'))", ":", "\n", "            ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "path", ")", "[-", "1", "]", "\n", "            ", "if", " file", "_", "extension", " in", " ['", ".", "txt", "'", ",", " '", ".", "doc", "x", "'", ",", " '", ".", "x", "ls", "x", "'", ",", " '", ".", "csv", "']", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "#", " Return", " the", " full", " path", " to", " the", " created", " zip", " file", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "def"], "logprobs": [-1.4324654340744019, -2.8422932624816895, -1.8342537879943848, -0.2032272219657898, -0.16315369307994843, -0.1155209094285965, -0.7828571200370789, -0.000704278820194304, -0.03672942519187927, -0.10455460846424103, -0.0013116337358951569, -0.8472843170166016, -0.02766166441142559, -0.05372736603021622, -1.3708974620385561e-05, -0.00042524831951595843, -0.0014766276581212878, -1.5989139080047607, -7.974783511599526e-05, -0.00018356545479036868, -0.011573554016649723, -1.0847986231965479e-05, -8.11782301752828e-05, -0.0038327344227582216, -0.0036170552484691143, -0.002317720791324973, -0.09516529738903046, -0.00024875884992070496, -0.060349587351083755, -1.0251946150674485e-05, -0.0005577438860200346, -6.270212179515511e-05, -0.002063765889033675, -4.887569048150908e-06, -7.629365427419543e-06, -0.09898516535758972, -0.004249471705406904, -0.1597452312707901, -0.0016721803694963455, -0.1473809778690338, -3.886207103729248, -0.17417852580547333, -0.9769579172134399, -3.8026316165924072, -0.44943878054618835, -0.3358480632305145, -2.1881086826324463, -0.22835901379585266, -2.296496868133545, -1.0311781167984009, -0.26462480425834656, -0.3412654399871826, -0.12691545486450195, -0.04482736811041832, -0.046951014548540115, -0.1460867077112198, -0.002872628625482321, -2.148407459259033, -0.01977432519197464, -0.5956168174743652, -0.005101876333355904, -0.2551088333129883, -3.93382906622719e-05, -0.00031680811662226915, -0.006575140170753002, -0.0026871783193200827, -0.00014733182615600526, -0.027023697271943092, -2.932505594799295e-05, -5.960446742392378e-06, -0.0003828269545920193, -0.6960418224334717, -0.0004553949984256178, -3.909988299710676e-05, -0.23547743260860443, -0.14911125600337982, -0.00010227633902104571, -5.8530047681415454e-05, -0.0004764852055814117, -0.01254300493746996, -0.10992693901062012, -0.610276997089386, -0.08699479699134827, -3.302042750874534e-05, -1.168244216387393e-05, -0.002685870509594679, -0.0008423355757258832, -7.045020902296528e-05, -0.0008353081648238003, -0.008099330589175224, -0.0002060916303889826, -0.0006270825979299843, -0.00026854246971197426, -0.036800552159547806, -0.012304351665079594, -0.34331977367401123, -8.546940807718784e-05, -0.11192560940980911, -0.08512769639492035, -0.023144695907831192, -0.00022063204960431904, -0.004181333351880312, -0.006897094193845987, -0.0631963461637497, -0.6781466603279114, -0.539053738117218, -0.24846817553043365, -0.003543409751728177, -0.11554203927516937, -6.103329360485077e-05, -0.13740719854831696, -0.00965567771345377, -0.1268371194601059, -0.0007281036232598126, -4.005352093372494e-05, -0.0013663965510204434, -0.00022706791060045362, -0.00047886825632303953, -0.003364380681887269, -8.34461570775602e-06, -1.680836794548668e-05, -0.0011355387978255749, -0.055282820016145706, -1.463608980178833, -1.250969409942627, -0.017635561525821686, -0.025554129853844643, -0.004072349984198809, -2.032338857650757, -0.0005502378917299211, -0.008786113932728767, -0.0025367720518261194, -1.3527084589004517, -0.027098186314105988, -3.252870798110962, -0.0012823462020605803, -0.15426968038082123, -4.410734163684538e-06, -0.0001387499796692282, -0.0005754960584454238, -0.0021128966473042965, -2.0146166207268834e-05, -3.576278118089249e-07, -3.2305197237292305e-05, -0.026092231273651123, -4.768370445162873e-07, -0.0001839230244513601, -1.4364275932312012, -0.00045599075383506715, -7.438383181579411e-05, -0.004824663512408733, -0.5086690783500671, -0.04958657547831535, -0.03145437315106392, -0.057914648205041885, -8.34461570775602e-06, -0.0010790961096063256, -0.28515172004699707, -0.1530124396085739, -0.0027946485206484795, -0.0033176876604557037, -0.0009464313625358045, -7.10462118149735e-05, -0.001303180935792625, -0.0005248599336482584, -0.004114971030503511, -0.0005808573332615197, -0.00014220656885299832, -2.8609820219571702e-05, -0.00044741155579686165, -0.00022659118985757232, -0.0012156723532825708, -8.523101132595912e-05, -0.00032419670606032014, -0.00024434918304905295, -3.075552376685664e-05, -0.00042441420373506844, -0.00012194366718176752, -0.0010852882405743003, -0.0066696410067379475, -0.0029806732200086117, -0.00533549627289176, -0.0005108005134388804, -0.0394732765853405, -0.0002858230145648122, -0.005785387009382248, -4.7444173105759546e-05, -0.0005586970364674926, -5.1377883210079744e-05, -0.006113400682806969, -2.9802276912960224e-06, -2.3841574147809297e-05, -0.16528230905532837, -0.006943975109606981, -0.3748100996017456, -0.006631510332226753, -2.6611545085906982, -0.15558819472789764, -0.09389244765043259, -0.3497735559940338, -0.008397270925343037, -0.1559261679649353, -0.0018440161366015673, -0.22452504932880402, -0.007863990031182766, -0.003222750499844551, -0.047689154744148254, -0.0002786724944598973, -0.0064270938746631145, -0.6177991032600403, -6.139089964563027e-05, -0.00019107422849629074, -0.5692424178123474, -0.00684997346252203, -1.0796358585357666], "finish_reason": "stop"}], "metrics": {"energy": 238.5599532127379, "energy_per_token": 1.1095811777336646, "time": 9.620432, "time_per_token": 0.044746195348837205}}
