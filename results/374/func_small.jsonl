{"outputs": [{"text": "xlsx_files = glob.glob(os.path.join(directory_path, '*.xlsx'))\n    count = 0\n\n    for file in xlsx_files:\n        workbook = load_workbook(file)\n        for sheet in workbook.worksheets:\n            for cell in sheet.iter_cells(value_only=True):\n                if cell.value is not None:\n                    value = cell.value\n                    if '\"' in value:\n                        cell.value = f'\"\"\"{value}\"\"\"'\n                    elif \"'\" in value:\n                        cell.value = f\"'''{value}''\"\n            workbook.save(file)\n            count += 1\n\n    return count", "tokens": ["x", "ls", "x", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", ".", "x", "ls", "x", "'))", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " x", "ls", "x", "_", "files", ":", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "file", ")", "\n", "        ", "for", " sheet", " in", " work", "book", ".", "works", "heets", ":", "\n", "            ", "for", " cell", " in", " sheet", ".", "iter", "_", "cells", "(", "value", "_", "only", "=", "True", "):", "\n", "                ", "if", " cell", ".", "value", " is", " not", " None", ":", "\n", "                ", "    ", "value", " =", " cell", ".", "value", "\n", "                ", "    ", "if", " '", "\"", "'", " in", " value", ":", "\n", "                ", "        ", "cell", ".", "value", " =", " f", "'", "\"", "\"", "\"", "{", "value", "}\"", "\"", "\"", "'", "\n", "                ", "    ", "elif", " \"", "'", "\"", " in", " value", ":", "\n", "                ", "        ", "cell", ".", "value", " =", " f", "\"", "''", "'{", "value", "}''", "\"", "\n", "            ", "work", "book", ".", "save", "(", "file", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count"], "logprobs": [-3.290985107421875, -0.017902221530675888, -0.1108166053891182, -0.03235211968421936, -0.2677268981933594, -0.05301617085933685, -0.08561936765909195, -0.00018714107864070684, -0.010472345165908337, -0.015499139204621315, -1.159332513809204, -2.312633478140924e-05, -0.0005230727256275713, -0.0012485336046665907, -0.014112673699855804, -0.002811291255056858, -0.013974085450172424, -0.00012206286191940308, -8.34461570775602e-06, -0.007212316617369652, -0.16994711756706238, -0.09742868691682816, -0.016719339415431023, -0.004836408421397209, -8.713819261174649e-05, -0.017313532531261444, -0.004976386670023203, -0.013722368516027927, -0.1411074548959732, -1.6358802318572998, -0.026085147634148598, -0.02380760759115219, -0.0010845737997442484, -0.016788503155112267, -1.3423441648483276, -0.00026306029758416116, -0.13048715889453888, -0.9474929571151733, -0.8561112880706787, -0.004659390542656183, -7.629365427419543e-06, -1.1920922133867862e-06, -5.960462772236497e-07, -3.3378546504536644e-06, -0.0002964295563288033, -0.00271904026158154, -0.01324827317148447, -1.6219896078109741, -0.000988114275969565, -0.004173023626208305, -0.007647286169230938, -8.22540732769994e-06, -7.998623186722398e-05, -0.0006293461774475873, -0.0005390383303165436, -0.43859878182411194, -0.16949018836021423, -0.00642792321741581, -0.03887009248137474, -1.8036794662475586, -0.10865521430969238, -0.05735040828585625, -0.0013185387942939997, -0.0005664412747137249, -0.5329893231391907, -0.17733487486839294, -0.00099323526956141, -0.060370124876499176, -0.0037095798179507256, -0.004911619704216719, -0.32562825083732605, -1.2296252250671387, -0.042003318667411804, -0.013442948460578918, -0.04439801350235939, -0.4697817265987396, -0.0004047528200317174, -0.2581731379032135, -0.643838107585907, -3.3812437057495117, -3.528532761265524e-05, -0.005733117461204529, -0.0019585967529565096, -0.008467604406177998, -0.04847126826643944, -0.007978829555213451, -0.006729202810674906, -0.649788498878479, -0.6409291625022888, -0.006409090012311935, -0.06406483054161072, -0.6554195880889893, -0.146363765001297, -0.0002343380037928, -0.4270382225513458, -0.010437780059874058, -0.0018076046835631132, -0.0011720937909558415, -2.0294411182403564, -0.02234973944723606, -0.5019957423210144, -0.00028832571115344763, -0.000416907190810889, -0.1464567482471466, -0.030563216656446457, -0.0022613448090851307, -0.5900251865386963, -1.9447215795516968, -0.026764683425426483, -0.002044731518253684, -0.007856657728552818, -0.1781632900238037, -0.08405014872550964, -0.030567146837711334, -0.0012571059633046389, -0.0020359281916171312, -0.9959917068481445, -0.015142017975449562, -0.0020617435220628977, -0.001207933179102838, -1.898552656173706, -0.10441071540117264, -0.03792010620236397, -1.8972835540771484, -2.251422882080078, -0.06442245095968246, -0.057134147733449936, -0.07561112195253372, -0.007409472484141588, -0.012521225959062576, -0.0035051594022661448, -0.01301672961562872, -0.5460546016693115, -0.9404194355010986, -0.8045275807380676, -0.7550268173217773, -0.015189336612820625, -9.095255518332124e-05, -0.0011162485461682081, -0.007305810693651438, -0.002929921029135585, -0.006975583266466856, -0.00029952809563837945, -0.000617432699073106, -0.02033236436545849, -9.738924563862383e-05, -8.296622399939224e-05, -0.0005220004240982234, -0.043446075171232224, -0.041189588606357574, -0.6791602373123169, -2.215379238128662, -0.007524245418608189, -1.2076067924499512, -0.14666369557380676, -0.002542241709306836, -1.818572759628296, -0.058728042989969254, -1.0490362910786644e-05, -6.282132380874828e-05, -0.0012256737099960446, -0.005014818161725998, -0.03152899444103241, -0.0038412846624851227, -0.003962523303925991, -0.5422621369361877, -0.04587250575423241, -0.008084431290626526, -0.0032277412246912718, -4.9828242481453344e-05, -0.0012947280192747712, -0.2683563232421875, -0.04662054032087326, -0.2273218184709549, -0.004140851553529501], "finish_reason": "stop"}], "metrics": {"energy": 200.65518294334407, "energy_per_token": 1.1466010453905375, "time": 7.787399, "time_per_token": 0.044499422857142854}}
{"outputs": [{"text": "count = 0\n    files = glob.glob(directory_path + '/*.xlsx')\n    for file_name in files:\n        workbook = load_workbook(file_name)\n        for sheet in workbook.worksheets:\n            cell_ranges = sheet['A1':'C999']\n            for cell in cell_ranges:\n                if '\"' in cell.value:\n                    cell.value = \"\\\"%s\\\"\" % cell.value\n                    count += 1\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", "\n", "    ", "for", " file", "_", "name", " in", " files", ":", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "file", "_", "name", ")", "\n", "        ", "for", " sheet", " in", " work", "book", ".", "works", "heets", ":", "\n", "            ", "cell", "_", "r", "anges", " =", " sheet", "['", "A", "1", "':", "'", "C", "9", "9", "9", "']", "\n", "            ", "for", " cell", " in", " cell", "_", "r", "anges", ":", "\n", "                ", "if", " '", "\"", "'", " in", " cell", ".", "value", ":", "\n", "                ", "    ", "cell", ".", "value", " =", " \"", "\\\"", "%", "s", "\\\"\"", " %", " cell", ".", "value", "\n", "                ", "    ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -0.1939455270767212, -3.0043740272521973, -0.24464496970176697, -0.05981232225894928, -0.00014137222024146467, -0.02598770149052143, -0.012250655330717564, -0.43099644780158997, -8.237022848334163e-05, -9.536697689327411e-06, -0.04843776300549507, -0.1350044310092926, -1.5264828205108643, -0.04800404980778694, -0.011020153760910034, -6.09140915912576e-05, -0.011437324807047844, -0.017558490857481956, -0.013578787446022034, -0.15717843174934387, -0.17908240854740143, -0.3113166093826294, -1.3487797975540161, -1.1548807621002197, -0.001574111171066761, -0.003242950653657317, -0.0004970983718521893, -0.004190593026578426, -0.007519986014813185, -1.9137012958526611, -0.002615247620269656, -0.009115153923630714, -0.01507273968309164, -9.059865078597795e-06, -0.00014399446081370115, -0.0006366133457049727, -0.0006424508756026626, -0.5580707788467407, -0.0003933132975362241, -0.000731558189727366, -0.14496031403541565, -0.006249765399843454, -0.009070145897567272, -1.5973691940307617, -0.14479809999465942, -0.12076348066329956, -0.002393716247752309, -0.001369729870930314, -0.4927597641944885, -0.1715187281370163, -0.0010458719916641712, -0.06419072300195694, -0.004615012556314468, -0.004014291800558567, -2.7152822017669678, -0.08583677560091019, -3.897477149963379, -0.006813744083046913, -0.031084183603525162, -0.800082266330719, -2.8060426712036133, -0.1739407330751419, -0.0969545841217041, -0.3587281405925751, -0.3282064199447632, -2.7920496463775635, -3.3728981018066406, -0.25054559111595154, -0.207109734416008, -0.39363035559654236, -0.15941748023033142, -0.012398195452988148, -0.14285780489444733, -0.12138461321592331, -0.4826916754245758, -0.004507975187152624, -7.152531907195225e-06, -4.255681051290594e-05, -3.4570634852570947e-06, -0.0035634846426546574, -0.007962745614349842, -0.004028539638966322, -0.9466050863265991, -3.068981885910034, -0.04227704182267189, -0.0038490036968141794, -0.012257250025868416, -0.12303730100393295, -0.007540691178292036, -0.0022593229077756405, -0.07105784118175507, -0.022662926465272903, -0.0012549628736451268, -0.0015331668546423316, -0.34982699155807495, -0.052094925194978714, -0.002900918712839484, -0.0044075725600123405, -3.4735984802246094, -2.1611411571502686, -0.9774466753005981, -0.013622887432575226, -0.10770699381828308, -0.022913334891200066, -0.102515310049057, -0.0049817245453596115, -0.00018285033002030104, -0.10120341181755066, -1.8033887147903442, -0.12702475488185883, -0.4009319543838501, -0.03325194865465164, -0.013821840286254883, -0.00023541064001619816, -0.0037414091639220715, -1.2713112831115723, -0.5514405369758606, -0.009219454601407051, -0.2437661737203598, -0.01944316364824772, -0.43044179677963257], "finish_reason": "stop"}], "metrics": {"energy": 147.1480130176544, "energy_per_token": 1.1678413731559874, "time": 5.4667487, "time_per_token": 0.04338689444444445}}
{"outputs": [{"text": "number_of_excel_files = 0\n    # Loop through the directories and subdirectories\n    for dirpath, dirnames, filenames in os.walk(directory_path):\n        for filename in filenames:\n            # Get file path\n            filepath = os.path.join(dirpath, filename)\n            # Check if the file is an Excel (.xlsx) file\n            if filepath.endswith('.xlsx'):\n                # Load the file\n                wb = load_workbook(filename, data_only=True, read_only=True, keep_vba=False)\n                # Loop through all worksheets in the workbook\n                for sheet in wb.worksheets:\n                    # Check if the worksheet is protected\n                    if sheet.protection.sheet:\n                        # Loop through all cells in the worksheet\n                        for row in sheet.iter_rows():\n                            for cell in row:\n                                # Check if the cell is protected\n                                if cell.protection.locked:\n                                    # Check if the cell is protected by a cell or", "tokens": ["number", "_", "of", "_", "ex", "cel", "_", "files", " =", " ", "0", "\n", "    ", "#", " Loop", " through", " the", " directories", " and", " sub", "direct", "ories", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Get", " file", " path", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "            ", "#", " Check", " if", " the", " file", " is", " an", " Excel", " (", ".", "x", "ls", "x", ")", " file", "\n", "            ", "if", " file", "path", ".", "end", "sw", "ith", "('", ".", "x", "ls", "x", "')", ":", "\n", "                ", "#", " Load", " the", " file", "\n", "                ", "wb", " =", " load", "_", "work", "book", "(", "filename", ",", " data", "_", "only", "=", "True", ",", " read", "_", "only", "=", "True", ",", " keep", "_", "v", "ba", "=", "False", ")", "\n", "                ", "#", " Loop", " through", " all", " works", "heets", " in", " the", " work", "book", "\n", "                ", "for", " sheet", " in", " w", "b", ".", "works", "heets", ":", "\n", "                ", "    ", "#", " Check", " if", " the", " works", "heet", " is", " protected", "\n", "                ", "    ", "if", " sheet", ".", "prot", "ection", ".", "sheet", ":", "\n", "                ", "        ", "#", " Loop", " through", " all", " cells", " in", " the", " works", "heet", "\n", "                ", "        ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "():", "\n", "                ", "            ", "for", " cell", " in", " row", ":", "\n", "                ", "                ", "#", " Check", " if", " the", " cell", " is", " protected", "\n", "                ", "                ", "if", " cell", ".", "prot", "ection", ".", "locked", ":", "\n", "                ", "                ", "    ", "#", " Check", " if", " the", " cell", " is", " protected", " by", " a", " cell", " or"], "logprobs": [-3.8654537200927734, -0.10639815032482147, -0.18824855983257294, -0.0016235039802268147, -2.3849384784698486, -0.009921640157699585, -0.03560899943113327, -0.03077397122979164, -0.46668142080307007, -0.02844858542084694, -0.0009540535393171012, -0.04676389321684837, -0.22306200861930847, -3.201526165008545, -3.0328760147094727, -0.2596103847026825, -3.0213472843170166, -2.8082730770111084, -1.0108569860458374, -1.809988260269165, -0.04826273396611214, -0.000309657771140337, -0.6444423198699951, -0.0026179824490100145, -0.024101484566926956, -1.5129384994506836, -0.36403459310531616, -0.009199610911309719, -1.2703851461410522, -0.002185458317399025, -8.49926145747304e-05, -0.03908403590321541, -2.1934269170742482e-05, -4.2437604861333966e-05, -0.0005323661607690156, -0.01387086696922779, -1.2516897186287679e-05, -4.672895011026412e-05, -0.0014304416254162788, -0.0037768001202493906, -0.0004049911512993276, -1.0013530300057027e-05, -0.03459441289305687, -0.004788597580045462, -0.017355240881443024, -0.9174134135246277, -0.28654903173446655, -0.0006999903125688434, -0.2105027735233307, -7.867782187531702e-06, -1.5497195136049413e-06, -0.00028546550311148167, -0.01056270394474268, -0.010692566633224487, -0.8984898924827576, -2.5880327224731445, -3.1098098754882812, -0.865412175655365, -0.35444697737693787, -0.0006752118351869285, -0.24042078852653503, -0.674550473690033, -0.002404181519523263, -0.11544390767812729, -1.5258672647178173e-05, -7.497983460780233e-05, -0.0038140900433063507, -0.001213171985000372, -0.00011991735664196312, -0.0008487674640491605, -2.4676019165781327e-05, -0.0007537146448157728, -0.0034215261694043875, -7.784063927829266e-05, -0.0013187768636271358, -0.20475363731384277, -0.15290911495685577, -0.4888332486152649, -0.06284958869218826, -0.9252702593803406, -0.017506130039691925, -0.2093793898820877, -0.12280569225549698, -0.03917883709073067, -2.6316635608673096, -0.024391671642661095, -0.002362676663324237, -0.00022635281493421644, -0.005143505055457354, -0.0046491860412061214, -0.010799533687531948, -0.06483882665634155, -0.001166259404271841, -0.019585086032748222, -0.1940162181854248, -0.0005883631529286504, -0.01794472523033619, -0.0903966948390007, -2.074220174108632e-05, 0.0, -0.3003029227256775, -0.007916148751974106, -0.0014841266674920917, -3.4689302992774174e-05, -0.0019195717759430408, -0.00013743886665906757, -0.06731594353914261, -0.001077786204405129, -0.00537296524271369, -0.3313084840774536, -1.067306399345398, -0.14059169590473175, -2.2355704307556152, -0.653685450553894, -0.000427274004323408, -0.873181939125061, -0.01112178061157465, -0.003927614074200392, -1.1324817933200393e-05, -0.0002379134384682402, -2.288792165927589e-05, -0.00031680811662226915, -1.0301485061645508, -2.123492956161499, -0.4080992639064789, -2.5629668016335927e-05, -0.0018829250475391746, -0.002263485686853528, -0.014509993605315685, -1.9174550771713257, -0.17693375051021576, -7.152555099310121e-07, -0.001149589428678155, -0.047459427267313004, -0.04885097220540047, -2.301863193511963, -0.18464288115501404, -0.000277123210253194, -0.745561957359314, -0.06989176571369171, -0.004858236759901047, -0.751683235168457, -0.2960599362850189, -0.005572380963712931, -0.024067388847470284, -0.34412479400634766, -0.6658832430839539, -0.05496501550078392, -1.041410207748413, -0.5780456066131592, -0.012228516861796379, -1.4580435752868652, -0.003104987321421504, -1.8735677003860474, -0.0003797286772169173, -0.024728525429964066, -0.0006951061659492552, -0.024776555597782135, -1.065278172492981, -0.1013457253575325, -0.0014221088495105505, -9.298280929215252e-06, -0.22231322526931763, -0.06518678367137909, -0.0003947432560380548, -0.006606404669582844, -0.0006603206275030971, -0.001327824778854847, -0.002597531769424677, -0.14683261513710022, -2.758831024169922, -0.2221706211566925, -0.5265017151832581, -1.3748359680175781, -0.00038425691309385, -1.1888424158096313, -2.5360164642333984, -0.1281917542219162, -0.0006937957368791103, -0.0002675890573300421, -0.09774917364120483, -0.16588608920574188, -0.009732888080179691, -0.35820311307907104, -0.0014629386132583022, -0.02353285439312458, -0.5909684896469116, -0.6429086923599243, -0.0020166554022580385, -0.0014277036534622312, -0.0020535350777208805, -0.20074792206287384, -0.7300203442573547, -0.005212052259594202, -0.10774648934602737, -0.12406798452138901, -0.04800654947757721, -0.005652278196066618, -0.09117550402879715, -0.00015198028995655477, -0.03379468247294426, -0.00044431351125240326, -0.0002602000313345343, -0.013869574293494225, -0.3875068724155426, -0.06787091493606567, -0.18980687856674194, -0.013786802999675274, -0.5764721632003784, -4.1126360883936286e-05, -0.003963591996580362, -0.14349614083766937, -0.0009832315845414996, -0.0004720765573438257, -0.0018139113672077656, -0.19771970808506012, -0.013981139287352562, -0.0031873397529125214, -0.004215046763420105, -0.00047994061606004834, -0.0014856740599498153, -0.0008702066843397915, -0.0005155664402991533, -0.22220775485038757, -0.15097232162952423, -0.004262054339051247, -0.05718188360333443, -0.023289354518055916, -0.36153706908226013, -0.2973426580429077, -0.062171630561351776, -0.00046206763363443315, -3.1709168979432434e-05, -0.011609022505581379, -0.016401587054133415, -0.0020887479186058044, -0.038669295608997345, -9.452849917579442e-05, -0.11017724126577377, -2.440427303314209, -0.10012213885784149, -0.00042215018766000867, -0.0011945976875722408, -2.9205850296420977e-05, -0.0008449559682048857, -0.09480766206979752, -1.1287314891815186, -0.01350434310734272, -0.051027387380599976, -0.09072314202785492, -0.7654538154602051, -1.694899559020996, -0.7633416056632996, -0.9411500692367554, -2.636380195617676, -3.1272172927856445], "finish_reason": "length"}], "metrics": {"energy": 333.7651930713655, "energy_per_token": 1.3037702854350215, "time": 11.559718, "time_per_token": 0.0451551484375}}
{"outputs": [{"text": "number_of_files_processed = 0\n    for file in glob.iglob(directory_path + '**/*.xlsx', recursive=True):\n        if not os.path.isfile(file):\n            continue\n        workbook = load_workbook(file)\n        for sheet in workbook:\n            sheet['A1'].value = f'\\\\{sheet[\"A1\"].value}'\n            sheet.save(file)\n        number_of_files_processed += 1\n    print(f\"Number of files processed: {number_of_files_processed}\")\n    return number_of_files_processed", "tokens": ["number", "_", "of", "_", "files", "_", "processed", " =", " ", "0", "\n", "    ", "for", " file", " in", " glob", ".", "ig", "lob", "(", "directory", "_", "path", " +", " '", "**", "/*", ".", "x", "ls", "x", "'", ",", " recursive", "=", "True", "):", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "continue", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "file", ")", "\n", "        ", "for", " sheet", " in", " work", "book", ":", "\n", "            ", "sheet", "['", "A", "1", "']", ".", "value", " =", " f", "'", "\\\\{", "sheet", "[", "\"", "A", "1", "\"", "]", ".", "value", "}'", "\n", "            ", "sheet", ".", "save", "(", "file", ")", "\n", "        ", "number", "_", "of", "_", "files", "_", "processed", " +=", " ", "1", "\n", "    ", "print", "(", "f", "\"", "Number", " of", " files", " processed", ":", " {", "number", "_", "of", "_", "files", "_", "processed", "}\"", ")", "\n", "    ", "return", " number", "_", "of", "_", "files", "_", "processed", "\n", "\n", "#"], "logprobs": [-3.8654537200927734, -0.10639815032482147, -0.18824855983257294, -0.0016235039802268147, -0.5573036074638367, -0.5912884473800659, -0.1485327035188675, -0.022832708433270454, -0.005768319591879845, -0.0006002769805490971, -0.028756046667695045, -0.3161335289478302, -0.7269997000694275, -0.8965363502502441, -1.2420676946640015, -0.029590485617518425, -7.819823804311454e-05, -2.198277711868286, -0.0004320403386373073, -0.03989134728908539, -0.3125063180923462, -7.199982064776123e-05, -1.0609570381348021e-05, -0.07546941190958023, -0.11829131841659546, -1.0615129470825195, -0.0654396116733551, -0.021584484726190567, -0.01484713889658451, -0.00010418349120300263, -0.03525380790233612, -0.02492877095937729, -0.0005204515182413161, -0.007741449400782585, -0.0063419281505048275, -0.0009733468177728355, -0.0021240785717964172, -0.01225677877664566, -0.008168740198016167, -0.9305537343025208, -1.2430858612060547, -0.5026552677154541, -1.8596476365928538e-05, -0.012779366225004196, -0.002250283258035779, -0.02647564932703972, -0.3276975750923157, -0.00018666432879399508, -0.0025969373527914286, -0.05449168011546135, -0.07514458149671555, -0.0010667116148397326, -0.053464893251657486, -0.057444170117378235, -0.08679840713739395, -2.0575289726257324, -0.001591607229784131, -0.011397607624530792, -0.00994442030787468, -1.0609570381348021e-05, -0.00013779645087197423, -0.0005057962844148278, -0.0004602803383022547, -0.5397128462791443, -0.23125021159648895, -0.00510258786380291, -0.007520696148276329, -0.8861757516860962, -0.1846284121274948, -0.08915767073631287, -0.0019143365789204836, -0.0006226746481843293, -1.1398473978042603, -0.004805088508874178, -0.0013504442758858204, -2.1091790199279785, -1.9423561096191406, -0.11430392414331436, -0.016050536185503006, -0.005435450002551079, -0.7048161625862122, -0.021276794373989105, -0.02462606318295002, -2.6136507987976074, -0.32795199751853943, -3.3455777168273926, -0.07256098091602325, -0.13451239466667175, -0.019742067903280258, -0.0037656365893781185, -0.0015117417788133025, -0.0006115949945524335, -0.020317530259490013, -0.006382794119417667, -0.0015232876176014543, -0.032575882971286774, -0.08897839486598969, -0.9012081027030945, -1.5088534355163574, -0.3228486478328705, -0.213389053940773, -0.03983590379357338, -0.06468921154737473, -0.030086396262049675, -0.01479052472859621, -0.3333612084388733, -0.5359201431274414, -8.4638240878121e-06, -1.2755313036905136e-05, -4.529942543740617e-06, -7.211902266135439e-05, -1.8358061424805783e-05, -4.708655978902243e-05, -0.0036204999778419733, -0.0016842002514749765, -4.8397800128441304e-05, -0.0013802058529108763, -0.2238822877407074, -1.3586640357971191, -0.14372166991233826, -0.4039132297039032, -0.8885622024536133, -2.3942463397979736, -0.004717767238616943, -0.8197612166404724, -0.009587788954377174, -0.028086207807064056, -0.0020261728204786777, -0.0038662224542349577, -9.775113539944869e-06, -2.264974000354414e-06, -8.344646857949556e-07, -1.2636104656849056e-05, -1.0728830375228426e-06, -3.6954195820726454e-05, -0.02117222733795643, -0.03019038401544094, -0.016619451344013214, -0.08072849363088608, -0.031011031940579414, -0.008404599502682686, -0.0002236116270069033, -7.986990567587782e-06, -8.344646857949556e-07, -5.006777428206988e-06, -1.1920922133867862e-06, -2.729855441430118e-05, -0.33690595626831055, -0.013783981092274189, -2.53061842918396], "finish_reason": "stop"}], "metrics": {"energy": 159.3016258335112, "energy_per_token": 1.0620108388900746, "time": 6.7299294, "time_per_token": 0.044866196}}
{"outputs": [{"text": "file_list = glob.glob(directory_path + '*.xlsx')\n    total_count = len(file_list)\n    count = 0\n\n    for file_path in file_list:\n        wb = load_workbook(file_path)\n        sheet = wb.active\n        cell_range = sheet['A1':'B20']\n        for cell in cell_range:\n            if cell.value is None:\n                continue\n            if not re.match(r\"^[^\\\"]{2}$\", cell.value) or re.match(r\"^[\\\"]{2}$\", cell.value):\n                cell.value = '\"' + cell.value + '\"'\n\n        wb.save(file_path)\n        count += 1\n        progress_percentage = (count / total_count) * 100\n\n        print(\"\\rProcessing file {} of {}: {:.1f}% complete\".format(file_path, total_count, progress_percentage), end=\"\")\n    print(\"\\rTotal files processed", "tokens": ["file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", "\n", "    ", "total", "_", "count", " =", " len", "(", "file", "_", "list", ")", "\n", "    ", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "file", "_", "path", ")", "\n", "        ", "sheet", " =", " w", "b", ".", "active", "\n", "        ", "cell", "_", "range", " =", " sheet", "['", "A", "1", "':", "'", "B", "2", "0", "']", "\n", "        ", "for", " cell", " in", " cell", "_", "range", ":", "\n", "            ", "if", " cell", ".", "value", " is", " None", ":", "\n", "                ", "continue", "\n", "            ", "if", " not", " re", ".", "match", "(", "r", "\"", "^", "[", "^", "\\\"", "]{", "2", "}$", "\"", ",", " cell", ".", "value", ")", " or", " re", ".", "match", "(", "r", "\"", "^", "[\\\"", "]{", "2", "}$", "\"", ",", " cell", ".", "value", "):", "\n", "                ", "cell", ".", "value", " =", " '", "\"", "'", " +", " cell", ".", "value", " +", " '", "\"", "'", "\n", "\n", "        ", "wb", ".", "save", "(", "file", "_", "path", ")", "\n", "        ", "count", " +=", " ", "1", "\n", "        ", "progress", "_", "percent", "age", " =", " (", "count", " /", " total", "_", "count", ")", " *", " ", "1", "0", "0", "\n", "\n", "        ", "print", "(", "\"", "\\", "r", "Process", "ing", " file", " {}", " of", " {", "}:", " {:", ".", "1", "f", "}", "%", " complete", "\"", ".", "format", "(", "file", "_", "path", ",", " total", "_", "count", ",", " progress", "_", "percent", "age", ")", ",", " end", "=", "\"", "\"", ")", "\n", "    ", "print", "(", "\"", "\\", "r", "Total", " files", " processed"], "logprobs": [-2.444864273071289, -0.027165941894054413, -1.7669638395309448, -0.015203777700662613, -0.2026263028383255, -0.00020239688456058502, -0.010998577810823917, -0.018893985077738762, -0.3997056186199188, -0.00010096516780322418, -1.549708758830093e-05, -0.04851294681429863, -0.15055309236049652, -0.314062237739563, -0.09362706542015076, -0.010392596013844013, -0.00011121608258690685, -0.02361913025379181, -0.014785122126340866, -0.02604333497583866, -0.09351807087659836, -3.8121533393859863, -0.24562539160251617, -2.1729254722595215, -0.026040896773338318, -0.9214311838150024, -0.0019881022162735462, -0.0028879623860120773, -2.992108420585282e-05, -1.0132738680113107e-05, -0.000504723924677819, -0.010219745337963104, -0.11241589486598969, -1.3654776811599731, -0.029060401022434235, -0.006609601899981499, -0.0670396238565445, -0.00482169771566987, -1.2285304069519043, -0.0004378790326882154, -0.17383132874965668, -0.3549691140651703, -0.5616734623908997, -0.38305777311325073, -0.001495672739110887, -0.00399220734834671, -5.125986263010418e-06, -0.00017641419253777713, -0.0006136203301139176, -0.0021644041407853365, -0.018055250868201256, -1.9904944896697998, -0.01967497728765011, -0.03275414556264877, -1.1444026313256472e-05, -0.0001380348257953301, -2.7417760065873154e-05, -0.0004911408759653568, -0.34426429867744446, -0.000708090839907527, -0.0010985060362145305, -0.23104548454284668, -0.007076912093907595, -0.034942008554935455, -1.5259795188903809, -0.021222645416855812, -0.0012850845232605934, -2.038458114839159e-05, -0.07689264416694641, -0.0566137358546257, -0.004544762894511223, -0.15198086202144623, -2.329339027404785, -0.19634631276130676, -2.4191689491271973, -0.05331379920244217, -0.3026079535484314, -0.46161752939224243, -0.0927979126572609, -0.08521593362092972, -0.1350068300962448, -0.1837606132030487, -1.650137186050415, -1.659734845161438, -1.8740333318710327, -1.0855038166046143, -0.08347655832767487, -0.25762084126472473, -0.8568126559257507, -0.6951045989990234, -0.07176975160837173, -0.008026369847357273, -5.245195097813848e-06, -4.8874615458771586e-05, -0.00960242934525013, -0.007012754213064909, -0.00831073522567749, -1.1920088529586792, -0.5648006796836853, -0.01866421289741993, -0.027368946000933647, -0.5261866450309753, -1.1728976964950562, -0.07493456453084946, -0.03633313626050949, -0.0007481159991584718, -0.24074673652648926, -0.014268400147557259, -0.05792241171002388, -1.1624528169631958, -1.7822600603103638, -0.9474866986274719, -3.528532761265524e-05, -0.9779481291770935, -0.25249746441841125, -0.13128764927387238, -1.9740711450576782, -1.1868536472320557, -1.1156423091888428, -0.8220763206481934, -1.8190003633499146, -0.6528236865997314, -1.4572287797927856, -2.0677757263183594, -0.27079084515571594, -0.001095648156479001, -0.05868465080857277, -0.003097024979069829, -0.0015175743028521538, -2.3189215660095215, -1.101741075515747, -1.0089848041534424, -0.001852464396506548, -0.558289647102356, -0.015170667320489883, -0.012519107200205326, -0.20901741087436676, -0.28844115138053894, -2.3995325565338135, -0.1220993623137474, -0.19038273394107819, -0.34922489523887634, -0.03600706905126572, -0.0003404037852305919, -0.006010434124618769, -0.0011945976875722408, -0.00020644917094614357, -0.2231355458498001, -0.02070561982691288, -0.002405370818451047, -0.2720290720462799, -0.03032917156815529, -0.006322501227259636, -0.0027270056307315826, -1.1717453002929688, -0.7860302925109863, -0.09834380447864532, -0.058648791164159775, -0.09830404818058014, -0.0013260389678180218, -0.0004576589271891862, -1.580392837524414, -0.00628269836306572, -0.002308325143530965, -0.0021992563270032406, -0.018912116065621376, -2.061089515686035, -0.06329112499952316, -0.22614967823028564, -0.0010882653295993805, -0.0029460859950631857, -0.001663373550400138, -0.03939546272158623, -0.005410314071923494, -0.0009554826538078487, -0.0058389571495354176, -0.0032103925477713346, -0.1001025065779686, -0.06294026225805283, -0.026218581944704056, -0.0047882418148219585, -3.909988299710676e-05, -0.001149827498011291, -0.5649924278259277, -2.9729857444763184, -1.1683375835418701, -2.060218334197998, -1.1113131046295166, -0.016432546079158783, -0.8587144017219543, -0.023884780704975128, -0.09535019099712372, -0.010032820515334606, -6.842378934379667e-05, -4.887569048150908e-06, -0.00866167712956667, -0.010318740271031857, -0.0006590101984329522, -0.0011457790387794375, -0.00013207517622504383, -0.00033146608620882034, -0.013563617132604122, -2.850952625274658, -0.9167643785476685, -0.29709115624427795, -0.06602943688631058, -2.3616397380828857, -2.0447139739990234, -0.05618738755583763, -1.144310712814331, -0.8513219952583313, -1.1887059211730957, -1.431506633758545, -0.6402645111083984, -1.0254769325256348, -0.04259924590587616, -0.8463225960731506, -0.1313949078321457, -1.890263557434082, -0.025387832894921303, -0.009857309982180595, -0.015821753069758415, -2.21946120262146, -0.46024638414382935, -0.027253644540905952, -0.0015186455566436052, -0.0024898024275898933, -1.6476318836212158, -0.0009897815762087703, -0.012742644175887108, -0.029895281419157982, -0.2918633222579956, -9.298280929215252e-06, -0.00024303820100612938, -0.0009908534120768309, -0.008600929751992226, -2.7418097943154862e-06, -7.152555099310121e-07, -0.00011586471373448148, -0.5570270419120789, -0.0014017528155818582, -0.057928264141082764, -0.5081298351287842, -0.14617601037025452, -0.037646450102329254, -0.07423033565282822, -0.008355422876775265, -2.1610193252563477, -0.12308873981237411, -0.33728650212287903, -0.02555517666041851, -0.23944444954395294, -0.5412400364875793, -3.266784191131592, -1.0456613302230835, -0.08554057776927948], "finish_reason": "length"}], "metrics": {"energy": 288.08813444137576, "energy_per_token": 1.125344275161624, "time": 11.341848, "time_per_token": 0.04430409375}}
{"outputs": [{"text": "# TODO: Write function description here\n    # TODO: Write function requirements here\n    # TODO: Write function example here\n    # TODO: Write function requirements here\n    # TODO: Write function requirements here\n\n    file_path = os.path.join(directory_path, '*.xlsx')\n    excel_files = glob.glob(file_path)\n\n    workbook_count = 0\n    for excel_file in excel_files:\n        wb = load_workbook(excel_file, read_only=True)\n        wb_count = 0\n\n        for sheet_name in wb.sheet_names():\n            try:\n                ws = wb[sheet_name]\n                for row in ws.rows:\n                    for cell in row:\n                        if cell.value:\n                            # if the cell value is not a string, skip it\n                            if type(cell.value) != str:\n                                continue\n                            # check if the cell contains double quotes and replace it with two double backslashes\n                            if re.search('\"', cell.value):", "tokens": ["#", " TODO", ":", " Write", " function", " description", " here", "\n", "    ", "#", " TODO", ":", " Write", " function", " requirements", " here", "\n", "    ", "#", " TODO", ":", " Write", " function", " example", " here", "\n", "    ", "#", " TODO", ":", " Write", " function", " requirements", " here", "\n", "    ", "#", " TODO", ":", " Write", " function", " requirements", " here", "\n", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", ".", "x", "ls", "x", "')", "\n", "    ", "ex", "cel", "_", "files", " =", " glob", ".", "glob", "(", "file", "_", "path", ")", "\n", "\n", "    ", "work", "book", "_", "count", " =", " ", "0", "\n", "    ", "for", " excel", "_", "file", " in", " excel", "_", "files", ":", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "ex", "cel", "_", "file", ",", " read", "_", "only", "=", "True", ")", "\n", "        ", "wb", "_", "count", " =", " ", "0", "\n", "\n", "        ", "for", " sheet", "_", "name", " in", " w", "b", ".", "sheet", "_", "names", "():", "\n", "            ", "try", ":", "\n", "                ", "ws", " =", " w", "b", "[", "sheet", "_", "name", "]", "\n", "                ", "for", " row", " in", " w", "s", ".", "rows", ":", "\n", "                ", "    ", "for", " cell", " in", " row", ":", "\n", "                ", "        ", "if", " cell", ".", "value", ":", "\n", "                ", "            ", "#", " if", " the", " cell", " value", " is", " not", " a", " string", ",", " skip", " it", "\n", "                ", "            ", "if", " type", "(", "cell", ".", "value", ")", " ", "!", "=", " str", ":", "\n", "                ", "                ", "continue", "\n", "                ", "            ", "#", " check", " if", " the", " cell", " contains", " double", " quotes", " and", " replace", " it", " with", " two", " double", " back", "sl", "ashes", "\n", "                ", "            ", "if", " re", ".", "search", "('", "\"", "'", ",", " cell", ".", "value", "):"], "logprobs": [-1.8038996458053589, -4.10950231552124, -0.36519137024879456, -4.1299872398376465, -3.3479366302490234, -2.5079312324523926, -2.3870537281036377, -0.32326313853263855, -0.2462870329618454, -1.4992804527282715, -1.0739574432373047, -0.005909945350140333, -1.2666053771972656, -0.5581080913543701, -0.6951354146003723, -0.0969565361738205, -0.03341786563396454, -0.37902727723121643, -0.6420393586158752, -0.27288520336151123, -0.0020469920709729195, -0.2753395140171051, -0.2532133460044861, -1.0729355812072754, -0.04611785337328911, -0.010865099728107452, -0.3297649323940277, -1.4546059370040894, -0.4493746757507324, -0.0022312526125460863, -0.42912381887435913, -0.24495461583137512, -1.0618360042572021, -0.5445258617401123, -0.034716010093688965, -0.29713302850723267, -0.6184288859367371, -0.152927428483963, -0.0013429442187771201, -0.238982155919075, -0.09679758548736572, -0.4230513870716095, -0.0045362189412117004, -0.0059984661638736725, -1.383225679397583, -0.02116779051721096, -2.262157440185547, -0.02853316441178322, -3.1839773654937744, -0.8405616879463196, -1.5859894752502441, -0.0001264730526600033, -0.021711289882659912, -0.029025893658399582, -0.21783727407455444, -0.007470410317182541, -0.0330372154712677, -0.0008104139124043286, -7.176141662057489e-05, -0.04704359918832779, -0.18818674981594086, -0.17895014584064484, -0.12516239285469055, -0.01896931603550911, -0.00013720047718379647, -0.03673781454563141, -0.004256356507539749, -0.036537621170282364, -0.12496568262577057, -3.1849026679992676, -0.012012873776257038, -0.00872336607426405, -0.1974540799856186, -0.08656436949968338, -0.026221485808491707, -0.00018404220463708043, -0.023408841341733932, -0.0011304186191409826, -0.005703603383153677, -1.07287787614041e-05, -8.22540732769994e-06, -0.04479704797267914, -0.018484244123101234, -1.1041978597640991, -0.0006497179274447262, -4.373065948486328, -0.3429856598377228, -0.2924526333808899, -0.8029747605323792, -0.008265573531389236, -0.06098807230591774, -0.002613226417452097, -0.022301126271486282, -0.5154616832733154, -0.37124669551849365, -0.7121806144714355, -0.031830426305532455, -0.039420101791620255, -0.04324813559651375, -0.0008472190820612013, -1.2755313036905136e-05, -1.9430925021879375e-05, -0.00044919890933670104, -0.004904027562588453, -0.0328235924243927, -1.4752585887908936, -0.024440066888928413, -0.01827252097427845, -2.098061486321967e-05, -0.000346362212439999, -2.8132995794294402e-05, -0.0005253365379758179, -0.09415526688098907, -1.3589766240329482e-05, -1.311301275563892e-06, -0.0006328010931611061, -1.3846757411956787, -0.7182223200798035, -1.1920922133867862e-06, -0.00026079590315930545, -0.02534215711057186, -0.06573545932769775, -0.14678825438022614, -0.01799846813082695, -0.07028820365667343, -3.476778030395508, -1.469743013381958, -1.9640371799468994, -0.009179295040667057, -0.11906077712774277, -0.014585303142666817, -0.015983549878001213, -1.9236531257629395, -0.0017957051750272512, -0.1825941503047943, -0.5489094257354736, -2.0545146465301514, -0.09130336344242096, -0.5629115700721741, -0.01412713062018156, -1.7881233361549675e-05, -0.02854231745004654, -0.04297821596264839, -1.268006682395935, -0.00010346830822527409, -0.3742717206478119, -0.009595463052392006, -0.03327258676290512, -3.609650135040283, -0.00023862851958256215, -0.00490248529240489, -0.0034419598523527384, -1.1208889484405518, -0.011083347722887993, -0.0009479796281084418, -2.5987286790041253e-05, -0.08997917175292969, -0.0008167268824763596, -3.85038583772257e-05, -7.033323527139146e-06, -0.0006554362480528653, -0.018639173358678818, -0.4666496515274048, -1.396065354347229, -0.2345832735300064, -0.19681325554847717, -0.0772981196641922, -2.2291887944447808e-05, -0.028204428032040596, -1.2574187517166138, -0.0018867325270548463, -0.010788566432893276, -0.011785168200731277, -0.002172611653804779, -0.5884140133857727, -0.14694109559059143, -0.017001595348119736, -0.005351385101675987, -0.0009246364934369922, -0.002791438950225711, -0.0065942066721618176, -0.0012365083675831556, -0.9230249524116516, -0.38236525654792786, -0.009008361026644707, -0.03405683860182762, -1.6957365274429321, -0.04057702422142029, -0.004929413087666035, -0.0014806747203692794, -2.9257140159606934, -2.8656249046325684, -2.154667377471924, -0.5324512124061584, -0.9203516244888306, -0.32471171021461487, -1.3123128414154053, -2.017265796661377, -0.2899087965488434, -0.6628078818321228, -1.2469419240951538, -0.5015445351600647, -0.05149851739406586, -0.0015413797227665782, -0.00016008525562938303, -0.06562260538339615, -2.7597081661224365, -0.00012146688823122531, -0.0008211340173147619, -0.0007327494095079601, -0.0001958416833076626, -0.00016890530241653323, -0.8414031267166138, -1.1920928244535389e-07, -4.291525328881107e-06, -0.011401142925024033, -0.01108936034142971, -0.003097381442785263, -0.00029774048016406596, -0.0005081792478449643, -0.1020636335015297, -0.0011320855701342225, -0.449436753988266, -0.003055429784581065, -0.5108969211578369, -3.1303927898406982, -0.37212494015693665, -0.3846243917942047, -0.31742289662361145, -1.9410130977630615, -0.7366452813148499, -0.02970968373119831, -2.9234371185302734, -0.8861445188522339, -2.4940130710601807, -0.12612448632717133, -2.731630563735962, -0.42431312799453735, -0.5709230899810791, -0.0572306327521801, -0.0004567056894302368, -0.0852738469839096, -0.0021830792538821697, -0.000336590368533507, -0.34569409489631653, -0.5719911456108093, -2.3483953555114567e-05, -0.04627937451004982, -1.2499028444290161, -0.11242952942848206, -0.1840154230594635, -0.00023588736075907946, -0.009190043434500694, -0.00038115866482257843, -0.00016449528629891574, -0.09084126353263855], "finish_reason": "length"}], "metrics": {"energy": 306.3089336252216, "energy_per_token": 1.1965192719735218, "time": 11.556904, "time_per_token": 0.04514415625}}
{"outputs": [{"text": "if not os.path.isdir(directory_path):\n        raise OSError(f\"Path {directory_path} does not exist!\")\n\n    regex = r\".*\\.(xlsx|xlsm)$\"\n    file_list = glob.glob(directory_path + \"/**/\" + regex, recursive=True)\n\n    for file in file_list:\n        print(file)\n        workbook = load_workbook(filename=file)\n        sheet = workbook.active\n        print(sheet)\n        for row in sheet.iter_rows(max_row=200):\n            for cell in row:\n                print(cell.value)\n\n        # Loop through each cell and check for double quotes\n        for row in sheet.iter_rows(max_row=200):\n            for cell in row:\n                if cell.value is not None and type(cell.value) is str:\n                    cell.value = cell.value.replace(\"\\\"\", '\"\"')\n\n        workbook.save(filename=file)\n        print(f\"Protection applied to:", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " O", "SE", "rror", "(", "f", "\"", "Path", " {", "directory", "_", "path", "}", " does", " not", " exist", "!", "\"", ")", "\n", "\n", "    ", "regex", " =", " r", "\"", ".", "*\\", ".", "(", "x", "ls", "x", "|", "xl", "sm", ")$", "\"", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " \"", "/**", "/\"", " +", " regex", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "print", "(", "file", ")", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", "=", "file", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "active", "\n", "        ", "print", "(", "sheet", ")", "\n", "        ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "(", "max", "_", "row", "=", "2", "0", "0", "):", "\n", "            ", "for", " cell", " in", " row", ":", "\n", "                ", "print", "(", "cell", ".", "value", ")", "\n", "\n", "        ", "#", " Loop", " through", " each", " cell", " and", " check", " for", " double", " quotes", "\n", "        ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "(", "max", "_", "row", "=", "2", "0", "0", "):", "\n", "            ", "for", " cell", " in", " row", ":", "\n", "                ", "if", " cell", ".", "value", " is", " not", " None", " and", " type", "(", "cell", ".", "value", ")", " is", " str", ":", "\n", "                ", "    ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "(", "\"", "\\\"\"", ",", " '", "\"", "\"", "')", "\n", "\n", "        ", "work", "book", ".", "save", "(", "filename", "=", "file", ")", "\n", "        ", "print", "(", "f", "\"", "Prot", "ection", " applied", " to", ":"], "logprobs": [-2.9392833709716797, -0.2214018702507019, -0.3102435767650604, -8.391981828026474e-05, -0.002392645925283432, -0.004213384818285704, -0.5156757831573486, -0.006595035549253225, -0.0005638201837427914, -0.00175691198091954, -0.00020203932945150882, -1.07287787614041e-05, -0.011189565993845463, -0.0251097921282053, -0.0021641661878675222, -0.8702307343482971, -2.859013557434082, -8.34430247778073e-05, -4.0531076592742465e-06, -0.4686608910560608, -0.5439921021461487, -0.5056495666503906, -3.354349136352539, -0.763624370098114, -0.007926792837679386, -0.00021908267808612436, -4.851700214203447e-05, -0.049991026520729065, -1.8785924911499023, -0.002839939668774605, -0.3313113749027252, -2.449155807495117, -0.06919420510530472, -0.0011523280991241336, -0.006300941575318575, -0.6668187379837036, -0.0009465504554100335, -4.926463603973389, -0.6155604124069214, -1.051194667816162, -0.7190914154052734, -1.4952901601791382, -0.6504755616188049, -0.10011664032936096, -1.6823787689208984, -0.574677050113678, -0.004763327073305845, -0.23604387044906616, -0.3186851143836975, -0.8217511773109436, -0.009764053858816624, -1.6629090309143066, -0.0023762343917042017, -0.0909951776266098, -0.21966144442558289, -1.7493059635162354, -0.05369788035750389, -0.6518568992614746, -0.007009676657617092, -0.19801224768161774, -0.0004637358069885522, -0.013153097592294216, -0.0033721032086759806, -0.4684860110282898, -8.642300235806033e-05, -8.106198947643861e-06, -0.04170241951942444, -2.425053596496582, -2.978449821472168, -2.187915325164795, -0.03264869377017021, -0.007736836094409227, -0.012708039954304695, -0.008397034369409084, -0.0057614450342953205, -0.02020842209458351, -0.0008108903421089053, -0.006524925120174885, -0.7573959231376648, -0.00018749863374978304, -1.7608771324157715, -0.3152795433998108, -0.9174796342849731, -0.004721326753497124, -2.074220174108632e-05, -1.1086402082582936e-05, -0.0015656605828553438, -0.0028721531853079796, -0.01579347439110279, -2.0754966735839844, -0.03548428788781166, -0.997657299041748, -0.026373712345957756, -0.010218800976872444, -0.0772671177983284, -1.7510120868682861, -0.0034107151441276073, -0.013599955476820469, -0.013758466579020023, -1.3112935448589269e-05, -0.0001225396408699453, -8.964136941358447e-05, -0.00036137725692242384, -1.436405897140503, -0.019832994788885117, -0.01074976660311222, -0.2558126151561737, -0.009525562636554241, -0.06492998450994492, -1.0457606315612793, -0.01858394406735897, -0.0012374608777463436, -0.002001427114009857, -0.03126421198248863, -0.0666389912366867, -0.0071360948495566845, -0.13867610692977905, -3.449244499206543, -0.0313706174492836, -0.18240225315093994, -0.8509898781776428, -0.008726910687983036, -0.1431494951248169, -0.6483884453773499, -0.40710869431495667, -0.06773500889539719, -0.15450464189052582, -0.19992972910404205, -0.181776762008667, -0.0007678897818550467, -0.0060905334539711475, -0.8667917251586914, -2.713441848754883, -0.0022389839868992567, -1.1412395238876343, -0.01064479909837246, -2.756758213043213, -0.5694648623466492, -0.449505478143692, -1.3353025913238525, -0.047506604343652725, -0.011683608405292034, -0.6360143423080444, -0.0868510901927948, -0.0056880759075284, -0.006367869209498167, -0.006602969951927662, -0.0059802173636853695, -0.0062699043191969395, -1.5173734426498413, -0.02260582149028778, -0.07306218892335892, -0.19171887636184692, -0.045870114117860794, -0.17720827460289001, -0.01774975284934044, -2.433607578277588, -1.5071897506713867, -1.9626352787017822, -4.637801647186279, -0.3443225026130676, -1.2140884399414062, -0.3901541531085968, -2.182316303253174, -1.443400263786316, -1.2477589845657349, -0.18805696070194244, -0.04457702860236168, -0.22537675499916077, -0.01012380886822939, -0.21623066067695618, -0.15340323746204376, -0.10388898849487305, -0.20036447048187256, -0.01133926585316658, -0.00439950218424201, -0.0001541257370263338, -0.002281088614836335, -0.21976163983345032, -0.10483095794916153, -3.564294092939235e-05, -0.003039504401385784, -0.0014062763657420874, -0.09793639928102493, -0.004940326325595379, -0.004445195198059082, -0.03606996685266495, -0.006598114967346191, -0.002162381773814559, -0.029865894466638565, -0.011931009590625763, -0.002091603120788932, -0.0007801587926223874, -0.0003688847064040601, -0.0012957995058968663, -0.009739027358591557, -0.6582197546958923, -0.46422073245048523, -0.01980038732290268, -0.024947024881839752, -0.6738420724868774, -0.41023916006088257, -0.0003860443539451808, -1.448538899421692, -3.4813971519470215, -0.00011955977242905647, -0.0015698263887315989, -0.0038412846624851227, -0.0005099665140733123, -0.0004158347437623888, -0.7624515295028687, -0.026665909215807915, -0.21699801087379456, -0.01932939887046814, -0.008863627910614014, -0.0013556823832914233, -1.7951265573501587, -0.22481870651245117, -0.0035921114031225443, -0.004348703194409609, -0.9724853038787842, -0.00030632095877081156, -0.0004651656490750611, -0.0030389102175831795, -0.013160038739442825, -1.5653783082962036, -0.14489524066448212, -0.06452784687280655, -0.0002321927313460037, -3.1106817722320557, -0.11304797977209091, -0.2015521079301834, -0.04708419740200043, -0.056896667927503586, -0.6690512299537659, -0.17833903431892395, -0.22753338515758514, -0.00016306500765495002, -0.0007907600956968963, -0.0027513764798641205, -0.002538080094382167, -0.8093926310539246, -0.0053732022643089294, -0.014514457434415817, -0.12868346273899078, -0.06296075135469437, -1.254634976387024, -0.7963009476661682, -0.1486501544713974, -0.872042179107666, -0.07152140885591507, -3.0844016075134277, -1.4315348863601685, -1.3068733215332031, -0.176092728972435, -3.1893155574798584], "finish_reason": "length"}], "metrics": {"energy": 272.53545059967036, "energy_per_token": 1.0645916039049623, "time": 11.361534, "time_per_token": 0.0443809921875}}
{"outputs": [{"text": "# Load all .xlsx files in the directory\n    excel_files = glob.glob(directory_path + '*.xlsx')\n\n    # Loop through all Excel files\n    for filename in excel_files:\n        # Load the Excel file as an openpyxl workbook\n        workbook = load_workbook(filename)\n\n        # Get the first sheet (the first sheet is the default name if there is only one sheet in the file)\n        sheet = workbook.get_sheet_by_name('Sheet1')\n\n        # Get the cell object with the text\n        cell = sheet['A1']\n        text = cell.value\n\n        # Check if the text has double quotes (\") and replace them with double backslashes (\"\\\").\n        # If the text contains any backslashes (\"\\\"), double backslashes need to be escaped first.\n        if '\"' in text:\n            text = text.replace('\"', '\"\"\"')\n        if '\\\\' in text:\n            text = text.replace('\\\\', '\\\\\\\\')\n        if '\"' in text:\n", "tokens": ["#", " Load", " all", " ", ".", "x", "ls", "x", " files", " in", " the", " directory", "\n", "    ", "ex", "cel", "_", "files", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", "\n", "\n", "    ", "#", " Loop", " through", " all", " Excel", " files", "\n", "    ", "for", " filename", " in", " excel", "_", "files", ":", "\n", "        ", "#", " Load", " the", " Excel", " file", " as", " an", " open", "py", "xl", " work", "book", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "\n", "        ", "#", " Get", " the", " first", " sheet", " (", "the", " first", " sheet", " is", " the", " default", " name", " if", " there", " is", " only", " one", " sheet", " in", " the", " file", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "get", "_", "sheet", "_", "by", "_", "name", "('", "Sheet", "1", "')", "\n", "\n", "        ", "#", " Get", " the", " cell", " object", " with", " the", " text", "\n", "        ", "cell", " =", " sheet", "['", "A", "1", "']", "\n", "        ", "text", " =", " cell", ".", "value", "\n", "\n", "        ", "#", " Check", " if", " the", " text", " has", " double", " quotes", " (", "\"", ")", " and", " replace", " them", " with", " double", " back", "sl", "ashes", " (", "\"", "\\\")", ".", "\n", "        ", "#", " If", " the", " text", " contains", " any", " back", "sl", "ashes", " (", "\"", "\\\")", ",", " double", " back", "sl", "ashes", " need", " to", " be", " escaped", " first", ".", "\n", "        ", "if", " '", "\"", "'", " in", " text", ":", "\n", "            ", "text", " =", " text", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "\"", "')", "\n", "        ", "if", " '", "\\\\'", " in", " text", ":", "\n", "            ", "text", " =", " text", ".", "replace", "('", "\\\\'", ",", " '", "\\\\\\\\", "')", "\n", "        ", "if", " '", "\"", "'", " in", " text", ":", "\n"], "logprobs": [-1.8038996458053589, -4.3196587562561035, -0.7578849792480469, -2.8935046195983887, -0.0003580405900720507, -0.008271957747638226, -0.000523430178873241, -0.003867766121402383, -0.015271286480128765, -0.20631903409957886, -0.04968072474002838, -1.1374523639678955, -0.30216947197914124, -0.0038981654215604067, -3.0973968505859375, -0.004402706399559975, -0.0049774544313549995, -0.03845205530524254, -0.010286765173077583, -0.12248808145523071, -0.00011062010162277147, -0.0079282121732831, -0.009982189163565636, -0.6106649041175842, -0.00014256415306590497, -9.059865078597795e-06, -0.023737411946058273, -0.13250848650932312, -0.2474861741065979, -0.01802094653248787, -0.003711004974320531, -4.410734163684538e-06, -0.016704918816685677, -0.009223353117704391, -0.0058691781014204025, -0.4064292907714844, -0.0004609952447935939, -0.22903835773468018, -1.739729404449463, -0.2681429088115692, -1.082457184791565, -0.5186854004859924, -0.004062376916408539, -0.545718789100647, -0.0005453529884107411, -0.8421556353569031, -2.6445090770721436, -0.0021240785717964172, -0.001527215470559895, -2.145764938177308e-06, -6.318072337307967e-06, -0.00021801002731081098, -0.0006101653561927378, -0.06336072832345963, -0.7400903701782227, -0.3165926933288574, -0.08345364034175873, -0.32571759819984436, -0.03810739889740944, -3.1887662410736084, -1.2168207168579102, -0.558505654335022, -0.003984133247286081, -0.00025006983196362853, -0.9617697596549988, -0.00015746307326480746, -0.07571633905172348, -0.0004351384413894266, -0.781640887260437, -0.00017772526189219207, -0.002556985942646861, -0.00291886692866683, -7.271740287251305e-06, -0.00011216964776394889, -0.0017362057697027922, -0.0004101150552742183, -0.0014366315444931388, -0.1121678575873375, -0.0009377372916787863, -0.40514063835144043, -0.0016229089815169573, -0.01667959615588188, -2.1006383895874023, -0.41251716017723083, -0.46090131998062134, -0.5899032950401306, -3.2855091094970703, -1.9560052156448364, -1.252038836479187, -1.5028678178787231, -0.5417184233665466, -0.9856764078140259, -0.40490075945854187, -2.255323886871338, -1.9507911205291748, -1.7570760250091553, -0.4462232291698456, -0.7105257511138916, -0.02189033105969429, -0.050258152186870575, -1.0576127767562866, -0.014175554737448692, -1.6784255504608154, -0.02469887025654316, -0.011093251407146454, -0.00017677174764685333, -0.0855274423956871, -0.009508087299764156, -0.0009347598534077406, -0.0005258131423033774, -0.05131915211677551, -2.9866511821746826, -0.00011240804451517761, -0.005296128336340189, -0.004908060654997826, -0.1788489669561386, -4.6491513785440475e-06, -0.0419013537466526, -2.412309169769287, -0.08574607223272324, -0.015510289929807186, -0.00035339308669790626, -0.009688026271760464, -0.04860970005393028, -0.0005949157639406621, -0.03362167999148369, -2.9471354484558105, -0.8009697198867798, -1.8977607488632202, -2.800136089324951, -1.856090784072876, -0.1791463941335678, -1.7821249961853027, -2.580048084259033, -0.0008528171456418931, -0.32938289642333984, -0.21577902138233185, -0.01356138288974762, -0.21985742449760437, -0.10579198598861694, -0.03830062225461006, -0.0032617244869470596, -0.015969354659318924, -2.0239205360412598, -1.3608900308609009, -0.06928997486829758, -0.018015796318650246, -0.006328423973172903, -0.0015538772568106651, -0.05240866169333458, -0.1135796383023262, -0.0021843877620995045, -0.05863867327570915, -1.554335117340088, -0.09159862250089645, -0.3538128435611725, -0.5280154347419739, -2.418924570083618, -0.461701899766922, -0.011100796051323414, -2.8764805793762207, -0.6749463081359863, -0.1221417784690857, -2.7886874675750732, -0.7993289232254028, -0.1402156502008438, -0.1311204731464386, -0.34240686893463135, -0.09310424327850342, -0.07337063550949097, -0.0008170842193067074, -1.344651460647583, -0.882839560508728, -0.40298008918762207, -3.0719985961914062, -0.20259836316108704, -0.001739775761961937, -1.1971980333328247, -1.2361996173858643, -0.7444588541984558, -0.20267078280448914, -2.525911808013916, -2.8058314323425293, -2.7440924644470215, -0.12009778618812561, -0.00134080124553293, -1.2692363262176514, -0.4810120165348053, -0.06822038441896439, -0.16851094365119934, -2.094721555709839, -2.1659345626831055, -0.018383128568530083, -0.00033778208307921886, -2.2023608684539795, -0.0012694880133494735, -0.00678284140303731, -1.2786389589309692, -3.3186280727386475, -0.7463107705116272, -0.021239683032035828, -0.017302870750427246, -1.3212254047393799, -1.1546516418457031, -0.03883947804570198, -0.006815283093601465, -0.005021104589104652, -0.016907714307308197, -0.33318302035331726, -0.014740838669240475, -0.007057736162096262, -1.074903130531311, -0.05846328288316727, -0.5648798942565918, -0.0009108209051191807, -0.003534262999892235, -0.05962332338094711, -0.03199831396341324, -0.0009011736838147044, -0.0003164505760651082, -0.48794859647750854, -0.15022262930870056, -0.07490171492099762, -2.512410879135132, -0.1408039927482605, -0.07081443071365356, -1.9102102518081665, -0.8562416434288025, -0.17963728308677673, -0.15794868767261505, -0.0013749678619205952, -0.0016884845681488514, -0.00811848696321249, -0.0031370734795928, -0.001875072019174695, -0.09494155645370483, -0.009088338352739811, -0.21291254460811615, -0.0005295066512189806, -0.0007778956205584109, -0.04277115687727928, -0.4432540237903595, -0.00014137222024146467, -0.04193633422255516, -0.33674755692481995, -0.048729490488767624, -0.007390184793621302, -1.5316143035888672, -0.9065629839897156, -0.13262364268302917, -0.36852067708969116, -0.19734957814216614, -0.010633476078510284, -0.0021027852781116962, -0.04684340953826904, -0.004633286036550999], "finish_reason": "length"}], "metrics": {"energy": 290.6402208395003, "energy_per_token": 1.135313362654298, "time": 11.3383665, "time_per_token": 0.044290494140625}}
{"outputs": [{"text": "file_list = glob.glob(directory_path + '*.xlsx')\n    file_count = 0\n\n    for file_name in file_list:\n        try:\n            workbook = load_workbook(file_name)\n            sheet = workbook.active\n            for row_num in range(1, sheet.max_row + 1):\n                cell = sheet.cell(row_num, 1)\n                cell.value = re.sub(r\"\\\"([^\\\"]*)\\\"|\\s+\", r\"\\\"\\\\\\1\\\"\", cell.value)\n                sheet.cell(row_num, 1).value = cell.value\n            workbook.save(file_name)\n            file_count += 1\n        except Exception as e:\n            print(\"Error reading or processing file: \", file_name)\n            print(e)\n    print(\"File processed: \", file_count)", "tokens": ["file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "try", ":", "\n", "            ", "work", "book", " =", " load", "_", "work", "book", "(", "file", "_", "name", ")", "\n", "            ", "sheet", " =", " work", "book", ".", "active", "\n", "            ", "for", " row", "_", "num", " in", " range", "(", "1", ",", " sheet", ".", "max", "_", "row", " +", " ", "1", "):", "\n", "                ", "cell", " =", " sheet", ".", "cell", "(", "row", "_", "num", ",", " ", "1", ")", "\n", "                ", "cell", ".", "value", " =", " re", ".", "sub", "(", "r", "\"", "\\\"", "([", "^", "\\\"]", "*", ")\\\"", "|\\", "s", "+", "\"", ",", " r", "\"", "\\\"", "\\\\\\", "1", "\\\"\"", ",", " cell", ".", "value", ")", "\n", "                ", "sheet", ".", "cell", "(", "row", "_", "num", ",", " ", "1", ")", ".", "value", " =", " cell", ".", "value", "\n", "            ", "work", "book", ".", "save", "(", "file", "_", "name", ")", "\n", "            ", "file", "_", "count", " +=", " ", "1", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "\"", "Error", " reading", " or", " processing", " file", ":", " \"", ",", " file", "_", "name", ")", "\n", "            ", "print", "(", "e", ")", "\n", "    ", "print", "(", "\"", "File", " processed", ":", " \"", ",", " file", "_", "count", ")", "\n", "\n", "def"], "logprobs": [-2.444864273071289, -0.027165941894054413, -1.7669638395309448, -0.015203777700662613, -0.2026263028383255, -0.00020239688456058502, -0.010998577810823917, -0.018893985077738762, -0.3997056186199188, -0.00010096516780322418, -1.549708758830093e-05, -0.04851294681429863, -0.15055309236049652, -0.314062237739563, -0.09362706542015076, -0.010392596013844013, -0.00011121608258690685, -0.02361913025379181, -0.014785122126340866, -0.02604333497583866, -0.09351807087659836, -2.323093891143799, -0.007004349492490292, -0.5144692063331604, -0.006257702596485615, -0.4198649525642395, -0.0027700408827513456, -0.011579446494579315, -1.0485821962356567, -0.0003890234511345625, -0.15040160715579987, -0.23098540306091309, -0.546748697757721, -1.2613167762756348, -0.001829142333008349, -0.0025675685610622168, -5.125986263010418e-06, -6.639736966462806e-05, -0.0004897110629826784, -0.0038047083653509617, -0.017140701413154602, -1.4870914220809937, -0.00019643761334009469, -0.0023861052468419075, -0.003574531525373459, -0.8482065200805664, -0.0009458358981646597, -0.003613848239183426, -0.010240158997476101, -4.410734163684538e-06, -8.642300235806033e-05, -0.0002559096028562635, -0.000641974329482764, -0.34852802753448486, -4.815939246327616e-05, -0.0003780603874474764, -0.14189162850379944, -0.00709502212703228, -0.14913004636764526, -0.42270752787590027, -0.01732044480741024, -0.0011202972382307053, -0.0015368566382676363, -0.02005595527589321, -0.0280317310243845, -0.005730628501623869, -0.23364973068237305, -0.8631583452224731, -0.1742764711380005, -2.312161684036255, -0.627663254737854, -0.5337000489234924, -0.02788601629436016, -0.0007659838884137571, -0.31438732147216797, -0.0031998169142752886, -0.023297857493162155, -0.000289159914245829, -0.01287116389721632, -0.00035696811391972005, -0.0001389883691444993, -0.15952034294605255, -0.0009248746791854501, -0.0009616755996830761, -0.001734658726491034, -0.01697569340467453, -0.0037975830491632223, -0.9889492392539978, -0.748931884765625, -0.005250236950814724, -0.09863072633743286, -0.0031329141929745674, -0.00020001317898277193, -0.004157590679824352, -2.835096836090088, -0.0016024379292503, -0.018745528534054756, -0.00853592436760664, -0.0025053799618035555, -0.028407452628016472, -0.03504503145813942, -0.024756204336881638, -0.9656909704208374, -0.3664792776107788, -0.0016277885297313333, -0.0034474246203899384, -0.2632755935192108, -0.0006955826538614929, -0.017743896692991257, -0.21368196606636047, -0.1873769760131836, -2.650402784347534, -3.6793808937072754, -0.3149082064628601, -0.12322259694337845, -0.2682584226131439, -0.8465302586555481, -0.0874132364988327, -1.8220140933990479, -2.342395782470703, -1.6287939548492432, -0.26571252942085266, -0.0004114258335903287, -0.5065441727638245, -0.23814402520656586, -2.2159531116485596, -0.29246091842651367, -0.029765576124191284, -0.3278360366821289, -0.002432247158139944, -0.14486998319625854, -0.0003847335756290704, -0.0003251500893384218, -0.030326973646879196, -0.043393682688474655, -2.6366426944732666, -1.4700621366500854, -0.059302181005477905, -0.03774735704064369, -0.0013594918418675661, -0.0018400895642116666, -0.0014079429674893618, -1.0132738680113107e-05, -0.0012500813463702798, -0.007141894195228815, -0.005074597429484129, -0.06976903229951859, -0.032597463577985764, -0.12542185187339783, -0.238033726811409, -0.8663937449455261, -0.0028651398606598377, -0.0012549628736451268, -0.08898951858282089, -0.2923358976840973, -0.036420613527297974, -3.099393507000059e-05, -0.0001932195882545784, -0.002654602052643895, -0.003476292360574007, -0.029250403866171837, -9.572047565598041e-05, -0.000408327643526718, -0.002897233935073018, -0.003681550268083811, -0.1509457677602768, -0.10460411012172699, -2.634490556374658e-05, -0.000798859924543649, -0.008222655393183231, -0.0018720973748713732, -6.103329360485077e-05, -0.0008636558777652681, -0.09336747974157333, -0.0030753957107663155, -0.41294485330581665, -0.18201786279678345, -0.17081774771213531, -0.00048387263086624444, -0.00765769649296999, -0.0017058596713468432, -0.09730301797389984, -0.10109686106443405, -2.124849796295166, -0.424215704202652, -3.1916847229003906, -0.9967536926269531, -1.8978161811828613, -0.29709380865097046, -0.9486945867538452, -0.7828037142753601, -0.317547082901001, -0.10131330043077469, -0.0015245969407260418, -0.0004687402688432485, -0.5390960574150085, -0.001900772680528462, -0.03162451460957527, -0.04608449712395668, -0.01140880398452282, -0.375953733921051, -0.043415483087301254, -0.0017854715697467327, -1.6133654117584229, -1.406904935836792, -0.11227483302354813, -0.4875318109989166, -3.8232779502868652, -2.516479969024658, -0.9531190395355225, -0.10383859276771545, -0.05792601406574249, -0.029273904860019684, -0.0004334702098276466, -0.261723130941391, -0.11404550075531006, -0.008423632010817528, -1.5236799716949463, -2.681990623474121], "finish_reason": "stop"}], "metrics": {"energy": 224.70171570301056, "energy_per_token": 1.0260352315205963, "time": 9.463626, "time_per_token": 0.04321290410958904}}
{"outputs": [{"text": "try:\n        directory_path = directory_path or './xlsx_files/'\n        total_files = 0\n        for filename in glob.glob(directory_path + '/*.xlsx'):\n            total_files += 1\n            workbook = load_workbook(filename)\n            worksheet = workbook.active\n            worksheet.cell(row=1, column=1).value = filename\n            worksheet.cell(row=2, column=1).value = 'This is a \"test\" string.'\n            worksheet.cell(row=2, column=2).value = 'This is a \"test\" string.'\n            worksheet.cell(row=3, column=1).value = 'This is a \"test\" string.'\n            worksheet.cell(row=3, column=2).value = 'This is a \"test\" string.'\n            worksheet.cell(row=4, column=1).value = 'This is a \"test\" string.'\n            worksheet.cell(row=4, column=2).value =", "tokens": ["try", ":", "\n", "        ", "directory", "_", "path", " =", " directory", "_", "path", " or", " '", ".", "/", "x", "ls", "x", "_", "files", "/'", "\n", "        ", "total", "_", "files", " =", " ", "0", "\n", "        ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", ":", "\n", "            ", "total", "_", "files", " +=", " ", "1", "\n", "            ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "            ", "works", "heet", " =", " work", "book", ".", "active", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", " =", " filename", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "2", ",", " column", "=", "1", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "2", ",", " column", "=", "2", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "3", ",", " column", "=", "1", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "3", ",", " column", "=", "2", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "4", ",", " column", "=", "1", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "            ", "works", "heet", ".", "cell", "(", "row", "=", "4", ",", " column", "=", "2", ")", ".", "value", " ="], "logprobs": [-3.2695255279541016, -0.0014950776239857078, -0.00894728023558855, -0.015513576567173004, -3.3059823513031006, -0.4987303614616394, -0.09507175534963608, -0.07999894767999649, -1.3507554531097412, -0.00047362555051222444, -0.00015269544383045286, -2.7292189598083496, -0.1708093136548996, -0.008946689777076244, -0.20766787230968475, -0.007130649872124195, -2.3603161025675945e-05, -0.00022897482267580926, -0.0010829067323356867, -0.0002051381452474743, -0.04810800775885582, -0.04122047498822212, -0.11263033002614975, -5.071601867675781, -0.18673737347126007, -0.46374979615211487, -0.4992012679576874, -0.15350057184696198, -0.0008555566309951246, -0.016016047447919846, -0.23302093148231506, -0.4974247217178345, -1.2400023937225342, -0.0075934575870633125, -0.04882463067770004, -6.401333666872233e-05, -0.11399178206920624, -0.01925468072295189, -0.4533180594444275, -1.2874520507466514e-05, -1.0013530300057027e-05, -0.03354709967970848, -0.08749745041131973, -1.7145495414733887, -0.03548279404640198, -0.011501317843794823, -4.23184028477408e-05, -0.01285033393651247, -0.017500976100564003, -0.0008717550663277507, -0.011744875460863113, -0.008187658153474331, -2.4074344635009766, -0.0004724340105894953, -0.0006193388253450394, -0.015130863524973392, -0.024380270391702652, -9.48860906646587e-05, -0.006451611872762442, -0.021751882508397102, -1.7212722301483154, -0.0014034194173291326, -0.009683421812951565, -0.01918463222682476, -7.748573807475623e-06, -0.00012110930401831865, -0.0007213136414065957, -0.0005841932725161314, -0.0071869888342916965, -0.3101806342601776, -0.006923613138496876, -0.011743815615773201, -2.306154727935791, -0.07671744376420975, -0.007015832234174013, -0.011963521130383015, -0.0001399419124936685, -0.04738723486661911, -0.42956581711769104, -0.005940993782132864, -0.04556285962462425, -2.4013185501098633, -0.0018330690218135715, -0.8322885036468506, -0.4282279908657074, -0.012293047271668911, -0.9776735901832581, -0.010928656905889511, -0.010727830231189728, -0.005059178452938795, -0.008519968017935753, -0.000847933697514236, -0.004766767844557762, -0.12401091307401657, -0.019085576757788658, -0.008419612422585487, -0.019842810928821564, -2.5545172691345215, -0.16059553623199463, -0.05092565715312958, -1.2854946851730347, -0.00199250434525311, -0.0933593362569809, -0.10629835724830627, -0.000266278104390949, -0.0036145609337836504, -0.0008902162662707269, -1.048995018005371, -0.0013080621138215065, -0.0003036991402041167, -0.00012182447244413197, -0.12045536935329437, -0.016222499310970306, -0.007592866197228432, -0.01701202616095543, -0.004563037771731615, -1.0588288307189941, -1.748212218284607, -0.07349204272031784, -0.043057121336460114, -0.07362239807844162, -0.028774462640285492, -0.002711193636059761, -0.006118732504546642, -0.02576489746570587, -0.006967296823859215, -0.01785140112042427, -0.04490259289741516, -1.113677978515625, -0.000403084559366107, -0.0613156296312809, -0.0714864507317543, -0.00016592556494288146, -0.0028832077514380217, -0.0006160030607134104, -1.0282435417175293, -0.0019894109573215246, -0.00022075122979003936, -0.00019262365822214633, -0.574348509311676, -0.012920238077640533, -0.003013238776475191, -0.01172897033393383, -0.003068265039473772, -0.5307085514068604, -0.48890358209609985, -0.09883452951908112, -0.2822857201099396, -0.3956374526023865, -0.11368104070425034, -0.03421927988529205, -0.03579511493444443, -0.19602133333683014, -0.06796146184206009, -0.023496408015489578, -0.04317038506269455, -0.9962881803512573, -0.0009889479260891676, -0.020676428452134132, -0.030886439606547356, -7.73638384998776e-05, -0.0027812153566628695, -0.0005117537220939994, -1.1706173419952393, -0.0011325619416311383, -0.00011789103882620111, -7.199982064776123e-05, -0.22341978549957275, -0.006390612106770277, -0.0006201728247106075, -0.007511348929256201, -0.0010115751065313816, -0.23032329976558685, -0.3291497826576233, -0.02732846513390541, -0.09786592423915863, -0.09564208984375, -0.035602785646915436, -0.016485784202814102, -0.009425899013876915, -0.02832413837313652, -0.012650834396481514, -0.0014034194173291326, -0.012257602997124195, -0.11200831830501556, -0.00010084597306558862, -0.0010206258157268167, -0.005359448026865721, -2.0861407392658293e-05, -0.0004029654082842171, -5.4834770708112046e-05, -0.13009777665138245, -6.270212179515511e-05, -3.099393507000059e-05, -1.3947389561508317e-05, -0.014787822961807251, -0.0007001094636507332, -0.0018586517544463277, -0.0008012421894818544, -0.0002586507180240005, -0.0404038168489933, -0.028213003650307655, -0.0022225696593523026, -0.0057265982031822205, -0.015458879061043262, -0.0032707550562918186, -0.007565181702375412, -0.0017753568245097995, -0.0031212682370096445, -0.002042114268988371, -0.00045134371612221, -0.01727580465376377, -0.23342500627040863, -0.00014280252798926085, -0.0006064721383154392, -0.01313227228820324, -1.6689160474925302e-05, -0.0008088654140010476, -0.00014959646796341985, -0.09252756834030151, -9.16677454370074e-05, -1.9073304429184645e-05, -9.417489309271332e-06, -0.0098927216604352, -0.0002411313180346042, -7.629365427419543e-06, -0.0007605044520460069, -0.0001147919538198039, -0.017122069373726845, -0.020472994074225426, -0.0009059377480298281, -0.0034240209497511387, -0.004805681761354208, -0.0011428022990003228, -0.002619765931740403, -0.0004755319678224623, -0.001177571015432477, -0.0007403731578961015, -0.00021002470748499036, -0.00305317179299891, -0.010977472178637981, -3.6477376852417365e-05, -0.00043752157944254577, -0.00071190285962075, -5.245195097813848e-06, -4.160317621426657e-05, -1.3828182090946939e-05, -0.008363697677850723, -8.940656698541716e-06, -1.2516897186287679e-05, -5.960446742392378e-06, -0.0018742390675470233, -0.00024232311989180744, -0.0005224770284257829, -0.00018308870494365692, -6.890059739816934e-05], "finish_reason": "length"}], "metrics": {"energy": 307.22078483963, "energy_per_token": 1.2000811907798048, "time": 11.346347, "time_per_token": 0.04432166796875}}
{"outputs": [{"text": "num_excel_files = 0\n    for file_name in glob.glob(directory_path + '/*.xlsx'):\n        if not os.path.isfile(file_name):\n            continue\n        num_excel_files += 1\n        wb = load_workbook(file_name, data_only=True)\n        for sheet in wb.sheet_names():\n            ws = wb[sheet]\n            ws.cell(1, 1).value = '\"' + ws.cell(1, 1).value + '\"'\n        wb.save(file_name)\n    return num_excel_files", "tokens": ["num", "_", "ex", "cel", "_", "files", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "name", "):", "\n", "            ", "continue", "\n", "        ", "num", "_", "ex", "cel", "_", "files", " +=", " ", "1", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "file", "_", "name", ",", " data", "_", "only", "=", "True", ")", "\n", "        ", "for", " sheet", " in", " w", "b", ".", "sheet", "_", "names", "():", "\n", "            ", "ws", " =", " w", "b", "[", "sheet", "]", "\n", "            ", "ws", ".", "cell", "(", "1", ",", " ", "1", ")", ".", "value", " =", " '", "\"", "'", " +", " w", "s", ".", "cell", "(", "1", ",", " ", "1", ")", ".", "value", " +", " '", "\"", "'", "\n", "        ", "wb", ".", "save", "(", "file", "_", "name", ")", "\n", "    ", "return", " num", "_", "ex", "cel", "_", "files", "\n", "\n", "if"], "logprobs": [-3.931102752685547, -0.09862684458494186, -2.9478321075439453, -0.006560809910297394, -0.0887712612748146, -0.01868503913283348, -0.3874584138393402, -0.029275989159941673, -0.0005576247931458056, -0.04220401868224144, -0.2180810570716858, -0.637393593788147, -1.3781944513320923, -0.5318903923034668, -0.976027250289917, -0.005851993802934885, -0.04844367131590843, -5.8053239627042785e-05, -0.0809655487537384, -0.0232336837798357, -0.45539095997810364, -0.00011097769311163574, -1.597391747054644e-05, -0.0402926430106163, -0.1390736848115921, -1.9299216270446777, -0.060922909528017044, -0.012358398176729679, -9.691245941212401e-05, -0.018742019310593605, -0.018566392362117767, -0.0008281615446321666, -0.01478112768381834, -0.017598548904061317, -2.3376173973083496, -1.1766326427459717, -0.6045394539833069, -3.182837463100441e-05, -0.017952218651771545, -0.0008312584250234067, -0.22558550536632538, -0.10648731142282486, -0.0005490464391186833, -0.0027060816064476967, -1.9430925021879375e-05, -0.00026639728457666934, -0.03721239045262337, -0.04735846817493439, -0.0013617537915706635, -0.12638159096240997, -0.04340966045856476, -0.15412387251853943, -1.7546601295471191, -0.00045015214709565043, -0.0011703077470883727, -8.940656698541716e-06, -1.7165990357170813e-05, -5.8887653722194955e-05, -0.006809836719185114, -0.007504960056394339, -0.00010978573118336499, -0.007984742522239685, -0.052888866513967514, -2.0205156803131104, -0.025049572810530663, -0.019773507490754128, -1.4066597032069694e-05, -0.000342191313393414, -2.0146166207268834e-05, -0.0005936052766628563, -0.3034624457359314, -0.009720610454678535, -0.0001641377166379243, -1.5518770217895508, -0.8656448721885681, -1.2993727978027891e-05, -0.001753103919327259, -0.0038314282428473234, -0.011826991103589535, -0.22764219343662262, -0.021715139970183372, -0.020245105028152466, -1.0302165746688843, -0.21170909702777863, -0.1151924729347229, -0.0027295020408928394, -7.629365427419543e-06, -0.3029319643974304, -2.131962776184082, -0.5019134879112244, -0.00215429300442338, -0.14294657111167908, -0.007730566896498203, -0.0021333571057766676, -0.6047255396842957, -0.0044977692887187, -0.00034600470098666847, -1.490105023549404e-05, -0.027900854125618935, -0.0004048719711136073, -0.0003847335756290704, -0.009198193438351154, -0.015010266564786434, -1.3599900007247925, -0.7725458741188049, -0.8512051105499268, -0.009705381467938423, -0.6299220323562622, -0.002861573826521635, -0.05715362727642059, -0.005291148088872433, -0.10532011836767197, -0.027324171736836433, -0.014192244037985802, -0.09746264666318893, -1.5015792846679688, -1.8036837577819824, -0.1740373969078064, -0.10533985495567322, -0.17960460484027863, -0.005573447793722153, -0.0034252090845257044, -0.001291037304326892, -9.595887240720913e-05, -0.004118770360946655, -6.508615479106084e-05, -0.006367869209498167, -0.00035041390219703317, -0.0005407063290476799, -0.00011050090688513592, -0.0014038955559954047, -0.814978837966919, -0.021925434470176697, -0.0064606135711073875, -0.0035239283461123705, -0.02851717546582222, -0.7346132397651672, -0.03373832628130913, -0.0006406639004126191, -0.003849953645840287, -0.0018473479431122541, -0.03133907914161682, -0.004718360491096973, -9.226373367710039e-05, -0.01641906052827835, -0.014254767447710037, -0.19642721116542816, -0.1717592030763626, -0.006329253315925598, -3.302042750874534e-05, -2.3364747903542593e-05, -0.00022349244682118297, -1.311301275563892e-06, -1.5497195136049413e-06, -0.19170361757278442, -0.009880918078124523, -0.49983733892440796], "finish_reason": "stop"}], "metrics": {"energy": 182.05372928810127, "energy_per_token": 1.1595778935547851, "time": 6.9456053, "time_per_token": 0.044239524203821656}}
{"outputs": [{"text": "count = 0\n\n    for filename in glob.glob(directory_path + '**/*.xlsx'):\n        workbook = load_workbook(filename)\n        sheet = workbook.active\n\n        for row_number, row in enumerate(sheet.iter_rows(min_row=2), start=1):\n            for cell_number, cell in enumerate(row, start=1):\n                # Check if the cell contains double quotes\n                if re.search(r'\"', cell.value):\n                    # Replace double quotes with double backslash\n                    cell.value = cell.value.replace('\"', '\"\"')\n\n        workbook.save(filename)\n        count += 1\n\n    return count", "tokens": ["count", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "**", "/*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "active", "\n", "\n", "        ", "for", " row", "_", "number", ",", " row", " in", " enumerate", "(", "sheet", ".", "iter", "_", "rows", "(", "min", "_", "row", "=", "2", ")", ",", " start", "=", "1", "):", "\n", "            ", "for", " cell", "_", "number", ",", " cell", " in", " enumerate", "(", "row", ",", " start", "=", "1", "):", "\n", "                ", "#", " Check", " if", " the", " cell", " contains", " double", " quotes", "\n", "                ", "if", " re", ".", "search", "(", "r", "'", "\"", "'", ",", " cell", ".", "value", "):", "\n", "                ", "    ", "#", " Replace", " double", " quotes", " with", " double", " back", "slash", "\n", "                ", "    ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "')", "\n", "\n", "        ", "work", "book", ".", "save", "(", "filename", ")", "\n", "        ", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " count"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -1.7366300821304321, -0.0006275591440498829, -0.512879490852356, -0.9800246357917786, -0.005116345826536417, -0.021269092336297035, -6.592056161025539e-05, -0.15067797899246216, -0.014210931025445461, -0.5981956720352173, -6.460934673668817e-05, -6.794906312279636e-06, -0.029659923166036606, -0.14064709842205048, -2.7352938652038574, -0.06633370369672775, -0.009748589247465134, -0.014802740886807442, -5.674201020156033e-05, -0.030981561169028282, -2.1089699268341064, -0.0011238694423809648, -0.019473794847726822, -0.03944176062941551, -2.453449249267578, -0.0010881462367251515, -0.0060330661945044994, -0.01613464578986168, -9.894321920000948e-06, -8.535020606359467e-05, -0.0008898589294403791, -0.0006345880683511496, -0.00226205843500793, -0.28411683440208435, -0.00625829491764307, -0.07456088066101074, -0.7053176164627075, -0.009433574974536896, -0.0017417988274246454, -0.0010201494442299008, -0.02382623217999935, -0.036840539425611496, -0.0043168929405510426, -1.5243690013885498, -0.0010121704544872046, -0.655197262763977, -0.2916374206542969, -2.343947649002075, -1.6929746866226196, -0.466605544090271, -0.19620700180530548, -0.07302241027355194, -0.07424837350845337, -0.0023651740048080683, -0.004719902761280537, -0.05716026946902275, -0.09601697325706482, -0.0016444505890831351, -0.002887486945837736, -1.410783052444458, -0.37327051162719727, -5.602820692729438e-06, -0.028578000143170357, -0.004377544857561588, -0.8028814792633057, -2.0755362510681152, -0.00030787018476985395, -0.39710789918899536, -0.0015985103091225028, -1.7432374954223633, -0.0051236990839242935, -0.04045441746711731, -0.02107103168964386, -0.7727357745170593, -0.33571332693099976, -0.8613219857215881, -0.1745806634426117, -0.017317984253168106, -0.03286627680063248, -0.008495028130710125, -0.0002269487304147333, -0.00048744716332294047, -0.012348978780210018, -0.1368868201971054, -0.0017535799415782094, -0.0004690977220889181, -0.049107279628515244, -0.0005887205479666591, -0.001443773857317865, -0.06422369927167892, -2.854736328125, -1.2778078317642212, -0.1701894849538803, -0.4085824191570282, -0.38770532608032227, -0.7878382802009583, -1.2841002941131592, -0.034412682056427, -0.327956885099411, -0.001364134717732668, -0.17799338698387146, -1.2498650550842285, -2.7894584491150454e-05, -0.09749054163694382, -0.3093605935573578, -0.07133427262306213, -0.5090699791908264, -0.08135674148797989, -0.45698726177215576, -0.0001284993631998077, -0.17932724952697754, -0.0023569681216031313, -0.0007525234250351787, -0.07537920027971268, -0.0024534144904464483, -0.021367933601140976, -0.0002586507180240005, -0.510803759098053, -1.5919463634490967, -0.1969883143901825, -0.012222864665091038, -0.04037221521139145, -0.5615777969360352, -0.07136891037225723, -2.996344566345215, -0.11404719948768616, -0.0006977269076742232, -8.749579137656838e-05, -0.9094637632369995, -0.03648406267166138, -0.0011010067537426949, -0.0010332489619031549, -0.4673427939414978, -0.0007045170641504228, -0.00042703570215962827, -0.0007053509471006691, -0.0015230495482683182, -0.043155428022146225, -0.002861098386347294, -8.856858039507642e-05, -0.00011216964776394889, -0.37031999230384827, -0.09880872070789337, -0.20120123028755188, -0.04580463841557503, -0.00752649363130331, -0.42232874035835266, -0.5735318064689636, -0.2681323289871216, -7.533743337262422e-05, -0.00024375328212045133, -0.0009515525307506323, -0.0011993603548035026, -0.003236177610233426, -0.01805899664759636, -0.010108468122780323, -0.16733723878860474, -0.1335604339838028, -0.004511891398578882, -0.0012977044098079205, -2.0265373677830212e-05, -0.0040906332433223724, -0.13744232058525085, -0.06645128130912781, -0.18054260313510895, -0.00383914727717638], "finish_reason": "stop"}], "metrics": {"energy": 184.6066300592421, "energy_per_token": 1.0795709360189596, "time": 7.5665607, "time_per_token": 0.04424889298245614}}
{"outputs": [{"text": "# create a regex pattern for all .xlsx files\n    file_pattern = '*.xlsx'\n\n    # iterate through all Excel files in the specified directory\n    files = glob.glob(os.path.join(directory_path, file_pattern))\n    for filename in files:\n        # open each Excel file and read the first sheet\n        workbook = load_workbook(filename)\n        sheet = workbook.worksheets[0]\n        # iterate through rows and cells\n        for row in range(sheet.max_row):\n            for col in range(sheet.max_column):\n                cell = sheet.cell(row=row, column=col)\n                # check if the value is a string and if it contains a double quote\n                if cell.value and isinstance(cell.value, str) and cell.value.count('\"') > 1:\n                    # replace the double quote with a double backslash\n                    cell.value = re.sub('\"', '\"\"', cell.value)\n                    print(cell.value)\n\n    return len(files)", "tokens": ["#", " create", " a", " regex", " pattern", " for", " all", " ", ".", "x", "ls", "x", " files", "\n", "    ", "file", "_", "pattern", " =", " '", "*", ".", "x", "ls", "x", "'", "\n", "\n", "    ", "#", " iterate", " through", " all", " Excel", " files", " in", " the", " specified", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "pattern", "))", "\n", "    ", "for", " filename", " in", " files", ":", "\n", "        ", "#", " open", " each", " Excel", " file", " and", " read", " the", " first", " sheet", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "works", "heets", "[", "0", "]", "\n", "        ", "#", " iterate", " through", " rows", " and", " cells", "\n", "        ", "for", " row", " in", " range", "(", "sheet", ".", "max", "_", "row", "):", "\n", "            ", "for", " col", " in", " range", "(", "sheet", ".", "max", "_", "column", "):", "\n", "                ", "cell", " =", " sheet", ".", "cell", "(", "row", "=", "row", ",", " column", "=", "col", ")", "\n", "                ", "#", " check", " if", " the", " value", " is", " a", " string", " and", " if", " it", " contains", " a", " double", " quote", "\n", "                ", "if", " cell", ".", "value", " and", " isinstance", "(", "cell", ".", "value", ",", " str", ")", " and", " cell", ".", "value", ".", "count", "('", "\"", "')", " >", " ", "1", ":", "\n", "                ", "    ", "#", " replace", " the", " double", " quote", " with", " a", " double", " back", "slash", "\n", "                ", "    ", "cell", ".", "value", " =", " re", ".", "sub", "('", "\"", "'", ",", " '", "\"", "\"", "'", ",", " cell", ".", "value", ")", "\n", "                ", "    ", "print", "(", "cell", ".", "value", ")", "\n", "\n", "    ", "return", " len", "(", "files", ")", "\n", "\n", "if"], "logprobs": [-1.8038996458053589, -4.192455768585205, -0.6771222352981567, -2.09979248046875, -0.5089794397354126, -1.0609287023544312, -1.6045254468917847, -2.8941190242767334, -0.0011873346520587802, -0.005401066038757563, -0.00044467096449807286, -0.007625281810760498, -0.029881397262215614, -0.7995487451553345, -0.0029700950253754854, -3.0212438106536865, -0.0418788306415081, -0.14582988619804382, -0.00230202148668468, -1.52314293384552, -0.22132351994514465, -0.015890276059508324, -0.017579808831214905, -0.00015960850578267127, -0.013485407456755638, -0.0019675197545439005, -0.009615062735974789, -0.47153156995773315, -0.0008852138998918235, -0.05300305783748627, -3.382584571838379, -1.1556953191757202, -0.2959568202495575, -1.0817480087280273, -0.06361737102270126, -0.1518312394618988, -0.03003653883934021, -0.5409117937088013, -0.007172667887061834, -0.11896129697561264, -0.0013891342096030712, -3.0193393230438232, -0.2814332842826843, -0.05735457316040993, -0.0002661589242052287, -0.05252121388912201, -0.0021318108774721622, -1.1411097049713135, -2.2053474822314456e-05, -0.00020358874462544918, -0.002329970942810178, -0.005510023329406977, -0.0009589364635758102, -0.004053353797644377, -0.00028463127091526985, -1.3232143828645349e-05, -0.0015242397785186768, -0.005420748144388199, -3.576278118089249e-07, -3.0636318115284666e-05, -0.013639233075082302, -0.00329772662371397, -0.18699973821640015, -1.2979689836502075, -2.3516077995300293, -0.0008141063735820353, -0.002484332537278533, -0.000442407006630674, -0.001383777242153883, -0.05819035321474075, -0.5957607626914978, -1.0806050300598145, -2.9961984157562256, -0.19679975509643555, -0.004397246986627579, -0.885395884513855, -1.3433825969696045, -2.1551899909973145, -1.2569758892059326, -0.41068270802497864, -0.37711358070373535, -0.0028754814993590117, -0.9653998017311096, -0.0004670721245929599, -0.0037906949874013662, -0.0077982270158827305, -3.4570634852570947e-06, -9.131014667218551e-05, -0.00036042393185198307, -0.000607782625593245, -0.004057034384459257, -0.23172913491725922, -0.0021836739033460617, -0.011386528611183167, -0.14375728368759155, -0.010874769650399685, -0.0007832558476366103, -0.0015024575404822826, -0.039982523769140244, -0.4843640625476837, -0.004680154845118523, -0.007099165115505457, -0.0001597276859683916, -9.42901024245657e-05, -0.021206539124250412, -1.339281439781189, -0.27588164806365967, -0.5604296922683716, -0.15465733408927917, -3.226871967315674, -1.1158729791641235, -1.5296640396118164, -0.9303551912307739, -0.003172723576426506, -0.10754064470529556, -0.04611751064658165, -0.17327162623405457, -0.9506067037582397, -0.00040415700641460717, -1.1282453536987305, -0.0005023409612476826, -0.14683179557323456, -0.00010656742961145937, -9.536697689327411e-06, -0.05696434900164604, -0.007291609887033701, -0.003962285816669464, -0.14129036664962769, -0.8421513438224792, -0.010276736691594124, -0.004771869163960218, -0.0004048719711136073, -0.007803431712090969, -3.3854863431770355e-05, -0.0427941158413887, -1.1444026313256472e-05, -0.0005845506675541401, -0.004230835009366274, -0.001116129569709301, -0.00665732566267252, -1.4571096897125244, -0.14900578558444977, -0.0070679159834980965, -0.03026602603495121, -0.00043132537393830717, -9.60780744208023e-05, -0.0028539663180708885, -0.304792582988739, -0.0004158347437623888, -0.19352546334266663, -0.007828271016478539, -0.00011300401820335537, -8.976056415122002e-05, -0.00870185811072588, -0.0048537286929786205, -0.038528792560100555, -0.3165961503982544, -1.2493550777435303, -0.07139554619789124, -0.5358152985572815, -1.5443625450134277, -0.3069091737270355, -0.2582867741584778, -0.20824448764324188, -0.8415905833244324, -2.300504446029663, -0.16326335072517395, -0.1349404752254486, -1.3030967712402344, -0.1487654149532318, -0.053237393498420715, -0.12080416083335876, -0.0005728749092668295, -0.05414799228310585, -0.30434563755989075, -0.0013581824023276567, -0.06274805217981339, -0.2759433686733246, -0.3126123547554016, -8.582700684200972e-05, -0.0010039533954113722, -0.0004573014739435166, -0.00015209948469419032, -0.00028618055512197316, -0.012920238077640533, -0.12445046752691269, -0.03772749751806259, -2.612863540649414, -0.0010754045797511935, -0.002167615806683898, -0.019146274775266647, -1.0396281480789185, -0.048974137753248215, -0.006669285707175732, -0.0011089849285781384, -0.7021980881690979, -0.0010899323970079422, -0.8603236079216003, -0.00893853697925806, -0.001192930736579001, -0.002495629247277975, -0.0011703077470883727, -0.27479037642478943, -1.328465461730957, -0.8055303692817688, -0.11959559470415115, -0.7366259098052979, -0.06987353414297104, -0.4180893898010254, -0.38856804370880127, -0.10854688286781311, -0.0008131535141728818, -0.13926661014556885, -0.00044324109330773354, -0.00013374387344811112, -0.2500620186328888, -0.007986280135810375, -0.00025829317746683955, -0.0030214395374059677, -1.3729647397994995, -0.00013290952483657748, -0.003956824075430632, -0.6432660818099976, -0.050445642322301865, -0.014495189301669598, -0.00010168035078095272, -0.4139474034309387, -0.09221377223730087, -0.1362043023109436, -0.017191439867019653, -0.00018714107864070684, -0.005595023278146982, -4.5298504119273275e-05, -4.3748852476710454e-05, -0.015055712312459946, -0.016017453745007515, -3.040778636932373, -0.15260091423988342, -1.3785040378570557, -0.20861902832984924, -1.9467158317565918, -0.09013637900352478, -0.019713781774044037, -0.10219979286193848, -0.09168455004692078, -1.137542963027954, -0.58486008644104, -0.4813764989376068, -0.06704363226890564, -0.00015233787416946143, -0.00987041275948286, -0.12125283479690552, -0.17302699387073517, -0.012997549958527088, -0.4343475103378296], "finish_reason": "stop"}], "metrics": {"energy": 323.82682983970653, "energy_per_token": 1.2699091366263002, "time": 13.016671, "time_per_token": 0.051045768627450985}}
{"outputs": [{"text": "total_excel_files = 0\n\n    # Loop over all Excel files in the specified directory.\n    for excel_file in glob.iglob(directory_path + '**/*.xlsx', recursive=True):\n\n        # Load the Excel file.\n        try:\n            wb = load_workbook(excel_file)\n            # Iterate over all worksheets in the workbook.\n            for ws in wb.worksheets:\n                # Iterate over all cells in the current worksheet.\n                for row in ws.iter_rows():\n                    for cell in row:\n                        # If the cell's value is a string, and it contains double quotes,\n                        # replace all occurrences of double quotes with escaped double quotes.\n                        if cell.value and re.search(r'\"', cell.value):\n                            cell.value = cell.value.replace('\"', '\"\"')\n            wb.save(excel_file)\n            total_excel_files += 1\n        except FileNotFoundError:\n            print(f'Excel file not found: {", "tokens": ["total", "_", "ex", "cel", "_", "files", " =", " ", "0", "\n", "\n", "    ", "#", " Loop", " over", " all", " Excel", " files", " in", " the", " specified", " directory", ".", "\n", "    ", "for", " excel", "_", "file", " in", " glob", ".", "ig", "lob", "(", "directory", "_", "path", " +", " '", "**", "/*", ".", "x", "ls", "x", "'", ",", " recursive", "=", "True", "):", "\n", "\n", "        ", "#", " Load", " the", " Excel", " file", ".", "\n", "        ", "try", ":", "\n", "            ", "wb", " =", " load", "_", "work", "book", "(", "ex", "cel", "_", "file", ")", "\n", "            ", "#", " Iter", "ate", " over", " all", " works", "heets", " in", " the", " work", "book", ".", "\n", "            ", "for", " w", "s", " in", " w", "b", ".", "works", "heets", ":", "\n", "                ", "#", " Iter", "ate", " over", " all", " cells", " in", " the", " current", " works", "heet", ".", "\n", "                ", "for", " row", " in", " w", "s", ".", "iter", "_", "rows", "():", "\n", "                ", "    ", "for", " cell", " in", " row", ":", "\n", "                ", "        ", "#", " If", " the", " cell", "'", "s", " value", " is", " a", " string", ",", " and", " it", " contains", " double", " quotes", ",", "\n", "                ", "        ", "#", " replace", " all", " occurrences", " of", " double", " quotes", " with", " escaped", " double", " quotes", ".", "\n", "                ", "        ", "if", " cell", ".", "value", " and", " re", ".", "search", "(", "r", "'", "\"", "'", ",", " cell", ".", "value", "):", "\n", "                ", "            ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "')", "\n", "            ", "wb", ".", "save", "(", "ex", "cel", "_", "file", ")", "\n", "            ", "total", "_", "ex", "cel", "_", "files", " +=", " ", "1", "\n", "        ", "except", " File", "NotFound", "Error", ":", "\n", "            ", "print", "(", "f", "'", "Excel", " file", " not", " found", ":", " {"], "logprobs": [-4.403902053833008, -0.24539102613925934, -3.3900070190429688, -0.005912907887250185, -0.041892893612384796, -0.16341532766819, -0.44928082823753357, -0.09833527356386185, -0.0006354220095090568, -0.0409107580780983, -1.4196035861968994, -0.00047958316281437874, -1.9699839353561401, -3.1338300704956055, -1.8722100257873535, -0.26032090187072754, -0.3925416171550751, -0.07442644238471985, -0.04105230048298836, -0.026730792596936226, -0.5028146505355835, -0.004509754944592714, -2.489295721054077, -0.008015608415007591, -0.0017263285117223859, -0.01865321397781372, -0.7200295329093933, -0.009687908925116062, -0.09371379762887955, -0.15197676420211792, -0.010557042434811592, -4.410646579344757e-05, -1.8912055492401123, -0.000734297966118902, -0.03092516027390957, -0.4192023277282715, -0.00010597144137136638, -1.0132738680113107e-05, -0.019496239721775055, -0.0711134672164917, -1.5875310897827148, -0.04262906312942505, -0.004875556565821171, -0.01267155073583126, -0.00013374387344811112, -0.034230686724185944, -0.03658393770456314, -0.0002706876548472792, -0.00595521368086338, -0.0027795510832220316, -0.0006140968762338161, -0.0010191967012360692, -0.0056352089159190655, -2.234898567199707, -0.0030269066337496042, -0.2585223615169525, -1.0722627639770508, -0.04306808114051819, -0.05006564036011696, -0.024675143882632256, -1.0639399290084839, -0.003941031638532877, -0.0003332536434754729, -1.9142918586730957, -0.0004564673872664571, -0.001327705685980618, -0.0037529291585087776, -0.8170453906059265, -0.02291368506848812, -0.00904191192239523, -5.8412379075889476e-06, -0.00017641419253777713, -5.960446742392378e-06, -0.00047946401173248887, -0.1493539959192276, -7.033323527139146e-06, -7.939023635117337e-05, -4.100715523236431e-05, -0.25190457701683044, -0.002211983548477292, -1.6501338481903076, -3.654078245162964, -3.677701473236084, -0.016605732962489128, -0.10256652534008026, -0.32012811303138733, -0.3790004253387451, -0.01809927076101303, -0.7637749910354614, -0.004317249171435833, -1.1274003982543945, -0.0005782362422905862, -0.06950829178094864, -0.003987220581620932, -0.0045217410661280155, -0.03743116557598114, -1.112095832824707, -0.01376269944012165, -0.034999337047338486, -0.0026586444582790136, -0.00630662776529789, -1.3204742670059204, -0.015969472005963326, -0.00034814971149899065, -0.021034613251686096, -0.0007153574260883033, -0.07420941442251205, -0.4488133490085602, -0.4093027114868164, -0.0022643182892352343, -0.004913873504847288, -0.07402610778808594, -0.3756462633609772, -0.025041550397872925, -0.053570546209812164, -1.7164757251739502, -0.13010311126708984, -0.00017081231635529548, -0.026272347196936607, -0.001796657219529152, -0.0037187249399721622, -0.05276244506239891, -0.7686148285865784, -0.09453417360782623, -0.0698699802160263, -2.3603161025675945e-05, -0.007205807138234377, -0.18237712979316711, -0.0012530578533187509, -0.00623377226293087, -0.08417870104312897, -0.004245673306286335, -0.027072660624980927, -0.00582615751773119, -0.7718665599822998, -0.04713889956474304, -0.006268956698477268, -0.00275827175937593, -0.0005470209871418774, -0.0066838511265814304, -0.038676176220178604, -0.0036668223328888416, -0.5671564340591431, -0.8976390957832336, -0.1424800306558609, -0.31592538952827454, -2.56565260887146, -3.2543604902457446e-05, -0.07804089039564133, -0.46320974826812744, -0.31152021884918213, -0.0404350720345974, -0.3686864376068115, -2.4358465671539307, -0.9515722990036011, -0.08778925240039825, -0.530871570110321, -0.01862267591059208, -0.13079628348350525, -1.6850934028625488, -0.0010026433737948537, -0.0025668551679700613, -0.08354751020669937, -1.0702974796295166, -2.3662548065185547, -2.895167112350464, -0.033240072429180145, -0.202651709318161, -0.00805569626390934, -0.05107178911566734, -3.813809394836426, -0.03738098591566086, -0.007202256470918655, -0.16200460493564606, -0.0010700459824874997, -0.006229862570762634, -0.00035208225017413497, -0.0927809625864029, -0.1677197515964508, -0.0034768865443766117, -0.016459165140986443, -0.3335593640804291, -2.1031343936920166, -8.964136941358447e-05, -0.09119389951229095, -0.23969398438930511, -0.11452028155326843, -0.31011447310447693, -0.0707455724477768, -0.24810083210468292, -0.00017450717859901488, -0.13338862359523773, -0.00014745102089364082, -0.00026222606538794935, -0.053241800516843796, -0.006222398951649666, -0.006444150116294622, -0.0020988595206290483, -0.1908256858587265, -0.006580350920557976, -0.0005656072753481567, -0.0013304438907653093, -1.039840579032898, -2.396077979938127e-05, -0.00025293012731708586, -0.0012771077454090118, -0.001383420079946518, -0.1354067027568817, -0.0039152647368609905, -0.00023457636416424066, -0.00013124081306159496, -0.1928924322128296, -0.04288194328546524, -0.014932287856936455, -0.07674361020326614, -0.011091247200965881, -1.270766258239746, -1.0836238861083984, -0.0003554189461283386, -0.002316412515938282, -0.005025849211961031, -0.014581660740077496, -0.0004499138449318707, -0.00016890530241653323, -3.2543604902457446e-05, -0.003511692862957716, -0.09344217926263809, -0.6895021796226501, -0.3961491286754608, -5.1973900554003194e-05, -9.953480184776708e-05, -3.576272320060525e-06, -5.364403477869928e-06, -1.8000440832111053e-05, -0.015982024371623993, -0.0037645678967237473, -4.410646579344757e-05, -0.008861028589308262, -0.21237149834632874, -0.11510907113552094, -2.2171175479888916, -0.002071736380457878, -0.0001802282058633864, -0.11905686557292938, -0.0337991788983345, -0.006149892695248127, -0.7513115406036377, -0.33431050181388855, -0.470293790102005, -1.00388503074646, -2.4617912769317627, -0.04951101914048195, -0.5857880115509033, -0.003237128257751465, -0.0828494280576706, -0.00871509313583374], "finish_reason": "length"}], "metrics": {"energy": 285.08253132724775, "energy_per_token": 1.1136036379970615, "time": 11.349179, "time_per_token": 0.04433273046875}}
{"outputs": [{"text": "total_files = 0\n    file_list = glob.glob(directory_path + '*.xlsx')\n    for file_name in file_list:\n        total_files += 1\n        file_name = os.path.relpath(file_name, directory_path)\n        try:\n            workbook = load_workbook(file_name)\n            for sheet_name in workbook.sheet_names():\n                sheet = workbook[sheet_name]\n                for cell in sheet.iter_cells():\n                    cell.value = re.sub(r\"\\\"\", r\"\\\"\\\"\", str(cell.value))\n        except Exception as e:\n            print('Error processing file:', file_name)\n            print(e)\n    return total_files", "tokens": ["total", "_", "files", " =", " ", "0", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "total", "_", "files", " +=", " ", "1", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "name", ",", " directory", "_", "path", ")", "\n", "        ", "try", ":", "\n", "            ", "work", "book", " =", " load", "_", "work", "book", "(", "file", "_", "name", ")", "\n", "            ", "for", " sheet", "_", "name", " in", " work", "book", ".", "sheet", "_", "names", "():", "\n", "                ", "sheet", " =", " work", "book", "[", "sheet", "_", "name", "]", "\n", "                ", "for", " cell", " in", " sheet", ".", "iter", "_", "cells", "():", "\n", "                ", "    ", "cell", ".", "value", " =", " re", ".", "sub", "(", "r", "\"", "\\\"\"", ",", " r", "\"", "\\\"\\\"", "\"", ",", " str", "(", "cell", ".", "value", "))", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "('", "Error", " processing", " file", ":'", ",", " file", "_", "name", ")", "\n", "            ", "print", "(", "e", ")", "\n", "    ", "return", " total", "_", "files", "\n", "\n", "if"], "logprobs": [-4.403902053833008, -0.24539102613925934, -0.5504189729690552, -0.5323687791824341, -0.0731906071305275, -0.0005559567362070084, -0.030155105516314507, -0.22817932069301605, -3.4292972087860107, -0.025615831837058067, -1.4891732931137085, -0.012186710722744465, -0.17603644728660583, -0.0001431601122021675, -0.013617713004350662, -0.017678311094641685, -0.37535595893859863, -5.769562994828448e-05, -9.417489309271332e-06, -0.059700027108192444, -0.15933769941329956, -0.44453781843185425, -0.05830821394920349, -0.010046864859759808, -0.00012039413559250534, -0.02705734595656395, -0.018120694905519485, -0.018576573580503464, -0.2030153125524521, -0.22857654094696045, -0.2781514525413513, -0.9952328205108643, -0.6715644598007202, -0.002406084444373846, -0.0028204445261508226, -6.079655122448457e-06, -6.246371776796877e-05, -0.0009807306341826916, -0.0032001733779907227, -0.011468201875686646, -2.8108887672424316, -0.0007183355046436191, -0.0012846082681789994, -0.040647074580192566, -0.03507116064429283, -0.00019488819816615433, -0.008947870694100857, -0.024495089426636696, -3.5310254096984863, -0.4490636885166168, -0.9717655777931213, -0.27366480231285095, -0.9411389231681824, -4.625213477993384e-05, -0.0019910766277462244, -0.005338104907423258, -3.3768341541290283, -0.0002162222663173452, -0.003582608886063099, -0.01952020637691021, -9.179073458653875e-06, -0.0007357274298556149, -0.7583900690078735, -0.2680533826351166, -0.0009603655780665576, -2.1934269170742482e-05, -0.004612164571881294, -0.061216287314891815, -0.04886186867952347, -2.4709134101867676, -0.0008438840159215033, -0.0029949357267469168, -0.0021354984492063522, -1.0342661142349243, -0.0027249844279140234, -0.00870043970644474, -0.0135088125243783, -1.0609570381348021e-05, -0.00022873646230436862, -6.854299135738984e-05, -0.0010530170984566212, -0.2648249864578247, -0.0011070796754211187, -0.0012881800066679716, -0.13593046367168427, -0.007277526892721653, -0.3175197243690491, -1.089130163192749, -0.13995419442653656, -2.0256402492523193, -0.3085513412952423, -0.5679317116737366, -0.023866621777415276, -0.0009290431626141071, -0.07912657409906387, -0.045650217682123184, -1.2233078479766846, -0.00013314791431184858, -0.005579493474215269, -0.006335531361401081, -0.0022650319151580334, -0.28031426668167114, -0.018345557153224945, -0.0010184821439906955, -0.0006920088781043887, -0.06245747208595276, -0.00045408427831716835, -0.0002535260282456875, -1.311301275563892e-06, -0.000348268891684711, -0.004548085853457451, -0.012198016047477722, -0.4459434151649475, -1.4996614456176758, -0.2090059071779251, -0.016618045046925545, -0.08331205695867538, -0.14947380125522614, -0.00038985759601928294, -0.25691336393356323, -1.0810083150863647, -0.006292175501585007, -0.0013727060286328197, -0.001260558608919382, -0.92253178358078, -0.4480530321598053, -0.002398592187091708, -0.006788169499486685, -0.49787890911102295, -0.0012356749502941966, -0.01501425914466381, -0.16720493137836456, -0.17173922061920166, -2.513324499130249, -1.4615153074264526, -0.0008890252211131155, -0.34369391202926636, -0.1580711305141449, -0.3261108696460724, -0.005821061320602894, -0.0004107108688913286, -1.0311987400054932, -0.0004207202873658389, -0.0005937243695370853, -0.0035807082895189524, -0.00022825974156148732, -0.03842590004205704, -0.02248344197869301, -0.5126542448997498, -0.025863295421004295, -0.7775466442108154, -0.25305572152137756, -0.19173069298267365, -0.0007113072206266224, -0.011993085965514183, -0.0018496087286621332, -0.13625329732894897, -2.491762638092041, -1.0615694522857666, -0.5336617827415466, -0.26065459847450256, -0.8542909026145935, -0.003084784373641014, -0.023058144375681877, -0.0010977915953844786, -0.00018749863374978304, -0.5925272703170776, -0.0018920868169516325, -0.026551339775323868, -0.07044941931962967, -0.25525689125061035, -0.13801008462905884, -0.06084281951189041, -0.0011736417654901743, -0.39781519770622253, -0.42373576760292053, -0.011138049885630608, -0.00010334911348763853, -6.496695277746767e-05, -0.41161200404167175, -0.008227384649217129, -0.2600283920764923], "finish_reason": "stop"}], "metrics": {"energy": 191.87634213066102, "energy_per_token": 1.054265616102533, "time": 7.9883027, "time_per_token": 0.04389177307692308}}
{"outputs": [{"text": "# create a list of files in the directory\n    file_list = glob.glob(directory_path + \"*.xlsx\")\n    # loop through each file\n    count = 0\n    for filename in file_list:\n        # open the file\n        workbook = load_workbook(filename)\n        sheet = workbook.active\n        # get the first cell value\n        cell_value = sheet[\"A1\"].value\n        # print(cell_value)\n        # loop through each row in the cell value\n        for row in cell_value:\n            # print(row)\n            # print(row[0])\n            # replace double quotes with double backslashes\n            row[0] = row[0].replace('\"', r\"\\\"\")\n            count += 1\n            # write back to file\n            workbook.save(filename)\n    # return the number of files processed\n    return count", "tokens": ["#", " create", " a", " list", " of", " files", " in", " the", " directory", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " \"", "*", ".", "x", "ls", "x", "\"", ")", "\n", "    ", "#", " loop", " through", " each", " file", "\n", "    ", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " file", "_", "list", ":", "\n", "        ", "#", " open", " the", " file", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "active", "\n", "        ", "#", " get", " the", " first", " cell", " value", "\n", "        ", "cell", "_", "value", " =", " sheet", "[", "\"", "A", "1", "\"", "]", ".", "value", "\n", "        ", "#", " print", "(", "cell", "_", "value", ")", "\n", "        ", "#", " loop", " through", " each", " row", " in", " the", " cell", " value", "\n", "        ", "for", " row", " in", " cell", "_", "value", ":", "\n", "            ", "#", " print", "(", "row", ")", "\n", "            ", "#", " print", "(", "row", "[", "0", "])", "\n", "            ", "#", " replace", " double", " quotes", " with", " double", " back", "sl", "ashes", "\n", "            ", "row", "[", "0", "]", " =", " row", "[", "0", "]", ".", "replace", "('", "\"", "'", ",", " r", "\"", "\\\"\"", ")", "\n", "            ", "count", " +=", " ", "1", "\n", "            ", "#", " write", " back", " to", " file", "\n", "            ", "work", "book", ".", "save", "(", "filename", ")", "\n", "    ", "#", " return", " the", " number", " of", " files", " processed", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-1.8038996458053589, -4.192455768585205, -0.6771222352981567, -1.2249563932418823, -0.20290476083755493, -3.159747838973999, -0.6115847229957581, -0.03983968496322632, -0.6817839741706848, -0.18660207092761993, -0.0028433867264539003, -0.9408424496650696, -0.014715700410306454, -0.20140036940574646, -0.0027733694296330214, -0.17853690683841705, -7.033100700937212e-05, -0.003192449454218149, -0.010131125338375568, -0.4739396274089813, -0.00011777184408856556, -1.07287787614041e-05, -0.053413815796375275, -2.072067975997925, -0.3452146053314209, -0.05480782687664032, -0.007694132160395384, -0.00015424491721205413, -0.02545453980565071, -0.0035833215806633234, -0.004187506157904863, -0.00528142461553216, -0.9878360629081726, -0.8840376734733582, -2.0890140533447266, -0.376483291387558, -1.0893363952636719, -0.02667299099266529, -1.2816791534423828, -0.0024792193435132504, -2.289123058319092, -0.028747938573360443, -0.004767479375004768, -0.00316547485999763, -0.009142795577645302, -0.019003119319677353, -0.025937870144844055, -2.341991662979126, -0.0014291321858763695, -0.00134151556994766, -1.645074735279195e-05, -6.556489552167477e-06, -0.0005497612874023616, -0.0014509160537272692, -0.010747053660452366, -0.35899999737739563, -0.9330455660820007, -0.07317166775465012, -0.15047207474708557, -0.8360470533370972, -0.0008163695456460118, -1.6986980438232422, -0.0005110388156026602, -0.0024764842819422483, -0.006395942065864801, -4.291525328881107e-06, -8.284702198579907e-05, -0.0011693552369251847, -0.0004897110629826784, -0.0025100174825638533, -0.08878391981124878, -0.0017473918851464987, -0.018876321613788605, -1.3833030462265015, -0.011299780569970608, -0.0011601868318393826, -0.0016025570221245289, -0.016146257519721985, -0.029300879687070847, -0.006301889196038246, -0.05354263633489609, -0.15489473938941956, -3.09704852104187, -0.3196328282356262, -1.58838951587677, -0.8528233766555786, -1.6617752313613892, -0.3158831298351288, -0.0013656823430210352, -0.5268025398254395, -0.2023635357618332, -0.1043824702501297, -0.010842104442417622, -0.024605009704828262, -1.189007043838501, -0.31397879123687744, -0.020206669345498085, -0.034384116530418396, -0.00041345154750160873, -0.0041809771209955215, -0.0016030330443754792, -0.0002616301644593477, -0.02281895838677883, -0.036805491894483566, -0.10470052063465118, -4.499235153198242, -0.6169762015342712, -0.14866206049919128, -0.004341818857938051, -0.0016594461631029844, -0.0262606181204319, -0.06169059872627258, -0.0386284664273262, -0.19329389929771423, -2.991330623626709, -0.034341614693403244, -0.4267781972885132, -1.7355936765670776, -1.5722761154174805, -0.02492481656372547, -3.4571235179901123, -0.4352319538593292, -0.11621205508708954, -0.008391005918383598, -0.4357321858406067, -0.2981056272983551, -0.17766138911247253, -0.5247671604156494, -2.109982233378105e-05, -0.0007133323233574629, -0.17486704885959625, -0.0015379278920590878, -0.01713906042277813, -0.2660524547100067, -1.2972733974456787, -0.02623971737921238, -0.1331946700811386, -0.0617135725915432, -0.00957031361758709, -0.010801302269101143, -0.27999475598335266, -2.8286404609680176, -0.08087737113237381, -0.7017560005187988, -1.3112084865570068, -0.25931093096733093, -0.143304243683815, -0.011302608996629715, -0.0203297957777977, -0.3363323211669922, -2.113129138946533, -0.7522720694541931, -0.05534248799085617, -0.14731749892234802, -0.4334951341152191, -0.1043103039264679, -0.11420204490423203, -0.0018830440239980817, -0.1692587286233902, -0.0060462187975645065, -1.3248229026794434, -0.1360056847333908, -0.0019110051216557622, -0.0027023961301892996, -0.03962911292910576, -0.4845455288887024, -0.0008001701789908111, -0.0005517867393791676, -0.0007077334448695183, -0.0006507901125587523, -0.0043462105095386505, -0.20478996634483337, -0.03761051222681999, -0.0007580029196105897, -0.0002924968139268458, -2.4679934978485107, -2.4508235454559326, -0.06873200833797455, -0.0016638495726510882, -0.01420799270272255, -0.6501526236534119, -1.7484056949615479, -0.06457389146089554, -0.015485876239836216, -0.0002317160106031224, -0.004955272655934095, -1.9639872312545776, -0.3518657386302948, -2.381648540496826, -2.035433292388916, -0.4405692517757416, -1.7843105792999268, -0.03278886899352074, -0.21703064441680908, -0.13407911360263824, -1.1801649634435307e-05, -0.0006634180317632854, -0.0029424012172967196, -0.0020703088957816362, -0.006957116071134806, -0.009579995647072792, -0.009124722331762314, -0.5670038461685181, -2.2324886322021484, -0.6036509275436401, -0.10323238372802734, -0.25492170453071594, -0.0005416594794951379, -0.08879657089710236, -0.010236854664981365, -0.008774297311902046, -0.0034920922480523586, -0.07949712872505188, -0.01626601442694664, -0.16667954623699188, -0.02334560640156269, -0.5093883275985718], "finish_reason": "stop"}], "metrics": {"energy": 229.84497967433924, "energy_per_token": 1.0591934547204573, "time": 9.66365, "time_per_token": 0.04453294930875576}}
{"outputs": [{"text": "file_count = 0\n    for filename in glob.glob(directory_path + '/*.xlsx'):\n        # Open the Excel file and load it into a Workbook object\n        workbook = load_workbook(filename)\n\n        # Iterate over all worksheets in the Workbook object\n        for worksheet in workbook:\n            # Iterate over all rows in the current worksheet\n            for row in worksheet:\n                # Iterate over all cells in the current row\n                for cell in row:\n                    # Check if the cell contains double quotes\n                    if '\"' in cell.value:\n                        # If there are double quotes, replace them with the double-quoted version\n                        cell.value = re.sub('\"', '\"\"', cell.value)\n\n        # Save the updated workbook\n        workbook.save(filename)\n        print(f\"Updated Excel file '{filename}'.\")\n        file_count += 1\n\n    return file_count", "tokens": ["file", "_", "count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "#", " Open", " the", " Excel", " file", " and", " load", " it", " into", " a", " Work", "book", " object", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "\n", "        ", "#", " Iter", "ate", " over", " all", " works", "heets", " in", " the", " Work", "book", " object", "\n", "        ", "for", " works", "heet", " in", " work", "book", ":", "\n", "            ", "#", " Iter", "ate", " over", " all", " rows", " in", " the", " current", " works", "heet", "\n", "            ", "for", " row", " in", " works", "heet", ":", "\n", "                ", "#", " Iter", "ate", " over", " all", " cells", " in", " the", " current", " row", "\n", "                ", "for", " cell", " in", " row", ":", "\n", "                ", "    ", "#", " Check", " if", " the", " cell", " contains", " double", " quotes", "\n", "                ", "    ", "if", " '", "\"", "'", " in", " cell", ".", "value", ":", "\n", "                ", "        ", "#", " If", " there", " are", " double", " quotes", ",", " replace", " them", " with", " the", " double", "-", "quoted", " version", "\n", "                ", "        ", "cell", ".", "value", " =", " re", ".", "sub", "('", "\"", "'", ",", " '", "\"", "\"", "'", ",", " cell", ".", "value", ")", "\n", "\n", "        ", "#", " Save", " the", " updated", " work", "book", "\n", "        ", "work", "book", ".", "save", "(", "filename", ")", "\n", "        ", "print", "(", "f", "\"", "Updated", " Excel", " file", " '", "{", "filename", "}'", ".", "\"", ")", "\n", "        ", "file", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "return", " file", "_", "count"], "logprobs": [-2.444864273071289, -0.027165941894054413, -0.7656840085983276, -0.013907312415540218, -0.009396611712872982, -0.0005433275364339352, -0.02894645370543003, -0.21100293099880219, -0.5302210450172424, -1.3741772174835205, -0.005286641884595156, -0.020850984379649162, -5.745722592109814e-05, -0.17790848016738892, -0.020232370123267174, -0.47274258732795715, -7.283422019099817e-05, -7.867782187531702e-06, -0.04203440994024277, -0.1550794392824173, -1.912976622581482, -0.061427630484104156, -0.011543858796358109, -5.221230458118953e-05, -0.01391989178955555, -0.019616765901446342, -0.0007383481133729219, -0.014835510402917862, -0.010476120747625828, -3.105168342590332, -2.288701057434082, -0.18596681952476501, -0.4823506474494934, -0.04297775775194168, -1.5733072757720947, -1.7133733034133911, -1.242935061454773, -0.5962870717048645, -0.7694636583328247, -1.2820303440093994, -0.0015789910685271025, -0.2040177434682846, -0.11715669929981232, -0.0010439666220918298, -0.6003057956695557, -0.0001382732152706012, -0.0037446157075464725, -0.0194147527217865, -5.960446742392378e-06, -0.00014447122521232814, -0.0013959197094663978, -0.0003992714046034962, -0.0017661938909441233, -0.08900576829910278, -0.0012502004392445087, -0.8274042010307312, -0.001408776268362999, -0.03782874345779419, -0.8535121083259583, -0.0010346779599785805, -0.45618781447410583, -0.8285086154937744, -0.4117674231529236, -0.007080344948917627, -0.11116664111614227, -0.0014460355741903186, -0.9820195436477661, -0.00014995403762441128, -0.5074943900108337, -0.03485451638698578, -0.0003053675754927099, -0.01008698996156454, -0.7377601265907288, -5.113947918289341e-05, -0.017729023471474648, -0.0009017692063935101, -0.000248401309363544, -0.4055987596511841, -0.0005023409612476826, -0.10532837361097336, -0.22764647006988525, -0.08826368302106857, -0.0002673506969586015, -0.0018563910853117704, -0.10648024082183838, -0.9317914843559265, -0.02367454767227173, -0.0401284322142601, -1.1334277391433716, -0.02550916001200676, -5.376194530981593e-05, -0.03307643160223961, -0.0011194637045264244, -0.011529364623129368, -0.006931426469236612, -0.16934920847415924, -0.05579027906060219, -5.8412379075889476e-06, -1.7028169631958008, -0.0008349508279934525, -0.015498904511332512, -0.10414575040340424, -0.18111108243465424, -0.0007098776986822486, -0.0011529234470799565, -0.08438678085803986, -0.023777922615408897, -0.0030452092178165913, -0.01651369035243988, -0.012727225199341774, -0.004099775105714798, -0.021252170205116272, -0.001437822007574141, -0.013850645162165165, -0.07304035872220993, -0.013878156431019306, -0.0011330381967127323, -0.00109576724935323, -0.0005382042727433145, -0.007267467677593231, -0.000894027529284358, -0.24654176831245422, -0.8290464282035828, -0.025982124730944633, -0.04515638202428818, -0.5680164694786072, -1.5476701259613037, -1.8392133712768555, -0.023483367636799812, -0.3168579936027527, -0.0008617501589469612, -0.00011705666838679463, -0.054177578538656235, -1.9797587394714355, -0.00805368646979332, -0.0027133338153362274, -0.003492448478937149, -0.09300355613231659, -0.0018076046835631132, -0.000278195773717016, -0.053157705813646317, -0.001734420657157898, -0.005713797174394131, -0.0013749678619205952, -0.08830766379833221, -1.5957635641098022, -3.086251974105835, -0.17294086515903473, -0.03224639594554901, -0.000782183778937906, -0.0943974032998085, -0.7615847587585449, -0.11311537027359009, -0.00982874445617199, -3.6103391647338867, -1.369776964187622, -1.763624906539917, -2.40075945854187, -3.4136712551116943, -0.17217576503753662, -0.0010420613689348102, -0.00023398046323563904, -0.2211819291114807, -0.013985724188387394, -0.0002101439022226259, -0.0008131535141728818, -1.1392284631729126, -0.00037722624256275594, -0.00708874873816967, -0.5685625672340393, -0.036693572998046875, -0.00884424988180399, -8.11782301752828e-05, -0.292207807302475, -0.0905696228146553, -0.02737462893128395, -0.042480774223804474, -0.00024279984063468874, -0.013458944857120514, -0.00018785618885885924, -5.566918844124302e-05, -0.007907869294285774, -0.008119788020849228, -0.3209633231163025, -0.5039125084877014, -0.07649296522140503, -0.041917815804481506, -0.010521064512431622, -0.7311156988143921, -1.0635895729064941, -0.0004256058018654585, -2.1348278522491455, -0.0001911934232339263, -0.004795122891664505, -1.1324817933200393e-05, -0.00012158608296886086, -0.0005401106318458915, -0.001178047270514071, -0.0029290891252458096, -0.012057160958647728, -0.0016531385481357574, -0.9301866292953491, -2.8506784439086914, -0.21018429100513458, -0.37281230092048645, -0.3821963965892792, -1.1758555173873901, -2.072504758834839, -0.02155543491244316, -2.7320761680603027, -0.0004609952447935939, -0.0618879459798336, -0.01806766167283058, -0.5347356200218201, -0.010401562787592411, -0.0007140470552258193, -0.01044615637511015, -0.06514289230108261, -0.024715732783079147, -1.1444026313256472e-05, -5.054346183896996e-05, -0.008156797848641872, -0.0032660020515322685, -2.8729025871143676e-05, -0.008277160115540028, -0.38103413581848145, -0.026389852166175842, -0.3177030086517334, -0.004706257954239845, -2.2291887944447808e-05, -1.07287787614041e-05], "finish_reason": "stop"}], "metrics": {"energy": 282.1108562278748, "energy_per_token": 1.221259117869588, "time": 10.272123, "time_per_token": 0.04446806493506494}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory not found: {directory_path}\")\n\n    # Check if directory is a file\n    if os.path.isfile(directory_path):\n        raise NotADirectoryError(f\"{directory_path} is a file\")\n\n    # Check if there are any files in the directory\n    if not os.listdir(directory_path):\n        raise FileNotFoundError(f\"No files found in {directory_path}\")\n\n    # Get a list of all files in the directory\n    files = glob.glob(f\"{directory_path}/*.xlsx\")\n\n    # Process each file\n    for file_path in files:\n        # Open the Excel file and get the active sheet\n        workbook = load_workbook(file_path)\n        worksheet = workbook.active\n\n        # Iterate over each row\n        for row in worksheet.iter_rows():\n            # Iterate over each cell in the row\n            for cell in row:\n                ", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "directory", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Check", " if", " directory", " is", " a", " file", "\n", "    ", "if", " os", ".", "path", ".", "is", "file", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " Not", "AD", "irect", "ory", "Error", "(", "f", "\"", "{", "directory", "_", "path", "}", " is", " a", " file", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " files", " in", " the", " directory", "\n", "    ", "if", " not", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "No", " files", " found", " in", " {", "directory", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "_", "path", "}", "/*", ".", "x", "ls", "x", "\"", ")", "\n", "\n", "    ", "#", " Process", " each", " file", "\n", "    ", "for", " file", "_", "path", " in", " files", ":", "\n", "        ", "#", " Open", " the", " Excel", " file", " and", " get", " the", " active", " sheet", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "file", "_", "path", ")", "\n", "        ", "works", "heet", " =", " work", "book", ".", "active", "\n", "\n", "        ", "#", " Iter", "ate", " over", " each", " row", "\n", "        ", "for", " row", " in", " works", "heet", ".", "iter", "_", "rows", "():", "\n", "            ", "#", " Iter", "ate", " over", " each", " cell", " in", " the", " row", "\n", "            ", "for", " cell", " in", " row", ":", "\n", "                "], "logprobs": [-1.8038996458053589, -2.3534131050109863, -0.3875317871570587, -0.7236762642860413, -0.3892243206501007, -0.37580254673957825, -0.645248532295227, -0.0018089136574417353, -0.024070413783192635, -0.048208776861429214, -0.0042654965072870255, -7.390948667307384e-06, -6.663577369181439e-05, -0.0011922164121642709, -0.5345507860183716, -0.00017486473370809108, -0.0015787529991939664, -0.0001911934232339263, -5.960446742392378e-06, -0.011044087819755077, -0.0015712546883150935, -0.0009924016194418073, -0.9687328338623047, -0.34336796402931213, -0.0013193720951676369, -0.00014244495832826942, -0.17864897847175598, -0.5506575703620911, -0.17334771156311035, -0.16566117107868195, -1.214715600013733, -0.0017333496361970901, -0.08224945515394211, -0.020422888919711113, -0.0011326810345053673, -0.00011801023356383666, -2.0861407392658293e-05, -0.02831706963479519, -9.333651541965082e-05, -0.002449371386319399, -0.14765046536922455, -0.0011179156135767698, -0.08729570358991623, -1.1715773344039917, -0.06539773941040039, -3.134779453277588, -0.49031397700309753, -0.8347246646881104, -0.8121370673179626, -0.7349042296409607, -0.0006114759016782045, -0.0484003983438015, -0.4544982314109802, -1.4305012882687151e-05, -4.029192859889008e-05, -0.0027149980887770653, -0.0006411403883248568, -0.022643931210041046, -0.00015198028995655477, -0.0011288706446066499, -7.223821739898995e-05, -3.4570634852570947e-06, -0.009180122055113316, -0.002859196625649929, -0.0005746620590798557, -0.0703950896859169, -1.5323810577392578, -0.0015349523164331913, -0.00016175392374861985, -8.654219709569588e-05, -0.00033766290289349854, -0.006987184751778841, -0.12939773499965668, -0.003937588073313236, -0.35872140526771545, -0.0029970749747008085, -0.0002790300059132278, -8.272782724816352e-05, -0.0048807766288518906, -0.014767619781196117, -0.5193923115730286, -0.013705789111554623, -1.4122319221496582, -0.0005532164941541851, -0.0025362963788211346, -0.021874235942959785, -0.0017755947774276137, -0.14932063221931458, -0.7775464653968811, -0.06565006822347641, -3.251307964324951, -0.1935594528913498, -1.0025898218154907, -1.3967150449752808, -0.13972854614257812, -0.03959817811846733, -0.038957808166742325, -0.029464097693562508, -0.0005142558366060257, -0.22880613803863525, -0.3128952085971832, -0.5397371649742126, -0.000550357042811811, -0.028231661766767502, -2.3841830625315197e-06, -0.00030393750057555735, -0.0004943578969687223, -2.9444261599564925e-05, -2.3841830625315197e-06, -0.010389764793217182, -0.001613387605175376, -0.0005053196800872684, -0.21761174499988556, -0.3946411907672882, -0.0029050789307802916, -7.30726242181845e-05, -0.0068687982857227325, -0.08144135773181915, -0.003295350354164839, -0.47121497988700867, -0.08900041878223419, -0.053119610995054245, -0.011344334110617638, -0.37338706851005554, -0.0006107610533945262, -0.00029690624796785414, -1.3708974620385561e-05, -0.035744618624448776, -0.00010668662434909493, -0.00034517052699811757, -0.007086736615747213, -0.0016113643068820238, -0.28439053893089294, -1.7420581579208374, -1.959713339805603, -0.023833099752664566, -0.001522692502476275, -0.6050399541854858, -2.3309261798858643, -0.11530507355928421, -0.011696922592818737, -0.047718703746795654, -0.22659142315387726, -0.0004297763225622475, -0.8717160820960999, -0.14072798192501068, -0.13554631173610687, -5.686121585313231e-05, -0.007519867736846209, -0.0028393452521413565, -1.7250339984893799, -0.05443783104419708, -0.0013803249457851052, -0.0028974716551601887, -5.1377883210079744e-05, -1.0728830375228426e-06, -0.05837051570415497, -0.06979960948228836, -0.06975547224283218, -0.03940199688076973, -0.0002506657037883997, -0.02233400195837021, -0.0019220703979954123, -0.012883991934359074, -0.0034957746975123882, -0.11087699979543686, -0.0003156163729727268, -0.17363524436950684, -2.395925521850586, -0.3736513555049896, -0.182700514793396, -0.6022773385047913, -0.00046266341814771295, -1.6163790225982666, -0.1591208428144455, -1.4979370832443237, -0.28350576758384705, -0.0008449559682048857, -0.002258847001940012, -0.0002619877050165087, -0.0008073169738054276, -0.03277202695608139, -1.082973599433899, -1.9900627136230469, -0.07657688856124878, -1.5464372634887695, -0.040090411901474, -1.8487269878387451, -0.9327805042266846, -0.2670677900314331, -3.410923957824707, -0.33128663897514343, -0.02390456758439541, -0.0009226117981597781, -1.01018226146698, -0.00015221867943182588, -0.006018610205501318, -0.006577863823622465, -2.0265558760002023e-06, -0.00010275312524754554, -1.2993727978027891e-05, -0.00029118589009158313, -0.24788649380207062, -0.002044136868789792, -0.00039307496626861393, -0.18364712595939636, -0.0011173202656209469, -0.007191249635070562, -2.9391047954559326, -0.009510212577879429, -0.003188884584233165, -0.0025486627127975225, -0.0009202298242598772, -0.016911230981349945, -0.05812331661581993, -0.007122127804905176, -0.15656977891921997, -0.0009270184673368931, -0.03231888264417648, -1.438807487487793, -0.0012004319578409195, -0.34157538414001465, -0.9147378206253052, -0.9725276827812195, -1.5813273191452026, -0.0002818902430590242, -0.06752221286296844, -0.04845332354307175, -0.2348678857088089, -0.13045944273471832, -1.0132738680113107e-05, -0.03744758665561676, -0.08796798437833786, -0.0004472924047149718, -0.001723829424008727, -0.10149436444044113, -0.0011372057488188148, -0.052074894309043884, -0.24265524744987488, -0.17328184843063354, -0.0004032037395518273, -0.0019317077239975333, -0.011239547282457352, -0.06137538701295853, -0.2958262860774994, -0.04526963829994202, -0.07032931596040726, -0.02326349914073944, -0.0006565084331668913, -0.010349062271416187, -0.013680978678166866, -0.0043235402554273605, -0.0030852595809847116, -0.0008001701789908111, -0.0005839549703523517, -0.01250886544585228], "finish_reason": "length"}], "metrics": {"energy": 277.46388826847084, "energy_per_token": 1.0838433135487142, "time": 11.55735, "time_per_token": 0.0451458984375}}
{"outputs": [{"text": "workbooks = []\n    workbook_count = 0\n    for filepath in glob.glob(f'{directory_path}/*.xlsx'):\n        try:\n            wb = load_workbook(filepath, data_only=True)\n        except Exception as e:\n            print(f'Error loading {filepath}: {e}')\n            continue\n        workbooks.append(wb)\n        workbook_count += 1\n        for sheet in wb:\n            for cell in sheet.iter_cells(values_only=True):\n                cell.value = re.sub(r\"(\\\")\", r\"\\\"\\\\\\\"\", str(cell.value))\n    print(f'Finished processing {workbook_count} Excel files.')\n    return workbook_count", "tokens": ["work", "books", " =", " []", "\n", "    ", "work", "book", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", "path", " in", " glob", ".", "glob", "(", "f", "'{", "directory", "_", "path", "}", "/*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "try", ":", "\n", "            ", "wb", " =", " load", "_", "work", "book", "(", "file", "path", ",", " data", "_", "only", "=", "True", ")", "\n", "        ", "except", " Exception", " as", " e", ":", "\n", "            ", "print", "(", "f", "'", "Error", " loading", " {", "file", "path", "}:", " {", "e", "}", "')", "\n", "            ", "continue", "\n", "        ", "work", "books", ".", "append", "(", "wb", ")", "\n", "        ", "work", "book", "_", "count", " +=", " ", "1", "\n", "        ", "for", " sheet", " in", " w", "b", ":", "\n", "            ", "for", " cell", " in", " sheet", ".", "iter", "_", "cells", "(", "values", "_", "only", "=", "True", "):", "\n", "                ", "cell", ".", "value", " =", " re", ".", "sub", "(", "r", "\"", "(\\\"", ")\"", ",", " r", "\"", "\\\"", "\\\\\\\"", "\"", ",", " str", "(", "cell", ".", "value", "))", "\n", "    ", "print", "(", "f", "'", "Fin", "ished", " processing", " {", "work", "book", "_", "count", "}", " Excel", " files", ".", "')", "\n", "    ", "return", " work", "book", "_", "count", "\n", "\n", "def"], "logprobs": [-2.9801406860351562, -0.7714434862136841, -0.19423004984855652, -1.289628505706787, -0.02372274361550808, -0.11786939203739166, -2.4734597206115723, -0.7893584370613098, -0.09135297685861588, -0.877773106098175, -0.007809109054505825, -0.0069110640324652195, -0.002724508987739682, -0.017510229721665382, -0.30825576186180115, -0.7671443819999695, -1.071125864982605, -2.283844470977783, -0.011560710147023201, -0.02315739169716835, -0.0001212284987559542, -0.15730617940425873, -0.016751693561673164, -2.524533748626709, -0.9383338093757629, -0.006181763019412756, -0.00011359999916749075, -1.2874520507466514e-05, -0.06212189048528671, -0.8757405281066895, -0.05876760929822922, -0.034473955631256104, -7.92710343375802e-05, -0.015307680703699589, -0.016316797584295273, -0.0012660353677347302, -0.013799265958368778, -0.010571314953267574, -1.3264379501342773, -0.000276765669696033, -0.0024894457310438156, -0.0014250847743824124, -1.8713581562042236, -0.01053227111697197, -0.032292336225509644, -9.775113539944869e-06, -0.00015317220822907984, -1.0371154530730564e-05, -0.0007964776013977826, -0.57831871509552, -0.0003793711948674172, -1.2997214794158936, -0.6552157998085022, -1.4305012882687151e-05, -0.0020180828869342804, -0.0032576846424490213, -0.03687179088592529, -0.22319580614566803, -0.018070120364427567, -1.3212031126022339, -0.003181279404088855, -1.0309263467788696, -0.4743853211402893, -0.2746313214302063, -0.0011725700460374355, -0.014001123607158661, -0.002141089178621769, -0.19182457029819489, -0.1371728777885437, -0.3350916802883148, -0.47919759154319763, -0.8817650079727173, -0.6398963332176208, -0.950988233089447, -0.011609847657382488, -0.0005993238883093, -0.1838771551847458, -0.020914025604724884, -0.19607150554656982, -0.04955378919839859, -0.02130270190536976, -0.0034781931899487972, -0.3120684027671814, -0.04725988954305649, -0.010032820515334606, -0.183253675699234, -0.5577800273895264, -0.17434707283973694, -0.005929380189627409, -0.004987180698662996, -0.05669236183166504, -0.003954211715608835, -0.00269787828437984, -0.0018256916664540768, -0.10479199141263962, -0.03797450661659241, -0.000387831823900342, -8.904537389753386e-05, -0.0003196682082489133, -0.007270071189850569, -0.004115802235901356, -3.218599158572033e-05, -0.001848061801865697, -2.331911563873291, -1.0434846878051758, -0.29247382283210754, -0.15910762548446655, -0.135210320353508, -0.001001690630801022, -0.3403228223323822, -0.010317088104784489, -0.003416180144995451, -0.8159964084625244, -0.7127659320831299, -0.09560449421405792, -0.010883613489568233, -0.17386429011821747, -0.2247411161661148, -0.0008015995263122022, -0.1819724440574646, -0.566300630569458, -0.6585898995399475, -0.004460623487830162, -0.0003045333724003285, -0.0010146714048460126, -0.014455827884376049, -0.08706287294626236, -0.007294805254787207, -0.003526779357343912, -1.727768898010254, -0.23332276940345764, -0.032102566212415695, -0.014507642947137356, -0.7173052430152893, -0.0031272100750356913, -0.03474525734782219, -0.20456458628177643, -0.19587315618991852, -2.7726032733917236, -1.7294847965240479, -0.603192925453186, -0.0010034770239144564, -0.35104504227638245, -0.12638263404369354, -2.917646884918213, -0.40304994583129883, -0.16968457400798798, -0.0007848043460398912, -1.2598615884780884, -0.00040534863364882767, -0.0006805725861340761, -0.009004698134958744, -0.00045015214709565043, -0.022727718576788902, -0.043702058494091034, -0.8307926058769226, -2.318584442138672, -0.059200726449489594, -0.17755350470542908, -0.3325304687023163, -3.8316824436187744, -0.015871504321694374, -0.2805189788341522, -0.030502744019031525, -0.02010759711265564, -0.06256027519702911, -3.731181277544238e-05, -2.0861407392658293e-05, -0.005877118557691574, -1.3448084592819214, -0.06354085355997086, -0.5686826109886169, -0.020828450098633766, -0.025267768651247025, -0.18506412208080292, -0.09727565199136734, -0.015900015830993652, -0.004998805467039347, -7.760223525110632e-05, -1.2636104656849056e-05, -0.26165688037872314, -0.014026866294443607, -2.1922037601470947], "finish_reason": "stop"}], "metrics": {"energy": 206.17231683444984, "energy_per_token": 1.1266246821554637, "time": 7.999422, "time_per_token": 0.04371268852459016}}
{"outputs": [{"text": "if not isinstance(directory_path, str):\n        raise TypeError('directory_path should be a string')\n    if not os.path.isdir(directory_path):\n        raise ValueError('directory_path should be a valid path to a directory')\n    if not os.access(directory_path, os.R_OK):\n        raise PermissionError('directory_path should be a valid readable path')\n\n    file_count = 0\n\n    for filename in glob.glob(os.path.join(directory_path, '*.xlsx')):\n        wb = load_workbook(filename)\n        ws = wb.active\n\n        for row in ws.iter_rows():\n            for cell in row:\n                cell.value = re.sub(\n                    '\"(?![\\s\\S]*(?:[\"\\\\]|$))|(?<![\\s\\S]*)(?=\\\\s)(\\\\\\\\\")(?![\\s\\S]*)(?![\\s\\S]*(?:[\"\\\\]|$))(?<![\\s\\S]*)(?![\\s\\S]*", "tokens": ["if", " not", " isinstance", "(", "directory", "_", "path", ",", " str", "):", "\n", "        ", "raise", " Type", "Error", "('", "directory", "_", "path", " should", " be", " a", " string", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " Value", "Error", "('", "directory", "_", "path", " should", " be", " a", " valid", " path", " to", " a", " directory", "')", "\n", "    ", "if", " not", " os", ".", "access", "(", "directory", "_", "path", ",", " os", ".", "R", "_", "OK", "):", "\n", "        ", "raise", " Perm", "ission", "Error", "('", "directory", "_", "path", " should", " be", " a", " valid", " read", "able", " path", "')", "\n", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", ".", "x", "ls", "x", "'))", ":", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "ws", " =", " w", "b", ".", "active", "\n", "\n", "        ", "for", " row", " in", " w", "s", ".", "iter", "_", "rows", "():", "\n", "            ", "for", " cell", " in", " row", ":", "\n", "                ", "cell", ".", "value", " =", " re", ".", "sub", "(", "\n", "                ", "    ", "'", "\"", "(", "?", "!", "[\\", "s", "\\", "S", "]", "*(", "?", ":[", "\"", "\\\\]", "|$", "))", "|", "(", "?", "<", "!", "[\\", "s", "\\", "S", "]*", ")(", "?", "=\\\\", "s", ")(\\\\", "\\\\", "\"", ")(", "?", "!", "[\\", "s", "\\", "S", "]*", ")(", "?", "!", "[\\", "s", "\\", "S", "]", "*(", "?", ":[", "\"", "\\\\]", "|$", "))", "(", "?", "<", "!", "[\\", "s", "\\", "S", "]*", ")(", "?", "!", "[\\", "s", "\\", "S", "]*"], "logprobs": [-2.9392833709716797, -0.2214018702507019, -2.6785812377929688, -0.0003409996279515326, -0.008788359351456165, -0.00020787939138244838, -7.033323527139146e-06, -0.00029940891545265913, -0.022473067045211792, -0.24765314161777496, -0.019746508449316025, -0.002258133376017213, -0.41214990615844727, -0.24141930043697357, -7.986703712958843e-05, -1.0039392709732056, -1.212249517440796, -0.05943237990140915, -0.0012159105390310287, -1.6892738342285156, -0.005854838062077761, -0.22719597816467285, -0.1381843090057373, -0.5587592720985413, -0.0009497660794295371, -0.3729110658168793, -0.4767308235168457, -0.08060015738010406, -0.15679970383644104, -3.4927710657939315e-05, -0.0006700892699882388, -0.005511090159416199, -0.5228091478347778, -0.006803561467677355, -0.0005727558163926005, -0.002544382121413946, -2.396077979938127e-05, -7.510157047363464e-06, -0.006316459737718105, -0.0017946342704817653, -0.0006063529872335494, -0.029939014464616776, -1.1202936172485352, -3.0636318115284666e-05, -0.11939598619937897, -0.685751736164093, -0.035750485956668854, -0.0006193388253450394, -0.5925219655036926, -0.07924310117959976, -0.12752972543239594, -0.33834826946258545, -1.277166485786438, -0.11335540562868118, -0.21888406574726105, -0.03268422931432724, -0.12552659213542938, -0.00034397884155623615, -0.6559562087059021, -1.4759646654129028, -0.13786116242408752, -0.7416249513626099, -0.005377115216106176, -1.3358670473098755, -0.0005069877952337265, -0.0035564762074500322, -3.4927710657939315e-05, -1.549708758830093e-05, -0.000636255950666964, -0.003414635546505451, -0.0001711698860162869, -0.10399921983480453, -2.729855441430118e-05, -0.00013934595335740596, -0.20967695116996765, -0.00916228536516428, -0.00067223358200863, -0.011429546400904655, -0.3746713399887085, -9.42901024245657e-05, -2.610649426060263e-05, -0.020274659618735313, -0.40753862261772156, -0.011211138218641281, -0.0005354639724828303, -0.35665392875671387, -0.14388087391853333, -0.39212295413017273, -1.7780805826187134, -2.300346851348877, -0.5042132139205933, -0.16845835745334625, -0.14945882558822632, -0.0007641970878466964, -0.5707600712776184, -0.0008082698914222419, -1.9560832977294922, -0.019300518557429314, -0.870811939239502, -0.007869667373597622, -0.008165192790329456, -0.0005771639989688993, -0.024252640083432198, -1.8306193351745605, -0.0003518439189065248, -0.20273882150650024, -1.200321078300476, -0.0043069226667284966, -0.04012453928589821, -4.625213477993384e-05, -0.16362334787845612, -0.017483873292803764, -1.0270541906356812, -4.768360213347478e-06, -0.00019834458362311125, -0.001095290994271636, -0.0024170251563191414, -0.0017999890260398388, -0.0032926176209002733, -9.42901024245657e-05, -2.622600959512056e-06, -0.0031311316415667534, -0.1414685845375061, -0.08582112938165665, -0.09015544503927231, -0.015614395961165428, -0.0001515035255579278, -0.020711224526166916, -0.00786694698035717, -0.0005816913326270878, -0.005898568779230118, -0.029930338263511658, -1.9513635635375977, -0.02551543526351452, -0.01677115447819233, -8.702239938429557e-06, -0.0001770101225702092, -1.6689160474925302e-05, -0.000557267339900136, -0.006647970527410507, -0.362853080034256, -0.008949879556894302, -0.048265572637319565, -0.8617691993713379, -0.0065287151373922825, -0.0033208958338946104, -4.887569048150908e-06, -0.08183719217777252, -0.13061805069446564, -0.007920878939330578, -1.5000624656677246, -0.0006974886637181044, -0.5820251703262329, -0.3627408742904663, -0.11472905427217484, -0.20247715711593628, -0.0001299296854995191, -0.09325823932886124, -0.14910663664340973, -0.0002547178009990603, -0.005100809037685394, -0.4928381145000458, -0.0143471360206604, -0.00787404365837574, -0.33246251940727234, -0.06028011813759804, -0.005543573759496212, -0.004926091525703669, -0.0010893370490521193, -0.003300934797152877, -0.007582218386232853, -1.0337419509887695, -0.24557791650295258, -0.005675037391483784, -0.008410037495195866, -0.3440898060798645, -0.0008313775178976357, -0.011879649944603443, -0.19529956579208374, -3.000304698944092, -0.00037377048283815384, -0.00923705380409956, -1.6826540231704712, -0.09977932274341583, -2.3820056915283203, -0.3860839903354645, -0.3451521396636963, -3.757080078125, -1.1978713274002075, -1.2253649234771729, -0.32527121901512146, -2.072768449783325, -1.389221429824829, -0.604821503162384, -3.461637496948242, -0.4676411747932434, -1.315354585647583, -1.370779275894165, -0.01088007539510727, -2.8038840293884277, -0.41922521591186523, -0.021666379645466805, -0.14171773195266724, -0.042357832193374634, -0.34427300095558167, -0.017652075737714767, -0.006615049205720425, -0.0003607814433053136, -1.4878939390182495, -0.7992092967033386, -0.4219735264778137, -3.9451346397399902, -1.5069974660873413, -3.948021411895752, -2.307018518447876, -0.8780457377433777, -2.436988115310669, -0.05203358829021454, -0.09364345669746399, -0.3219999670982361, -0.0024964616168290377, -0.05383581668138504, -0.0002623452164698392, -0.8141354322433472, -0.3153802752494812, -0.019420482218265533, -2.4485318660736084, -1.1431025266647339, -0.006674377713352442, -0.08437757939100266, -0.0017752378480508924, -1.6406631469726562, -0.44238024950027466, -0.0011978124966844916, -0.27923449873924255, -0.006536058150231838, -0.030919149518013, -0.014231850393116474, -0.006219437345862389, -2.321885585784912, -0.009103459306061268, -0.23138679563999176, -0.029969673603773117, -0.12678050994873047, -0.0016883655916899443, -0.01066650077700615, -0.0006573423161171377, -0.12887001037597656, -0.26139357686042786, -0.05300498008728027, -2.7706284523010254, -0.1517096757888794, -0.0025358207058161497, -0.026592666283249855, -0.0013256819220259786, -0.4582822024822235], "finish_reason": "length"}], "metrics": {"energy": 316.48342750740034, "energy_per_token": 1.2362633887007826, "time": 11.353874, "time_per_token": 0.0443510703125}}
{"outputs": [{"text": "counter = 0\n\n    for filename in glob.glob(directory_path + '*.xlsx'):\n        sheet = load_workbook(filename, data_only=True).active\n        if len(sheet) > 0:\n            cell_iterator = iter(sheet)\n            cell = next(cell_iterator)\n            first_row = cell\n            while True:\n                cell = next(cell_iterator)\n                if len(cell) > 0:\n                    if cell[0].value is not None:\n                        break\n            regex_str = r\"(?<!\\\\)(?<!\\\\)(\\\"|')\"\n            matches = re.finditer(regex_str, first_row[0].value)\n            for match in matches:\n                row = match.span()\n                first_cell = row[0] + 1\n                last_cell = row[1]\n                for cell in itertools.zip_longest(cell_iterator, range(1, len(cell)+1), fillvalue=None):\n                    cell = cell[0]\n                    if cell", "tokens": ["counter", " =", " ", "0", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "sheet", " =", " load", "_", "work", "book", "(", "filename", ",", " data", "_", "only", "=", "True", ")", ".", "active", "\n", "        ", "if", " len", "(", "sheet", ")", " >", " ", "0", ":", "\n", "            ", "cell", "_", "iterator", " =", " iter", "(", "sheet", ")", "\n", "            ", "cell", " =", " next", "(", "cell", "_", "iterator", ")", "\n", "            ", "first", "_", "row", " =", " cell", "\n", "            ", "while", " True", ":", "\n", "                ", "cell", " =", " next", "(", "cell", "_", "iterator", ")", "\n", "                ", "if", " len", "(", "cell", ")", " >", " ", "0", ":", "\n", "                ", "    ", "if", " cell", "[", "0", "]", ".", "value", " is", " not", " None", ":", "\n", "                ", "        ", "break", "\n", "            ", "regex", "_", "str", " =", " r", "\"", "(", "?", "<", "!", "\\\\", ")(", "?", "<", "!", "\\\\)", "(\\\"", "|", "')", "\"", "\n", "            ", "matches", " =", " re", ".", "find", "iter", "(", "regex", "_", "str", ",", " first", "_", "row", "[", "0", "]", ".", "value", ")", "\n", "            ", "for", " match", " in", " matches", ":", "\n", "                ", "row", " =", " match", ".", "span", "()", "\n", "                ", "first", "_", "cell", " =", " row", "[", "0", "]", " +", " ", "1", "\n", "                ", "last", "_", "cell", " =", " row", "[", "1", "]", "\n", "                ", "for", " cell", " in", " iter", "tools", ".", "zip", "_", "long", "est", "(", "cell", "_", "iterator", ",", " range", "(", "1", ",", " len", "(", "cell", ")+", "1", ")", ",", " fill", "value", "=", "None", "):", "\n", "                ", "    ", "cell", " =", " cell", "[", "0", "]", "\n", "                ", "    ", "if", " cell"], "logprobs": [-2.6936798095703125, -0.049842920154333115, -0.008180209435522556, -0.0024062031880021095, -0.04033122956752777, -1.915922999382019, -0.0006064721383154392, -0.5948892831802368, -1.1253582239151, -0.007075728382915258, -0.038798198103904724, -7.092700980138034e-05, -0.1396913230419159, -0.018947675824165344, -0.6073467135429382, -6.97350042173639e-05, -8.106198947643861e-06, -0.042179446667432785, -0.1663539558649063, -0.24544568359851837, -0.03607951104640961, -0.00991892535239458, -6.770858453819528e-05, -0.018195616081357002, -0.028246726840734482, -0.0006679449579678476, -0.012883638963103294, -0.04239211231470108, -4.297893524169922, -0.1318456530570984, -0.13897037506103516, -0.00011991735664196312, -0.0030656505841761827, -0.0005999195855110884, -0.002203062642365694, -0.005057992413640022, -1.4707112312316895, -0.7230634093284607, -2.5152843591058627e-05, -0.0015813715290278196, -0.00372430682182312, -0.007828152738511562, -0.13689087331295013, -0.07126767188310623, -0.05525653436779976, -0.01951821893453598, -0.11627796292304993, -2.6456775665283203, -3.0628037452697754, -0.0046090795658528805, -0.04725432023406029, -1.2501921653747559, -0.738959550857544, -0.009138306602835655, -0.4669382572174072, -0.12257803976535797, -0.06776764988899231, -0.014717815443873405, -2.9126410484313965, -0.6141480207443237, -3.6003165245056152, -0.007737190928310156, -1.0347788333892822, -0.016696829348802567, -0.0255372803658247, -2.351825475692749, -0.02091320976614952, -0.039429958909749985, -1.4045814275741577, -0.32376137375831604, -0.015712974593043327, -0.0002157455455744639, -0.0014263942139223218, -5.054346183896996e-05, -1.2993727978027891e-05, -0.06579048931598663, -0.028505822643637657, -0.12441720068454742, -3.8815743923187256, -0.028663726523518562, -1.5228374004364014, -0.17524218559265137, -1.118550419807434, -0.9594845771789551, -0.2258768528699875, -1.8960509300231934, -1.6308376789093018, -0.0003721021639648825, -0.008825580589473248, -0.0068903458304703236, -0.9771834015846252, -0.09540307521820068, -0.03204576298594475, -0.0006169561529532075, -0.0004907834227196872, -3.3854863431770355e-05, -2.145764938177308e-06, -0.4092020094394684, -0.004495158325880766, -0.032265324145555496, -0.408083975315094, -2.343862533569336, -0.0014455594355240464, -0.1031126007437706, -0.09881757199764252, -0.5688741207122803, -0.275912880897522, -0.34146177768707275, -0.21636882424354553, -0.019595138728618622, -0.0012861560098826885, -0.0014786511892452836, -1.7852532863616943, -1.2538946866989136, -0.14670641720294952, -0.013307915069162846, -0.030347097665071487, -0.11392753571271896, -0.04587865248322487, -0.6111158132553101, -0.43894290924072266, -0.0032645761966705322, -0.17987999320030212, -0.01622942090034485, -0.0019426537910476327, -0.001780830672942102, -1.5736209154129028, -0.00514338631182909, -0.6516833305358887, -3.8595352172851562, -0.9280144572257996, -2.4798340797424316, -0.01856171153485775, -1.1794835329055786, -1.276296615600586, -1.4761453866958618, -0.4360954165458679, -0.731789767742157, -0.23381760716438293, -0.9323402643203735, -0.37000295519828796, -0.31946679949760437, -0.6889581680297852, -0.01703101210296154, -2.6748178005218506, -1.2169913053512573, -2.021871328353882, -0.3271023631095886, -0.30815914273262024, -0.10221658647060394, -0.02832147292792797, -2.735917329788208, -0.02394413948059082, -0.11036236584186554, -5.245071224635467e-05, -0.012026065960526466, -1.2347960472106934, -0.0009957361035048962, -0.004250183701515198, -0.00010942813969450071, -1.8000440832111053e-05, -0.0006995138246566057, -0.3302042484283447, -2.5510462364763953e-05, -8.892617915989831e-05, -0.03750132396817207, -0.05894497036933899, -0.03797909617424011, -0.004407691303640604, -0.0020086844451725483, -0.13451041281223297, -0.006568389479070902, -0.06751050800085068, -0.6920129060745239, -0.10818608105182648, -0.016878176480531693, -0.005885177291929722, -0.0004932855372317135, -0.0012691308511421084, -0.0022254243958741426, -3.2115461826324463, -0.7136978507041931, -0.5510774850845337, -0.003055786481127143, -0.9542834162712097, -0.8611950874328613, -0.010562586598098278, -0.015008974820375443, -1.331618070602417, -0.13308009505271912, -2.5611186027526855, -0.24728184938430786, -1.8708850145339966, -0.01202076580375433, -0.052372124046087265, -0.026355599984526634, -1.497406244277954, -0.16384275257587433, -0.05121529847383499, -0.0368138812482357, -0.0039364006370306015, -0.5164670348167419, -0.00030429501202888787, -0.001992623321712017, -0.003111761063337326, -0.04165874049067497, -0.0011636398267000914, -0.056565411388874054, -0.0037146867252886295, -1.0304690599441528, -0.031162993982434273, -1.2711448669433594, -1.3134515285491943, -0.11400167644023895, -2.219095230102539, -1.1997668743133545, -0.0002586507180240005, -2.8937854766845703, -0.0075920382514595985, -0.00012516192509792745, -2.288792165927589e-05, -0.0649842768907547, -1.0064994096755981, -0.0013172292383387685, -0.001387943746522069, -0.021318571642041206, -0.5573235750198364, -0.0009042703313753009, -1.790238857269287, -0.005240631755441427, -0.24769677221775055, -0.00016258825780823827, -0.7954837679862976, -2.865161418914795, -0.016648292541503906, -0.3121592104434967, -0.0010608765296638012, -0.08133234083652496, -4.279521817807108e-05, -0.25898775458335876, -0.4978220462799072, -0.008996427990496159, -0.007012280635535717, -0.001210552523843944, -0.0015880366554483771, -1.398855447769165, -0.87773197889328, -0.3558652997016907, -0.0118520837277174, -0.011908981949090958, -0.0015286438865587115, -0.010293962433934212, -0.008041860535740852, -0.0023528055753558874, -0.15242262184619904, -0.08260897547006607], "finish_reason": "length"}], "metrics": {"energy": 342.85188800907144, "energy_per_token": 1.3392651875354353, "time": 12.591119, "time_per_token": 0.04918405859375}}
{"outputs": [{"text": "total_files = 0\n\n    for file_name in glob.iglob(directory_path + '**/*.xlsx', recursive=True):\n        try:\n            workbook = load_workbook(filename=file_name)\n        except:\n            print(f'Skipped {file_name}.')\n            continue\n\n        if '.' in file_name[-5:]:\n            print(f'Skipped {file_name}.')\n            continue\n        else:\n            for sheet in workbook:\n                for row in sheet:\n                    for cell in row:\n                        if re.search('\"', cell.value):\n                            cell.value = f'\"{cell.value}\"'\n                        total_files += 1\n        workbook.save(file_name)\n        print(f'Processed {file_name}.')\n    print(f'Done! Total files processed: {total_files}.')\n    return total_files", "tokens": ["total", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "ig", "lob", "(", "directory", "_", "path", " +", " '", "**", "/*", ".", "x", "ls", "x", "'", ",", " recursive", "=", "True", "):", "\n", "        ", "try", ":", "\n", "            ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", "=", "file", "_", "name", ")", "\n", "        ", "except", ":", "\n", "            ", "print", "(", "f", "'", "Sk", "ipped", " {", "file", "_", "name", "}", ".", "')", "\n", "            ", "continue", "\n", "\n", "        ", "if", " '", ".", "'", " in", " file", "_", "name", "[-", "5", ":", "]:", "\n", "            ", "print", "(", "f", "'", "Sk", "ipped", " {", "file", "_", "name", "}", ".", "')", "\n", "            ", "continue", "\n", "        ", "else", ":", "\n", "            ", "for", " sheet", " in", " work", "book", ":", "\n", "                ", "for", " row", " in", " sheet", ":", "\n", "                ", "    ", "for", " cell", " in", " row", ":", "\n", "                ", "        ", "if", " re", ".", "search", "('", "\"", "'", ",", " cell", ".", "value", "):", "\n", "                ", "            ", "cell", ".", "value", " =", " f", "'", "\"", "{", "cell", ".", "value", "}\"", "'", "\n", "                ", "        ", "total", "_", "files", " +=", " ", "1", "\n", "        ", "work", "book", ".", "save", "(", "file", "_", "name", ")", "\n", "        ", "print", "(", "f", "'", "Process", "ed", " {", "file", "_", "name", "}", ".", "')", "\n", "    ", "print", "(", "f", "'", "Done", "!", " Total", " files", " processed", ":", " {", "total", "_", "files", "}", ".", "')", "\n", "    ", "return", " total", "_", "files"], "logprobs": [-4.403902053833008, -0.24539102613925934, -0.5504189729690552, -0.5323687791824341, -0.0731906071305275, -0.0005559567362070084, -0.030155105516314507, -1.5906823873519897, -0.0004768426588270813, -0.3692559003829956, -0.9297885894775391, -0.5064846277236938, -0.9391318559646606, -0.004338139668107033, -0.047654714435338974, -6.031808152329177e-05, -2.3625855445861816, -0.0006272017490118742, -0.026019176468253136, -0.33371835947036743, -7.068861305015162e-05, -1.4662635294371285e-05, -0.051163651049137115, -0.1097545474767685, -1.1701242923736572, -0.05178810656070709, -0.015362974256277084, -0.016442865133285522, -0.00014327930693980306, -0.04276224970817566, -0.023473935201764107, -0.00034338299883529544, -0.007704897318035364, -0.004221932031214237, -0.000770391256082803, -0.0022254243958741426, -0.008534387685358524, -0.02994745969772339, -1.5592550039291382, -0.00019643761334009469, -0.0027812153566628695, -0.003500764025375247, -0.7757382392883301, -0.0007251255447044969, -0.005139828193932772, -0.010567540302872658, -3.933898824470816e-06, -8.34430247778073e-05, -0.0003829461056739092, -0.00046850196667946875, -1.4966247081756592, -0.007761795073747635, -0.005080764647573233, -9.894321920000948e-06, -9.738924563862383e-05, -0.3008587956428528, -0.006331740878522396, -1.6689866781234741, -0.0020205811597406864, -1.1135159730911255, -0.019363658502697945, -0.0030525776091963053, -1.24070143699646, -0.41539466381073, -0.28717681765556335, -0.8497648239135742, -2.2885305881500244, -1.2326281070709229, -1.1297614574432373, -0.07815235108137131, -0.0007294139941222966, -0.0006298227235674858, -0.05846485495567322, -2.002781391143799, -0.8012197613716125, -0.01663023792207241, -0.12311066687107086, -0.03438181430101395, -0.01688743568956852, -0.7997533082962036, -0.000675807474181056, -3.0074615478515625, -2.551420211791992, -3.074143648147583, -1.6217740774154663, -0.6754917502403259, -0.155361145734787, -6.55629628454335e-05, -0.00027807659353129566, -3.1380953788757324, -0.5742616057395935, -0.262997031211853, -0.012147730216383934, -0.084861621260643, -0.007169117219746113, -1.3595529794692993, -0.06668850779533386, -0.02100262977182865, -0.07516150176525116, -0.0639943853020668, -0.0019293281948193908, -0.030749695375561714, -0.0019963113591074944, -5.364403477869928e-06, -4.8874615458771586e-05, -0.006017662119120359, -0.07386656850576401, -0.10372758656740189, -0.004916483070701361, -0.029397424310445786, -0.007870731875300407, -0.0041516548953950405, -2.177100658416748, -1.9496623277664185, -0.000254241080256179, -0.013438361696898937, -0.010372304357588291, -2.306060314178467, -0.18588466942310333, -0.20937290787696838, -0.004773530177772045, -8.77341881277971e-05, -0.62612384557724, -0.0032278599683195353, -0.015022479929029942, -0.7749860286712646, -0.9368634223937988, -0.24264197051525116, -0.11267569661140442, -0.3918333053588867, -0.004778394475579262, -0.006383978761732578, -0.00365922087803483, -0.7448307871818542, -0.4331273138523102, -0.029526252299547195, -0.008462167344987392, -0.004490411374717951, -0.0029415693134069443, -0.009091646410524845, -0.002342339837923646, -1.0081247091293335, -1.419062852859497, -6.663577369181439e-05, -0.2164398729801178, -0.8788785338401794, -0.2618042528629303, -0.09736109524965286, -0.0005159238935448229, -0.21390077471733093, -0.009858726523816586, -0.0019622850231826305, -0.18647603690624237, -0.024957722052931786, -0.003570255357772112, -0.0021935468539595604, -0.4602526128292084, -0.016173705458641052, -0.0036858259700238705, -0.00420816196128726, -1.8635823726654053, -0.1263003796339035, -0.06546439975500107, -0.4740268290042877, -0.08762403577566147, -0.002278472064062953, -0.000773369160015136, -0.0848739966750145, -0.0017282324843108654, -0.024589192122220993, -0.8206775188446045, -1.612001657485962, -0.9347197413444519, -0.00020525732543319464, -0.00038378025055862963, -0.040239740163087845, -0.0070868548937141895, -0.00015054999676067382, -0.001632668194361031, -2.2861316204071045, -0.10309141874313354, -3.433168603805825e-05, -0.0003756771038752049, -0.01420082338154316, -0.0032170468475669622, -0.47359567880630493, -0.0009735850035212934, -0.0001565095444675535, -0.008484862744808197, -0.0035741752944886684, -1.668273687362671, -0.16610248386859894, -0.028059085831046104, -0.04804631695151329, -0.23262688517570496, -0.8647825121879578, -0.010565417818725109, -0.08057508617639542, -0.1862827092409134, -3.755022044060752e-05, -6.961580220377073e-05, -0.02236407808959484, -0.2176835685968399, -0.07043464481830597, -0.0025330858770757914, -1.0982639789581299, -0.5132433772087097, -0.06483379751443863, -0.04105035588145256, -0.16698776185512543, -2.8187808990478516, -1.2875577211380005, -1.6647253036499023, -0.39682528376579285, -0.35361212491989136, -0.016374731436371803, -0.0023970461916178465, -0.0026755272410809994, -1.5020257706055418e-05, -1.8596476365928538e-05, -0.010696222074329853, -0.5081679224967957, -0.008504247292876244, -0.047395192086696625, -0.5531327128410339, -0.05041968822479248, -0.062183279544115067, -0.0006019449210725725, -4.184158387943171e-05], "finish_reason": "stop"}], "metrics": {"energy": 276.81883393383043, "energy_per_token": 1.208815868706683, "time": 11.126168, "time_per_token": 0.048585886462882096}}
{"outputs": [{"text": "count = 0\n    for file_path in glob.glob(directory_path + '*.xlsx'):\n        workbook = load_workbook(filename=file_path, read_only=True)\n        worksheet = workbook.active\n        for row in worksheet.iter_rows():\n            for cell in row:\n                cell.value = cell.value.replace('\"', '\"\"')\n        workbook.save(file_path)\n        count += 1\n    print(f\"Processed {count} Excel files\")\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", "=", "file", "_", "path", ",", " read", "_", "only", "=", "True", ")", "\n", "        ", "works", "heet", " =", " work", "book", ".", "active", "\n", "        ", "for", " row", " in", " works", "heet", ".", "iter", "_", "rows", "():", "\n", "            ", "for", " cell", " in", " row", ":", "\n", "                ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "')", "\n", "        ", "work", "book", ".", "save", "(", "file", "_", "path", ")", "\n", "        ", "count", " +=", " ", "1", "\n", "    ", "print", "(", "f", "\"", "Process", "ed", " {", "count", "}", " Excel", " files", "\"", ")", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -0.1939455270767212, -0.6169039011001587, -1.0094690322875977, -0.7086848020553589, -0.7098255753517151, -0.0023666012566536665, -0.012431279756128788, -7.962863310240209e-05, -0.10791269689798355, -0.011881062760949135, -0.4877992868423462, -6.925819616299123e-05, -7.033323527139146e-06, -0.027068136259913445, -0.11355633288621902, -0.2178851068019867, -0.07789257913827896, -0.008162591606378555, -7.045020902296528e-05, -0.015138847753405571, -0.019551770761609077, -0.0006764031131751835, -0.011953861452639103, -0.008364997804164886, -1.8498984575271606, -0.0011388728162273765, -0.005233516450971365, -0.011867044493556023, -9.536697689327411e-06, -0.00010823617776622996, -0.0006381620769388974, -0.0004897110629826784, -1.2824053764343262, -0.023761974647641182, -0.004150467924773693, -1.5139465176616795e-05, -6.6756979322235566e-06, -1.267592191696167, -0.2934682071208954, -9.536738616588991e-07, -0.001327824778854847, -0.04449744522571564, -0.022231176495552063, -0.11710474640130997, -0.015669789165258408, -0.017215579748153687, -2.7823944091796875, -0.12569375336170197, -0.00912424921989441, -0.010343280620872974, -0.00011812942830147222, -0.04990087449550629, -0.5851359367370605, -0.007081055082380772, -0.06365606933832169, -0.7435776591300964, -0.35129573941230774, -0.07301443070173264, -0.053292661905288696, -2.264974000354414e-06, -0.18169774115085602, -0.22198206186294556, -0.00039939055568538606, -0.003146461443975568, -0.3213810324668884, -0.015334212221205235, -0.0030441395938396454, -0.2483551949262619, -0.08886714279651642, -0.008974453434348106, -0.008549162186682224, -0.0010971962474286556, -0.00502774678170681, -0.001907911617308855, -1.1815483570098877, -0.12397678941488266, -0.0032939244993031025, -0.009630411863327026, -1.938006043434143, -0.0023209319915622473, -0.002535582985728979, -0.056676480919122696, -0.019503138959407806, -0.2086527943611145, -0.03517290577292442, -0.0006001578294672072, -0.0002051381452474743, -0.15497876703739166, -0.13780373334884644, -0.0817020833492279, -0.014839503914117813, -0.05269855260848999, -0.22339309751987457, -0.07212086021900177, -0.00011860620725201443, -0.00033766290289349854, -0.002915301127359271, -0.002479932736605406, -0.49620649218559265, -0.0019999993965029716, -0.004548679105937481, -0.008373628370463848, -0.011668290942907333, -0.013785509392619133, -0.10382311791181564, -0.016099806874990463, -0.0033667569514364004, -2.610649426060263e-05, -0.002494083484634757, -0.18742382526397705, -1.8817172050476074, -0.19419746100902557, -0.49756765365600586, -0.4277883470058441, -1.9646949768066406, -0.009596053510904312, -0.034618597477674484, -0.012420094572007656, -0.0033490543719381094, -0.22861124575138092, -0.016669396311044693, -2.2198328971862793, -0.041344814002513885, -0.019355356693267822, -0.1396322399377823, -0.04713742062449455, -0.007230187766253948, -0.2520240247249603, -0.018207907676696777, -0.5265065431594849], "finish_reason": "stop"}], "metrics": {"energy": 141.71885151481627, "energy_per_token": 1.0497692704801205, "time": 5.8944225, "time_per_token": 0.04366238888888889}}
{"outputs": [{"text": "count = 0\n    for filename in glob.glob(os.path.join(directory_path, '*.xlsx')):\n        wb = load_workbook(filename)\n        sheet = wb.active\n        sheet.cell(row=1, column=1).value = 'This is a \"test\" string.'\n        wb.save(filename)\n        count += 1\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "*", ".", "x", "ls", "x", "'))", ":", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "sheet", " =", " w", "b", ".", "active", "\n", "        ", "sheet", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", " =", " '", "This", " is", " a", " \"", "test", "\"", " string", ".", "'", "\n", "        ", "wb", ".", "save", "(", "filename", ")", "\n", "        ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -0.1939455270767212, -0.6169039011001587, -1.0654973983764648, -0.0046508475206792355, -0.021292665973305702, -5.245071224635467e-05, -0.18004140257835388, -0.016232235357165337, -1.2273105382919312, -2.3007127310847864e-05, -0.0003579214389901608, -0.00148781668394804, -0.007844238542020321, -0.0029719967860728502, -0.009175160899758339, -0.00013350549852475524, -8.22540732769994e-06, -0.008595493622124195, -0.1965065598487854, -0.11294341832399368, -0.054200612008571625, -0.009165002033114433, -0.00012468514614738524, -0.02355346269905567, -0.006934859789907932, -0.0006136203301139176, -0.010505729354918003, -0.008665576577186584, -1.772868037223816, -0.01830318756401539, -0.0207884032279253, -7.867782187531702e-06, -0.0002012050390476361, -1.156323378381785e-05, -0.0004975749761797488, -0.008818254806101322, -0.2677049934864044, -0.0067262426018714905, -0.008854884654283524, -2.103790521621704, -0.012755591422319412, -0.001935396110638976, -1.6689160474925302e-05, -0.0755421444773674, -0.06674125790596008, -0.00403340719640255, -0.02959650382399559, -2.3403286933898926, -1.3468620777130127, -0.317309707403183, -0.0022587282583117485, -0.7415205836296082, -0.011159387417137623, -0.005706092808395624, -0.004332916811108589, -0.004100368358194828, -0.0006584145012311637, -0.002371001522988081, -0.10141336917877197, -0.013461767695844173, -0.00842776894569397, -0.02116580680012703, -0.7161924839019775, -0.601224422454834, -0.020731307566165924, -0.027961483225226402, -0.26048803329467773, -0.03775389865040779, -0.004108085297048092, -0.006330437492579222, -0.026467986404895782, -0.0060407682321965694, -0.031729843467473984, -0.013526806607842445, -0.2509573996067047, -0.0007596705690957606, -0.0037159931380301714, -0.005913144908845425, -0.00687755923718214, -0.022829212248325348, -0.009840075857937336, -0.020968075841665268, -0.11567467451095581, -0.018484828993678093, -0.0040773362852633, -2.5629668016335927e-05, -0.0029673613607883453, -0.18811701238155365, -0.14905795454978943, -0.0066544837318360806, -2.216860294342041, -7.986990567587782e-06, -7.152555099310121e-07, -9.107174992095679e-05, -8.463501580990851e-05, -0.13503317534923553], "finish_reason": "stop"}], "metrics": {"energy": 116.55607420349125, "energy_per_token": 1.1540205366682301, "time": 4.214958, "time_per_token": 0.041732257425742575}}
{"outputs": [{"text": "counter = 0\n    if not os.path.exists(directory_path):\n        return counter\n\n    for filename in glob.glob(directory_path + \"*.xlsx\"):\n        wb = load_workbook(filename)\n        ws = wb.active\n        if ws.cell(row=1, column=1).value is not None:\n            cell = ws.cell(row=1, column=1)\n            ws.cell(row=1, column=1, value=re.sub('\"', r'\\\"', str(cell.value)))\n            wb.save(filename)\n            counter += 1\n        wb.save(filename)\n\n    return counter", "tokens": ["counter", " =", " ", "0", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "return", " counter", "\n", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " \"", "*", ".", "x", "ls", "x", "\"", "):", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "filename", ")", "\n", "        ", "ws", " =", " w", "b", ".", "active", "\n", "        ", "if", " w", "s", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", " is", " not", " None", ":", "\n", "            ", "cell", " =", " w", "s", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", "\n", "            ", "ws", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ",", " value", "=", "re", ".", "sub", "('", "\"", "'", ",", " r", "'\\\"", "'", ",", " str", "(", "cell", ".", "value", ")))", "\n", "            ", "wb", ".", "save", "(", "filename", ")", "\n", "            ", "counter", " +=", " ", "1", "\n", "        ", "wb", ".", "save", "(", "filename", ")", "\n", "\n", "    ", "return", " counter", "\n", "\n", "if"], "logprobs": [-2.6936798095703125, -0.049842920154333115, -0.008180209435522556, -0.0024062031880021095, -0.04033122956752777, -0.1594284623861313, -2.7363038063049316, -0.4445899426937103, -0.20520783960819244, -7.617183291586116e-05, -0.0035810647532343864, -0.006156646180897951, -0.7473465204238892, -0.002172611653804779, -0.004014173056930304, -0.00015805903240107, -1.4066597032069694e-05, -0.053283508867025375, -0.02350863441824913, -0.002985783852636814, -1.4740447998046875, -0.6720316410064697, -0.015556534752249718, -1.1359105110168457, -0.0005225961795076728, -0.4569583535194397, -1.0312864780426025, -0.0071546770632267, -0.0415818989276886, -5.900685573578812e-05, -0.10044402629137039, -0.011470794677734375, -0.47212645411491394, -7.152531907195225e-06, -1.311301275563892e-06, -0.027938995510339737, -2.080742359161377, -0.3352174460887909, -0.04855121672153473, -0.00908573903143406, -0.00011050090688513592, -0.031886547803878784, -0.0027151170652359724, -0.010797882452607155, -0.00952166598290205, -0.012535941787064075, -1.9375107288360596, -0.021251121535897255, -0.035358987748622894, -1.2993727978027891e-05, -0.00016139635408762842, -1.0847986231965479e-05, -0.00040082051418721676, -0.005275139585137367, -0.30067506432533264, -0.009507260285317898, -0.031174317002296448, -1.178156852722168, -0.0057718753814697266, -0.0028190179727971554, -3.290122185717337e-05, -0.07456298172473907, -0.08990802615880966, -0.008547153323888779, -0.15189197659492493, -3.082559585571289, -0.6184931993484497, -0.015883823856711388, -0.362464040517807, -0.44954153895378113, -0.003733214223757386, -0.5444023013114929, -0.011521822772920132, -0.02323053777217865, -0.0027891802601516247, -0.009187445044517517, -0.0011592342052608728, -0.007544832304120064, -0.030705651268363, -0.011477158404886723, -0.009492382407188416, -0.45154184103012085, -0.9214421510696411, -0.0014746040105819702, -0.042858075350522995, -0.04706929996609688, -0.009122004732489586, -2.851780414581299, -0.8483943939208984, -0.04526519402861595, -0.0046292515471577644, -0.07947433739900589, -0.0040901582688093185, -0.0003859252028632909, -0.011277502402663231, -0.0012747265864163637, -0.00380850862711668, -0.00038926175329834223, -0.0004532501916401088, -0.0001512651506345719, -0.0018966082716360688, -0.014703365974128246, -0.011519229970872402, -0.061970751732587814, -3.7604269981384277, -0.16676762700080872, -0.045828212052583694, -0.00027092601521871984, -0.01493428461253643, -0.0026987106539309025, -0.003978315275162458, -0.000393432448618114, -0.0004798214649781585, -0.00027938754647038877, -0.0010380124440416694, -1.9320368766784668, -0.015782678499817848, -0.08689447492361069, -0.5645243525505066, -0.004153554327785969, -0.04974867030978203, -1.3064587116241455, -0.26198744773864746, -0.030246825888752937, -0.00026663561584427953, -2.5681257247924805, -0.4256798028945923, -0.1960711032152176, -0.006357564125210047, -1.731495976448059, -0.0011754278093576431, -0.0030898945406079292, -0.023260122165083885, -0.0013443727511912584, -0.05108130723237991, -0.01758882775902748, -0.179579496383667, -0.3358307480812073, -0.0006725909770466387, -0.003636416047811508, -0.003916214685887098, -0.01293447706848383, -0.046665143221616745, -0.0022809698712080717, -0.09411653131246567, -0.0584707036614418, -0.03549222648143768, -0.006577863823622465, -5.435795901576057e-05, -0.0025175088085234165, -1.1765940189361572, -1.3053146600723267, -0.006331859156489372, -2.7090229988098145, -0.017659805715084076, -0.0022693139035254717, -0.0037759689148515463, -0.016690967604517937, -1.1418893337249756, -0.02481086179614067, -0.044825658202171326, -0.002544144168496132, -0.4794067144393921, -0.01085719931870699, -0.31281307339668274], "finish_reason": "stop"}], "metrics": {"energy": 177.0361363315581, "energy_per_token": 1.0729462807973218, "time": 7.1382246, "time_per_token": 0.04326196727272727}}
{"outputs": [{"text": "# create a list of Excel file names\n    file_list = glob.glob(directory_path + '*.xlsx')\n    counter = 0\n\n    for file_name in file_list:\n        if os.path.isfile(file_name):\n            workbook = load_workbook(file_name)\n            sheet = workbook.active\n            for row_num, row in enumerate(sheet.iter_rows(min_row=1)):\n                cell_value = row[0].value\n                if cell_value is not None:\n                    if re.search('[\"]', cell_value):\n                        row[0].value = cell_value.replace('\"', '\"\"')\n                        workbook.save(file_name)\n                        counter += 1\n\n    print(f'Processed {counter} files.')", "tokens": ["#", " create", " a", " list", " of", " Excel", " file", " names", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", "\n", "    ", "counter", " =", " ", "0", "\n", "\n", "    ", "for", " file", "_", "name", " in", " file", "_", "list", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "name", "):", "\n", "            ", "work", "book", " =", " load", "_", "work", "book", "(", "file", "_", "name", ")", "\n", "            ", "sheet", " =", " work", "book", ".", "active", "\n", "            ", "for", " row", "_", "num", ",", " row", " in", " enumerate", "(", "sheet", ".", "iter", "_", "rows", "(", "min", "_", "row", "=", "1", "))", ":", "\n", "                ", "cell", "_", "value", " =", " row", "[", "0", "]", ".", "value", "\n", "                ", "if", " cell", "_", "value", " is", " not", " None", ":", "\n", "                ", "    ", "if", " re", ".", "search", "('", "[", "\"", "]", "'", ",", " cell", "_", "value", "):", "\n", "                ", "        ", "row", "[", "0", "]", ".", "value", " =", " cell", "_", "value", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "')", "\n", "                ", "        ", "work", "book", ".", "save", "(", "file", "_", "name", ")", "\n", "                ", "        ", "counter", " +=", " ", "1", "\n", "\n", "    ", "print", "(", "f", "'", "Process", "ed", " {", "counter", "}", " files", ".", "')", "\n", "\n", "if"], "logprobs": [-1.8038996458053589, -4.192455768585205, -0.6771222352981567, -1.2249563932418823, -0.20290476083755493, -0.7763984799385071, -1.8949100971221924, -2.6297338008880615, -1.3123669624328613, -0.004233565181493759, -0.904533863067627, -0.012964954599738121, -0.7020190954208374, -0.0041714804247021675, -0.18421027064323425, -8.916457591112703e-05, -0.0026276130229234695, -0.015756160020828247, -0.49997928738594055, -9.524368942948058e-05, -1.2636104656849056e-05, -0.0555732324719429, -0.15441147983074188, -0.3376682698726654, -0.02922748029232025, -0.005937438458204269, -0.00013207517622504383, -0.023034613579511642, -0.007115854416042566, -0.006257702596485615, -0.8825887441635132, -2.9242963790893555, -0.04451032727956772, -0.016386108472943306, -0.004588550888001919, -0.049534160643815994, -0.8924863338470459, -0.0005666795768775046, -0.8140057325363159, -0.29008737206459045, -0.58119136095047, -0.33415746688842773, -0.001581966644152999, -0.001368777477182448, -1.0490362910786644e-05, -9.500529267825186e-05, -0.0006702084210701287, -0.010280629619956017, -0.035573795437812805, -3.1769261360168457, -0.794632613658905, -4.076874756719917e-05, -0.04456916078925133, -0.0015656605828553438, -0.4112483561038971, -0.00952733401209116, -0.0012115051504224539, -0.0032940434757620096, -7.390948667307384e-06, -0.00023112009512260556, -0.09119737893342972, -0.07760316878557205, -0.019305896013975143, -2.49863338470459, -0.0016126735135912895, -0.009564291685819626, -0.00983488280326128, -9.298280929215252e-06, -0.00010644822759786621, -5.364274329622276e-05, -0.0003669780562631786, -0.3934716582298279, -0.00010227633902104571, -0.0003669780562631786, -0.13287857174873352, -0.014201059006154537, -0.049761828035116196, -0.699541449546814, -0.01832694746553898, -0.0016304069431498647, -0.001632430125027895, -0.02248297445476055, -0.05508450046181679, -0.005611263681203127, -0.2864065170288086, -1.0833156108856201, -0.2676781117916107, -2.866959571838379, -0.5888673663139343, -0.9563007354736328, -0.2645399868488312, -0.10365773737430573, -0.034045085310935974, -0.0019516960019245744, -0.001658851164393127, -0.129093199968338, -0.12551702558994293, -0.0036098097916692495, -0.003114613238722086, -1.320171594619751, -0.45327314734458923, -1.1801649634435307e-05, -0.03430544584989548, -0.005300278775393963, -0.837210476398468, -1.686018705368042, -0.0001618731184862554, -0.025611648336052895, -0.006206405349075794, -1.853877305984497, -0.6609211564064026, -1.0239574909210205, -0.013608540408313274, -0.4317198395729065, -0.024217499420046806, -0.019307415932416916, -0.0015022194711491466, -0.007677334360778332, -0.0014728185487911105, -0.04997197538614273, -0.060584116727113724, -0.37500283122062683, -0.38764384388923645, -4.100715523236431e-05, -0.00011586471373448148, -0.5745174884796143, -0.2396298348903656, -0.0002040654799202457, -0.23054692149162292, -0.013676744885742664, -0.0023354417644441128, -0.0014686522772535682, -1.4798301458358765, -0.7603421807289124, -6.747018051100895e-05, -0.13284891843795776, -1.05709969997406, -2.4073076248168945, -0.10992191731929779, -0.8037599325180054, -0.011214438825845718, -0.0003713871701620519, -0.07750807702541351, -5.602820692729438e-06, -6.9141146923357155e-06, -0.11388477683067322, -0.0432281568646431, -0.001827000523917377, -0.002410127781331539, -2.0916194915771484, -0.012974721379578114, -0.0011932880152016878, -0.0012328175362199545, -0.07367721945047379, -0.007074189838021994, -0.0025584129616618156, -2.3813984394073486, -0.0015699454816058278, -0.0001445904199499637, -0.020116126164793968, -0.007298355456441641, -0.05757281184196472, -0.016224494203925133, -0.00017867876158561558, -0.00048232366680167615, -0.1104455292224884, -0.10507126897573471, -0.09193990379571915, -0.021802622824907303, -0.0362430065870285, -0.2919236719608307, -0.2406630516052246, -0.677794337272644, -1.2397689715726301e-05, -0.00025912740966305137, -0.0008124388405121863, -0.0016964580863714218, -0.03771383687853813, -0.0020202244631946087, -0.000256982195423916, -0.006250475998967886, -0.011597003787755966, -0.08206366747617722, -0.060231518000364304, -0.09179798513650894, -0.03133954107761383, -0.004928345326334238, -7.390703103737906e-05, -0.002293695928528905, -0.7288800477981567, -0.04891102388501167, -1.7419246435165405, -0.3207731544971466, -0.40648016333580017, -1.1109081506729126, -1.2312904596328735, -0.013324265368282795, -0.046025414019823074, -0.01799425296485424, -0.01013407576829195, -1.3391058444976807, -0.4356367290019989, -0.01397655438631773, -0.032307568937540054, -1.318687915802002, -1.070380687713623], "finish_reason": "stop"}], "metrics": {"energy": 248.45368590927134, "energy_per_token": 1.2060858539285018, "time": 9.032873, "time_per_token": 0.04384889805825243}}
{"outputs": [{"text": "count = 0\n    file_list = glob.glob(directory_path + '/*.xlsx')\n    for file_path in file_list:\n        with load_workbook(filename=file_path, read_only=True) as workbook:\n            sheet = workbook.active\n            for row in sheet.iter_rows():\n                for cell in row:\n                    if cell.value is not None and isinstance(cell.value, str):\n                        cell.value = cell.value.replace('\"', '\\\"\\\"')\n                        count += 1\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "        ", "with", " load", "_", "work", "book", "(", "filename", "=", "file", "_", "path", ",", " read", "_", "only", "=", "True", ")", " as", " work", "book", ":", "\n", "            ", "sheet", " =", " work", "book", ".", "active", "\n", "            ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "():", "\n", "                ", "for", " cell", " in", " row", ":", "\n", "                ", "    ", "if", " cell", ".", "value", " is", " not", " None", " and", " isinstance", "(", "cell", ".", "value", ",", " str", "):", "\n", "                ", "        ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "('", "\"", "'", ",", " '", "\\\"\\\"", "')", "\n", "                ", "        ", "count", " +=", " ", "1", "\n", "    ", "return", " count", "\n", "\n", "if"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -0.1939455270767212, -3.470158100128174, -0.04956842213869095, -0.9449878931045532, -0.006627720780670643, -0.10393507778644562, -0.0001299296854995191, -0.009226660244166851, -0.014637934044003487, -0.45319685339927673, -8.189342770492658e-05, -1.2516897186287679e-05, -0.05260660499334335, -0.14248406887054443, -1.5703392028808594, -0.06105402112007141, -0.009620494209229946, -6.103329360485077e-05, -0.010700232349336147, -0.014394726604223251, -0.017211830243468285, -0.12778741121292114, -0.21792460978031158, -0.30019980669021606, -0.6606727838516235, -0.4478713870048523, -0.002115394687280059, -0.0031273288186639547, -7.033323527139146e-06, -0.0004818470624741167, -0.0006881968001835048, -0.0035896170884370804, -0.009083377197384834, -2.6036953926086426, -2.7385106086730957, -1.4424220353248529e-05, -0.00010954733443213627, -8.702239938429557e-06, -0.0009657248156145215, -1.9153224229812622, -0.03358018398284912, -0.005710359662771225, -1.490105023549404e-05, -0.00015269544383045286, -1.0558336973190308, -0.4153943359851837, -2.3841855067985307e-07, -0.0005044856225140393, -0.06635691225528717, -0.0168202705681324, -0.10651571303606033, -0.00101062236353755, -0.6421218514442444, -0.0016684910515323281, -0.0045468988828361034, -0.005383280571550131, -0.004686562344431877, -1.149558424949646, -0.05647449567914009, -0.002117179101333022, -0.0012986568035557866, -0.019850876182317734, -0.06979071348905563, -0.011026167310774326, -0.024099158123135567, -0.5613647103309631, -0.2228417694568634, -0.08648095279932022, -0.0971238985657692, -0.1867651641368866, -0.09696973115205765, -0.000964295701123774, -0.0023166504688560963, -0.5079101920127869, -0.01277136243879795, -0.0024172631092369556, -0.6544007062911987, -0.06031322851777077, -0.009921403601765633, -0.009007060900330544, -0.0013254437362775207, -0.006014581304043531, -0.001077190856449306, -0.001177928177639842, -0.8393228054046631, -0.3293587863445282, -0.02383449673652649, -0.028610553592443466, -0.6185187697410583, -0.24126872420310974, -0.00015853578224778175, -1.671895980834961, -0.7776187658309937, -0.0001134808044298552, -0.0017133570509031415, -0.0031925681978464127, -0.0007904027588665485, -0.0006556744920089841, -0.016240563243627548, -0.28550732135772705, -0.014479797333478928, -0.002268719021230936, -0.0021648798137903214, -0.7645288705825806, -0.03548843041062355, -0.000849601230584085, -0.002387413289397955, -1.808349370956421, -0.0004663571889977902, -0.0005015069036744535, -0.002107305685058236, -0.016167841851711273, -0.183872789144516, -0.05447361618280411, -0.00035172473872080445, -0.00010942813969450071, -0.15456387400627136, -2.199908971786499, -0.0006214833119884133, -0.039201077073812485, -0.3195565342903137, -0.2618078291416168, -0.25931084156036377, -0.012452589347958565, -0.005633193533867598, -0.00019631843315437436, -0.0031100972555577755, -0.6233357787132263, -0.3810344636440277, -0.0067842621356248856, -0.20477616786956787, -0.012737583369016647, -0.4320223331451416], "finish_reason": "stop"}], "metrics": {"energy": 145.45995448017118, "energy_per_token": 1.0540576411606608, "time": 5.8845387, "time_per_token": 0.042641584782608696}}
{"outputs": [{"text": "file_count = 0\n    for file_name in glob.glob(directory_path + \"*.xlsx\"):\n        wb = load_workbook(file_name)\n        ws = wb.active\n        if '\"' in ws.cell(row=1, column=1).value:\n            ws.cell(row=1, column=1).value = '\"' + ws.cell(row=1, column=1).value\n            wb.save(file_name)\n            file_count += 1\n    return file_count", "tokens": ["file", "_", "count", " =", " ", "0", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " \"", "*", ".", "x", "ls", "x", "\"", "):", "\n", "        ", "wb", " =", " load", "_", "work", "book", "(", "file", "_", "name", ")", "\n", "        ", "ws", " =", " w", "b", ".", "active", "\n", "        ", "if", " '", "\"", "'", " in", " w", "s", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", ":", "\n", "            ", "ws", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", " =", " '", "\"", "'", " +", " w", "s", ".", "cell", "(", "row", "=", "1", ",", " column", "=", "1", ")", ".", "value", "\n", "            ", "wb", ".", "save", "(", "file", "_", "name", ")", "\n", "            ", "file", "_", "count", " +=", " ", "1", "\n", "    ", "return", " file", "_", "count", "\n", "\n", "if"], "logprobs": [-2.444864273071289, -0.027165941894054413, -0.7656840085983276, -0.013907312415540218, -0.009396611712872982, -0.0005433275364339352, -0.02894645370543003, -0.21100293099880219, -0.5302210450172424, -0.8043950200080872, -0.45750853419303894, -0.7256243824958801, -0.005467698443681002, -0.03229406476020813, -5.924526340095326e-05, -0.08407601714134216, -0.022674696519970894, -0.4038439691066742, -8.737658936297521e-05, -1.3351351299206726e-05, -0.041129641234874725, -2.012083053588867, -0.2672460079193115, -0.06146731600165367, -0.008484980091452599, -0.00013565097469836473, -0.028437115252017975, -0.0026661348529160023, -0.010711554437875748, -0.013742122799158096, -0.013262977823615074, -1.8667927980422974, -0.019095635041594505, -0.022351838648319244, -1.4662635294371285e-05, -0.00015448330668732524, -1.0609570381348021e-05, -0.00037996700848452747, -0.46405667066574097, -4.827859811484814e-05, -0.0005968220066279173, -0.23295927047729492, -0.011680074036121368, -0.01469902042299509, -1.1981524229049683, -0.006333636119961739, -0.0019271865021437407, -4.541770613286644e-05, -0.10452207177877426, -0.1053038090467453, -0.011924766935408115, -0.07280153036117554, -3.2291529178619385, -3.0136547088623047, -0.506401538848877, -0.015347360633313656, -0.049684129655361176, -0.12003223598003387, -0.012388304807245731, -0.6126660108566284, -0.16211803257465363, -0.013851115480065346, -0.9441770315170288, -0.007284864317625761, -0.0363447479903698, -0.011021568439900875, -0.013465295545756817, -0.0017496529035270214, -0.012050565332174301, -0.04360551759600639, -0.0002575780963525176, -0.000834355247206986, -0.026786617934703827, -0.04645862057805061, -0.007130058016628027, -0.4542599320411682, -0.20762835443019867, -0.04361305013298988, -0.00025245340657420456, -0.007512768730521202, -0.002003211760893464, -0.0011745942756533623, -0.0005970602505840361, -0.0006579380133189261, -0.0002335037279408425, -0.0019328974885866046, -0.09974836558103561, -0.004623081535100937, -0.005038540344685316, -0.019079962745308876, -0.606553852558136, -0.3447341024875641, -0.34557124972343445, -0.06501053273677826, -0.0792684257030487, -0.005054196808487177, -0.00018249277491122484, -0.0003073934931308031, -6.878139538457617e-05, -0.003841403406113386, -0.00037579628406092525, -0.0001934579631779343, -8.260862523457035e-05, -0.001932302606292069, -8.916457591112703e-05, -0.000198821333469823, -0.00030048147891648114, -5.113947918289341e-05, -0.00024911639047786593, -0.17973309755325317, -0.40654242038726807, -0.1457909345626831, -0.0007322729215957224, -0.0029238590504974127, -0.004854796454310417, -0.06122604012489319, -0.0006522196927107871, -0.00043501926120370626, -0.011786110699176788, -0.003056499408558011, -0.4338011145591736, -0.20626084506511688, -3.2066785934148356e-05, -0.0015797051601111889, -0.01938154734671116, -0.005863844882696867, -6.544376083184034e-05, -0.0022185256239026785, -0.6663075685501099, -0.2428000122308731, -0.011073797941207886, -9.345571743324399e-05, -0.00010442188795423135, -0.24158026278018951, -0.018120110034942627, -0.45576557517051697], "finish_reason": "stop"}], "metrics": {"energy": 134.0482357597351, "energy_per_token": 0.9856487923509933, "time": 5.687818, "time_per_token": 0.04182219117647059}}
{"outputs": [{"text": "count = 0\n    # Get all Excel files in the directory\n    for filename in glob.glob(directory_path + '*.xlsx'):\n        if not os.path.exists(filename):\n            continue\n        workbook = load_workbook(filename, read_only=True)\n        for sheet in workbook:\n            # Iterate through each cell in the sheet\n            for row in sheet.iter_rows():\n                for cell in row:\n                    if cell.value:\n                        # Check if the cell has double quotes\n                        if re.search(r'\"', cell.value):\n                            # If it does, replace the double quotes with double backslashes\n                            cell.value = cell.value.replace('\"', '\"\"')\n                count += 1\n        workbook.save(filename)\n    return count", "tokens": ["count", " =", " ", "0", "\n", "    ", "#", " Get", " all", " Excel", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "if", " not", " os", ".", "path", ".", "exists", "(", "filename", "):", "\n", "            ", "continue", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", ",", " read", "_", "only", "=", "True", ")", "\n", "        ", "for", " sheet", " in", " work", "book", ":", "\n", "            ", "#", " Iter", "ate", " through", " each", " cell", " in", " the", " sheet", "\n", "            ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "():", "\n", "                ", "for", " cell", " in", " row", ":", "\n", "                ", "    ", "if", " cell", ".", "value", ":", "\n", "                ", "        ", "#", " Check", " if", " the", " cell", " has", " double", " quotes", "\n", "                ", "        ", "if", " re", ".", "search", "(", "r", "'", "\"", "'", ",", " cell", ".", "value", "):", "\n", "                ", "            ", "#", " If", " it", " does", ",", " replace", " the", " double", " quotes", " with", " double", " back", "sl", "ashes", "\n", "                ", "            ", "cell", ".", "value", " =", " cell", ".", "value", ".", "replace", "('", "\"", "'", ",", " '", "\"", "\"", "')", "\n", "                ", "count", " +=", " ", "1", "\n", "        ", "work", "book", ".", "save", "(", "filename", ")", "\n", "    ", "return", " count"], "logprobs": [-2.359548568725586, -0.05160018801689148, -0.004612876567989588, -0.0006100462633185089, -0.03949069604277611, -0.1939455270767212, -3.2042431831359863, -2.9453208446502686, -0.5446580052375793, -0.3499433398246765, -0.16557319462299347, -0.08539436012506485, -0.036359574645757675, -0.9911145567893982, -0.19846610724925995, -0.001998809864744544, -1.3740257024765015, -0.792983889579773, -0.0028246049769222736, -0.014772552996873856, -5.602679812000133e-05, -0.0720754936337471, -0.01896451972424984, -0.5057527422904968, -0.00010859376925509423, -1.2636104656849056e-05, -0.03592013195157051, -0.14301477372646332, -0.17514574527740479, -0.023909222334623337, -0.005264348816126585, -6.747018051100895e-05, -0.026600675657391548, -0.017609326168894768, -0.00126079679466784, -0.003127447795122862, -0.013985605910420418, -3.307962417602539, -1.0086044073104858, -0.35089120268821716, -2.52720492426306e-05, -0.010168415494263172, -0.001741203828714788, -2.1889734268188477, -0.0008996253600344062, -0.009926833212375641, -0.06255076080560684, -0.07661310583353043, -0.0017952292691916227, -0.1737724244594574, -0.06723468750715256, -0.15136872231960297, -2.346169948577881, -0.0009611992281861603, -0.004233683925122023, -0.010589716024696827, -6.198863957251888e-06, -0.00014768941036891192, -0.00027616979787126184, -0.0004524161049630493, -0.0024743436370044947, -1.901938557624817, -0.5817182660102844, -4.768370445162873e-07, -0.0002474478678777814, -0.016957174986600876, -0.03904883936047554, -0.09667637944221497, -0.02256106771528721, -0.030897997319698334, -1.2254382371902466, -0.11305809020996094, -0.05844079330563545, -0.0017203782917931676, -0.0006270825979299843, -0.6350273489952087, -0.0077388472855091095, -0.0027246277313679457, -1.5455079078674316, -1.4781663417816162, -0.00825505144894123, -1.070879578590393, -0.772956371307373, -0.6645037531852722, -0.2516765892505646, -0.040204815566539764, -0.1106729730963707, -0.22844572365283966, -0.00046623803791590035, -0.03617275878787041, -0.22596196830272675, -0.27880069613456726, -0.2862497568130493, -0.4576505124568939, -0.09106319397687912, -0.0003948624071199447, -0.0037646866403520107, -0.06270897388458252, -0.003968222998082638, -0.0012400802224874496, -0.1223873570561409, -0.020396491512656212, -0.0056317709386348724, -0.003362479852512479, -0.0002632986579556018, -0.002293814904987812, -0.001902795396745205, -0.0004944770480506122, -1.4273097515106201, -0.19663915038108826, -0.028528878465294838, -0.04371849074959755, -1.8804235458374023, -0.047710977494716644, -0.003282280405983329, -0.002538080094382167, -0.7230581045150757, -0.7362356781959534, -0.10785812139511108, -0.5602442026138306, -0.31471484899520874, -2.4845614433288574, -1.171188235282898, -0.01419729832559824, -0.37178775668144226, -0.0007894498412497342, -9.738924563862383e-05, -0.14920511841773987, -0.46499961614608765, -2.90866428258596e-05, -0.05785007029771805, -0.33152756094932556, -0.06269095093011856, -0.5101348757743835, -0.09139649569988251, -0.46215683221817017, -0.00018285033002030104, -0.2750599682331085, -0.00023684080224484205, -0.0005484507419168949, -0.06715621799230576, -0.002265507820993662, -0.0018137923907488585, -0.0010091932490468025, -0.28837645053863525, -1.5664312839508057, -1.6649435758590698, -0.24688157439231873, -0.003211937379091978, -1.0283006429672241, -0.7780930399894714, -0.3195708990097046, -0.11571842432022095, -0.01410914771258831, -0.9045002460479736, -0.08410176634788513, -0.03347493335604668, -0.00023541064001619816, -0.05818529054522514, -0.0004574206250254065, -0.00029130507027730346, -0.18547408282756805, -0.009551421739161015, -0.001086598145775497, -0.001364015624858439, -0.5967612862586975, -1.680836794548668e-05, -0.00016640232934150845, -0.0004297763225622475, -0.001057542278431356, -0.06096979230642319, -0.0025069257244467735, -0.0001691436773398891, -0.00011944057769142091, -0.43507859110832214, -0.0967625230550766, -0.123402900993824, -0.07377178966999054, -0.007548736408352852, -0.336289644241333, -2.5871822834014893, -0.00760528864338994, -0.0030137142166495323, -6.270212179515511e-05, -0.007069099694490433, -1.4777220487594604, -0.19765102863311768, -2.634490556374658e-05, -0.00026925752172246575, -0.05500822886824608, -0.0011306566884741187, -0.002086368855088949, -0.00637094909325242, -0.01595187373459339, -0.17970649898052216, -0.25241076946258545, -0.0031424211338162422], "finish_reason": "stop"}], "metrics": {"energy": 235.3132943372725, "energy_per_token": 1.1944837276003681, "time": 8.622945, "time_per_token": 0.04377129441624365}}
{"outputs": [{"text": "if directory_path[-1] == '/':\n        directory_path = directory_path[:-1]\n\n    file_count = 0\n\n    for file in glob.glob(directory_path + '/*.xlsx'):\n        workbook = load_workbook(filename=file)\n        sheet = workbook.active\n        for row in sheet.iter_rows():\n            if len(row) > 1:\n                row_text = [cell.value for cell in row]\n                if isinstance(row_text[0], str):\n                    row_text = re.sub(r'\"', '\"\"', row_text[0])\n                    sheet.cell(row_num=row.row, column_num=1, value=row_text)\n                    workbook.save(filename=file)\n                    file_count += 1\n\n    print('Done.')\n\n    return file_count", "tokens": ["if", " directory", "_", "path", "[-", "1", "]", " ==", " '/", "':", "\n", "        ", "directory", "_", "path", " =", " directory", "_", "path", "[:", "-", "1", "]", "\n", "\n", "    ", "file", "_", "count", " =", " ", "0", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "directory", "_", "path", " +", " '", "/*", ".", "x", "ls", "x", "')", ":", "\n", "        ", "work", "book", " =", " load", "_", "work", "book", "(", "filename", "=", "file", ")", "\n", "        ", "sheet", " =", " work", "book", ".", "active", "\n", "        ", "for", " row", " in", " sheet", ".", "iter", "_", "rows", "():", "\n", "            ", "if", " len", "(", "row", ")", " >", " ", "1", ":", "\n", "                ", "row", "_", "text", " =", " [", "cell", ".", "value", " for", " cell", " in", " row", "]", "\n", "                ", "if", " isinstance", "(", "row", "_", "text", "[", "0", "]", ",", " str", "):", "\n", "                ", "    ", "row", "_", "text", " =", " re", ".", "sub", "(", "r", "'", "\"", "'", ",", " '", "\"", "\"", "'", ",", " row", "_", "text", "[", "0", "])", "\n", "                ", "    ", "sheet", ".", "cell", "(", "row", "_", "num", "=", "row", ".", "row", ",", " column", "_", "num", "=", "1", ",", " value", "=", "row", "_", "text", ")", "\n", "                ", "    ", "work", "book", ".", "save", "(", "filename", "=", "file", ")", "\n", "                ", "    ", "file", "_", "count", " +=", " ", "1", "\n", "\n", "    ", "print", "('", "Done", ".", "')", "\n", "\n", "    ", "return", " file", "_", "count"], "logprobs": [-2.9392833709716797, -2.650721311569214, -0.005337867885828018, -0.00041083001997321844, -0.5023879408836365, -0.011066370643675327, -0.013935526832938194, -1.5461426973342896, -0.3266099989414215, -0.09848447144031525, -0.06882982701063156, -0.004443058744072914, -0.10264678299427032, -0.006478971801698208, -0.001256391522474587, -0.005353993736207485, -0.008070123381912708, -0.00011920218821614981, -9.536738616588991e-07, -0.08244795352220535, -0.009620612487196922, -0.0012747265864163637, -0.0002232540718978271, -0.027300741523504257, -0.8381310701370239, -0.0006316096987575293, -1.7697151899337769, -0.022610366344451904, -1.1170052289962769, -0.0077077364549040794, -0.014385208487510681, -0.0008891443139873445, -0.01617053896188736, -1.1034412384033203, -0.00038556772051379085, -0.23952428996562958, -0.8149691224098206, -1.1626720428466797, -0.02772323600947857, -5.924526340095326e-05, -0.15617021918296814, -0.009094363078474998, -0.21464088559150696, -0.00013267113536130637, -3.814689989667386e-06, -0.03588206321001053, -0.2030143290758133, -0.09330829977989197, -0.057546477764844894, -0.015372248366475105, -0.00010287232726113871, -0.016237279400229454, -0.025947047397494316, -0.0008051729528233409, -0.0073678200133144855, -0.0412980318069458, -1.735347032546997, -0.002033191965892911, -0.008931448683142662, -0.015780096873641014, -1.4424220353248529e-05, -0.00013183678674977273, -0.0007273888913914561, -0.00041976699139922857, -1.3307262659072876, -0.017825521528720856, -0.004976149648427963, -0.28959885239601135, -0.0036988905631005764, -0.0999959409236908, -0.6036263108253479, -0.014633587561547756, -0.0014459164813160896, -0.0014153235824778676, -0.034775882959365845, -0.04906437546014786, -0.003418318461626768, -0.3054375648498535, -0.9642416834831238, -0.2667394280433655, -0.0681888684630394, -0.16185231506824493, -0.3076774477958679, -0.12428024411201477, -0.001311752712354064, -0.002602525521069765, -0.4004327952861786, -0.01396691519767046, -0.006321316584944725, -2.4787352085113525, -1.9214507341384888, -0.00512275006622076, -0.09680624306201935, -0.03683111444115639, -0.5419869422912598, -0.0022958368062973022, -0.5231487154960632, -0.08323319256305695, -0.07179538160562515, -0.002560077467933297, -2.284404754638672, -1.7968146800994873, -1.7952384948730469, -0.028395865112543106, -1.8304589986801147, -0.1423039585351944, -0.005293282680213451, -0.003905765013769269, -0.022666888311505318, -0.0023643416352570057, -0.00017391123401466757, -0.0026761216577142477, -0.3560935854911804, -0.007300721947103739, -0.040073003619909286, -1.4693200588226318, -1.7141523361206055, -0.0004829194222111255, -0.012835975736379623, -0.061283111572265625, -4.1960789531003684e-05, -0.10085245966911316, -0.05237200856208801, -0.0009604846709407866, -0.0004122599493712187, -0.043158967047929764, -0.2486802488565445, -0.013397547416388988, -0.002679807133972645, -0.0009825170272961259, -0.7558339834213257, -0.02273249626159668, -0.02957358956336975, -1.806262493133545, -1.809643030166626, -0.0005071069463156164, -0.1367006152868271, -0.21382685005664825, -0.09449935704469681, -0.8042941689491272, -0.22820332646369934, -0.270000159740448, -0.00018261195509694517, -1.2455155849456787, -0.15551503002643585, -0.0923248678445816, -0.03223796933889389, -0.00034814971149899065, -0.04597532004117966, -0.0043459730222821236, -1.311301275563892e-06, -0.015772471204400063, -0.0004285847535356879, -0.0288386307656765, -0.03267626836895943, -0.04317689314484596, -0.12528136372566223, -0.5288900136947632, -0.4737756848335266, -0.19603465497493744, -0.0007458527106791735, -0.017400814220309258, -3.0427627563476562, -1.3439406156539917, -0.0670972540974617, -0.1255214363336563, -0.08406801521778107, -0.10770346224308014, -0.009949376806616783, -0.01231718622148037, -1.5803323984146118, -0.1138555184006691, -0.0011307757813483477, -0.6381644606590271, -1.4728232622146606, -0.0020191536750644445, -0.02132079005241394, -0.035113055258989334, -0.00031406714697368443, -3.2186455882765586e-06, -0.014581190422177315, -0.001770953880622983, -1.1151624917984009, -0.21370546519756317, -0.1272466778755188, -2.729855441430118e-05, -0.0001267114421352744, -0.0010451575508341193, -0.0018009409541264176, -1.0905017852783203, -0.02486051432788372, -0.008540770038962364, -0.006564007606357336, -0.0023652929812669754, -0.1954927295446396, -0.02287605218589306, -0.10485950857400894, -0.00010871296399272978, -4.875540980719961e-05, -0.011616799980401993, -0.0022539705969393253, -5.352353764465079e-05, -0.0010424185311421752, -0.3823295533657074, -0.05280745401978493, -1.532239556312561, -1.409855604171753, -2.574190139770508, -1.948167085647583, -1.0695769786834717, -0.008683658204972744, -1.868412971496582, -0.035986945033073425, -0.008410155773162842, -0.012743821367621422, -6.318072337307967e-06, -1.1205610462639015e-05], "finish_reason": "stop"}], "metrics": {"energy": 239.0572758140565, "energy_per_token": 1.101646432322841, "time": 9.467386, "time_per_token": 0.0436285069124424}}
