 platform.system() == "Windows"
 output
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() != "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 output.decode("utf-8").split("\n")
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 output.strip()
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() != "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 output
 platform.system() == "Windows"
 platform.system() == "Windows"
 output.decode("utf-8")
 output.decode("utf-8").startswith("CPU")
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() != "Windows"
 output.decode("utf-8").split("\n").__len__() > 2
 output.decode("utf-8").split("\n")
 platform.system() == "Windows"
 platform.system() == "Windows"
 output is not None and "top" in str(output)
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() != "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 platform.system() == "Windows"
 output is not None
 platform.system() != "Windows"
 output.decode("utf-8").startswith("cpu")
